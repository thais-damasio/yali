; ModuleID = 'Project_CodeNet_C++1400/p02763/s276162300.cpp'
source_filename = "Project_CodeNet_C++1400/p02763/s276162300.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%class.anon = type { i8 }
%class.anon.0 = type { i8 }
%class.anon.2 = type { i8 }
%class.anon.4 = type { i8 }
%"class.std::set" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl" = type { %"struct.std::less", %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::less" = type { i8 }
%"struct.std::_Rb_tree_node_base" = type { i32, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%struct.SegTreeLazyProportional = type { i64, %"class.std::function", %"class.std::function", %"class.std::function", %"class.std::function.10", %"class.std::set", %"class.std::set", %"class.std::vector", %"class.std::vector" }
%"class.std::function" = type { %"class.std::_Function_base", void (%"class.std::set"*, %"union.std::_Any_data"*, %"class.std::set"*, %"class.std::set"*)* }
%"class.std::_Function_base" = type { %"union.std::_Any_data", i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* }
%"union.std::_Any_data" = type { %"union.std::_Nocopy_types" }
%"union.std::_Nocopy_types" = type { { i64, i64 } }
%"class.std::function.10" = type { %"class.std::_Function_base", void (%"class.std::set"*, %"union.std::_Any_data"*, %"class.std::set"*, i64*)* }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl" = type { %"class.std::set"*, %"class.std::set"*, %"class.std::set"* }
%"class.std::initializer_list" = type { i8*, i64 }
%"class.std::allocator" = type { i8 }
%"struct.std::_Maybe_unary_or_binary_function" = type { i8 }
%"struct.std::_Maybe_unary_or_binary_function.11" = type { i8 }
%"class.std::allocator.13" = type { i8 }
%"struct.std::_Rb_tree_node" = type <{ %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf", [7 x i8] }>
%"struct.__gnu_cxx::__aligned_membuf" = type { [1 x i8] }
%"class.std::allocator.6" = type { i8 }
%"class.__gnu_cxx::new_allocator.7" = type { i8 }
%"class.__gnu_cxx::new_allocator.14" = type { i8 }
%"struct.std::integral_constant" = type { i8 }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::_Rb_tree_const_iterator" = type { %"struct.std::_Rb_tree_node_base"* }
%"class.std::insert_iterator" = type { %"class.std::set"*, %"struct.std::_Rb_tree_const_iterator" }
%"struct.__gnu_cxx::__ops::_Iter_less_iter" = type { i8 }
%"struct.std::_Rb_tree_iterator" = type { %"struct.std::_Rb_tree_node_base"* }
%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node" = type { %"class.std::_Rb_tree"* }
%"struct.std::pair" = type { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%"struct.std::_Identity" = type { i8 }
%"struct.std::iterator" = type { i8 }
%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node" = type { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"class.std::_Rb_tree"* }

$_ZNSt3setIcSt4lessIcESaIcEEC2Ev = comdat any

$_ZNSt3setIcSt4lessIcESaIcEEC2ERKS3_ = comdat any

$_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_EC2ExSt8functionIFS4_S4_S4_EES8_S8_S6_IFS4_S4_xEES4_S4_ = comdat any

$_ZNSt3setIcSt4lessIcESaIcEED2Ev = comdat any

$_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_xEED2Ev = comdat any

$_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EED2Ev = comdat any

$_ZNSt3setIcSt4lessIcESaIcEEC2ESt16initializer_listIcERKS1_RKS2_ = comdat any

$_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_E3setExS4_ = comdat any

$_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_E5buildEv = comdat any

$_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_E6updateExxS4_ = comdat any

$_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_E5queryExx = comdat any

$_ZNKSt3setIcSt4lessIcESaIcEE4sizeEv = comdat any

$_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_ED2Ev = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEED2Ev = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_M_eraseEPSt13_Rb_tree_nodeIcE = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_M_beginEv = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_Rb_tree_implIS3_Lb1EED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_S_rightEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_S_leftEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE12_M_drop_nodeEPSt13_Rb_tree_nodeIcE = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIcE = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE11_M_put_nodeEPSt13_Rb_tree_nodeIcE = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIcEEE7destroyIcEEvRS2_PT_ = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE21_M_get_Node_allocatorEv = comdat any

$_ZNSt13_Rb_tree_nodeIcE9_M_valptrEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEE7destroyIcEEvPT_ = comdat any

$_ZN9__gnu_cxx16__aligned_membufIcE6_M_ptrEv = comdat any

$_ZN9__gnu_cxx16__aligned_membufIcE7_M_addrEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIcEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEE10deallocateEPS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEED2Ev = comdat any

$_ZNSt14_Function_baseD2Ev = comdat any

$_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EED2Ev = comdat any

$_ZSt8_DestroyIPSt3setIcSt4lessIcESaIcEES4_EvT_S6_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt3setIcSt4lessIcESaIcEESaIS4_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt3setIcSt4lessIcESaIcEESaIS4_EED2Ev = comdat any

$_ZSt8_DestroyIPSt3setIcSt4lessIcESaIcEEEvT_S6_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt3setIcSt4lessIcESaIcEEEEvT_S8_ = comdat any

$_ZSt8_DestroyISt3setIcSt4lessIcESaIcEEEvPT_ = comdat any

$_ZSt11__addressofISt3setIcSt4lessIcESaIcEEEPT_RS5_ = comdat any

$_ZNSt12_Vector_baseISt3setIcSt4lessIcESaIcEESaIS4_EE13_M_deallocateEPS4_m = comdat any

$_ZNSt12_Vector_baseISt3setIcSt4lessIcESaIcEESaIS4_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaISt3setIcSt4lessIcESaIcEEEE10deallocateERS5_PS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt3setIcSt4lessIcESaIcEEE10deallocateEPS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt3setIcSt4lessIcESaIcEEED2Ev = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEEC2Ev = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_Rb_tree_implIS3_Lb1EEC2Ev = comdat any

$_ZNSaISt13_Rb_tree_nodeIcEEC2Ev = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_Rb_tree_implIS3_Lb1EE13_M_initializeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEEC2Ev = comdat any

$_ZNSt14_Function_baseC2Ev = comdat any

$_ZNSt9_Any_data9_M_accessEv = comdat any

$_ZSt7forwardISt3setIcSt4lessIcESaIcEEEOT_RNSt16remove_referenceIS5_E4typeE = comdat any

$_ZNSt3setIcSt4lessIcESaIcEEC2EOS3_ = comdat any

$_ZNKSt9_Any_data9_M_accessEv = comdat any

$_ZSt9set_unionISt23_Rb_tree_const_iteratorIcES1_St15insert_iteratorISt3setIcSt4lessIcESaIcEEEET1_T_SA_T0_SB_S9_ = comdat any

$_ZNKSt3setIcSt4lessIcESaIcEE5beginEv = comdat any

$_ZNKSt3setIcSt4lessIcESaIcEE3endEv = comdat any

$_ZSt8inserterISt3setIcSt4lessIcESaIcEESt23_Rb_tree_const_iteratorIcEESt15insert_iteratorIT_ERS8_T0_ = comdat any

$_ZSt3endISt3setIcSt4lessIcESaIcEEEDTcldtfp_3endEERT_ = comdat any

$_ZSt11__set_unionISt23_Rb_tree_const_iteratorIcES1_St15insert_iteratorISt3setIcSt4lessIcESaIcEEEN9__gnu_cxx5__ops15_Iter_less_iterEET1_T_SD_T0_SE_SC_T2_ = comdat any

$_ZN9__gnu_cxx5__ops16__iter_less_iterEv = comdat any

$_ZNKSt23_Rb_tree_const_iteratorIcEneERKS0_ = comdat any

$_ZNK9__gnu_cxx5__ops15_Iter_less_iterclISt23_Rb_tree_const_iteratorIcES4_EEbT_T0_ = comdat any

$_ZNKSt23_Rb_tree_const_iteratorIcEdeEv = comdat any

$_ZNSt15insert_iteratorISt3setIcSt4lessIcESaIcEEEdeEv = comdat any

$_ZNSt15insert_iteratorISt3setIcSt4lessIcESaIcEEEaSERKc = comdat any

$_ZNSt23_Rb_tree_const_iteratorIcEppEv = comdat any

$_ZNSt15insert_iteratorISt3setIcSt4lessIcESaIcEEEppEv = comdat any

$_ZSt4copyISt23_Rb_tree_const_iteratorIcESt15insert_iteratorISt3setIcSt4lessIcESaIcEEEET0_T_SA_S9_ = comdat any

$_ZNKSt13_Rb_tree_nodeIcE9_M_valptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufIcE6_M_ptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufIcE7_M_addrEv = comdat any

$_ZNSt3setIcSt4lessIcESaIcEE6insertESt23_Rb_tree_const_iteratorIcERKc = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE17_M_insert_unique_IRKcEESt17_Rb_tree_iteratorIcESt23_Rb_tree_const_iteratorIcEOT_ = comdat any

$_ZNSt23_Rb_tree_const_iteratorIcEC2ERKSt17_Rb_tree_iteratorIcE = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE11_Alloc_nodeC2ERS5_ = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE17_M_insert_unique_IRKcNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIcESt23_Rb_tree_const_iteratorIcEOT_RT0_ = comdat any

$_ZSt7forwardIRKcEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIcERKc = comdat any

$_ZNKSt9_IdentityIcEclERKc = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE10_M_insert_IRKcNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIcEPSt18_Rb_tree_node_baseSD_OT_RT0_ = comdat any

$_ZNSt17_Rb_tree_iteratorIcEC2EPSt18_Rb_tree_node_base = comdat any

$_ZNKSt23_Rb_tree_const_iteratorIcE13_M_const_castEv = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE6_M_endEv = comdat any

$_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE4sizeEv = comdat any

$_ZNKSt4lessIcEclERKcS2_ = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE6_S_keyEPKSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE12_M_rightmostEv = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_ = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE24_M_get_insert_unique_posERKc = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE11_M_leftmostEv = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_ = comdat any

$_ZNSt17_Rb_tree_iteratorIcEmmEv = comdat any

$_ZNSt17_Rb_tree_iteratorIcEppEv = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_ = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_S_valueEPKSt18_Rb_tree_node_base = comdat any

$_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE6_S_keyEPKSt13_Rb_tree_nodeIcE = comdat any

$_ZNKSt17_Rb_tree_iteratorIcEeqERKS0_ = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE5beginEv = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIcES7_vEEOT_OT0_ = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_S_valueEPKSt13_Rb_tree_nodeIcE = comdat any

$_ZSt7forwardIRPSt13_Rb_tree_nodeIcEEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE11_Alloc_nodeclIRKcEEPSt13_Rb_tree_nodeIcEOT_ = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE14_M_create_nodeIJRKcEEEPSt13_Rb_tree_nodeIcEDpOT_ = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE11_M_get_nodeEv = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE17_M_construct_nodeIJRKcEEEvPSt13_Rb_tree_nodeIcEDpOT_ = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIcEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIcEEE9constructIcJRKcEEEvRS2_PT_DpOT0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEE9constructIcJRKcEEEvPT_DpOT0_ = comdat any

$_ZSt14__copy_move_a2ILb0ESt23_Rb_tree_const_iteratorIcESt15insert_iteratorISt3setIcSt4lessIcESaIcEEEET1_T0_SA_S9_ = comdat any

$_ZSt12__miter_baseISt23_Rb_tree_const_iteratorIcEENSt11_Miter_baseIT_E13iterator_typeES3_ = comdat any

$_ZSt13__copy_move_aILb0ESt23_Rb_tree_const_iteratorIcESt15insert_iteratorISt3setIcSt4lessIcESaIcEEEET1_T0_SA_S9_ = comdat any

$_ZSt12__niter_baseISt23_Rb_tree_const_iteratorIcEENSt11_Niter_baseIT_E13iterator_typeES3_ = comdat any

$_ZSt12__niter_baseISt15insert_iteratorISt3setIcSt4lessIcESaIcEEEENSt11_Niter_baseIT_E13iterator_typeES8_ = comdat any

$_ZNSt11__copy_moveILb0ELb0ESt26bidirectional_iterator_tagE8__copy_mISt23_Rb_tree_const_iteratorIcESt15insert_iteratorISt3setIcSt4lessIcESaIcEEEEET0_T_SD_SC_ = comdat any

$_ZNSt10_Iter_baseISt23_Rb_tree_const_iteratorIcELb0EE7_S_baseES1_ = comdat any

$_ZNSt10_Iter_baseISt15insert_iteratorISt3setIcSt4lessIcESaIcEEELb0EE7_S_baseES6_ = comdat any

$_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE5beginEv = comdat any

$_ZNSt23_Rb_tree_const_iteratorIcEC2EPKSt18_Rb_tree_node_base = comdat any

$_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE3endEv = comdat any

$_ZNSt15insert_iteratorISt3setIcSt4lessIcESaIcEEEC2ERS4_St23_Rb_tree_const_iteratorIcE = comdat any

$_ZSt4moveIRSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEEEONSt16remove_referenceIT_E4typeEOS9_ = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEEC2EOS5_ = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_Rb_tree_implIS3_Lb1EEC2ERKS3_RKSaISt13_Rb_tree_nodeIcEE = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_M_rootEv = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE12_M_move_dataERS5_St17integral_constantIbLb1EE = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEEC2ERKS3_ = comdat any

$_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v = comdat any

$_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEEC2ERKS5_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaISt13_Rb_tree_nodeIcEEE17_S_select_on_copyERKS3_ = comdat any

$_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE21_M_get_Node_allocatorEv = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_Rb_tree_implIS3_Lb1EEC2ERKS3_OSaISt13_Rb_tree_nodeIcEE = comdat any

$_ZNSaISt13_Rb_tree_nodeIcEED2Ev = comdat any

$_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_M_rootEv = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_M_copyEPKSt13_Rb_tree_nodeIcEPS7_ = comdat any

$_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_M_beginEv = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE10_S_minimumEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE10_S_maximumEPSt18_Rb_tree_node_base = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIcEEE37select_on_container_copy_constructionERKS2_ = comdat any

$_ZNSaISt13_Rb_tree_nodeIcEEC2ERKS1_ = comdat any

$_ZSt4moveIRSaISt13_Rb_tree_nodeIcEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_M_copyINS5_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIcEPKS9_SA_RT_ = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_M_clone_nodeINS5_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIcEPKS9_RT_ = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_S_rightEPKSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_S_leftEPKSt18_Rb_tree_node_base = comdat any

$_ZNSt18_Rb_tree_node_base10_S_minimumEPS_ = comdat any

$_ZNSt18_Rb_tree_node_base10_S_maximumEPS_ = comdat any

$_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EEC2ERKS6_ = comdat any

$_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_xEEC2ERKS6_ = comdat any

$_ZNSaISt3setIcSt4lessIcESaIcEEEC2Ev = comdat any

$_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EEC2EmRKS4_RKS5_ = comdat any

$_ZNSaISt3setIcSt4lessIcESaIcEEED2Ev = comdat any

$_ZNKSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EEcvbEv = comdat any

$_ZNKSt14_Function_base8_M_emptyEv = comdat any

$_ZNKSt8functionIFSt3setIcSt4lessIcESaIcEES4_xEEcvbEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt3setIcSt4lessIcESaIcEEEC2Ev = comdat any

$_ZNSt12_Vector_baseISt3setIcSt4lessIcESaIcEESaIS4_EEC2EmRKS5_ = comdat any

$_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EE18_M_fill_initializeEmRKS4_ = comdat any

$_ZNSt12_Vector_baseISt3setIcSt4lessIcESaIcEESaIS4_EE12_Vector_implC2ERKS5_ = comdat any

$_ZNSt12_Vector_baseISt3setIcSt4lessIcESaIcEESaIS4_EE17_M_create_storageEm = comdat any

$_ZNSaISt3setIcSt4lessIcESaIcEEEC2ERKS4_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt3setIcSt4lessIcESaIcEEEC2ERKS6_ = comdat any

$_ZNSt12_Vector_baseISt3setIcSt4lessIcESaIcEESaIS4_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaISt3setIcSt4lessIcESaIcEEEE8allocateERS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt3setIcSt4lessIcESaIcEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt3setIcSt4lessIcESaIcEEE8max_sizeEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPSt3setIcSt4lessIcESaIcEEmS4_S4_ET_S6_T0_RKT1_RSaIT2_E = comdat any

$_ZSt20uninitialized_fill_nIPSt3setIcSt4lessIcESaIcEEmS4_ET_S6_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt3setIcSt4lessIcESaIcEEmS6_EET_S8_T0_RKT1_ = comdat any

$_ZSt10_ConstructISt3setIcSt4lessIcESaIcEEJRKS4_EEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKSt3setIcSt4lessIcESaIcEEEOT_RNSt16remove_referenceIS7_E4typeE = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEEC2ERKS3_RKS4_ = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE16_M_insert_uniqueIPKcEEvT_S9_ = comdat any

$_ZNKSt16initializer_listIcE5beginEv = comdat any

$_ZNKSt16initializer_listIcE3endEv = comdat any

$_ZNSaISt13_Rb_tree_nodeIcEEC2IcEERKSaIT_E = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE3endEv = comdat any

$_ZNKSt16initializer_listIcE4sizeEv = comdat any

$_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EEixEm = comdat any

$_ZNSt3setIcSt4lessIcESaIcEEaSERKS3_ = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEEaSERKS5_ = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE20_Reuse_or_alloc_nodeC2ERS5_ = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_Rb_tree_implIS3_Lb1EE8_M_resetEv = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_M_copyINS5_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIcEPKS9_SA_RT_ = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE20_Reuse_or_alloc_nodeD2Ev = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_M_clone_nodeINS5_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIcEPKS9_RT_ = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE20_Reuse_or_alloc_nodeclIRKcEEPSt13_Rb_tree_nodeIcEOT_ = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE20_Reuse_or_alloc_node10_M_extractEv = comdat any

$_ZNKSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EEclES4_S4_ = comdat any

$_ZNSt3setIcSt4lessIcESaIcEEaSEOS3_ = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEEaSEOS5_ = comdat any

$_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE5clearEv = comdat any

$_ZSt15__alloc_on_moveISaISt13_Rb_tree_nodeIcEEEvRT_S4_ = comdat any

$_ZSt18__do_alloc_on_moveISaISt13_Rb_tree_nodeIcEEEvRT_S4_St17integral_constantIbLb1EE = comdat any

$_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_E6updateExxS4_xxx = comdat any

$_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_E4evalExx = comdat any

$_ZSteqIcSt4lessIcESaIcEEbRKSt3setIT_T0_T1_ES9_ = comdat any

$_ZNKSt8functionIFSt3setIcSt4lessIcESaIcEES4_xEEclES4_x = comdat any

$_ZSteqIccSt9_IdentityIcESt4lessIcESaIcEEbRKSt8_Rb_treeIT_T0_T1_T2_T3_ESD_ = comdat any

$_ZSt5equalISt23_Rb_tree_const_iteratorIcES1_EbT_S2_T0_ = comdat any

$_ZSt11__equal_auxISt23_Rb_tree_const_iteratorIcES1_EbT_S2_T0_ = comdat any

$_ZNSt7__equalILb0EE5equalISt23_Rb_tree_const_iteratorIcES3_EEbT_S4_T0_ = comdat any

$_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_E9query_subExxxxx = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@_ZTVN10__cxxabiv117__class_type_infoE = external global i8*
@"_ZTSZ4mainE3$_0" = internal constant [12 x i8] c"Z4mainE3$_0\00"
@"_ZTIZ4mainE3$_0" = internal constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"_ZTSZ4mainE3$_0", i32 0, i32 0) }
@"_ZTSZ4mainE3$_1" = internal constant [12 x i8] c"Z4mainE3$_1\00"
@"_ZTIZ4mainE3$_1" = internal constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"_ZTSZ4mainE3$_1", i32 0, i32 0) }
@"_ZTSZ4mainE3$_2" = internal constant [12 x i8] c"Z4mainE3$_2\00"
@"_ZTIZ4mainE3$_2" = internal constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"_ZTSZ4mainE3$_2", i32 0, i32 0) }
@"_ZTSZ4mainE3$_3" = internal constant [12 x i8] c"Z4mainE3$_3\00"
@"_ZTIZ4mainE3$_3" = internal constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @"_ZTSZ4mainE3$_3", i32 0, i32 0) }
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s276162300.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0
@x.147 = common global i32 0
@y.148 = common global i32 0
@x.149 = common global i32 0
@y.150 = common global i32 0
@x.151 = common global i32 0
@y.152 = common global i32 0
@x.153 = common global i32 0
@y.154 = common global i32 0
@x.155 = common global i32 0
@y.156 = common global i32 0
@x.157 = common global i32 0
@y.158 = common global i32 0
@x.159 = common global i32 0
@y.160 = common global i32 0
@x.161 = common global i32 0
@y.162 = common global i32 0
@x.163 = common global i32 0
@y.164 = common global i32 0
@x.165 = common global i32 0
@y.166 = common global i32 0
@x.167 = common global i32 0
@y.168 = common global i32 0
@x.169 = common global i32 0
@y.170 = common global i32 0
@x.171 = common global i32 0
@y.172 = common global i32 0
@x.173 = common global i32 0
@y.174 = common global i32 0
@x.175 = common global i32 0
@y.176 = common global i32 0
@x.177 = common global i32 0
@y.178 = common global i32 0
@x.179 = common global i32 0
@y.180 = common global i32 0
@x.181 = common global i32 0
@y.182 = common global i32 0
@x.183 = common global i32 0
@y.184 = common global i32 0
@x.185 = common global i32 0
@y.186 = common global i32 0
@x.187 = common global i32 0
@y.188 = common global i32 0
@x.189 = common global i32 0
@y.190 = common global i32 0
@x.191 = common global i32 0
@y.192 = common global i32 0
@x.193 = common global i32 0
@y.194 = common global i32 0
@x.195 = common global i32 0
@y.196 = common global i32 0
@x.197 = common global i32 0
@y.198 = common global i32 0
@x.199 = common global i32 0
@y.200 = common global i32 0
@x.201 = common global i32 0
@y.202 = common global i32 0
@x.203 = common global i32 0
@y.204 = common global i32 0
@x.205 = common global i32 0
@y.206 = common global i32 0
@x.207 = common global i32 0
@y.208 = common global i32 0
@x.209 = common global i32 0
@y.210 = common global i32 0
@x.211 = common global i32 0
@y.212 = common global i32 0
@x.213 = common global i32 0
@y.214 = common global i32 0
@x.215 = common global i32 0
@y.216 = common global i32 0
@x.217 = common global i32 0
@y.218 = common global i32 0
@x.219 = common global i32 0
@y.220 = common global i32 0
@x.221 = common global i32 0
@y.222 = common global i32 0
@x.223 = common global i32 0
@y.224 = common global i32 0
@x.225 = common global i32 0
@y.226 = common global i32 0
@x.227 = common global i32 0
@y.228 = common global i32 0
@x.229 = common global i32 0
@y.230 = common global i32 0
@x.231 = common global i32 0
@y.232 = common global i32 0
@x.233 = common global i32 0
@y.234 = common global i32 0
@x.235 = common global i32 0
@y.236 = common global i32 0
@x.237 = common global i32 0
@y.238 = common global i32 0
@x.239 = common global i32 0
@y.240 = common global i32 0
@x.241 = common global i32 0
@y.242 = common global i32 0
@x.243 = common global i32 0
@y.244 = common global i32 0
@x.245 = common global i32 0
@y.246 = common global i32 0
@x.247 = common global i32 0
@y.248 = common global i32 0
@x.249 = common global i32 0
@y.250 = common global i32 0
@x.251 = common global i32 0
@y.252 = common global i32 0
@x.253 = common global i32 0
@y.254 = common global i32 0
@x.255 = common global i32 0
@y.256 = common global i32 0
@x.257 = common global i32 0
@y.258 = common global i32 0
@x.259 = common global i32 0
@y.260 = common global i32 0
@x.261 = common global i32 0
@y.262 = common global i32 0
@x.263 = common global i32 0
@y.264 = common global i32 0
@x.265 = common global i32 0
@y.266 = common global i32 0
@x.267 = common global i32 0
@y.268 = common global i32 0
@x.269 = common global i32 0
@y.270 = common global i32 0
@x.271 = common global i32 0
@y.272 = common global i32 0
@x.273 = common global i32 0
@y.274 = common global i32 0
@x.275 = common global i32 0
@y.276 = common global i32 0
@x.277 = common global i32 0
@y.278 = common global i32 0
@x.279 = common global i32 0
@y.280 = common global i32 0
@x.281 = common global i32 0
@y.282 = common global i32 0
@x.283 = common global i32 0
@y.284 = common global i32 0
@x.285 = common global i32 0
@y.286 = common global i32 0
@x.287 = common global i32 0
@y.288 = common global i32 0
@x.289 = common global i32 0
@y.290 = common global i32 0
@x.291 = common global i32 0
@y.292 = common global i32 0
@x.293 = common global i32 0
@y.294 = common global i32 0
@x.295 = common global i32 0
@y.296 = common global i32 0
@x.297 = common global i32 0
@y.298 = common global i32 0
@x.299 = common global i32 0
@y.300 = common global i32 0
@x.301 = common global i32 0
@y.302 = common global i32 0
@x.303 = common global i32 0
@y.304 = common global i32 0
@x.305 = common global i32 0
@y.306 = common global i32 0
@x.307 = common global i32 0
@y.308 = common global i32 0
@x.309 = common global i32 0
@y.310 = common global i32 0
@x.311 = common global i32 0
@y.312 = common global i32 0
@x.313 = common global i32 0
@y.314 = common global i32 0
@x.315 = common global i32 0
@y.316 = common global i32 0
@x.317 = common global i32 0
@y.318 = common global i32 0
@x.319 = common global i32 0
@y.320 = common global i32 0
@x.321 = common global i32 0
@y.322 = common global i32 0
@x.323 = common global i32 0
@y.324 = common global i32 0
@x.325 = common global i32 0
@y.326 = common global i32 0
@x.327 = common global i32 0
@y.328 = common global i32 0
@x.329 = common global i32 0
@y.330 = common global i32 0
@x.331 = common global i32 0
@y.332 = common global i32 0
@x.333 = common global i32 0
@y.334 = common global i32 0
@x.335 = common global i32 0
@y.336 = common global i32 0
@x.337 = common global i32 0
@y.338 = common global i32 0
@x.339 = common global i32 0
@y.340 = common global i32 0
@x.341 = common global i32 0
@y.342 = common global i32 0
@x.343 = common global i32 0
@y.344 = common global i32 0
@x.345 = common global i32 0
@y.346 = common global i32 0
@x.347 = common global i32 0
@y.348 = common global i32 0
@x.349 = common global i32 0
@y.350 = common global i32 0
@x.351 = common global i32 0
@y.352 = common global i32 0
@x.353 = common global i32 0
@y.354 = common global i32 0
@x.355 = common global i32 0
@y.356 = common global i32 0
@x.357 = common global i32 0
@y.358 = common global i32 0
@x.359 = common global i32 0
@y.360 = common global i32 0
@x.361 = common global i32 0
@y.362 = common global i32 0
@x.363 = common global i32 0
@y.364 = common global i32 0
@x.365 = common global i32 0
@y.366 = common global i32 0
@x.367 = common global i32 0
@y.368 = common global i32 0
@x.369 = common global i32 0
@y.370 = common global i32 0
@x.371 = common global i32 0
@y.372 = common global i32 0
@x.373 = common global i32 0
@y.374 = common global i32 0
@x.375 = common global i32 0
@y.376 = common global i32 0
@x.377 = common global i32 0
@y.378 = common global i32 0
@x.379 = common global i32 0
@y.380 = common global i32 0
@x.381 = common global i32 0
@y.382 = common global i32 0
@x.383 = common global i32 0
@y.384 = common global i32 0
@x.385 = common global i32 0
@y.386 = common global i32 0
@x.387 = common global i32 0
@y.388 = common global i32 0
@x.389 = common global i32 0
@y.390 = common global i32 0
@x.391 = common global i32 0
@y.392 = common global i32 0
@x.393 = common global i32 0
@y.394 = common global i32 0
@x.395 = common global i32 0
@y.396 = common global i32 0
@x.397 = common global i32 0
@y.398 = common global i32 0
@x.399 = common global i32 0
@y.400 = common global i32 0
@x.401 = common global i32 0
@y.402 = common global i32 0
@x.403 = common global i32 0
@y.404 = common global i32 0
@x.405 = common global i32 0
@y.406 = common global i32 0
@x.407 = common global i32 0
@y.408 = common global i32 0
@x.409 = common global i32 0
@y.410 = common global i32 0
@x.411 = common global i32 0
@y.412 = common global i32 0
@x.413 = common global i32 0
@y.414 = common global i32 0
@x.415 = common global i32 0
@y.416 = common global i32 0
@x.417 = common global i32 0
@y.418 = common global i32 0
@x.419 = common global i32 0
@y.420 = common global i32 0
@x.421 = common global i32 0
@y.422 = common global i32 0
@x.423 = common global i32 0
@y.424 = common global i32 0
@x.425 = common global i32 0
@y.426 = common global i32 0
@x.427 = common global i32 0
@y.428 = common global i32 0
@x.429 = common global i32 0
@y.430 = common global i32 0
@x.431 = common global i32 0
@y.432 = common global i32 0
@x.433 = common global i32 0
@y.434 = common global i32 0
@x.435 = common global i32 0
@y.436 = common global i32 0
@x.437 = common global i32 0
@y.438 = common global i32 0
@x.439 = common global i32 0
@y.440 = common global i32 0
@x.441 = common global i32 0
@y.442 = common global i32 0
@x.443 = common global i32 0
@y.444 = common global i32 0
@x.445 = common global i32 0
@y.446 = common global i32 0
@x.447 = common global i32 0
@y.448 = common global i32 0
@x.449 = common global i32 0
@y.450 = common global i32 0
@x.451 = common global i32 0
@y.452 = common global i32 0
@x.453 = common global i32 0
@y.454 = common global i32 0
@x.455 = common global i32 0
@y.456 = common global i32 0
@x.457 = common global i32 0
@y.458 = common global i32 0
@x.459 = common global i32 0
@y.460 = common global i32 0
@x.461 = common global i32 0
@y.462 = common global i32 0
@x.463 = common global i32 0
@y.464 = common global i32 0
@x.465 = common global i32 0
@y.466 = common global i32 0
@x.467 = common global i32 0
@y.468 = common global i32 0
@x.469 = common global i32 0
@y.470 = common global i32 0
@x.471 = common global i32 0
@y.472 = common global i32 0
@x.473 = common global i32 0
@y.474 = common global i32 0
@x.475 = common global i32 0
@y.476 = common global i32 0
@x.477 = common global i32 0
@y.478 = common global i32 0
@x.479 = common global i32 0
@y.480 = common global i32 0
@x.481 = common global i32 0
@y.482 = common global i32 0
@x.483 = common global i32 0
@y.484 = common global i32 0
@x.485 = common global i32 0
@y.486 = common global i32 0
@x.487 = common global i32 0
@y.488 = common global i32 0
@x.489 = common global i32 0
@y.490 = common global i32 0
@x.491 = common global i32 0
@y.492 = common global i32 0
@x.493 = common global i32 0
@y.494 = common global i32 0
@x.495 = common global i32 0
@y.496 = common global i32 0
@x.497 = common global i32 0
@y.498 = common global i32 0
@x.499 = common global i32 0
@y.500 = common global i32 0
@x.501 = common global i32 0
@y.502 = common global i32 0
@x.503 = common global i32 0
@y.504 = common global i32 0
@x.505 = common global i32 0
@y.506 = common global i32 0
@x.507 = common global i32 0
@y.508 = common global i32 0
@x.509 = common global i32 0
@y.510 = common global i32 0
@x.511 = common global i32 0
@y.512 = common global i32 0
@x.513 = common global i32 0
@y.514 = common global i32 0
@x.515 = common global i32 0
@y.516 = common global i32 0
@x.517 = common global i32 0
@y.518 = common global i32 0
@x.519 = common global i32 0
@y.520 = common global i32 0
@x.521 = common global i32 0
@y.522 = common global i32 0
@x.523 = common global i32 0
@y.524 = common global i32 0
@x.525 = common global i32 0
@y.526 = common global i32 0
@x.527 = common global i32 0
@y.528 = common global i32 0
@x.529 = common global i32 0
@y.530 = common global i32 0
@x.531 = common global i32 0
@y.532 = common global i32 0
@x.533 = common global i32 0
@y.534 = common global i32 0
@x.535 = common global i32 0
@y.536 = common global i32 0
@x.537 = common global i32 0
@y.538 = common global i32 0
@x.539 = common global i32 0
@y.540 = common global i32 0
@x.541 = common global i32 0
@y.542 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() #4 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i32, align 4
  %2 = alloca i64, align 8
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = alloca i8*
  %5 = alloca i32
  %6 = alloca %class.anon, align 1
  %7 = alloca %class.anon.0, align 1
  %8 = alloca %class.anon.2, align 1
  %9 = alloca %class.anon.4, align 1
  %10 = alloca %"class.std::set", align 8
  %11 = alloca %"class.std::set", align 8
  %12 = alloca %struct.SegTreeLazyProportional, align 8
  %13 = alloca %"class.std::function", align 8
  %14 = alloca %class.anon, align 1
  %15 = alloca %"class.std::function", align 8
  %16 = alloca %class.anon.0, align 1
  %17 = alloca %"class.std::function", align 8
  %18 = alloca %class.anon.2, align 1
  %19 = alloca %"class.std::function.10", align 8
  %20 = alloca %class.anon.4, align 1
  %21 = alloca %"class.std::set", align 8
  %22 = alloca %"class.std::set", align 8
  %23 = alloca i64, align 8
  %24 = alloca %"class.std::set", align 8
  %25 = alloca %"class.std::initializer_list", align 8
  %26 = alloca [1 x i8], align 1
  %27 = alloca %"struct.std::less", align 1
  %28 = alloca %"class.std::allocator", align 1
  %29 = alloca %"class.std::set", align 8
  %30 = alloca i64, align 8
  %31 = alloca i64, align 8
  %32 = alloca i64, align 8
  %33 = alloca i64, align 8
  %34 = alloca i8, align 1
  %35 = alloca %"class.std::set", align 8
  %36 = alloca %"class.std::initializer_list", align 8
  %37 = alloca [1 x i8], align 1
  %38 = alloca %"struct.std::less", align 1
  %39 = alloca %"class.std::allocator", align 1
  %40 = alloca %"class.std::set", align 8
  %41 = alloca i64, align 8
  %42 = alloca i64, align 8
  %43 = alloca %"class.std::set", align 8
  store i32 0, i32* %1, align 4
  %44 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8
  %45 = getelementptr i8, i8* %44, i64 -24
  %46 = bitcast i8* %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %47
  %49 = bitcast i8* %48 to %"class.std::basic_ios"*
  %50 = call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %49, %"class.std::basic_ostream"* null)
  %51 = call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_string"* %3) #3
  %52 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) %2)
          to label %53 unwind label %227

; <label>:53:                                     ; preds = %0
  %54 = load i32, i32* @x.1
  %55 = load i32, i32* @y.2
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 false, true
  %66 = and i1 %63, false
  %67 = and i1 %61, %65
  %68 = and i1 %64, false
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 false, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  br i1 %77, label %79, label %935

; <label>:79:                                     ; preds = %53, %935
  %80 = load i32, i32* @x.1
  %81 = load i32, i32* @y.2
  %82 = add i32 %80, 497994726
  %83 = sub i32 %82, 1
  %84 = sub i32 %83, 497994726
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = xor i1 %88, true
  %91 = xor i1 %89, true
  %92 = xor i1 true, true
  %93 = and i1 %90, true
  %94 = and i1 %88, %92
  %95 = and i1 %91, true
  %96 = and i1 %89, %92
  %97 = or i1 %93, %94
  %98 = or i1 %95, %96
  %99 = xor i1 %97, %98
  %100 = or i1 %90, %91
  %101 = xor i1 %100, true
  %102 = or i1 true, %92
  %103 = and i1 %101, %102
  %104 = or i1 %99, %103
  %105 = or i1 %88, %89
  br i1 %104, label %106, label %935

; <label>:106:                                    ; preds = %79
  %107 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* dereferenceable(280) %52, %"class.std::__cxx11::basic_string"* dereferenceable(32) %3)
          to label %108 unwind label %227

; <label>:108:                                    ; preds = %106
  call void @_ZNSt3setIcSt4lessIcESaIcEEC2Ev(%"class.std::set"* %10) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEEC2Ev(%"class.std::set"* %11) #3
  %109 = load i64, i64* %2, align 8
  invoke void @"_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EEC2IZ4mainE3$_0vvEET_"(%"class.std::function"* %13)
          to label %110 unwind label %231

; <label>:110:                                    ; preds = %108
  invoke void @"_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EEC2IZ4mainE3$_1vvEET_"(%"class.std::function"* %15)
          to label %111 unwind label %235

; <label>:111:                                    ; preds = %110
  invoke void @"_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EEC2IZ4mainE3$_2vvEET_"(%"class.std::function"* %17)
          to label %112 unwind label %239

; <label>:112:                                    ; preds = %111
  invoke void @"_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_xEEC2IZ4mainE3$_3vvEET_"(%"class.std::function.10"* %19)
          to label %113 unwind label %297

; <label>:113:                                    ; preds = %112
  %114 = load i32, i32* @x.1
  %115 = load i32, i32* @y.2
  %116 = sub i32 0, 1
  %117 = add i32 %114, %116
  %118 = sub i32 %114, 1
  %119 = mul i32 %114, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %115, 10
  %123 = xor i1 %121, true
  %124 = xor i1 %122, true
  %125 = xor i1 true, true
  %126 = and i1 %123, true
  %127 = and i1 %121, %125
  %128 = and i1 %124, true
  %129 = and i1 %122, %125
  %130 = or i1 %126, %127
  %131 = or i1 %128, %129
  %132 = xor i1 %130, %131
  %133 = or i1 %123, %124
  %134 = xor i1 %133, true
  %135 = or i1 true, %125
  %136 = and i1 %134, %135
  %137 = or i1 %132, %136
  %138 = or i1 %121, %122
  br i1 %137, label %139, label %936

; <label>:139:                                    ; preds = %113, %936
  %140 = load i32, i32* @x.1
  %141 = load i32, i32* @y.2
  %142 = sub i32 %140, -1676523441
  %143 = sub i32 %142, 1
  %144 = add i32 %143, -1676523441
  %145 = sub i32 %140, 1
  %146 = mul i32 %140, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %141, 10
  %150 = and i1 %148, %149
  %151 = xor i1 %148, %149
  %152 = or i1 %150, %151
  %153 = or i1 %148, %149
  br i1 %152, label %154, label %936

; <label>:154:                                    ; preds = %139
  invoke void @_ZNSt3setIcSt4lessIcESaIcEEC2ERKS3_(%"class.std::set"* %21, %"class.std::set"* dereferenceable(48) %10)
          to label %155 unwind label %301

; <label>:155:                                    ; preds = %154
  invoke void @_ZNSt3setIcSt4lessIcESaIcEEC2ERKS3_(%"class.std::set"* %22, %"class.std::set"* dereferenceable(48) %11)
          to label %156 unwind label %305

; <label>:156:                                    ; preds = %155
  invoke void @_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_EC2ExSt8functionIFS4_S4_S4_EES8_S8_S6_IFS4_S4_xEES4_S4_(%struct.SegTreeLazyProportional* %12, i64 %109, %"class.std::function"* %13, %"class.std::function"* %15, %"class.std::function"* %17, %"class.std::function.10"* %19, %"class.std::set"* %21, %"class.std::set"* %22)
          to label %157 unwind label %309

; <label>:157:                                    ; preds = %156
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %22) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %21) #3
  call void @_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_xEED2Ev(%"class.std::function.10"* %19) #3
  call void @_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EED2Ev(%"class.std::function"* %17) #3
  call void @_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EED2Ev(%"class.std::function"* %15) #3
  call void @_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EED2Ev(%"class.std::function"* %13) #3
  store i64 0, i64* %23, align 8
  br label %158

; <label>:158:                                    ; preds = %226, %157
  %159 = load i64, i64* %23, align 8
  %160 = load i64, i64* %2, align 8
  %161 = icmp slt i64 %159, %160
  br i1 %161, label %162, label %540

; <label>:162:                                    ; preds = %158
  %163 = getelementptr inbounds [1 x i8], [1 x i8]* %26, i64 0, i64 0
  %164 = load i64, i64* %23, align 8
  %165 = invoke dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"* %3, i64 %164)
          to label %166 unwind label %401

; <label>:166:                                    ; preds = %162
  %167 = load i8, i8* %165, align 1
  store i8 %167, i8* %163, align 1
  %168 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %25, i32 0, i32 0
  %169 = getelementptr inbounds [1 x i8], [1 x i8]* %26, i64 0, i64 0
  store i8* %169, i8** %168, align 8
  %170 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %25, i32 0, i32 1
  store i64 1, i64* %170, align 8
  call void @_ZNSaIcEC1Ev(%"class.std::allocator"* %28) #3
  %171 = bitcast %"class.std::initializer_list"* %25 to { i8*, i64 }*
  %172 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %171, i32 0, i32 0
  %173 = load i8*, i8** %172, align 8
  %174 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %171, i32 0, i32 1
  %175 = load i64, i64* %174, align 8
  invoke void @_ZNSt3setIcSt4lessIcESaIcEEC2ESt16initializer_listIcERKS1_RKS2_(%"class.std::set"* %24, i8* %173, i64 %175, %"struct.std::less"* dereferenceable(1) %27, %"class.std::allocator"* dereferenceable(1) %28)
          to label %176 unwind label %445

; <label>:176:                                    ; preds = %166
  call void @_ZNSaIcED1Ev(%"class.std::allocator"* %28) #3
  %177 = load i64, i64* %23, align 8
  invoke void @_ZNSt3setIcSt4lessIcESaIcEEC2ERKS3_(%"class.std::set"* %29, %"class.std::set"* dereferenceable(48) %24)
          to label %178 unwind label %449

; <label>:178:                                    ; preds = %176
  invoke void @_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_E3setExS4_(%struct.SegTreeLazyProportional* %12, i64 %177, %"class.std::set"* %29)
          to label %179 unwind label %494

; <label>:179:                                    ; preds = %178
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %29) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %24) #3
  br label %180

; <label>:180:                                    ; preds = %179
  %181 = load i32, i32* @x.1
  %182 = load i32, i32* @y.2
  %183 = sub i32 0, 1
  %184 = add i32 %181, %183
  %185 = sub i32 %181, 1
  %186 = mul i32 %181, %184
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %182, 10
  %190 = and i1 %188, %189
  %191 = xor i1 %188, %189
  %192 = or i1 %190, %191
  %193 = or i1 %188, %189
  br i1 %192, label %194, label %937

; <label>:194:                                    ; preds = %180, %937
  %195 = load i64, i64* %23, align 8
  %196 = sub i64 %195, 5082133713711229228
  %197 = add i64 %196, 1
  %198 = add i64 %197, 5082133713711229228
  %199 = add nsw i64 %195, 1
  store i64 %198, i64* %23, align 8
  %200 = load i32, i32* @x.1
  %201 = load i32, i32* @y.2
  %202 = sub i32 %200, -1633572877
  %203 = sub i32 %202, 1
  %204 = add i32 %203, -1633572877
  %205 = sub i32 %200, 1
  %206 = mul i32 %200, %204
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %201, 10
  %210 = xor i1 %208, true
  %211 = xor i1 %209, true
  %212 = xor i1 false, true
  %213 = and i1 %210, false
  %214 = and i1 %208, %212
  %215 = and i1 %211, false
  %216 = and i1 %209, %212
  %217 = or i1 %213, %214
  %218 = or i1 %215, %216
  %219 = xor i1 %217, %218
  %220 = or i1 %210, %211
  %221 = xor i1 %220, true
  %222 = or i1 false, %212
  %223 = and i1 %221, %222
  %224 = or i1 %219, %223
  %225 = or i1 %208, %209
  br i1 %224, label %226, label %937

; <label>:226:                                    ; preds = %194
  br label %158

; <label>:227:                                    ; preds = %106, %0
  %228 = landingpad { i8*, i32 }
          cleanup
  %229 = extractvalue { i8*, i32 } %228, 0
  store i8* %229, i8** %4, align 8
  %230 = extractvalue { i8*, i32 } %228, 1
  store i32 %230, i32* %5, align 4
  br label %929

; <label>:231:                                    ; preds = %108
  %232 = landingpad { i8*, i32 }
          cleanup
  %233 = extractvalue { i8*, i32 } %232, 0
  store i8* %233, i8** %4, align 8
  %234 = extractvalue { i8*, i32 } %232, 1
  store i32 %234, i32* %5, align 4
  br label %900

; <label>:235:                                    ; preds = %110
  %236 = landingpad { i8*, i32 }
          cleanup
  %237 = extractvalue { i8*, i32 } %236, 0
  store i8* %237, i8** %4, align 8
  %238 = extractvalue { i8*, i32 } %236, 1
  store i32 %238, i32* %5, align 4
  br label %400

; <label>:239:                                    ; preds = %111
  %240 = load i32, i32* @x.1
  %241 = load i32, i32* @y.2
  %242 = add i32 %240, -964701086
  %243 = sub i32 %242, 1
  %244 = sub i32 %243, -964701086
  %245 = sub i32 %240, 1
  %246 = mul i32 %240, %244
  %247 = urem i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %241, 10
  %250 = xor i1 %248, true
  %251 = xor i1 %249, true
  %252 = xor i1 true, true
  %253 = and i1 %250, true
  %254 = and i1 %248, %252
  %255 = and i1 %251, true
  %256 = and i1 %249, %252
  %257 = or i1 %253, %254
  %258 = or i1 %255, %256
  %259 = xor i1 %257, %258
  %260 = or i1 %250, %251
  %261 = xor i1 %260, true
  %262 = or i1 true, %252
  %263 = and i1 %261, %262
  %264 = or i1 %259, %263
  %265 = or i1 %248, %249
  br i1 %264, label %266, label %963

; <label>:266:                                    ; preds = %239, %963
  %267 = landingpad { i8*, i32 }
          cleanup
  %268 = extractvalue { i8*, i32 } %267, 0
  store i8* %268, i8** %4, align 8
  %269 = extractvalue { i8*, i32 } %267, 1
  store i32 %269, i32* %5, align 4
  %270 = load i32, i32* @x.1
  %271 = load i32, i32* @y.2
  %272 = add i32 %270, -1137090263
  %273 = sub i32 %272, 1
  %274 = sub i32 %273, -1137090263
  %275 = sub i32 %270, 1
  %276 = mul i32 %270, %274
  %277 = urem i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %271, 10
  %280 = xor i1 %278, true
  %281 = xor i1 %279, true
  %282 = xor i1 true, true
  %283 = and i1 %280, true
  %284 = and i1 %278, %282
  %285 = and i1 %281, true
  %286 = and i1 %279, %282
  %287 = or i1 %283, %284
  %288 = or i1 %285, %286
  %289 = xor i1 %287, %288
  %290 = or i1 %280, %281
  %291 = xor i1 %290, true
  %292 = or i1 true, %282
  %293 = and i1 %291, %292
  %294 = or i1 %289, %293
  %295 = or i1 %278, %279
  br i1 %294, label %296, label %963

; <label>:296:                                    ; preds = %266
  br label %399

; <label>:297:                                    ; preds = %112
  %298 = landingpad { i8*, i32 }
          cleanup
  %299 = extractvalue { i8*, i32 } %298, 0
  store i8* %299, i8** %4, align 8
  %300 = extractvalue { i8*, i32 } %298, 1
  store i32 %300, i32* %5, align 4
  br label %398

; <label>:301:                                    ; preds = %154
  %302 = landingpad { i8*, i32 }
          cleanup
  %303 = extractvalue { i8*, i32 } %302, 0
  store i8* %303, i8** %4, align 8
  %304 = extractvalue { i8*, i32 } %302, 1
  store i32 %304, i32* %5, align 4
  br label %367

; <label>:305:                                    ; preds = %155
  %306 = landingpad { i8*, i32 }
          cleanup
  %307 = extractvalue { i8*, i32 } %306, 0
  store i8* %307, i8** %4, align 8
  %308 = extractvalue { i8*, i32 } %306, 1
  store i32 %308, i32* %5, align 4
  br label %313

; <label>:309:                                    ; preds = %156
  %310 = landingpad { i8*, i32 }
          cleanup
  %311 = extractvalue { i8*, i32 } %310, 0
  store i8* %311, i8** %4, align 8
  %312 = extractvalue { i8*, i32 } %310, 1
  store i32 %312, i32* %5, align 4
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %22) #3
  br label %313

; <label>:313:                                    ; preds = %309, %305
  %314 = load i32, i32* @x.1
  %315 = load i32, i32* @y.2
  %316 = sub i32 %314, 454813408
  %317 = sub i32 %316, 1
  %318 = add i32 %317, 454813408
  %319 = sub i32 %314, 1
  %320 = mul i32 %314, %318
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %315, 10
  %324 = xor i1 %322, true
  %325 = xor i1 %323, true
  %326 = xor i1 true, true
  %327 = and i1 %324, true
  %328 = and i1 %322, %326
  %329 = and i1 %325, true
  %330 = and i1 %323, %326
  %331 = or i1 %327, %328
  %332 = or i1 %329, %330
  %333 = xor i1 %331, %332
  %334 = or i1 %324, %325
  %335 = xor i1 %334, true
  %336 = or i1 true, %326
  %337 = and i1 %335, %336
  %338 = or i1 %333, %337
  %339 = or i1 %322, %323
  br i1 %338, label %340, label %967

; <label>:340:                                    ; preds = %313, %967
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %21) #3
  %341 = load i32, i32* @x.1
  %342 = load i32, i32* @y.2
  %343 = sub i32 0, 1
  %344 = add i32 %341, %343
  %345 = sub i32 %341, 1
  %346 = mul i32 %341, %344
  %347 = urem i32 %346, 2
  %348 = icmp eq i32 %347, 0
  %349 = icmp slt i32 %342, 10
  %350 = xor i1 %348, true
  %351 = xor i1 %349, true
  %352 = xor i1 false, true
  %353 = and i1 %350, false
  %354 = and i1 %348, %352
  %355 = and i1 %351, false
  %356 = and i1 %349, %352
  %357 = or i1 %353, %354
  %358 = or i1 %355, %356
  %359 = xor i1 %357, %358
  %360 = or i1 %350, %351
  %361 = xor i1 %360, true
  %362 = or i1 false, %352
  %363 = and i1 %361, %362
  %364 = or i1 %359, %363
  %365 = or i1 %348, %349
  br i1 %364, label %366, label %967

; <label>:366:                                    ; preds = %340
  br label %367

; <label>:367:                                    ; preds = %366, %301
  %368 = load i32, i32* @x.1
  %369 = load i32, i32* @y.2
  %370 = add i32 %368, -1012591068
  %371 = sub i32 %370, 1
  %372 = sub i32 %371, -1012591068
  %373 = sub i32 %368, 1
  %374 = mul i32 %368, %372
  %375 = urem i32 %374, 2
  %376 = icmp eq i32 %375, 0
  %377 = icmp slt i32 %369, 10
  %378 = and i1 %376, %377
  %379 = xor i1 %376, %377
  %380 = or i1 %378, %379
  %381 = or i1 %376, %377
  br i1 %380, label %382, label %968

; <label>:382:                                    ; preds = %367, %968
  call void @_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_xEED2Ev(%"class.std::function.10"* %19) #3
  %383 = load i32, i32* @x.1
  %384 = load i32, i32* @y.2
  %385 = add i32 %383, 220683370
  %386 = sub i32 %385, 1
  %387 = sub i32 %386, 220683370
  %388 = sub i32 %383, 1
  %389 = mul i32 %383, %387
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %384, 10
  %393 = and i1 %391, %392
  %394 = xor i1 %391, %392
  %395 = or i1 %393, %394
  %396 = or i1 %391, %392
  br i1 %395, label %397, label %968

; <label>:397:                                    ; preds = %382
  br label %398

; <label>:398:                                    ; preds = %397, %297
  call void @_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EED2Ev(%"class.std::function"* %17) #3
  br label %399

; <label>:399:                                    ; preds = %398, %296
  call void @_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EED2Ev(%"class.std::function"* %15) #3
  br label %400

; <label>:400:                                    ; preds = %399, %235
  call void @_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EED2Ev(%"class.std::function"* %13) #3
  br label %900

; <label>:401:                                    ; preds = %768, %766, %764, %584, %582, %548, %541, %540, %162
  %402 = load i32, i32* @x.1
  %403 = load i32, i32* @y.2
  %404 = sub i32 0, 1
  %405 = add i32 %402, %404
  %406 = sub i32 %402, 1
  %407 = mul i32 %402, %405
  %408 = urem i32 %407, 2
  %409 = icmp eq i32 %408, 0
  %410 = icmp slt i32 %403, 10
  %411 = xor i1 %409, true
  %412 = xor i1 %410, true
  %413 = xor i1 true, true
  %414 = and i1 %411, true
  %415 = and i1 %409, %413
  %416 = and i1 %412, true
  %417 = and i1 %410, %413
  %418 = or i1 %414, %415
  %419 = or i1 %416, %417
  %420 = xor i1 %418, %419
  %421 = or i1 %411, %412
  %422 = xor i1 %421, true
  %423 = or i1 true, %413
  %424 = and i1 %422, %423
  %425 = or i1 %420, %424
  %426 = or i1 %409, %410
  br i1 %425, label %427, label %969

; <label>:427:                                    ; preds = %401, %969
  %428 = landingpad { i8*, i32 }
          cleanup
  %429 = extractvalue { i8*, i32 } %428, 0
  store i8* %429, i8** %4, align 8
  %430 = extractvalue { i8*, i32 } %428, 1
  store i32 %430, i32* %5, align 4
  %431 = load i32, i32* @x.1
  %432 = load i32, i32* @y.2
  %433 = sub i32 0, 1
  %434 = add i32 %431, %433
  %435 = sub i32 %431, 1
  %436 = mul i32 %431, %434
  %437 = urem i32 %436, 2
  %438 = icmp eq i32 %437, 0
  %439 = icmp slt i32 %432, 10
  %440 = and i1 %438, %439
  %441 = xor i1 %438, %439
  %442 = or i1 %440, %441
  %443 = or i1 %438, %439
  br i1 %442, label %444, label %969

; <label>:444:                                    ; preds = %427
  br label %899

; <label>:445:                                    ; preds = %166
  %446 = landingpad { i8*, i32 }
          cleanup
  %447 = extractvalue { i8*, i32 } %446, 0
  store i8* %447, i8** %4, align 8
  %448 = extractvalue { i8*, i32 } %446, 1
  store i32 %448, i32* %5, align 4
  call void @_ZNSaIcED1Ev(%"class.std::allocator"* %28) #3
  br label %899

; <label>:449:                                    ; preds = %176
  %450 = load i32, i32* @x.1
  %451 = load i32, i32* @y.2
  %452 = add i32 %450, -1770058536
  %453 = sub i32 %452, 1
  %454 = sub i32 %453, -1770058536
  %455 = sub i32 %450, 1
  %456 = mul i32 %450, %454
  %457 = urem i32 %456, 2
  %458 = icmp eq i32 %457, 0
  %459 = icmp slt i32 %451, 10
  %460 = xor i1 %458, true
  %461 = xor i1 %459, true
  %462 = xor i1 false, true
  %463 = and i1 %460, false
  %464 = and i1 %458, %462
  %465 = and i1 %461, false
  %466 = and i1 %459, %462
  %467 = or i1 %463, %464
  %468 = or i1 %465, %466
  %469 = xor i1 %467, %468
  %470 = or i1 %460, %461
  %471 = xor i1 %470, true
  %472 = or i1 false, %462
  %473 = and i1 %471, %472
  %474 = or i1 %469, %473
  %475 = or i1 %458, %459
  br i1 %474, label %476, label %973

; <label>:476:                                    ; preds = %449, %973
  %477 = landingpad { i8*, i32 }
          cleanup
  %478 = extractvalue { i8*, i32 } %477, 0
  store i8* %478, i8** %4, align 8
  %479 = extractvalue { i8*, i32 } %477, 1
  store i32 %479, i32* %5, align 4
  %480 = load i32, i32* @x.1
  %481 = load i32, i32* @y.2
  %482 = sub i32 0, 1
  %483 = add i32 %480, %482
  %484 = sub i32 %480, 1
  %485 = mul i32 %480, %483
  %486 = urem i32 %485, 2
  %487 = icmp eq i32 %486, 0
  %488 = icmp slt i32 %481, 10
  %489 = and i1 %487, %488
  %490 = xor i1 %487, %488
  %491 = or i1 %489, %490
  %492 = or i1 %487, %488
  br i1 %491, label %493, label %973

; <label>:493:                                    ; preds = %476
  br label %539

; <label>:494:                                    ; preds = %178
  %495 = load i32, i32* @x.1
  %496 = load i32, i32* @y.2
  %497 = sub i32 0, 1
  %498 = add i32 %495, %497
  %499 = sub i32 %495, 1
  %500 = mul i32 %495, %498
  %501 = urem i32 %500, 2
  %502 = icmp eq i32 %501, 0
  %503 = icmp slt i32 %496, 10
  %504 = xor i1 %502, true
  %505 = xor i1 %503, true
  %506 = xor i1 true, true
  %507 = and i1 %504, true
  %508 = and i1 %502, %506
  %509 = and i1 %505, true
  %510 = and i1 %503, %506
  %511 = or i1 %507, %508
  %512 = or i1 %509, %510
  %513 = xor i1 %511, %512
  %514 = or i1 %504, %505
  %515 = xor i1 %514, true
  %516 = or i1 true, %506
  %517 = and i1 %515, %516
  %518 = or i1 %513, %517
  %519 = or i1 %502, %503
  br i1 %518, label %520, label %977

; <label>:520:                                    ; preds = %494, %977
  %521 = landingpad { i8*, i32 }
          cleanup
  %522 = extractvalue { i8*, i32 } %521, 0
  store i8* %522, i8** %4, align 8
  %523 = extractvalue { i8*, i32 } %521, 1
  store i32 %523, i32* %5, align 4
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %29) #3
  %524 = load i32, i32* @x.1
  %525 = load i32, i32* @y.2
  %526 = sub i32 %524, -465181897
  %527 = sub i32 %526, 1
  %528 = add i32 %527, -465181897
  %529 = sub i32 %524, 1
  %530 = mul i32 %524, %528
  %531 = urem i32 %530, 2
  %532 = icmp eq i32 %531, 0
  %533 = icmp slt i32 %525, 10
  %534 = and i1 %532, %533
  %535 = xor i1 %532, %533
  %536 = or i1 %534, %535
  %537 = or i1 %532, %533
  br i1 %536, label %538, label %977

; <label>:538:                                    ; preds = %520
  br label %539

; <label>:539:                                    ; preds = %538, %493
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %24) #3
  br label %899

; <label>:540:                                    ; preds = %158
  invoke void @_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_E5buildEv(%struct.SegTreeLazyProportional* %12)
          to label %541 unwind label %401

; <label>:541:                                    ; preds = %540
  %542 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) %30)
          to label %543 unwind label %401

; <label>:543:                                    ; preds = %541
  store i64 0, i64* %31, align 8
  br label %544

; <label>:544:                                    ; preds = %896, %543
  %545 = load i64, i64* %31, align 8
  %546 = load i64, i64* %30, align 8
  %547 = icmp slt i64 %545, %546
  br i1 %547, label %548, label %897

; <label>:548:                                    ; preds = %544
  %549 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) %32)
          to label %550 unwind label %401

; <label>:550:                                    ; preds = %548
  %551 = load i32, i32* @x.1
  %552 = load i32, i32* @y.2
  %553 = sub i32 0, 1
  %554 = add i32 %551, %553
  %555 = sub i32 %551, 1
  %556 = mul i32 %551, %554
  %557 = urem i32 %556, 2
  %558 = icmp eq i32 %557, 0
  %559 = icmp slt i32 %552, 10
  %560 = and i1 %558, %559
  %561 = xor i1 %558, %559
  %562 = or i1 %560, %561
  %563 = or i1 %558, %559
  br i1 %562, label %564, label %981

; <label>:564:                                    ; preds = %550, %981
  %565 = load i64, i64* %32, align 8
  %566 = icmp eq i64 %565, 1
  %567 = load i32, i32* @x.1
  %568 = load i32, i32* @y.2
  %569 = sub i32 %567, 1105006664
  %570 = sub i32 %569, 1
  %571 = add i32 %570, 1105006664
  %572 = sub i32 %567, 1
  %573 = mul i32 %567, %571
  %574 = urem i32 %573, 2
  %575 = icmp eq i32 %574, 0
  %576 = icmp slt i32 %568, 10
  %577 = and i1 %575, %576
  %578 = xor i1 %575, %576
  %579 = or i1 %577, %578
  %580 = or i1 %575, %576
  br i1 %579, label %581, label %981

; <label>:581:                                    ; preds = %564
  br i1 %566, label %582, label %720

; <label>:582:                                    ; preds = %581
  %583 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) %33)
          to label %584 unwind label %401

; <label>:584:                                    ; preds = %582
  %585 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280) %583, i8* dereferenceable(1) %34)
          to label %586 unwind label %401

; <label>:586:                                    ; preds = %584
  %587 = load i64, i64* %33, align 8
  %588 = sub i64 0, %587
  %589 = sub i64 0, -1
  %590 = add i64 %588, %589
  %591 = sub i64 0, %590
  %592 = add nsw i64 %587, -1
  store i64 %591, i64* %33, align 8
  %593 = getelementptr inbounds [1 x i8], [1 x i8]* %37, i64 0, i64 0
  %594 = load i8, i8* %34, align 1
  store i8 %594, i8* %593, align 1
  %595 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %36, i32 0, i32 0
  %596 = getelementptr inbounds [1 x i8], [1 x i8]* %37, i64 0, i64 0
  store i8* %596, i8** %595, align 8
  %597 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %36, i32 0, i32 1
  store i64 1, i64* %597, align 8
  call void @_ZNSaIcEC1Ev(%"class.std::allocator"* %39) #3
  %598 = bitcast %"class.std::initializer_list"* %36 to { i8*, i64 }*
  %599 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %598, i32 0, i32 0
  %600 = load i8*, i8** %599, align 8
  %601 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %598, i32 0, i32 1
  %602 = load i64, i64* %601, align 8
  invoke void @_ZNSt3setIcSt4lessIcESaIcEEC2ESt16initializer_listIcERKS1_RKS2_(%"class.std::set"* %35, i8* %600, i64 %602, %"struct.std::less"* dereferenceable(1) %38, %"class.std::allocator"* dereferenceable(1) %39)
          to label %603 unwind label %707

; <label>:603:                                    ; preds = %586
  call void @_ZNSaIcED1Ev(%"class.std::allocator"* %39) #3
  %604 = load i64, i64* %33, align 8
  %605 = load i64, i64* %33, align 8
  %606 = sub i64 0, %605
  %607 = sub i64 0, 1
  %608 = add i64 %606, %607
  %609 = sub i64 0, %608
  %610 = add nsw i64 %605, 1
  invoke void @_ZNSt3setIcSt4lessIcESaIcEEC2ERKS3_(%"class.std::set"* %40, %"class.std::set"* dereferenceable(48) %35)
          to label %611 unwind label %711

; <label>:611:                                    ; preds = %603
  %612 = load i32, i32* @x.1
  %613 = load i32, i32* @y.2
  %614 = add i32 %612, -457512571
  %615 = sub i32 %614, 1
  %616 = sub i32 %615, -457512571
  %617 = sub i32 %612, 1
  %618 = mul i32 %612, %616
  %619 = urem i32 %618, 2
  %620 = icmp eq i32 %619, 0
  %621 = icmp slt i32 %613, 10
  %622 = xor i1 %620, true
  %623 = xor i1 %621, true
  %624 = xor i1 true, true
  %625 = and i1 %622, true
  %626 = and i1 %620, %624
  %627 = and i1 %623, true
  %628 = and i1 %621, %624
  %629 = or i1 %625, %626
  %630 = or i1 %627, %628
  %631 = xor i1 %629, %630
  %632 = or i1 %622, %623
  %633 = xor i1 %632, true
  %634 = or i1 true, %624
  %635 = and i1 %633, %634
  %636 = or i1 %631, %635
  %637 = or i1 %620, %621
  br i1 %636, label %638, label %984

; <label>:638:                                    ; preds = %611, %984
  %639 = load i32, i32* @x.1
  %640 = load i32, i32* @y.2
  %641 = sub i32 0, 1
  %642 = add i32 %639, %641
  %643 = sub i32 %639, 1
  %644 = mul i32 %639, %642
  %645 = urem i32 %644, 2
  %646 = icmp eq i32 %645, 0
  %647 = icmp slt i32 %640, 10
  %648 = and i1 %646, %647
  %649 = xor i1 %646, %647
  %650 = or i1 %648, %649
  %651 = or i1 %646, %647
  br i1 %650, label %652, label %984

; <label>:652:                                    ; preds = %638
  invoke void @_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_E6updateExxS4_(%struct.SegTreeLazyProportional* %12, i64 %604, i64 %609, %"class.std::set"* %40)
          to label %653 unwind label %715

; <label>:653:                                    ; preds = %652
  %654 = load i32, i32* @x.1
  %655 = load i32, i32* @y.2
  %656 = sub i32 %654, 903087762
  %657 = sub i32 %656, 1
  %658 = add i32 %657, 903087762
  %659 = sub i32 %654, 1
  %660 = mul i32 %654, %658
  %661 = urem i32 %660, 2
  %662 = icmp eq i32 %661, 0
  %663 = icmp slt i32 %655, 10
  %664 = xor i1 %662, true
  %665 = xor i1 %663, true
  %666 = xor i1 false, true
  %667 = and i1 %664, false
  %668 = and i1 %662, %666
  %669 = and i1 %665, false
  %670 = and i1 %663, %666
  %671 = or i1 %667, %668
  %672 = or i1 %669, %670
  %673 = xor i1 %671, %672
  %674 = or i1 %664, %665
  %675 = xor i1 %674, true
  %676 = or i1 false, %666
  %677 = and i1 %675, %676
  %678 = or i1 %673, %677
  %679 = or i1 %662, %663
  br i1 %678, label %680, label %985

; <label>:680:                                    ; preds = %653, %985
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %40) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %35) #3
  %681 = load i32, i32* @x.1
  %682 = load i32, i32* @y.2
  %683 = sub i32 0, 1
  %684 = add i32 %681, %683
  %685 = sub i32 %681, 1
  %686 = mul i32 %681, %684
  %687 = urem i32 %686, 2
  %688 = icmp eq i32 %687, 0
  %689 = icmp slt i32 %682, 10
  %690 = xor i1 %688, true
  %691 = xor i1 %689, true
  %692 = xor i1 true, true
  %693 = and i1 %690, true
  %694 = and i1 %688, %692
  %695 = and i1 %691, true
  %696 = and i1 %689, %692
  %697 = or i1 %693, %694
  %698 = or i1 %695, %696
  %699 = xor i1 %697, %698
  %700 = or i1 %690, %691
  %701 = xor i1 %700, true
  %702 = or i1 true, %692
  %703 = and i1 %701, %702
  %704 = or i1 %699, %703
  %705 = or i1 %688, %689
  br i1 %704, label %706, label %985

; <label>:706:                                    ; preds = %680
  br label %797

; <label>:707:                                    ; preds = %586
  %708 = landingpad { i8*, i32 }
          cleanup
  %709 = extractvalue { i8*, i32 } %708, 0
  store i8* %709, i8** %4, align 8
  %710 = extractvalue { i8*, i32 } %708, 1
  store i32 %710, i32* %5, align 4
  call void @_ZNSaIcED1Ev(%"class.std::allocator"* %39) #3
  br label %899

; <label>:711:                                    ; preds = %603
  %712 = landingpad { i8*, i32 }
          cleanup
  %713 = extractvalue { i8*, i32 } %712, 0
  store i8* %713, i8** %4, align 8
  %714 = extractvalue { i8*, i32 } %712, 1
  store i32 %714, i32* %5, align 4
  br label %719

; <label>:715:                                    ; preds = %652
  %716 = landingpad { i8*, i32 }
          cleanup
  %717 = extractvalue { i8*, i32 } %716, 0
  store i8* %717, i8** %4, align 8
  %718 = extractvalue { i8*, i32 } %716, 1
  store i32 %718, i32* %5, align 4
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %40) #3
  br label %719

; <label>:719:                                    ; preds = %715, %711
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %35) #3
  br label %899

; <label>:720:                                    ; preds = %581
  %721 = load i64, i64* %32, align 8
  %722 = icmp eq i64 %721, 2
  br i1 %722, label %723, label %796

; <label>:723:                                    ; preds = %720
  %724 = load i32, i32* @x.1
  %725 = load i32, i32* @y.2
  %726 = add i32 %724, 1532878971
  %727 = sub i32 %726, 1
  %728 = sub i32 %727, 1532878971
  %729 = sub i32 %724, 1
  %730 = mul i32 %724, %728
  %731 = urem i32 %730, 2
  %732 = icmp eq i32 %731, 0
  %733 = icmp slt i32 %725, 10
  %734 = and i1 %732, %733
  %735 = xor i1 %732, %733
  %736 = or i1 %734, %735
  %737 = or i1 %732, %733
  br i1 %736, label %738, label %986

; <label>:738:                                    ; preds = %723, %986
  %739 = load i32, i32* @x.1
  %740 = load i32, i32* @y.2
  %741 = sub i32 0, 1
  %742 = add i32 %739, %741
  %743 = sub i32 %739, 1
  %744 = mul i32 %739, %742
  %745 = urem i32 %744, 2
  %746 = icmp eq i32 %745, 0
  %747 = icmp slt i32 %740, 10
  %748 = xor i1 %746, true
  %749 = xor i1 %747, true
  %750 = xor i1 false, true
  %751 = and i1 %748, false
  %752 = and i1 %746, %750
  %753 = and i1 %749, false
  %754 = and i1 %747, %750
  %755 = or i1 %751, %752
  %756 = or i1 %753, %754
  %757 = xor i1 %755, %756
  %758 = or i1 %748, %749
  %759 = xor i1 %758, true
  %760 = or i1 false, %750
  %761 = and i1 %759, %760
  %762 = or i1 %757, %761
  %763 = or i1 %746, %747
  br i1 %762, label %764, label %986

; <label>:764:                                    ; preds = %738
  %765 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) %41)
          to label %766 unwind label %401

; <label>:766:                                    ; preds = %764
  %767 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %765, i64* dereferenceable(8) %42)
          to label %768 unwind label %401

; <label>:768:                                    ; preds = %766
  %769 = load i64, i64* %41, align 8
  %770 = sub i64 0, -1
  %771 = sub i64 %769, %770
  %772 = add nsw i64 %769, -1
  store i64 %771, i64* %41, align 8
  %773 = load i64, i64* %42, align 8
  %774 = add i64 %773, 4744646771101776873
  %775 = add i64 %774, -1
  %776 = sub i64 %775, 4744646771101776873
  %777 = add nsw i64 %773, -1
  store i64 %776, i64* %42, align 8
  %778 = load i64, i64* %41, align 8
  %779 = load i64, i64* %42, align 8
  %780 = sub i64 0, %779
  %781 = sub i64 0, 1
  %782 = add i64 %780, %781
  %783 = sub i64 0, %782
  %784 = add nsw i64 %779, 1
  invoke void @_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_E5queryExx(%"class.std::set"* sret %43, %struct.SegTreeLazyProportional* %12, i64 %778, i64 %783)
          to label %785 unwind label %401

; <label>:785:                                    ; preds = %768
  %786 = call i64 @_ZNKSt3setIcSt4lessIcESaIcEE4sizeEv(%"class.std::set"* %43) #3
  %787 = trunc i64 %786 to i32
  %788 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* @_ZSt4cout, i32 %787)
          to label %789 unwind label %792

; <label>:789:                                    ; preds = %785
  %790 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %788, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %791 unwind label %792

; <label>:791:                                    ; preds = %789
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %43) #3
  br label %796

; <label>:792:                                    ; preds = %789, %785
  %793 = landingpad { i8*, i32 }
          cleanup
  %794 = extractvalue { i8*, i32 } %793, 0
  store i8* %794, i8** %4, align 8
  %795 = extractvalue { i8*, i32 } %793, 1
  store i32 %795, i32* %5, align 4
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %43) #3
  br label %899

; <label>:796:                                    ; preds = %791, %720
  br label %797

; <label>:797:                                    ; preds = %796, %706
  %798 = load i32, i32* @x.1
  %799 = load i32, i32* @y.2
  %800 = sub i32 %798, -1823941870
  %801 = sub i32 %800, 1
  %802 = add i32 %801, -1823941870
  %803 = sub i32 %798, 1
  %804 = mul i32 %798, %802
  %805 = urem i32 %804, 2
  %806 = icmp eq i32 %805, 0
  %807 = icmp slt i32 %799, 10
  %808 = xor i1 %806, true
  %809 = xor i1 %807, true
  %810 = xor i1 false, true
  %811 = and i1 %808, false
  %812 = and i1 %806, %810
  %813 = and i1 %809, false
  %814 = and i1 %807, %810
  %815 = or i1 %811, %812
  %816 = or i1 %813, %814
  %817 = xor i1 %815, %816
  %818 = or i1 %808, %809
  %819 = xor i1 %818, true
  %820 = or i1 false, %810
  %821 = and i1 %819, %820
  %822 = or i1 %817, %821
  %823 = or i1 %806, %807
  br i1 %822, label %824, label %987

; <label>:824:                                    ; preds = %797, %987
  %825 = load i32, i32* @x.1
  %826 = load i32, i32* @y.2
  %827 = sub i32 0, 1
  %828 = add i32 %825, %827
  %829 = sub i32 %825, 1
  %830 = mul i32 %825, %828
  %831 = urem i32 %830, 2
  %832 = icmp eq i32 %831, 0
  %833 = icmp slt i32 %826, 10
  %834 = xor i1 %832, true
  %835 = xor i1 %833, true
  %836 = xor i1 true, true
  %837 = and i1 %834, true
  %838 = and i1 %832, %836
  %839 = and i1 %835, true
  %840 = and i1 %833, %836
  %841 = or i1 %837, %838
  %842 = or i1 %839, %840
  %843 = xor i1 %841, %842
  %844 = or i1 %834, %835
  %845 = xor i1 %844, true
  %846 = or i1 true, %836
  %847 = and i1 %845, %846
  %848 = or i1 %843, %847
  %849 = or i1 %832, %833
  br i1 %848, label %850, label %987

; <label>:850:                                    ; preds = %824
  br label %851

; <label>:851:                                    ; preds = %850
  %852 = load i32, i32* @x.1
  %853 = load i32, i32* @y.2
  %854 = sub i32 0, 1
  %855 = add i32 %852, %854
  %856 = sub i32 %852, 1
  %857 = mul i32 %852, %855
  %858 = urem i32 %857, 2
  %859 = icmp eq i32 %858, 0
  %860 = icmp slt i32 %853, 10
  %861 = xor i1 %859, true
  %862 = xor i1 %860, true
  %863 = xor i1 false, true
  %864 = and i1 %861, false
  %865 = and i1 %859, %863
  %866 = and i1 %862, false
  %867 = and i1 %860, %863
  %868 = or i1 %864, %865
  %869 = or i1 %866, %867
  %870 = xor i1 %868, %869
  %871 = or i1 %861, %862
  %872 = xor i1 %871, true
  %873 = or i1 false, %863
  %874 = and i1 %872, %873
  %875 = or i1 %870, %874
  %876 = or i1 %859, %860
  br i1 %875, label %877, label %988

; <label>:877:                                    ; preds = %851, %988
  %878 = load i64, i64* %31, align 8
  %879 = add i64 %878, -6100252981582358736
  %880 = add i64 %879, 1
  %881 = sub i64 %880, -6100252981582358736
  %882 = add nsw i64 %878, 1
  store i64 %881, i64* %31, align 8
  %883 = load i32, i32* @x.1
  %884 = load i32, i32* @y.2
  %885 = sub i32 0, 1
  %886 = add i32 %883, %885
  %887 = sub i32 %883, 1
  %888 = mul i32 %883, %886
  %889 = urem i32 %888, 2
  %890 = icmp eq i32 %889, 0
  %891 = icmp slt i32 %884, 10
  %892 = and i1 %890, %891
  %893 = xor i1 %890, %891
  %894 = or i1 %892, %893
  %895 = or i1 %890, %891
  br i1 %894, label %896, label %988

; <label>:896:                                    ; preds = %877
  br label %544

; <label>:897:                                    ; preds = %544
  store i32 0, i32* %1, align 4
  call void @_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_ED2Ev(%struct.SegTreeLazyProportional* %12) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %11) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %10) #3
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %3) #3
  %898 = load i32, i32* %1, align 4
  ret i32 %898

; <label>:899:                                    ; preds = %792, %719, %707, %539, %445, %444
  call void @_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_ED2Ev(%struct.SegTreeLazyProportional* %12) #3
  br label %900

; <label>:900:                                    ; preds = %899, %400, %231
  %901 = load i32, i32* @x.1
  %902 = load i32, i32* @y.2
  %903 = sub i32 0, 1
  %904 = add i32 %901, %903
  %905 = sub i32 %901, 1
  %906 = mul i32 %901, %904
  %907 = urem i32 %906, 2
  %908 = icmp eq i32 %907, 0
  %909 = icmp slt i32 %902, 10
  %910 = and i1 %908, %909
  %911 = xor i1 %908, %909
  %912 = or i1 %910, %911
  %913 = or i1 %908, %909
  br i1 %912, label %914, label %1012

; <label>:914:                                    ; preds = %900, %1012
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %11) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %10) #3
  %915 = load i32, i32* @x.1
  %916 = load i32, i32* @y.2
  %917 = sub i32 0, 1
  %918 = add i32 %915, %917
  %919 = sub i32 %915, 1
  %920 = mul i32 %915, %918
  %921 = urem i32 %920, 2
  %922 = icmp eq i32 %921, 0
  %923 = icmp slt i32 %916, 10
  %924 = and i1 %922, %923
  %925 = xor i1 %922, %923
  %926 = or i1 %924, %925
  %927 = or i1 %922, %923
  br i1 %926, label %928, label %1012

; <label>:928:                                    ; preds = %914
  br label %929

; <label>:929:                                    ; preds = %928, %227
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %3) #3
  br label %930

; <label>:930:                                    ; preds = %929
  %931 = load i8*, i8** %4, align 8
  %932 = load i32, i32* %5, align 4
  %933 = insertvalue { i8*, i32 } undef, i8* %931, 0
  %934 = insertvalue { i8*, i32 } %933, i32 %932, 1
  resume { i8*, i32 } %934

; <label>:935:                                    ; preds = %79, %53
  br label %79

; <label>:936:                                    ; preds = %139, %113
  br label %139

; <label>:937:                                    ; preds = %194, %180
  %938 = load i64, i64* %23, align 8
  %939 = sub i64 0, %938
  %940 = add i64 0, %939
  %941 = sub i64 0, %938
  %942 = sub i64 %940, 781294375912622992
  %943 = add i64 %942, 1
  %944 = add i64 %943, 781294375912622992
  %945 = add i64 %940, 1
  %946 = shl i64 %938, 1
  %947 = shl i64 %938, 1
  %948 = shl i64 %938, 1
  %949 = sub i64 %938, -3611140674781921512
  %950 = sub i64 %949, 1
  %951 = add i64 %950, -3611140674781921512
  %952 = sub i64 %938, 1
  %953 = mul i64 %951, 1
  %954 = sub i64 %938, -4826192400854798725
  %955 = sub i64 %954, 1
  %956 = add i64 %955, -4826192400854798725
  %957 = sub i64 %938, 1
  %958 = mul i64 %956, 1
  %959 = sub i64 %938, -8092822369620627942
  %960 = add i64 %959, 1
  %961 = add i64 %960, -8092822369620627942
  %962 = add nsw i64 %938, 1
  store i64 %961, i64* %23, align 8
  br label %194

; <label>:963:                                    ; preds = %266, %239
  %964 = landingpad { i8*, i32 }
          cleanup
  %965 = extractvalue { i8*, i32 } %964, 0
  store i8* %965, i8** %4, align 8
  %966 = extractvalue { i8*, i32 } %964, 1
  store i32 %966, i32* %5, align 4
  br label %266

; <label>:967:                                    ; preds = %340, %313
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %21) #3
  br label %340

; <label>:968:                                    ; preds = %382, %367
  call void @_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_xEED2Ev(%"class.std::function.10"* %19) #3
  br label %382

; <label>:969:                                    ; preds = %427, %401
  %970 = landingpad { i8*, i32 }
          cleanup
  %971 = extractvalue { i8*, i32 } %970, 0
  store i8* %971, i8** %4, align 8
  %972 = extractvalue { i8*, i32 } %970, 1
  store i32 %972, i32* %5, align 4
  br label %427

; <label>:973:                                    ; preds = %476, %449
  %974 = landingpad { i8*, i32 }
          cleanup
  %975 = extractvalue { i8*, i32 } %974, 0
  store i8* %975, i8** %4, align 8
  %976 = extractvalue { i8*, i32 } %974, 1
  store i32 %976, i32* %5, align 4
  br label %476

; <label>:977:                                    ; preds = %520, %494
  %978 = landingpad { i8*, i32 }
          cleanup
  %979 = extractvalue { i8*, i32 } %978, 0
  store i8* %979, i8** %4, align 8
  %980 = extractvalue { i8*, i32 } %978, 1
  store i32 %980, i32* %5, align 4
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %29) #3
  br label %520

; <label>:981:                                    ; preds = %564, %550
  %982 = load i64, i64* %32, align 8
  %983 = icmp eq i64 %982, 1
  br label %564

; <label>:984:                                    ; preds = %638, %611
  br label %638

; <label>:985:                                    ; preds = %680, %653
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %40) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %35) #3
  br label %680

; <label>:986:                                    ; preds = %738, %723
  br label %738

; <label>:987:                                    ; preds = %824, %797
  br label %824

; <label>:988:                                    ; preds = %877, %851
  %989 = load i64, i64* %31, align 8
  %990 = shl i64 %989, 1
  %991 = shl i64 %989, 1
  %992 = add i64 0, -6974501185076214081
  %993 = sub i64 %992, %989
  %994 = sub i64 %993, -6974501185076214081
  %995 = sub i64 0, %989
  %996 = sub i64 0, 1
  %997 = sub i64 %994, %996
  %998 = add i64 %994, 1
  %999 = sub i64 0, %989
  %1000 = add i64 0, %999
  %1001 = sub i64 0, %989
  %1002 = sub i64 %1000, 2609130366055122905
  %1003 = add i64 %1002, 1
  %1004 = add i64 %1003, 2609130366055122905
  %1005 = add i64 %1000, 1
  %1006 = shl i64 %989, 1
  %1007 = shl i64 %989, 1
  %1008 = add i64 %989, -5215616282777471099
  %1009 = add i64 %1008, 1
  %1010 = sub i64 %1009, -5215616282777471099
  %1011 = add nsw i64 %989, 1
  store i64 %1010, i64* %31, align 8
  br label %877

; <label>:1012:                                   ; preds = %914, %900
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %11) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %10) #3
  br label %914
}

declare %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"*, %"class.std::basic_ostream"*) #1

declare zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) #1

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #2

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* dereferenceable(280), %"class.std::__cxx11::basic_string"* dereferenceable(32)) #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) #1

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt3setIcSt4lessIcESaIcEEC2Ev(%"class.std::set"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %2, align 8
  %3 = load %"class.std::set"*, %"class.std::set"** %2, align 8
  %4 = getelementptr inbounds %"class.std::set", %"class.std::set"* %3, i32 0, i32 0
  invoke void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEEC2Ev(%"class.std::_Rb_tree"* %4)
          to label %5 unwind label %59

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* @x.3
  %7 = load i32, i32* @y.4
  %8 = sub i32 %6, -120460289
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -120460289
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %7, 10
  %16 = xor i1 %14, true
  %17 = xor i1 %15, true
  %18 = xor i1 true, true
  %19 = and i1 %16, true
  %20 = and i1 %14, %18
  %21 = and i1 %17, true
  %22 = and i1 %15, %18
  %23 = or i1 %19, %20
  %24 = or i1 %21, %22
  %25 = xor i1 %23, %24
  %26 = or i1 %16, %17
  %27 = xor i1 %26, true
  %28 = or i1 true, %18
  %29 = and i1 %27, %28
  %30 = or i1 %25, %29
  %31 = or i1 %14, %15
  br i1 %30, label %32, label %62

; <label>:32:                                     ; preds = %5, %62
  %33 = load i32, i32* @x.3
  %34 = load i32, i32* @y.4
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  br i1 %56, label %58, label %62

; <label>:58:                                     ; preds = %32
  ret void

; <label>:59:                                     ; preds = %1
  %60 = landingpad { i8*, i32 }
          catch i8* null
  %61 = extractvalue { i8*, i32 } %60, 0
  call void @__clang_call_terminate(i8* %61) #12
  unreachable

; <label>:62:                                     ; preds = %32, %5
  br label %32
}

; Function Attrs: noinline uwtable
define internal void @"_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EEC2IZ4mainE3$_0vvEET_"(%"class.std::function"*) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %class.anon, align 1
  %3 = alloca %"class.std::function"*, align 8
  %4 = alloca i8*
  %5 = alloca i32
  store %"class.std::function"* %0, %"class.std::function"** %3, align 8
  %6 = load %"class.std::function"*, %"class.std::function"** %3, align 8
  %7 = bitcast %"class.std::function"* %6 to %"struct.std::_Maybe_unary_or_binary_function"*
  %8 = bitcast %"class.std::function"* %6 to %"class.std::_Function_base"*
  call void @_ZNSt14_Function_baseC2Ev(%"class.std::_Function_base"* %8)
  %9 = invoke zeroext i1 @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_0E21_M_not_empty_functionIS1_EEbRKT_"(%class.anon* dereferenceable(1) %2)
          to label %10 unwind label %19

; <label>:10:                                     ; preds = %1
  br i1 %9, label %11, label %24

; <label>:11:                                     ; preds = %10
  %12 = bitcast %"class.std::function"* %6 to %"class.std::_Function_base"*
  %13 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %12, i32 0, i32 0
  %14 = call dereferenceable(1) %class.anon* @"_ZSt4moveIRZ4mainE3$_0EONSt16remove_referenceIT_E4typeEOS3_"(%class.anon* dereferenceable(1) %2) #3
  invoke void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_0E15_M_init_functorERSt9_Any_dataOS1_"(%"union.std::_Any_data"* dereferenceable(16) %13, %class.anon* dereferenceable(1) %14)
          to label %15 unwind label %19

; <label>:15:                                     ; preds = %11
  %16 = getelementptr inbounds %"class.std::function", %"class.std::function"* %6, i32 0, i32 1
  store void (%"class.std::set"*, %"union.std::_Any_data"*, %"class.std::set"*, %"class.std::set"*)* @"_ZNSt17_Function_handlerIFSt3setIcSt4lessIcESaIcEES4_S4_EZ4mainE3$_0E9_M_invokeERKSt9_Any_dataOS4_SB_", void (%"class.std::set"*, %"union.std::_Any_data"*, %"class.std::set"*, %"class.std::set"*)** %16, align 8
  %17 = bitcast %"class.std::function"* %6 to %"class.std::_Function_base"*
  %18 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %17, i32 0, i32 1
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_0E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation", i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %18, align 8
  br label %24

; <label>:19:                                     ; preds = %11, %1
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = extractvalue { i8*, i32 } %20, 0
  store i8* %21, i8** %4, align 8
  %22 = extractvalue { i8*, i32 } %20, 1
  store i32 %22, i32* %5, align 4
  %23 = bitcast %"class.std::function"* %6 to %"class.std::_Function_base"*
  call void @_ZNSt14_Function_baseD2Ev(%"class.std::_Function_base"* %23) #3
  br label %78

; <label>:24:                                     ; preds = %15, %10
  %25 = load i32, i32* @x.5
  %26 = load i32, i32* @y.6
  %27 = add i32 %25, -98088045
  %28 = sub i32 %27, 1
  %29 = sub i32 %28, -98088045
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 true, true
  %38 = and i1 %35, true
  %39 = and i1 %33, %37
  %40 = and i1 %36, true
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 true, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  br i1 %49, label %51, label %83

; <label>:51:                                     ; preds = %24, %83
  %52 = load i32, i32* @x.5
  %53 = load i32, i32* @y.6
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  br i1 %75, label %77, label %83

; <label>:77:                                     ; preds = %51
  ret void

; <label>:78:                                     ; preds = %19
  %79 = load i8*, i8** %4, align 8
  %80 = load i32, i32* %5, align 4
  %81 = insertvalue { i8*, i32 } undef, i8* %79, 0
  %82 = insertvalue { i8*, i32 } %81, i32 %80, 1
  resume { i8*, i32 } %82

; <label>:83:                                     ; preds = %51, %24
  br label %51
}

; Function Attrs: noinline uwtable
define internal void @"_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EEC2IZ4mainE3$_1vvEET_"(%"class.std::function"*) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.7
  %3 = load i32, i32* @y.8
  %4 = sub i32 %2, 557039203
  %5 = sub i32 %4, 1
  %6 = add i32 %5, 557039203
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %131

; <label>:16:                                     ; preds = %1, %131
  %17 = alloca %class.anon.0, align 1
  %18 = alloca %"class.std::function"*, align 8
  %19 = alloca i8*
  %20 = alloca i32
  store %"class.std::function"* %0, %"class.std::function"** %18, align 8
  %21 = load %"class.std::function"*, %"class.std::function"** %18, align 8
  %22 = bitcast %"class.std::function"* %21 to %"struct.std::_Maybe_unary_or_binary_function"*
  %23 = bitcast %"class.std::function"* %21 to %"class.std::_Function_base"*
  call void @_ZNSt14_Function_baseC2Ev(%"class.std::_Function_base"* %23)
  %24 = load i32, i32* @x.7
  %25 = load i32, i32* @y.8
  %26 = add i32 %24, -812237040
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, -812237040
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 false, true
  %37 = and i1 %34, false
  %38 = and i1 %32, %36
  %39 = and i1 %35, false
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 false, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  br i1 %48, label %50, label %131

; <label>:50:                                     ; preds = %16
  %51 = invoke zeroext i1 @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E21_M_not_empty_functionIS1_EEbRKT_"(%class.anon.0* dereferenceable(1) %17)
          to label %52 unwind label %61

; <label>:52:                                     ; preds = %50
  br i1 %51, label %53, label %66

; <label>:53:                                     ; preds = %52
  %54 = bitcast %"class.std::function"* %21 to %"class.std::_Function_base"*
  %55 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %54, i32 0, i32 0
  %56 = call dereferenceable(1) %class.anon.0* @"_ZSt4moveIRZ4mainE3$_1EONSt16remove_referenceIT_E4typeEOS3_"(%class.anon.0* dereferenceable(1) %17) #3
  invoke void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E15_M_init_functorERSt9_Any_dataOS1_"(%"union.std::_Any_data"* dereferenceable(16) %55, %class.anon.0* dereferenceable(1) %56)
          to label %57 unwind label %61

; <label>:57:                                     ; preds = %53
  %58 = getelementptr inbounds %"class.std::function", %"class.std::function"* %21, i32 0, i32 1
  store void (%"class.std::set"*, %"union.std::_Any_data"*, %"class.std::set"*, %"class.std::set"*)* @"_ZNSt17_Function_handlerIFSt3setIcSt4lessIcESaIcEES4_S4_EZ4mainE3$_1E9_M_invokeERKSt9_Any_dataOS4_SB_", void (%"class.std::set"*, %"union.std::_Any_data"*, %"class.std::set"*, %"class.std::set"*)** %58, align 8
  %59 = bitcast %"class.std::function"* %21 to %"class.std::_Function_base"*
  %60 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %59, i32 0, i32 1
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation", i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %60, align 8
  br label %66

; <label>:61:                                     ; preds = %53, %50
  %62 = landingpad { i8*, i32 }
          cleanup
  %63 = extractvalue { i8*, i32 } %62, 0
  store i8* %63, i8** %19, align 8
  %64 = extractvalue { i8*, i32 } %62, 1
  store i32 %64, i32* %20, align 4
  %65 = bitcast %"class.std::function"* %21 to %"class.std::_Function_base"*
  call void @_ZNSt14_Function_baseD2Ev(%"class.std::_Function_base"* %65) #3
  br label %96

; <label>:66:                                     ; preds = %57, %52
  %67 = load i32, i32* @x.7
  %68 = load i32, i32* @y.8
  %69 = sub i32 0, 1
  %70 = add i32 %67, %69
  %71 = sub i32 %67, 1
  %72 = mul i32 %67, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %68, 10
  %76 = and i1 %74, %75
  %77 = xor i1 %74, %75
  %78 = or i1 %76, %77
  %79 = or i1 %74, %75
  br i1 %78, label %80, label %139

; <label>:80:                                     ; preds = %66, %139
  %81 = load i32, i32* @x.7
  %82 = load i32, i32* @y.8
  %83 = sub i32 %81, 1972584641
  %84 = sub i32 %83, 1
  %85 = add i32 %84, 1972584641
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  br i1 %93, label %95, label %139

; <label>:95:                                     ; preds = %80
  ret void

; <label>:96:                                     ; preds = %61
  %97 = load i32, i32* @x.7
  %98 = load i32, i32* @y.8
  %99 = add i32 %97, 1063806690
  %100 = sub i32 %99, 1
  %101 = sub i32 %100, 1063806690
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  br i1 %109, label %111, label %140

; <label>:111:                                    ; preds = %96, %140
  %112 = load i8*, i8** %19, align 8
  %113 = load i32, i32* %20, align 4
  %114 = insertvalue { i8*, i32 } undef, i8* %112, 0
  %115 = insertvalue { i8*, i32 } %114, i32 %113, 1
  %116 = load i32, i32* @x.7
  %117 = load i32, i32* @y.8
  %118 = add i32 %116, -706262404
  %119 = sub i32 %118, 1
  %120 = sub i32 %119, -706262404
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = and i1 %124, %125
  %127 = xor i1 %124, %125
  %128 = or i1 %126, %127
  %129 = or i1 %124, %125
  br i1 %128, label %130, label %140

; <label>:130:                                    ; preds = %111
  resume { i8*, i32 } %115

; <label>:131:                                    ; preds = %16, %1
  %132 = alloca %class.anon.0, align 1
  %133 = alloca %"class.std::function"*, align 8
  %134 = alloca i8*
  %135 = alloca i32
  store %"class.std::function"* %0, %"class.std::function"** %133, align 8
  %136 = load %"class.std::function"*, %"class.std::function"** %133, align 8
  %137 = bitcast %"class.std::function"* %136 to %"struct.std::_Maybe_unary_or_binary_function"*
  %138 = bitcast %"class.std::function"* %136 to %"class.std::_Function_base"*
  call void @_ZNSt14_Function_baseC2Ev(%"class.std::_Function_base"* %138)
  br label %16

; <label>:139:                                    ; preds = %80, %66
  br label %80

; <label>:140:                                    ; preds = %111, %96
  %141 = load i8*, i8** %19, align 8
  %142 = load i32, i32* %20, align 4
  %143 = insertvalue { i8*, i32 } undef, i8* %141, 0
  %144 = insertvalue { i8*, i32 } %143, i32 %142, 1
  br label %111
}

; Function Attrs: noinline uwtable
define internal void @"_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EEC2IZ4mainE3$_2vvEET_"(%"class.std::function"*) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.9
  %3 = load i32, i32* @y.10
  %4 = add i32 %2, 1895134566
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 1895134566
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %84

; <label>:28:                                     ; preds = %1, %84
  %29 = alloca %class.anon.2, align 1
  %30 = alloca %"class.std::function"*, align 8
  %31 = alloca i8*
  %32 = alloca i32
  store %"class.std::function"* %0, %"class.std::function"** %30, align 8
  %33 = load %"class.std::function"*, %"class.std::function"** %30, align 8
  %34 = bitcast %"class.std::function"* %33 to %"struct.std::_Maybe_unary_or_binary_function"*
  %35 = bitcast %"class.std::function"* %33 to %"class.std::_Function_base"*
  call void @_ZNSt14_Function_baseC2Ev(%"class.std::_Function_base"* %35)
  %36 = load i32, i32* @x.9
  %37 = load i32, i32* @y.10
  %38 = sub i32 %36, 1329304426
  %39 = sub i32 %38, 1
  %40 = add i32 %39, 1329304426
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  br i1 %60, label %62, label %84

; <label>:62:                                     ; preds = %28
  %63 = invoke zeroext i1 @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E21_M_not_empty_functionIS1_EEbRKT_"(%class.anon.2* dereferenceable(1) %29)
          to label %64 unwind label %73

; <label>:64:                                     ; preds = %62
  br i1 %63, label %65, label %78

; <label>:65:                                     ; preds = %64
  %66 = bitcast %"class.std::function"* %33 to %"class.std::_Function_base"*
  %67 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %66, i32 0, i32 0
  %68 = call dereferenceable(1) %class.anon.2* @"_ZSt4moveIRZ4mainE3$_2EONSt16remove_referenceIT_E4typeEOS3_"(%class.anon.2* dereferenceable(1) %29) #3
  invoke void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E15_M_init_functorERSt9_Any_dataOS1_"(%"union.std::_Any_data"* dereferenceable(16) %67, %class.anon.2* dereferenceable(1) %68)
          to label %69 unwind label %73

; <label>:69:                                     ; preds = %65
  %70 = getelementptr inbounds %"class.std::function", %"class.std::function"* %33, i32 0, i32 1
  store void (%"class.std::set"*, %"union.std::_Any_data"*, %"class.std::set"*, %"class.std::set"*)* @"_ZNSt17_Function_handlerIFSt3setIcSt4lessIcESaIcEES4_S4_EZ4mainE3$_2E9_M_invokeERKSt9_Any_dataOS4_SB_", void (%"class.std::set"*, %"union.std::_Any_data"*, %"class.std::set"*, %"class.std::set"*)** %70, align 8
  %71 = bitcast %"class.std::function"* %33 to %"class.std::_Function_base"*
  %72 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %71, i32 0, i32 1
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation", i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %72, align 8
  br label %78

; <label>:73:                                     ; preds = %65, %62
  %74 = landingpad { i8*, i32 }
          cleanup
  %75 = extractvalue { i8*, i32 } %74, 0
  store i8* %75, i8** %31, align 8
  %76 = extractvalue { i8*, i32 } %74, 1
  store i32 %76, i32* %32, align 4
  %77 = bitcast %"class.std::function"* %33 to %"class.std::_Function_base"*
  call void @_ZNSt14_Function_baseD2Ev(%"class.std::_Function_base"* %77) #3
  br label %79

; <label>:78:                                     ; preds = %69, %64
  ret void

; <label>:79:                                     ; preds = %73
  %80 = load i8*, i8** %31, align 8
  %81 = load i32, i32* %32, align 4
  %82 = insertvalue { i8*, i32 } undef, i8* %80, 0
  %83 = insertvalue { i8*, i32 } %82, i32 %81, 1
  resume { i8*, i32 } %83

; <label>:84:                                     ; preds = %28, %1
  %85 = alloca %class.anon.2, align 1
  %86 = alloca %"class.std::function"*, align 8
  %87 = alloca i8*
  %88 = alloca i32
  store %"class.std::function"* %0, %"class.std::function"** %86, align 8
  %89 = load %"class.std::function"*, %"class.std::function"** %86, align 8
  %90 = bitcast %"class.std::function"* %89 to %"struct.std::_Maybe_unary_or_binary_function"*
  %91 = bitcast %"class.std::function"* %89 to %"class.std::_Function_base"*
  call void @_ZNSt14_Function_baseC2Ev(%"class.std::_Function_base"* %91)
  br label %28
}

; Function Attrs: noinline uwtable
define internal void @"_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_xEEC2IZ4mainE3$_3vvEET_"(%"class.std::function.10"*) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.11
  %3 = load i32, i32* @y.12
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %110

; <label>:15:                                     ; preds = %1, %110
  %16 = alloca %class.anon.4, align 1
  %17 = alloca %"class.std::function.10"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"class.std::function.10"* %0, %"class.std::function.10"** %17, align 8
  %20 = load %"class.std::function.10"*, %"class.std::function.10"** %17, align 8
  %21 = bitcast %"class.std::function.10"* %20 to %"struct.std::_Maybe_unary_or_binary_function.11"*
  %22 = bitcast %"class.std::function.10"* %20 to %"class.std::_Function_base"*
  call void @_ZNSt14_Function_baseC2Ev(%"class.std::_Function_base"* %22)
  %23 = load i32, i32* @x.11
  %24 = load i32, i32* @y.12
  %25 = sub i32 0, 1
  %26 = add i32 %23, %25
  %27 = sub i32 %23, 1
  %28 = mul i32 %23, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %24, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 false, true
  %35 = and i1 %32, false
  %36 = and i1 %30, %34
  %37 = and i1 %33, false
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 false, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  br i1 %46, label %48, label %110

; <label>:48:                                     ; preds = %15
  %49 = invoke zeroext i1 @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_3E21_M_not_empty_functionIS1_EEbRKT_"(%class.anon.4* dereferenceable(1) %16)
          to label %50 unwind label %59

; <label>:50:                                     ; preds = %48
  br i1 %49, label %51, label %104

; <label>:51:                                     ; preds = %50
  %52 = bitcast %"class.std::function.10"* %20 to %"class.std::_Function_base"*
  %53 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %52, i32 0, i32 0
  %54 = call dereferenceable(1) %class.anon.4* @"_ZSt4moveIRZ4mainE3$_3EONSt16remove_referenceIT_E4typeEOS3_"(%class.anon.4* dereferenceable(1) %16) #3
  invoke void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_3E15_M_init_functorERSt9_Any_dataOS1_"(%"union.std::_Any_data"* dereferenceable(16) %53, %class.anon.4* dereferenceable(1) %54)
          to label %55 unwind label %59

; <label>:55:                                     ; preds = %51
  %56 = getelementptr inbounds %"class.std::function.10", %"class.std::function.10"* %20, i32 0, i32 1
  store void (%"class.std::set"*, %"union.std::_Any_data"*, %"class.std::set"*, i64*)* @"_ZNSt17_Function_handlerIFSt3setIcSt4lessIcESaIcEES4_xEZ4mainE3$_3E9_M_invokeERKSt9_Any_dataOS4_Ox", void (%"class.std::set"*, %"union.std::_Any_data"*, %"class.std::set"*, i64*)** %56, align 8
  %57 = bitcast %"class.std::function.10"* %20 to %"class.std::_Function_base"*
  %58 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %57, i32 0, i32 1
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_3E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation", i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %58, align 8
  br label %104

; <label>:59:                                     ; preds = %51, %48
  %60 = load i32, i32* @x.11
  %61 = load i32, i32* @y.12
  %62 = sub i32 0, 1
  %63 = add i32 %60, %62
  %64 = sub i32 %60, 1
  %65 = mul i32 %60, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %61, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  br i1 %71, label %73, label %118

; <label>:73:                                     ; preds = %59, %118
  %74 = landingpad { i8*, i32 }
          cleanup
  %75 = extractvalue { i8*, i32 } %74, 0
  store i8* %75, i8** %18, align 8
  %76 = extractvalue { i8*, i32 } %74, 1
  store i32 %76, i32* %19, align 4
  %77 = bitcast %"class.std::function.10"* %20 to %"class.std::_Function_base"*
  call void @_ZNSt14_Function_baseD2Ev(%"class.std::_Function_base"* %77) #3
  %78 = load i32, i32* @x.11
  %79 = load i32, i32* @y.12
  %80 = sub i32 0, 1
  %81 = add i32 %78, %80
  %82 = sub i32 %78, 1
  %83 = mul i32 %78, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %79, 10
  %87 = xor i1 %85, true
  %88 = xor i1 %86, true
  %89 = xor i1 false, true
  %90 = and i1 %87, false
  %91 = and i1 %85, %89
  %92 = and i1 %88, false
  %93 = and i1 %86, %89
  %94 = or i1 %90, %91
  %95 = or i1 %92, %93
  %96 = xor i1 %94, %95
  %97 = or i1 %87, %88
  %98 = xor i1 %97, true
  %99 = or i1 false, %89
  %100 = and i1 %98, %99
  %101 = or i1 %96, %100
  %102 = or i1 %85, %86
  br i1 %101, label %103, label %118

; <label>:103:                                    ; preds = %73
  br label %105

; <label>:104:                                    ; preds = %55, %50
  ret void

; <label>:105:                                    ; preds = %103
  %106 = load i8*, i8** %18, align 8
  %107 = load i32, i32* %19, align 4
  %108 = insertvalue { i8*, i32 } undef, i8* %106, 0
  %109 = insertvalue { i8*, i32 } %108, i32 %107, 1
  resume { i8*, i32 } %109

; <label>:110:                                    ; preds = %15, %1
  %111 = alloca %class.anon.4, align 1
  %112 = alloca %"class.std::function.10"*, align 8
  %113 = alloca i8*
  %114 = alloca i32
  store %"class.std::function.10"* %0, %"class.std::function.10"** %112, align 8
  %115 = load %"class.std::function.10"*, %"class.std::function.10"** %112, align 8
  %116 = bitcast %"class.std::function.10"* %115 to %"struct.std::_Maybe_unary_or_binary_function.11"*
  %117 = bitcast %"class.std::function.10"* %115 to %"class.std::_Function_base"*
  call void @_ZNSt14_Function_baseC2Ev(%"class.std::_Function_base"* %117)
  br label %15

; <label>:118:                                    ; preds = %73, %59
  %119 = landingpad { i8*, i32 }
          cleanup
  %120 = extractvalue { i8*, i32 } %119, 0
  store i8* %120, i8** %18, align 8
  %121 = extractvalue { i8*, i32 } %119, 1
  store i32 %121, i32* %19, align 4
  %122 = bitcast %"class.std::function.10"* %20 to %"class.std::_Function_base"*
  call void @_ZNSt14_Function_baseD2Ev(%"class.std::_Function_base"* %122) #3
  br label %73
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt3setIcSt4lessIcESaIcEEC2ERKS3_(%"class.std::set"*, %"class.std::set"* dereferenceable(48)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::set"*, align 8
  %4 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %3, align 8
  store %"class.std::set"* %1, %"class.std::set"** %4, align 8
  %5 = load %"class.std::set"*, %"class.std::set"** %3, align 8
  %6 = getelementptr inbounds %"class.std::set", %"class.std::set"* %5, i32 0, i32 0
  %7 = load %"class.std::set"*, %"class.std::set"** %4, align 8
  %8 = getelementptr inbounds %"class.std::set", %"class.std::set"* %7, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEEC2ERKS5_(%"class.std::_Rb_tree"* %6, %"class.std::_Rb_tree"* dereferenceable(48) %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_EC2ExSt8functionIFS4_S4_S4_EES8_S8_S6_IFS4_S4_xEES4_S4_(%struct.SegTreeLazyProportional*, i64, %"class.std::function"*, %"class.std::function"*, %"class.std::function"*, %"class.std::function.10"*, %"class.std::set"*, %"class.std::set"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %9 = load i32, i32* @x.15
  %10 = load i32, i32* @y.16
  %11 = sub i32 %9, -251697082
  %12 = sub i32 %11, 1
  %13 = add i32 %12, -251697082
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %10, 10
  %19 = xor i1 %17, true
  %20 = xor i1 %18, true
  %21 = xor i1 true, true
  %22 = and i1 %19, true
  %23 = and i1 %17, %21
  %24 = and i1 %20, true
  %25 = and i1 %18, %21
  %26 = or i1 %22, %23
  %27 = or i1 %24, %25
  %28 = xor i1 %26, %27
  %29 = or i1 %19, %20
  %30 = xor i1 %29, true
  %31 = or i1 true, %21
  %32 = and i1 %30, %31
  %33 = or i1 %28, %32
  %34 = or i1 %17, %18
  br i1 %33, label %35, label %455

; <label>:35:                                     ; preds = %8, %455
  %36 = alloca %struct.SegTreeLazyProportional*, align 8
  %37 = alloca i64, align 8
  %38 = alloca i8*
  %39 = alloca i32
  %40 = alloca %"class.std::allocator.13", align 1
  %41 = alloca %"class.std::allocator.13", align 1
  %42 = alloca i64, align 8
  store %struct.SegTreeLazyProportional* %0, %struct.SegTreeLazyProportional** %36, align 8
  store i64 %1, i64* %37, align 8
  %43 = load %struct.SegTreeLazyProportional*, %struct.SegTreeLazyProportional** %36, align 8
  %44 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %43, i32 0, i32 0
  store i64 0, i64* %44, align 8
  %45 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %43, i32 0, i32 1
  call void @_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EEC2ERKS6_(%"class.std::function"* %45, %"class.std::function"* dereferenceable(32) %2)
  %46 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %43, i32 0, i32 2
  %47 = load i32, i32* @x.15
  %48 = load i32, i32* @y.16
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  br i1 %70, label %72, label %455

; <label>:72:                                     ; preds = %35
  invoke void @_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EEC2ERKS6_(%"class.std::function"* %46, %"class.std::function"* dereferenceable(32) %3)
          to label %73 unwind label %194

; <label>:73:                                     ; preds = %72
  %74 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %43, i32 0, i32 3
  invoke void @_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EEC2ERKS6_(%"class.std::function"* %74, %"class.std::function"* dereferenceable(32) %4)
          to label %75 unwind label %198

; <label>:75:                                     ; preds = %73
  %76 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %43, i32 0, i32 4
  invoke void @_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_xEEC2ERKS6_(%"class.std::function.10"* %76, %"class.std::function.10"* dereferenceable(32) %5)
          to label %77 unwind label %202

; <label>:77:                                     ; preds = %75
  %78 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %43, i32 0, i32 5
  invoke void @_ZNSt3setIcSt4lessIcESaIcEEC2ERKS3_(%"class.std::set"* %78, %"class.std::set"* dereferenceable(48) %6)
          to label %79 unwind label %260

; <label>:79:                                     ; preds = %77
  %80 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %43, i32 0, i32 6
  invoke void @_ZNSt3setIcSt4lessIcESaIcEEC2ERKS3_(%"class.std::set"* %80, %"class.std::set"* dereferenceable(48) %7)
          to label %81 unwind label %264

; <label>:81:                                     ; preds = %79
  %82 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %43, i32 0, i32 7
  %83 = load i64, i64* %37, align 8
  %84 = mul nsw i64 %83, 4
  %85 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %43, i32 0, i32 5
  call void @_ZNSaISt3setIcSt4lessIcESaIcEEEC2Ev(%"class.std::allocator.13"* %40) #3
  invoke void @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EEC2EmRKS4_RKS5_(%"class.std::vector"* %82, i64 %84, %"class.std::set"* dereferenceable(48) %85, %"class.std::allocator.13"* dereferenceable(1) %40)
          to label %86 unwind label %268

; <label>:86:                                     ; preds = %81
  call void @_ZNSaISt3setIcSt4lessIcESaIcEEED2Ev(%"class.std::allocator.13"* %40) #3
  %87 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %43, i32 0, i32 8
  %88 = load i64, i64* %37, align 8
  %89 = mul nsw i64 %88, 4
  %90 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %43, i32 0, i32 6
  call void @_ZNSaISt3setIcSt4lessIcESaIcEEEC2Ev(%"class.std::allocator.13"* %41) #3
  invoke void @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EEC2EmRKS4_RKS5_(%"class.std::vector"* %87, i64 %89, %"class.std::set"* dereferenceable(48) %90, %"class.std::allocator.13"* dereferenceable(1) %41)
          to label %91 unwind label %314

; <label>:91:                                     ; preds = %86
  %92 = load i32, i32* @x.15
  %93 = load i32, i32* @y.16
  %94 = sub i32 %92, 2130563843
  %95 = sub i32 %94, 1
  %96 = add i32 %95, 2130563843
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 false, true
  %105 = and i1 %102, false
  %106 = and i1 %100, %104
  %107 = and i1 %103, false
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 false, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  br i1 %116, label %118, label %467

; <label>:118:                                    ; preds = %91, %467
  call void @_ZNSaISt3setIcSt4lessIcESaIcEEED2Ev(%"class.std::allocator.13"* %41) #3
  store i64 1, i64* %42, align 8
  %119 = load i32, i32* @x.15
  %120 = load i32, i32* @y.16
  %121 = add i32 %119, -2061157230
  %122 = sub i32 %121, 1
  %123 = sub i32 %122, -2061157230
  %124 = sub i32 %119, 1
  %125 = mul i32 %119, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %120, 10
  %129 = xor i1 %127, true
  %130 = xor i1 %128, true
  %131 = xor i1 true, true
  %132 = and i1 %129, true
  %133 = and i1 %127, %131
  %134 = and i1 %130, true
  %135 = and i1 %128, %131
  %136 = or i1 %132, %133
  %137 = or i1 %134, %135
  %138 = xor i1 %136, %137
  %139 = or i1 %129, %130
  %140 = xor i1 %139, true
  %141 = or i1 true, %131
  %142 = and i1 %140, %141
  %143 = or i1 %138, %142
  %144 = or i1 %127, %128
  br i1 %143, label %145, label %467

; <label>:145:                                    ; preds = %118
  br label %146

; <label>:146:                                    ; preds = %193, %145
  %147 = load i64, i64* %37, align 8
  %148 = load i64, i64* %42, align 8
  %149 = icmp sgt i64 %147, %148
  br i1 %149, label %150, label %360

; <label>:150:                                    ; preds = %146
  %151 = load i32, i32* @x.15
  %152 = load i32, i32* @y.16
  %153 = sub i32 0, 1
  %154 = add i32 %151, %153
  %155 = sub i32 %151, 1
  %156 = mul i32 %151, %154
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %152, 10
  %160 = and i1 %158, %159
  %161 = xor i1 %158, %159
  %162 = or i1 %160, %161
  %163 = or i1 %158, %159
  br i1 %162, label %164, label %468

; <label>:164:                                    ; preds = %150, %468
  %165 = load i64, i64* %42, align 8
  %166 = mul nsw i64 %165, 2
  store i64 %166, i64* %42, align 8
  %167 = load i32, i32* @x.15
  %168 = load i32, i32* @y.16
  %169 = add i32 %167, 367942002
  %170 = sub i32 %169, 1
  %171 = sub i32 %170, 367942002
  %172 = sub i32 %167, 1
  %173 = mul i32 %167, %171
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %168, 10
  %177 = xor i1 %175, true
  %178 = xor i1 %176, true
  %179 = xor i1 false, true
  %180 = and i1 %177, false
  %181 = and i1 %175, %179
  %182 = and i1 %178, false
  %183 = and i1 %176, %179
  %184 = or i1 %180, %181
  %185 = or i1 %182, %183
  %186 = xor i1 %184, %185
  %187 = or i1 %177, %178
  %188 = xor i1 %187, true
  %189 = or i1 false, %179
  %190 = and i1 %188, %189
  %191 = or i1 %186, %190
  %192 = or i1 %175, %176
  br i1 %191, label %193, label %468

; <label>:193:                                    ; preds = %164
  br label %146

; <label>:194:                                    ; preds = %72
  %195 = landingpad { i8*, i32 }
          cleanup
  %196 = extractvalue { i8*, i32 } %195, 0
  store i8* %196, i8** %38, align 8
  %197 = extractvalue { i8*, i32 } %195, 1
  store i32 %197, i32* %39, align 4
  br label %408

; <label>:198:                                    ; preds = %73
  %199 = landingpad { i8*, i32 }
          cleanup
  %200 = extractvalue { i8*, i32 } %199, 0
  store i8* %200, i8** %38, align 8
  %201 = extractvalue { i8*, i32 } %199, 1
  store i32 %201, i32* %39, align 4
  br label %407

; <label>:202:                                    ; preds = %75
  %203 = load i32, i32* @x.15
  %204 = load i32, i32* @y.16
  %205 = sub i32 %203, 1562279541
  %206 = sub i32 %205, 1
  %207 = add i32 %206, 1562279541
  %208 = sub i32 %203, 1
  %209 = mul i32 %203, %207
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %204, 10
  %213 = xor i1 %211, true
  %214 = xor i1 %212, true
  %215 = xor i1 true, true
  %216 = and i1 %213, true
  %217 = and i1 %211, %215
  %218 = and i1 %214, true
  %219 = and i1 %212, %215
  %220 = or i1 %216, %217
  %221 = or i1 %218, %219
  %222 = xor i1 %220, %221
  %223 = or i1 %213, %214
  %224 = xor i1 %223, true
  %225 = or i1 true, %215
  %226 = and i1 %224, %225
  %227 = or i1 %222, %226
  %228 = or i1 %211, %212
  br i1 %227, label %229, label %481

; <label>:229:                                    ; preds = %202, %481
  %230 = landingpad { i8*, i32 }
          cleanup
  %231 = extractvalue { i8*, i32 } %230, 0
  store i8* %231, i8** %38, align 8
  %232 = extractvalue { i8*, i32 } %230, 1
  store i32 %232, i32* %39, align 4
  %233 = load i32, i32* @x.15
  %234 = load i32, i32* @y.16
  %235 = sub i32 %233, 110780818
  %236 = sub i32 %235, 1
  %237 = add i32 %236, 110780818
  %238 = sub i32 %233, 1
  %239 = mul i32 %233, %237
  %240 = urem i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %234, 10
  %243 = xor i1 %241, true
  %244 = xor i1 %242, true
  %245 = xor i1 true, true
  %246 = and i1 %243, true
  %247 = and i1 %241, %245
  %248 = and i1 %244, true
  %249 = and i1 %242, %245
  %250 = or i1 %246, %247
  %251 = or i1 %248, %249
  %252 = xor i1 %250, %251
  %253 = or i1 %243, %244
  %254 = xor i1 %253, true
  %255 = or i1 true, %245
  %256 = and i1 %254, %255
  %257 = or i1 %252, %256
  %258 = or i1 %241, %242
  br i1 %257, label %259, label %481

; <label>:259:                                    ; preds = %229
  br label %366

; <label>:260:                                    ; preds = %77
  %261 = landingpad { i8*, i32 }
          cleanup
  %262 = extractvalue { i8*, i32 } %261, 0
  store i8* %262, i8** %38, align 8
  %263 = extractvalue { i8*, i32 } %261, 1
  store i32 %263, i32* %39, align 4
  br label %365

; <label>:264:                                    ; preds = %79
  %265 = landingpad { i8*, i32 }
          cleanup
  %266 = extractvalue { i8*, i32 } %265, 0
  store i8* %266, i8** %38, align 8
  %267 = extractvalue { i8*, i32 } %265, 1
  store i32 %267, i32* %39, align 4
  br label %364

; <label>:268:                                    ; preds = %81
  %269 = load i32, i32* @x.15
  %270 = load i32, i32* @y.16
  %271 = add i32 %269, 1985983040
  %272 = sub i32 %271, 1
  %273 = sub i32 %272, 1985983040
  %274 = sub i32 %269, 1
  %275 = mul i32 %269, %273
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %270, 10
  %279 = xor i1 %277, true
  %280 = xor i1 %278, true
  %281 = xor i1 true, true
  %282 = and i1 %279, true
  %283 = and i1 %277, %281
  %284 = and i1 %280, true
  %285 = and i1 %278, %281
  %286 = or i1 %282, %283
  %287 = or i1 %284, %285
  %288 = xor i1 %286, %287
  %289 = or i1 %279, %280
  %290 = xor i1 %289, true
  %291 = or i1 true, %281
  %292 = and i1 %290, %291
  %293 = or i1 %288, %292
  %294 = or i1 %277, %278
  br i1 %293, label %295, label %485

; <label>:295:                                    ; preds = %268, %485
  %296 = landingpad { i8*, i32 }
          cleanup
  %297 = extractvalue { i8*, i32 } %296, 0
  store i8* %297, i8** %38, align 8
  %298 = extractvalue { i8*, i32 } %296, 1
  store i32 %298, i32* %39, align 4
  call void @_ZNSaISt3setIcSt4lessIcESaIcEEED2Ev(%"class.std::allocator.13"* %40) #3
  %299 = load i32, i32* @x.15
  %300 = load i32, i32* @y.16
  %301 = add i32 %299, -362910896
  %302 = sub i32 %301, 1
  %303 = sub i32 %302, -362910896
  %304 = sub i32 %299, 1
  %305 = mul i32 %299, %303
  %306 = urem i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %300, 10
  %309 = and i1 %307, %308
  %310 = xor i1 %307, %308
  %311 = or i1 %309, %310
  %312 = or i1 %307, %308
  br i1 %311, label %313, label %485

; <label>:313:                                    ; preds = %295
  br label %363

; <label>:314:                                    ; preds = %86
  %315 = load i32, i32* @x.15
  %316 = load i32, i32* @y.16
  %317 = sub i32 %315, 481547601
  %318 = sub i32 %317, 1
  %319 = add i32 %318, 481547601
  %320 = sub i32 %315, 1
  %321 = mul i32 %315, %319
  %322 = urem i32 %321, 2
  %323 = icmp eq i32 %322, 0
  %324 = icmp slt i32 %316, 10
  %325 = xor i1 %323, true
  %326 = xor i1 %324, true
  %327 = xor i1 true, true
  %328 = and i1 %325, true
  %329 = and i1 %323, %327
  %330 = and i1 %326, true
  %331 = and i1 %324, %327
  %332 = or i1 %328, %329
  %333 = or i1 %330, %331
  %334 = xor i1 %332, %333
  %335 = or i1 %325, %326
  %336 = xor i1 %335, true
  %337 = or i1 true, %327
  %338 = and i1 %336, %337
  %339 = or i1 %334, %338
  %340 = or i1 %323, %324
  br i1 %339, label %341, label %489

; <label>:341:                                    ; preds = %314, %489
  %342 = landingpad { i8*, i32 }
          cleanup
  %343 = extractvalue { i8*, i32 } %342, 0
  store i8* %343, i8** %38, align 8
  %344 = extractvalue { i8*, i32 } %342, 1
  store i32 %344, i32* %39, align 4
  call void @_ZNSaISt3setIcSt4lessIcESaIcEEED2Ev(%"class.std::allocator.13"* %41) #3
  call void @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EED2Ev(%"class.std::vector"* %82) #3
  %345 = load i32, i32* @x.15
  %346 = load i32, i32* @y.16
  %347 = sub i32 %345, -412337073
  %348 = sub i32 %347, 1
  %349 = add i32 %348, -412337073
  %350 = sub i32 %345, 1
  %351 = mul i32 %345, %349
  %352 = urem i32 %351, 2
  %353 = icmp eq i32 %352, 0
  %354 = icmp slt i32 %346, 10
  %355 = and i1 %353, %354
  %356 = xor i1 %353, %354
  %357 = or i1 %355, %356
  %358 = or i1 %353, %354
  br i1 %357, label %359, label %489

; <label>:359:                                    ; preds = %341
  br label %363

; <label>:360:                                    ; preds = %146
  %361 = load i64, i64* %42, align 8
  %362 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %43, i32 0, i32 0
  store i64 %361, i64* %362, align 8
  ret void

; <label>:363:                                    ; preds = %359, %313
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %80) #3
  br label %364

; <label>:364:                                    ; preds = %363, %264
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %78) #3
  br label %365

; <label>:365:                                    ; preds = %364, %260
  call void @_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_xEED2Ev(%"class.std::function.10"* %76) #3
  br label %366

; <label>:366:                                    ; preds = %365, %259
  %367 = load i32, i32* @x.15
  %368 = load i32, i32* @y.16
  %369 = sub i32 0, 1
  %370 = add i32 %367, %369
  %371 = sub i32 %367, 1
  %372 = mul i32 %367, %370
  %373 = urem i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %368, 10
  %376 = and i1 %374, %375
  %377 = xor i1 %374, %375
  %378 = or i1 %376, %377
  %379 = or i1 %374, %375
  br i1 %378, label %380, label %493

; <label>:380:                                    ; preds = %366, %493
  call void @_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EED2Ev(%"class.std::function"* %74) #3
  %381 = load i32, i32* @x.15
  %382 = load i32, i32* @y.16
  %383 = sub i32 0, 1
  %384 = add i32 %381, %383
  %385 = sub i32 %381, 1
  %386 = mul i32 %381, %384
  %387 = urem i32 %386, 2
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %382, 10
  %390 = xor i1 %388, true
  %391 = xor i1 %389, true
  %392 = xor i1 true, true
  %393 = and i1 %390, true
  %394 = and i1 %388, %392
  %395 = and i1 %391, true
  %396 = and i1 %389, %392
  %397 = or i1 %393, %394
  %398 = or i1 %395, %396
  %399 = xor i1 %397, %398
  %400 = or i1 %390, %391
  %401 = xor i1 %400, true
  %402 = or i1 true, %392
  %403 = and i1 %401, %402
  %404 = or i1 %399, %403
  %405 = or i1 %388, %389
  br i1 %404, label %406, label %493

; <label>:406:                                    ; preds = %380
  br label %407

; <label>:407:                                    ; preds = %406, %198
  call void @_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EED2Ev(%"class.std::function"* %46) #3
  br label %408

; <label>:408:                                    ; preds = %407, %194
  %409 = load i32, i32* @x.15
  %410 = load i32, i32* @y.16
  %411 = add i32 %409, 1373924712
  %412 = sub i32 %411, 1
  %413 = sub i32 %412, 1373924712
  %414 = sub i32 %409, 1
  %415 = mul i32 %409, %413
  %416 = urem i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = icmp slt i32 %410, 10
  %419 = xor i1 %417, true
  %420 = xor i1 %418, true
  %421 = xor i1 false, true
  %422 = and i1 %419, false
  %423 = and i1 %417, %421
  %424 = and i1 %420, false
  %425 = and i1 %418, %421
  %426 = or i1 %422, %423
  %427 = or i1 %424, %425
  %428 = xor i1 %426, %427
  %429 = or i1 %419, %420
  %430 = xor i1 %429, true
  %431 = or i1 false, %421
  %432 = and i1 %430, %431
  %433 = or i1 %428, %432
  %434 = or i1 %417, %418
  br i1 %433, label %435, label %494

; <label>:435:                                    ; preds = %408, %494
  call void @_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EED2Ev(%"class.std::function"* %45) #3
  %436 = load i32, i32* @x.15
  %437 = load i32, i32* @y.16
  %438 = sub i32 0, 1
  %439 = add i32 %436, %438
  %440 = sub i32 %436, 1
  %441 = mul i32 %436, %439
  %442 = urem i32 %441, 2
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %437, 10
  %445 = and i1 %443, %444
  %446 = xor i1 %443, %444
  %447 = or i1 %445, %446
  %448 = or i1 %443, %444
  br i1 %447, label %449, label %494

; <label>:449:                                    ; preds = %435
  br label %450

; <label>:450:                                    ; preds = %449
  %451 = load i8*, i8** %38, align 8
  %452 = load i32, i32* %39, align 4
  %453 = insertvalue { i8*, i32 } undef, i8* %451, 0
  %454 = insertvalue { i8*, i32 } %453, i32 %452, 1
  resume { i8*, i32 } %454

; <label>:455:                                    ; preds = %35, %8
  %456 = alloca %struct.SegTreeLazyProportional*, align 8
  %457 = alloca i64, align 8
  %458 = alloca i8*
  %459 = alloca i32
  %460 = alloca %"class.std::allocator.13", align 1
  %461 = alloca %"class.std::allocator.13", align 1
  %462 = alloca i64, align 8
  store %struct.SegTreeLazyProportional* %0, %struct.SegTreeLazyProportional** %456, align 8
  store i64 %1, i64* %457, align 8
  %463 = load %struct.SegTreeLazyProportional*, %struct.SegTreeLazyProportional** %456, align 8
  %464 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %463, i32 0, i32 0
  store i64 0, i64* %464, align 8
  %465 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %463, i32 0, i32 1
  call void @_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EEC2ERKS6_(%"class.std::function"* %465, %"class.std::function"* dereferenceable(32) %2)
  %466 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %463, i32 0, i32 2
  br label %35

; <label>:467:                                    ; preds = %118, %91
  call void @_ZNSaISt3setIcSt4lessIcESaIcEEED2Ev(%"class.std::allocator.13"* %41) #3
  store i64 1, i64* %42, align 8
  br label %118

; <label>:468:                                    ; preds = %164, %150
  %469 = load i64, i64* %42, align 8
  %470 = sub i64 %469, -3917755608470387754
  %471 = sub i64 %470, 2
  %472 = add i64 %471, -3917755608470387754
  %473 = sub i64 %469, 2
  %474 = mul i64 %472, 2
  %475 = sub i64 %469, -7874426551950579231
  %476 = sub i64 %475, 2
  %477 = add i64 %476, -7874426551950579231
  %478 = sub i64 %469, 2
  %479 = mul i64 %477, 2
  %480 = mul nsw i64 %469, 2
  store i64 %480, i64* %42, align 8
  br label %164

; <label>:481:                                    ; preds = %229, %202
  %482 = landingpad { i8*, i32 }
          cleanup
  %483 = extractvalue { i8*, i32 } %482, 0
  store i8* %483, i8** %38, align 8
  %484 = extractvalue { i8*, i32 } %482, 1
  store i32 %484, i32* %39, align 4
  br label %229

; <label>:485:                                    ; preds = %295, %268
  %486 = landingpad { i8*, i32 }
          cleanup
  %487 = extractvalue { i8*, i32 } %486, 0
  store i8* %487, i8** %38, align 8
  %488 = extractvalue { i8*, i32 } %486, 1
  store i32 %488, i32* %39, align 4
  call void @_ZNSaISt3setIcSt4lessIcESaIcEEED2Ev(%"class.std::allocator.13"* %40) #3
  br label %295

; <label>:489:                                    ; preds = %341, %314
  %490 = landingpad { i8*, i32 }
          cleanup
  %491 = extractvalue { i8*, i32 } %490, 0
  store i8* %491, i8** %38, align 8
  %492 = extractvalue { i8*, i32 } %490, 1
  store i32 %492, i32* %39, align 4
  call void @_ZNSaISt3setIcSt4lessIcESaIcEEED2Ev(%"class.std::allocator.13"* %41) #3
  call void @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EED2Ev(%"class.std::vector"* %82) #3
  br label %341

; <label>:493:                                    ; preds = %380, %366
  call void @_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EED2Ev(%"class.std::function"* %74) #3
  br label %380

; <label>:494:                                    ; preds = %435, %408
  call void @_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EED2Ev(%"class.std::function"* %45) #3
  br label %435
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %2, align 8
  %3 = load %"class.std::set"*, %"class.std::set"** %2, align 8
  %4 = getelementptr inbounds %"class.std::set", %"class.std::set"* %3, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEED2Ev(%"class.std::_Rb_tree"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_xEED2Ev(%"class.std::function.10"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.19
  %5 = load i32, i32* @y.20
  %6 = sub i32 %4, -1388252051
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1388252051
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -396452041, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %74
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -396452041, label %18
    i32 1673056818, label %38
    i32 776407074, label %69
    i32 632996104, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %74

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1673056818, i32 632996104
  store i32 %37, i32* %14
  br label %74

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::function.10"*, align 8
  store %"class.std::function.10"* %0, %"class.std::function.10"** %39, align 8
  %40 = load %"class.std::function.10"*, %"class.std::function.10"** %39, align 8
  %41 = bitcast %"class.std::function.10"* %40 to %"class.std::_Function_base"*
  call void @_ZNSt14_Function_baseD2Ev(%"class.std::_Function_base"* %41) #3
  %42 = load i32, i32* @x.19
  %43 = load i32, i32* @y.20
  %44 = sub i32 %42, -747636080
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -747636080
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 776407074, i32 632996104
  store i32 %68, i32* %14
  br label %74

; <label>:69:                                     ; preds = %15
  ret void

; <label>:70:                                     ; preds = %15
  %71 = alloca %"class.std::function.10"*, align 8
  store %"class.std::function.10"* %0, %"class.std::function.10"** %71, align 8
  %72 = load %"class.std::function.10"*, %"class.std::function.10"** %71, align 8
  %73 = bitcast %"class.std::function.10"* %72 to %"class.std::_Function_base"*
  call void @_ZNSt14_Function_baseD2Ev(%"class.std::_Function_base"* %73) #3
  store i32 1673056818, i32* %14
  br label %74

; <label>:74:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EED2Ev(%"class.std::function"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::function"*, align 8
  store %"class.std::function"* %0, %"class.std::function"** %2, align 8
  %3 = load %"class.std::function"*, %"class.std::function"** %2, align 8
  %4 = bitcast %"class.std::function"* %3 to %"class.std::_Function_base"*
  call void @_ZNSt14_Function_baseD2Ev(%"class.std::_Function_base"* %4) #3
  ret void
}

declare dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"*, i64) #1

; Function Attrs: nounwind
declare void @_ZNSaIcEC1Ev(%"class.std::allocator"*) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt3setIcSt4lessIcESaIcEEC2ESt16initializer_listIcERKS1_RKS2_(%"class.std::set"*, i8*, i64, %"struct.std::less"* dereferenceable(1), %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %"class.std::initializer_list", align 8
  %7 = alloca %"class.std::set"*, align 8
  %8 = alloca %"struct.std::less"*, align 8
  %9 = alloca %"class.std::allocator"*, align 8
  %10 = alloca %"class.std::allocator", align 1
  %11 = alloca i8*
  %12 = alloca i32
  %13 = bitcast %"class.std::initializer_list"* %6 to { i8*, i64 }*
  %14 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %13, i32 0, i32 0
  store i8* %1, i8** %14, align 8
  %15 = getelementptr inbounds { i8*, i64 }, { i8*, i64 }* %13, i32 0, i32 1
  store i64 %2, i64* %15, align 8
  store %"class.std::set"* %0, %"class.std::set"** %7, align 8
  store %"struct.std::less"* %3, %"struct.std::less"** %8, align 8
  store %"class.std::allocator"* %4, %"class.std::allocator"** %9, align 8
  %16 = load %"class.std::set"*, %"class.std::set"** %7, align 8
  %17 = getelementptr inbounds %"class.std::set", %"class.std::set"* %16, i32 0, i32 0
  %18 = load %"struct.std::less"*, %"struct.std::less"** %8, align 8
  %19 = load %"class.std::allocator"*, %"class.std::allocator"** %9, align 8
  call void @_ZNSaIcEC1ERKS_(%"class.std::allocator"* %10, %"class.std::allocator"* dereferenceable(1) %19) #3
  invoke void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEEC2ERKS3_RKS4_(%"class.std::_Rb_tree"* %17, %"struct.std::less"* dereferenceable(1) %18, %"class.std::allocator"* dereferenceable(1) %10)
          to label %20 unwind label %107

; <label>:20:                                     ; preds = %5
  %21 = load i32, i32* @x.23
  %22 = load i32, i32* @y.24
  %23 = sub i32 %21, 1103043968
  %24 = sub i32 %23, 1
  %25 = add i32 %24, 1103043968
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  br i1 %33, label %35, label %120

; <label>:35:                                     ; preds = %20, %120
  call void @_ZNSaIcED1Ev(%"class.std::allocator"* %10) #3
  %36 = getelementptr inbounds %"class.std::set", %"class.std::set"* %16, i32 0, i32 0
  %37 = call i8* @_ZNKSt16initializer_listIcE5beginEv(%"class.std::initializer_list"* %6) #3
  %38 = call i8* @_ZNKSt16initializer_listIcE3endEv(%"class.std::initializer_list"* %6) #3
  %39 = load i32, i32* @x.23
  %40 = load i32, i32* @y.24
  %41 = add i32 %39, -51896505
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, -51896505
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  br i1 %63, label %65, label %120

; <label>:65:                                     ; preds = %35
  invoke void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE16_M_insert_uniqueIPKcEEvT_S9_(%"class.std::_Rb_tree"* %36, i8* %37, i8* %38)
          to label %66 unwind label %111

; <label>:66:                                     ; preds = %65
  %67 = load i32, i32* @x.23
  %68 = load i32, i32* @y.24
  %69 = sub i32 0, 1
  %70 = add i32 %67, %69
  %71 = sub i32 %67, 1
  %72 = mul i32 %67, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %68, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 true, true
  %79 = and i1 %76, true
  %80 = and i1 %74, %78
  %81 = and i1 %77, true
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 true, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  br i1 %90, label %92, label %124

; <label>:92:                                     ; preds = %66, %124
  %93 = load i32, i32* @x.23
  %94 = load i32, i32* @y.24
  %95 = sub i32 0, 1
  %96 = add i32 %93, %95
  %97 = sub i32 %93, 1
  %98 = mul i32 %93, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %94, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  br i1 %104, label %106, label %124

; <label>:106:                                    ; preds = %92
  ret void

; <label>:107:                                    ; preds = %5
  %108 = landingpad { i8*, i32 }
          cleanup
  %109 = extractvalue { i8*, i32 } %108, 0
  store i8* %109, i8** %11, align 8
  %110 = extractvalue { i8*, i32 } %108, 1
  store i32 %110, i32* %12, align 4
  call void @_ZNSaIcED1Ev(%"class.std::allocator"* %10) #3
  br label %115

; <label>:111:                                    ; preds = %65
  %112 = landingpad { i8*, i32 }
          cleanup
  %113 = extractvalue { i8*, i32 } %112, 0
  store i8* %113, i8** %11, align 8
  %114 = extractvalue { i8*, i32 } %112, 1
  store i32 %114, i32* %12, align 4
  call void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEED2Ev(%"class.std::_Rb_tree"* %17) #3
  br label %115

; <label>:115:                                    ; preds = %111, %107
  %116 = load i8*, i8** %11, align 8
  %117 = load i32, i32* %12, align 4
  %118 = insertvalue { i8*, i32 } undef, i8* %116, 0
  %119 = insertvalue { i8*, i32 } %118, i32 %117, 1
  resume { i8*, i32 } %119

; <label>:120:                                    ; preds = %35, %20
  call void @_ZNSaIcED1Ev(%"class.std::allocator"* %10) #3
  %121 = getelementptr inbounds %"class.std::set", %"class.std::set"* %16, i32 0, i32 0
  %122 = call i8* @_ZNKSt16initializer_listIcE5beginEv(%"class.std::initializer_list"* %6) #3
  %123 = call i8* @_ZNKSt16initializer_listIcE3endEv(%"class.std::initializer_list"* %6) #3
  br label %35

; <label>:124:                                    ; preds = %92, %66
  br label %92
}

; Function Attrs: nounwind
declare void @_ZNSaIcED1Ev(%"class.std::allocator"*) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_E3setExS4_(%struct.SegTreeLazyProportional*, i64, %"class.std::set"*) #0 comdat align 2 {
  %4 = alloca %struct.SegTreeLazyProportional*, align 8
  %5 = alloca i64, align 8
  store %struct.SegTreeLazyProportional* %0, %struct.SegTreeLazyProportional** %4, align 8
  store i64 %1, i64* %5, align 8
  %6 = load %struct.SegTreeLazyProportional*, %struct.SegTreeLazyProportional** %4, align 8
  %7 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %6, i32 0, i32 7
  %8 = load i64, i64* %5, align 8
  %9 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %6, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %8, -2892348074669615419
  %12 = add i64 %11, %10
  %13 = sub i64 %12, -2892348074669615419
  %14 = add nsw i64 %8, %10
  %15 = add i64 %13, -7138015245657997818
  %16 = sub i64 %15, 1
  %17 = sub i64 %16, -7138015245657997818
  %18 = sub nsw i64 %13, 1
  %19 = call dereferenceable(48) %"class.std::set"* @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EEixEm(%"class.std::vector"* %7, i64 %17) #3
  %20 = call dereferenceable(48) %"class.std::set"* @_ZNSt3setIcSt4lessIcESaIcEEaSERKS3_(%"class.std::set"* %19, %"class.std::set"* dereferenceable(48) %2)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_E5buildEv(%struct.SegTreeLazyProportional*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.27
  %3 = load i32, i32* @y.28
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %158

; <label>:15:                                     ; preds = %1, %158
  %16 = alloca %struct.SegTreeLazyProportional*, align 8
  %17 = alloca i64, align 8
  %18 = alloca %"class.std::set", align 8
  %19 = alloca %"class.std::set", align 8
  %20 = alloca %"class.std::set", align 8
  %21 = alloca i8*
  %22 = alloca i32
  store %struct.SegTreeLazyProportional* %0, %struct.SegTreeLazyProportional** %16, align 8
  %23 = load %struct.SegTreeLazyProportional*, %struct.SegTreeLazyProportional** %16, align 8
  %24 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %23, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, 5003846573090803353
  %27 = sub i64 %26, 2
  %28 = sub i64 %27, 5003846573090803353
  %29 = sub nsw i64 %25, 2
  store i64 %28, i64* %17, align 8
  %30 = load i32, i32* @x.27
  %31 = load i32, i32* @y.28
  %32 = add i32 %30, -1509362383
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -1509362383
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  br i1 %54, label %56, label %158

; <label>:56:                                     ; preds = %15
  br label %57

; <label>:57:                                     ; preds = %83, %56
  %58 = load i64, i64* %17, align 8
  %59 = icmp sge i64 %58, 0
  br i1 %59, label %60, label %152

; <label>:60:                                     ; preds = %57
  %61 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %23, i32 0, i32 1
  %62 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %23, i32 0, i32 7
  %63 = load i64, i64* %17, align 8
  %64 = mul nsw i64 2, %63
  %65 = sub i64 0, 1
  %66 = sub i64 %64, %65
  %67 = add nsw i64 %64, 1
  %68 = call dereferenceable(48) %"class.std::set"* @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EEixEm(%"class.std::vector"* %62, i64 %66) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEEC2ERKS3_(%"class.std::set"* %19, %"class.std::set"* dereferenceable(48) %68)
  %69 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %23, i32 0, i32 7
  %70 = load i64, i64* %17, align 8
  %71 = mul nsw i64 2, %70
  %72 = sub i64 %71, 2374357258710998392
  %73 = add i64 %72, 2
  %74 = add i64 %73, 2374357258710998392
  %75 = add nsw i64 %71, 2
  %76 = call dereferenceable(48) %"class.std::set"* @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EEixEm(%"class.std::vector"* %69, i64 %74) #3
  invoke void @_ZNSt3setIcSt4lessIcESaIcEEC2ERKS3_(%"class.std::set"* %20, %"class.std::set"* dereferenceable(48) %76)
          to label %77 unwind label %89

; <label>:77:                                     ; preds = %60
  invoke void @_ZNKSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EEclES4_S4_(%"class.std::set"* sret %18, %"class.std::function"* %61, %"class.std::set"* %19, %"class.std::set"* %20)
          to label %78 unwind label %147

; <label>:78:                                     ; preds = %77
  %79 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %23, i32 0, i32 7
  %80 = load i64, i64* %17, align 8
  %81 = call dereferenceable(48) %"class.std::set"* @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EEixEm(%"class.std::vector"* %79, i64 %80) #3
  %82 = call dereferenceable(48) %"class.std::set"* @_ZNSt3setIcSt4lessIcESaIcEEaSEOS3_(%"class.std::set"* %81, %"class.std::set"* dereferenceable(48) %18) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %18) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %20) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %19) #3
  br label %83

; <label>:83:                                     ; preds = %78
  %84 = load i64, i64* %17, align 8
  %85 = sub i64 %84, -6696586468036741325
  %86 = add i64 %85, -1
  %87 = add i64 %86, -6696586468036741325
  %88 = add nsw i64 %84, -1
  store i64 %87, i64* %17, align 8
  br label %57

; <label>:89:                                     ; preds = %60
  %90 = load i32, i32* @x.27
  %91 = load i32, i32* @y.28
  %92 = sub i32 %90, 2094693945
  %93 = sub i32 %92, 1
  %94 = add i32 %93, 2094693945
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = xor i1 %98, true
  %101 = xor i1 %99, true
  %102 = xor i1 true, true
  %103 = and i1 %100, true
  %104 = and i1 %98, %102
  %105 = and i1 %101, true
  %106 = and i1 %99, %102
  %107 = or i1 %103, %104
  %108 = or i1 %105, %106
  %109 = xor i1 %107, %108
  %110 = or i1 %100, %101
  %111 = xor i1 %110, true
  %112 = or i1 true, %102
  %113 = and i1 %111, %112
  %114 = or i1 %109, %113
  %115 = or i1 %98, %99
  br i1 %114, label %116, label %174

; <label>:116:                                    ; preds = %89, %174
  %117 = landingpad { i8*, i32 }
          cleanup
  %118 = extractvalue { i8*, i32 } %117, 0
  store i8* %118, i8** %21, align 8
  %119 = extractvalue { i8*, i32 } %117, 1
  store i32 %119, i32* %22, align 4
  %120 = load i32, i32* @x.27
  %121 = load i32, i32* @y.28
  %122 = add i32 %120, -664022641
  %123 = sub i32 %122, 1
  %124 = sub i32 %123, -664022641
  %125 = sub i32 %120, 1
  %126 = mul i32 %120, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %121, 10
  %130 = xor i1 %128, true
  %131 = xor i1 %129, true
  %132 = xor i1 false, true
  %133 = and i1 %130, false
  %134 = and i1 %128, %132
  %135 = and i1 %131, false
  %136 = and i1 %129, %132
  %137 = or i1 %133, %134
  %138 = or i1 %135, %136
  %139 = xor i1 %137, %138
  %140 = or i1 %130, %131
  %141 = xor i1 %140, true
  %142 = or i1 false, %132
  %143 = and i1 %141, %142
  %144 = or i1 %139, %143
  %145 = or i1 %128, %129
  br i1 %144, label %146, label %174

; <label>:146:                                    ; preds = %116
  br label %151

; <label>:147:                                    ; preds = %77
  %148 = landingpad { i8*, i32 }
          cleanup
  %149 = extractvalue { i8*, i32 } %148, 0
  store i8* %149, i8** %21, align 8
  %150 = extractvalue { i8*, i32 } %148, 1
  store i32 %150, i32* %22, align 4
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %20) #3
  br label %151

; <label>:151:                                    ; preds = %147, %146
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %19) #3
  br label %153

; <label>:152:                                    ; preds = %57
  ret void

; <label>:153:                                    ; preds = %151
  %154 = load i8*, i8** %21, align 8
  %155 = load i32, i32* %22, align 4
  %156 = insertvalue { i8*, i32 } undef, i8* %154, 0
  %157 = insertvalue { i8*, i32 } %156, i32 %155, 1
  resume { i8*, i32 } %157

; <label>:158:                                    ; preds = %15, %1
  %159 = alloca %struct.SegTreeLazyProportional*, align 8
  %160 = alloca i64, align 8
  %161 = alloca %"class.std::set", align 8
  %162 = alloca %"class.std::set", align 8
  %163 = alloca %"class.std::set", align 8
  %164 = alloca i8*
  %165 = alloca i32
  store %struct.SegTreeLazyProportional* %0, %struct.SegTreeLazyProportional** %159, align 8
  %166 = load %struct.SegTreeLazyProportional*, %struct.SegTreeLazyProportional** %159, align 8
  %167 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %166, i32 0, i32 0
  %168 = load i64, i64* %167, align 8
  %169 = shl i64 %168, 2
  %170 = shl i64 %168, 2
  %171 = sub i64 0, 2
  %172 = add i64 %168, %171
  %173 = sub nsw i64 %168, 2
  store i64 %172, i64* %160, align 8
  br label %15

; <label>:174:                                    ; preds = %116, %89
  %175 = landingpad { i8*, i32 }
          cleanup
  %176 = extractvalue { i8*, i32 } %175, 0
  store i8* %176, i8** %21, align 8
  %177 = extractvalue { i8*, i32 } %175, 1
  store i32 %177, i32* %22, align 4
  br label %116
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_E6updateExxS4_(%struct.SegTreeLazyProportional*, i64, i64, %"class.std::set"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %struct.SegTreeLazyProportional*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"class.std::set", align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %struct.SegTreeLazyProportional* %0, %struct.SegTreeLazyProportional** %5, align 8
  store i64 %1, i64* %6, align 8
  store i64 %2, i64* %7, align 8
  %11 = load %struct.SegTreeLazyProportional*, %struct.SegTreeLazyProportional** %5, align 8
  %12 = load i64, i64* %6, align 8
  %13 = load i64, i64* %7, align 8
  call void @_ZNSt3setIcSt4lessIcESaIcEEC2ERKS3_(%"class.std::set"* %8, %"class.std::set"* dereferenceable(48) %3)
  %14 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %11, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  invoke void @_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_E6updateExxS4_xxx(%struct.SegTreeLazyProportional* %11, i64 %12, i64 %13, %"class.std::set"* %8, i64 0, i64 0, i64 %15)
          to label %16 unwind label %46

; <label>:16:                                     ; preds = %4
  %17 = load i32, i32* @x.29
  %18 = load i32, i32* @y.30
  %19 = sub i32 0, 1
  %20 = add i32 %17, %19
  %21 = sub i32 %17, 1
  %22 = mul i32 %17, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %18, 10
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  br i1 %28, label %30, label %55

; <label>:30:                                     ; preds = %16, %55
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %8) #3
  %31 = load i32, i32* @x.29
  %32 = load i32, i32* @y.30
  %33 = sub i32 %31, 1790784168
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 1790784168
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  br i1 %43, label %45, label %55

; <label>:45:                                     ; preds = %30
  ret void

; <label>:46:                                     ; preds = %4
  %47 = landingpad { i8*, i32 }
          cleanup
  %48 = extractvalue { i8*, i32 } %47, 0
  store i8* %48, i8** %9, align 8
  %49 = extractvalue { i8*, i32 } %47, 1
  store i32 %49, i32* %10, align 4
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %8) #3
  br label %50

; <label>:50:                                     ; preds = %46
  %51 = load i8*, i8** %9, align 8
  %52 = load i32, i32* %10, align 4
  %53 = insertvalue { i8*, i32 } undef, i8* %51, 0
  %54 = insertvalue { i8*, i32 } %53, i32 %52, 1
  resume { i8*, i32 } %54

; <label>:55:                                     ; preds = %30, %16
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %8) #3
  br label %30
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_E5queryExx(%"class.std::set"* noalias sret, %struct.SegTreeLazyProportional*, i64, i64) #0 comdat align 2 {
  %5 = alloca %struct.SegTreeLazyProportional*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  store %struct.SegTreeLazyProportional* %1, %struct.SegTreeLazyProportional** %5, align 8
  store i64 %2, i64* %6, align 8
  store i64 %3, i64* %7, align 8
  %8 = load %struct.SegTreeLazyProportional*, %struct.SegTreeLazyProportional** %5, align 8
  %9 = load i64, i64* %6, align 8
  %10 = load i64, i64* %7, align 8
  %11 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %8, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  call void @_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_E9query_subExxxxx(%"class.std::set"* sret %0, %struct.SegTreeLazyProportional* %8, i64 %9, i64 %10, i64 0, i64 0, i64 %12)
  ret void
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt3setIcSt4lessIcESaIcEE4sizeEv(%"class.std::set"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.33
  %6 = load i32, i32* @y.34
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 349256179, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %77
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 349256179, label %18
    i32 1431906280, label %38
    i32 1858609836, label %70
    i32 1860304623, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %77

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1431906280, i32 1860304623
  store i32 %37, i32* %14
  br label %77

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %39, align 8
  %40 = load %"class.std::set"*, %"class.std::set"** %39, align 8
  %41 = getelementptr inbounds %"class.std::set", %"class.std::set"* %40, i32 0, i32 0
  %42 = call i64 @_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE4sizeEv(%"class.std::_Rb_tree"* %41) #3
  store i64 %42, i64* %2
  %43 = load i32, i32* @x.33
  %44 = load i32, i32* @y.34
  %45 = add i32 %43, -1299190984
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -1299190984
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 1858609836, i32 1860304623
  store i32 %69, i32* %14
  br label %77

; <label>:70:                                     ; preds = %15
  %71 = load volatile i64, i64* %2
  ret i64 %71

; <label>:72:                                     ; preds = %15
  %73 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %73, align 8
  %74 = load %"class.std::set"*, %"class.std::set"** %73, align 8
  %75 = getelementptr inbounds %"class.std::set", %"class.std::set"* %74, i32 0, i32 0
  %76 = call i64 @_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE4sizeEv(%"class.std::_Rb_tree"* %75) #3
  store i32 1431906280, i32* %14
  br label %77

; <label>:77:                                     ; preds = %72, %38, %18, %17
  br label %15
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_ED2Ev(%struct.SegTreeLazyProportional*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %struct.SegTreeLazyProportional*, align 8
  store %struct.SegTreeLazyProportional* %0, %struct.SegTreeLazyProportional** %2, align 8
  %3 = load %struct.SegTreeLazyProportional*, %struct.SegTreeLazyProportional** %2, align 8
  %4 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %3, i32 0, i32 8
  call void @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EED2Ev(%"class.std::vector"* %4) #3
  %5 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %3, i32 0, i32 7
  call void @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EED2Ev(%"class.std::vector"* %5) #3
  %6 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %3, i32 0, i32 6
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %6) #3
  %7 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %3, i32 0, i32 5
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %7) #3
  %8 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %3, i32 0, i32 4
  call void @_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_xEED2Ev(%"class.std::function.10"* %8) #3
  %9 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %3, i32 0, i32 3
  call void @_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EED2Ev(%"class.std::function"* %9) #3
  %10 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %3, i32 0, i32 2
  call void @_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EED2Ev(%"class.std::function"* %10) #3
  %11 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %3, i32 0, i32 1
  call void @_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EED2Ev(%"class.std::function"* %11) #3
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEED2Ev(%"class.std::_Rb_tree"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %5 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %6 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_M_beginEv(%"class.std::_Rb_tree"* %5) #3
  invoke void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_M_eraseEPSt13_Rb_tree_nodeIcE(%"class.std::_Rb_tree"* %5, %"struct.std::_Rb_tree_node"* %6)
          to label %7 unwind label %9

; <label>:7:                                      ; preds = %1
  %8 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %5, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_Rb_tree_implIS3_Lb1EED2Ev(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %8) #3
  ret void

; <label>:9:                                      ; preds = %1
  %10 = landingpad { i8*, i32 }
          catch i8* null
  %11 = extractvalue { i8*, i32 } %10, 0
  store i8* %11, i8** %3, align 8
  %12 = extractvalue { i8*, i32 } %10, 1
  store i32 %12, i32* %4, align 4
  %13 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %5, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_Rb_tree_implIS3_Lb1EED2Ev(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %13) #3
  br label %14

; <label>:14:                                     ; preds = %9
  %15 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %15) #12
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_M_eraseEPSt13_Rb_tree_nodeIcE(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %3 = alloca %"class.std::_Rb_tree"*
  %4 = alloca %"class.std::_Rb_tree"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %6 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %4, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
  %7 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  store %"class.std::_Rb_tree"* %7, %"class.std::_Rb_tree"** %3
  %8 = alloca i32
  store i32 -1489663844, i32* %8
  br label %9

; <label>:9:                                      ; preds = %2, %83
  %10 = load i32, i32* %8
  switch i32 %10, label %11 [
    i32 -1489663844, label %12
    i32 1374284684, label %16
    i32 -710789211, label %44
    i32 405389980, label %70
    i32 1741551822, label %71
    i32 515102362, label %72
  ]

; <label>:11:                                     ; preds = %9
  br label %83

; <label>:12:                                     ; preds = %9
  %13 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %14 = icmp ne %"struct.std::_Rb_tree_node"* %13, null
  %15 = select i1 %14, i32 1374284684, i32 1741551822
  store i32 %15, i32* %8
  br label %83

; <label>:16:                                     ; preds = %9
  %17 = load i32, i32* @x.39
  %18 = load i32, i32* @y.40
  %19 = sub i32 %17, -129409292
  %20 = sub i32 %19, 1
  %21 = add i32 %20, -129409292
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 -710789211, i32 515102362
  store i32 %43, i32* %8
  br label %83

; <label>:44:                                     ; preds = %9
  %45 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %46 = bitcast %"struct.std::_Rb_tree_node"* %45 to %"struct.std::_Rb_tree_node_base"*
  %47 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %46) #3
  %48 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3
  call void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_M_eraseEPSt13_Rb_tree_nodeIcE(%"class.std::_Rb_tree"* %48, %"struct.std::_Rb_tree_node"* %47)
  %49 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %50 = bitcast %"struct.std::_Rb_tree_node"* %49 to %"struct.std::_Rb_tree_node_base"*
  %51 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %50) #3
  store %"struct.std::_Rb_tree_node"* %51, %"struct.std::_Rb_tree_node"** %6, align 8
  %52 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %53 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3
  call void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE12_M_drop_nodeEPSt13_Rb_tree_nodeIcE(%"class.std::_Rb_tree"* %53, %"struct.std::_Rb_tree_node"* %52) #3
  %54 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  store %"struct.std::_Rb_tree_node"* %54, %"struct.std::_Rb_tree_node"** %5, align 8
  %55 = load i32, i32* @x.39
  %56 = load i32, i32* @y.40
  %57 = sub i32 %55, -322573487
  %58 = sub i32 %57, 1
  %59 = add i32 %58, -322573487
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  %69 = select i1 %67, i32 405389980, i32 515102362
  store i32 %69, i32* %8
  br label %83

; <label>:70:                                     ; preds = %9
  store i32 -1489663844, i32* %8
  br label %83

; <label>:71:                                     ; preds = %9
  ret void

; <label>:72:                                     ; preds = %9
  %73 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %74 = bitcast %"struct.std::_Rb_tree_node"* %73 to %"struct.std::_Rb_tree_node_base"*
  %75 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %74) #3
  %76 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3
  call void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_M_eraseEPSt13_Rb_tree_nodeIcE(%"class.std::_Rb_tree"* %76, %"struct.std::_Rb_tree_node"* %75)
  %77 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %78 = bitcast %"struct.std::_Rb_tree_node"* %77 to %"struct.std::_Rb_tree_node_base"*
  %79 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %78) #3
  store %"struct.std::_Rb_tree_node"* %79, %"struct.std::_Rb_tree_node"** %6, align 8
  %80 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %81 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3
  call void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE12_M_drop_nodeEPSt13_Rb_tree_nodeIcE(%"class.std::_Rb_tree"* %81, %"struct.std::_Rb_tree_node"* %80) #3
  %82 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  store %"struct.std::_Rb_tree_node"* %82, %"struct.std::_Rb_tree_node"** %5, align 8
  store i32 -710789211, i32* %8
  br label %83

; <label>:83:                                     ; preds = %72, %70, %44, %16, %12, %11
  br label %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_M_beginEv(%"class.std::_Rb_tree"*) #5 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %5, i32 0, i32 1
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = bitcast %"struct.std::_Rb_tree_node_base"* %7 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_Rb_tree_implIS3_Lb1EED2Ev(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"** %2, align 8
  %3 = load %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %3 to %"class.std::allocator.6"*
  call void @_ZNSaISt13_Rb_tree_nodeIcEED2Ev(%"class.std::allocator.6"* %4) #3
  ret void
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #6 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.45
  %5 = load i32, i32* @y.46
  %6 = sub i32 %4, 220527890
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 220527890
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -497211831, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %70
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -497211831, label %18
    i32 -335940502, label %38
    i32 1318914300, label %67
    i32 24589121, label %68
  ]

; <label>:17:                                     ; preds = %15
  br label %70

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -335940502, i32 24589121
  store i32 %37, i32* %14
  br label %70

; <label>:38:                                     ; preds = %15
  %39 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #12
  %40 = load i32, i32* @x.45
  %41 = load i32, i32* @y.46
  %42 = sub i32 %40, 1707641068
  %43 = sub i32 %42, 1
  %44 = add i32 %43, 1707641068
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 1318914300, i32 24589121
  store i32 %66, i32* %14
  br label %70

; <label>:67:                                     ; preds = %15
  unreachable

; <label>:68:                                     ; preds = %15
  %69 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #12
  store i32 -335940502, i32* %14
  br label %70

; <label>:70:                                     ; preds = %68, %38, %18, %17
  br label %15
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 3
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 2
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE12_M_drop_nodeEPSt13_Rb_tree_nodeIcE(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #5 comdat align 2 {
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
  %5 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %6 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  call void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIcE(%"class.std::_Rb_tree"* %5, %"struct.std::_Rb_tree_node"* %6) #3
  %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  call void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE11_M_put_nodeEPSt13_Rb_tree_nodeIcE(%"class.std::_Rb_tree"* %5, %"struct.std::_Rb_tree_node"* %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIcE(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
  %5 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %6 = call dereferenceable(1) %"class.std::allocator.6"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %5) #3
  %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  %8 = invoke i8* @_ZNSt13_Rb_tree_nodeIcE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %7)
          to label %9 unwind label %12

; <label>:9:                                      ; preds = %2
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIcEEE7destroyIcEEvRS2_PT_(%"class.std::allocator.6"* dereferenceable(1) %6, i8* %8)
          to label %10 unwind label %12

; <label>:10:                                     ; preds = %9
  %11 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  ret void

; <label>:12:                                     ; preds = %9, %2
  %13 = load i32, i32* @x.53
  %14 = load i32, i32* @y.54
  %15 = sub i32 %13, -1764573087
  %16 = sub i32 %15, 1
  %17 = add i32 %16, -1764573087
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %14, 10
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  br i1 %25, label %27, label %57

; <label>:27:                                     ; preds = %12, %57
  %28 = landingpad { i8*, i32 }
          catch i8* null
  %29 = extractvalue { i8*, i32 } %28, 0
  call void @__clang_call_terminate(i8* %29) #12
  %30 = load i32, i32* @x.53
  %31 = load i32, i32* @y.54
  %32 = sub i32 %30, 1277609848
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 1277609848
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  br i1 %54, label %56, label %57

; <label>:56:                                     ; preds = %27
  unreachable

; <label>:57:                                     ; preds = %27, %12
  %58 = landingpad { i8*, i32 }
          catch i8* null
  %59 = extractvalue { i8*, i32 } %58, 0
  call void @__clang_call_terminate(i8* %59) #12
  br label %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE11_M_put_nodeEPSt13_Rb_tree_nodeIcE(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
  %5 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %6 = call dereferenceable(1) %"class.std::allocator.6"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %5) #3
  %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIcEEE10deallocateERS2_PS1_m(%"class.std::allocator.6"* dereferenceable(1) %6, %"struct.std::_Rb_tree_node"* %7, i64 1)
          to label %8 unwind label %9

; <label>:8:                                      ; preds = %2
  ret void

; <label>:9:                                      ; preds = %2
  %10 = load i32, i32* @x.55
  %11 = load i32, i32* @y.56
  %12 = sub i32 %10, -517734835
  %13 = sub i32 %12, 1
  %14 = add i32 %13, -517734835
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %11, 10
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  br i1 %22, label %24, label %42

; <label>:24:                                     ; preds = %9, %42
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  call void @__clang_call_terminate(i8* %26) #12
  %27 = load i32, i32* @x.55
  %28 = load i32, i32* @y.56
  %29 = add i32 %27, -2014538957
  %30 = sub i32 %29, 1
  %31 = sub i32 %30, -2014538957
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  br i1 %39, label %41, label %42

; <label>:41:                                     ; preds = %24
  unreachable

; <label>:42:                                     ; preds = %24, %9
  %43 = landingpad { i8*, i32 }
          catch i8* null
  %44 = extractvalue { i8*, i32 } %43, 0
  call void @__clang_call_terminate(i8* %44) #12
  br label %24
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIcEEE7destroyIcEEvRS2_PT_(%"class.std::allocator.6"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.6"*, align 8
  %4 = alloca i8*, align 8
  store %"class.std::allocator.6"* %0, %"class.std::allocator.6"** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %"class.std::allocator.6"*, %"class.std::allocator.6"** %3, align 8
  %6 = bitcast %"class.std::allocator.6"* %5 to %"class.__gnu_cxx::new_allocator.7"*
  %7 = load i8*, i8** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEE7destroyIcEEvPT_(%"class.__gnu_cxx::new_allocator.7"* %6, i8* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.6"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"*) #5 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %4 to %"class.std::allocator.6"*
  ret %"class.std::allocator.6"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNSt13_Rb_tree_nodeIcE9_M_valptrEv(%"struct.std::_Rb_tree_node"*) #5 comdat align 2 {
  %2 = alloca i8*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.61
  %6 = load i32, i32* @y.62
  %7 = sub i32 %5, -1204839111
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1204839111
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1866795419, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1866795419, label %19
    i32 -643082016, label %27
    i32 2095850675, label %59
    i32 1087246289, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -643082016, i32 1087246289
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %28, align 8
  %29 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %29, i32 0, i32 1
  %31 = call i8* @_ZN9__gnu_cxx16__aligned_membufIcE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* %30) #3
  store i8* %31, i8** %2
  %32 = load i32, i32* @x.61
  %33 = load i32, i32* @y.62
  %34 = add i32 %32, 1463767207
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 1463767207
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 2095850675, i32 1087246289
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile i8*, i8** %2
  ret i8* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %62, align 8
  %63 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %63, i32 0, i32 1
  %65 = call i8* @_ZN9__gnu_cxx16__aligned_membufIcE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* %64) #3
  store i32 -643082016, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEE7destroyIcEEvPT_(%"class.__gnu_cxx::new_allocator.7"*, i8*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.7"*, align 8
  %4 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.7"* %0, %"class.__gnu_cxx::new_allocator.7"** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.7"*, %"class.__gnu_cxx::new_allocator.7"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZN9__gnu_cxx16__aligned_membufIcE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #5 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %4 = call i8* @_ZN9__gnu_cxx16__aligned_membufIcE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* %3) #3
  ret i8* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZN9__gnu_cxx16__aligned_membufIcE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #5 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf", %"struct.__gnu_cxx::__aligned_membuf"* %3, i32 0, i32 0
  %5 = bitcast [1 x i8]* %4 to i8*
  ret i8* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIcEEE10deallocateERS2_PS1_m(%"class.std::allocator.6"* dereferenceable(1), %"struct.std::_Rb_tree_node"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.69
  %7 = load i32, i32* @y.70
  %8 = add i32 %6, -102378030
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -102378030
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1503311916, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %59
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1503311916, label %20
    i32 500804777, label %28
    i32 382731231, label %50
    i32 1698031761, label %51
  ]

; <label>:19:                                     ; preds = %17
  br label %59

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 500804777, i32 1698031761
  store i32 %27, i32* %16
  br label %59

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.6"*, align 8
  %30 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %31 = alloca i64, align 8
  store %"class.std::allocator.6"* %0, %"class.std::allocator.6"** %29, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.std::allocator.6"*, %"class.std::allocator.6"** %29, align 8
  %33 = bitcast %"class.std::allocator.6"* %32 to %"class.__gnu_cxx::new_allocator.7"*
  %34 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %30, align 8
  %35 = load i64, i64* %31, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.7"* %33, %"struct.std::_Rb_tree_node"* %34, i64 %35)
  %36 = load i32, i32* @x.69
  %37 = load i32, i32* @y.70
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 382731231, i32 1698031761
  store i32 %49, i32* %16
  br label %59

; <label>:50:                                     ; preds = %17
  ret void

; <label>:51:                                     ; preds = %17
  %52 = alloca %"class.std::allocator.6"*, align 8
  %53 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %54 = alloca i64, align 8
  store %"class.std::allocator.6"* %0, %"class.std::allocator.6"** %52, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %53, align 8
  store i64 %2, i64* %54, align 8
  %55 = load %"class.std::allocator.6"*, %"class.std::allocator.6"** %52, align 8
  %56 = bitcast %"class.std::allocator.6"* %55 to %"class.__gnu_cxx::new_allocator.7"*
  %57 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %53, align 8
  %58 = load i64, i64* %54, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.7"* %56, %"struct.std::_Rb_tree_node"* %57, i64 %58)
  store i32 500804777, i32* %16
  br label %59

; <label>:59:                                     ; preds = %51, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.7"*, %"struct.std::_Rb_tree_node"*, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.71
  %7 = load i32, i32* @y.72
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 186332536, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 186332536, label %19
    i32 478202706, label %27
    i32 1839539507, label %60
    i32 -2070552405, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 478202706, i32 -2070552405
  store i32 %26, i32* %15
  br label %68

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator.7"*, align 8
  %29 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %30 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.7"* %0, %"class.__gnu_cxx::new_allocator.7"** %28, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %29, align 8
  store i64 %2, i64* %30, align 8
  %31 = load %"class.__gnu_cxx::new_allocator.7"*, %"class.__gnu_cxx::new_allocator.7"** %28, align 8
  %32 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %29, align 8
  %33 = bitcast %"struct.std::_Rb_tree_node"* %32 to i8*
  call void @_ZdlPv(i8* %33) #3
  %34 = load i32, i32* @x.71
  %35 = load i32, i32* @y.72
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 1839539507, i32 -2070552405
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.__gnu_cxx::new_allocator.7"*, align 8
  %63 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %64 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.7"* %0, %"class.__gnu_cxx::new_allocator.7"** %62, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %63, align 8
  store i64 %2, i64* %64, align 8
  %65 = load %"class.__gnu_cxx::new_allocator.7"*, %"class.__gnu_cxx::new_allocator.7"** %62, align 8
  %66 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %63, align 8
  %67 = bitcast %"struct.std::_Rb_tree_node"* %66 to i8*
  call void @_ZdlPv(i8* %67) #3
  store i32 478202706, i32* %15
  br label %68

; <label>:68:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #7

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEED2Ev(%"class.__gnu_cxx::new_allocator.7"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.7"*, align 8
  store %"class.__gnu_cxx::new_allocator.7"* %0, %"class.__gnu_cxx::new_allocator.7"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.7"*, %"class.__gnu_cxx::new_allocator.7"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt14_Function_baseD2Ev(%"class.std::_Function_base"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.75
  %3 = load i32, i32* @y.76
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 true, true
  %14 = and i1 %11, true
  %15 = and i1 %9, %13
  %16 = and i1 %12, true
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 true, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %71

; <label>:27:                                     ; preds = %1, %71
  %28 = alloca %"class.std::_Function_base"*, align 8
  store %"class.std::_Function_base"* %0, %"class.std::_Function_base"** %28, align 8
  %29 = load %"class.std::_Function_base"*, %"class.std::_Function_base"** %28, align 8
  %30 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %29, i32 0, i32 1
  %31 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %30, align 8
  %32 = icmp ne i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %31, null
  %33 = load i32, i32* @x.75
  %34 = load i32, i32* @y.76
  %35 = sub i32 %33, -828999794
  %36 = sub i32 %35, 1
  %37 = add i32 %36, -828999794
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %71

; <label>:59:                                     ; preds = %27
  br i1 %32, label %60, label %67

; <label>:60:                                     ; preds = %59
  %61 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %29, i32 0, i32 1
  %62 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %61, align 8
  %63 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %29, i32 0, i32 0
  %64 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %29, i32 0, i32 0
  %65 = invoke zeroext i1 %62(%"union.std::_Any_data"* dereferenceable(16) %63, %"union.std::_Any_data"* dereferenceable(16) %64, i32 3)
          to label %66 unwind label %68

; <label>:66:                                     ; preds = %60
  br label %67

; <label>:67:                                     ; preds = %66, %59
  ret void

; <label>:68:                                     ; preds = %60
  %69 = landingpad { i8*, i32 }
          catch i8* null
  %70 = extractvalue { i8*, i32 } %69, 0
  call void @__clang_call_terminate(i8* %70) #12
  unreachable

; <label>:71:                                     ; preds = %27, %1
  %72 = alloca %"class.std::_Function_base"*, align 8
  store %"class.std::_Function_base"* %0, %"class.std::_Function_base"** %72, align 8
  %73 = load %"class.std::_Function_base"*, %"class.std::_Function_base"** %72, align 8
  %74 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %73, i32 0, i32 1
  %75 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %74, align 8
  %76 = icmp ne i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %75, null
  br label %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EED2Ev(%"class.std::vector"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::set"*, %"class.std::set"** %8, align 8
  %10 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::set"*, %"class.std::set"** %12, align 8
  %14 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseISt3setIcSt4lessIcESaIcEESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %14) #3
  invoke void @_ZSt8_DestroyIPSt3setIcSt4lessIcESaIcEES4_EvT_S6_RSaIT0_E(%"class.std::set"* %9, %"class.std::set"* %13, %"class.std::allocator.13"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt3setIcSt4lessIcESaIcEESaIS4_EED2Ev(%"struct.std::_Vector_base"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt3setIcSt4lessIcESaIcEESaIS4_EED2Ev(%"struct.std::_Vector_base"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %24) #12
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt3setIcSt4lessIcESaIcEES4_EvT_S6_RSaIT0_E(%"class.std::set"*, %"class.std::set"*, %"class.std::allocator.13"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::set"*, align 8
  %5 = alloca %"class.std::set"*, align 8
  %6 = alloca %"class.std::allocator.13"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %4, align 8
  store %"class.std::set"* %1, %"class.std::set"** %5, align 8
  store %"class.std::allocator.13"* %2, %"class.std::allocator.13"** %6, align 8
  %7 = load %"class.std::set"*, %"class.std::set"** %4, align 8
  %8 = load %"class.std::set"*, %"class.std::set"** %5, align 8
  call void @_ZSt8_DestroyIPSt3setIcSt4lessIcESaIcEEEvT_S6_(%"class.std::set"* %7, %"class.std::set"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseISt3setIcSt4lessIcESaIcEESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %4 to %"class.std::allocator.13"*
  ret %"class.std::allocator.13"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt3setIcSt4lessIcESaIcEESaIS4_EED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.83
  %3 = load i32, i32* @y.84
  %4 = add i32 %2, 1091480050
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 1091480050
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %72

; <label>:16:                                     ; preds = %1, %72
  %17 = alloca %"struct.std::_Vector_base"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %17, align 8
  %20 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %17, align 8
  %21 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %21, i32 0, i32 0
  %23 = load %"class.std::set"*, %"class.std::set"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %24, i32 0, i32 2
  %26 = load %"class.std::set"*, %"class.std::set"** %25, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %27, i32 0, i32 0
  %29 = load %"class.std::set"*, %"class.std::set"** %28, align 8
  %30 = ptrtoint %"class.std::set"* %26 to i64
  %31 = ptrtoint %"class.std::set"* %29 to i64
  %32 = sub i64 0, %31
  %33 = add i64 %30, %32
  %34 = sub i64 %30, %31
  %35 = sdiv exact i64 %33, 48
  %36 = load i32, i32* @x.83
  %37 = load i32, i32* @y.84
  %38 = sub i32 %36, 1982563391
  %39 = sub i32 %38, 1
  %40 = add i32 %39, 1982563391
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  br i1 %60, label %62, label %72

; <label>:62:                                     ; preds = %16
  invoke void @_ZNSt12_Vector_baseISt3setIcSt4lessIcESaIcEESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base"* %20, %"class.std::set"* %23, i64 %35)
          to label %63 unwind label %65

; <label>:63:                                     ; preds = %62
  %64 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt3setIcSt4lessIcESaIcEESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %64) #3
  ret void

; <label>:65:                                     ; preds = %62
  %66 = landingpad { i8*, i32 }
          catch i8* null
  %67 = extractvalue { i8*, i32 } %66, 0
  store i8* %67, i8** %18, align 8
  %68 = extractvalue { i8*, i32 } %66, 1
  store i32 %68, i32* %19, align 4
  %69 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt3setIcSt4lessIcESaIcEESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %69) #3
  br label %70

; <label>:70:                                     ; preds = %65
  %71 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %71) #12
  unreachable

; <label>:72:                                     ; preds = %16, %1
  %73 = alloca %"struct.std::_Vector_base"*, align 8
  %74 = alloca i8*
  %75 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %73, align 8
  %76 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %73, align 8
  %77 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %77, i32 0, i32 0
  %79 = load %"class.std::set"*, %"class.std::set"** %78, align 8
  %80 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %76, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %80, i32 0, i32 2
  %82 = load %"class.std::set"*, %"class.std::set"** %81, align 8
  %83 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %76, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %83, i32 0, i32 0
  %85 = load %"class.std::set"*, %"class.std::set"** %84, align 8
  %86 = ptrtoint %"class.std::set"* %82 to i64
  %87 = ptrtoint %"class.std::set"* %85 to i64
  %88 = shl i64 %86, %87
  %89 = sub i64 %86, 3550052411947076044
  %90 = sub i64 %89, %87
  %91 = add i64 %90, 3550052411947076044
  %92 = sub i64 %86, %87
  %93 = shl i64 %91, 48
  %94 = sub i64 %91, -6448274652519223472
  %95 = sub i64 %94, 48
  %96 = add i64 %95, -6448274652519223472
  %97 = sub i64 %91, 48
  %98 = mul i64 %96, 48
  %99 = sub i64 0, %91
  %100 = add i64 0, %99
  %101 = sub i64 0, %91
  %102 = add i64 %100, -638779304946745713
  %103 = add i64 %102, 48
  %104 = sub i64 %103, -638779304946745713
  %105 = add i64 %100, 48
  %106 = shl i64 %91, 48
  %107 = sub i64 0, -8509045123685994895
  %108 = sub i64 %107, %91
  %109 = add i64 %108, -8509045123685994895
  %110 = sub i64 0, %91
  %111 = sub i64 0, 48
  %112 = sub i64 %109, %111
  %113 = add i64 %109, 48
  %114 = sdiv exact i64 %91, 48
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt3setIcSt4lessIcESaIcEEEvT_S6_(%"class.std::set"*, %"class.std::set"*) #0 comdat {
  %3 = alloca %"class.std::set"*, align 8
  %4 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %3, align 8
  store %"class.std::set"* %1, %"class.std::set"** %4, align 8
  %5 = load %"class.std::set"*, %"class.std::set"** %3, align 8
  %6 = load %"class.std::set"*, %"class.std::set"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt3setIcSt4lessIcESaIcEEEEvT_S8_(%"class.std::set"* %5, %"class.std::set"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt3setIcSt4lessIcESaIcEEEEvT_S8_(%"class.std::set"*, %"class.std::set"*) #0 comdat align 2 {
  %3 = alloca %"class.std::set"*, align 8
  %4 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %3, align 8
  store %"class.std::set"* %1, %"class.std::set"** %4, align 8
  %5 = alloca i32
  store i32 -2018857991, i32* %5
  br label %6

; <label>:6:                                      ; preds = %2, %65
  %7 = load i32, i32* %5
  switch i32 %7, label %8 [
    i32 -2018857991, label %9
    i32 -447900182, label %14
    i32 1790483214, label %17
    i32 -1492199839, label %20
    i32 -699224277, label %48
    i32 1936980722, label %63
    i32 -1020837978, label %64
  ]

; <label>:8:                                      ; preds = %6
  br label %65

; <label>:9:                                      ; preds = %6
  %10 = load %"class.std::set"*, %"class.std::set"** %3, align 8
  %11 = load %"class.std::set"*, %"class.std::set"** %4, align 8
  %12 = icmp ne %"class.std::set"* %10, %11
  %13 = select i1 %12, i32 -447900182, i32 -1492199839
  store i32 %13, i32* %5
  br label %65

; <label>:14:                                     ; preds = %6
  %15 = load %"class.std::set"*, %"class.std::set"** %3, align 8
  %16 = call %"class.std::set"* @_ZSt11__addressofISt3setIcSt4lessIcESaIcEEEPT_RS5_(%"class.std::set"* dereferenceable(48) %15) #3
  call void @_ZSt8_DestroyISt3setIcSt4lessIcESaIcEEEvPT_(%"class.std::set"* %16)
  store i32 1790483214, i32* %5
  br label %65

; <label>:17:                                     ; preds = %6
  %18 = load %"class.std::set"*, %"class.std::set"** %3, align 8
  %19 = getelementptr inbounds %"class.std::set", %"class.std::set"* %18, i32 1
  store %"class.std::set"* %19, %"class.std::set"** %3, align 8
  store i32 -2018857991, i32* %5
  br label %65

; <label>:20:                                     ; preds = %6
  %21 = load i32, i32* @x.87
  %22 = load i32, i32* @y.88
  %23 = sub i32 %21, -2036773234
  %24 = sub i32 %23, 1
  %25 = add i32 %24, -2036773234
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 false, true
  %34 = and i1 %31, false
  %35 = and i1 %29, %33
  %36 = and i1 %32, false
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 false, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  %47 = select i1 %45, i32 -699224277, i32 -1020837978
  store i32 %47, i32* %5
  br label %65

; <label>:48:                                     ; preds = %6
  %49 = load i32, i32* @x.87
  %50 = load i32, i32* @y.88
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 1936980722, i32 -1020837978
  store i32 %62, i32* %5
  br label %65

; <label>:63:                                     ; preds = %6
  ret void

; <label>:64:                                     ; preds = %6
  store i32 -699224277, i32* %5
  br label %65

; <label>:65:                                     ; preds = %64, %48, %20, %17, %14, %9, %8
  br label %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt3setIcSt4lessIcESaIcEEEvPT_(%"class.std::set"*) #5 comdat {
  %2 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %2, align 8
  %3 = load %"class.std::set"*, %"class.std::set"** %2, align 8
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::set"* @_ZSt11__addressofISt3setIcSt4lessIcESaIcEEEPT_RS5_(%"class.std::set"* dereferenceable(48)) #5 comdat {
  %2 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %2, align 8
  %3 = load %"class.std::set"*, %"class.std::set"** %2, align 8
  %4 = bitcast %"class.std::set"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::set"*
  ret %"class.std::set"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt3setIcSt4lessIcESaIcEESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base"*, %"class.std::set"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::set"*
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca %"struct.std::_Vector_base"*, align 8
  %7 = alloca %"class.std::set"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %6, align 8
  store %"class.std::set"* %1, %"class.std::set"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6, align 8
  store %"struct.std::_Vector_base"* %9, %"struct.std::_Vector_base"** %5
  %10 = load %"class.std::set"*, %"class.std::set"** %7, align 8
  store %"class.std::set"* %10, %"class.std::set"** %4
  %11 = alloca i32
  store i32 1804302703, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %75
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1804302703, label %15
    i32 130025660, label %19
    i32 26345888, label %46
    i32 1373388836, label %67
    i32 -1556978195, label %68
    i32 241409518, label %69
  ]

; <label>:14:                                     ; preds = %12
  br label %75

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::set"*, %"class.std::set"** %4
  %17 = icmp ne %"class.std::set"* %16, null
  %18 = select i1 %17, i32 130025660, i32 -1556978195
  store i32 %18, i32* %11
  br label %75

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.93
  %21 = load i32, i32* @y.94
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 true, true
  %32 = and i1 %29, true
  %33 = and i1 %27, %31
  %34 = and i1 %30, true
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 true, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  %45 = select i1 %43, i32 26345888, i32 241409518
  store i32 %45, i32* %11
  br label %75

; <label>:46:                                     ; preds = %12
  %47 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %48 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %47, i32 0, i32 0
  %49 = bitcast %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %48 to %"class.std::allocator.13"*
  %50 = load %"class.std::set"*, %"class.std::set"** %7, align 8
  %51 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt3setIcSt4lessIcESaIcEEEE10deallocateERS5_PS4_m(%"class.std::allocator.13"* dereferenceable(1) %49, %"class.std::set"* %50, i64 %51)
  %52 = load i32, i32* @x.93
  %53 = load i32, i32* @y.94
  %54 = add i32 %52, -1826105453
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, -1826105453
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 1373388836, i32 241409518
  store i32 %66, i32* %11
  br label %75

; <label>:67:                                     ; preds = %12
  store i32 -1556978195, i32* %11
  br label %75

; <label>:68:                                     ; preds = %12
  ret void

; <label>:69:                                     ; preds = %12
  %70 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %71 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %70, i32 0, i32 0
  %72 = bitcast %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %71 to %"class.std::allocator.13"*
  %73 = load %"class.std::set"*, %"class.std::set"** %7, align 8
  %74 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt3setIcSt4lessIcESaIcEEEE10deallocateERS5_PS4_m(%"class.std::allocator.13"* dereferenceable(1) %72, %"class.std::set"* %73, i64 %74)
  store i32 26345888, i32* %11
  br label %75

; <label>:75:                                     ; preds = %69, %67, %46, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt3setIcSt4lessIcESaIcEESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.95
  %5 = load i32, i32* @y.96
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1586980275, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %61
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1586980275, label %17
    i32 -1127302096, label %25
    i32 -1700695234, label %56
    i32 -709209114, label %57
  ]

; <label>:16:                                     ; preds = %14
  br label %61

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -1127302096, i32 -709209114
  store i32 %24, i32* %13
  br label %61

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"** %26, align 8
  %27 = load %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"** %26, align 8
  %28 = bitcast %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %27 to %"class.std::allocator.13"*
  call void @_ZNSaISt3setIcSt4lessIcESaIcEEED2Ev(%"class.std::allocator.13"* %28) #3
  %29 = load i32, i32* @x.95
  %30 = load i32, i32* @y.96
  %31 = add i32 %29, 1478977921
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, 1478977921
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -1700695234, i32 -709209114
  store i32 %55, i32* %13
  br label %61

; <label>:56:                                     ; preds = %14
  ret void

; <label>:57:                                     ; preds = %14
  %58 = alloca %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"** %58, align 8
  %59 = load %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"** %58, align 8
  %60 = bitcast %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %59 to %"class.std::allocator.13"*
  call void @_ZNSaISt3setIcSt4lessIcESaIcEEED2Ev(%"class.std::allocator.13"* %60) #3
  store i32 -1127302096, i32* %13
  br label %61

; <label>:61:                                     ; preds = %57, %25, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt3setIcSt4lessIcESaIcEEEE10deallocateERS5_PS4_m(%"class.std::allocator.13"* dereferenceable(1), %"class.std::set"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.13"*, align 8
  %5 = alloca %"class.std::set"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %4, align 8
  store %"class.std::set"* %1, %"class.std::set"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %4, align 8
  %8 = bitcast %"class.std::allocator.13"* %7 to %"class.__gnu_cxx::new_allocator.14"*
  %9 = load %"class.std::set"*, %"class.std::set"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt3setIcSt4lessIcESaIcEEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.14"* %8, %"class.std::set"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt3setIcSt4lessIcESaIcEEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.14"*, %"class.std::set"*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  %5 = alloca %"class.std::set"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %4, align 8
  store %"class.std::set"* %1, %"class.std::set"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %4, align 8
  %8 = load %"class.std::set"*, %"class.std::set"** %5, align 8
  %9 = bitcast %"class.std::set"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt3setIcSt4lessIcESaIcEEED2Ev(%"class.__gnu_cxx::new_allocator.14"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.101
  %5 = load i32, i32* @y.102
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -498964271, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %59
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -498964271, label %17
    i32 1029789606, label %25
    i32 478847781, label %55
    i32 1387197126, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %59

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 1029789606, i32 1387197126
  store i32 %24, i32* %13
  br label %59

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %26, align 8
  %28 = load i32, i32* @x.101
  %29 = load i32, i32* @y.102
  %30 = add i32 %28, 1020795555
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, 1020795555
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 478847781, i32 1387197126
  store i32 %54, i32* %13
  br label %59

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %57, align 8
  store i32 1029789606, i32* %13
  br label %59

; <label>:59:                                     ; preds = %56, %25, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEEC2Ev(%"class.std::_Rb_tree"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_Rb_tree_implIS3_Lb1EEC2Ev(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_Rb_tree_implIS3_Lb1EEC2Ev(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.105
  %3 = load i32, i32* @y.106
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 false, true
  %14 = and i1 %11, false
  %15 = and i1 %9, %13
  %16 = and i1 %12, false
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 false, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %199

; <label>:27:                                     ; preds = %1, %199
  %28 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"*, align 8
  %29 = alloca i8*
  %30 = alloca i32
  store %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"** %28, align 8
  %31 = load %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"** %28, align 8
  %32 = bitcast %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %31 to %"class.std::allocator.6"*
  call void @_ZNSaISt13_Rb_tree_nodeIcEEC2Ev(%"class.std::allocator.6"* %32) #3
  %33 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %31, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %31, i32 0, i32 1
  %35 = bitcast %"struct.std::_Rb_tree_node_base"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* %35, i8 0, i64 32, i32 8, i1 false)
  %36 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %31, i32 0, i32 2
  store i64 0, i64* %36, align 8
  %37 = load i32, i32* @x.105
  %38 = load i32, i32* @y.106
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  br i1 %48, label %50, label %199

; <label>:50:                                     ; preds = %27
  invoke void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_Rb_tree_implIS3_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %31)
          to label %51 unwind label %105

; <label>:51:                                     ; preds = %50
  %52 = load i32, i32* @x.105
  %53 = load i32, i32* @y.106
  %54 = sub i32 %52, -1085717018
  %55 = sub i32 %54, 1
  %56 = add i32 %55, -1085717018
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  br i1 %76, label %78, label %209

; <label>:78:                                     ; preds = %51, %209
  %79 = load i32, i32* @x.105
  %80 = load i32, i32* @y.106
  %81 = sub i32 0, 1
  %82 = add i32 %79, %81
  %83 = sub i32 %79, 1
  %84 = mul i32 %79, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %80, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 true, true
  %91 = and i1 %88, true
  %92 = and i1 %86, %90
  %93 = and i1 %89, true
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 true, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  br i1 %102, label %104, label %209

; <label>:104:                                    ; preds = %78
  ret void

; <label>:105:                                    ; preds = %50
  %106 = load i32, i32* @x.105
  %107 = load i32, i32* @y.106
  %108 = sub i32 %106, 196761430
  %109 = sub i32 %108, 1
  %110 = add i32 %109, 196761430
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = and i1 %114, %115
  %117 = xor i1 %114, %115
  %118 = or i1 %116, %117
  %119 = or i1 %114, %115
  br i1 %118, label %120, label %210

; <label>:120:                                    ; preds = %105, %210
  %121 = landingpad { i8*, i32 }
          cleanup
  %122 = extractvalue { i8*, i32 } %121, 0
  store i8* %122, i8** %29, align 8
  %123 = extractvalue { i8*, i32 } %121, 1
  store i32 %123, i32* %30, align 4
  %124 = bitcast %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %31 to %"class.std::allocator.6"*
  call void @_ZNSaISt13_Rb_tree_nodeIcEED2Ev(%"class.std::allocator.6"* %124) #3
  %125 = load i32, i32* @x.105
  %126 = load i32, i32* @y.106
  %127 = add i32 %125, -1422055517
  %128 = sub i32 %127, 1
  %129 = sub i32 %128, -1422055517
  %130 = sub i32 %125, 1
  %131 = mul i32 %125, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %126, 10
  %135 = and i1 %133, %134
  %136 = xor i1 %133, %134
  %137 = or i1 %135, %136
  %138 = or i1 %133, %134
  br i1 %137, label %139, label %210

; <label>:139:                                    ; preds = %120
  br label %140

; <label>:140:                                    ; preds = %139
  %141 = load i32, i32* @x.105
  %142 = load i32, i32* @y.106
  %143 = sub i32 %141, -20265579
  %144 = sub i32 %143, 1
  %145 = add i32 %144, -20265579
  %146 = sub i32 %141, 1
  %147 = mul i32 %141, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %142, 10
  %151 = xor i1 %149, true
  %152 = xor i1 %150, true
  %153 = xor i1 true, true
  %154 = and i1 %151, true
  %155 = and i1 %149, %153
  %156 = and i1 %152, true
  %157 = and i1 %150, %153
  %158 = or i1 %154, %155
  %159 = or i1 %156, %157
  %160 = xor i1 %158, %159
  %161 = or i1 %151, %152
  %162 = xor i1 %161, true
  %163 = or i1 true, %153
  %164 = and i1 %162, %163
  %165 = or i1 %160, %164
  %166 = or i1 %149, %150
  br i1 %165, label %167, label %215

; <label>:167:                                    ; preds = %140, %215
  %168 = load i8*, i8** %29, align 8
  %169 = load i32, i32* %30, align 4
  %170 = insertvalue { i8*, i32 } undef, i8* %168, 0
  %171 = insertvalue { i8*, i32 } %170, i32 %169, 1
  %172 = load i32, i32* @x.105
  %173 = load i32, i32* @y.106
  %174 = add i32 %172, -957740747
  %175 = sub i32 %174, 1
  %176 = sub i32 %175, -957740747
  %177 = sub i32 %172, 1
  %178 = mul i32 %172, %176
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %173, 10
  %182 = xor i1 %180, true
  %183 = xor i1 %181, true
  %184 = xor i1 false, true
  %185 = and i1 %182, false
  %186 = and i1 %180, %184
  %187 = and i1 %183, false
  %188 = and i1 %181, %184
  %189 = or i1 %185, %186
  %190 = or i1 %187, %188
  %191 = xor i1 %189, %190
  %192 = or i1 %182, %183
  %193 = xor i1 %192, true
  %194 = or i1 false, %184
  %195 = and i1 %193, %194
  %196 = or i1 %191, %195
  %197 = or i1 %180, %181
  br i1 %196, label %198, label %215

; <label>:198:                                    ; preds = %167
  resume { i8*, i32 } %171

; <label>:199:                                    ; preds = %27, %1
  %200 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"*, align 8
  %201 = alloca i8*
  %202 = alloca i32
  store %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"** %200, align 8
  %203 = load %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"** %200, align 8
  %204 = bitcast %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %203 to %"class.std::allocator.6"*
  call void @_ZNSaISt13_Rb_tree_nodeIcEEC2Ev(%"class.std::allocator.6"* %204) #3
  %205 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %203, i32 0, i32 0
  %206 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %203, i32 0, i32 1
  %207 = bitcast %"struct.std::_Rb_tree_node_base"* %206 to i8*
  call void @llvm.memset.p0i8.i64(i8* %207, i8 0, i64 32, i32 8, i1 false)
  %208 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %203, i32 0, i32 2
  store i64 0, i64* %208, align 8
  br label %27

; <label>:209:                                    ; preds = %78, %51
  br label %78

; <label>:210:                                    ; preds = %120, %105
  %211 = landingpad { i8*, i32 }
          cleanup
  %212 = extractvalue { i8*, i32 } %211, 0
  store i8* %212, i8** %29, align 8
  %213 = extractvalue { i8*, i32 } %211, 1
  store i32 %213, i32* %30, align 4
  %214 = bitcast %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %31 to %"class.std::allocator.6"*
  call void @_ZNSaISt13_Rb_tree_nodeIcEED2Ev(%"class.std::allocator.6"* %214) #3
  br label %120

; <label>:215:                                    ; preds = %167, %140
  %216 = load i8*, i8** %29, align 8
  %217 = load i32, i32* %30, align 4
  %218 = insertvalue { i8*, i32 } undef, i8* %216, 0
  %219 = insertvalue { i8*, i32 } %218, i32 %217, 1
  br label %167
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeIcEEC2Ev(%"class.std::allocator.6"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.107
  %5 = load i32, i32* @y.108
  %6 = add i32 %4, -1851346981
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1851346981
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 138893724, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 138893724, label %18
    i32 2035959316, label %38
    i32 699496298, label %56
    i32 170310037, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 2035959316, i32 170310037
  store i32 %37, i32* %14
  br label %61

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.6"*, align 8
  store %"class.std::allocator.6"* %0, %"class.std::allocator.6"** %39, align 8
  %40 = load %"class.std::allocator.6"*, %"class.std::allocator.6"** %39, align 8
  %41 = bitcast %"class.std::allocator.6"* %40 to %"class.__gnu_cxx::new_allocator.7"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEEC2Ev(%"class.__gnu_cxx::new_allocator.7"* %41) #3
  %42 = load i32, i32* @x.107
  %43 = load i32, i32* @y.108
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 699496298, i32 170310037
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.std::allocator.6"*, align 8
  store %"class.std::allocator.6"* %0, %"class.std::allocator.6"** %58, align 8
  %59 = load %"class.std::allocator.6"*, %"class.std::allocator.6"** %58, align 8
  %60 = bitcast %"class.std::allocator.6"* %59 to %"class.__gnu_cxx::new_allocator.7"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEEC2Ev(%"class.__gnu_cxx::new_allocator.7"* %60) #3
  store i32 2035959316, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_Rb_tree_implIS3_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.109
  %5 = load i32, i32* @y.110
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1991199179, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %66
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1991199179, label %17
    i32 642289398, label %25
    i32 1018393411, label %52
    i32 -1253279563, label %53
  ]

; <label>:16:                                     ; preds = %14
  br label %66

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 642289398, i32 -1253279563
  store i32 %24, i32* %13
  br label %66

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"** %26, align 8
  %27 = load %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"** %26, align 8
  %28 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %27, i32 0, i32 1
  %29 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %28, i32 0, i32 0
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %27, i32 0, i32 1
  %31 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %30, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %31, align 8
  %32 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %27, i32 0, i32 1
  %33 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %27, i32 0, i32 1
  %34 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %33, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %32, %"struct.std::_Rb_tree_node_base"** %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %27, i32 0, i32 1
  %36 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %27, i32 0, i32 1
  %37 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %36, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %35, %"struct.std::_Rb_tree_node_base"** %37, align 8
  %38 = load i32, i32* @x.109
  %39 = load i32, i32* @y.110
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 1018393411, i32 -1253279563
  store i32 %51, i32* %13
  br label %66

; <label>:52:                                     ; preds = %14
  ret void

; <label>:53:                                     ; preds = %14
  %54 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"** %54, align 8
  %55 = load %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"** %54, align 8
  %56 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %55, i32 0, i32 1
  %57 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %56, i32 0, i32 0
  store i32 0, i32* %57, align 8
  %58 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %55, i32 0, i32 1
  %59 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %58, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %59, align 8
  %60 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %55, i32 0, i32 1
  %61 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %55, i32 0, i32 1
  %62 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %61, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %60, %"struct.std::_Rb_tree_node_base"** %62, align 8
  %63 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %55, i32 0, i32 1
  %64 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %55, i32 0, i32 1
  %65 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %64, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %63, %"struct.std::_Rb_tree_node_base"** %65, align 8
  store i32 642289398, i32* %13
  br label %66

; <label>:66:                                     ; preds = %53, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEEC2Ev(%"class.__gnu_cxx::new_allocator.7"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.7"*, align 8
  store %"class.__gnu_cxx::new_allocator.7"* %0, %"class.__gnu_cxx::new_allocator.7"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.7"*, %"class.__gnu_cxx::new_allocator.7"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt14_Function_baseC2Ev(%"class.std::_Function_base"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::_Function_base"*, align 8
  store %"class.std::_Function_base"* %0, %"class.std::_Function_base"** %2, align 8
  %3 = load %"class.std::_Function_base"*, %"class.std::_Function_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %3, i32 0, i32 1
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* null, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %5, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_0E21_M_not_empty_functionIS1_EEbRKT_"(%class.anon* dereferenceable(1)) #5 align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.115
  %5 = load i32, i32* @y.116
  %6 = sub i32 %4, -1362603275
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1362603275
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -804112803, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %70
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -804112803, label %18
    i32 -986251094, label %38
    i32 -1891153383, label %67
    i32 1228504010, label %68
  ]

; <label>:17:                                     ; preds = %15
  br label %70

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -986251094, i32 1228504010
  store i32 %37, i32* %14
  br label %70

; <label>:38:                                     ; preds = %15
  %39 = alloca %class.anon*, align 8
  store %class.anon* %0, %class.anon** %39, align 8
  %40 = load i32, i32* @x.115
  %41 = load i32, i32* @y.116
  %42 = sub i32 %40, 210508729
  %43 = sub i32 %42, 1
  %44 = add i32 %43, 210508729
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -1891153383, i32 1228504010
  store i32 %66, i32* %14
  br label %70

; <label>:67:                                     ; preds = %15
  ret i1 true

; <label>:68:                                     ; preds = %15
  %69 = alloca %class.anon*, align 8
  store %class.anon* %0, %class.anon** %69, align 8
  store i32 -986251094, i32* %14
  br label %70

; <label>:70:                                     ; preds = %68, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define internal void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_0E15_M_init_functorERSt9_Any_dataOS1_"(%"union.std::_Any_data"* dereferenceable(16), %class.anon* dereferenceable(1)) #0 align 2 {
  %3 = alloca %"union.std::_Any_data"*, align 8
  %4 = alloca %class.anon*, align 8
  %5 = alloca %"struct.std::integral_constant", align 1
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %3, align 8
  store %class.anon* %1, %class.anon** %4, align 8
  %6 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %3, align 8
  %7 = load %class.anon*, %class.anon** %4, align 8
  %8 = call dereferenceable(1) %class.anon* @"_ZSt4moveIRZ4mainE3$_0EONSt16remove_referenceIT_E4typeEOS3_"(%class.anon* dereferenceable(1) %7) #3
  call void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_0E15_M_init_functorERSt9_Any_dataOS1_St17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16) %6, %class.anon* dereferenceable(1) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(1) %class.anon* @"_ZSt4moveIRZ4mainE3$_0EONSt16remove_referenceIT_E4typeEOS3_"(%class.anon* dereferenceable(1)) #5 {
  %2 = alloca %class.anon*, align 8
  store %class.anon* %0, %class.anon** %2, align 8
  %3 = load %class.anon*, %class.anon** %2, align 8
  ret %class.anon* %3
}

; Function Attrs: noinline uwtable
define internal void @"_ZNSt17_Function_handlerIFSt3setIcSt4lessIcESaIcEES4_S4_EZ4mainE3$_0E9_M_invokeERKSt9_Any_dataOS4_SB_"(%"class.std::set"* noalias sret, %"union.std::_Any_data"* dereferenceable(16), %"class.std::set"* dereferenceable(48), %"class.std::set"* dereferenceable(48)) #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.121
  %6 = load i32, i32* @y.122
  %7 = sub i32 %5, 824997080
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 824997080
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %6, 10
  %15 = xor i1 %13, true
  %16 = xor i1 %14, true
  %17 = xor i1 false, true
  %18 = and i1 %15, false
  %19 = and i1 %13, %17
  %20 = and i1 %16, false
  %21 = and i1 %14, %17
  %22 = or i1 %18, %19
  %23 = or i1 %20, %21
  %24 = xor i1 %22, %23
  %25 = or i1 %15, %16
  %26 = xor i1 %25, true
  %27 = or i1 false, %17
  %28 = and i1 %26, %27
  %29 = or i1 %24, %28
  %30 = or i1 %13, %14
  br i1 %29, label %31, label %82

; <label>:31:                                     ; preds = %4, %82
  %32 = alloca %"union.std::_Any_data"*, align 8
  %33 = alloca %"class.std::set"*, align 8
  %34 = alloca %"class.std::set"*, align 8
  %35 = alloca %"class.std::set", align 8
  %36 = alloca %"class.std::set", align 8
  %37 = alloca i8*
  %38 = alloca i32
  store %"union.std::_Any_data"* %1, %"union.std::_Any_data"** %32, align 8
  store %"class.std::set"* %2, %"class.std::set"** %33, align 8
  store %"class.std::set"* %3, %"class.std::set"** %34, align 8
  %39 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %32, align 8
  %40 = call %class.anon* @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_0E14_M_get_pointerERKSt9_Any_data"(%"union.std::_Any_data"* dereferenceable(16) %39)
  %41 = load %"class.std::set"*, %"class.std::set"** %33, align 8
  %42 = call dereferenceable(48) %"class.std::set"* @_ZSt7forwardISt3setIcSt4lessIcESaIcEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::set"* dereferenceable(48) %41) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEEC2EOS3_(%"class.std::set"* %35, %"class.std::set"* dereferenceable(48) %42) #3
  %43 = load %"class.std::set"*, %"class.std::set"** %34, align 8
  %44 = call dereferenceable(48) %"class.std::set"* @_ZSt7forwardISt3setIcSt4lessIcESaIcEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::set"* dereferenceable(48) %43) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEEC2EOS3_(%"class.std::set"* %36, %"class.std::set"* dereferenceable(48) %44) #3
  %45 = load i32, i32* @x.121
  %46 = load i32, i32* @y.122
  %47 = sub i32 %45, 1540715320
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 1540715320
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  br i1 %69, label %71, label %82

; <label>:71:                                     ; preds = %31
  invoke void @"_ZZ4mainENK3$_0clESt3setIcSt4lessIcESaIcEES4_"(%"class.std::set"* sret %0, %class.anon* %40, %"class.std::set"* %35, %"class.std::set"* %36)
          to label %72 unwind label %73

; <label>:72:                                     ; preds = %71
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %36) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %35) #3
  ret void

; <label>:73:                                     ; preds = %71
  %74 = landingpad { i8*, i32 }
          cleanup
  %75 = extractvalue { i8*, i32 } %74, 0
  store i8* %75, i8** %37, align 8
  %76 = extractvalue { i8*, i32 } %74, 1
  store i32 %76, i32* %38, align 4
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %36) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %35) #3
  br label %77

; <label>:77:                                     ; preds = %73
  %78 = load i8*, i8** %37, align 8
  %79 = load i32, i32* %38, align 4
  %80 = insertvalue { i8*, i32 } undef, i8* %78, 0
  %81 = insertvalue { i8*, i32 } %80, i32 %79, 1
  resume { i8*, i32 } %81

; <label>:82:                                     ; preds = %31, %4
  %83 = alloca %"union.std::_Any_data"*, align 8
  %84 = alloca %"class.std::set"*, align 8
  %85 = alloca %"class.std::set"*, align 8
  %86 = alloca %"class.std::set", align 8
  %87 = alloca %"class.std::set", align 8
  %88 = alloca i8*
  %89 = alloca i32
  store %"union.std::_Any_data"* %1, %"union.std::_Any_data"** %83, align 8
  store %"class.std::set"* %2, %"class.std::set"** %84, align 8
  store %"class.std::set"* %3, %"class.std::set"** %85, align 8
  %90 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %83, align 8
  %91 = call %class.anon* @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_0E14_M_get_pointerERKSt9_Any_data"(%"union.std::_Any_data"* dereferenceable(16) %90)
  %92 = load %"class.std::set"*, %"class.std::set"** %84, align 8
  %93 = call dereferenceable(48) %"class.std::set"* @_ZSt7forwardISt3setIcSt4lessIcESaIcEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::set"* dereferenceable(48) %92) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEEC2EOS3_(%"class.std::set"* %86, %"class.std::set"* dereferenceable(48) %93) #3
  %94 = load %"class.std::set"*, %"class.std::set"** %85, align 8
  %95 = call dereferenceable(48) %"class.std::set"* @_ZSt7forwardISt3setIcSt4lessIcESaIcEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::set"* dereferenceable(48) %94) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEEC2EOS3_(%"class.std::set"* %87, %"class.std::set"* dereferenceable(48) %95) #3
  br label %31
}

; Function Attrs: noinline uwtable
define internal zeroext i1 @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_0E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation"(%"union.std::_Any_data"* dereferenceable(16), %"union.std::_Any_data"* dereferenceable(16), i32) #0 align 2 {
  %4 = alloca i32
  %5 = alloca %"union.std::_Any_data"*, align 8
  %6 = alloca %"union.std::_Any_data"*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %"struct.std::integral_constant", align 1
  %9 = alloca %"struct.std::integral_constant", align 1
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %5, align 8
  store %"union.std::_Any_data"* %1, %"union.std::_Any_data"** %6, align 8
  store i32 %2, i32* %7, align 4
  %10 = load i32, i32* %7, align 4
  store i32 %10, i32* %4
  %11 = alloca i32
  store i32 437273771, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %202
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 437273771, label %15
    i32 1001801018, label %19
    i32 -1239310182, label %23
    i32 -286765270, label %27
    i32 49359091, label %31
    i32 -1583917558, label %35
    i32 -1549927662, label %51
    i32 833067467, label %80
    i32 2084533162, label %81
    i32 1670383469, label %109
    i32 204508147, label %140
    i32 365930010, label %141
    i32 1476911500, label %168
    i32 -1345566640, label %186
    i32 -923501220, label %187
    i32 -996305331, label %189
    i32 -1713834823, label %190
    i32 1930490989, label %191
    i32 1172067059, label %194
    i32 -1658095159, label %199
  ]

; <label>:14:                                     ; preds = %12
  br label %202

; <label>:15:                                     ; preds = %12
  %16 = load volatile i32, i32* %4
  %17 = icmp slt i32 %16, 2
  %18 = select i1 %17, i32 -286765270, i32 1001801018
  store i32 %18, i32* %11
  br label %202

; <label>:19:                                     ; preds = %12
  %20 = load volatile i32, i32* %4
  %21 = icmp slt i32 %20, 3
  %22 = select i1 %21, i32 365930010, i32 -1239310182
  store i32 %22, i32* %11
  br label %202

; <label>:23:                                     ; preds = %12
  %24 = load volatile i32, i32* %4
  %25 = icmp eq i32 %24, 3
  %26 = select i1 %25, i32 -923501220, i32 -996305331
  store i32 %26, i32* %11
  br label %202

; <label>:27:                                     ; preds = %12
  %28 = load volatile i32, i32* %4
  %29 = icmp slt i32 %28, 1
  %30 = select i1 %29, i32 49359091, i32 2084533162
  store i32 %30, i32* %11
  br label %202

; <label>:31:                                     ; preds = %12
  %32 = load volatile i32, i32* %4
  %33 = icmp eq i32 %32, 0
  %34 = select i1 %33, i32 -1583917558, i32 -996305331
  store i32 %34, i32* %11
  br label %202

; <label>:35:                                     ; preds = %12
  %36 = load i32, i32* @x.123
  %37 = load i32, i32* @y.124
  %38 = add i32 %36, 1270401801
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, 1270401801
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 -1549927662, i32 1930490989
  store i32 %50, i32* %11
  br label %202

; <label>:51:                                     ; preds = %12
  %52 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %5, align 8
  %53 = call dereferenceable(8) %"class.std::type_info"** @_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v(%"union.std::_Any_data"* %52)
  store %"class.std::type_info"* bitcast ({ i8*, i8* }* @"_ZTIZ4mainE3$_0" to %"class.std::type_info"*), %"class.std::type_info"** %53, align 8
  %54 = load i32, i32* @x.123
  %55 = load i32, i32* @y.124
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 833067467, i32 1930490989
  store i32 %79, i32* %11
  br label %202

; <label>:80:                                     ; preds = %12
  store i32 -1713834823, i32* %11
  br label %202

; <label>:81:                                     ; preds = %12
  %82 = load i32, i32* @x.123
  %83 = load i32, i32* @y.124
  %84 = add i32 %82, 1971182292
  %85 = sub i32 %84, 1
  %86 = sub i32 %85, 1971182292
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = xor i1 %90, true
  %93 = xor i1 %91, true
  %94 = xor i1 false, true
  %95 = and i1 %92, false
  %96 = and i1 %90, %94
  %97 = and i1 %93, false
  %98 = and i1 %91, %94
  %99 = or i1 %95, %96
  %100 = or i1 %97, %98
  %101 = xor i1 %99, %100
  %102 = or i1 %92, %93
  %103 = xor i1 %102, true
  %104 = or i1 false, %94
  %105 = and i1 %103, %104
  %106 = or i1 %101, %105
  %107 = or i1 %90, %91
  %108 = select i1 %106, i32 1670383469, i32 1172067059
  store i32 %108, i32* %11
  br label %202

; <label>:109:                                    ; preds = %12
  %110 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %6, align 8
  %111 = call %class.anon* @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_0E14_M_get_pointerERKSt9_Any_data"(%"union.std::_Any_data"* dereferenceable(16) %110)
  %112 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %5, align 8
  %113 = call dereferenceable(8) %class.anon** @"_ZNSt9_Any_data9_M_accessIPZ4mainE3$_0EERT_v"(%"union.std::_Any_data"* %112)
  store %class.anon* %111, %class.anon** %113, align 8
  %114 = load i32, i32* @x.123
  %115 = load i32, i32* @y.124
  %116 = sub i32 0, 1
  %117 = add i32 %114, %116
  %118 = sub i32 %114, 1
  %119 = mul i32 %114, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %115, 10
  %123 = xor i1 %121, true
  %124 = xor i1 %122, true
  %125 = xor i1 true, true
  %126 = and i1 %123, true
  %127 = and i1 %121, %125
  %128 = and i1 %124, true
  %129 = and i1 %122, %125
  %130 = or i1 %126, %127
  %131 = or i1 %128, %129
  %132 = xor i1 %130, %131
  %133 = or i1 %123, %124
  %134 = xor i1 %133, true
  %135 = or i1 true, %125
  %136 = and i1 %134, %135
  %137 = or i1 %132, %136
  %138 = or i1 %121, %122
  %139 = select i1 %137, i32 204508147, i32 1172067059
  store i32 %139, i32* %11
  br label %202

; <label>:140:                                    ; preds = %12
  store i32 -1713834823, i32* %11
  br label %202

; <label>:141:                                    ; preds = %12
  %142 = load i32, i32* @x.123
  %143 = load i32, i32* @y.124
  %144 = sub i32 0, 1
  %145 = add i32 %142, %144
  %146 = sub i32 %142, 1
  %147 = mul i32 %142, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %143, 10
  %151 = xor i1 %149, true
  %152 = xor i1 %150, true
  %153 = xor i1 true, true
  %154 = and i1 %151, true
  %155 = and i1 %149, %153
  %156 = and i1 %152, true
  %157 = and i1 %150, %153
  %158 = or i1 %154, %155
  %159 = or i1 %156, %157
  %160 = xor i1 %158, %159
  %161 = or i1 %151, %152
  %162 = xor i1 %161, true
  %163 = or i1 true, %153
  %164 = and i1 %162, %163
  %165 = or i1 %160, %164
  %166 = or i1 %149, %150
  %167 = select i1 %165, i32 1476911500, i32 -1658095159
  store i32 %167, i32* %11
  br label %202

; <label>:168:                                    ; preds = %12
  %169 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %5, align 8
  %170 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %6, align 8
  call void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_0E8_M_cloneERSt9_Any_dataRKS3_St17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16) %169, %"union.std::_Any_data"* dereferenceable(16) %170)
  %171 = load i32, i32* @x.123
  %172 = load i32, i32* @y.124
  %173 = add i32 %171, -1619731740
  %174 = sub i32 %173, 1
  %175 = sub i32 %174, -1619731740
  %176 = sub i32 %171, 1
  %177 = mul i32 %171, %175
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %172, 10
  %181 = and i1 %179, %180
  %182 = xor i1 %179, %180
  %183 = or i1 %181, %182
  %184 = or i1 %179, %180
  %185 = select i1 %183, i32 -1345566640, i32 -1658095159
  store i32 %185, i32* %11
  br label %202

; <label>:186:                                    ; preds = %12
  store i32 -1713834823, i32* %11
  br label %202

; <label>:187:                                    ; preds = %12
  %188 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %5, align 8
  call void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_0E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16) %188)
  store i32 -1713834823, i32* %11
  br label %202

; <label>:189:                                    ; preds = %12
  store i32 -1713834823, i32* %11
  br label %202

; <label>:190:                                    ; preds = %12
  ret i1 false

; <label>:191:                                    ; preds = %12
  %192 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %5, align 8
  %193 = call dereferenceable(8) %"class.std::type_info"** @_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v(%"union.std::_Any_data"* %192)
  store %"class.std::type_info"* bitcast ({ i8*, i8* }* @"_ZTIZ4mainE3$_0" to %"class.std::type_info"*), %"class.std::type_info"** %193, align 8
  store i32 -1549927662, i32* %11
  br label %202

; <label>:194:                                    ; preds = %12
  %195 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %6, align 8
  %196 = call %class.anon* @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_0E14_M_get_pointerERKSt9_Any_data"(%"union.std::_Any_data"* dereferenceable(16) %195)
  %197 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %5, align 8
  %198 = call dereferenceable(8) %class.anon** @"_ZNSt9_Any_data9_M_accessIPZ4mainE3$_0EERT_v"(%"union.std::_Any_data"* %197)
  store %class.anon* %196, %class.anon** %198, align 8
  store i32 1670383469, i32* %11
  br label %202

; <label>:199:                                    ; preds = %12
  %200 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %5, align 8
  %201 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %6, align 8
  call void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_0E8_M_cloneERSt9_Any_dataRKS3_St17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16) %200, %"union.std::_Any_data"* dereferenceable(16) %201)
  store i32 1476911500, i32* %11
  br label %202

; <label>:202:                                    ; preds = %199, %194, %191, %189, %187, %186, %168, %141, %140, %109, %81, %80, %51, %35, %31, %27, %23, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define internal void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_0E15_M_init_functorERSt9_Any_dataOS1_St17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16), %class.anon* dereferenceable(1)) #0 align 2 {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"union.std::_Any_data"*, align 8
  %5 = alloca %class.anon*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %4, align 8
  store %class.anon* %1, %class.anon** %5, align 8
  %6 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %4, align 8
  %7 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %6)
  %8 = bitcast i8* %7 to %class.anon*
  %9 = load %class.anon*, %class.anon** %5, align 8
  %10 = call dereferenceable(1) %class.anon* @"_ZSt4moveIRZ4mainE3$_0EONSt16remove_referenceIT_E4typeEOS3_"(%class.anon* dereferenceable(1) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"*) #5 comdat align 2 {
  %2 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %2, align 8
  %3 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %2, align 8
  %4 = bitcast %"union.std::_Any_data"* %3 to [16 x i8]*
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  ret i8* %5
}

; Function Attrs: noinline uwtable
define internal %class.anon* @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_0E14_M_get_pointerERKSt9_Any_data"(%"union.std::_Any_data"* dereferenceable(16)) #0 align 2 {
  %2 = alloca %"union.std::_Any_data"*, align 8
  %3 = alloca %class.anon*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %2, align 8
  %4 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %2, align 8
  %5 = call dereferenceable(1) %class.anon* @"_ZNKSt9_Any_data9_M_accessIZ4mainE3$_0EERKT_v"(%"union.std::_Any_data"* %4)
  %6 = call %class.anon* @"_ZSt11__addressofIKZ4mainE3$_0EPT_RS2_"(%class.anon* dereferenceable(1) %5) #3
  store %class.anon* %6, %class.anon** %3, align 8
  %7 = load %class.anon*, %class.anon** %3, align 8
  ret %class.anon* %7
}

; Function Attrs: noinline uwtable
define internal void @"_ZZ4mainENK3$_0clESt3setIcSt4lessIcESaIcEES4_"(%"class.std::set"* noalias sret, %class.anon*, %"class.std::set"*, %"class.std::set"*) #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %class.anon*, align 8
  %6 = alloca i1, align 1
  %7 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %8 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %9 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %10 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %11 = alloca %"class.std::insert_iterator", align 8
  %12 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %13 = alloca i8*
  %14 = alloca i32
  %15 = alloca %"class.std::insert_iterator", align 8
  store %class.anon* %1, %class.anon** %5, align 8
  %16 = load %class.anon*, %class.anon** %5, align 8
  store i1 false, i1* %6, align 1
  call void @_ZNSt3setIcSt4lessIcESaIcEEC2Ev(%"class.std::set"* %0) #3
  %17 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt3setIcSt4lessIcESaIcEE5beginEv(%"class.std::set"* %2) #3
  %18 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %7, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %18, align 8
  %19 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt3setIcSt4lessIcESaIcEE3endEv(%"class.std::set"* %2) #3
  %20 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %8, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %19, %"struct.std::_Rb_tree_node_base"** %20, align 8
  %21 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt3setIcSt4lessIcESaIcEE5beginEv(%"class.std::set"* %3) #3
  %22 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %9, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %21, %"struct.std::_Rb_tree_node_base"** %22, align 8
  %23 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt3setIcSt4lessIcESaIcEE3endEv(%"class.std::set"* %3) #3
  %24 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %10, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %23, %"struct.std::_Rb_tree_node_base"** %24, align 8
  %25 = invoke %"struct.std::_Rb_tree_node_base"* @_ZSt3endISt3setIcSt4lessIcESaIcEEEDTcldtfp_3endEERT_(%"class.std::set"* dereferenceable(48) %0)
          to label %26 unwind label %152

; <label>:26:                                     ; preds = %4
  %27 = load i32, i32* @x.131
  %28 = load i32, i32* @y.132
  %29 = add i32 %27, -470314154
  %30 = sub i32 %29, 1
  %31 = sub i32 %30, -470314154
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 true, true
  %40 = and i1 %37, true
  %41 = and i1 %35, %39
  %42 = and i1 %38, true
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 true, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  br i1 %51, label %53, label %193

; <label>:53:                                     ; preds = %26, %193
  %54 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %12, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %25, %"struct.std::_Rb_tree_node_base"** %54, align 8
  %55 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %12, i32 0, i32 0
  %56 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %55, align 8
  %57 = load i32, i32* @x.131
  %58 = load i32, i32* @y.132
  %59 = sub i32 0, 1
  %60 = add i32 %57, %59
  %61 = sub i32 %57, 1
  %62 = mul i32 %57, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %58, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 true, true
  %69 = and i1 %66, true
  %70 = and i1 %64, %68
  %71 = and i1 %67, true
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 true, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  br i1 %80, label %82, label %193

; <label>:82:                                     ; preds = %53
  %83 = invoke { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } @_ZSt8inserterISt3setIcSt4lessIcESaIcEESt23_Rb_tree_const_iteratorIcEESt15insert_iteratorIT_ERS8_T0_(%"class.std::set"* dereferenceable(48) %0, %"struct.std::_Rb_tree_node_base"* %56)
          to label %84 unwind label %152

; <label>:84:                                     ; preds = %82
  %85 = load i32, i32* @x.131
  %86 = load i32, i32* @y.132
  %87 = sub i32 0, 1
  %88 = add i32 %85, %87
  %89 = sub i32 %85, 1
  %90 = mul i32 %85, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %86, 10
  %94 = xor i1 %92, true
  %95 = xor i1 %93, true
  %96 = xor i1 false, true
  %97 = and i1 %94, false
  %98 = and i1 %92, %96
  %99 = and i1 %95, false
  %100 = and i1 %93, %96
  %101 = or i1 %97, %98
  %102 = or i1 %99, %100
  %103 = xor i1 %101, %102
  %104 = or i1 %94, %95
  %105 = xor i1 %104, true
  %106 = or i1 false, %96
  %107 = and i1 %105, %106
  %108 = or i1 %103, %107
  %109 = or i1 %92, %93
  br i1 %108, label %110, label %197

; <label>:110:                                    ; preds = %84, %197
  %111 = bitcast %"class.std::insert_iterator"* %11 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %112 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %111, i32 0, i32 0
  %113 = extractvalue { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %83, 0
  store %"class.std::set"* %113, %"class.std::set"** %112, align 8
  %114 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %111, i32 0, i32 1
  %115 = extractvalue { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %83, 1
  store %"struct.std::_Rb_tree_node_base"* %115, %"struct.std::_Rb_tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %7, i32 0, i32 0
  %117 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %116, align 8
  %118 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %8, i32 0, i32 0
  %119 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %9, i32 0, i32 0
  %121 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %120, align 8
  %122 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %10, i32 0, i32 0
  %123 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %122, align 8
  %124 = bitcast %"class.std::insert_iterator"* %11 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %125 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %124, i32 0, i32 0
  %126 = load %"class.std::set"*, %"class.std::set"** %125, align 8
  %127 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %124, i32 0, i32 1
  %128 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %127, align 8
  %129 = load i32, i32* @x.131
  %130 = load i32, i32* @y.132
  %131 = sub i32 %129, 1472458499
  %132 = sub i32 %131, 1
  %133 = add i32 %132, 1472458499
  %134 = sub i32 %129, 1
  %135 = mul i32 %129, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %130, 10
  %139 = and i1 %137, %138
  %140 = xor i1 %137, %138
  %141 = or i1 %139, %140
  %142 = or i1 %137, %138
  br i1 %141, label %143, label %197

; <label>:143:                                    ; preds = %110
  %144 = invoke { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } @_ZSt9set_unionISt23_Rb_tree_const_iteratorIcES1_St15insert_iteratorISt3setIcSt4lessIcESaIcEEEET1_T_SA_T0_SB_S9_(%"struct.std::_Rb_tree_node_base"* %117, %"struct.std::_Rb_tree_node_base"* %119, %"struct.std::_Rb_tree_node_base"* %121, %"struct.std::_Rb_tree_node_base"* %123, %"class.std::set"* %126, %"struct.std::_Rb_tree_node_base"* %128)
          to label %145 unwind label %152

; <label>:145:                                    ; preds = %143
  %146 = bitcast %"class.std::insert_iterator"* %15 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %147 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %146, i32 0, i32 0
  %148 = extractvalue { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %144, 0
  store %"class.std::set"* %148, %"class.std::set"** %147, align 8
  %149 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %146, i32 0, i32 1
  %150 = extractvalue { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %144, 1
  store %"struct.std::_Rb_tree_node_base"* %150, %"struct.std::_Rb_tree_node_base"** %149, align 8
  store i1 true, i1* %6, align 1
  %151 = load i1, i1* %6, align 1
  br i1 %151, label %187, label %156

; <label>:152:                                    ; preds = %143, %82, %4
  %153 = landingpad { i8*, i32 }
          cleanup
  %154 = extractvalue { i8*, i32 } %153, 0
  store i8* %154, i8** %13, align 8
  %155 = extractvalue { i8*, i32 } %153, 1
  store i32 %155, i32* %14, align 4
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %0) #3
  br label %188

; <label>:156:                                    ; preds = %145
  %157 = load i32, i32* @x.131
  %158 = load i32, i32* @y.132
  %159 = add i32 %157, -342324128
  %160 = sub i32 %159, 1
  %161 = sub i32 %160, -342324128
  %162 = sub i32 %157, 1
  %163 = mul i32 %157, %161
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %158, 10
  %167 = and i1 %165, %166
  %168 = xor i1 %165, %166
  %169 = or i1 %167, %168
  %170 = or i1 %165, %166
  br i1 %169, label %171, label %216

; <label>:171:                                    ; preds = %156, %216
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %0) #3
  %172 = load i32, i32* @x.131
  %173 = load i32, i32* @y.132
  %174 = sub i32 %172, -255431741
  %175 = sub i32 %174, 1
  %176 = add i32 %175, -255431741
  %177 = sub i32 %172, 1
  %178 = mul i32 %172, %176
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %173, 10
  %182 = and i1 %180, %181
  %183 = xor i1 %180, %181
  %184 = or i1 %182, %183
  %185 = or i1 %180, %181
  br i1 %184, label %186, label %216

; <label>:186:                                    ; preds = %171
  br label %187

; <label>:187:                                    ; preds = %186, %145
  ret void

; <label>:188:                                    ; preds = %152
  %189 = load i8*, i8** %13, align 8
  %190 = load i32, i32* %14, align 4
  %191 = insertvalue { i8*, i32 } undef, i8* %189, 0
  %192 = insertvalue { i8*, i32 } %191, i32 %190, 1
  resume { i8*, i32 } %192

; <label>:193:                                    ; preds = %53, %26
  %194 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %12, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %25, %"struct.std::_Rb_tree_node_base"** %194, align 8
  %195 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %12, i32 0, i32 0
  %196 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %195, align 8
  br label %53

; <label>:197:                                    ; preds = %110, %84
  %198 = bitcast %"class.std::insert_iterator"* %11 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %199 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %198, i32 0, i32 0
  %200 = extractvalue { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %83, 0
  store %"class.std::set"* %200, %"class.std::set"** %199, align 8
  %201 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %198, i32 0, i32 1
  %202 = extractvalue { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %83, 1
  store %"struct.std::_Rb_tree_node_base"* %202, %"struct.std::_Rb_tree_node_base"** %201, align 8
  %203 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %7, i32 0, i32 0
  %204 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %203, align 8
  %205 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %8, i32 0, i32 0
  %206 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %205, align 8
  %207 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %9, i32 0, i32 0
  %208 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %207, align 8
  %209 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %10, i32 0, i32 0
  %210 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %209, align 8
  %211 = bitcast %"class.std::insert_iterator"* %11 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %212 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %211, i32 0, i32 0
  %213 = load %"class.std::set"*, %"class.std::set"** %212, align 8
  %214 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %211, i32 0, i32 1
  %215 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %214, align 8
  br label %110

; <label>:216:                                    ; preds = %171, %156
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %0) #3
  br label %171
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(48) %"class.std::set"* @_ZSt7forwardISt3setIcSt4lessIcESaIcEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::set"* dereferenceable(48)) #5 comdat {
  %2 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %2, align 8
  %3 = load %"class.std::set"*, %"class.std::set"** %2, align 8
  ret %"class.std::set"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt3setIcSt4lessIcESaIcEEC2EOS3_(%"class.std::set"*, %"class.std::set"* dereferenceable(48)) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::set"*, align 8
  %4 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %3, align 8
  store %"class.std::set"* %1, %"class.std::set"** %4, align 8
  %5 = load %"class.std::set"*, %"class.std::set"** %3, align 8
  %6 = getelementptr inbounds %"class.std::set", %"class.std::set"* %5, i32 0, i32 0
  %7 = load %"class.std::set"*, %"class.std::set"** %4, align 8
  %8 = getelementptr inbounds %"class.std::set", %"class.std::set"* %7, i32 0, i32 0
  %9 = call dereferenceable(48) %"class.std::_Rb_tree"* @_ZSt4moveIRSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEEEONSt16remove_referenceIT_E4typeEOS9_(%"class.std::_Rb_tree"* dereferenceable(48) %8) #3
  invoke void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEEC2EOS5_(%"class.std::_Rb_tree"* %6, %"class.std::_Rb_tree"* dereferenceable(48) %9)
          to label %10 unwind label %11

; <label>:10:                                     ; preds = %2
  ret void

; <label>:11:                                     ; preds = %2
  %12 = landingpad { i8*, i32 }
          catch i8* null
  %13 = extractvalue { i8*, i32 } %12, 0
  call void @__clang_call_terminate(i8* %13) #12
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define internal %class.anon* @"_ZSt11__addressofIKZ4mainE3$_0EPT_RS2_"(%class.anon* dereferenceable(1)) #5 {
  %2 = alloca %class.anon*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.137
  %6 = load i32, i32* @y.138
  %7 = sub i32 %5, -2020788604
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -2020788604
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -325561585, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -325561585, label %19
    i32 -743078062, label %27
    i32 1923863656, label %58
    i32 -253326360, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -743078062, i32 -253326360
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %class.anon*, align 8
  store %class.anon* %0, %class.anon** %28, align 8
  %29 = load %class.anon*, %class.anon** %28, align 8
  %30 = bitcast %class.anon* %29 to i8*
  %31 = bitcast i8* %30 to %class.anon*
  store %class.anon* %31, %class.anon** %2
  %32 = load i32, i32* @x.137
  %33 = load i32, i32* @y.138
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 1923863656, i32 -253326360
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile %class.anon*, %class.anon** %2
  ret %class.anon* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %class.anon*, align 8
  store %class.anon* %0, %class.anon** %61, align 8
  %62 = load %class.anon*, %class.anon** %61, align 8
  %63 = bitcast %class.anon* %62 to i8*
  %64 = bitcast i8* %63 to %class.anon*
  store i32 -743078062, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define internal dereferenceable(1) %class.anon* @"_ZNKSt9_Any_data9_M_accessIZ4mainE3$_0EERKT_v"(%"union.std::_Any_data"*) #0 align 2 {
  %2 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %2, align 8
  %3 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %2, align 8
  %4 = call i8* @_ZNKSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %3)
  %5 = bitcast i8* %4 to %class.anon*
  ret %class.anon* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNKSt9_Any_data9_M_accessEv(%"union.std::_Any_data"*) #5 comdat align 2 {
  %2 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %2, align 8
  %3 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %2, align 8
  %4 = bitcast %"union.std::_Any_data"* %3 to [16 x i8]*
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i64 0, i64 0
  ret i8* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } @_ZSt9set_unionISt23_Rb_tree_const_iteratorIcES1_St15insert_iteratorISt3setIcSt4lessIcESaIcEEEET1_T_SA_T0_SB_S9_(%"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"class.std::set"*, %"struct.std::_Rb_tree_node_base"*) #0 comdat {
  %7 = alloca %"class.std::insert_iterator", align 8
  %8 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %9 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %10 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %11 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %12 = alloca %"class.std::insert_iterator", align 8
  %13 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %14 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %15 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %16 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %17 = alloca %"class.std::insert_iterator", align 8
  %18 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %19 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %20 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %8, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %20, align 8
  %21 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %9, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %21, align 8
  %22 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %10, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %22, align 8
  %23 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %11, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %3, %"struct.std::_Rb_tree_node_base"** %23, align 8
  %24 = bitcast %"class.std::insert_iterator"* %12 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %25 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %24, i32 0, i32 0
  store %"class.std::set"* %4, %"class.std::set"** %25, align 8
  %26 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %24, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %5, %"struct.std::_Rb_tree_node_base"** %26, align 8
  %27 = bitcast %"struct.std::_Rb_tree_const_iterator"* %13 to i8*
  %28 = bitcast %"struct.std::_Rb_tree_const_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 8, i32 8, i1 false)
  %29 = bitcast %"struct.std::_Rb_tree_const_iterator"* %14 to i8*
  %30 = bitcast %"struct.std::_Rb_tree_const_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 8, i32 8, i1 false)
  %31 = bitcast %"struct.std::_Rb_tree_const_iterator"* %15 to i8*
  %32 = bitcast %"struct.std::_Rb_tree_const_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 8, i32 8, i1 false)
  %33 = bitcast %"struct.std::_Rb_tree_const_iterator"* %16 to i8*
  %34 = bitcast %"struct.std::_Rb_tree_const_iterator"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %34, i64 8, i32 8, i1 false)
  %35 = bitcast %"class.std::insert_iterator"* %17 to i8*
  %36 = bitcast %"class.std::insert_iterator"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 16, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops16__iter_less_iterEv()
  %37 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %13, i32 0, i32 0
  %38 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %14, i32 0, i32 0
  %40 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %15, i32 0, i32 0
  %42 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %41, align 8
  %43 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %16, i32 0, i32 0
  %44 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %43, align 8
  %45 = bitcast %"class.std::insert_iterator"* %17 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %46 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %45, i32 0, i32 0
  %47 = load %"class.std::set"*, %"class.std::set"** %46, align 8
  %48 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %45, i32 0, i32 1
  %49 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %48, align 8
  %50 = call { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } @_ZSt11__set_unionISt23_Rb_tree_const_iteratorIcES1_St15insert_iteratorISt3setIcSt4lessIcESaIcEEEN9__gnu_cxx5__ops15_Iter_less_iterEET1_T_SD_T0_SE_SC_T2_(%"struct.std::_Rb_tree_node_base"* %38, %"struct.std::_Rb_tree_node_base"* %40, %"struct.std::_Rb_tree_node_base"* %42, %"struct.std::_Rb_tree_node_base"* %44, %"class.std::set"* %47, %"struct.std::_Rb_tree_node_base"* %49)
  %51 = bitcast %"class.std::insert_iterator"* %7 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %52 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %51, i32 0, i32 0
  %53 = extractvalue { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %50, 0
  store %"class.std::set"* %53, %"class.std::set"** %52, align 8
  %54 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %51, i32 0, i32 1
  %55 = extractvalue { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %50, 1
  store %"struct.std::_Rb_tree_node_base"* %55, %"struct.std::_Rb_tree_node_base"** %54, align 8
  %56 = bitcast %"class.std::insert_iterator"* %7 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %57 = load { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %56, align 8
  ret { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %57
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt3setIcSt4lessIcESaIcEE5beginEv(%"class.std::set"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %3 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %3, align 8
  %4 = load %"class.std::set"*, %"class.std::set"** %3, align 8
  %5 = getelementptr inbounds %"class.std::set", %"class.std::set"* %4, i32 0, i32 0
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE5beginEv(%"class.std::_Rb_tree"* %5) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %2, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %2, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  ret %"struct.std::_Rb_tree_node_base"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt3setIcSt4lessIcESaIcEE3endEv(%"class.std::set"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %3 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %3, align 8
  %4 = load %"class.std::set"*, %"class.std::set"** %3, align 8
  %5 = getelementptr inbounds %"class.std::set", %"class.std::set"* %4, i32 0, i32 0
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE3endEv(%"class.std::_Rb_tree"* %5) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %2, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %2, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  ret %"struct.std::_Rb_tree_node_base"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } @_ZSt8inserterISt3setIcSt4lessIcESaIcEESt23_Rb_tree_const_iteratorIcEESt15insert_iteratorIT_ERS8_T0_(%"class.std::set"* dereferenceable(48), %"struct.std::_Rb_tree_node_base"*) #0 comdat {
  %3 = alloca %"class.std::insert_iterator", align 8
  %4 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %5 = alloca %"class.std::set"*, align 8
  %6 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %4, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %7, align 8
  store %"class.std::set"* %0, %"class.std::set"** %5, align 8
  %8 = load %"class.std::set"*, %"class.std::set"** %5, align 8
  %9 = bitcast %"struct.std::_Rb_tree_const_iterator"* %6 to i8*
  %10 = bitcast %"struct.std::_Rb_tree_const_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 8, i32 8, i1 false)
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %6, i32 0, i32 0
  %12 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  call void @_ZNSt15insert_iteratorISt3setIcSt4lessIcESaIcEEEC2ERS4_St23_Rb_tree_const_iteratorIcE(%"class.std::insert_iterator"* %3, %"class.std::set"* dereferenceable(48) %8, %"struct.std::_Rb_tree_node_base"* %12)
  %13 = bitcast %"class.std::insert_iterator"* %3 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %14 = load { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %13, align 8
  ret { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZSt3endISt3setIcSt4lessIcESaIcEEEDTcldtfp_3endEERT_(%"class.std::set"* dereferenceable(48)) #5 comdat {
  %2 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %3 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %3, align 8
  %4 = load %"class.std::set"*, %"class.std::set"** %3, align 8
  %5 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt3setIcSt4lessIcESaIcEE3endEv(%"class.std::set"* %4) #3
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %2, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %5, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %2, i32 0, i32 0
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_node_base"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } @_ZSt11__set_unionISt23_Rb_tree_const_iteratorIcES1_St15insert_iteratorISt3setIcSt4lessIcESaIcEEEN9__gnu_cxx5__ops15_Iter_less_iterEET1_T_SD_T0_SE_SC_T2_(%"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"class.std::set"*, %"struct.std::_Rb_tree_node_base"*) #0 comdat {
  %7 = alloca { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }
  %8 = alloca i1
  %9 = alloca %"class.std::insert_iterator"*
  %10 = alloca %"struct.std::_Rb_tree_const_iterator"*
  %11 = alloca %"struct.std::_Rb_tree_const_iterator"*
  %12 = alloca %"class.std::insert_iterator"*
  %13 = alloca %"struct.std::_Rb_tree_const_iterator"*
  %14 = alloca %"struct.std::_Rb_tree_const_iterator"*
  %15 = alloca %"struct.std::_Rb_tree_const_iterator"*
  %16 = alloca %"struct.std::_Rb_tree_const_iterator"*
  %17 = alloca %"struct.std::_Rb_tree_const_iterator"*
  %18 = alloca %"struct.std::_Rb_tree_const_iterator"*
  %19 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter"*
  %20 = alloca %"class.std::insert_iterator"*
  %21 = alloca %"struct.std::_Rb_tree_const_iterator"*
  %22 = alloca %"struct.std::_Rb_tree_const_iterator"*
  %23 = alloca %"struct.std::_Rb_tree_const_iterator"*
  %24 = alloca %"struct.std::_Rb_tree_const_iterator"*
  %25 = alloca %"class.std::insert_iterator"*
  %26 = alloca i1
  %27 = alloca i1
  %28 = load i32, i32* @x.153
  %29 = load i32, i32* @y.154
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  store i1 %35, i1* %27
  %36 = icmp slt i32 %29, 10
  store i1 %36, i1* %26
  %37 = alloca i32
  store i32 838793900, i32* %37
  %38 = alloca i1
  br label %39

; <label>:39:                                     ; preds = %6, %565
  %40 = load i32, i32* %37
  switch i32 %40, label %41 [
    i32 838793900, label %42
    i32 828054223, label %62
    i32 1014519337, label %119
    i32 555062648, label %120
    i32 927436566, label %148
    i32 -1359614142, label %179
    i32 1934521061, label %182
    i32 -442522230, label %186
    i32 -254744187, label %189
    i32 804966089, label %207
    i32 1600685884, label %215
    i32 1101852414, label %233
    i32 -1201349155, label %241
    i32 1526895270, label %256
    i32 309159663, label %293
    i32 -1901436826, label %294
    i32 1464031905, label %295
    i32 2083179150, label %311
    i32 982625198, label %341
    i32 1336597732, label %342
    i32 -1719840969, label %370
    i32 301859731, label %459
    i32 -1309933915, label %461
    i32 -293840527, label %486
    i32 1689893133, label %490
    i32 144063831, label %500
    i32 157895355, label %503
  ]

; <label>:41:                                     ; preds = %39
  br label %565

; <label>:42:                                     ; preds = %39
  %43 = load volatile i1, i1* %27
  %44 = load volatile i1, i1* %26
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 828054223, i32 -1309933915
  store i32 %61, i32* %37
  br label %565

; <label>:62:                                     ; preds = %39
  %63 = alloca %"class.std::insert_iterator", align 8
  store %"class.std::insert_iterator"* %63, %"class.std::insert_iterator"** %25
  %64 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  store %"struct.std::_Rb_tree_const_iterator"* %64, %"struct.std::_Rb_tree_const_iterator"** %24
  %65 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  store %"struct.std::_Rb_tree_const_iterator"* %65, %"struct.std::_Rb_tree_const_iterator"** %23
  %66 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  store %"struct.std::_Rb_tree_const_iterator"* %66, %"struct.std::_Rb_tree_const_iterator"** %22
  %67 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  store %"struct.std::_Rb_tree_const_iterator"* %67, %"struct.std::_Rb_tree_const_iterator"** %21
  %68 = alloca %"class.std::insert_iterator", align 8
  store %"class.std::insert_iterator"* %68, %"class.std::insert_iterator"** %20
  %69 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  store %"struct.__gnu_cxx::__ops::_Iter_less_iter"* %69, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %19
  %70 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  store %"struct.std::_Rb_tree_const_iterator"* %70, %"struct.std::_Rb_tree_const_iterator"** %18
  %71 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  store %"struct.std::_Rb_tree_const_iterator"* %71, %"struct.std::_Rb_tree_const_iterator"** %17
  %72 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  store %"struct.std::_Rb_tree_const_iterator"* %72, %"struct.std::_Rb_tree_const_iterator"** %16
  %73 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  store %"struct.std::_Rb_tree_const_iterator"* %73, %"struct.std::_Rb_tree_const_iterator"** %15
  %74 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  store %"struct.std::_Rb_tree_const_iterator"* %74, %"struct.std::_Rb_tree_const_iterator"** %14
  %75 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  store %"struct.std::_Rb_tree_const_iterator"* %75, %"struct.std::_Rb_tree_const_iterator"** %13
  %76 = alloca %"class.std::insert_iterator", align 8
  store %"class.std::insert_iterator"* %76, %"class.std::insert_iterator"** %12
  %77 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  store %"struct.std::_Rb_tree_const_iterator"* %77, %"struct.std::_Rb_tree_const_iterator"** %11
  %78 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  store %"struct.std::_Rb_tree_const_iterator"* %78, %"struct.std::_Rb_tree_const_iterator"** %10
  %79 = alloca %"class.std::insert_iterator", align 8
  store %"class.std::insert_iterator"* %79, %"class.std::insert_iterator"** %9
  %80 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %24
  %81 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %80, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %81, align 8
  %82 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %23
  %83 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %82, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %83, align 8
  %84 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %22
  %85 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %84, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %85, align 8
  %86 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %21
  %87 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %86, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %3, %"struct.std::_Rb_tree_node_base"** %87, align 8
  %88 = load volatile %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %20
  %89 = bitcast %"class.std::insert_iterator"* %88 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %90 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %89, i32 0, i32 0
  store %"class.std::set"* %4, %"class.std::set"** %90, align 8
  %91 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %89, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %5, %"struct.std::_Rb_tree_node_base"** %91, align 8
  %92 = load i32, i32* @x.153
  %93 = load i32, i32* @y.154
  %94 = sub i32 %92, -2057128772
  %95 = sub i32 %94, 1
  %96 = add i32 %95, -2057128772
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 true, true
  %105 = and i1 %102, true
  %106 = and i1 %100, %104
  %107 = and i1 %103, true
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 true, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  %118 = select i1 %116, i32 1014519337, i32 -1309933915
  store i32 %118, i32* %37
  br label %565

; <label>:119:                                    ; preds = %39
  store i32 555062648, i32* %37
  br label %565

; <label>:120:                                    ; preds = %39
  %121 = load i32, i32* @x.153
  %122 = load i32, i32* @y.154
  %123 = add i32 %121, 345970385
  %124 = sub i32 %123, 1
  %125 = sub i32 %124, 345970385
  %126 = sub i32 %121, 1
  %127 = mul i32 %121, %125
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %122, 10
  %131 = xor i1 %129, true
  %132 = xor i1 %130, true
  %133 = xor i1 true, true
  %134 = and i1 %131, true
  %135 = and i1 %129, %133
  %136 = and i1 %132, true
  %137 = and i1 %130, %133
  %138 = or i1 %134, %135
  %139 = or i1 %136, %137
  %140 = xor i1 %138, %139
  %141 = or i1 %131, %132
  %142 = xor i1 %141, true
  %143 = or i1 true, %133
  %144 = and i1 %142, %143
  %145 = or i1 %140, %144
  %146 = or i1 %129, %130
  %147 = select i1 %145, i32 927436566, i32 -293840527
  store i32 %147, i32* %37
  br label %565

; <label>:148:                                    ; preds = %39
  %149 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %24
  %150 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %23
  %151 = call zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorIcEneERKS0_(%"struct.std::_Rb_tree_const_iterator"* %149, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %150) #3
  store i1 %151, i1* %8
  %152 = load i32, i32* @x.153
  %153 = load i32, i32* @y.154
  %154 = sub i32 %152, -1416685855
  %155 = sub i32 %154, 1
  %156 = add i32 %155, -1416685855
  %157 = sub i32 %152, 1
  %158 = mul i32 %152, %156
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %153, 10
  %162 = xor i1 %160, true
  %163 = xor i1 %161, true
  %164 = xor i1 true, true
  %165 = and i1 %162, true
  %166 = and i1 %160, %164
  %167 = and i1 %163, true
  %168 = and i1 %161, %164
  %169 = or i1 %165, %166
  %170 = or i1 %167, %168
  %171 = xor i1 %169, %170
  %172 = or i1 %162, %163
  %173 = xor i1 %172, true
  %174 = or i1 true, %164
  %175 = and i1 %173, %174
  %176 = or i1 %171, %175
  %177 = or i1 %160, %161
  %178 = select i1 %176, i32 -1359614142, i32 -293840527
  store i32 %178, i32* %37
  br label %565

; <label>:179:                                    ; preds = %39
  %180 = load volatile i1, i1* %8
  %181 = select i1 %180, i32 1934521061, i32 -442522230
  store i32 %181, i32* %37
  store i1 false, i1* %38
  br label %565

; <label>:182:                                    ; preds = %39
  %183 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %22
  %184 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %21
  %185 = call zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorIcEneERKS0_(%"struct.std::_Rb_tree_const_iterator"* %183, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %184) #3
  store i32 -442522230, i32* %37
  store i1 %185, i1* %38
  br label %565

; <label>:186:                                    ; preds = %39
  %187 = load i1, i1* %38
  %188 = select i1 %187, i32 -254744187, i32 1336597732
  store i32 %188, i32* %37
  br label %565

; <label>:189:                                    ; preds = %39
  %190 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %18
  %191 = bitcast %"struct.std::_Rb_tree_const_iterator"* %190 to i8*
  %192 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %24
  %193 = bitcast %"struct.std::_Rb_tree_const_iterator"* %192 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %191, i8* %193, i64 8, i32 8, i1 false)
  %194 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %17
  %195 = bitcast %"struct.std::_Rb_tree_const_iterator"* %194 to i8*
  %196 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %22
  %197 = bitcast %"struct.std::_Rb_tree_const_iterator"* %196 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %195, i8* %197, i64 8, i32 8, i1 false)
  %198 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %18
  %199 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %198, i32 0, i32 0
  %200 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %199, align 8
  %201 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %17
  %202 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %201, i32 0, i32 0
  %203 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %202, align 8
  %204 = load volatile %"struct.__gnu_cxx::__ops::_Iter_less_iter"*, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %19
  %205 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclISt23_Rb_tree_const_iteratorIcES4_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %204, %"struct.std::_Rb_tree_node_base"* %200, %"struct.std::_Rb_tree_node_base"* %203)
  %206 = select i1 %205, i32 804966089, i32 1600685884
  store i32 %206, i32* %37
  br label %565

; <label>:207:                                    ; preds = %39
  %208 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %24
  %209 = call dereferenceable(1) i8* @_ZNKSt23_Rb_tree_const_iteratorIcEdeEv(%"struct.std::_Rb_tree_const_iterator"* %208) #3
  %210 = load volatile %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %20
  %211 = call dereferenceable(16) %"class.std::insert_iterator"* @_ZNSt15insert_iteratorISt3setIcSt4lessIcESaIcEEEdeEv(%"class.std::insert_iterator"* %210)
  %212 = call dereferenceable(16) %"class.std::insert_iterator"* @_ZNSt15insert_iteratorISt3setIcSt4lessIcESaIcEEEaSERKc(%"class.std::insert_iterator"* %211, i8* dereferenceable(1) %209)
  %213 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %24
  %214 = call dereferenceable(8) %"struct.std::_Rb_tree_const_iterator"* @_ZNSt23_Rb_tree_const_iteratorIcEppEv(%"struct.std::_Rb_tree_const_iterator"* %213) #3
  store i32 1464031905, i32* %37
  br label %565

; <label>:215:                                    ; preds = %39
  %216 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %16
  %217 = bitcast %"struct.std::_Rb_tree_const_iterator"* %216 to i8*
  %218 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %22
  %219 = bitcast %"struct.std::_Rb_tree_const_iterator"* %218 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %217, i8* %219, i64 8, i32 8, i1 false)
  %220 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %15
  %221 = bitcast %"struct.std::_Rb_tree_const_iterator"* %220 to i8*
  %222 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %24
  %223 = bitcast %"struct.std::_Rb_tree_const_iterator"* %222 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %221, i8* %223, i64 8, i32 8, i1 false)
  %224 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %16
  %225 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %224, i32 0, i32 0
  %226 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %225, align 8
  %227 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %15
  %228 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %227, i32 0, i32 0
  %229 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %228, align 8
  %230 = load volatile %"struct.__gnu_cxx::__ops::_Iter_less_iter"*, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %19
  %231 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclISt23_Rb_tree_const_iteratorIcES4_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %230, %"struct.std::_Rb_tree_node_base"* %226, %"struct.std::_Rb_tree_node_base"* %229)
  %232 = select i1 %231, i32 1101852414, i32 -1201349155
  store i32 %232, i32* %37
  br label %565

; <label>:233:                                    ; preds = %39
  %234 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %22
  %235 = call dereferenceable(1) i8* @_ZNKSt23_Rb_tree_const_iteratorIcEdeEv(%"struct.std::_Rb_tree_const_iterator"* %234) #3
  %236 = load volatile %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %20
  %237 = call dereferenceable(16) %"class.std::insert_iterator"* @_ZNSt15insert_iteratorISt3setIcSt4lessIcESaIcEEEdeEv(%"class.std::insert_iterator"* %236)
  %238 = call dereferenceable(16) %"class.std::insert_iterator"* @_ZNSt15insert_iteratorISt3setIcSt4lessIcESaIcEEEaSERKc(%"class.std::insert_iterator"* %237, i8* dereferenceable(1) %235)
  %239 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %22
  %240 = call dereferenceable(8) %"struct.std::_Rb_tree_const_iterator"* @_ZNSt23_Rb_tree_const_iteratorIcEppEv(%"struct.std::_Rb_tree_const_iterator"* %239) #3
  store i32 -1901436826, i32* %37
  br label %565

; <label>:241:                                    ; preds = %39
  %242 = load i32, i32* @x.153
  %243 = load i32, i32* @y.154
  %244 = sub i32 0, 1
  %245 = add i32 %242, %244
  %246 = sub i32 %242, 1
  %247 = mul i32 %242, %245
  %248 = urem i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = icmp slt i32 %243, 10
  %251 = and i1 %249, %250
  %252 = xor i1 %249, %250
  %253 = or i1 %251, %252
  %254 = or i1 %249, %250
  %255 = select i1 %253, i32 1526895270, i32 1689893133
  store i32 %255, i32* %37
  br label %565

; <label>:256:                                    ; preds = %39
  %257 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %24
  %258 = call dereferenceable(1) i8* @_ZNKSt23_Rb_tree_const_iteratorIcEdeEv(%"struct.std::_Rb_tree_const_iterator"* %257) #3
  %259 = load volatile %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %20
  %260 = call dereferenceable(16) %"class.std::insert_iterator"* @_ZNSt15insert_iteratorISt3setIcSt4lessIcESaIcEEEdeEv(%"class.std::insert_iterator"* %259)
  %261 = call dereferenceable(16) %"class.std::insert_iterator"* @_ZNSt15insert_iteratorISt3setIcSt4lessIcESaIcEEEaSERKc(%"class.std::insert_iterator"* %260, i8* dereferenceable(1) %258)
  %262 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %24
  %263 = call dereferenceable(8) %"struct.std::_Rb_tree_const_iterator"* @_ZNSt23_Rb_tree_const_iteratorIcEppEv(%"struct.std::_Rb_tree_const_iterator"* %262) #3
  %264 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %22
  %265 = call dereferenceable(8) %"struct.std::_Rb_tree_const_iterator"* @_ZNSt23_Rb_tree_const_iteratorIcEppEv(%"struct.std::_Rb_tree_const_iterator"* %264) #3
  %266 = load i32, i32* @x.153
  %267 = load i32, i32* @y.154
  %268 = add i32 %266, 1154646583
  %269 = sub i32 %268, 1
  %270 = sub i32 %269, 1154646583
  %271 = sub i32 %266, 1
  %272 = mul i32 %266, %270
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %267, 10
  %276 = xor i1 %274, true
  %277 = xor i1 %275, true
  %278 = xor i1 false, true
  %279 = and i1 %276, false
  %280 = and i1 %274, %278
  %281 = and i1 %277, false
  %282 = and i1 %275, %278
  %283 = or i1 %279, %280
  %284 = or i1 %281, %282
  %285 = xor i1 %283, %284
  %286 = or i1 %276, %277
  %287 = xor i1 %286, true
  %288 = or i1 false, %278
  %289 = and i1 %287, %288
  %290 = or i1 %285, %289
  %291 = or i1 %274, %275
  %292 = select i1 %290, i32 309159663, i32 1689893133
  store i32 %292, i32* %37
  br label %565

; <label>:293:                                    ; preds = %39
  store i32 -1901436826, i32* %37
  br label %565

; <label>:294:                                    ; preds = %39
  store i32 1464031905, i32* %37
  br label %565

; <label>:295:                                    ; preds = %39
  %296 = load i32, i32* @x.153
  %297 = load i32, i32* @y.154
  %298 = sub i32 %296, -1944174458
  %299 = sub i32 %298, 1
  %300 = add i32 %299, -1944174458
  %301 = sub i32 %296, 1
  %302 = mul i32 %296, %300
  %303 = urem i32 %302, 2
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %297, 10
  %306 = and i1 %304, %305
  %307 = xor i1 %304, %305
  %308 = or i1 %306, %307
  %309 = or i1 %304, %305
  %310 = select i1 %308, i32 2083179150, i32 144063831
  store i32 %310, i32* %37
  br label %565

; <label>:311:                                    ; preds = %39
  %312 = load volatile %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %20
  %313 = call dereferenceable(16) %"class.std::insert_iterator"* @_ZNSt15insert_iteratorISt3setIcSt4lessIcESaIcEEEppEv(%"class.std::insert_iterator"* %312)
  %314 = load i32, i32* @x.153
  %315 = load i32, i32* @y.154
  %316 = add i32 %314, 1833521903
  %317 = sub i32 %316, 1
  %318 = sub i32 %317, 1833521903
  %319 = sub i32 %314, 1
  %320 = mul i32 %314, %318
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %315, 10
  %324 = xor i1 %322, true
  %325 = xor i1 %323, true
  %326 = xor i1 true, true
  %327 = and i1 %324, true
  %328 = and i1 %322, %326
  %329 = and i1 %325, true
  %330 = and i1 %323, %326
  %331 = or i1 %327, %328
  %332 = or i1 %329, %330
  %333 = xor i1 %331, %332
  %334 = or i1 %324, %325
  %335 = xor i1 %334, true
  %336 = or i1 true, %326
  %337 = and i1 %335, %336
  %338 = or i1 %333, %337
  %339 = or i1 %322, %323
  %340 = select i1 %338, i32 982625198, i32 144063831
  store i32 %340, i32* %37
  br label %565

; <label>:341:                                    ; preds = %39
  store i32 555062648, i32* %37
  br label %565

; <label>:342:                                    ; preds = %39
  %343 = load i32, i32* @x.153
  %344 = load i32, i32* @y.154
  %345 = add i32 %343, -1544811579
  %346 = sub i32 %345, 1
  %347 = sub i32 %346, -1544811579
  %348 = sub i32 %343, 1
  %349 = mul i32 %343, %347
  %350 = urem i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %344, 10
  %353 = xor i1 %351, true
  %354 = xor i1 %352, true
  %355 = xor i1 true, true
  %356 = and i1 %353, true
  %357 = and i1 %351, %355
  %358 = and i1 %354, true
  %359 = and i1 %352, %355
  %360 = or i1 %356, %357
  %361 = or i1 %358, %359
  %362 = xor i1 %360, %361
  %363 = or i1 %353, %354
  %364 = xor i1 %363, true
  %365 = or i1 true, %355
  %366 = and i1 %364, %365
  %367 = or i1 %362, %366
  %368 = or i1 %351, %352
  %369 = select i1 %367, i32 -1719840969, i32 157895355
  store i32 %369, i32* %37
  br label %565

; <label>:370:                                    ; preds = %39
  %371 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %14
  %372 = bitcast %"struct.std::_Rb_tree_const_iterator"* %371 to i8*
  %373 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %22
  %374 = bitcast %"struct.std::_Rb_tree_const_iterator"* %373 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %372, i8* %374, i64 8, i32 8, i1 false)
  %375 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %13
  %376 = bitcast %"struct.std::_Rb_tree_const_iterator"* %375 to i8*
  %377 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %21
  %378 = bitcast %"struct.std::_Rb_tree_const_iterator"* %377 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %376, i8* %378, i64 8, i32 8, i1 false)
  %379 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %11
  %380 = bitcast %"struct.std::_Rb_tree_const_iterator"* %379 to i8*
  %381 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %24
  %382 = bitcast %"struct.std::_Rb_tree_const_iterator"* %381 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %380, i8* %382, i64 8, i32 8, i1 false)
  %383 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %10
  %384 = bitcast %"struct.std::_Rb_tree_const_iterator"* %383 to i8*
  %385 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %23
  %386 = bitcast %"struct.std::_Rb_tree_const_iterator"* %385 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %384, i8* %386, i64 8, i32 8, i1 false)
  %387 = load volatile %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %9
  %388 = bitcast %"class.std::insert_iterator"* %387 to i8*
  %389 = load volatile %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %20
  %390 = bitcast %"class.std::insert_iterator"* %389 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %388, i8* %390, i64 16, i32 8, i1 false)
  %391 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %11
  %392 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %391, i32 0, i32 0
  %393 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %392, align 8
  %394 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %10
  %395 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %394, i32 0, i32 0
  %396 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %395, align 8
  %397 = load volatile %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %9
  %398 = bitcast %"class.std::insert_iterator"* %397 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %399 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %398, i32 0, i32 0
  %400 = load %"class.std::set"*, %"class.std::set"** %399, align 8
  %401 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %398, i32 0, i32 1
  %402 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %401, align 8
  %403 = call { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } @_ZSt4copyISt23_Rb_tree_const_iteratorIcESt15insert_iteratorISt3setIcSt4lessIcESaIcEEEET0_T_SA_S9_(%"struct.std::_Rb_tree_node_base"* %393, %"struct.std::_Rb_tree_node_base"* %396, %"class.std::set"* %400, %"struct.std::_Rb_tree_node_base"* %402)
  %404 = load volatile %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %12
  %405 = bitcast %"class.std::insert_iterator"* %404 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %406 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %405, i32 0, i32 0
  %407 = extractvalue { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %403, 0
  store %"class.std::set"* %407, %"class.std::set"** %406, align 8
  %408 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %405, i32 0, i32 1
  %409 = extractvalue { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %403, 1
  store %"struct.std::_Rb_tree_node_base"* %409, %"struct.std::_Rb_tree_node_base"** %408, align 8
  %410 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %14
  %411 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %410, i32 0, i32 0
  %412 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %411, align 8
  %413 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %13
  %414 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %413, i32 0, i32 0
  %415 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %414, align 8
  %416 = load volatile %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %12
  %417 = bitcast %"class.std::insert_iterator"* %416 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %418 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %417, i32 0, i32 0
  %419 = load %"class.std::set"*, %"class.std::set"** %418, align 8
  %420 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %417, i32 0, i32 1
  %421 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %420, align 8
  %422 = call { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } @_ZSt4copyISt23_Rb_tree_const_iteratorIcESt15insert_iteratorISt3setIcSt4lessIcESaIcEEEET0_T_SA_S9_(%"struct.std::_Rb_tree_node_base"* %412, %"struct.std::_Rb_tree_node_base"* %415, %"class.std::set"* %419, %"struct.std::_Rb_tree_node_base"* %421)
  %423 = load volatile %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %25
  %424 = bitcast %"class.std::insert_iterator"* %423 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %425 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %424, i32 0, i32 0
  %426 = extractvalue { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %422, 0
  store %"class.std::set"* %426, %"class.std::set"** %425, align 8
  %427 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %424, i32 0, i32 1
  %428 = extractvalue { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %422, 1
  store %"struct.std::_Rb_tree_node_base"* %428, %"struct.std::_Rb_tree_node_base"** %427, align 8
  %429 = load volatile %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %25
  %430 = bitcast %"class.std::insert_iterator"* %429 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %431 = load { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %430, align 8
  store { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %431, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %7
  %432 = load i32, i32* @x.153
  %433 = load i32, i32* @y.154
  %434 = add i32 %432, -936478453
  %435 = sub i32 %434, 1
  %436 = sub i32 %435, -936478453
  %437 = sub i32 %432, 1
  %438 = mul i32 %432, %436
  %439 = urem i32 %438, 2
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %433, 10
  %442 = xor i1 %440, true
  %443 = xor i1 %441, true
  %444 = xor i1 false, true
  %445 = and i1 %442, false
  %446 = and i1 %440, %444
  %447 = and i1 %443, false
  %448 = and i1 %441, %444
  %449 = or i1 %445, %446
  %450 = or i1 %447, %448
  %451 = xor i1 %449, %450
  %452 = or i1 %442, %443
  %453 = xor i1 %452, true
  %454 = or i1 false, %444
  %455 = and i1 %453, %454
  %456 = or i1 %451, %455
  %457 = or i1 %440, %441
  %458 = select i1 %456, i32 301859731, i32 157895355
  store i32 %458, i32* %37
  br label %565

; <label>:459:                                    ; preds = %39
  %460 = load volatile { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %7
  ret { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %460

; <label>:461:                                    ; preds = %39
  %462 = alloca %"class.std::insert_iterator", align 8
  %463 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %464 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %465 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %466 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %467 = alloca %"class.std::insert_iterator", align 8
  %468 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %469 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %470 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %471 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %472 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %473 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %474 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %475 = alloca %"class.std::insert_iterator", align 8
  %476 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %477 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %478 = alloca %"class.std::insert_iterator", align 8
  %479 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %463, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %479, align 8
  %480 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %464, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %480, align 8
  %481 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %465, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %481, align 8
  %482 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %466, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %3, %"struct.std::_Rb_tree_node_base"** %482, align 8
  %483 = bitcast %"class.std::insert_iterator"* %467 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %484 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %483, i32 0, i32 0
  store %"class.std::set"* %4, %"class.std::set"** %484, align 8
  %485 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %483, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %5, %"struct.std::_Rb_tree_node_base"** %485, align 8
  store i32 828054223, i32* %37
  br label %565

; <label>:486:                                    ; preds = %39
  %487 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %24
  %488 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %23
  %489 = call zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorIcEneERKS0_(%"struct.std::_Rb_tree_const_iterator"* %487, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %488) #3
  store i32 927436566, i32* %37
  br label %565

; <label>:490:                                    ; preds = %39
  %491 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %24
  %492 = call dereferenceable(1) i8* @_ZNKSt23_Rb_tree_const_iteratorIcEdeEv(%"struct.std::_Rb_tree_const_iterator"* %491) #3
  %493 = load volatile %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %20
  %494 = call dereferenceable(16) %"class.std::insert_iterator"* @_ZNSt15insert_iteratorISt3setIcSt4lessIcESaIcEEEdeEv(%"class.std::insert_iterator"* %493)
  %495 = call dereferenceable(16) %"class.std::insert_iterator"* @_ZNSt15insert_iteratorISt3setIcSt4lessIcESaIcEEEaSERKc(%"class.std::insert_iterator"* %494, i8* dereferenceable(1) %492)
  %496 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %24
  %497 = call dereferenceable(8) %"struct.std::_Rb_tree_const_iterator"* @_ZNSt23_Rb_tree_const_iteratorIcEppEv(%"struct.std::_Rb_tree_const_iterator"* %496) #3
  %498 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %22
  %499 = call dereferenceable(8) %"struct.std::_Rb_tree_const_iterator"* @_ZNSt23_Rb_tree_const_iteratorIcEppEv(%"struct.std::_Rb_tree_const_iterator"* %498) #3
  store i32 1526895270, i32* %37
  br label %565

; <label>:500:                                    ; preds = %39
  %501 = load volatile %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %20
  %502 = call dereferenceable(16) %"class.std::insert_iterator"* @_ZNSt15insert_iteratorISt3setIcSt4lessIcESaIcEEEppEv(%"class.std::insert_iterator"* %501)
  store i32 2083179150, i32* %37
  br label %565

; <label>:503:                                    ; preds = %39
  %504 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %14
  %505 = bitcast %"struct.std::_Rb_tree_const_iterator"* %504 to i8*
  %506 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %22
  %507 = bitcast %"struct.std::_Rb_tree_const_iterator"* %506 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %505, i8* %507, i64 8, i32 8, i1 false)
  %508 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %13
  %509 = bitcast %"struct.std::_Rb_tree_const_iterator"* %508 to i8*
  %510 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %21
  %511 = bitcast %"struct.std::_Rb_tree_const_iterator"* %510 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %509, i8* %511, i64 8, i32 8, i1 false)
  %512 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %11
  %513 = bitcast %"struct.std::_Rb_tree_const_iterator"* %512 to i8*
  %514 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %24
  %515 = bitcast %"struct.std::_Rb_tree_const_iterator"* %514 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %513, i8* %515, i64 8, i32 8, i1 false)
  %516 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %10
  %517 = bitcast %"struct.std::_Rb_tree_const_iterator"* %516 to i8*
  %518 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %23
  %519 = bitcast %"struct.std::_Rb_tree_const_iterator"* %518 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %517, i8* %519, i64 8, i32 8, i1 false)
  %520 = load volatile %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %9
  %521 = bitcast %"class.std::insert_iterator"* %520 to i8*
  %522 = load volatile %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %20
  %523 = bitcast %"class.std::insert_iterator"* %522 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %521, i8* %523, i64 16, i32 8, i1 false)
  %524 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %11
  %525 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %524, i32 0, i32 0
  %526 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %525, align 8
  %527 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %10
  %528 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %527, i32 0, i32 0
  %529 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %528, align 8
  %530 = load volatile %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %9
  %531 = bitcast %"class.std::insert_iterator"* %530 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %532 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %531, i32 0, i32 0
  %533 = load %"class.std::set"*, %"class.std::set"** %532, align 8
  %534 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %531, i32 0, i32 1
  %535 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %534, align 8
  %536 = call { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } @_ZSt4copyISt23_Rb_tree_const_iteratorIcESt15insert_iteratorISt3setIcSt4lessIcESaIcEEEET0_T_SA_S9_(%"struct.std::_Rb_tree_node_base"* %526, %"struct.std::_Rb_tree_node_base"* %529, %"class.std::set"* %533, %"struct.std::_Rb_tree_node_base"* %535)
  %537 = load volatile %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %12
  %538 = bitcast %"class.std::insert_iterator"* %537 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %539 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %538, i32 0, i32 0
  %540 = extractvalue { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %536, 0
  store %"class.std::set"* %540, %"class.std::set"** %539, align 8
  %541 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %538, i32 0, i32 1
  %542 = extractvalue { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %536, 1
  store %"struct.std::_Rb_tree_node_base"* %542, %"struct.std::_Rb_tree_node_base"** %541, align 8
  %543 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %14
  %544 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %543, i32 0, i32 0
  %545 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %544, align 8
  %546 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %13
  %547 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %546, i32 0, i32 0
  %548 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %547, align 8
  %549 = load volatile %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %12
  %550 = bitcast %"class.std::insert_iterator"* %549 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %551 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %550, i32 0, i32 0
  %552 = load %"class.std::set"*, %"class.std::set"** %551, align 8
  %553 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %550, i32 0, i32 1
  %554 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %553, align 8
  %555 = call { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } @_ZSt4copyISt23_Rb_tree_const_iteratorIcESt15insert_iteratorISt3setIcSt4lessIcESaIcEEEET0_T_SA_S9_(%"struct.std::_Rb_tree_node_base"* %545, %"struct.std::_Rb_tree_node_base"* %548, %"class.std::set"* %552, %"struct.std::_Rb_tree_node_base"* %554)
  %556 = load volatile %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %25
  %557 = bitcast %"class.std::insert_iterator"* %556 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %558 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %557, i32 0, i32 0
  %559 = extractvalue { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %555, 0
  store %"class.std::set"* %559, %"class.std::set"** %558, align 8
  %560 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %557, i32 0, i32 1
  %561 = extractvalue { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %555, 1
  store %"struct.std::_Rb_tree_node_base"* %561, %"struct.std::_Rb_tree_node_base"** %560, align 8
  %562 = load volatile %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %25
  %563 = bitcast %"class.std::insert_iterator"* %562 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %564 = load { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %563, align 8
  store i32 -1719840969, i32* %37
  br label %565

; <label>:565:                                    ; preds = %503, %500, %490, %486, %461, %370, %342, %341, %311, %295, %294, %293, %256, %241, %233, %215, %207, %189, %186, %182, %179, %148, %120, %119, %62, %42, %41
  br label %39
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops16__iter_less_iterEv() #5 comdat {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorIcEneERKS0_(%"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8)) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.157
  %7 = load i32, i32* @y.158
  %8 = add i32 %6, -885568401
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -885568401
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 964794008, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %89
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 964794008, label %20
    i32 1911732819, label %40
    i32 1103116618, label %77
    i32 -476541193, label %79
  ]

; <label>:19:                                     ; preds = %17
  br label %89

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1911732819, i32 -476541193
  store i32 %39, i32* %16
  br label %89

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %42 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %41, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %1, %"struct.std::_Rb_tree_const_iterator"** %42, align 8
  %43 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %41, align 8
  %44 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %43, i32 0, i32 0
  %45 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %44, align 8
  %46 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %42, align 8
  %47 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %46, i32 0, i32 0
  %48 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %47, align 8
  %49 = icmp ne %"struct.std::_Rb_tree_node_base"* %45, %48
  store i1 %49, i1* %3
  %50 = load i32, i32* @x.157
  %51 = load i32, i32* @y.158
  %52 = sub i32 %50, 997237770
  %53 = sub i32 %52, 1
  %54 = add i32 %53, 997237770
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 1103116618, i32 -476541193
  store i32 %76, i32* %16
  br label %89

; <label>:77:                                     ; preds = %17
  %78 = load volatile i1, i1* %3
  ret i1 %78

; <label>:79:                                     ; preds = %17
  %80 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %81 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %80, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %1, %"struct.std::_Rb_tree_const_iterator"** %81, align 8
  %82 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %80, align 8
  %83 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %82, i32 0, i32 0
  %84 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %83, align 8
  %85 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %81, align 8
  %86 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %85, i32 0, i32 0
  %87 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %86, align 8
  %88 = icmp ne %"struct.std::_Rb_tree_node_base"* %84, %87
  store i32 1911732819, i32* %16
  br label %89

; <label>:89:                                     ; preds = %79, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclISt23_Rb_tree_const_iteratorIcES4_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*) #5 comdat align 2 {
  %4 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %5 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter"*, align 8
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %4, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %8, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_less_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %6, align 8
  %9 = load %"struct.__gnu_cxx::__ops::_Iter_less_iter"*, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %6, align 8
  %10 = call dereferenceable(1) i8* @_ZNKSt23_Rb_tree_const_iteratorIcEdeEv(%"struct.std::_Rb_tree_const_iterator"* %4) #3
  %11 = load i8, i8* %10, align 1
  %12 = sext i8 %11 to i32
  %13 = call dereferenceable(1) i8* @_ZNKSt23_Rb_tree_const_iteratorIcEdeEv(%"struct.std::_Rb_tree_const_iterator"* %5) #3
  %14 = load i8, i8* %13, align 1
  %15 = sext i8 %14 to i32
  %16 = icmp slt i32 %12, %15
  ret i1 %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) i8* @_ZNKSt23_Rb_tree_const_iteratorIcEdeEv(%"struct.std::_Rb_tree_const_iterator"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node"*
  %7 = invoke i8* @_ZNKSt13_Rb_tree_nodeIcE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %6)
          to label %8 unwind label %9

; <label>:8:                                      ; preds = %1
  ret i8* %7

; <label>:9:                                      ; preds = %1
  %10 = load i32, i32* @x.161
  %11 = load i32, i32* @y.162
  %12 = add i32 %10, 1043878325
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, 1043878325
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %11, 10
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  br i1 %34, label %36, label %65

; <label>:36:                                     ; preds = %9, %65
  %37 = landingpad { i8*, i32 }
          catch i8* null
  %38 = extractvalue { i8*, i32 } %37, 0
  call void @__clang_call_terminate(i8* %38) #12
  %39 = load i32, i32* @x.161
  %40 = load i32, i32* @y.162
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  br i1 %62, label %64, label %65

; <label>:64:                                     ; preds = %36
  unreachable

; <label>:65:                                     ; preds = %36, %9
  %66 = landingpad { i8*, i32 }
          catch i8* null
  %67 = extractvalue { i8*, i32 } %66, 0
  call void @__clang_call_terminate(i8* %67) #12
  br label %36
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"class.std::insert_iterator"* @_ZNSt15insert_iteratorISt3setIcSt4lessIcESaIcEEEdeEv(%"class.std::insert_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::insert_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.163
  %6 = load i32, i32* @y.164
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1684359528, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1684359528, label %18
    i32 -554547840, label %38
    i32 -335674033, label %56
    i32 2000359539, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -554547840, i32 2000359539
  store i32 %37, i32* %14
  br label %61

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::insert_iterator"*, align 8
  store %"class.std::insert_iterator"* %0, %"class.std::insert_iterator"** %39, align 8
  %40 = load %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %39, align 8
  store %"class.std::insert_iterator"* %40, %"class.std::insert_iterator"** %2
  %41 = load i32, i32* @x.163
  %42 = load i32, i32* @y.164
  %43 = add i32 %41, -1869282141
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -1869282141
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -335674033, i32 2000359539
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  %57 = load volatile %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %2
  ret %"class.std::insert_iterator"* %57

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::insert_iterator"*, align 8
  store %"class.std::insert_iterator"* %0, %"class.std::insert_iterator"** %59, align 8
  %60 = load %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %59, align 8
  store i32 -554547840, i32* %14
  br label %61

; <label>:61:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(16) %"class.std::insert_iterator"* @_ZNSt15insert_iteratorISt3setIcSt4lessIcESaIcEEEaSERKc(%"class.std::insert_iterator"*, i8* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca %"class.std::insert_iterator"*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %6 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  store %"class.std::insert_iterator"* %0, %"class.std::insert_iterator"** %3, align 8
  store i8* %1, i8** %4, align 8
  %7 = load %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %3, align 8
  %8 = getelementptr inbounds %"class.std::insert_iterator", %"class.std::insert_iterator"* %7, i32 0, i32 0
  %9 = load %"class.std::set"*, %"class.std::set"** %8, align 8
  %10 = getelementptr inbounds %"class.std::insert_iterator", %"class.std::insert_iterator"* %7, i32 0, i32 1
  %11 = bitcast %"struct.std::_Rb_tree_const_iterator"* %6 to i8*
  %12 = bitcast %"struct.std::_Rb_tree_const_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = load i8*, i8** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %6, i32 0, i32 0
  %15 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %14, align 8
  %16 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt3setIcSt4lessIcESaIcEE6insertESt23_Rb_tree_const_iteratorIcERKc(%"class.std::set"* %9, %"struct.std::_Rb_tree_node_base"* %15, i8* dereferenceable(1) %13)
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %16, %"struct.std::_Rb_tree_node_base"** %17, align 8
  %18 = getelementptr inbounds %"class.std::insert_iterator", %"class.std::insert_iterator"* %7, i32 0, i32 1
  %19 = bitcast %"struct.std::_Rb_tree_const_iterator"* %18 to i8*
  %20 = bitcast %"struct.std::_Rb_tree_const_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = getelementptr inbounds %"class.std::insert_iterator", %"class.std::insert_iterator"* %7, i32 0, i32 1
  %22 = call dereferenceable(8) %"struct.std::_Rb_tree_const_iterator"* @_ZNSt23_Rb_tree_const_iteratorIcEppEv(%"struct.std::_Rb_tree_const_iterator"* %21) #3
  ret %"class.std::insert_iterator"* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_const_iterator"* @_ZNSt23_Rb_tree_const_iteratorIcEppEv(%"struct.std::_Rb_tree_const_iterator"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_const_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.167
  %6 = load i32, i32* @y.168
  %7 = sub i32 %5, 1099267945
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1099267945
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1948780778, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %72
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1948780778, label %19
    i32 160303295, label %27
    i32 663838866, label %63
    i32 -1433336152, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %72

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 160303295, i32 -1433336152
  store i32 %26, i32* %15
  br label %72

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %28, align 8
  %29 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %28, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %29, %"struct.std::_Rb_tree_const_iterator"** %2
  %30 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %2
  %31 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %30, i32 0, i32 0
  %32 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %31, align 8
  %33 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %32) #13
  %34 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %2
  %35 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %34, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %33, %"struct.std::_Rb_tree_node_base"** %35, align 8
  %36 = load i32, i32* @x.167
  %37 = load i32, i32* @y.168
  %38 = add i32 %36, -1135069567
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, -1135069567
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 663838866, i32 -1433336152
  store i32 %62, i32* %15
  br label %72

; <label>:63:                                     ; preds = %16
  %64 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %2
  ret %"struct.std::_Rb_tree_const_iterator"* %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %66, align 8
  %67 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %67, i32 0, i32 0
  %69 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %68, align 8
  %70 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %69) #13
  %71 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %67, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %70, %"struct.std::_Rb_tree_node_base"** %71, align 8
  store i32 160303295, i32* %15
  br label %72

; <label>:72:                                     ; preds = %65, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"class.std::insert_iterator"* @_ZNSt15insert_iteratorISt3setIcSt4lessIcESaIcEEEppEv(%"class.std::insert_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::insert_iterator"*, align 8
  store %"class.std::insert_iterator"* %0, %"class.std::insert_iterator"** %2, align 8
  %3 = load %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %2, align 8
  ret %"class.std::insert_iterator"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } @_ZSt4copyISt23_Rb_tree_const_iteratorIcESt15insert_iteratorISt3setIcSt4lessIcESaIcEEEET0_T_SA_S9_(%"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"class.std::set"*, %"struct.std::_Rb_tree_node_base"*) #0 comdat {
  %5 = alloca %"class.std::insert_iterator", align 8
  %6 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %7 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %8 = alloca %"class.std::insert_iterator", align 8
  %9 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %10 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %11 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %12 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %13 = alloca %"class.std::insert_iterator", align 8
  %14 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %6, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %7, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %15, align 8
  %16 = bitcast %"class.std::insert_iterator"* %8 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %17 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %16, i32 0, i32 0
  store %"class.std::set"* %2, %"class.std::set"** %17, align 8
  %18 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %16, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %3, %"struct.std::_Rb_tree_node_base"** %18, align 8
  %19 = bitcast %"struct.std::_Rb_tree_const_iterator"* %10 to i8*
  %20 = bitcast %"struct.std::_Rb_tree_const_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %10, i32 0, i32 0
  %22 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %21, align 8
  %23 = call %"struct.std::_Rb_tree_node_base"* @_ZSt12__miter_baseISt23_Rb_tree_const_iteratorIcEENSt11_Miter_baseIT_E13iterator_typeES3_(%"struct.std::_Rb_tree_node_base"* %22)
  %24 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %9, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %23, %"struct.std::_Rb_tree_node_base"** %24, align 8
  %25 = bitcast %"struct.std::_Rb_tree_const_iterator"* %12 to i8*
  %26 = bitcast %"struct.std::_Rb_tree_const_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 8, i32 8, i1 false)
  %27 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %12, i32 0, i32 0
  %28 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %27, align 8
  %29 = call %"struct.std::_Rb_tree_node_base"* @_ZSt12__miter_baseISt23_Rb_tree_const_iteratorIcEENSt11_Miter_baseIT_E13iterator_typeES3_(%"struct.std::_Rb_tree_node_base"* %28)
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %11, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %29, %"struct.std::_Rb_tree_node_base"** %30, align 8
  %31 = bitcast %"class.std::insert_iterator"* %13 to i8*
  %32 = bitcast %"class.std::insert_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 16, i32 8, i1 false)
  %33 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %9, i32 0, i32 0
  %34 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %33, align 8
  %35 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %11, i32 0, i32 0
  %36 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %35, align 8
  %37 = bitcast %"class.std::insert_iterator"* %13 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %38 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %37, i32 0, i32 0
  %39 = load %"class.std::set"*, %"class.std::set"** %38, align 8
  %40 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %37, i32 0, i32 1
  %41 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %40, align 8
  %42 = call { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } @_ZSt14__copy_move_a2ILb0ESt23_Rb_tree_const_iteratorIcESt15insert_iteratorISt3setIcSt4lessIcESaIcEEEET1_T0_SA_S9_(%"struct.std::_Rb_tree_node_base"* %34, %"struct.std::_Rb_tree_node_base"* %36, %"class.std::set"* %39, %"struct.std::_Rb_tree_node_base"* %41)
  %43 = bitcast %"class.std::insert_iterator"* %5 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %44 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %43, i32 0, i32 0
  %45 = extractvalue { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %42, 0
  store %"class.std::set"* %45, %"class.std::set"** %44, align 8
  %46 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %43, i32 0, i32 1
  %47 = extractvalue { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %42, 1
  store %"struct.std::_Rb_tree_node_base"* %47, %"struct.std::_Rb_tree_node_base"** %46, align 8
  %48 = bitcast %"class.std::insert_iterator"* %5 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %49 = load { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %48, align 8
  ret { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %49
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNKSt13_Rb_tree_nodeIcE9_M_valptrEv(%"struct.std::_Rb_tree_node"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %3, i32 0, i32 1
  %5 = call i8* @_ZNK9__gnu_cxx16__aligned_membufIcE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* %4) #3
  ret i8* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNK9__gnu_cxx16__aligned_membufIcE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #5 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %4 = call i8* @_ZNK9__gnu_cxx16__aligned_membufIcE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* %3) #3
  ret i8* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNK9__gnu_cxx16__aligned_membufIcE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #5 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf", %"struct.__gnu_cxx::__aligned_membuf"* %3, i32 0, i32 0
  %5 = bitcast [1 x i8]* %4 to i8*
  ret i8* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt3setIcSt4lessIcESaIcEE6insertESt23_Rb_tree_const_iteratorIcERKc(%"class.std::set"*, %"struct.std::_Rb_tree_node_base"*, i8* dereferenceable(1)) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %5 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %6 = alloca %"class.std::set"*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %9 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %10, align 8
  store %"class.std::set"* %0, %"class.std::set"** %6, align 8
  store i8* %2, i8** %7, align 8
  %11 = load %"class.std::set"*, %"class.std::set"** %6, align 8
  %12 = getelementptr inbounds %"class.std::set", %"class.std::set"* %11, i32 0, i32 0
  %13 = bitcast %"struct.std::_Rb_tree_const_iterator"* %9 to i8*
  %14 = bitcast %"struct.std::_Rb_tree_const_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load i8*, i8** %7, align 8
  %16 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %9, i32 0, i32 0
  %17 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %16, align 8
  %18 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE17_M_insert_unique_IRKcEESt17_Rb_tree_iteratorIcESt23_Rb_tree_const_iteratorIcEOT_(%"class.std::_Rb_tree"* %12, %"struct.std::_Rb_tree_node_base"* %17, i8* dereferenceable(1) %15)
  %19 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %8, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %18, %"struct.std::_Rb_tree_node_base"** %19, align 8
  call void @_ZNSt23_Rb_tree_const_iteratorIcEC2ERKSt17_Rb_tree_iteratorIcE(%"struct.std::_Rb_tree_const_iterator"* %4, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %8) #3
  %20 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %4, i32 0, i32 0
  %21 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %20, align 8
  ret %"struct.std::_Rb_tree_node_base"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE17_M_insert_unique_IRKcEESt17_Rb_tree_iteratorIcESt23_Rb_tree_const_iteratorIcEOT_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node_base"*, i8* dereferenceable(1)) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %5 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %6 = alloca %"class.std::_Rb_tree"*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node", align 8
  %9 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %10, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %6, align 8
  store i8* %2, i8** %7, align 8
  %11 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
  call void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE11_Alloc_nodeC2ERS5_(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* %8, %"class.std::_Rb_tree"* dereferenceable(48) %11)
  %12 = bitcast %"struct.std::_Rb_tree_const_iterator"* %9 to i8*
  %13 = bitcast %"struct.std::_Rb_tree_const_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = load i8*, i8** %7, align 8
  %15 = call dereferenceable(1) i8* @_ZSt7forwardIRKcEOT_RNSt16remove_referenceIS2_E4typeE(i8* dereferenceable(1) %14) #3
  %16 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %9, i32 0, i32 0
  %17 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %16, align 8
  %18 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE17_M_insert_unique_IRKcNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIcESt23_Rb_tree_const_iteratorIcEOT_RT0_(%"class.std::_Rb_tree"* %11, %"struct.std::_Rb_tree_node_base"* %17, i8* dereferenceable(1) %15, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* dereferenceable(8) %8)
  %19 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %4, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %18, %"struct.std::_Rb_tree_node_base"** %19, align 8
  %20 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %4, i32 0, i32 0
  %21 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %20, align 8
  ret %"struct.std::_Rb_tree_node_base"* %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt23_Rb_tree_const_iteratorIcEC2ERKSt17_Rb_tree_iteratorIcE(%"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_iterator"* dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  store %"struct.std::_Rb_tree_node_base"* %9, %"struct.std::_Rb_tree_node_base"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE11_Alloc_nodeC2ERS5_(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"*, %"class.std::_Rb_tree"* dereferenceable(48)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.185
  %6 = load i32, i32* @y.186
  %7 = sub i32 %5, 244463570
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 244463570
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 152485521, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %79
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 152485521, label %19
    i32 -1444855774, label %39
    i32 -1121886141, label %72
    i32 1770051368, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %79

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1444855774, i32 1770051368
  store i32 %38, i32* %15
  br label %79

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"*, align 8
  %41 = alloca %"class.std::_Rb_tree"*, align 8
  store %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* %0, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"** %40, align 8
  store %"class.std::_Rb_tree"* %1, %"class.std::_Rb_tree"** %41, align 8
  %42 = load %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"** %40, align 8
  %43 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* %42, i32 0, i32 0
  %44 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %41, align 8
  store %"class.std::_Rb_tree"* %44, %"class.std::_Rb_tree"** %43, align 8
  %45 = load i32, i32* @x.185
  %46 = load i32, i32* @y.186
  %47 = sub i32 %45, -495957480
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -495957480
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -1121886141, i32 1770051368
  store i32 %71, i32* %15
  br label %79

; <label>:72:                                     ; preds = %16
  ret void

; <label>:73:                                     ; preds = %16
  %74 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"*, align 8
  %75 = alloca %"class.std::_Rb_tree"*, align 8
  store %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* %0, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"** %74, align 8
  store %"class.std::_Rb_tree"* %1, %"class.std::_Rb_tree"** %75, align 8
  %76 = load %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"** %74, align 8
  %77 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* %76, i32 0, i32 0
  %78 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %75, align 8
  store %"class.std::_Rb_tree"* %78, %"class.std::_Rb_tree"** %77, align 8
  store i32 -1444855774, i32* %15
  br label %79

; <label>:79:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE17_M_insert_unique_IRKcNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIcESt23_Rb_tree_const_iteratorIcEOT_RT0_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node_base"*, i8* dereferenceable(1), %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* dereferenceable(8)) #0 comdat align 2 {
  %5 = alloca %"struct.std::_Rb_tree_node_base"*
  %6 = alloca %"class.std::_Rb_tree"*
  %7 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %8 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %9 = alloca %"class.std::_Rb_tree"*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"*, align 8
  %12 = alloca %"struct.std::pair", align 8
  %13 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %14 = alloca %"struct.std::_Identity", align 1
  %15 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %8, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %15, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %9, align 8
  store i8* %2, i8** %10, align 8
  store %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* %3, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"** %11, align 8
  %16 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9, align 8
  store %"class.std::_Rb_tree"* %16, %"class.std::_Rb_tree"** %6
  %17 = bitcast %"struct.std::_Rb_tree_const_iterator"* %13 to i8*
  %18 = bitcast %"struct.std::_Rb_tree_const_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 8, i32 8, i1 false)
  %19 = load i8*, i8** %10, align 8
  %20 = call dereferenceable(1) i8* @_ZNKSt9_IdentityIcEclERKc(%"struct.std::_Identity"* %14, i8* dereferenceable(1) %19)
  %21 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %13, i32 0, i32 0
  %22 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %21, align 8
  %23 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %24 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIcERKc(%"class.std::_Rb_tree"* %23, %"struct.std::_Rb_tree_node_base"* %22, i8* dereferenceable(1) %20)
  %25 = bitcast %"struct.std::pair"* %12 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %26 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %25, i32 0, i32 0
  %27 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %24, 0
  store %"struct.std::_Rb_tree_node_base"* %27, %"struct.std::_Rb_tree_node_base"** %26, align 8
  %28 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %25, i32 0, i32 1
  %29 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %24, 1
  store %"struct.std::_Rb_tree_node_base"* %29, %"struct.std::_Rb_tree_node_base"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %12, i32 0, i32 1
  %31 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %30, align 8
  store %"struct.std::_Rb_tree_node_base"* %31, %"struct.std::_Rb_tree_node_base"** %5
  %32 = alloca i32
  store i32 1863595975, i32* %32
  br label %33

; <label>:33:                                     ; preds = %4, %113
  %34 = load i32, i32* %32
  switch i32 %34, label %35 [
    i32 1863595975, label %36
    i32 -312789576, label %40
    i32 1256959539, label %68
    i32 -1382707291, label %93
    i32 -1410113451, label %94
    i32 -182837322, label %99
    i32 855705999, label %102
  ]

; <label>:35:                                     ; preds = %33
  br label %113

; <label>:36:                                     ; preds = %33
  %37 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %5
  %38 = icmp ne %"struct.std::_Rb_tree_node_base"* %37, null
  %39 = select i1 %38, i32 -312789576, i32 -1410113451
  store i32 %39, i32* %32
  br label %113

; <label>:40:                                     ; preds = %33
  %41 = load i32, i32* @x.187
  %42 = load i32, i32* @y.188
  %43 = sub i32 %41, 1047147736
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 1047147736
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 1256959539, i32 855705999
  store i32 %67, i32* %32
  br label %113

; <label>:68:                                     ; preds = %33
  %69 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %12, i32 0, i32 0
  %70 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %69, align 8
  %71 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %12, i32 0, i32 1
  %72 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %71, align 8
  %73 = load i8*, i8** %10, align 8
  %74 = call dereferenceable(1) i8* @_ZSt7forwardIRKcEOT_RNSt16remove_referenceIS2_E4typeE(i8* dereferenceable(1) %73) #3
  %75 = load %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"** %11, align 8
  %76 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %77 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE10_M_insert_IRKcNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIcEPSt18_Rb_tree_node_baseSD_OT_RT0_(%"class.std::_Rb_tree"* %76, %"struct.std::_Rb_tree_node_base"* %70, %"struct.std::_Rb_tree_node_base"* %72, i8* dereferenceable(1) %74, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* dereferenceable(8) %75)
  %78 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %7, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %77, %"struct.std::_Rb_tree_node_base"** %78, align 8
  %79 = load i32, i32* @x.187
  %80 = load i32, i32* @y.188
  %81 = sub i32 0, 1
  %82 = add i32 %79, %81
  %83 = sub i32 %79, 1
  %84 = mul i32 %79, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %80, 10
  %88 = and i1 %86, %87
  %89 = xor i1 %86, %87
  %90 = or i1 %88, %89
  %91 = or i1 %86, %87
  %92 = select i1 %90, i32 -1382707291, i32 855705999
  store i32 %92, i32* %32
  br label %113

; <label>:93:                                     ; preds = %33
  store i32 -182837322, i32* %32
  br label %113

; <label>:94:                                     ; preds = %33
  %95 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %12, i32 0, i32 0
  %96 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %95, align 8
  %97 = bitcast %"struct.std::_Rb_tree_node_base"* %96 to %"struct.std::_Rb_tree_node"*
  %98 = bitcast %"struct.std::_Rb_tree_node"* %97 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorIcEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %7, %"struct.std::_Rb_tree_node_base"* %98) #3
  store i32 -182837322, i32* %32
  br label %113

; <label>:99:                                     ; preds = %33
  %100 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %7, i32 0, i32 0
  %101 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %100, align 8
  ret %"struct.std::_Rb_tree_node_base"* %101

; <label>:102:                                    ; preds = %33
  %103 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %12, i32 0, i32 0
  %104 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %103, align 8
  %105 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %12, i32 0, i32 1
  %106 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %105, align 8
  %107 = load i8*, i8** %10, align 8
  %108 = call dereferenceable(1) i8* @_ZSt7forwardIRKcEOT_RNSt16remove_referenceIS2_E4typeE(i8* dereferenceable(1) %107) #3
  %109 = load %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"** %11, align 8
  %110 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %111 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE10_M_insert_IRKcNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIcEPSt18_Rb_tree_node_baseSD_OT_RT0_(%"class.std::_Rb_tree"* %110, %"struct.std::_Rb_tree_node_base"* %104, %"struct.std::_Rb_tree_node_base"* %106, i8* dereferenceable(1) %108, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* dereferenceable(8) %109)
  %112 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %7, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %111, %"struct.std::_Rb_tree_node_base"** %112, align 8
  store i32 1256959539, i32* %32
  br label %113

; <label>:113:                                    ; preds = %102, %94, %93, %68, %40, %36, %35
  br label %33
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) i8* @_ZSt7forwardIRKcEOT_RNSt16remove_referenceIS2_E4typeE(i8* dereferenceable(1)) #5 comdat {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIcERKc(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node_base"*, i8* dereferenceable(1)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca i1
  %8 = alloca i1
  %9 = alloca %"struct.std::_Rb_tree_node_base"*
  %10 = alloca %"struct.std::_Rb_tree_node_base"*
  %11 = alloca %"class.std::_Rb_tree"*
  %12 = alloca %"struct.std::pair", align 8
  %13 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %14 = alloca %"class.std::_Rb_tree"*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %17 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %18 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %19 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %20 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %21 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %22 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %23 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %24 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %13, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %24, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %14, align 8
  store i8* %2, i8** %15, align 8
  %25 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %14, align 8
  store %"class.std::_Rb_tree"* %25, %"class.std::_Rb_tree"** %11
  %26 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt23_Rb_tree_const_iteratorIcE13_M_const_castEv(%"struct.std::_Rb_tree_const_iterator"* %13) #3
  %27 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %16, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %26, %"struct.std::_Rb_tree_node_base"** %27, align 8
  %28 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %16, i32 0, i32 0
  %29 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %28, align 8
  store %"struct.std::_Rb_tree_node_base"* %29, %"struct.std::_Rb_tree_node_base"** %10
  %30 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %31 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE6_M_endEv(%"class.std::_Rb_tree"* %30) #3
  %32 = bitcast %"struct.std::_Rb_tree_node"* %31 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %32, %"struct.std::_Rb_tree_node_base"** %9
  %33 = alloca i32
  store i32 -1766172456, i32* %33
  br label %34

; <label>:34:                                     ; preds = %3, %615
  %35 = load i32, i32* %33
  switch i32 %35, label %36 [
    i32 -1766172456, label %37
    i32 -365542773, label %42
    i32 -2120577402, label %47
    i32 -2106447712, label %63
    i32 -748362586, label %99
    i32 582335533, label %102
    i32 1263470026, label %117
    i32 -2004371728, label %135
    i32 721247390, label %136
    i32 1479205518, label %145
    i32 -1038524092, label %160
    i32 -1418504617, label %196
    i32 -2098191238, label %199
    i32 -605152451, label %215
    i32 671885648, label %251
    i32 -739210251, label %254
    i32 741267033, label %259
    i32 -2076058723, label %274
    i32 1143155007, label %299
    i32 1484654086, label %302
    i32 -824312805, label %308
    i32 -1633575079, label %310
    i32 2001338769, label %338
    i32 -716704622, label %367
    i32 1715258679, label %368
    i32 -309134011, label %377
    i32 431974940, label %393
    i32 -1927559727, label %417
    i32 -379749091, label %420
    i32 1497128745, label %430
    i32 1761034967, label %446
    i32 -1401290658, label %476
    i32 -2105511500, label %477
    i32 -1330694785, label %488
    i32 -918270151, label %494
    i32 -1300812606, label %496
    i32 -1687721022, label %499
    i32 -937361682, label %508
    i32 -1437809558, label %536
    i32 927852808, label %553
    i32 397420587, label %554
    i32 323059022, label %557
    i32 1980440696, label %567
    i32 1410213842, label %570
    i32 1244910457, label %579
    i32 986858865, label %588
    i32 -1473117423, label %598
    i32 795781806, label %601
    i32 -92723821, label %610
    i32 -1333325618, label %613
  ]

; <label>:36:                                     ; preds = %34
  br label %615

; <label>:37:                                     ; preds = %34
  %38 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10
  %39 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9
  %40 = icmp eq %"struct.std::_Rb_tree_node_base"* %38, %39
  %41 = select i1 %40, i32 -365542773, i32 1479205518
  store i32 %41, i32* %33
  br label %615

; <label>:42:                                     ; preds = %34
  %43 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %44 = call i64 @_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE4sizeEv(%"class.std::_Rb_tree"* %43) #3
  %45 = icmp ugt i64 %44, 0
  %46 = select i1 %45, i32 -2120577402, i32 721247390
  store i32 %46, i32* %33
  br label %615

; <label>:47:                                     ; preds = %34
  %48 = load i32, i32* @x.191
  %49 = load i32, i32* @y.192
  %50 = add i32 %48, 2006556465
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, 2006556465
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -2106447712, i32 323059022
  store i32 %62, i32* %33
  br label %615

; <label>:63:                                     ; preds = %34
  %64 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %65 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %64, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %65, i32 0, i32 0
  %67 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %68 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE12_M_rightmostEv(%"class.std::_Rb_tree"* %67) #3
  %69 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %68, align 8
  %70 = call dereferenceable(1) i8* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %69)
  %71 = load i8*, i8** %15, align 8
  %72 = call zeroext i1 @_ZNKSt4lessIcEclERKcS2_(%"struct.std::less"* %66, i8* dereferenceable(1) %70, i8* dereferenceable(1) %71)
  store i1 %72, i1* %8
  %73 = load i32, i32* @x.191
  %74 = load i32, i32* @y.192
  %75 = sub i32 0, 1
  %76 = add i32 %73, %75
  %77 = sub i32 %73, 1
  %78 = mul i32 %73, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %74, 10
  %82 = xor i1 %80, true
  %83 = xor i1 %81, true
  %84 = xor i1 false, true
  %85 = and i1 %82, false
  %86 = and i1 %80, %84
  %87 = and i1 %83, false
  %88 = and i1 %81, %84
  %89 = or i1 %85, %86
  %90 = or i1 %87, %88
  %91 = xor i1 %89, %90
  %92 = or i1 %82, %83
  %93 = xor i1 %92, true
  %94 = or i1 false, %84
  %95 = and i1 %93, %94
  %96 = or i1 %91, %95
  %97 = or i1 %80, %81
  %98 = select i1 %96, i32 -748362586, i32 323059022
  store i32 %98, i32* %33
  br label %615

; <label>:99:                                     ; preds = %34
  %100 = load volatile i1, i1* %8
  %101 = select i1 %100, i32 582335533, i32 721247390
  store i32 %101, i32* %33
  br label %615

; <label>:102:                                    ; preds = %34
  %103 = load i32, i32* @x.191
  %104 = load i32, i32* @y.192
  %105 = sub i32 0, 1
  %106 = add i32 %103, %105
  %107 = sub i32 %103, 1
  %108 = mul i32 %103, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %104, 10
  %112 = and i1 %110, %111
  %113 = xor i1 %110, %111
  %114 = or i1 %112, %113
  %115 = or i1 %110, %111
  %116 = select i1 %114, i32 1263470026, i32 1980440696
  store i32 %116, i32* %33
  br label %615

; <label>:117:                                    ; preds = %34
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %17, align 8
  %118 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %119 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE12_M_rightmostEv(%"class.std::_Rb_tree"* %118) #3
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair"* %12, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %17, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %119)
  %120 = load i32, i32* @x.191
  %121 = load i32, i32* @y.192
  %122 = sub i32 %120, -456817942
  %123 = sub i32 %122, 1
  %124 = add i32 %123, -456817942
  %125 = sub i32 %120, 1
  %126 = mul i32 %120, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %121, 10
  %130 = and i1 %128, %129
  %131 = xor i1 %128, %129
  %132 = or i1 %130, %131
  %133 = or i1 %128, %129
  %134 = select i1 %132, i32 -2004371728, i32 1980440696
  store i32 %134, i32* %33
  br label %615

; <label>:135:                                    ; preds = %34
  store i32 397420587, i32* %33
  br label %615

; <label>:136:                                    ; preds = %34
  %137 = load i8*, i8** %15, align 8
  %138 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %139 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE24_M_get_insert_unique_posERKc(%"class.std::_Rb_tree"* %138, i8* dereferenceable(1) %137)
  %140 = bitcast %"struct.std::pair"* %12 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %141 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %140, i32 0, i32 0
  %142 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %139, 0
  store %"struct.std::_Rb_tree_node_base"* %142, %"struct.std::_Rb_tree_node_base"** %141, align 8
  %143 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %140, i32 0, i32 1
  %144 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %139, 1
  store %"struct.std::_Rb_tree_node_base"* %144, %"struct.std::_Rb_tree_node_base"** %143, align 8
  store i32 397420587, i32* %33
  br label %615

; <label>:145:                                    ; preds = %34
  %146 = load i32, i32* @x.191
  %147 = load i32, i32* @y.192
  %148 = sub i32 0, 1
  %149 = add i32 %146, %148
  %150 = sub i32 %146, 1
  %151 = mul i32 %146, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %147, 10
  %155 = and i1 %153, %154
  %156 = xor i1 %153, %154
  %157 = or i1 %155, %156
  %158 = or i1 %153, %154
  %159 = select i1 %157, i32 -1038524092, i32 1410213842
  store i32 %159, i32* %33
  br label %615

; <label>:160:                                    ; preds = %34
  %161 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %162 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %161, i32 0, i32 0
  %163 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %162, i32 0, i32 0
  %164 = load i8*, i8** %15, align 8
  %165 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %16, i32 0, i32 0
  %166 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %165, align 8
  %167 = call dereferenceable(1) i8* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %166)
  %168 = call zeroext i1 @_ZNKSt4lessIcEclERKcS2_(%"struct.std::less"* %163, i8* dereferenceable(1) %164, i8* dereferenceable(1) %167)
  store i1 %168, i1* %7
  %169 = load i32, i32* @x.191
  %170 = load i32, i32* @y.192
  %171 = sub i32 %169, -1657268822
  %172 = sub i32 %171, 1
  %173 = add i32 %172, -1657268822
  %174 = sub i32 %169, 1
  %175 = mul i32 %169, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %170, 10
  %179 = xor i1 %177, true
  %180 = xor i1 %178, true
  %181 = xor i1 true, true
  %182 = and i1 %179, true
  %183 = and i1 %177, %181
  %184 = and i1 %180, true
  %185 = and i1 %178, %181
  %186 = or i1 %182, %183
  %187 = or i1 %184, %185
  %188 = xor i1 %186, %187
  %189 = or i1 %179, %180
  %190 = xor i1 %189, true
  %191 = or i1 true, %181
  %192 = and i1 %190, %191
  %193 = or i1 %188, %192
  %194 = or i1 %177, %178
  %195 = select i1 %193, i32 -1418504617, i32 1410213842
  store i32 %195, i32* %33
  br label %615

; <label>:196:                                    ; preds = %34
  %197 = load volatile i1, i1* %7
  %198 = select i1 %197, i32 -2098191238, i32 -309134011
  store i32 %198, i32* %33
  br label %615

; <label>:199:                                    ; preds = %34
  %200 = load i32, i32* @x.191
  %201 = load i32, i32* @y.192
  %202 = sub i32 %200, -387092552
  %203 = sub i32 %202, 1
  %204 = add i32 %203, -387092552
  %205 = sub i32 %200, 1
  %206 = mul i32 %200, %204
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %201, 10
  %210 = and i1 %208, %209
  %211 = xor i1 %208, %209
  %212 = or i1 %210, %211
  %213 = or i1 %208, %209
  %214 = select i1 %212, i32 -605152451, i32 1244910457
  store i32 %214, i32* %33
  br label %615

; <label>:215:                                    ; preds = %34
  %216 = bitcast %"struct.std::_Rb_tree_iterator"* %18 to i8*
  %217 = bitcast %"struct.std::_Rb_tree_iterator"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %216, i8* %217, i64 8, i32 8, i1 false)
  %218 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %16, i32 0, i32 0
  %219 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %218, align 8
  %220 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %221 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE11_M_leftmostEv(%"class.std::_Rb_tree"* %220) #3
  %222 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %221, align 8
  %223 = icmp eq %"struct.std::_Rb_tree_node_base"* %219, %222
  store i1 %223, i1* %6
  %224 = load i32, i32* @x.191
  %225 = load i32, i32* @y.192
  %226 = sub i32 %224, -476728875
  %227 = sub i32 %226, 1
  %228 = add i32 %227, -476728875
  %229 = sub i32 %224, 1
  %230 = mul i32 %224, %228
  %231 = urem i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %225, 10
  %234 = xor i1 %232, true
  %235 = xor i1 %233, true
  %236 = xor i1 false, true
  %237 = and i1 %234, false
  %238 = and i1 %232, %236
  %239 = and i1 %235, false
  %240 = and i1 %233, %236
  %241 = or i1 %237, %238
  %242 = or i1 %239, %240
  %243 = xor i1 %241, %242
  %244 = or i1 %234, %235
  %245 = xor i1 %244, true
  %246 = or i1 false, %236
  %247 = and i1 %245, %246
  %248 = or i1 %243, %247
  %249 = or i1 %232, %233
  %250 = select i1 %248, i32 671885648, i32 1244910457
  store i32 %250, i32* %33
  br label %615

; <label>:251:                                    ; preds = %34
  %252 = load volatile i1, i1* %6
  %253 = select i1 %252, i32 -739210251, i32 741267033
  store i32 %253, i32* %33
  br label %615

; <label>:254:                                    ; preds = %34
  %255 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %256 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE11_M_leftmostEv(%"class.std::_Rb_tree"* %255) #3
  %257 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %258 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE11_M_leftmostEv(%"class.std::_Rb_tree"* %257) #3
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair"* %12, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %256, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %258)
  store i32 397420587, i32* %33
  br label %615

; <label>:259:                                    ; preds = %34
  %260 = load i32, i32* @x.191
  %261 = load i32, i32* @y.192
  %262 = sub i32 0, 1
  %263 = add i32 %260, %262
  %264 = sub i32 %260, 1
  %265 = mul i32 %260, %263
  %266 = urem i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %261, 10
  %269 = and i1 %267, %268
  %270 = xor i1 %267, %268
  %271 = or i1 %269, %270
  %272 = or i1 %267, %268
  %273 = select i1 %271, i32 -2076058723, i32 986858865
  store i32 %273, i32* %33
  br label %615

; <label>:274:                                    ; preds = %34
  %275 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %276 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %275, i32 0, i32 0
  %277 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %276, i32 0, i32 0
  %278 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorIcEmmEv(%"struct.std::_Rb_tree_iterator"* %18) #3
  %279 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %278, i32 0, i32 0
  %280 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %279, align 8
  %281 = call dereferenceable(1) i8* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %280)
  %282 = load i8*, i8** %15, align 8
  %283 = call zeroext i1 @_ZNKSt4lessIcEclERKcS2_(%"struct.std::less"* %277, i8* dereferenceable(1) %281, i8* dereferenceable(1) %282)
  store i1 %283, i1* %5
  %284 = load i32, i32* @x.191
  %285 = load i32, i32* @y.192
  %286 = sub i32 %284, -509731596
  %287 = sub i32 %286, 1
  %288 = add i32 %287, -509731596
  %289 = sub i32 %284, 1
  %290 = mul i32 %284, %288
  %291 = urem i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %285, 10
  %294 = and i1 %292, %293
  %295 = xor i1 %292, %293
  %296 = or i1 %294, %295
  %297 = or i1 %292, %293
  %298 = select i1 %296, i32 1143155007, i32 986858865
  store i32 %298, i32* %33
  br label %615

; <label>:299:                                    ; preds = %34
  %300 = load volatile i1, i1* %5
  %301 = select i1 %300, i32 1484654086, i32 1715258679
  store i32 %301, i32* %33
  br label %615

; <label>:302:                                    ; preds = %34
  %303 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %18, i32 0, i32 0
  %304 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %303, align 8
  %305 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %304) #3
  %306 = icmp eq %"struct.std::_Rb_tree_node"* %305, null
  %307 = select i1 %306, i32 -824312805, i32 -1633575079
  store i32 %307, i32* %33
  br label %615

; <label>:308:                                    ; preds = %34
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %19, align 8
  %309 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %18, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair"* %12, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %19, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %309)
  store i32 397420587, i32* %33
  br label %615

; <label>:310:                                    ; preds = %34
  %311 = load i32, i32* @x.191
  %312 = load i32, i32* @y.192
  %313 = add i32 %311, -1475313596
  %314 = sub i32 %313, 1
  %315 = sub i32 %314, -1475313596
  %316 = sub i32 %311, 1
  %317 = mul i32 %311, %315
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %312, 10
  %321 = xor i1 %319, true
  %322 = xor i1 %320, true
  %323 = xor i1 false, true
  %324 = and i1 %321, false
  %325 = and i1 %319, %323
  %326 = and i1 %322, false
  %327 = and i1 %320, %323
  %328 = or i1 %324, %325
  %329 = or i1 %326, %327
  %330 = xor i1 %328, %329
  %331 = or i1 %321, %322
  %332 = xor i1 %331, true
  %333 = or i1 false, %323
  %334 = and i1 %332, %333
  %335 = or i1 %330, %334
  %336 = or i1 %319, %320
  %337 = select i1 %335, i32 2001338769, i32 -1473117423
  store i32 %337, i32* %33
  br label %615

; <label>:338:                                    ; preds = %34
  %339 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %16, i32 0, i32 0
  %340 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %16, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair"* %12, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %339, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %340)
  %341 = load i32, i32* @x.191
  %342 = load i32, i32* @y.192
  %343 = sub i32 0, 1
  %344 = add i32 %341, %343
  %345 = sub i32 %341, 1
  %346 = mul i32 %341, %344
  %347 = urem i32 %346, 2
  %348 = icmp eq i32 %347, 0
  %349 = icmp slt i32 %342, 10
  %350 = xor i1 %348, true
  %351 = xor i1 %349, true
  %352 = xor i1 true, true
  %353 = and i1 %350, true
  %354 = and i1 %348, %352
  %355 = and i1 %351, true
  %356 = and i1 %349, %352
  %357 = or i1 %353, %354
  %358 = or i1 %355, %356
  %359 = xor i1 %357, %358
  %360 = or i1 %350, %351
  %361 = xor i1 %360, true
  %362 = or i1 true, %352
  %363 = and i1 %361, %362
  %364 = or i1 %359, %363
  %365 = or i1 %348, %349
  %366 = select i1 %364, i32 -716704622, i32 -1473117423
  store i32 %366, i32* %33
  br label %615

; <label>:367:                                    ; preds = %34
  store i32 397420587, i32* %33
  br label %615

; <label>:368:                                    ; preds = %34
  %369 = load i8*, i8** %15, align 8
  %370 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %371 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE24_M_get_insert_unique_posERKc(%"class.std::_Rb_tree"* %370, i8* dereferenceable(1) %369)
  %372 = bitcast %"struct.std::pair"* %12 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %373 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %372, i32 0, i32 0
  %374 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %371, 0
  store %"struct.std::_Rb_tree_node_base"* %374, %"struct.std::_Rb_tree_node_base"** %373, align 8
  %375 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %372, i32 0, i32 1
  %376 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %371, 1
  store %"struct.std::_Rb_tree_node_base"* %376, %"struct.std::_Rb_tree_node_base"** %375, align 8
  store i32 397420587, i32* %33
  br label %615

; <label>:377:                                    ; preds = %34
  %378 = load i32, i32* @x.191
  %379 = load i32, i32* @y.192
  %380 = add i32 %378, 1131915834
  %381 = sub i32 %380, 1
  %382 = sub i32 %381, 1131915834
  %383 = sub i32 %378, 1
  %384 = mul i32 %378, %382
  %385 = urem i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = icmp slt i32 %379, 10
  %388 = and i1 %386, %387
  %389 = xor i1 %386, %387
  %390 = or i1 %388, %389
  %391 = or i1 %386, %387
  %392 = select i1 %390, i32 431974940, i32 795781806
  store i32 %392, i32* %33
  br label %615

; <label>:393:                                    ; preds = %34
  %394 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %395 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %394, i32 0, i32 0
  %396 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %395, i32 0, i32 0
  %397 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %16, i32 0, i32 0
  %398 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %397, align 8
  %399 = call dereferenceable(1) i8* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %398)
  %400 = load i8*, i8** %15, align 8
  %401 = call zeroext i1 @_ZNKSt4lessIcEclERKcS2_(%"struct.std::less"* %396, i8* dereferenceable(1) %399, i8* dereferenceable(1) %400)
  store i1 %401, i1* %4
  %402 = load i32, i32* @x.191
  %403 = load i32, i32* @y.192
  %404 = add i32 %402, 1639953911
  %405 = sub i32 %404, 1
  %406 = sub i32 %405, 1639953911
  %407 = sub i32 %402, 1
  %408 = mul i32 %402, %406
  %409 = urem i32 %408, 2
  %410 = icmp eq i32 %409, 0
  %411 = icmp slt i32 %403, 10
  %412 = and i1 %410, %411
  %413 = xor i1 %410, %411
  %414 = or i1 %412, %413
  %415 = or i1 %410, %411
  %416 = select i1 %414, i32 -1927559727, i32 795781806
  store i32 %416, i32* %33
  br label %615

; <label>:417:                                    ; preds = %34
  %418 = load volatile i1, i1* %4
  %419 = select i1 %418, i32 -379749091, i32 -937361682
  store i32 %419, i32* %33
  br label %615

; <label>:420:                                    ; preds = %34
  %421 = bitcast %"struct.std::_Rb_tree_iterator"* %20 to i8*
  %422 = bitcast %"struct.std::_Rb_tree_iterator"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %421, i8* %422, i64 8, i32 8, i1 false)
  %423 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %16, i32 0, i32 0
  %424 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %423, align 8
  %425 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %426 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE12_M_rightmostEv(%"class.std::_Rb_tree"* %425) #3
  %427 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %426, align 8
  %428 = icmp eq %"struct.std::_Rb_tree_node_base"* %424, %427
  %429 = select i1 %428, i32 1497128745, i32 -2105511500
  store i32 %429, i32* %33
  br label %615

; <label>:430:                                    ; preds = %34
  %431 = load i32, i32* @x.191
  %432 = load i32, i32* @y.192
  %433 = add i32 %431, -964997798
  %434 = sub i32 %433, 1
  %435 = sub i32 %434, -964997798
  %436 = sub i32 %431, 1
  %437 = mul i32 %431, %435
  %438 = urem i32 %437, 2
  %439 = icmp eq i32 %438, 0
  %440 = icmp slt i32 %432, 10
  %441 = and i1 %439, %440
  %442 = xor i1 %439, %440
  %443 = or i1 %441, %442
  %444 = or i1 %439, %440
  %445 = select i1 %443, i32 1761034967, i32 -92723821
  store i32 %445, i32* %33
  br label %615

; <label>:446:                                    ; preds = %34
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %21, align 8
  %447 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %448 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE12_M_rightmostEv(%"class.std::_Rb_tree"* %447) #3
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair"* %12, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %21, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %448)
  %449 = load i32, i32* @x.191
  %450 = load i32, i32* @y.192
  %451 = sub i32 %449, -224641675
  %452 = sub i32 %451, 1
  %453 = add i32 %452, -224641675
  %454 = sub i32 %449, 1
  %455 = mul i32 %449, %453
  %456 = urem i32 %455, 2
  %457 = icmp eq i32 %456, 0
  %458 = icmp slt i32 %450, 10
  %459 = xor i1 %457, true
  %460 = xor i1 %458, true
  %461 = xor i1 false, true
  %462 = and i1 %459, false
  %463 = and i1 %457, %461
  %464 = and i1 %460, false
  %465 = and i1 %458, %461
  %466 = or i1 %462, %463
  %467 = or i1 %464, %465
  %468 = xor i1 %466, %467
  %469 = or i1 %459, %460
  %470 = xor i1 %469, true
  %471 = or i1 false, %461
  %472 = and i1 %470, %471
  %473 = or i1 %468, %472
  %474 = or i1 %457, %458
  %475 = select i1 %473, i32 -1401290658, i32 -92723821
  store i32 %475, i32* %33
  br label %615

; <label>:476:                                    ; preds = %34
  store i32 397420587, i32* %33
  br label %615

; <label>:477:                                    ; preds = %34
  %478 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %479 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %478, i32 0, i32 0
  %480 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %479, i32 0, i32 0
  %481 = load i8*, i8** %15, align 8
  %482 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorIcEppEv(%"struct.std::_Rb_tree_iterator"* %20) #3
  %483 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %482, i32 0, i32 0
  %484 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %483, align 8
  %485 = call dereferenceable(1) i8* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %484)
  %486 = call zeroext i1 @_ZNKSt4lessIcEclERKcS2_(%"struct.std::less"* %480, i8* dereferenceable(1) %481, i8* dereferenceable(1) %485)
  %487 = select i1 %486, i32 -1330694785, i32 -1687721022
  store i32 %487, i32* %33
  br label %615

; <label>:488:                                    ; preds = %34
  %489 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %16, i32 0, i32 0
  %490 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %489, align 8
  %491 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %490) #3
  %492 = icmp eq %"struct.std::_Rb_tree_node"* %491, null
  %493 = select i1 %492, i32 -918270151, i32 -1300812606
  store i32 %493, i32* %33
  br label %615

; <label>:494:                                    ; preds = %34
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %22, align 8
  %495 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %16, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair"* %12, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %22, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %495)
  store i32 397420587, i32* %33
  br label %615

; <label>:496:                                    ; preds = %34
  %497 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %20, i32 0, i32 0
  %498 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %20, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair"* %12, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %497, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %498)
  store i32 397420587, i32* %33
  br label %615

; <label>:499:                                    ; preds = %34
  %500 = load i8*, i8** %15, align 8
  %501 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %502 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE24_M_get_insert_unique_posERKc(%"class.std::_Rb_tree"* %501, i8* dereferenceable(1) %500)
  %503 = bitcast %"struct.std::pair"* %12 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %504 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %503, i32 0, i32 0
  %505 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %502, 0
  store %"struct.std::_Rb_tree_node_base"* %505, %"struct.std::_Rb_tree_node_base"** %504, align 8
  %506 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %503, i32 0, i32 1
  %507 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %502, 1
  store %"struct.std::_Rb_tree_node_base"* %507, %"struct.std::_Rb_tree_node_base"** %506, align 8
  store i32 397420587, i32* %33
  br label %615

; <label>:508:                                    ; preds = %34
  %509 = load i32, i32* @x.191
  %510 = load i32, i32* @y.192
  %511 = sub i32 %509, -1791309148
  %512 = sub i32 %511, 1
  %513 = add i32 %512, -1791309148
  %514 = sub i32 %509, 1
  %515 = mul i32 %509, %513
  %516 = urem i32 %515, 2
  %517 = icmp eq i32 %516, 0
  %518 = icmp slt i32 %510, 10
  %519 = xor i1 %517, true
  %520 = xor i1 %518, true
  %521 = xor i1 false, true
  %522 = and i1 %519, false
  %523 = and i1 %517, %521
  %524 = and i1 %520, false
  %525 = and i1 %518, %521
  %526 = or i1 %522, %523
  %527 = or i1 %524, %525
  %528 = xor i1 %526, %527
  %529 = or i1 %519, %520
  %530 = xor i1 %529, true
  %531 = or i1 false, %521
  %532 = and i1 %530, %531
  %533 = or i1 %528, %532
  %534 = or i1 %517, %518
  %535 = select i1 %533, i32 -1437809558, i32 -1333325618
  store i32 %535, i32* %33
  br label %615

; <label>:536:                                    ; preds = %34
  %537 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %16, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %23, align 8
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair"* %12, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %537, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %23)
  %538 = load i32, i32* @x.191
  %539 = load i32, i32* @y.192
  %540 = add i32 %538, -1988835037
  %541 = sub i32 %540, 1
  %542 = sub i32 %541, -1988835037
  %543 = sub i32 %538, 1
  %544 = mul i32 %538, %542
  %545 = urem i32 %544, 2
  %546 = icmp eq i32 %545, 0
  %547 = icmp slt i32 %539, 10
  %548 = and i1 %546, %547
  %549 = xor i1 %546, %547
  %550 = or i1 %548, %549
  %551 = or i1 %546, %547
  %552 = select i1 %550, i32 927852808, i32 -1333325618
  store i32 %552, i32* %33
  br label %615

; <label>:553:                                    ; preds = %34
  store i32 397420587, i32* %33
  br label %615

; <label>:554:                                    ; preds = %34
  %555 = bitcast %"struct.std::pair"* %12 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %556 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %555, align 8
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %556

; <label>:557:                                    ; preds = %34
  %558 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %559 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %558, i32 0, i32 0
  %560 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %559, i32 0, i32 0
  %561 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %562 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE12_M_rightmostEv(%"class.std::_Rb_tree"* %561) #3
  %563 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %562, align 8
  %564 = call dereferenceable(1) i8* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %563)
  %565 = load i8*, i8** %15, align 8
  %566 = call zeroext i1 @_ZNKSt4lessIcEclERKcS2_(%"struct.std::less"* %560, i8* dereferenceable(1) %564, i8* dereferenceable(1) %565)
  store i32 -2106447712, i32* %33
  br label %615

; <label>:567:                                    ; preds = %34
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %17, align 8
  %568 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %569 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE12_M_rightmostEv(%"class.std::_Rb_tree"* %568) #3
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair"* %12, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %17, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %569)
  store i32 1263470026, i32* %33
  br label %615

; <label>:570:                                    ; preds = %34
  %571 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %572 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %571, i32 0, i32 0
  %573 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %572, i32 0, i32 0
  %574 = load i8*, i8** %15, align 8
  %575 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %16, i32 0, i32 0
  %576 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %575, align 8
  %577 = call dereferenceable(1) i8* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %576)
  %578 = call zeroext i1 @_ZNKSt4lessIcEclERKcS2_(%"struct.std::less"* %573, i8* dereferenceable(1) %574, i8* dereferenceable(1) %577)
  store i32 -1038524092, i32* %33
  br label %615

; <label>:579:                                    ; preds = %34
  %580 = bitcast %"struct.std::_Rb_tree_iterator"* %18 to i8*
  %581 = bitcast %"struct.std::_Rb_tree_iterator"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %580, i8* %581, i64 8, i32 8, i1 false)
  %582 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %16, i32 0, i32 0
  %583 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %582, align 8
  %584 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %585 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE11_M_leftmostEv(%"class.std::_Rb_tree"* %584) #3
  %586 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %585, align 8
  %587 = icmp eq %"struct.std::_Rb_tree_node_base"* %583, %586
  store i32 -605152451, i32* %33
  br label %615

; <label>:588:                                    ; preds = %34
  %589 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %590 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %589, i32 0, i32 0
  %591 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %590, i32 0, i32 0
  %592 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorIcEmmEv(%"struct.std::_Rb_tree_iterator"* %18) #3
  %593 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %592, i32 0, i32 0
  %594 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %593, align 8
  %595 = call dereferenceable(1) i8* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %594)
  %596 = load i8*, i8** %15, align 8
  %597 = call zeroext i1 @_ZNKSt4lessIcEclERKcS2_(%"struct.std::less"* %591, i8* dereferenceable(1) %595, i8* dereferenceable(1) %596)
  store i32 -2076058723, i32* %33
  br label %615

; <label>:598:                                    ; preds = %34
  %599 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %16, i32 0, i32 0
  %600 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %16, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair"* %12, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %599, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %600)
  store i32 2001338769, i32* %33
  br label %615

; <label>:601:                                    ; preds = %34
  %602 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %603 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %602, i32 0, i32 0
  %604 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %603, i32 0, i32 0
  %605 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %16, i32 0, i32 0
  %606 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %605, align 8
  %607 = call dereferenceable(1) i8* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %606)
  %608 = load i8*, i8** %15, align 8
  %609 = call zeroext i1 @_ZNKSt4lessIcEclERKcS2_(%"struct.std::less"* %604, i8* dereferenceable(1) %607, i8* dereferenceable(1) %608)
  store i32 431974940, i32* %33
  br label %615

; <label>:610:                                    ; preds = %34
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %21, align 8
  %611 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11
  %612 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE12_M_rightmostEv(%"class.std::_Rb_tree"* %611) #3
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair"* %12, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %21, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %612)
  store i32 1761034967, i32* %33
  br label %615

; <label>:613:                                    ; preds = %34
  %614 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %16, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %23, align 8
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair"* %12, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %614, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %23)
  store i32 -1437809558, i32* %33
  br label %615

; <label>:615:                                    ; preds = %613, %610, %601, %598, %588, %579, %570, %567, %557, %553, %536, %508, %499, %496, %494, %488, %477, %476, %446, %430, %420, %417, %393, %377, %368, %367, %338, %310, %308, %302, %299, %274, %259, %254, %251, %215, %199, %196, %160, %145, %136, %135, %117, %102, %99, %63, %47, %42, %37, %36
  br label %34
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) i8* @_ZNKSt9_IdentityIcEclERKc(%"struct.std::_Identity"*, i8* dereferenceable(1)) #5 comdat align 2 {
  %3 = alloca i8*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.193
  %7 = load i32, i32* @y.194
  %8 = sub i32 %6, 38406287
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 38406287
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 986671395, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %67
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 986671395, label %20
    i32 -13990177, label %40
    i32 -601183002, label %60
    i32 -1425072078, label %62
  ]

; <label>:19:                                     ; preds = %17
  br label %67

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -13990177, i32 -1425072078
  store i32 %39, i32* %16
  br label %67

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::_Identity"*, align 8
  %42 = alloca i8*, align 8
  store %"struct.std::_Identity"* %0, %"struct.std::_Identity"** %41, align 8
  store i8* %1, i8** %42, align 8
  %43 = load %"struct.std::_Identity"*, %"struct.std::_Identity"** %41, align 8
  %44 = load i8*, i8** %42, align 8
  store i8* %44, i8** %3
  %45 = load i32, i32* @x.193
  %46 = load i32, i32* @y.194
  %47 = sub i32 %45, -664342953
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -664342953
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -601183002, i32 -1425072078
  store i32 %59, i32* %16
  br label %67

; <label>:60:                                     ; preds = %17
  %61 = load volatile i8*, i8** %3
  ret i8* %61

; <label>:62:                                     ; preds = %17
  %63 = alloca %"struct.std::_Identity"*, align 8
  %64 = alloca i8*, align 8
  store %"struct.std::_Identity"* %0, %"struct.std::_Identity"** %63, align 8
  store i8* %1, i8** %64, align 8
  %65 = load %"struct.std::_Identity"*, %"struct.std::_Identity"** %63, align 8
  %66 = load i8*, i8** %64, align 8
  store i32 -13990177, i32* %16
  br label %67

; <label>:67:                                     ; preds = %62, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE10_M_insert_IRKcNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIcEPSt18_Rb_tree_node_baseSD_OT_RT0_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, i8* dereferenceable(1), %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* dereferenceable(8)) #0 comdat align 2 {
  %6 = alloca i1
  %7 = alloca i1
  %8 = alloca i1
  %9 = alloca %"class.std::_Rb_tree"*
  %10 = alloca %"struct.std::_Rb_tree_node"**
  %11 = alloca %"struct.std::_Identity"*
  %12 = alloca i8*
  %13 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"**
  %14 = alloca i8**
  %15 = alloca %"struct.std::_Rb_tree_node_base"**
  %16 = alloca %"struct.std::_Rb_tree_iterator"*
  %17 = alloca i1
  %18 = alloca i1
  %19 = load i32, i32* @x.195
  %20 = load i32, i32* @y.196
  %21 = add i32 %19, -1376134685
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, -1376134685
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  store i1 %27, i1* %18
  %28 = icmp slt i32 %20, 10
  store i1 %28, i1* %17
  %29 = alloca i32
  store i32 1982557614, i32* %29
  %30 = alloca i1
  br label %31

; <label>:31:                                     ; preds = %5, %290
  %32 = load i32, i32* %29
  switch i32 %32, label %33 [
    i32 1982557614, label %34
    i32 -1410612644, label %54
    i32 883565983, label %97
    i32 1915947857, label %100
    i32 2029352954, label %128
    i32 1852059838, label %162
    i32 -1646131290, label %165
    i32 691967217, label %193
    i32 -1146403666, label %219
    i32 -2111361803, label %221
    i32 -191272380, label %258
    i32 -1137705367, label %271
    i32 -1341803265, label %278
  ]

; <label>:33:                                     ; preds = %31
  br label %290

; <label>:34:                                     ; preds = %31
  %35 = load volatile i1, i1* %18
  %36 = load volatile i1, i1* %17
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 false, true
  %40 = and i1 %37, false
  %41 = and i1 %35, %39
  %42 = and i1 %38, false
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 false, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  %53 = select i1 %51, i32 -1410612644, i32 -191272380
  store i32 %53, i32* %29
  br label %290

; <label>:54:                                     ; preds = %31
  %55 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"struct.std::_Rb_tree_iterator"* %55, %"struct.std::_Rb_tree_iterator"** %16
  %56 = alloca %"class.std::_Rb_tree"*, align 8
  %57 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %58 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"** %58, %"struct.std::_Rb_tree_node_base"*** %15
  %59 = alloca i8*, align 8
  store i8** %59, i8*** %14
  %60 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"*, align 8
  store %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"** %60, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"*** %13
  %61 = alloca i8, align 1
  store i8* %61, i8** %12
  %62 = alloca %"struct.std::_Identity", align 1
  store %"struct.std::_Identity"* %62, %"struct.std::_Identity"** %11
  %63 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"** %63, %"struct.std::_Rb_tree_node"*** %10
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %56, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %57, align 8
  %64 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %15
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %64, align 8
  %65 = load volatile i8**, i8*** %14
  store i8* %3, i8** %65, align 8
  %66 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"**, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"*** %13
  store %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* %4, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"** %66, align 8
  %67 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %56, align 8
  store %"class.std::_Rb_tree"* %67, %"class.std::_Rb_tree"** %9
  %68 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %57, align 8
  %69 = icmp ne %"struct.std::_Rb_tree_node_base"* %68, null
  store i1 %69, i1* %8
  %70 = load i32, i32* @x.195
  %71 = load i32, i32* @y.196
  %72 = sub i32 %70, 1833710905
  %73 = sub i32 %72, 1
  %74 = add i32 %73, 1833710905
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 false, true
  %83 = and i1 %80, false
  %84 = and i1 %78, %82
  %85 = and i1 %81, false
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 false, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  %96 = select i1 %94, i32 883565983, i32 -191272380
  store i32 %96, i32* %29
  br label %290

; <label>:97:                                     ; preds = %31
  %98 = load volatile i1, i1* %8
  %99 = select i1 %98, i32 -2111361803, i32 1915947857
  store i32 %99, i32* %29
  store i1 true, i1* %30
  br label %290

; <label>:100:                                    ; preds = %31
  %101 = load i32, i32* @x.195
  %102 = load i32, i32* @y.196
  %103 = add i32 %101, -239491844
  %104 = sub i32 %103, 1
  %105 = sub i32 %104, -239491844
  %106 = sub i32 %101, 1
  %107 = mul i32 %101, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %102, 10
  %111 = xor i1 %109, true
  %112 = xor i1 %110, true
  %113 = xor i1 false, true
  %114 = and i1 %111, false
  %115 = and i1 %109, %113
  %116 = and i1 %112, false
  %117 = and i1 %110, %113
  %118 = or i1 %114, %115
  %119 = or i1 %116, %117
  %120 = xor i1 %118, %119
  %121 = or i1 %111, %112
  %122 = xor i1 %121, true
  %123 = or i1 false, %113
  %124 = and i1 %122, %123
  %125 = or i1 %120, %124
  %126 = or i1 %109, %110
  %127 = select i1 %125, i32 2029352954, i32 -1137705367
  store i32 %127, i32* %29
  br label %290

; <label>:128:                                    ; preds = %31
  %129 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %15
  %130 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %129, align 8
  %131 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %132 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE6_M_endEv(%"class.std::_Rb_tree"* %131) #3
  %133 = bitcast %"struct.std::_Rb_tree_node"* %132 to %"struct.std::_Rb_tree_node_base"*
  %134 = icmp eq %"struct.std::_Rb_tree_node_base"* %130, %133
  store i1 %134, i1* %7
  %135 = load i32, i32* @x.195
  %136 = load i32, i32* @y.196
  %137 = sub i32 %135, 1514192883
  %138 = sub i32 %137, 1
  %139 = add i32 %138, 1514192883
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = xor i1 %143, true
  %146 = xor i1 %144, true
  %147 = xor i1 false, true
  %148 = and i1 %145, false
  %149 = and i1 %143, %147
  %150 = and i1 %146, false
  %151 = and i1 %144, %147
  %152 = or i1 %148, %149
  %153 = or i1 %150, %151
  %154 = xor i1 %152, %153
  %155 = or i1 %145, %146
  %156 = xor i1 %155, true
  %157 = or i1 false, %147
  %158 = and i1 %156, %157
  %159 = or i1 %154, %158
  %160 = or i1 %143, %144
  %161 = select i1 %159, i32 1852059838, i32 -1137705367
  store i32 %161, i32* %29
  br label %290

; <label>:162:                                    ; preds = %31
  %163 = load volatile i1, i1* %7
  %164 = select i1 %163, i32 -2111361803, i32 -1646131290
  store i32 %164, i32* %29
  store i1 true, i1* %30
  br label %290

; <label>:165:                                    ; preds = %31
  %166 = load i32, i32* @x.195
  %167 = load i32, i32* @y.196
  %168 = sub i32 %166, -1738952796
  %169 = sub i32 %168, 1
  %170 = add i32 %169, -1738952796
  %171 = sub i32 %166, 1
  %172 = mul i32 %166, %170
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %167, 10
  %176 = xor i1 %174, true
  %177 = xor i1 %175, true
  %178 = xor i1 false, true
  %179 = and i1 %176, false
  %180 = and i1 %174, %178
  %181 = and i1 %177, false
  %182 = and i1 %175, %178
  %183 = or i1 %179, %180
  %184 = or i1 %181, %182
  %185 = xor i1 %183, %184
  %186 = or i1 %176, %177
  %187 = xor i1 %186, true
  %188 = or i1 false, %178
  %189 = and i1 %187, %188
  %190 = or i1 %185, %189
  %191 = or i1 %174, %175
  %192 = select i1 %190, i32 691967217, i32 -1341803265
  store i32 %192, i32* %29
  br label %290

; <label>:193:                                    ; preds = %31
  %194 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %195 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %194, i32 0, i32 0
  %196 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %195, i32 0, i32 0
  %197 = load volatile i8**, i8*** %14
  %198 = load i8*, i8** %197, align 8
  %199 = load volatile %"struct.std::_Identity"*, %"struct.std::_Identity"** %11
  %200 = call dereferenceable(1) i8* @_ZNKSt9_IdentityIcEclERKc(%"struct.std::_Identity"* %199, i8* dereferenceable(1) %198)
  %201 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %15
  %202 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %201, align 8
  %203 = call dereferenceable(1) i8* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %202)
  %204 = call zeroext i1 @_ZNKSt4lessIcEclERKcS2_(%"struct.std::less"* %196, i8* dereferenceable(1) %200, i8* dereferenceable(1) %203)
  store i1 %204, i1* %6
  %205 = load i32, i32* @x.195
  %206 = load i32, i32* @y.196
  %207 = sub i32 0, 1
  %208 = add i32 %205, %207
  %209 = sub i32 %205, 1
  %210 = mul i32 %205, %208
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %206, 10
  %214 = and i1 %212, %213
  %215 = xor i1 %212, %213
  %216 = or i1 %214, %215
  %217 = or i1 %212, %213
  %218 = select i1 %216, i32 -1146403666, i32 -1341803265
  store i32 %218, i32* %29
  br label %290

; <label>:219:                                    ; preds = %31
  store i32 -2111361803, i32* %29
  %220 = load volatile i1, i1* %6
  store i1 %220, i1* %30
  br label %290

; <label>:221:                                    ; preds = %31
  %222 = load i1, i1* %30
  %223 = zext i1 %222 to i8
  %224 = load volatile i8*, i8** %12
  store i8 %223, i8* %224, align 1
  %225 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"**, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"*** %13
  %226 = load %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"** %225, align 8
  %227 = load volatile i8**, i8*** %14
  %228 = load i8*, i8** %227, align 8
  %229 = call dereferenceable(1) i8* @_ZSt7forwardIRKcEOT_RNSt16remove_referenceIS2_E4typeE(i8* dereferenceable(1) %228) #3
  %230 = call %"struct.std::_Rb_tree_node"* @_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE11_Alloc_nodeclIRKcEEPSt13_Rb_tree_nodeIcEOT_(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* %226, i8* dereferenceable(1) %229)
  %231 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %10
  store %"struct.std::_Rb_tree_node"* %230, %"struct.std::_Rb_tree_node"** %231, align 8
  %232 = load volatile i8*, i8** %12
  %233 = load i8, i8* %232, align 1
  %234 = trunc i8 %233 to i1
  %235 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %10
  %236 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %235, align 8
  %237 = bitcast %"struct.std::_Rb_tree_node"* %236 to %"struct.std::_Rb_tree_node_base"*
  %238 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %15
  %239 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %238, align 8
  %240 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %241 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %240, i32 0, i32 0
  %242 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %241, i32 0, i32 1
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %234, %"struct.std::_Rb_tree_node_base"* %237, %"struct.std::_Rb_tree_node_base"* %239, %"struct.std::_Rb_tree_node_base"* dereferenceable(32) %242) #3
  %243 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %244 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %243, i32 0, i32 0
  %245 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %244, i32 0, i32 2
  %246 = load i64, i64* %245, align 8
  %247 = add i64 %246, -3886957120662615897
  %248 = add i64 %247, 1
  %249 = sub i64 %248, -3886957120662615897
  %250 = add i64 %246, 1
  store i64 %249, i64* %245, align 8
  %251 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %10
  %252 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %251, align 8
  %253 = bitcast %"struct.std::_Rb_tree_node"* %252 to %"struct.std::_Rb_tree_node_base"*
  %254 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %16
  call void @_ZNSt17_Rb_tree_iteratorIcEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %254, %"struct.std::_Rb_tree_node_base"* %253) #3
  %255 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %16
  %256 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %255, i32 0, i32 0
  %257 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %256, align 8
  ret %"struct.std::_Rb_tree_node_base"* %257

; <label>:258:                                    ; preds = %31
  %259 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %260 = alloca %"class.std::_Rb_tree"*, align 8
  %261 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %262 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %263 = alloca i8*, align 8
  %264 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"*, align 8
  %265 = alloca i8, align 1
  %266 = alloca %"struct.std::_Identity", align 1
  %267 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %260, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %261, align 8
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %262, align 8
  store i8* %3, i8** %263, align 8
  store %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* %4, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"** %264, align 8
  %268 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %260, align 8
  %269 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %261, align 8
  %270 = icmp ne %"struct.std::_Rb_tree_node_base"* %269, null
  store i32 -1410612644, i32* %29
  br label %290

; <label>:271:                                    ; preds = %31
  %272 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %15
  %273 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %272, align 8
  %274 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %275 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE6_M_endEv(%"class.std::_Rb_tree"* %274) #3
  %276 = bitcast %"struct.std::_Rb_tree_node"* %275 to %"struct.std::_Rb_tree_node_base"*
  %277 = icmp eq %"struct.std::_Rb_tree_node_base"* %273, %276
  store i32 2029352954, i32* %29
  br label %290

; <label>:278:                                    ; preds = %31
  %279 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %280 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %279, i32 0, i32 0
  %281 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %280, i32 0, i32 0
  %282 = load volatile i8**, i8*** %14
  %283 = load i8*, i8** %282, align 8
  %284 = load volatile %"struct.std::_Identity"*, %"struct.std::_Identity"** %11
  %285 = call dereferenceable(1) i8* @_ZNKSt9_IdentityIcEclERKc(%"struct.std::_Identity"* %284, i8* dereferenceable(1) %283)
  %286 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %15
  %287 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %286, align 8
  %288 = call dereferenceable(1) i8* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %287)
  %289 = call zeroext i1 @_ZNKSt4lessIcEclERKcS2_(%"struct.std::less"* %281, i8* dereferenceable(1) %285, i8* dereferenceable(1) %288)
  store i32 691967217, i32* %29
  br label %290

; <label>:290:                                    ; preds = %278, %271, %258, %219, %193, %165, %162, %128, %100, %97, %54, %34, %33
  br label %31
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt17_Rb_tree_iteratorIcEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_node_base"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  store %"struct.std::_Rb_tree_node_base"* %7, %"struct.std::_Rb_tree_node_base"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt23_Rb_tree_const_iteratorIcE13_M_const_castEv(%"struct.std::_Rb_tree_const_iterator"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %3 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  %4 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %4, i32 0, i32 0
  %6 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %5, align 8
  call void @_ZNSt17_Rb_tree_iteratorIcEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %2, %"struct.std::_Rb_tree_node_base"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %2, i32 0, i32 0
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_node_base"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE6_M_endEv(%"class.std::_Rb_tree"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.201
  %6 = load i32, i32* @y.202
  %7 = sub i32 %5, 832980145
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 832980145
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1229052134, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %56
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1229052134, label %19
    i32 -889667546, label %27
    i32 1241111752, label %48
    i32 1667479219, label %50
  ]

; <label>:18:                                     ; preds = %16
  br label %56

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -889667546, i32 1667479219
  store i32 %26, i32* %15
  br label %56

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %28, align 8
  %29 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %28, align 8
  %30 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %30, i32 0, i32 1
  %32 = bitcast %"struct.std::_Rb_tree_node_base"* %31 to %"struct.std::_Rb_tree_node"*
  store %"struct.std::_Rb_tree_node"* %32, %"struct.std::_Rb_tree_node"** %2
  %33 = load i32, i32* @x.201
  %34 = load i32, i32* @y.202
  %35 = sub i32 %33, 1491410737
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 1491410737
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 1241111752, i32 1667479219
  store i32 %47, i32* %15
  br label %56

; <label>:48:                                     ; preds = %16
  %49 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2
  ret %"struct.std::_Rb_tree_node"* %49

; <label>:50:                                     ; preds = %16
  %51 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %51, align 8
  %52 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %51, align 8
  %53 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %52, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %53, i32 0, i32 1
  %55 = bitcast %"struct.std::_Rb_tree_node_base"* %54 to %"struct.std::_Rb_tree_node"*
  store i32 -889667546, i32* %15
  br label %56

; <label>:56:                                     ; preds = %50, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE4sizeEv(%"class.std::_Rb_tree"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.203
  %6 = load i32, i32* @y.204
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -212281732, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %67
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -212281732, label %18
    i32 652545319, label %26
    i32 -309542804, label %59
    i32 1125999874, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %67

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 652545319, i32 1125999874
  store i32 %25, i32* %14
  br label %67

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %27, align 8
  %28 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %27, align 8
  %29 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %28, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %29, i32 0, i32 2
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %2
  %32 = load i32, i32* @x.203
  %33 = load i32, i32* @y.204
  %34 = sub i32 %32, -941024903
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -941024903
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -309542804, i32 1125999874
  store i32 %58, i32* %14
  br label %67

; <label>:59:                                     ; preds = %15
  %60 = load volatile i64, i64* %2
  ret i64 %60

; <label>:61:                                     ; preds = %15
  %62 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %62, align 8
  %63 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %62, align 8
  %64 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %64, i32 0, i32 2
  %66 = load i64, i64* %65, align 8
  store i32 652545319, i32* %14
  br label %67

; <label>:67:                                     ; preds = %61, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt4lessIcEclERKcS2_(%"struct.std::less"*, i8* dereferenceable(1), i8* dereferenceable(1)) #5 comdat align 2 {
  %4 = alloca %"struct.std::less"*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store %"struct.std::less"* %0, %"struct.std::less"** %4, align 8
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"struct.std::less"*, %"struct.std::less"** %4, align 8
  %8 = load i8*, i8** %5, align 8
  %9 = load i8, i8* %8, align 1
  %10 = sext i8 %9 to i32
  %11 = load i8*, i8** %6, align 8
  %12 = load i8, i8* %11, align 1
  %13 = sext i8 %12 to i32
  %14 = icmp slt i32 %10, %13
  ret i1 %14
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(1) i8* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %3 = alloca %"struct.std::_Identity", align 1
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %5 = call dereferenceable(1) i8* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %4)
  %6 = call dereferenceable(1) i8* @_ZNKSt9_IdentityIcEclERKc(%"struct.std::_Identity"* %3, i8* dereferenceable(1) %5)
  ret i8* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE12_M_rightmostEv(%"class.std::_Rb_tree"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.209
  %6 = load i32, i32* @y.210
  %7 = add i32 %5, -1505918951
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1505918951
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1853745892, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %56
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1853745892, label %19
    i32 -1507345489, label %27
    i32 -952296886, label %48
    i32 434307094, label %50
  ]

; <label>:18:                                     ; preds = %16
  br label %56

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1507345489, i32 434307094
  store i32 %26, i32* %15
  br label %56

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %28, align 8
  %29 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %28, align 8
  %30 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %30, i32 0, i32 1
  %32 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %31, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"** %32, %"struct.std::_Rb_tree_node_base"*** %2
  %33 = load i32, i32* @x.209
  %34 = load i32, i32* @y.210
  %35 = sub i32 %33, 1224114325
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 1224114325
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 -952296886, i32 434307094
  store i32 %47, i32* %15
  br label %56

; <label>:48:                                     ; preds = %16
  %49 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %2
  ret %"struct.std::_Rb_tree_node_base"** %49

; <label>:50:                                     ; preds = %16
  %51 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %51, align 8
  %52 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %51, align 8
  %53 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %52, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %53, i32 0, i32 1
  %55 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %54, i32 0, i32 3
  store i32 -1507345489, i32* %15
  br label %56

; <label>:56:                                     ; preds = %50, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair"*, %"struct.std::_Rb_tree_node_base"** dereferenceable(8), %"struct.std::_Rb_tree_node_base"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %4 = alloca %"struct.std::pair"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  %6 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %4, align 8
  store %"struct.std::_Rb_tree_node_base"** %1, %"struct.std::_Rb_tree_node_base"*** %5, align 8
  store %"struct.std::_Rb_tree_node_base"** %2, %"struct.std::_Rb_tree_node_base"*** %6, align 8
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %5, align 8
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  store %"struct.std::_Rb_tree_node_base"* %10, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %11 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 1
  %12 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %6, align 8
  %13 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %12) #3
  %14 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %13, align 8
  store %"struct.std::_Rb_tree_node_base"* %14, %"struct.std::_Rb_tree_node_base"** %11, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE24_M_get_insert_unique_posERKc(%"class.std::_Rb_tree"*, i8* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca %"class.std::_Rb_tree"*
  %7 = alloca %"struct.std::pair", align 8
  %8 = alloca %"class.std::_Rb_tree"*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %11 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %12 = alloca i8, align 1
  %13 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %14 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %15 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %8, align 8
  store i8* %1, i8** %9, align 8
  %16 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8, align 8
  store %"class.std::_Rb_tree"* %16, %"class.std::_Rb_tree"** %6
  %17 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %18 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_M_beginEv(%"class.std::_Rb_tree"* %17) #3
  store %"struct.std::_Rb_tree_node"* %18, %"struct.std::_Rb_tree_node"** %10, align 8
  %19 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %20 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE6_M_endEv(%"class.std::_Rb_tree"* %19) #3
  store %"struct.std::_Rb_tree_node"* %20, %"struct.std::_Rb_tree_node"** %11, align 8
  store i8 1, i8* %12, align 1
  %21 = alloca i32
  store i32 -846178556, i32* %21
  %22 = alloca %"struct.std::_Rb_tree_node"*
  br label %23

; <label>:23:                                     ; preds = %2, %254
  %24 = load i32, i32* %21
  switch i32 %24, label %25 [
    i32 -846178556, label %26
    i32 -531852856, label %54
    i32 458135647, label %71
    i32 1746720340, label %74
    i32 1948240342, label %87
    i32 -356647591, label %91
    i32 1864066819, label %95
    i32 -1370084569, label %97
    i32 -1245138862, label %113
    i32 -2126281775, label %145
    i32 -1728800701, label %148
    i32 -596395862, label %164
    i32 720641538, label %184
    i32 1740234204, label %187
    i32 -1977833470, label %188
    i32 -478553440, label %204
    i32 -746235388, label %221
    i32 -628950192, label %222
    i32 -225987622, label %223
    i32 905105060, label %233
    i32 -1613447860, label %234
    i32 2054674912, label %236
    i32 -874700276, label %239
    i32 -1736152682, label %242
    i32 420075519, label %247
    i32 745949055, label %252
  ]

; <label>:25:                                     ; preds = %23
  br label %254

; <label>:26:                                     ; preds = %23
  %27 = load i32, i32* @x.213
  %28 = load i32, i32* @y.214
  %29 = add i32 %27, 2111339744
  %30 = sub i32 %29, 1
  %31 = sub i32 %30, 2111339744
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 true, true
  %40 = and i1 %37, true
  %41 = and i1 %35, %39
  %42 = and i1 %38, true
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 true, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  %53 = select i1 %51, i32 -531852856, i32 -874700276
  store i32 %53, i32* %21
  br label %254

; <label>:54:                                     ; preds = %23
  %55 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  %56 = icmp ne %"struct.std::_Rb_tree_node"* %55, null
  store i1 %56, i1* %5
  %57 = load i32, i32* @x.213
  %58 = load i32, i32* @y.214
  %59 = sub i32 0, 1
  %60 = add i32 %57, %59
  %61 = sub i32 %57, 1
  %62 = mul i32 %57, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %58, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 458135647, i32 -874700276
  store i32 %70, i32* %21
  br label %254

; <label>:71:                                     ; preds = %23
  %72 = load volatile i1, i1* %5
  %73 = select i1 %72, i32 1746720340, i32 -1370084569
  store i32 %73, i32* %21
  br label %254

; <label>:74:                                     ; preds = %23
  %75 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  store %"struct.std::_Rb_tree_node"* %75, %"struct.std::_Rb_tree_node"** %11, align 8
  %76 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %77 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %77, i32 0, i32 0
  %79 = load i8*, i8** %9, align 8
  %80 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  %81 = call dereferenceable(1) i8* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE6_S_keyEPKSt13_Rb_tree_nodeIcE(%"struct.std::_Rb_tree_node"* %80)
  %82 = call zeroext i1 @_ZNKSt4lessIcEclERKcS2_(%"struct.std::less"* %78, i8* dereferenceable(1) %79, i8* dereferenceable(1) %81)
  %83 = zext i1 %82 to i8
  store i8 %83, i8* %12, align 1
  %84 = load i8, i8* %12, align 1
  %85 = trunc i8 %84 to i1
  %86 = select i1 %85, i32 1948240342, i32 -356647591
  store i32 %86, i32* %21
  br label %254

; <label>:87:                                     ; preds = %23
  %88 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  %89 = bitcast %"struct.std::_Rb_tree_node"* %88 to %"struct.std::_Rb_tree_node_base"*
  %90 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %89) #3
  store i32 1864066819, i32* %21
  store %"struct.std::_Rb_tree_node"* %90, %"struct.std::_Rb_tree_node"** %22
  br label %254

; <label>:91:                                     ; preds = %23
  %92 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  %93 = bitcast %"struct.std::_Rb_tree_node"* %92 to %"struct.std::_Rb_tree_node_base"*
  %94 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %93) #3
  store i32 1864066819, i32* %21
  store %"struct.std::_Rb_tree_node"* %94, %"struct.std::_Rb_tree_node"** %22
  br label %254

; <label>:95:                                     ; preds = %23
  %96 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %22
  store %"struct.std::_Rb_tree_node"* %96, %"struct.std::_Rb_tree_node"** %10, align 8
  store i32 -846178556, i32* %21
  br label %254

; <label>:97:                                     ; preds = %23
  %98 = load i32, i32* @x.213
  %99 = load i32, i32* @y.214
  %100 = add i32 %98, -119065791
  %101 = sub i32 %100, 1
  %102 = sub i32 %101, -119065791
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = and i1 %106, %107
  %109 = xor i1 %106, %107
  %110 = or i1 %108, %109
  %111 = or i1 %106, %107
  %112 = select i1 %110, i32 -1245138862, i32 -1736152682
  store i32 %112, i32* %21
  br label %254

; <label>:113:                                    ; preds = %23
  %114 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %11, align 8
  %115 = bitcast %"struct.std::_Rb_tree_node"* %114 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorIcEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %13, %"struct.std::_Rb_tree_node_base"* %115) #3
  %116 = load i8, i8* %12, align 1
  %117 = trunc i8 %116 to i1
  store i1 %117, i1* %4
  %118 = load i32, i32* @x.213
  %119 = load i32, i32* @y.214
  %120 = add i32 %118, 884642475
  %121 = sub i32 %120, 1
  %122 = sub i32 %121, 884642475
  %123 = sub i32 %118, 1
  %124 = mul i32 %118, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %119, 10
  %128 = xor i1 %126, true
  %129 = xor i1 %127, true
  %130 = xor i1 false, true
  %131 = and i1 %128, false
  %132 = and i1 %126, %130
  %133 = and i1 %129, false
  %134 = and i1 %127, %130
  %135 = or i1 %131, %132
  %136 = or i1 %133, %134
  %137 = xor i1 %135, %136
  %138 = or i1 %128, %129
  %139 = xor i1 %138, true
  %140 = or i1 false, %130
  %141 = and i1 %139, %140
  %142 = or i1 %137, %141
  %143 = or i1 %126, %127
  %144 = select i1 %142, i32 -2126281775, i32 -1736152682
  store i32 %144, i32* %21
  br label %254

; <label>:145:                                    ; preds = %23
  %146 = load volatile i1, i1* %4
  %147 = select i1 %146, i32 -1728800701, i32 -225987622
  store i32 %147, i32* %21
  br label %254

; <label>:148:                                    ; preds = %23
  %149 = load i32, i32* @x.213
  %150 = load i32, i32* @y.214
  %151 = sub i32 %149, -661272345
  %152 = sub i32 %151, 1
  %153 = add i32 %152, -661272345
  %154 = sub i32 %149, 1
  %155 = mul i32 %149, %153
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %150, 10
  %159 = and i1 %157, %158
  %160 = xor i1 %157, %158
  %161 = or i1 %159, %160
  %162 = or i1 %157, %158
  %163 = select i1 %161, i32 -596395862, i32 420075519
  store i32 %163, i32* %21
  br label %254

; <label>:164:                                    ; preds = %23
  %165 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %166 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE5beginEv(%"class.std::_Rb_tree"* %165) #3
  %167 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %14, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %166, %"struct.std::_Rb_tree_node_base"** %167, align 8
  %168 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorIcEeqERKS0_(%"struct.std::_Rb_tree_iterator"* %13, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %14) #3
  store i1 %168, i1* %3
  %169 = load i32, i32* @x.213
  %170 = load i32, i32* @y.214
  %171 = add i32 %169, -1569378981
  %172 = sub i32 %171, 1
  %173 = sub i32 %172, -1569378981
  %174 = sub i32 %169, 1
  %175 = mul i32 %169, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %170, 10
  %179 = and i1 %177, %178
  %180 = xor i1 %177, %178
  %181 = or i1 %179, %180
  %182 = or i1 %177, %178
  %183 = select i1 %181, i32 720641538, i32 420075519
  store i32 %183, i32* %21
  br label %254

; <label>:184:                                    ; preds = %23
  %185 = load volatile i1, i1* %3
  %186 = select i1 %185, i32 1740234204, i32 -1977833470
  store i32 %186, i32* %21
  br label %254

; <label>:187:                                    ; preds = %23
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIcES7_vEEOT_OT0_(%"struct.std::pair"* %7, %"struct.std::_Rb_tree_node"** dereferenceable(8) %10, %"struct.std::_Rb_tree_node"** dereferenceable(8) %11)
  store i32 2054674912, i32* %21
  br label %254

; <label>:188:                                    ; preds = %23
  %189 = load i32, i32* @x.213
  %190 = load i32, i32* @y.214
  %191 = sub i32 %189, 2091943280
  %192 = sub i32 %191, 1
  %193 = add i32 %192, 2091943280
  %194 = sub i32 %189, 1
  %195 = mul i32 %189, %193
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %190, 10
  %199 = and i1 %197, %198
  %200 = xor i1 %197, %198
  %201 = or i1 %199, %200
  %202 = or i1 %197, %198
  %203 = select i1 %201, i32 -478553440, i32 745949055
  store i32 %203, i32* %21
  br label %254

; <label>:204:                                    ; preds = %23
  %205 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorIcEmmEv(%"struct.std::_Rb_tree_iterator"* %13) #3
  %206 = load i32, i32* @x.213
  %207 = load i32, i32* @y.214
  %208 = sub i32 %206, -402346297
  %209 = sub i32 %208, 1
  %210 = add i32 %209, -402346297
  %211 = sub i32 %206, 1
  %212 = mul i32 %206, %210
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %207, 10
  %216 = and i1 %214, %215
  %217 = xor i1 %214, %215
  %218 = or i1 %216, %217
  %219 = or i1 %214, %215
  %220 = select i1 %218, i32 -746235388, i32 745949055
  store i32 %220, i32* %21
  br label %254

; <label>:221:                                    ; preds = %23
  store i32 -628950192, i32* %21
  br label %254

; <label>:222:                                    ; preds = %23
  store i32 -225987622, i32* %21
  br label %254

; <label>:223:                                    ; preds = %23
  %224 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %225 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %224, i32 0, i32 0
  %226 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %225, i32 0, i32 0
  %227 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  %228 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %227, align 8
  %229 = call dereferenceable(1) i8* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %228)
  %230 = load i8*, i8** %9, align 8
  %231 = call zeroext i1 @_ZNKSt4lessIcEclERKcS2_(%"struct.std::less"* %226, i8* dereferenceable(1) %229, i8* dereferenceable(1) %230)
  %232 = select i1 %231, i32 905105060, i32 -1613447860
  store i32 %232, i32* %21
  br label %254

; <label>:233:                                    ; preds = %23
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIcES7_vEEOT_OT0_(%"struct.std::pair"* %7, %"struct.std::_Rb_tree_node"** dereferenceable(8) %10, %"struct.std::_Rb_tree_node"** dereferenceable(8) %11)
  store i32 2054674912, i32* %21
  br label %254

; <label>:234:                                    ; preds = %23
  %235 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %15, align 8
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair"* %7, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %235, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %15)
  store i32 2054674912, i32* %21
  br label %254

; <label>:236:                                    ; preds = %23
  %237 = bitcast %"struct.std::pair"* %7 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %238 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %237, align 8
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %238

; <label>:239:                                    ; preds = %23
  %240 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  %241 = icmp ne %"struct.std::_Rb_tree_node"* %240, null
  store i32 -531852856, i32* %21
  br label %254

; <label>:242:                                    ; preds = %23
  %243 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %11, align 8
  %244 = bitcast %"struct.std::_Rb_tree_node"* %243 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorIcEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %13, %"struct.std::_Rb_tree_node_base"* %244) #3
  %245 = load i8, i8* %12, align 1
  %246 = trunc i8 %245 to i1
  store i32 -1245138862, i32* %21
  br label %254

; <label>:247:                                    ; preds = %23
  %248 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %249 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE5beginEv(%"class.std::_Rb_tree"* %248) #3
  %250 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %14, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %249, %"struct.std::_Rb_tree_node_base"** %250, align 8
  %251 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorIcEeqERKS0_(%"struct.std::_Rb_tree_iterator"* %13, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %14) #3
  store i32 -596395862, i32* %21
  br label %254

; <label>:252:                                    ; preds = %23
  %253 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorIcEmmEv(%"struct.std::_Rb_tree_iterator"* %13) #3
  store i32 -478553440, i32* %21
  br label %254

; <label>:254:                                    ; preds = %252, %247, %242, %239, %234, %233, %223, %222, %221, %204, %188, %187, %184, %164, %148, %145, %113, %97, %95, %91, %87, %74, %71, %54, %26, %25
  br label %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE11_M_leftmostEv(%"class.std::_Rb_tree"*) #5 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %5, i32 0, i32 2
  ret %"struct.std::_Rb_tree_node_base"** %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair"*, %"struct.std::_Rb_tree_node_base"** dereferenceable(8), %"struct.std::_Rb_tree_node_base"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %4 = alloca %"struct.std::pair"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  %6 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %4, align 8
  store %"struct.std::_Rb_tree_node_base"** %1, %"struct.std::_Rb_tree_node_base"*** %5, align 8
  store %"struct.std::_Rb_tree_node_base"** %2, %"struct.std::_Rb_tree_node_base"*** %6, align 8
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %5, align 8
  %10 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %9) #3
  %11 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
  store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %12 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 1
  %13 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %6, align 8
  %14 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %13) #3
  %15 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %14, align 8
  store %"struct.std::_Rb_tree_node_base"* %15, %"struct.std::_Rb_tree_node_base"** %12, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorIcEmmEv(%"struct.std::_Rb_tree_iterator"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %5) #13
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorIcEppEv(%"struct.std::_Rb_tree_iterator"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %5) #13
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair"*, %"struct.std::_Rb_tree_node_base"** dereferenceable(8), %"struct.std::_Rb_tree_node_base"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %4 = alloca %"struct.std::pair"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  %6 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %4, align 8
  store %"struct.std::_Rb_tree_node_base"** %1, %"struct.std::_Rb_tree_node_base"*** %5, align 8
  store %"struct.std::_Rb_tree_node_base"** %2, %"struct.std::_Rb_tree_node_base"*** %6, align 8
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %5, align 8
  %10 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %9) #3
  %11 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
  store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %12 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 1
  %13 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %6, align 8
  %14 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %13, align 8
  store %"struct.std::_Rb_tree_node_base"* %14, %"struct.std::_Rb_tree_node_base"** %12, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) i8* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = bitcast %"struct.std::_Rb_tree_node_base"* %3 to %"struct.std::_Rb_tree_node"*
  %5 = call i8* @_ZNKSt13_Rb_tree_nodeIcE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %4)
  ret i8* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.std::_Rb_tree_node_base"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.227
  %6 = load i32, i32* @y.228
  %7 = sub i32 %5, -158057847
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -158057847
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2084777350, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2084777350, label %19
    i32 -1078670929, label %39
    i32 -685343837, label %57
    i32 -1040039289, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1078670929, i32 -1040039289
  store i32 %38, i32* %15
  br label %62

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::_Rb_tree_node_base"** %0, %"struct.std::_Rb_tree_node_base"*** %40, align 8
  %41 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %40, align 8
  store %"struct.std::_Rb_tree_node_base"** %41, %"struct.std::_Rb_tree_node_base"*** %2
  %42 = load i32, i32* @x.227
  %43 = load i32, i32* @y.228
  %44 = sub i32 %42, 678096277
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 678096277
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -685343837, i32 -1040039289
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %2
  ret %"struct.std::_Rb_tree_node_base"** %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::_Rb_tree_node_base"** %0, %"struct.std::_Rb_tree_node_base"*** %60, align 8
  %61 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %60, align 8
  store i32 -1078670929, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(1) i8* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE6_S_keyEPKSt13_Rb_tree_nodeIcE(%"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %2 = alloca i8*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.229
  %6 = load i32, i32* @y.230
  %7 = sub i32 %5, 1567223567
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1567223567
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 781883460, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %79
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 781883460, label %19
    i32 -889490937, label %39
    i32 -737253907, label %71
    i32 -2044074752, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %79

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -889490937, i32 -2044074752
  store i32 %38, i32* %15
  br label %79

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %41 = alloca %"struct.std::_Identity", align 1
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %40, align 8
  %42 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %40, align 8
  %43 = call dereferenceable(1) i8* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_S_valueEPKSt13_Rb_tree_nodeIcE(%"struct.std::_Rb_tree_node"* %42)
  %44 = call dereferenceable(1) i8* @_ZNKSt9_IdentityIcEclERKc(%"struct.std::_Identity"* %41, i8* dereferenceable(1) %43)
  store i8* %44, i8** %2
  %45 = load i32, i32* @x.229
  %46 = load i32, i32* @y.230
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -737253907, i32 -2044074752
  store i32 %70, i32* %15
  br label %79

; <label>:71:                                     ; preds = %16
  %72 = load volatile i8*, i8** %2
  ret i8* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %75 = alloca %"struct.std::_Identity", align 1
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %74, align 8
  %76 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %74, align 8
  %77 = call dereferenceable(1) i8* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_S_valueEPKSt13_Rb_tree_nodeIcE(%"struct.std::_Rb_tree_node"* %76)
  %78 = call dereferenceable(1) i8* @_ZNKSt9_IdentityIcEclERKc(%"struct.std::_Identity"* %75, i8* dereferenceable(1) %77)
  store i32 -889490937, i32* %15
  br label %79

; <label>:79:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt17_Rb_tree_iteratorIcEeqERKS0_(%"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"* dereferenceable(8)) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.231
  %7 = load i32, i32* @y.232
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -30213239, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -30213239, label %19
    i32 2108643615, label %27
    i32 298924634, label %52
    i32 591367273, label %54
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 2108643615, i32 591367273
  store i32 %26, i32* %15
  br label %64

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %29 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %28, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %29, align 8
  %30 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %28, align 8
  %31 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %30, i32 0, i32 0
  %32 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %31, align 8
  %33 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %29, align 8
  %34 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %33, i32 0, i32 0
  %35 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %34, align 8
  %36 = icmp eq %"struct.std::_Rb_tree_node_base"* %32, %35
  store i1 %36, i1* %3
  %37 = load i32, i32* @x.231
  %38 = load i32, i32* @y.232
  %39 = add i32 %37, 1406155756
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, 1406155756
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 298924634, i32 591367273
  store i32 %51, i32* %15
  br label %64

; <label>:52:                                     ; preds = %16
  %53 = load volatile i1, i1* %3
  ret i1 %53

; <label>:54:                                     ; preds = %16
  %55 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %56 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %55, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %56, align 8
  %57 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %55, align 8
  %58 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %57, i32 0, i32 0
  %59 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %58, align 8
  %60 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %56, align 8
  %61 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %60, i32 0, i32 0
  %62 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %61, align 8
  %63 = icmp eq %"struct.std::_Rb_tree_node_base"* %59, %62
  store i32 2108643615, i32* %15
  br label %64

; <label>:64:                                     ; preds = %54, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE5beginEv(%"class.std::_Rb_tree"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  %4 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %6, i32 0, i32 2
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  call void @_ZNSt17_Rb_tree_iteratorIcEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %2, %"struct.std::_Rb_tree_node_base"* %8) #3
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %2, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  ret %"struct.std::_Rb_tree_node_base"* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIcES7_vEEOT_OT0_(%"struct.std::pair"*, %"struct.std::_Rb_tree_node"** dereferenceable(8), %"struct.std::_Rb_tree_node"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %4 = alloca %"struct.std::pair"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"**, align 8
  %6 = alloca %"struct.std::_Rb_tree_node"**, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %4, align 8
  store %"struct.std::_Rb_tree_node"** %1, %"struct.std::_Rb_tree_node"*** %5, align 8
  store %"struct.std::_Rb_tree_node"** %2, %"struct.std::_Rb_tree_node"*** %6, align 8
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %5, align 8
  %10 = call dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeIcEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8) %9) #3
  %11 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  %12 = bitcast %"struct.std::_Rb_tree_node"* %11 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %12, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %13 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 1
  %14 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %6, align 8
  %15 = call dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeIcEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8) %14) #3
  %16 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %15, align 8
  %17 = bitcast %"struct.std::_Rb_tree_node"* %16 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %13, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) i8* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_S_valueEPKSt13_Rb_tree_nodeIcE(%"struct.std::_Rb_tree_node"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
  %4 = call i8* @_ZNKSt13_Rb_tree_nodeIcE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %3)
  ret i8* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeIcEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.std::_Rb_tree_node"**, align 8
  store %"struct.std::_Rb_tree_node"** %0, %"struct.std::_Rb_tree_node"*** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %2, align 8
  ret %"struct.std::_Rb_tree_node"** %3
}

; Function Attrs: nounwind readonly
declare %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #9

; Function Attrs: nounwind readonly
declare %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #9

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE11_Alloc_nodeclIRKcEEPSt13_Rb_tree_nodeIcEOT_(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"*, i8* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"*, align 8
  %4 = alloca i8*, align 8
  store %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* %0, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* %5, i32 0, i32 0
  %7 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
  %8 = load i8*, i8** %4, align 8
  %9 = call dereferenceable(1) i8* @_ZSt7forwardIRKcEOT_RNSt16remove_referenceIS2_E4typeE(i8* dereferenceable(1) %8) #3
  %10 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE14_M_create_nodeIJRKcEEEPSt13_Rb_tree_nodeIcEDpOT_(%"class.std::_Rb_tree"* %7, i8* dereferenceable(1) %9)
  ret %"struct.std::_Rb_tree_node"* %10
}

; Function Attrs: nounwind
declare void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* dereferenceable(32)) #2

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE14_M_create_nodeIJRKcEEEPSt13_Rb_tree_nodeIcEDpOT_(%"class.std::_Rb_tree"*, i8* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  store i8* %1, i8** %4, align 8
  %6 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %7 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE11_M_get_nodeEv(%"class.std::_Rb_tree"* %6)
  store %"struct.std::_Rb_tree_node"* %7, %"struct.std::_Rb_tree_node"** %5, align 8
  %8 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %9 = load i8*, i8** %4, align 8
  %10 = call dereferenceable(1) i8* @_ZSt7forwardIRKcEOT_RNSt16remove_referenceIS2_E4typeE(i8* dereferenceable(1) %9) #3
  call void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE17_M_construct_nodeIJRKcEEEvPSt13_Rb_tree_nodeIcEDpOT_(%"class.std::_Rb_tree"* %6, %"struct.std::_Rb_tree_node"* %8, i8* dereferenceable(1) %10)
  %11 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  ret %"struct.std::_Rb_tree_node"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE11_M_get_nodeEv(%"class.std::_Rb_tree"*) #0 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = call dereferenceable(1) %"class.std::allocator.6"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %3) #3
  %5 = call %"struct.std::_Rb_tree_node"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIcEEE8allocateERS2_m(%"class.std::allocator.6"* dereferenceable(1) %4, i64 1)
  ret %"struct.std::_Rb_tree_node"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE17_M_construct_nodeIJRKcEEEvPSt13_Rb_tree_nodeIcEDpOT_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*, i8* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Rb_tree"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %4, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
  store i8* %2, i8** %6, align 8
  %9 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  %10 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %11 = bitcast %"struct.std::_Rb_tree_node"* %10 to i8*
  %12 = bitcast i8* %11 to %"struct.std::_Rb_tree_node"*
  %13 = call dereferenceable(1) %"class.std::allocator.6"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %9) #3
  %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %15 = invoke i8* @_ZNSt13_Rb_tree_nodeIcE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %14)
          to label %16 unwind label %61

; <label>:16:                                     ; preds = %3
  %17 = load i32, i32* @x.247
  %18 = load i32, i32* @y.248
  %19 = sub i32 0, 1
  %20 = add i32 %17, %19
  %21 = sub i32 %17, 1
  %22 = mul i32 %17, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %18, 10
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  br i1 %28, label %30, label %126

; <label>:30:                                     ; preds = %16, %126
  %31 = load i8*, i8** %6, align 8
  %32 = call dereferenceable(1) i8* @_ZSt7forwardIRKcEOT_RNSt16remove_referenceIS2_E4typeE(i8* dereferenceable(1) %31) #3
  %33 = load i32, i32* @x.247
  %34 = load i32, i32* @y.248
  %35 = add i32 %33, 839724996
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 839724996
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %126

; <label>:59:                                     ; preds = %30
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIcEEE9constructIcJRKcEEEvRS2_PT_DpOT0_(%"class.std::allocator.6"* dereferenceable(1) %13, i8* %15, i8* dereferenceable(1) %32)
          to label %60 unwind label %61

; <label>:60:                                     ; preds = %59
  br label %75

; <label>:61:                                     ; preds = %59, %3
  %62 = landingpad { i8*, i32 }
          catch i8* null
  %63 = extractvalue { i8*, i32 } %62, 0
  store i8* %63, i8** %7, align 8
  %64 = extractvalue { i8*, i32 } %62, 1
  store i32 %64, i32* %8, align 4
  br label %65

; <label>:65:                                     ; preds = %61
  %66 = load i8*, i8** %7, align 8
  %67 = call i8* @__cxa_begin_catch(i8* %66) #3
  %68 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %69 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  call void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE11_M_put_nodeEPSt13_Rb_tree_nodeIcE(%"class.std::_Rb_tree"* %9, %"struct.std::_Rb_tree_node"* %69) #3
  invoke void @__cxa_rethrow() #14
          to label %125 unwind label %70

; <label>:70:                                     ; preds = %65
  %71 = landingpad { i8*, i32 }
          cleanup
  %72 = extractvalue { i8*, i32 } %71, 0
  store i8* %72, i8** %7, align 8
  %73 = extractvalue { i8*, i32 } %71, 1
  store i32 %73, i32* %8, align 4
  invoke void @__cxa_end_catch()
          to label %74 unwind label %122

; <label>:74:                                     ; preds = %70
  br label %76

; <label>:75:                                     ; preds = %60
  ret void

; <label>:76:                                     ; preds = %74
  %77 = load i32, i32* @x.247
  %78 = load i32, i32* @y.248
  %79 = sub i32 0, 1
  %80 = add i32 %77, %79
  %81 = sub i32 %77, 1
  %82 = mul i32 %77, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %78, 10
  %86 = and i1 %84, %85
  %87 = xor i1 %84, %85
  %88 = or i1 %86, %87
  %89 = or i1 %84, %85
  br i1 %88, label %90, label %129

; <label>:90:                                     ; preds = %76, %129
  %91 = load i8*, i8** %7, align 8
  %92 = load i32, i32* %8, align 4
  %93 = insertvalue { i8*, i32 } undef, i8* %91, 0
  %94 = insertvalue { i8*, i32 } %93, i32 %92, 1
  %95 = load i32, i32* @x.247
  %96 = load i32, i32* @y.248
  %97 = sub i32 %95, -1774148389
  %98 = sub i32 %97, 1
  %99 = add i32 %98, -1774148389
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = xor i1 %103, true
  %106 = xor i1 %104, true
  %107 = xor i1 false, true
  %108 = and i1 %105, false
  %109 = and i1 %103, %107
  %110 = and i1 %106, false
  %111 = and i1 %104, %107
  %112 = or i1 %108, %109
  %113 = or i1 %110, %111
  %114 = xor i1 %112, %113
  %115 = or i1 %105, %106
  %116 = xor i1 %115, true
  %117 = or i1 false, %107
  %118 = and i1 %116, %117
  %119 = or i1 %114, %118
  %120 = or i1 %103, %104
  br i1 %119, label %121, label %129

; <label>:121:                                    ; preds = %90
  resume { i8*, i32 } %94

; <label>:122:                                    ; preds = %70
  %123 = landingpad { i8*, i32 }
          catch i8* null
  %124 = extractvalue { i8*, i32 } %123, 0
  call void @__clang_call_terminate(i8* %124) #12
  unreachable

; <label>:125:                                    ; preds = %65
  unreachable

; <label>:126:                                    ; preds = %30, %16
  %127 = load i8*, i8** %6, align 8
  %128 = call dereferenceable(1) i8* @_ZSt7forwardIRKcEOT_RNSt16remove_referenceIS2_E4typeE(i8* dereferenceable(1) %127) #3
  br label %30

; <label>:129:                                    ; preds = %90, %76
  %130 = load i8*, i8** %7, align 8
  %131 = load i32, i32* %8, align 4
  %132 = insertvalue { i8*, i32 } undef, i8* %130, 0
  %133 = insertvalue { i8*, i32 } %132, i32 %131, 1
  br label %90
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIcEEE8allocateERS2_m(%"class.std::allocator.6"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.249
  %7 = load i32, i32* @y.250
  %8 = add i32 %6, -1105201288
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1105201288
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1253458217, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1253458217, label %20
    i32 -1900880056, label %28
    i32 1870943668, label %61
    i32 1934312693, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1900880056, i32 1934312693
  store i32 %27, i32* %16
  br label %70

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.6"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::allocator.6"* %0, %"class.std::allocator.6"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::allocator.6"*, %"class.std::allocator.6"** %29, align 8
  %32 = bitcast %"class.std::allocator.6"* %31 to %"class.__gnu_cxx::new_allocator.7"*
  %33 = load i64, i64* %30, align 8
  %34 = call %"struct.std::_Rb_tree_node"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.7"* %32, i64 %33, i8* null)
  store %"struct.std::_Rb_tree_node"* %34, %"struct.std::_Rb_tree_node"** %3
  %35 = load i32, i32* @x.249
  %36 = load i32, i32* @y.250
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 1870943668, i32 1934312693
  store i32 %60, i32* %16
  br label %70

; <label>:61:                                     ; preds = %17
  %62 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %3
  ret %"struct.std::_Rb_tree_node"* %62

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.std::allocator.6"*, align 8
  %65 = alloca i64, align 8
  store %"class.std::allocator.6"* %0, %"class.std::allocator.6"** %64, align 8
  store i64 %1, i64* %65, align 8
  %66 = load %"class.std::allocator.6"*, %"class.std::allocator.6"** %64, align 8
  %67 = bitcast %"class.std::allocator.6"* %66 to %"class.__gnu_cxx::new_allocator.7"*
  %68 = load i64, i64* %65, align 8
  %69 = call %"struct.std::_Rb_tree_node"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.7"* %67, i64 %68, i8* null)
  store i32 -1900880056, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.7"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.7"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.7"* %0, %"class.__gnu_cxx::new_allocator.7"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.7"*, %"class.__gnu_cxx::new_allocator.7"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.7"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -1336975342, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1336975342, label %16
    i32 -372148969, label %21
    i32 -1614419537, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -372148969, i32 -1614419537
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #14
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 40
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.7"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.253
  %5 = load i32, i32* @y.254
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -436417653, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %59
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -436417653, label %17
    i32 1167040671, label %37
    i32 -2005796092, label %55
    i32 1051052885, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %59

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 1167040671, i32 1051052885
  store i32 %36, i32* %13
  br label %59

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator.7"*, align 8
  store %"class.__gnu_cxx::new_allocator.7"* %0, %"class.__gnu_cxx::new_allocator.7"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.7"*, %"class.__gnu_cxx::new_allocator.7"** %38, align 8
  %40 = load i32, i32* @x.253
  %41 = load i32, i32* @y.254
  %42 = sub i32 %40, -1226212568
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -1226212568
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -2005796092, i32 1051052885
  store i32 %54, i32* %13
  br label %59

; <label>:55:                                     ; preds = %14
  ret i64 461168601842738790

; <label>:56:                                     ; preds = %14
  %57 = alloca %"class.__gnu_cxx::new_allocator.7"*, align 8
  store %"class.__gnu_cxx::new_allocator.7"* %0, %"class.__gnu_cxx::new_allocator.7"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.7"*, %"class.__gnu_cxx::new_allocator.7"** %57, align 8
  store i32 1167040671, i32* %13
  br label %59

; <label>:59:                                     ; preds = %56, %37, %17, %16
  br label %14
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #10

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #11

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIcEEE9constructIcJRKcEEEvRS2_PT_DpOT0_(%"class.std::allocator.6"* dereferenceable(1), i8*, i8* dereferenceable(1)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.255
  %7 = load i32, i32* @y.256
  %8 = sub i32 %6, -220697617
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -220697617
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -121566066, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %62
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -121566066, label %20
    i32 1275021482, label %28
    i32 -500296762, label %52
    i32 -1711569426, label %53
  ]

; <label>:19:                                     ; preds = %17
  br label %62

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1275021482, i32 -1711569426
  store i32 %27, i32* %16
  br label %62

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.6"*, align 8
  %30 = alloca i8*, align 8
  %31 = alloca i8*, align 8
  store %"class.std::allocator.6"* %0, %"class.std::allocator.6"** %29, align 8
  store i8* %1, i8** %30, align 8
  store i8* %2, i8** %31, align 8
  %32 = load %"class.std::allocator.6"*, %"class.std::allocator.6"** %29, align 8
  %33 = bitcast %"class.std::allocator.6"* %32 to %"class.__gnu_cxx::new_allocator.7"*
  %34 = load i8*, i8** %30, align 8
  %35 = load i8*, i8** %31, align 8
  %36 = call dereferenceable(1) i8* @_ZSt7forwardIRKcEOT_RNSt16remove_referenceIS2_E4typeE(i8* dereferenceable(1) %35) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEE9constructIcJRKcEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.7"* %33, i8* %34, i8* dereferenceable(1) %36)
  %37 = load i32, i32* @x.255
  %38 = load i32, i32* @y.256
  %39 = sub i32 %37, 712394844
  %40 = sub i32 %39, 1
  %41 = add i32 %40, 712394844
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 -500296762, i32 -1711569426
  store i32 %51, i32* %16
  br label %62

; <label>:52:                                     ; preds = %17
  ret void

; <label>:53:                                     ; preds = %17
  %54 = alloca %"class.std::allocator.6"*, align 8
  %55 = alloca i8*, align 8
  %56 = alloca i8*, align 8
  store %"class.std::allocator.6"* %0, %"class.std::allocator.6"** %54, align 8
  store i8* %1, i8** %55, align 8
  store i8* %2, i8** %56, align 8
  %57 = load %"class.std::allocator.6"*, %"class.std::allocator.6"** %54, align 8
  %58 = bitcast %"class.std::allocator.6"* %57 to %"class.__gnu_cxx::new_allocator.7"*
  %59 = load i8*, i8** %55, align 8
  %60 = load i8*, i8** %56, align 8
  %61 = call dereferenceable(1) i8* @_ZSt7forwardIRKcEOT_RNSt16remove_referenceIS2_E4typeE(i8* dereferenceable(1) %60) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEE9constructIcJRKcEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.7"* %58, i8* %59, i8* dereferenceable(1) %61)
  store i32 1275021482, i32* %16
  br label %62

; <label>:62:                                     ; preds = %53, %28, %20, %19
  br label %17
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEE9constructIcJRKcEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.7"*, i8*, i8* dereferenceable(1)) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.7"*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.7"* %0, %"class.__gnu_cxx::new_allocator.7"** %4, align 8
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.7"*, %"class.__gnu_cxx::new_allocator.7"** %4, align 8
  %8 = load i8*, i8** %5, align 8
  %9 = load i8*, i8** %6, align 8
  %10 = call dereferenceable(1) i8* @_ZSt7forwardIRKcEOT_RNSt16remove_referenceIS2_E4typeE(i8* dereferenceable(1) %9) #3
  %11 = load i8, i8* %10, align 1
  store i8 %11, i8* %8, align 1
  ret void
}

; Function Attrs: nounwind readonly
declare %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #9

; Function Attrs: noinline uwtable
define linkonce_odr { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } @_ZSt14__copy_move_a2ILb0ESt23_Rb_tree_const_iteratorIcESt15insert_iteratorISt3setIcSt4lessIcESaIcEEEET1_T0_SA_S9_(%"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"class.std::set"*, %"struct.std::_Rb_tree_node_base"*) #0 comdat {
  %5 = alloca %"class.std::insert_iterator", align 8
  %6 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %7 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %8 = alloca %"class.std::insert_iterator", align 8
  %9 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %10 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %11 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %12 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %13 = alloca %"class.std::insert_iterator", align 8
  %14 = alloca %"class.std::insert_iterator", align 8
  %15 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %6, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %15, align 8
  %16 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %7, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %16, align 8
  %17 = bitcast %"class.std::insert_iterator"* %8 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %18 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %17, i32 0, i32 0
  store %"class.std::set"* %2, %"class.std::set"** %18, align 8
  %19 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %17, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %3, %"struct.std::_Rb_tree_node_base"** %19, align 8
  %20 = bitcast %"struct.std::_Rb_tree_const_iterator"* %10 to i8*
  %21 = bitcast %"struct.std::_Rb_tree_const_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %10, i32 0, i32 0
  %23 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %22, align 8
  %24 = call %"struct.std::_Rb_tree_node_base"* @_ZSt12__niter_baseISt23_Rb_tree_const_iteratorIcEENSt11_Niter_baseIT_E13iterator_typeES3_(%"struct.std::_Rb_tree_node_base"* %23)
  %25 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %9, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %24, %"struct.std::_Rb_tree_node_base"** %25, align 8
  %26 = bitcast %"struct.std::_Rb_tree_const_iterator"* %12 to i8*
  %27 = bitcast %"struct.std::_Rb_tree_const_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 8, i32 8, i1 false)
  %28 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %12, i32 0, i32 0
  %29 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %28, align 8
  %30 = call %"struct.std::_Rb_tree_node_base"* @_ZSt12__niter_baseISt23_Rb_tree_const_iteratorIcEENSt11_Niter_baseIT_E13iterator_typeES3_(%"struct.std::_Rb_tree_node_base"* %29)
  %31 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %11, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %30, %"struct.std::_Rb_tree_node_base"** %31, align 8
  %32 = bitcast %"class.std::insert_iterator"* %14 to i8*
  %33 = bitcast %"class.std::insert_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 16, i32 8, i1 false)
  %34 = bitcast %"class.std::insert_iterator"* %14 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %35 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %34, i32 0, i32 0
  %36 = load %"class.std::set"*, %"class.std::set"** %35, align 8
  %37 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %34, i32 0, i32 1
  %38 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %37, align 8
  %39 = call { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } @_ZSt12__niter_baseISt15insert_iteratorISt3setIcSt4lessIcESaIcEEEENSt11_Niter_baseIT_E13iterator_typeES8_(%"class.std::set"* %36, %"struct.std::_Rb_tree_node_base"* %38)
  %40 = bitcast %"class.std::insert_iterator"* %13 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %41 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %40, i32 0, i32 0
  %42 = extractvalue { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %39, 0
  store %"class.std::set"* %42, %"class.std::set"** %41, align 8
  %43 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %40, i32 0, i32 1
  %44 = extractvalue { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %39, 1
  store %"struct.std::_Rb_tree_node_base"* %44, %"struct.std::_Rb_tree_node_base"** %43, align 8
  %45 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %9, i32 0, i32 0
  %46 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %11, i32 0, i32 0
  %48 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %47, align 8
  %49 = bitcast %"class.std::insert_iterator"* %13 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %50 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %49, i32 0, i32 0
  %51 = load %"class.std::set"*, %"class.std::set"** %50, align 8
  %52 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %49, i32 0, i32 1
  %53 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %52, align 8
  %54 = call { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } @_ZSt13__copy_move_aILb0ESt23_Rb_tree_const_iteratorIcESt15insert_iteratorISt3setIcSt4lessIcESaIcEEEET1_T0_SA_S9_(%"struct.std::_Rb_tree_node_base"* %46, %"struct.std::_Rb_tree_node_base"* %48, %"class.std::set"* %51, %"struct.std::_Rb_tree_node_base"* %53)
  %55 = bitcast %"class.std::insert_iterator"* %5 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %56 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %55, i32 0, i32 0
  %57 = extractvalue { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %54, 0
  store %"class.std::set"* %57, %"class.std::set"** %56, align 8
  %58 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %55, i32 0, i32 1
  %59 = extractvalue { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %54, 1
  store %"struct.std::_Rb_tree_node_base"* %59, %"struct.std::_Rb_tree_node_base"** %58, align 8
  %60 = bitcast %"class.std::insert_iterator"* %5 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %61 = load { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %60, align 8
  ret { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %61
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZSt12__miter_baseISt23_Rb_tree_const_iteratorIcEENSt11_Miter_baseIT_E13iterator_typeES3_(%"struct.std::_Rb_tree_node_base"*) #5 comdat {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.261
  %6 = load i32, i32* @y.262
  %7 = sub i32 %5, -644468073
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -644468073
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -814101574, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %82
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -814101574, label %19
    i32 -476155, label %39
    i32 -1931229719, label %67
    i32 310214173, label %69
  ]

; <label>:18:                                     ; preds = %16
  br label %82

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -476155, i32 310214173
  store i32 %38, i32* %15
  br label %82

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %41 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %42 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %43 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %41, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %43, align 8
  %44 = bitcast %"struct.std::_Rb_tree_const_iterator"* %42 to i8*
  %45 = bitcast %"struct.std::_Rb_tree_const_iterator"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %44, i8* %45, i64 8, i32 8, i1 false)
  %46 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %42, i32 0, i32 0
  %47 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %46, align 8
  %48 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt10_Iter_baseISt23_Rb_tree_const_iteratorIcELb0EE7_S_baseES1_(%"struct.std::_Rb_tree_node_base"* %47)
  %49 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %40, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %48, %"struct.std::_Rb_tree_node_base"** %49, align 8
  %50 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %40, i32 0, i32 0
  %51 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %50, align 8
  store %"struct.std::_Rb_tree_node_base"* %51, %"struct.std::_Rb_tree_node_base"** %2
  %52 = load i32, i32* @x.261
  %53 = load i32, i32* @y.262
  %54 = sub i32 %52, 90814078
  %55 = sub i32 %54, 1
  %56 = add i32 %55, 90814078
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 -1931229719, i32 310214173
  store i32 %66, i32* %15
  br label %82

; <label>:67:                                     ; preds = %16
  %68 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2
  ret %"struct.std::_Rb_tree_node_base"* %68

; <label>:69:                                     ; preds = %16
  %70 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %71 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %72 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %73 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %71, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %73, align 8
  %74 = bitcast %"struct.std::_Rb_tree_const_iterator"* %72 to i8*
  %75 = bitcast %"struct.std::_Rb_tree_const_iterator"* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %74, i8* %75, i64 8, i32 8, i1 false)
  %76 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %72, i32 0, i32 0
  %77 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %76, align 8
  %78 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt10_Iter_baseISt23_Rb_tree_const_iteratorIcELb0EE7_S_baseES1_(%"struct.std::_Rb_tree_node_base"* %77)
  %79 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %70, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %78, %"struct.std::_Rb_tree_node_base"** %79, align 8
  %80 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %70, i32 0, i32 0
  %81 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %80, align 8
  store i32 -476155, i32* %15
  br label %82

; <label>:82:                                     ; preds = %69, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } @_ZSt13__copy_move_aILb0ESt23_Rb_tree_const_iteratorIcESt15insert_iteratorISt3setIcSt4lessIcESaIcEEEET1_T0_SA_S9_(%"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"class.std::set"*, %"struct.std::_Rb_tree_node_base"*) #0 comdat {
  %5 = alloca %"class.std::insert_iterator", align 8
  %6 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %7 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %8 = alloca %"class.std::insert_iterator", align 8
  %9 = alloca i8, align 1
  %10 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %11 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %12 = alloca %"class.std::insert_iterator", align 8
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %6, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %13, align 8
  %14 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %7, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %14, align 8
  %15 = bitcast %"class.std::insert_iterator"* %8 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %16 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %15, i32 0, i32 0
  store %"class.std::set"* %2, %"class.std::set"** %16, align 8
  %17 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %15, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %3, %"struct.std::_Rb_tree_node_base"** %17, align 8
  store i8 0, i8* %9, align 1
  %18 = bitcast %"struct.std::_Rb_tree_const_iterator"* %10 to i8*
  %19 = bitcast %"struct.std::_Rb_tree_const_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 8, i32 8, i1 false)
  %20 = bitcast %"struct.std::_Rb_tree_const_iterator"* %11 to i8*
  %21 = bitcast %"struct.std::_Rb_tree_const_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = bitcast %"class.std::insert_iterator"* %12 to i8*
  %23 = bitcast %"class.std::insert_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 16, i32 8, i1 false)
  %24 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %10, i32 0, i32 0
  %25 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %24, align 8
  %26 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %11, i32 0, i32 0
  %27 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %26, align 8
  %28 = bitcast %"class.std::insert_iterator"* %12 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %29 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %28, i32 0, i32 0
  %30 = load %"class.std::set"*, %"class.std::set"** %29, align 8
  %31 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %28, i32 0, i32 1
  %32 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %31, align 8
  %33 = call { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt11__copy_moveILb0ELb0ESt26bidirectional_iterator_tagE8__copy_mISt23_Rb_tree_const_iteratorIcESt15insert_iteratorISt3setIcSt4lessIcESaIcEEEEET0_T_SD_SC_(%"struct.std::_Rb_tree_node_base"* %25, %"struct.std::_Rb_tree_node_base"* %27, %"class.std::set"* %30, %"struct.std::_Rb_tree_node_base"* %32)
  %34 = bitcast %"class.std::insert_iterator"* %5 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %35 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %34, i32 0, i32 0
  %36 = extractvalue { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %33, 0
  store %"class.std::set"* %36, %"class.std::set"** %35, align 8
  %37 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %34, i32 0, i32 1
  %38 = extractvalue { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %33, 1
  store %"struct.std::_Rb_tree_node_base"* %38, %"struct.std::_Rb_tree_node_base"** %37, align 8
  %39 = bitcast %"class.std::insert_iterator"* %5 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %40 = load { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %39, align 8
  ret { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %40
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZSt12__niter_baseISt23_Rb_tree_const_iteratorIcEENSt11_Niter_baseIT_E13iterator_typeES3_(%"struct.std::_Rb_tree_node_base"*) #0 comdat {
  %2 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %3 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %4 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %5, align 8
  %6 = bitcast %"struct.std::_Rb_tree_const_iterator"* %4 to i8*
  %7 = bitcast %"struct.std::_Rb_tree_const_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 8, i32 8, i1 false)
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %4, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %10 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt10_Iter_baseISt23_Rb_tree_const_iteratorIcELb0EE7_S_baseES1_(%"struct.std::_Rb_tree_node_base"* %9)
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %2, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %10, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %12 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %2, i32 0, i32 0
  %13 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %12, align 8
  ret %"struct.std::_Rb_tree_node_base"* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } @_ZSt12__niter_baseISt15insert_iteratorISt3setIcSt4lessIcESaIcEEEENSt11_Niter_baseIT_E13iterator_typeES8_(%"class.std::set"*, %"struct.std::_Rb_tree_node_base"*) #0 comdat {
  %3 = alloca %"class.std::insert_iterator", align 8
  %4 = alloca %"class.std::insert_iterator", align 8
  %5 = alloca %"class.std::insert_iterator", align 8
  %6 = bitcast %"class.std::insert_iterator"* %4 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %7 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %6, i32 0, i32 0
  store %"class.std::set"* %0, %"class.std::set"** %7, align 8
  %8 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %6, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %9 = bitcast %"class.std::insert_iterator"* %5 to i8*
  %10 = bitcast %"class.std::insert_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 16, i32 8, i1 false)
  %11 = bitcast %"class.std::insert_iterator"* %5 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %12 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %11, i32 0, i32 0
  %13 = load %"class.std::set"*, %"class.std::set"** %12, align 8
  %14 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %11, i32 0, i32 1
  %15 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %14, align 8
  %16 = call { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt10_Iter_baseISt15insert_iteratorISt3setIcSt4lessIcESaIcEEELb0EE7_S_baseES6_(%"class.std::set"* %13, %"struct.std::_Rb_tree_node_base"* %15)
  %17 = bitcast %"class.std::insert_iterator"* %3 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %18 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %17, i32 0, i32 0
  %19 = extractvalue { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %16, 0
  store %"class.std::set"* %19, %"class.std::set"** %18, align 8
  %20 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %17, i32 0, i32 1
  %21 = extractvalue { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %16, 1
  store %"struct.std::_Rb_tree_node_base"* %21, %"struct.std::_Rb_tree_node_base"** %20, align 8
  %22 = bitcast %"class.std::insert_iterator"* %3 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %23 = load { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %22, align 8
  ret { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %23
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt11__copy_moveILb0ELb0ESt26bidirectional_iterator_tagE8__copy_mISt23_Rb_tree_const_iteratorIcESt15insert_iteratorISt3setIcSt4lessIcESaIcEEEEET0_T_SD_SC_(%"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"class.std::set"*, %"struct.std::_Rb_tree_node_base"*) #0 comdat align 2 {
  %5 = alloca { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }
  %6 = alloca %"class.std::insert_iterator"*
  %7 = alloca %"struct.std::_Rb_tree_const_iterator"*
  %8 = alloca %"struct.std::_Rb_tree_const_iterator"*
  %9 = alloca %"class.std::insert_iterator"*
  %10 = alloca i1
  %11 = alloca i1
  %12 = load i32, i32* @x.269
  %13 = load i32, i32* @y.270
  %14 = sub i32 0, 1
  %15 = add i32 %12, %14
  %16 = sub i32 %12, 1
  %17 = mul i32 %12, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  store i1 %19, i1* %11
  %20 = icmp slt i32 %13, 10
  store i1 %20, i1* %10
  %21 = alloca i32
  store i32 -1839238316, i32* %21
  br label %22

; <label>:22:                                     ; preds = %4, %173
  %23 = load i32, i32* %21
  switch i32 %23, label %24 [
    i32 -1839238316, label %25
    i32 -171216742, label %45
    i32 694500188, label %85
    i32 1445300980, label %86
    i32 1407791807, label %91
    i32 1507712405, label %97
    i32 -171768404, label %102
    i32 250887260, label %118
    i32 -941553056, label %153
    i32 -215336514, label %155
    i32 1831648051, label %165
  ]

; <label>:24:                                     ; preds = %22
  br label %173

; <label>:25:                                     ; preds = %22
  %26 = load volatile i1, i1* %11
  %27 = load volatile i1, i1* %10
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 false, true
  %31 = and i1 %28, false
  %32 = and i1 %26, %30
  %33 = and i1 %29, false
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 false, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  %44 = select i1 %42, i32 -171216742, i32 -215336514
  store i32 %44, i32* %21
  br label %173

; <label>:45:                                     ; preds = %22
  %46 = alloca %"class.std::insert_iterator", align 8
  store %"class.std::insert_iterator"* %46, %"class.std::insert_iterator"** %9
  %47 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  store %"struct.std::_Rb_tree_const_iterator"* %47, %"struct.std::_Rb_tree_const_iterator"** %8
  %48 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  store %"struct.std::_Rb_tree_const_iterator"* %48, %"struct.std::_Rb_tree_const_iterator"** %7
  %49 = alloca %"class.std::insert_iterator", align 8
  store %"class.std::insert_iterator"* %49, %"class.std::insert_iterator"** %6
  %50 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %8
  %51 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %50, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %51, align 8
  %52 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %7
  %53 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %52, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %53, align 8
  %54 = load volatile %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %6
  %55 = bitcast %"class.std::insert_iterator"* %54 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %56 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %55, i32 0, i32 0
  store %"class.std::set"* %2, %"class.std::set"** %56, align 8
  %57 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %55, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %3, %"struct.std::_Rb_tree_node_base"** %57, align 8
  %58 = load i32, i32* @x.269
  %59 = load i32, i32* @y.270
  %60 = sub i32 %58, 1687264049
  %61 = sub i32 %60, 1
  %62 = add i32 %61, 1687264049
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 694500188, i32 -215336514
  store i32 %84, i32* %21
  br label %173

; <label>:85:                                     ; preds = %22
  store i32 1445300980, i32* %21
  br label %173

; <label>:86:                                     ; preds = %22
  %87 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %8
  %88 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %7
  %89 = call zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorIcEneERKS0_(%"struct.std::_Rb_tree_const_iterator"* %87, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %88) #3
  %90 = select i1 %89, i32 1407791807, i32 -171768404
  store i32 %90, i32* %21
  br label %173

; <label>:91:                                     ; preds = %22
  %92 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %8
  %93 = call dereferenceable(1) i8* @_ZNKSt23_Rb_tree_const_iteratorIcEdeEv(%"struct.std::_Rb_tree_const_iterator"* %92) #3
  %94 = load volatile %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %6
  %95 = call dereferenceable(16) %"class.std::insert_iterator"* @_ZNSt15insert_iteratorISt3setIcSt4lessIcESaIcEEEdeEv(%"class.std::insert_iterator"* %94)
  %96 = call dereferenceable(16) %"class.std::insert_iterator"* @_ZNSt15insert_iteratorISt3setIcSt4lessIcESaIcEEEaSERKc(%"class.std::insert_iterator"* %95, i8* dereferenceable(1) %93)
  store i32 1507712405, i32* %21
  br label %173

; <label>:97:                                     ; preds = %22
  %98 = load volatile %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %6
  %99 = call dereferenceable(16) %"class.std::insert_iterator"* @_ZNSt15insert_iteratorISt3setIcSt4lessIcESaIcEEEppEv(%"class.std::insert_iterator"* %98)
  %100 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %8
  %101 = call dereferenceable(8) %"struct.std::_Rb_tree_const_iterator"* @_ZNSt23_Rb_tree_const_iteratorIcEppEv(%"struct.std::_Rb_tree_const_iterator"* %100) #3
  store i32 1445300980, i32* %21
  br label %173

; <label>:102:                                    ; preds = %22
  %103 = load i32, i32* @x.269
  %104 = load i32, i32* @y.270
  %105 = add i32 %103, 291741407
  %106 = sub i32 %105, 1
  %107 = sub i32 %106, 291741407
  %108 = sub i32 %103, 1
  %109 = mul i32 %103, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %104, 10
  %113 = and i1 %111, %112
  %114 = xor i1 %111, %112
  %115 = or i1 %113, %114
  %116 = or i1 %111, %112
  %117 = select i1 %115, i32 250887260, i32 1831648051
  store i32 %117, i32* %21
  br label %173

; <label>:118:                                    ; preds = %22
  %119 = load volatile %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %9
  %120 = bitcast %"class.std::insert_iterator"* %119 to i8*
  %121 = load volatile %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %6
  %122 = bitcast %"class.std::insert_iterator"* %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %120, i8* %122, i64 16, i32 8, i1 false)
  %123 = load volatile %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %9
  %124 = bitcast %"class.std::insert_iterator"* %123 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %125 = load { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %124, align 8
  store { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %125, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %5
  %126 = load i32, i32* @x.269
  %127 = load i32, i32* @y.270
  %128 = sub i32 %126, -681836906
  %129 = sub i32 %128, 1
  %130 = add i32 %129, -681836906
  %131 = sub i32 %126, 1
  %132 = mul i32 %126, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %127, 10
  %136 = xor i1 %134, true
  %137 = xor i1 %135, true
  %138 = xor i1 false, true
  %139 = and i1 %136, false
  %140 = and i1 %134, %138
  %141 = and i1 %137, false
  %142 = and i1 %135, %138
  %143 = or i1 %139, %140
  %144 = or i1 %141, %142
  %145 = xor i1 %143, %144
  %146 = or i1 %136, %137
  %147 = xor i1 %146, true
  %148 = or i1 false, %138
  %149 = and i1 %147, %148
  %150 = or i1 %145, %149
  %151 = or i1 %134, %135
  %152 = select i1 %150, i32 -941553056, i32 1831648051
  store i32 %152, i32* %21
  br label %173

; <label>:153:                                    ; preds = %22
  %154 = load volatile { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %5
  ret { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %154

; <label>:155:                                    ; preds = %22
  %156 = alloca %"class.std::insert_iterator", align 8
  %157 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %158 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %159 = alloca %"class.std::insert_iterator", align 8
  %160 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %157, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %160, align 8
  %161 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %158, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %161, align 8
  %162 = bitcast %"class.std::insert_iterator"* %159 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %163 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %162, i32 0, i32 0
  store %"class.std::set"* %2, %"class.std::set"** %163, align 8
  %164 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %162, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %3, %"struct.std::_Rb_tree_node_base"** %164, align 8
  store i32 -171216742, i32* %21
  br label %173

; <label>:165:                                    ; preds = %22
  %166 = load volatile %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %9
  %167 = bitcast %"class.std::insert_iterator"* %166 to i8*
  %168 = load volatile %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %6
  %169 = bitcast %"class.std::insert_iterator"* %168 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %167, i8* %169, i64 16, i32 8, i1 false)
  %170 = load volatile %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %9
  %171 = bitcast %"class.std::insert_iterator"* %170 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %172 = load { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %171, align 8
  store i32 250887260, i32* %21
  br label %173

; <label>:173:                                    ; preds = %165, %155, %118, %102, %97, %91, %86, %85, %45, %25, %24
  br label %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt10_Iter_baseISt23_Rb_tree_const_iteratorIcELb0EE7_S_baseES1_(%"struct.std::_Rb_tree_node_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %3 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %5 = bitcast %"struct.std::_Rb_tree_const_iterator"* %2 to i8*
  %6 = bitcast %"struct.std::_Rb_tree_const_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %2, i32 0, i32 0
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_node_base"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt10_Iter_baseISt15insert_iteratorISt3setIcSt4lessIcESaIcEEELb0EE7_S_baseES6_(%"class.std::set"*, %"struct.std::_Rb_tree_node_base"*) #5 comdat align 2 {
  %3 = alloca %"class.std::insert_iterator", align 8
  %4 = alloca %"class.std::insert_iterator", align 8
  %5 = bitcast %"class.std::insert_iterator"* %4 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %6 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %5, i32 0, i32 0
  store %"class.std::set"* %0, %"class.std::set"** %6, align 8
  %7 = getelementptr inbounds { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %5, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %8 = bitcast %"class.std::insert_iterator"* %3 to i8*
  %9 = bitcast %"class.std::insert_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 16, i32 8, i1 false)
  %10 = bitcast %"class.std::insert_iterator"* %3 to { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }*
  %11 = load { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }, { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* }* %10, align 8
  ret { %"class.std::set"*, %"struct.std::_Rb_tree_node_base"* } %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE5beginEv(%"class.std::_Rb_tree"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  %4 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %6, i32 0, i32 2
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  call void @_ZNSt23_Rb_tree_const_iteratorIcEC2EPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_const_iterator"* %2, %"struct.std::_Rb_tree_node_base"* %8) #3
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %2, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  ret %"struct.std::_Rb_tree_node_base"* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt23_Rb_tree_const_iteratorIcEC2EPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_node_base"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  store %"struct.std::_Rb_tree_node_base"* %7, %"struct.std::_Rb_tree_node_base"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE3endEv(%"class.std::_Rb_tree"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  %4 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %5, i32 0, i32 1
  call void @_ZNSt23_Rb_tree_const_iteratorIcEC2EPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_const_iterator"* %2, %"struct.std::_Rb_tree_node_base"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %2, i32 0, i32 0
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_node_base"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15insert_iteratorISt3setIcSt4lessIcESaIcEEEC2ERS4_St23_Rb_tree_const_iteratorIcE(%"class.std::insert_iterator"*, %"class.std::set"* dereferenceable(48), %"struct.std::_Rb_tree_node_base"*) unnamed_addr #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.281
  %7 = load i32, i32* @y.282
  %8 = sub i32 %6, 2078963467
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 2078963467
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 163727364, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %91
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 163727364, label %20
    i32 2094192562, label %40
    i32 1922906827, label %78
    i32 -597988964, label %79
  ]

; <label>:19:                                     ; preds = %17
  br label %91

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 2094192562, i32 -597988964
  store i32 %39, i32* %16
  br label %91

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %42 = alloca %"class.std::insert_iterator"*, align 8
  %43 = alloca %"class.std::set"*, align 8
  %44 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %41, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %44, align 8
  store %"class.std::insert_iterator"* %0, %"class.std::insert_iterator"** %42, align 8
  store %"class.std::set"* %1, %"class.std::set"** %43, align 8
  %45 = load %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %42, align 8
  %46 = bitcast %"class.std::insert_iterator"* %45 to %"struct.std::iterator"*
  %47 = getelementptr inbounds %"class.std::insert_iterator", %"class.std::insert_iterator"* %45, i32 0, i32 0
  %48 = load %"class.std::set"*, %"class.std::set"** %43, align 8
  store %"class.std::set"* %48, %"class.std::set"** %47, align 8
  %49 = getelementptr inbounds %"class.std::insert_iterator", %"class.std::insert_iterator"* %45, i32 0, i32 1
  %50 = bitcast %"struct.std::_Rb_tree_const_iterator"* %49 to i8*
  %51 = bitcast %"struct.std::_Rb_tree_const_iterator"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = load i32, i32* @x.281
  %53 = load i32, i32* @y.282
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 1922906827, i32 -597988964
  store i32 %77, i32* %16
  br label %91

; <label>:78:                                     ; preds = %17
  ret void

; <label>:79:                                     ; preds = %17
  %80 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %81 = alloca %"class.std::insert_iterator"*, align 8
  %82 = alloca %"class.std::set"*, align 8
  %83 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %80, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %83, align 8
  store %"class.std::insert_iterator"* %0, %"class.std::insert_iterator"** %81, align 8
  store %"class.std::set"* %1, %"class.std::set"** %82, align 8
  %84 = load %"class.std::insert_iterator"*, %"class.std::insert_iterator"** %81, align 8
  %85 = bitcast %"class.std::insert_iterator"* %84 to %"struct.std::iterator"*
  %86 = getelementptr inbounds %"class.std::insert_iterator", %"class.std::insert_iterator"* %84, i32 0, i32 0
  %87 = load %"class.std::set"*, %"class.std::set"** %82, align 8
  store %"class.std::set"* %87, %"class.std::set"** %86, align 8
  %88 = getelementptr inbounds %"class.std::insert_iterator", %"class.std::insert_iterator"* %84, i32 0, i32 1
  %89 = bitcast %"struct.std::_Rb_tree_const_iterator"* %88 to i8*
  %90 = bitcast %"struct.std::_Rb_tree_const_iterator"* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %89, i8* %90, i64 8, i32 8, i1 false)
  store i32 2094192562, i32* %16
  br label %91

; <label>:91:                                     ; preds = %79, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(48) %"class.std::_Rb_tree"* @_ZSt4moveIRSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEEEONSt16remove_referenceIT_E4typeEOS9_(%"class.std::_Rb_tree"* dereferenceable(48)) #5 comdat {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  ret %"class.std::_Rb_tree"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEEC2EOS5_(%"class.std::_Rb_tree"*, %"class.std::_Rb_tree"* dereferenceable(48)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  %4 = alloca %"class.std::_Rb_tree"*, align 8
  %5 = alloca %"struct.std::integral_constant", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  store %"class.std::_Rb_tree"* %1, %"class.std::_Rb_tree"** %4, align 8
  %8 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %9 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %8, i32 0, i32 0
  %10 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  %11 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %11, i32 0, i32 0
  %13 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  %14 = call dereferenceable(1) %"class.std::allocator.6"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %13) #3
  call void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_Rb_tree_implIS3_Lb1EEC2ERKS3_RKSaISt13_Rb_tree_nodeIcEE(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %9, %"struct.std::less"* dereferenceable(1) %12, %"class.std::allocator.6"* dereferenceable(1) %14)
  %15 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  %16 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_M_rootEv(%"class.std::_Rb_tree"* %15) #3
  %17 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %16, align 8
  %18 = icmp ne %"struct.std::_Rb_tree_node_base"* %17, null
  br i1 %18, label %19, label %26

; <label>:19:                                     ; preds = %2
  %20 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  invoke void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE12_M_move_dataERS5_St17integral_constantIbLb1EE(%"class.std::_Rb_tree"* %8, %"class.std::_Rb_tree"* dereferenceable(48) %20)
          to label %21 unwind label %22

; <label>:21:                                     ; preds = %19
  br label %26

; <label>:22:                                     ; preds = %19
  %23 = landingpad { i8*, i32 }
          cleanup
  %24 = extractvalue { i8*, i32 } %23, 0
  store i8* %24, i8** %6, align 8
  %25 = extractvalue { i8*, i32 } %23, 1
  store i32 %25, i32* %7, align 4
  call void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_Rb_tree_implIS3_Lb1EED2Ev(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %9) #3
  br label %27

; <label>:26:                                     ; preds = %21, %2
  ret void

; <label>:27:                                     ; preds = %22
  %28 = load i8*, i8** %6, align 8
  %29 = load i32, i32* %7, align 4
  %30 = insertvalue { i8*, i32 } undef, i8* %28, 0
  %31 = insertvalue { i8*, i32 } %30, i32 %29, 1
  resume { i8*, i32 } %31
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_Rb_tree_implIS3_Lb1EEC2ERKS3_RKSaISt13_Rb_tree_nodeIcEE(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"*, %"struct.std::less"* dereferenceable(1), %"class.std::allocator.6"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"*, align 8
  %5 = alloca %"struct.std::less"*, align 8
  %6 = alloca %"class.std::allocator.6"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"** %4, align 8
  store %"struct.std::less"* %1, %"struct.std::less"** %5, align 8
  store %"class.std::allocator.6"* %2, %"class.std::allocator.6"** %6, align 8
  %9 = load %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"** %4, align 8
  %10 = bitcast %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %9 to %"class.std::allocator.6"*
  %11 = load %"class.std::allocator.6"*, %"class.std::allocator.6"** %6, align 8
  call void @_ZNSaISt13_Rb_tree_nodeIcEEC2ERKS1_(%"class.std::allocator.6"* %10, %"class.std::allocator.6"* dereferenceable(1) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %9, i32 0, i32 0
  %13 = load %"struct.std::less"*, %"struct.std::less"** %5, align 8
  %14 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %9, i32 0, i32 1
  %15 = bitcast %"struct.std::_Rb_tree_node_base"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* %15, i8 0, i64 32, i32 8, i1 false)
  %16 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %9, i32 0, i32 2
  store i64 0, i64* %16, align 8
  invoke void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_Rb_tree_implIS3_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %9)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %3
  ret void

; <label>:18:                                     ; preds = %3
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %7, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %8, align 4
  %22 = bitcast %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %9 to %"class.std::allocator.6"*
  call void @_ZNSaISt13_Rb_tree_nodeIcEED2Ev(%"class.std::allocator.6"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %7, align 8
  %25 = load i32, i32* %8, align 4
  %26 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_M_rootEv(%"class.std::_Rb_tree"*) #5 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %5, i32 0, i32 1
  ret %"struct.std::_Rb_tree_node_base"** %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE12_M_move_dataERS5_St17integral_constantIbLb1EE(%"class.std::_Rb_tree"*, %"class.std::_Rb_tree"* dereferenceable(48)) #5 comdat align 2 {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"class.std::_Rb_tree"*, align 8
  %5 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %4, align 8
  store %"class.std::_Rb_tree"* %1, %"class.std::_Rb_tree"** %5, align 8
  %6 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  %7 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5, align 8
  %8 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_M_rootEv(%"class.std::_Rb_tree"* %7) #3
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %10 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_M_rootEv(%"class.std::_Rb_tree"* %6) #3
  store %"struct.std::_Rb_tree_node_base"* %9, %"struct.std::_Rb_tree_node_base"** %10, align 8
  %11 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5, align 8
  %12 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE11_M_leftmostEv(%"class.std::_Rb_tree"* %11) #3
  %13 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %12, align 8
  %14 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE11_M_leftmostEv(%"class.std::_Rb_tree"* %6) #3
  store %"struct.std::_Rb_tree_node_base"* %13, %"struct.std::_Rb_tree_node_base"** %14, align 8
  %15 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5, align 8
  %16 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE12_M_rightmostEv(%"class.std::_Rb_tree"* %15) #3
  %17 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %16, align 8
  %18 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE12_M_rightmostEv(%"class.std::_Rb_tree"* %6) #3
  store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %18, align 8
  %19 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE6_M_endEv(%"class.std::_Rb_tree"* %6) #3
  %20 = bitcast %"struct.std::_Rb_tree_node"* %19 to %"struct.std::_Rb_tree_node_base"*
  %21 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_M_rootEv(%"class.std::_Rb_tree"* %6) #3
  %22 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %21, align 8
  %23 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %22, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %20, %"struct.std::_Rb_tree_node_base"** %23, align 8
  %24 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5, align 8
  %25 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_M_rootEv(%"class.std::_Rb_tree"* %24) #3
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %25, align 8
  %26 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5, align 8
  %27 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE6_M_endEv(%"class.std::_Rb_tree"* %26) #3
  %28 = bitcast %"struct.std::_Rb_tree_node"* %27 to %"struct.std::_Rb_tree_node_base"*
  %29 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5, align 8
  %30 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE11_M_leftmostEv(%"class.std::_Rb_tree"* %29) #3
  store %"struct.std::_Rb_tree_node_base"* %28, %"struct.std::_Rb_tree_node_base"** %30, align 8
  %31 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5, align 8
  %32 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE6_M_endEv(%"class.std::_Rb_tree"* %31) #3
  %33 = bitcast %"struct.std::_Rb_tree_node"* %32 to %"struct.std::_Rb_tree_node_base"*
  %34 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5, align 8
  %35 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE12_M_rightmostEv(%"class.std::_Rb_tree"* %34) #3
  store %"struct.std::_Rb_tree_node_base"* %33, %"struct.std::_Rb_tree_node_base"** %35, align 8
  %36 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5, align 8
  %37 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %37, i32 0, i32 2
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %6, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %40, i32 0, i32 2
  store i64 %39, i64* %41, align 8
  %42 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5, align 8
  %43 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %43, i32 0, i32 2
  store i64 0, i64* %44, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.7"*, %"class.__gnu_cxx::new_allocator.7"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.7"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.7"*, align 8
  store %"class.__gnu_cxx::new_allocator.7"* %0, %"class.__gnu_cxx::new_allocator.7"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.7"* %1, %"class.__gnu_cxx::new_allocator.7"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.7"*, %"class.__gnu_cxx::new_allocator.7"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::type_info"** @_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v(%"union.std::_Any_data"*) #5 comdat align 2 {
  %2 = alloca %"class.std::type_info"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.295
  %6 = load i32, i32* @y.296
  %7 = sub i32 %5, 846549957
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 846549957
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2118371222, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2118371222, label %19
    i32 1066072924, label %27
    i32 -222402953, label %47
    i32 -1324559566, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1066072924, i32 -1324559566
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %28, align 8
  %29 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %28, align 8
  %30 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %29)
  %31 = bitcast i8* %30 to %"class.std::type_info"**
  store %"class.std::type_info"** %31, %"class.std::type_info"*** %2
  %32 = load i32, i32* @x.295
  %33 = load i32, i32* @y.296
  %34 = sub i32 %32, -651212483
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -651212483
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -222402953, i32 -1324559566
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile %"class.std::type_info"**, %"class.std::type_info"*** %2
  ret %"class.std::type_info"** %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %50, align 8
  %51 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %50, align 8
  %52 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %51)
  %53 = bitcast i8* %52 to %"class.std::type_info"**
  store i32 1066072924, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(8) %class.anon** @"_ZNSt9_Any_data9_M_accessIPZ4mainE3$_0EERT_v"(%"union.std::_Any_data"*) #5 align 2 {
  %2 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %2, align 8
  %3 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %2, align 8
  %4 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %3)
  %5 = bitcast i8* %4 to %class.anon**
  ret %class.anon** %5
}

; Function Attrs: noinline uwtable
define internal void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_0E8_M_cloneERSt9_Any_dataRKS3_St17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16), %"union.std::_Any_data"* dereferenceable(16)) #0 align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.299
  %6 = load i32, i32* @y.300
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1032889662, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %83
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1032889662, label %18
    i32 -50525967, label %38
    i32 1401549636, label %73
    i32 -1367387034, label %74
  ]

; <label>:17:                                     ; preds = %15
  br label %83

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -50525967, i32 -1367387034
  store i32 %37, i32* %14
  br label %83

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::integral_constant", align 1
  %40 = alloca %"union.std::_Any_data"*, align 8
  %41 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %40, align 8
  store %"union.std::_Any_data"* %1, %"union.std::_Any_data"** %41, align 8
  %42 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %40, align 8
  %43 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %42)
  %44 = bitcast i8* %43 to %class.anon*
  %45 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %41, align 8
  %46 = call dereferenceable(1) %class.anon* @"_ZNKSt9_Any_data9_M_accessIZ4mainE3$_0EERKT_v"(%"union.std::_Any_data"* %45)
  %47 = load i32, i32* @x.299
  %48 = load i32, i32* @y.300
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 1401549636, i32 -1367387034
  store i32 %72, i32* %14
  br label %83

; <label>:73:                                     ; preds = %15
  ret void

; <label>:74:                                     ; preds = %15
  %75 = alloca %"struct.std::integral_constant", align 1
  %76 = alloca %"union.std::_Any_data"*, align 8
  %77 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %76, align 8
  store %"union.std::_Any_data"* %1, %"union.std::_Any_data"** %77, align 8
  %78 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %76, align 8
  %79 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %78)
  %80 = bitcast i8* %79 to %class.anon*
  %81 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %77, align 8
  %82 = call dereferenceable(1) %class.anon* @"_ZNKSt9_Any_data9_M_accessIZ4mainE3$_0EERKT_v"(%"union.std::_Any_data"* %81)
  store i32 -50525967, i32* %14
  br label %83

; <label>:83:                                     ; preds = %74, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define internal void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_0E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16)) #0 align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.301
  %5 = load i32, i32* @y.302
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1622947282, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %63
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1622947282, label %17
    i32 -2025628774, label %25
    i32 287076114, label %57
    i32 1120754317, label %58
  ]

; <label>:16:                                     ; preds = %14
  br label %63

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -2025628774, i32 1120754317
  store i32 %24, i32* %13
  br label %63

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.std::integral_constant", align 1
  %27 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %27, align 8
  %28 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %27, align 8
  %29 = call dereferenceable(1) %class.anon* @"_ZNSt9_Any_data9_M_accessIZ4mainE3$_0EERT_v"(%"union.std::_Any_data"* %28)
  %30 = load i32, i32* @x.301
  %31 = load i32, i32* @y.302
  %32 = sub i32 %30, -1386076131
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -1386076131
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 287076114, i32 1120754317
  store i32 %56, i32* %13
  br label %63

; <label>:57:                                     ; preds = %14
  ret void

; <label>:58:                                     ; preds = %14
  %59 = alloca %"struct.std::integral_constant", align 1
  %60 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %60, align 8
  %61 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %60, align 8
  %62 = call dereferenceable(1) %class.anon* @"_ZNSt9_Any_data9_M_accessIZ4mainE3$_0EERT_v"(%"union.std::_Any_data"* %61)
  store i32 -2025628774, i32* %13
  br label %63

; <label>:63:                                     ; preds = %58, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(1) %class.anon* @"_ZNSt9_Any_data9_M_accessIZ4mainE3$_0EERT_v"(%"union.std::_Any_data"*) #5 align 2 {
  %2 = alloca %class.anon*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.303
  %6 = load i32, i32* @y.304
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 969592332, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %64
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 969592332, label %18
    i32 -476246521, label %26
    i32 240192342, label %57
    i32 1243672608, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %64

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -476246521, i32 1243672608
  store i32 %25, i32* %14
  br label %64

; <label>:26:                                     ; preds = %15
  %27 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %27, align 8
  %28 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %27, align 8
  %29 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %28)
  %30 = bitcast i8* %29 to %class.anon*
  store %class.anon* %30, %class.anon** %2
  %31 = load i32, i32* @x.303
  %32 = load i32, i32* @y.304
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 240192342, i32 1243672608
  store i32 %56, i32* %14
  br label %64

; <label>:57:                                     ; preds = %15
  %58 = load volatile %class.anon*, %class.anon** %2
  ret %class.anon* %58

; <label>:59:                                     ; preds = %15
  %60 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %60, align 8
  %61 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %60, align 8
  %62 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %61)
  %63 = bitcast i8* %62 to %class.anon*
  store i32 -476246521, i32* %14
  br label %64

; <label>:64:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E21_M_not_empty_functionIS1_EEbRKT_"(%class.anon.0* dereferenceable(1)) #5 align 2 {
  %2 = alloca %class.anon.0*, align 8
  store %class.anon.0* %0, %class.anon.0** %2, align 8
  ret i1 true
}

; Function Attrs: noinline uwtable
define internal void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E15_M_init_functorERSt9_Any_dataOS1_"(%"union.std::_Any_data"* dereferenceable(16), %class.anon.0* dereferenceable(1)) #0 align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.307
  %6 = load i32, i32* @y.308
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1257363981, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %68
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1257363981, label %18
    i32 -1475640135, label %38
    i32 -1181420940, label %60
    i32 2084061517, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %68

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1475640135, i32 2084061517
  store i32 %37, i32* %14
  br label %68

; <label>:38:                                     ; preds = %15
  %39 = alloca %"union.std::_Any_data"*, align 8
  %40 = alloca %class.anon.0*, align 8
  %41 = alloca %"struct.std::integral_constant", align 1
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %39, align 8
  store %class.anon.0* %1, %class.anon.0** %40, align 8
  %42 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %39, align 8
  %43 = load %class.anon.0*, %class.anon.0** %40, align 8
  %44 = call dereferenceable(1) %class.anon.0* @"_ZSt4moveIRZ4mainE3$_1EONSt16remove_referenceIT_E4typeEOS3_"(%class.anon.0* dereferenceable(1) %43) #3
  call void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E15_M_init_functorERSt9_Any_dataOS1_St17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16) %42, %class.anon.0* dereferenceable(1) %44)
  %45 = load i32, i32* @x.307
  %46 = load i32, i32* @y.308
  %47 = sub i32 %45, -1404014797
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -1404014797
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -1181420940, i32 2084061517
  store i32 %59, i32* %14
  br label %68

; <label>:60:                                     ; preds = %15
  ret void

; <label>:61:                                     ; preds = %15
  %62 = alloca %"union.std::_Any_data"*, align 8
  %63 = alloca %class.anon.0*, align 8
  %64 = alloca %"struct.std::integral_constant", align 1
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %62, align 8
  store %class.anon.0* %1, %class.anon.0** %63, align 8
  %65 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %62, align 8
  %66 = load %class.anon.0*, %class.anon.0** %63, align 8
  %67 = call dereferenceable(1) %class.anon.0* @"_ZSt4moveIRZ4mainE3$_1EONSt16remove_referenceIT_E4typeEOS3_"(%class.anon.0* dereferenceable(1) %66) #3
  call void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E15_M_init_functorERSt9_Any_dataOS1_St17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16) %65, %class.anon.0* dereferenceable(1) %67)
  store i32 -1475640135, i32* %14
  br label %68

; <label>:68:                                     ; preds = %61, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(1) %class.anon.0* @"_ZSt4moveIRZ4mainE3$_1EONSt16remove_referenceIT_E4typeEOS3_"(%class.anon.0* dereferenceable(1)) #5 {
  %2 = alloca %class.anon.0*, align 8
  store %class.anon.0* %0, %class.anon.0** %2, align 8
  %3 = load %class.anon.0*, %class.anon.0** %2, align 8
  ret %class.anon.0* %3
}

; Function Attrs: noinline uwtable
define internal void @"_ZNSt17_Function_handlerIFSt3setIcSt4lessIcESaIcEES4_S4_EZ4mainE3$_1E9_M_invokeERKSt9_Any_dataOS4_SB_"(%"class.std::set"* noalias sret, %"union.std::_Any_data"* dereferenceable(16), %"class.std::set"* dereferenceable(48), %"class.std::set"* dereferenceable(48)) #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"union.std::_Any_data"*, align 8
  %6 = alloca %"class.std::set"*, align 8
  %7 = alloca %"class.std::set"*, align 8
  %8 = alloca %"class.std::set", align 8
  %9 = alloca %"class.std::set", align 8
  %10 = alloca i8*
  %11 = alloca i32
  store %"union.std::_Any_data"* %1, %"union.std::_Any_data"** %5, align 8
  store %"class.std::set"* %2, %"class.std::set"** %6, align 8
  store %"class.std::set"* %3, %"class.std::set"** %7, align 8
  %12 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %5, align 8
  %13 = call %class.anon.0* @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E14_M_get_pointerERKSt9_Any_data"(%"union.std::_Any_data"* dereferenceable(16) %12)
  %14 = load %"class.std::set"*, %"class.std::set"** %6, align 8
  %15 = call dereferenceable(48) %"class.std::set"* @_ZSt7forwardISt3setIcSt4lessIcESaIcEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::set"* dereferenceable(48) %14) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEEC2EOS3_(%"class.std::set"* %8, %"class.std::set"* dereferenceable(48) %15) #3
  %16 = load %"class.std::set"*, %"class.std::set"** %7, align 8
  %17 = call dereferenceable(48) %"class.std::set"* @_ZSt7forwardISt3setIcSt4lessIcESaIcEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::set"* dereferenceable(48) %16) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEEC2EOS3_(%"class.std::set"* %9, %"class.std::set"* dereferenceable(48) %17) #3
  invoke void @"_ZZ4mainENK3$_1clESt3setIcSt4lessIcESaIcEES4_"(%"class.std::set"* sret %0, %class.anon.0* %13, %"class.std::set"* %8, %"class.std::set"* %9)
          to label %18 unwind label %19

; <label>:18:                                     ; preds = %4
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %9) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %8) #3
  ret void

; <label>:19:                                     ; preds = %4
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = extractvalue { i8*, i32 } %20, 0
  store i8* %21, i8** %10, align 8
  %22 = extractvalue { i8*, i32 } %20, 1
  store i32 %22, i32* %11, align 4
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %9) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %8) #3
  br label %23

; <label>:23:                                     ; preds = %19
  %24 = load i8*, i8** %10, align 8
  %25 = load i32, i32* %11, align 4
  %26 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27
}

; Function Attrs: noinline uwtable
define internal zeroext i1 @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation"(%"union.std::_Any_data"* dereferenceable(16), %"union.std::_Any_data"* dereferenceable(16), i32) #0 align 2 {
  %4 = alloca i32
  %5 = alloca %"union.std::_Any_data"**
  %6 = alloca %"union.std::_Any_data"**
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.313
  %10 = load i32, i32* @y.314
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 1839068207, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %162
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1839068207, label %22
    i32 -1405625850, label %42
    i32 -831400588, label %66
    i32 1273731173, label %67
    i32 2036975913, label %71
    i32 65441802, label %75
    i32 -1691560630, label %79
    i32 440192392, label %83
    i32 -347854593, label %87
    i32 -1362317690, label %115
    i32 1836391627, label %133
    i32 -684575693, label %134
    i32 911678973, label %141
    i32 891971016, label %146
    i32 1552550882, label %149
    i32 -1390456380, label %150
    i32 411979715, label %151
    i32 -1617709506, label %158
  ]

; <label>:21:                                     ; preds = %19
  br label %162

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %8
  %24 = load volatile i1, i1* %7
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -1405625850, i32 411979715
  store i32 %41, i32* %18
  br label %162

; <label>:42:                                     ; preds = %19
  %43 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"** %43, %"union.std::_Any_data"*** %6
  %44 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"** %44, %"union.std::_Any_data"*** %5
  %45 = alloca i32, align 4
  %46 = alloca %"struct.std::integral_constant", align 1
  %47 = alloca %"struct.std::integral_constant", align 1
  %48 = load volatile %"union.std::_Any_data"**, %"union.std::_Any_data"*** %6
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %48, align 8
  %49 = load volatile %"union.std::_Any_data"**, %"union.std::_Any_data"*** %5
  store %"union.std::_Any_data"* %1, %"union.std::_Any_data"** %49, align 8
  store i32 %2, i32* %45, align 4
  %50 = load i32, i32* %45, align 4
  store i32 %50, i32* %4
  %51 = load i32, i32* @x.313
  %52 = load i32, i32* @y.314
  %53 = add i32 %51, -1316049449
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, -1316049449
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 -831400588, i32 411979715
  store i32 %65, i32* %18
  br label %162

; <label>:66:                                     ; preds = %19
  store i32 1273731173, i32* %18
  br label %162

; <label>:67:                                     ; preds = %19
  %68 = load volatile i32, i32* %4
  %69 = icmp slt i32 %68, 2
  %70 = select i1 %69, i32 -1691560630, i32 2036975913
  store i32 %70, i32* %18
  br label %162

; <label>:71:                                     ; preds = %19
  %72 = load volatile i32, i32* %4
  %73 = icmp slt i32 %72, 3
  %74 = select i1 %73, i32 911678973, i32 65441802
  store i32 %74, i32* %18
  br label %162

; <label>:75:                                     ; preds = %19
  %76 = load volatile i32, i32* %4
  %77 = icmp eq i32 %76, 3
  %78 = select i1 %77, i32 891971016, i32 1552550882
  store i32 %78, i32* %18
  br label %162

; <label>:79:                                     ; preds = %19
  %80 = load volatile i32, i32* %4
  %81 = icmp slt i32 %80, 1
  %82 = select i1 %81, i32 440192392, i32 -684575693
  store i32 %82, i32* %18
  br label %162

; <label>:83:                                     ; preds = %19
  %84 = load volatile i32, i32* %4
  %85 = icmp eq i32 %84, 0
  %86 = select i1 %85, i32 -347854593, i32 1552550882
  store i32 %86, i32* %18
  br label %162

; <label>:87:                                     ; preds = %19
  %88 = load i32, i32* @x.313
  %89 = load i32, i32* @y.314
  %90 = add i32 %88, 53113572
  %91 = sub i32 %90, 1
  %92 = sub i32 %91, 53113572
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = xor i1 %96, true
  %99 = xor i1 %97, true
  %100 = xor i1 false, true
  %101 = and i1 %98, false
  %102 = and i1 %96, %100
  %103 = and i1 %99, false
  %104 = and i1 %97, %100
  %105 = or i1 %101, %102
  %106 = or i1 %103, %104
  %107 = xor i1 %105, %106
  %108 = or i1 %98, %99
  %109 = xor i1 %108, true
  %110 = or i1 false, %100
  %111 = and i1 %109, %110
  %112 = or i1 %107, %111
  %113 = or i1 %96, %97
  %114 = select i1 %112, i32 -1362317690, i32 -1617709506
  store i32 %114, i32* %18
  br label %162

; <label>:115:                                    ; preds = %19
  %116 = load volatile %"union.std::_Any_data"**, %"union.std::_Any_data"*** %6
  %117 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %116, align 8
  %118 = call dereferenceable(8) %"class.std::type_info"** @_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v(%"union.std::_Any_data"* %117)
  store %"class.std::type_info"* bitcast ({ i8*, i8* }* @"_ZTIZ4mainE3$_1" to %"class.std::type_info"*), %"class.std::type_info"** %118, align 8
  %119 = load i32, i32* @x.313
  %120 = load i32, i32* @y.314
  %121 = sub i32 0, 1
  %122 = add i32 %119, %121
  %123 = sub i32 %119, 1
  %124 = mul i32 %119, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %120, 10
  %128 = and i1 %126, %127
  %129 = xor i1 %126, %127
  %130 = or i1 %128, %129
  %131 = or i1 %126, %127
  %132 = select i1 %130, i32 1836391627, i32 -1617709506
  store i32 %132, i32* %18
  br label %162

; <label>:133:                                    ; preds = %19
  store i32 -1390456380, i32* %18
  br label %162

; <label>:134:                                    ; preds = %19
  %135 = load volatile %"union.std::_Any_data"**, %"union.std::_Any_data"*** %5
  %136 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %135, align 8
  %137 = call %class.anon.0* @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E14_M_get_pointerERKSt9_Any_data"(%"union.std::_Any_data"* dereferenceable(16) %136)
  %138 = load volatile %"union.std::_Any_data"**, %"union.std::_Any_data"*** %6
  %139 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %138, align 8
  %140 = call dereferenceable(8) %class.anon.0** @"_ZNSt9_Any_data9_M_accessIPZ4mainE3$_1EERT_v"(%"union.std::_Any_data"* %139)
  store %class.anon.0* %137, %class.anon.0** %140, align 8
  store i32 -1390456380, i32* %18
  br label %162

; <label>:141:                                    ; preds = %19
  %142 = load volatile %"union.std::_Any_data"**, %"union.std::_Any_data"*** %6
  %143 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %142, align 8
  %144 = load volatile %"union.std::_Any_data"**, %"union.std::_Any_data"*** %5
  %145 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %144, align 8
  call void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E8_M_cloneERSt9_Any_dataRKS3_St17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16) %143, %"union.std::_Any_data"* dereferenceable(16) %145)
  store i32 -1390456380, i32* %18
  br label %162

; <label>:146:                                    ; preds = %19
  %147 = load volatile %"union.std::_Any_data"**, %"union.std::_Any_data"*** %6
  %148 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %147, align 8
  call void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16) %148)
  store i32 -1390456380, i32* %18
  br label %162

; <label>:149:                                    ; preds = %19
  store i32 -1390456380, i32* %18
  br label %162

; <label>:150:                                    ; preds = %19
  ret i1 false

; <label>:151:                                    ; preds = %19
  %152 = alloca %"union.std::_Any_data"*, align 8
  %153 = alloca %"union.std::_Any_data"*, align 8
  %154 = alloca i32, align 4
  %155 = alloca %"struct.std::integral_constant", align 1
  %156 = alloca %"struct.std::integral_constant", align 1
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %152, align 8
  store %"union.std::_Any_data"* %1, %"union.std::_Any_data"** %153, align 8
  store i32 %2, i32* %154, align 4
  %157 = load i32, i32* %154, align 4
  store i32 -1405625850, i32* %18
  br label %162

; <label>:158:                                    ; preds = %19
  %159 = load volatile %"union.std::_Any_data"**, %"union.std::_Any_data"*** %6
  %160 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %159, align 8
  %161 = call dereferenceable(8) %"class.std::type_info"** @_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v(%"union.std::_Any_data"* %160)
  store %"class.std::type_info"* bitcast ({ i8*, i8* }* @"_ZTIZ4mainE3$_1" to %"class.std::type_info"*), %"class.std::type_info"** %161, align 8
  store i32 -1362317690, i32* %18
  br label %162

; <label>:162:                                    ; preds = %158, %151, %149, %146, %141, %134, %133, %115, %87, %83, %79, %75, %71, %67, %66, %42, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define internal void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E15_M_init_functorERSt9_Any_dataOS1_St17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16), %class.anon.0* dereferenceable(1)) #5 align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.315
  %6 = load i32, i32* @y.316
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1873236170, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %71
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1873236170, label %18
    i32 -621379561, label %38
    i32 -1073826907, label %61
    i32 -1930943120, label %62
  ]

; <label>:17:                                     ; preds = %15
  br label %71

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -621379561, i32 -1930943120
  store i32 %37, i32* %14
  br label %71

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::integral_constant", align 1
  %40 = alloca %"union.std::_Any_data"*, align 8
  %41 = alloca %class.anon.0*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %40, align 8
  store %class.anon.0* %1, %class.anon.0** %41, align 8
  %42 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %40, align 8
  %43 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %42)
  %44 = bitcast i8* %43 to %class.anon.0*
  %45 = load %class.anon.0*, %class.anon.0** %41, align 8
  %46 = call dereferenceable(1) %class.anon.0* @"_ZSt4moveIRZ4mainE3$_1EONSt16remove_referenceIT_E4typeEOS3_"(%class.anon.0* dereferenceable(1) %45) #3
  %47 = load i32, i32* @x.315
  %48 = load i32, i32* @y.316
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -1073826907, i32 -1930943120
  store i32 %60, i32* %14
  br label %71

; <label>:61:                                     ; preds = %15
  ret void

; <label>:62:                                     ; preds = %15
  %63 = alloca %"struct.std::integral_constant", align 1
  %64 = alloca %"union.std::_Any_data"*, align 8
  %65 = alloca %class.anon.0*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %64, align 8
  store %class.anon.0* %1, %class.anon.0** %65, align 8
  %66 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %64, align 8
  %67 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %66)
  %68 = bitcast i8* %67 to %class.anon.0*
  %69 = load %class.anon.0*, %class.anon.0** %65, align 8
  %70 = call dereferenceable(1) %class.anon.0* @"_ZSt4moveIRZ4mainE3$_1EONSt16remove_referenceIT_E4typeEOS3_"(%class.anon.0* dereferenceable(1) %69) #3
  store i32 -621379561, i32* %14
  br label %71

; <label>:71:                                     ; preds = %62, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define internal %class.anon.0* @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E14_M_get_pointerERKSt9_Any_data"(%"union.std::_Any_data"* dereferenceable(16)) #0 align 2 {
  %2 = alloca %"union.std::_Any_data"*, align 8
  %3 = alloca %class.anon.0*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %2, align 8
  %4 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %2, align 8
  %5 = call dereferenceable(1) %class.anon.0* @"_ZNKSt9_Any_data9_M_accessIZ4mainE3$_1EERKT_v"(%"union.std::_Any_data"* %4)
  %6 = call %class.anon.0* @"_ZSt11__addressofIKZ4mainE3$_1EPT_RS2_"(%class.anon.0* dereferenceable(1) %5) #3
  store %class.anon.0* %6, %class.anon.0** %3, align 8
  %7 = load %class.anon.0*, %class.anon.0** %3, align 8
  ret %class.anon.0* %7
}

; Function Attrs: noinline nounwind uwtable
define internal void @"_ZZ4mainENK3$_1clESt3setIcSt4lessIcESaIcEES4_"(%"class.std::set"* noalias sret, %class.anon.0*, %"class.std::set"*, %"class.std::set"*) #5 align 2 {
  %5 = alloca %class.anon.0*, align 8
  store %class.anon.0* %1, %class.anon.0** %5, align 8
  %6 = load %class.anon.0*, %class.anon.0** %5, align 8
  call void @_ZNSt3setIcSt4lessIcESaIcEEC2EOS3_(%"class.std::set"* %0, %"class.std::set"* dereferenceable(48) %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal %class.anon.0* @"_ZSt11__addressofIKZ4mainE3$_1EPT_RS2_"(%class.anon.0* dereferenceable(1)) #5 {
  %2 = alloca %class.anon.0*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.321
  %6 = load i32, i32* @y.322
  %7 = add i32 %5, 1836519219
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1836519219
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 604084930, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 604084930, label %19
    i32 803902148, label %39
    i32 2116143836, label %59
    i32 971177567, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 803902148, i32 971177567
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %class.anon.0*, align 8
  store %class.anon.0* %0, %class.anon.0** %40, align 8
  %41 = load %class.anon.0*, %class.anon.0** %40, align 8
  %42 = bitcast %class.anon.0* %41 to i8*
  %43 = bitcast i8* %42 to %class.anon.0*
  store %class.anon.0* %43, %class.anon.0** %2
  %44 = load i32, i32* @x.321
  %45 = load i32, i32* @y.322
  %46 = add i32 %44, -430570463
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -430570463
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 2116143836, i32 971177567
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %class.anon.0*, %class.anon.0** %2
  ret %class.anon.0* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %class.anon.0*, align 8
  store %class.anon.0* %0, %class.anon.0** %62, align 8
  %63 = load %class.anon.0*, %class.anon.0** %62, align 8
  %64 = bitcast %class.anon.0* %63 to i8*
  %65 = bitcast i8* %64 to %class.anon.0*
  store i32 803902148, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(1) %class.anon.0* @"_ZNKSt9_Any_data9_M_accessIZ4mainE3$_1EERKT_v"(%"union.std::_Any_data"*) #5 align 2 {
  %2 = alloca %class.anon.0*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.323
  %6 = load i32, i32* @y.324
  %7 = sub i32 %5, 2116480018
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 2116480018
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -15752916, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -15752916, label %19
    i32 1021323575, label %39
    i32 -1035822791, label %59
    i32 -2053284833, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1021323575, i32 -2053284833
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %40, align 8
  %41 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %40, align 8
  %42 = call i8* @_ZNKSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %41)
  %43 = bitcast i8* %42 to %class.anon.0*
  store %class.anon.0* %43, %class.anon.0** %2
  %44 = load i32, i32* @x.323
  %45 = load i32, i32* @y.324
  %46 = sub i32 %44, 1039764331
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 1039764331
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -1035822791, i32 -2053284833
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %class.anon.0*, %class.anon.0** %2
  ret %class.anon.0* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %62, align 8
  %63 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %62, align 8
  %64 = call i8* @_ZNKSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %63)
  %65 = bitcast i8* %64 to %class.anon.0*
  store i32 1021323575, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(8) %class.anon.0** @"_ZNSt9_Any_data9_M_accessIPZ4mainE3$_1EERT_v"(%"union.std::_Any_data"*) #5 align 2 {
  %2 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %2, align 8
  %3 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %2, align 8
  %4 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %3)
  %5 = bitcast i8* %4 to %class.anon.0**
  ret %class.anon.0** %5
}

; Function Attrs: noinline nounwind uwtable
define internal void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E8_M_cloneERSt9_Any_dataRKS3_St17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16), %"union.std::_Any_data"* dereferenceable(16)) #5 align 2 {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"union.std::_Any_data"*, align 8
  %5 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %4, align 8
  store %"union.std::_Any_data"* %1, %"union.std::_Any_data"** %5, align 8
  %6 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %4, align 8
  %7 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %6)
  %8 = bitcast i8* %7 to %class.anon.0*
  %9 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %5, align 8
  %10 = call dereferenceable(1) %class.anon.0* @"_ZNKSt9_Any_data9_M_accessIZ4mainE3$_1EERKT_v"(%"union.std::_Any_data"* %9)
  ret void
}

; Function Attrs: noinline uwtable
define internal void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_1E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16)) #0 align 2 {
  %2 = alloca %"struct.std::integral_constant", align 1
  %3 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %3, align 8
  %4 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %3, align 8
  %5 = call dereferenceable(1) %class.anon.0* @"_ZNSt9_Any_data9_M_accessIZ4mainE3$_1EERT_v"(%"union.std::_Any_data"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(1) %class.anon.0* @"_ZNSt9_Any_data9_M_accessIZ4mainE3$_1EERT_v"(%"union.std::_Any_data"*) #5 align 2 {
  %2 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %2, align 8
  %3 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %2, align 8
  %4 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %3)
  %5 = bitcast i8* %4 to %class.anon.0*
  ret %class.anon.0* %5
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E21_M_not_empty_functionIS1_EEbRKT_"(%class.anon.2* dereferenceable(1)) #5 align 2 {
  %2 = alloca %class.anon.2*, align 8
  store %class.anon.2* %0, %class.anon.2** %2, align 8
  ret i1 true
}

; Function Attrs: noinline uwtable
define internal void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E15_M_init_functorERSt9_Any_dataOS1_"(%"union.std::_Any_data"* dereferenceable(16), %class.anon.2* dereferenceable(1)) #0 align 2 {
  %3 = alloca %"union.std::_Any_data"*, align 8
  %4 = alloca %class.anon.2*, align 8
  %5 = alloca %"struct.std::integral_constant", align 1
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %3, align 8
  store %class.anon.2* %1, %class.anon.2** %4, align 8
  %6 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %3, align 8
  %7 = load %class.anon.2*, %class.anon.2** %4, align 8
  %8 = call dereferenceable(1) %class.anon.2* @"_ZSt4moveIRZ4mainE3$_2EONSt16remove_referenceIT_E4typeEOS3_"(%class.anon.2* dereferenceable(1) %7) #3
  call void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E15_M_init_functorERSt9_Any_dataOS1_St17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16) %6, %class.anon.2* dereferenceable(1) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(1) %class.anon.2* @"_ZSt4moveIRZ4mainE3$_2EONSt16remove_referenceIT_E4typeEOS3_"(%class.anon.2* dereferenceable(1)) #5 {
  %2 = alloca %class.anon.2*, align 8
  store %class.anon.2* %0, %class.anon.2** %2, align 8
  %3 = load %class.anon.2*, %class.anon.2** %2, align 8
  ret %class.anon.2* %3
}

; Function Attrs: noinline uwtable
define internal void @"_ZNSt17_Function_handlerIFSt3setIcSt4lessIcESaIcEES4_S4_EZ4mainE3$_2E9_M_invokeERKSt9_Any_dataOS4_SB_"(%"class.std::set"* noalias sret, %"union.std::_Any_data"* dereferenceable(16), %"class.std::set"* dereferenceable(48), %"class.std::set"* dereferenceable(48)) #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.339
  %6 = load i32, i32* @y.340
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %6, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %57

; <label>:18:                                     ; preds = %4, %57
  %19 = alloca %"union.std::_Any_data"*, align 8
  %20 = alloca %"class.std::set"*, align 8
  %21 = alloca %"class.std::set"*, align 8
  %22 = alloca %"class.std::set", align 8
  %23 = alloca %"class.std::set", align 8
  %24 = alloca i8*
  %25 = alloca i32
  store %"union.std::_Any_data"* %1, %"union.std::_Any_data"** %19, align 8
  store %"class.std::set"* %2, %"class.std::set"** %20, align 8
  store %"class.std::set"* %3, %"class.std::set"** %21, align 8
  %26 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %19, align 8
  %27 = call %class.anon.2* @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E14_M_get_pointerERKSt9_Any_data"(%"union.std::_Any_data"* dereferenceable(16) %26)
  %28 = load %"class.std::set"*, %"class.std::set"** %20, align 8
  %29 = call dereferenceable(48) %"class.std::set"* @_ZSt7forwardISt3setIcSt4lessIcESaIcEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::set"* dereferenceable(48) %28) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEEC2EOS3_(%"class.std::set"* %22, %"class.std::set"* dereferenceable(48) %29) #3
  %30 = load %"class.std::set"*, %"class.std::set"** %21, align 8
  %31 = call dereferenceable(48) %"class.std::set"* @_ZSt7forwardISt3setIcSt4lessIcESaIcEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::set"* dereferenceable(48) %30) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEEC2EOS3_(%"class.std::set"* %23, %"class.std::set"* dereferenceable(48) %31) #3
  %32 = load i32, i32* @x.339
  %33 = load i32, i32* @y.340
  %34 = sub i32 %32, -2013751455
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -2013751455
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %57

; <label>:46:                                     ; preds = %18
  invoke void @"_ZZ4mainENK3$_2clESt3setIcSt4lessIcESaIcEES4_"(%"class.std::set"* sret %0, %class.anon.2* %27, %"class.std::set"* %22, %"class.std::set"* %23)
          to label %47 unwind label %48

; <label>:47:                                     ; preds = %46
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %23) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %22) #3
  ret void

; <label>:48:                                     ; preds = %46
  %49 = landingpad { i8*, i32 }
          cleanup
  %50 = extractvalue { i8*, i32 } %49, 0
  store i8* %50, i8** %24, align 8
  %51 = extractvalue { i8*, i32 } %49, 1
  store i32 %51, i32* %25, align 4
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %23) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %22) #3
  br label %52

; <label>:52:                                     ; preds = %48
  %53 = load i8*, i8** %24, align 8
  %54 = load i32, i32* %25, align 4
  %55 = insertvalue { i8*, i32 } undef, i8* %53, 0
  %56 = insertvalue { i8*, i32 } %55, i32 %54, 1
  resume { i8*, i32 } %56

; <label>:57:                                     ; preds = %18, %4
  %58 = alloca %"union.std::_Any_data"*, align 8
  %59 = alloca %"class.std::set"*, align 8
  %60 = alloca %"class.std::set"*, align 8
  %61 = alloca %"class.std::set", align 8
  %62 = alloca %"class.std::set", align 8
  %63 = alloca i8*
  %64 = alloca i32
  store %"union.std::_Any_data"* %1, %"union.std::_Any_data"** %58, align 8
  store %"class.std::set"* %2, %"class.std::set"** %59, align 8
  store %"class.std::set"* %3, %"class.std::set"** %60, align 8
  %65 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %58, align 8
  %66 = call %class.anon.2* @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E14_M_get_pointerERKSt9_Any_data"(%"union.std::_Any_data"* dereferenceable(16) %65)
  %67 = load %"class.std::set"*, %"class.std::set"** %59, align 8
  %68 = call dereferenceable(48) %"class.std::set"* @_ZSt7forwardISt3setIcSt4lessIcESaIcEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::set"* dereferenceable(48) %67) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEEC2EOS3_(%"class.std::set"* %61, %"class.std::set"* dereferenceable(48) %68) #3
  %69 = load %"class.std::set"*, %"class.std::set"** %60, align 8
  %70 = call dereferenceable(48) %"class.std::set"* @_ZSt7forwardISt3setIcSt4lessIcESaIcEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::set"* dereferenceable(48) %69) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEEC2EOS3_(%"class.std::set"* %62, %"class.std::set"* dereferenceable(48) %70) #3
  br label %18
}

; Function Attrs: noinline uwtable
define internal zeroext i1 @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation"(%"union.std::_Any_data"* dereferenceable(16), %"union.std::_Any_data"* dereferenceable(16), i32) #0 align 2 {
  %4 = alloca i32
  %5 = alloca %"union.std::_Any_data"*, align 8
  %6 = alloca %"union.std::_Any_data"*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %"struct.std::integral_constant", align 1
  %9 = alloca %"struct.std::integral_constant", align 1
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %5, align 8
  store %"union.std::_Any_data"* %1, %"union.std::_Any_data"** %6, align 8
  store i32 %2, i32* %7, align 4
  %10 = load i32, i32* %7, align 4
  store i32 %10, i32* %4
  %11 = alloca i32
  store i32 -379503179, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %107
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -379503179, label %15
    i32 2063596497, label %19
    i32 -2123646908, label %23
    i32 -136668743, label %27
    i32 638233408, label %31
    i32 558116601, label %35
    i32 1622314850, label %38
    i32 17637510, label %43
    i32 1498884374, label %46
    i32 -1260982067, label %73
    i32 -1430226128, label %102
    i32 1122277390, label %103
    i32 1171526478, label %104
    i32 -288649288, label %105
  ]

; <label>:14:                                     ; preds = %12
  br label %107

; <label>:15:                                     ; preds = %12
  %16 = load volatile i32, i32* %4
  %17 = icmp slt i32 %16, 2
  %18 = select i1 %17, i32 -136668743, i32 2063596497
  store i32 %18, i32* %11
  br label %107

; <label>:19:                                     ; preds = %12
  %20 = load volatile i32, i32* %4
  %21 = icmp slt i32 %20, 3
  %22 = select i1 %21, i32 17637510, i32 -2123646908
  store i32 %22, i32* %11
  br label %107

; <label>:23:                                     ; preds = %12
  %24 = load volatile i32, i32* %4
  %25 = icmp eq i32 %24, 3
  %26 = select i1 %25, i32 1498884374, i32 1122277390
  store i32 %26, i32* %11
  br label %107

; <label>:27:                                     ; preds = %12
  %28 = load volatile i32, i32* %4
  %29 = icmp slt i32 %28, 1
  %30 = select i1 %29, i32 638233408, i32 1622314850
  store i32 %30, i32* %11
  br label %107

; <label>:31:                                     ; preds = %12
  %32 = load volatile i32, i32* %4
  %33 = icmp eq i32 %32, 0
  %34 = select i1 %33, i32 558116601, i32 1122277390
  store i32 %34, i32* %11
  br label %107

; <label>:35:                                     ; preds = %12
  %36 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %5, align 8
  %37 = call dereferenceable(8) %"class.std::type_info"** @_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v(%"union.std::_Any_data"* %36)
  store %"class.std::type_info"* bitcast ({ i8*, i8* }* @"_ZTIZ4mainE3$_2" to %"class.std::type_info"*), %"class.std::type_info"** %37, align 8
  store i32 1171526478, i32* %11
  br label %107

; <label>:38:                                     ; preds = %12
  %39 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %6, align 8
  %40 = call %class.anon.2* @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E14_M_get_pointerERKSt9_Any_data"(%"union.std::_Any_data"* dereferenceable(16) %39)
  %41 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %5, align 8
  %42 = call dereferenceable(8) %class.anon.2** @"_ZNSt9_Any_data9_M_accessIPZ4mainE3$_2EERT_v"(%"union.std::_Any_data"* %41)
  store %class.anon.2* %40, %class.anon.2** %42, align 8
  store i32 1171526478, i32* %11
  br label %107

; <label>:43:                                     ; preds = %12
  %44 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %5, align 8
  %45 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %6, align 8
  call void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E8_M_cloneERSt9_Any_dataRKS3_St17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16) %44, %"union.std::_Any_data"* dereferenceable(16) %45)
  store i32 1171526478, i32* %11
  br label %107

; <label>:46:                                     ; preds = %12
  %47 = load i32, i32* @x.341
  %48 = load i32, i32* @y.342
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -1260982067, i32 -288649288
  store i32 %72, i32* %11
  br label %107

; <label>:73:                                     ; preds = %12
  %74 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %5, align 8
  call void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16) %74)
  %75 = load i32, i32* @x.341
  %76 = load i32, i32* @y.342
  %77 = sub i32 %75, -523638363
  %78 = sub i32 %77, 1
  %79 = add i32 %78, -523638363
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = xor i1 %83, true
  %86 = xor i1 %84, true
  %87 = xor i1 true, true
  %88 = and i1 %85, true
  %89 = and i1 %83, %87
  %90 = and i1 %86, true
  %91 = and i1 %84, %87
  %92 = or i1 %88, %89
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = or i1 %85, %86
  %96 = xor i1 %95, true
  %97 = or i1 true, %87
  %98 = and i1 %96, %97
  %99 = or i1 %94, %98
  %100 = or i1 %83, %84
  %101 = select i1 %99, i32 -1430226128, i32 -288649288
  store i32 %101, i32* %11
  br label %107

; <label>:102:                                    ; preds = %12
  store i32 1171526478, i32* %11
  br label %107

; <label>:103:                                    ; preds = %12
  store i32 1171526478, i32* %11
  br label %107

; <label>:104:                                    ; preds = %12
  ret i1 false

; <label>:105:                                    ; preds = %12
  %106 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %5, align 8
  call void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16) %106)
  store i32 -1260982067, i32* %11
  br label %107

; <label>:107:                                    ; preds = %105, %103, %102, %73, %46, %43, %38, %35, %31, %27, %23, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define internal void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E15_M_init_functorERSt9_Any_dataOS1_St17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16), %class.anon.2* dereferenceable(1)) #5 align 2 {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"union.std::_Any_data"*, align 8
  %5 = alloca %class.anon.2*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %4, align 8
  store %class.anon.2* %1, %class.anon.2** %5, align 8
  %6 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %4, align 8
  %7 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %6)
  %8 = bitcast i8* %7 to %class.anon.2*
  %9 = load %class.anon.2*, %class.anon.2** %5, align 8
  %10 = call dereferenceable(1) %class.anon.2* @"_ZSt4moveIRZ4mainE3$_2EONSt16remove_referenceIT_E4typeEOS3_"(%class.anon.2* dereferenceable(1) %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define internal %class.anon.2* @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E14_M_get_pointerERKSt9_Any_data"(%"union.std::_Any_data"* dereferenceable(16)) #0 align 2 {
  %2 = alloca %"union.std::_Any_data"*, align 8
  %3 = alloca %class.anon.2*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %2, align 8
  %4 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %2, align 8
  %5 = call dereferenceable(1) %class.anon.2* @"_ZNKSt9_Any_data9_M_accessIZ4mainE3$_2EERKT_v"(%"union.std::_Any_data"* %4)
  %6 = call %class.anon.2* @"_ZSt11__addressofIKZ4mainE3$_2EPT_RS2_"(%class.anon.2* dereferenceable(1) %5) #3
  store %class.anon.2* %6, %class.anon.2** %3, align 8
  %7 = load %class.anon.2*, %class.anon.2** %3, align 8
  ret %class.anon.2* %7
}

; Function Attrs: noinline nounwind uwtable
define internal void @"_ZZ4mainENK3$_2clESt3setIcSt4lessIcESaIcEES4_"(%"class.std::set"* noalias sret, %class.anon.2*, %"class.std::set"*, %"class.std::set"*) #5 align 2 {
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.347
  %8 = load i32, i32* @y.348
  %9 = sub i32 %7, -415075156
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -415075156
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -384517046, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %63
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -384517046, label %21
    i32 -51373626, label %29
    i32 -1505168151, label %59
    i32 -1569891, label %60
  ]

; <label>:20:                                     ; preds = %18
  br label %63

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -51373626, i32 -1569891
  store i32 %28, i32* %17
  br label %63

; <label>:29:                                     ; preds = %18
  %30 = alloca %class.anon.2*, align 8
  store %class.anon.2* %1, %class.anon.2** %30, align 8
  %31 = load %class.anon.2*, %class.anon.2** %30, align 8
  call void @_ZNSt3setIcSt4lessIcESaIcEEC2EOS3_(%"class.std::set"* %0, %"class.std::set"* dereferenceable(48) %3) #3
  %32 = load i32, i32* @x.347
  %33 = load i32, i32* @y.348
  %34 = sub i32 %32, -704666557
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -704666557
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -1505168151, i32 -1569891
  store i32 %58, i32* %17
  br label %63

; <label>:59:                                     ; preds = %18
  ret void

; <label>:60:                                     ; preds = %18
  %61 = alloca %class.anon.2*, align 8
  store %class.anon.2* %1, %class.anon.2** %61, align 8
  %62 = load %class.anon.2*, %class.anon.2** %61, align 8
  call void @_ZNSt3setIcSt4lessIcESaIcEEC2EOS3_(%"class.std::set"* %0, %"class.std::set"* dereferenceable(48) %3) #3
  store i32 -51373626, i32* %17
  br label %63

; <label>:63:                                     ; preds = %60, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define internal %class.anon.2* @"_ZSt11__addressofIKZ4mainE3$_2EPT_RS2_"(%class.anon.2* dereferenceable(1)) #5 {
  %2 = alloca %class.anon.2*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.349
  %6 = load i32, i32* @y.350
  %7 = sub i32 %5, -60341579
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -60341579
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1742032760, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1742032760, label %19
    i32 459220511, label %39
    i32 -1717605258, label %71
    i32 481349223, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 459220511, i32 481349223
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %class.anon.2*, align 8
  store %class.anon.2* %0, %class.anon.2** %40, align 8
  %41 = load %class.anon.2*, %class.anon.2** %40, align 8
  %42 = bitcast %class.anon.2* %41 to i8*
  %43 = bitcast i8* %42 to %class.anon.2*
  store %class.anon.2* %43, %class.anon.2** %2
  %44 = load i32, i32* @x.349
  %45 = load i32, i32* @y.350
  %46 = add i32 %44, -1532494397
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -1532494397
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -1717605258, i32 481349223
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile %class.anon.2*, %class.anon.2** %2
  ret %class.anon.2* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %class.anon.2*, align 8
  store %class.anon.2* %0, %class.anon.2** %74, align 8
  %75 = load %class.anon.2*, %class.anon.2** %74, align 8
  %76 = bitcast %class.anon.2* %75 to i8*
  %77 = bitcast i8* %76 to %class.anon.2*
  store i32 459220511, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(1) %class.anon.2* @"_ZNKSt9_Any_data9_M_accessIZ4mainE3$_2EERKT_v"(%"union.std::_Any_data"*) #5 align 2 {
  %2 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %2, align 8
  %3 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %2, align 8
  %4 = call i8* @_ZNKSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %3)
  %5 = bitcast i8* %4 to %class.anon.2*
  ret %class.anon.2* %5
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(8) %class.anon.2** @"_ZNSt9_Any_data9_M_accessIPZ4mainE3$_2EERT_v"(%"union.std::_Any_data"*) #5 align 2 {
  %2 = alloca %class.anon.2**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.353
  %6 = load i32, i32* @y.354
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1902442474, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %77
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1902442474, label %18
    i32 295502825, label %38
    i32 399533726, label %70
    i32 540875553, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %77

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 295502825, i32 540875553
  store i32 %37, i32* %14
  br label %77

; <label>:38:                                     ; preds = %15
  %39 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %39, align 8
  %40 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %39, align 8
  %41 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %40)
  %42 = bitcast i8* %41 to %class.anon.2**
  store %class.anon.2** %42, %class.anon.2*** %2
  %43 = load i32, i32* @x.353
  %44 = load i32, i32* @y.354
  %45 = sub i32 %43, 1135332959
  %46 = sub i32 %45, 1
  %47 = add i32 %46, 1135332959
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 399533726, i32 540875553
  store i32 %69, i32* %14
  br label %77

; <label>:70:                                     ; preds = %15
  %71 = load volatile %class.anon.2**, %class.anon.2*** %2
  ret %class.anon.2** %71

; <label>:72:                                     ; preds = %15
  %73 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %73, align 8
  %74 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %73, align 8
  %75 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %74)
  %76 = bitcast i8* %75 to %class.anon.2**
  store i32 295502825, i32* %14
  br label %77

; <label>:77:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define internal void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E8_M_cloneERSt9_Any_dataRKS3_St17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16), %"union.std::_Any_data"* dereferenceable(16)) #5 align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.355
  %6 = load i32, i32* @y.356
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1849446511, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %71
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1849446511, label %18
    i32 -2101019978, label %26
    i32 1198619590, label %61
    i32 993650842, label %62
  ]

; <label>:17:                                     ; preds = %15
  br label %71

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -2101019978, i32 993650842
  store i32 %25, i32* %14
  br label %71

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::integral_constant", align 1
  %28 = alloca %"union.std::_Any_data"*, align 8
  %29 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %28, align 8
  store %"union.std::_Any_data"* %1, %"union.std::_Any_data"** %29, align 8
  %30 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %28, align 8
  %31 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %30)
  %32 = bitcast i8* %31 to %class.anon.2*
  %33 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %29, align 8
  %34 = call dereferenceable(1) %class.anon.2* @"_ZNKSt9_Any_data9_M_accessIZ4mainE3$_2EERKT_v"(%"union.std::_Any_data"* %33)
  %35 = load i32, i32* @x.355
  %36 = load i32, i32* @y.356
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 1198619590, i32 993650842
  store i32 %60, i32* %14
  br label %71

; <label>:61:                                     ; preds = %15
  ret void

; <label>:62:                                     ; preds = %15
  %63 = alloca %"struct.std::integral_constant", align 1
  %64 = alloca %"union.std::_Any_data"*, align 8
  %65 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %64, align 8
  store %"union.std::_Any_data"* %1, %"union.std::_Any_data"** %65, align 8
  %66 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %64, align 8
  %67 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %66)
  %68 = bitcast i8* %67 to %class.anon.2*
  %69 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %65, align 8
  %70 = call dereferenceable(1) %class.anon.2* @"_ZNKSt9_Any_data9_M_accessIZ4mainE3$_2EERKT_v"(%"union.std::_Any_data"* %69)
  store i32 -2101019978, i32* %14
  br label %71

; <label>:71:                                     ; preds = %62, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define internal void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_2E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16)) #0 align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.357
  %5 = load i32, i32* @y.358
  %6 = add i32 %4, 1534494181
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1534494181
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 870524675, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %64
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 870524675, label %18
    i32 -1191386335, label %38
    i32 -1881863192, label %58
    i32 872797715, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %64

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1191386335, i32 872797715
  store i32 %37, i32* %14
  br label %64

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::integral_constant", align 1
  %40 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %40, align 8
  %41 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %40, align 8
  %42 = call dereferenceable(1) %class.anon.2* @"_ZNSt9_Any_data9_M_accessIZ4mainE3$_2EERT_v"(%"union.std::_Any_data"* %41)
  %43 = load i32, i32* @x.357
  %44 = load i32, i32* @y.358
  %45 = add i32 %43, -1486228049
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -1486228049
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -1881863192, i32 872797715
  store i32 %57, i32* %14
  br label %64

; <label>:58:                                     ; preds = %15
  ret void

; <label>:59:                                     ; preds = %15
  %60 = alloca %"struct.std::integral_constant", align 1
  %61 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %61, align 8
  %62 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %61, align 8
  %63 = call dereferenceable(1) %class.anon.2* @"_ZNSt9_Any_data9_M_accessIZ4mainE3$_2EERT_v"(%"union.std::_Any_data"* %62)
  store i32 -1191386335, i32* %14
  br label %64

; <label>:64:                                     ; preds = %59, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(1) %class.anon.2* @"_ZNSt9_Any_data9_M_accessIZ4mainE3$_2EERT_v"(%"union.std::_Any_data"*) #5 align 2 {
  %2 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %2, align 8
  %3 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %2, align 8
  %4 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %3)
  %5 = bitcast i8* %4 to %class.anon.2*
  ret %class.anon.2* %5
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_3E21_M_not_empty_functionIS1_EEbRKT_"(%class.anon.4* dereferenceable(1)) #5 align 2 {
  %2 = alloca %class.anon.4*, align 8
  store %class.anon.4* %0, %class.anon.4** %2, align 8
  ret i1 true
}

; Function Attrs: noinline uwtable
define internal void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_3E15_M_init_functorERSt9_Any_dataOS1_"(%"union.std::_Any_data"* dereferenceable(16), %class.anon.4* dereferenceable(1)) #0 align 2 {
  %3 = alloca %"union.std::_Any_data"*, align 8
  %4 = alloca %class.anon.4*, align 8
  %5 = alloca %"struct.std::integral_constant", align 1
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %3, align 8
  store %class.anon.4* %1, %class.anon.4** %4, align 8
  %6 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %3, align 8
  %7 = load %class.anon.4*, %class.anon.4** %4, align 8
  %8 = call dereferenceable(1) %class.anon.4* @"_ZSt4moveIRZ4mainE3$_3EONSt16remove_referenceIT_E4typeEOS3_"(%class.anon.4* dereferenceable(1) %7) #3
  call void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_3E15_M_init_functorERSt9_Any_dataOS1_St17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16) %6, %class.anon.4* dereferenceable(1) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(1) %class.anon.4* @"_ZSt4moveIRZ4mainE3$_3EONSt16remove_referenceIT_E4typeEOS3_"(%class.anon.4* dereferenceable(1)) #5 {
  %2 = alloca %class.anon.4*, align 8
  store %class.anon.4* %0, %class.anon.4** %2, align 8
  %3 = load %class.anon.4*, %class.anon.4** %2, align 8
  ret %class.anon.4* %3
}

; Function Attrs: noinline uwtable
define internal void @"_ZNSt17_Function_handlerIFSt3setIcSt4lessIcESaIcEES4_xEZ4mainE3$_3E9_M_invokeERKSt9_Any_dataOS4_Ox"(%"class.std::set"* noalias sret, %"union.std::_Any_data"* dereferenceable(16), %"class.std::set"* dereferenceable(48), i64* dereferenceable(8)) #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"union.std::_Any_data"*, align 8
  %6 = alloca %"class.std::set"*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::set", align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"union.std::_Any_data"* %1, %"union.std::_Any_data"** %5, align 8
  store %"class.std::set"* %2, %"class.std::set"** %6, align 8
  store i64* %3, i64** %7, align 8
  %11 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %5, align 8
  %12 = call %class.anon.4* @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_3E14_M_get_pointerERKSt9_Any_data"(%"union.std::_Any_data"* dereferenceable(16) %11)
  %13 = load %"class.std::set"*, %"class.std::set"** %6, align 8
  %14 = call dereferenceable(48) %"class.std::set"* @_ZSt7forwardISt3setIcSt4lessIcESaIcEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::set"* dereferenceable(48) %13) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEEC2EOS3_(%"class.std::set"* %8, %"class.std::set"* dereferenceable(48) %14) #3
  %15 = load i64*, i64** %7, align 8
  %16 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %15) #3
  %17 = load i64, i64* %16, align 8
  invoke void @"_ZZ4mainENK3$_3clESt3setIcSt4lessIcESaIcEEx"(%"class.std::set"* sret %0, %class.anon.4* %12, %"class.std::set"* %8, i64 %17)
          to label %18 unwind label %19

; <label>:18:                                     ; preds = %4
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %8) #3
  ret void

; <label>:19:                                     ; preds = %4
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = extractvalue { i8*, i32 } %20, 0
  store i8* %21, i8** %9, align 8
  %22 = extractvalue { i8*, i32 } %20, 1
  store i32 %22, i32* %10, align 4
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %8) #3
  br label %23

; <label>:23:                                     ; preds = %19
  %24 = load i32, i32* @x.367
  %25 = load i32, i32* @y.368
  %26 = add i32 %24, -57633725
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, -57633725
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  br i1 %36, label %38, label %70

; <label>:38:                                     ; preds = %23, %70
  %39 = load i8*, i8** %9, align 8
  %40 = load i32, i32* %10, align 4
  %41 = insertvalue { i8*, i32 } undef, i8* %39, 0
  %42 = insertvalue { i8*, i32 } %41, i32 %40, 1
  %43 = load i32, i32* @x.367
  %44 = load i32, i32* @y.368
  %45 = add i32 %43, -1545047312
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -1545047312
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  br i1 %67, label %69, label %70

; <label>:69:                                     ; preds = %38
  resume { i8*, i32 } %42

; <label>:70:                                     ; preds = %38, %23
  %71 = load i8*, i8** %9, align 8
  %72 = load i32, i32* %10, align 4
  %73 = insertvalue { i8*, i32 } undef, i8* %71, 0
  %74 = insertvalue { i8*, i32 } %73, i32 %72, 1
  br label %38
}

; Function Attrs: noinline uwtable
define internal zeroext i1 @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_3E10_M_managerERSt9_Any_dataRKS3_St18_Manager_operation"(%"union.std::_Any_data"* dereferenceable(16), %"union.std::_Any_data"* dereferenceable(16), i32) #0 align 2 {
  %4 = alloca i32
  %5 = alloca %"union.std::_Any_data"**
  %6 = alloca %"union.std::_Any_data"**
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.369
  %10 = load i32, i32* @y.370
  %11 = add i32 %9, -1594711105
  %12 = sub i32 %11, 1
  %13 = sub i32 %12, -1594711105
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 727555244, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %198
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 727555244, label %23
    i32 944136749, label %31
    i32 1127090231, label %55
    i32 767189895, label %56
    i32 -1122394511, label %60
    i32 503406923, label %64
    i32 -952266195, label %68
    i32 -2090535074, label %72
    i32 1765637789, label %76
    i32 -195047499, label %80
    i32 1826668536, label %96
    i32 1038890986, label %129
    i32 1099530373, label %130
    i32 196702332, label %135
    i32 90866520, label %138
    i32 -2099062230, label %139
    i32 366667602, label %155
    i32 1831798288, label %182
    i32 1910552382, label %183
    i32 -1407988391, label %190
    i32 1250570767, label %197
  ]

; <label>:22:                                     ; preds = %20
  br label %198

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 944136749, i32 1910552382
  store i32 %30, i32* %19
  br label %198

; <label>:31:                                     ; preds = %20
  %32 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"** %32, %"union.std::_Any_data"*** %6
  %33 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"** %33, %"union.std::_Any_data"*** %5
  %34 = alloca i32, align 4
  %35 = alloca %"struct.std::integral_constant", align 1
  %36 = alloca %"struct.std::integral_constant", align 1
  %37 = load volatile %"union.std::_Any_data"**, %"union.std::_Any_data"*** %6
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %37, align 8
  %38 = load volatile %"union.std::_Any_data"**, %"union.std::_Any_data"*** %5
  store %"union.std::_Any_data"* %1, %"union.std::_Any_data"** %38, align 8
  store i32 %2, i32* %34, align 4
  %39 = load i32, i32* %34, align 4
  store i32 %39, i32* %4
  %40 = load i32, i32* @x.369
  %41 = load i32, i32* @y.370
  %42 = add i32 %40, -1230206130
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -1230206130
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 1127090231, i32 1910552382
  store i32 %54, i32* %19
  br label %198

; <label>:55:                                     ; preds = %20
  store i32 767189895, i32* %19
  br label %198

; <label>:56:                                     ; preds = %20
  %57 = load volatile i32, i32* %4
  %58 = icmp slt i32 %57, 2
  %59 = select i1 %58, i32 -952266195, i32 -1122394511
  store i32 %59, i32* %19
  br label %198

; <label>:60:                                     ; preds = %20
  %61 = load volatile i32, i32* %4
  %62 = icmp slt i32 %61, 3
  %63 = select i1 %62, i32 1099530373, i32 503406923
  store i32 %63, i32* %19
  br label %198

; <label>:64:                                     ; preds = %20
  %65 = load volatile i32, i32* %4
  %66 = icmp eq i32 %65, 3
  %67 = select i1 %66, i32 196702332, i32 90866520
  store i32 %67, i32* %19
  br label %198

; <label>:68:                                     ; preds = %20
  %69 = load volatile i32, i32* %4
  %70 = icmp slt i32 %69, 1
  %71 = select i1 %70, i32 -2090535074, i32 -195047499
  store i32 %71, i32* %19
  br label %198

; <label>:72:                                     ; preds = %20
  %73 = load volatile i32, i32* %4
  %74 = icmp eq i32 %73, 0
  %75 = select i1 %74, i32 1765637789, i32 90866520
  store i32 %75, i32* %19
  br label %198

; <label>:76:                                     ; preds = %20
  %77 = load volatile %"union.std::_Any_data"**, %"union.std::_Any_data"*** %6
  %78 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %77, align 8
  %79 = call dereferenceable(8) %"class.std::type_info"** @_ZNSt9_Any_data9_M_accessIPKSt9type_infoEERT_v(%"union.std::_Any_data"* %78)
  store %"class.std::type_info"* bitcast ({ i8*, i8* }* @"_ZTIZ4mainE3$_3" to %"class.std::type_info"*), %"class.std::type_info"** %79, align 8
  store i32 -2099062230, i32* %19
  br label %198

; <label>:80:                                     ; preds = %20
  %81 = load i32, i32* @x.369
  %82 = load i32, i32* @y.370
  %83 = add i32 %81, -1491466800
  %84 = sub i32 %83, 1
  %85 = sub i32 %84, -1491466800
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  %95 = select i1 %93, i32 1826668536, i32 -1407988391
  store i32 %95, i32* %19
  br label %198

; <label>:96:                                     ; preds = %20
  %97 = load volatile %"union.std::_Any_data"**, %"union.std::_Any_data"*** %5
  %98 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %97, align 8
  %99 = call %class.anon.4* @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_3E14_M_get_pointerERKSt9_Any_data"(%"union.std::_Any_data"* dereferenceable(16) %98)
  %100 = load volatile %"union.std::_Any_data"**, %"union.std::_Any_data"*** %6
  %101 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %100, align 8
  %102 = call dereferenceable(8) %class.anon.4** @"_ZNSt9_Any_data9_M_accessIPZ4mainE3$_3EERT_v"(%"union.std::_Any_data"* %101)
  store %class.anon.4* %99, %class.anon.4** %102, align 8
  %103 = load i32, i32* @x.369
  %104 = load i32, i32* @y.370
  %105 = sub i32 0, 1
  %106 = add i32 %103, %105
  %107 = sub i32 %103, 1
  %108 = mul i32 %103, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %104, 10
  %112 = xor i1 %110, true
  %113 = xor i1 %111, true
  %114 = xor i1 false, true
  %115 = and i1 %112, false
  %116 = and i1 %110, %114
  %117 = and i1 %113, false
  %118 = and i1 %111, %114
  %119 = or i1 %115, %116
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = or i1 %112, %113
  %123 = xor i1 %122, true
  %124 = or i1 false, %114
  %125 = and i1 %123, %124
  %126 = or i1 %121, %125
  %127 = or i1 %110, %111
  %128 = select i1 %126, i32 1038890986, i32 -1407988391
  store i32 %128, i32* %19
  br label %198

; <label>:129:                                    ; preds = %20
  store i32 -2099062230, i32* %19
  br label %198

; <label>:130:                                    ; preds = %20
  %131 = load volatile %"union.std::_Any_data"**, %"union.std::_Any_data"*** %6
  %132 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %131, align 8
  %133 = load volatile %"union.std::_Any_data"**, %"union.std::_Any_data"*** %5
  %134 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %133, align 8
  call void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_3E8_M_cloneERSt9_Any_dataRKS3_St17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16) %132, %"union.std::_Any_data"* dereferenceable(16) %134)
  store i32 -2099062230, i32* %19
  br label %198

; <label>:135:                                    ; preds = %20
  %136 = load volatile %"union.std::_Any_data"**, %"union.std::_Any_data"*** %6
  %137 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %136, align 8
  call void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_3E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16) %137)
  store i32 -2099062230, i32* %19
  br label %198

; <label>:138:                                    ; preds = %20
  store i32 -2099062230, i32* %19
  br label %198

; <label>:139:                                    ; preds = %20
  %140 = load i32, i32* @x.369
  %141 = load i32, i32* @y.370
  %142 = add i32 %140, 122427539
  %143 = sub i32 %142, 1
  %144 = sub i32 %143, 122427539
  %145 = sub i32 %140, 1
  %146 = mul i32 %140, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %141, 10
  %150 = and i1 %148, %149
  %151 = xor i1 %148, %149
  %152 = or i1 %150, %151
  %153 = or i1 %148, %149
  %154 = select i1 %152, i32 366667602, i32 1250570767
  store i32 %154, i32* %19
  br label %198

; <label>:155:                                    ; preds = %20
  %156 = load i32, i32* @x.369
  %157 = load i32, i32* @y.370
  %158 = sub i32 0, 1
  %159 = add i32 %156, %158
  %160 = sub i32 %156, 1
  %161 = mul i32 %156, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %157, 10
  %165 = xor i1 %163, true
  %166 = xor i1 %164, true
  %167 = xor i1 false, true
  %168 = and i1 %165, false
  %169 = and i1 %163, %167
  %170 = and i1 %166, false
  %171 = and i1 %164, %167
  %172 = or i1 %168, %169
  %173 = or i1 %170, %171
  %174 = xor i1 %172, %173
  %175 = or i1 %165, %166
  %176 = xor i1 %175, true
  %177 = or i1 false, %167
  %178 = and i1 %176, %177
  %179 = or i1 %174, %178
  %180 = or i1 %163, %164
  %181 = select i1 %179, i32 1831798288, i32 1250570767
  store i32 %181, i32* %19
  br label %198

; <label>:182:                                    ; preds = %20
  ret i1 false

; <label>:183:                                    ; preds = %20
  %184 = alloca %"union.std::_Any_data"*, align 8
  %185 = alloca %"union.std::_Any_data"*, align 8
  %186 = alloca i32, align 4
  %187 = alloca %"struct.std::integral_constant", align 1
  %188 = alloca %"struct.std::integral_constant", align 1
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %184, align 8
  store %"union.std::_Any_data"* %1, %"union.std::_Any_data"** %185, align 8
  store i32 %2, i32* %186, align 4
  %189 = load i32, i32* %186, align 4
  store i32 944136749, i32* %19
  br label %198

; <label>:190:                                    ; preds = %20
  %191 = load volatile %"union.std::_Any_data"**, %"union.std::_Any_data"*** %5
  %192 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %191, align 8
  %193 = call %class.anon.4* @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_3E14_M_get_pointerERKSt9_Any_data"(%"union.std::_Any_data"* dereferenceable(16) %192)
  %194 = load volatile %"union.std::_Any_data"**, %"union.std::_Any_data"*** %6
  %195 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %194, align 8
  %196 = call dereferenceable(8) %class.anon.4** @"_ZNSt9_Any_data9_M_accessIPZ4mainE3$_3EERT_v"(%"union.std::_Any_data"* %195)
  store %class.anon.4* %193, %class.anon.4** %196, align 8
  store i32 1826668536, i32* %19
  br label %198

; <label>:197:                                    ; preds = %20
  store i32 366667602, i32* %19
  br label %198

; <label>:198:                                    ; preds = %197, %190, %183, %155, %139, %138, %135, %130, %129, %96, %80, %76, %72, %68, %64, %60, %56, %55, %31, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define internal void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_3E15_M_init_functorERSt9_Any_dataOS1_St17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16), %class.anon.4* dereferenceable(1)) #5 align 2 {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"union.std::_Any_data"*, align 8
  %5 = alloca %class.anon.4*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %4, align 8
  store %class.anon.4* %1, %class.anon.4** %5, align 8
  %6 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %4, align 8
  %7 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %6)
  %8 = bitcast i8* %7 to %class.anon.4*
  %9 = load %class.anon.4*, %class.anon.4** %5, align 8
  %10 = call dereferenceable(1) %class.anon.4* @"_ZSt4moveIRZ4mainE3$_3EONSt16remove_referenceIT_E4typeEOS3_"(%class.anon.4* dereferenceable(1) %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define internal %class.anon.4* @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_3E14_M_get_pointerERKSt9_Any_data"(%"union.std::_Any_data"* dereferenceable(16)) #0 align 2 {
  %2 = alloca %class.anon.4*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.373
  %6 = load i32, i32* @y.374
  %7 = sub i32 %5, 1913972441
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1913972441
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1585232397, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1585232397, label %19
    i32 376073856, label %27
    i32 -1158197145, label %61
    i32 -569624889, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 376073856, i32 -569624889
  store i32 %26, i32* %15
  br label %70

; <label>:27:                                     ; preds = %16
  %28 = alloca %"union.std::_Any_data"*, align 8
  %29 = alloca %class.anon.4*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %28, align 8
  %30 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %28, align 8
  %31 = call dereferenceable(1) %class.anon.4* @"_ZNKSt9_Any_data9_M_accessIZ4mainE3$_3EERKT_v"(%"union.std::_Any_data"* %30)
  %32 = call %class.anon.4* @"_ZSt11__addressofIKZ4mainE3$_3EPT_RS2_"(%class.anon.4* dereferenceable(1) %31) #3
  store %class.anon.4* %32, %class.anon.4** %29, align 8
  %33 = load %class.anon.4*, %class.anon.4** %29, align 8
  store %class.anon.4* %33, %class.anon.4** %2
  %34 = load i32, i32* @x.373
  %35 = load i32, i32* @y.374
  %36 = add i32 %34, 887536914
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, 887536914
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -1158197145, i32 -569624889
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  %62 = load volatile %class.anon.4*, %class.anon.4** %2
  ret %class.anon.4* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"union.std::_Any_data"*, align 8
  %65 = alloca %class.anon.4*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %64, align 8
  %66 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %64, align 8
  %67 = call dereferenceable(1) %class.anon.4* @"_ZNKSt9_Any_data9_M_accessIZ4mainE3$_3EERKT_v"(%"union.std::_Any_data"* %66)
  %68 = call %class.anon.4* @"_ZSt11__addressofIKZ4mainE3$_3EPT_RS2_"(%class.anon.4* dereferenceable(1) %67) #3
  store %class.anon.4* %68, %class.anon.4** %65, align 8
  %69 = load %class.anon.4*, %class.anon.4** %65, align 8
  store i32 376073856, i32* %15
  br label %70

; <label>:70:                                     ; preds = %63, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define internal void @"_ZZ4mainENK3$_3clESt3setIcSt4lessIcESaIcEEx"(%"class.std::set"* noalias sret, %class.anon.4*, %"class.std::set"*, i64) #5 align 2 {
  %5 = alloca %class.anon.4*, align 8
  %6 = alloca i64, align 8
  store %class.anon.4* %1, %class.anon.4** %5, align 8
  store i64 %3, i64* %6, align 8
  %7 = load %class.anon.4*, %class.anon.4** %5, align 8
  call void @_ZNSt3setIcSt4lessIcESaIcEEC2EOS3_(%"class.std::set"* %0, %"class.std::set"* dereferenceable(48) %2) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8)) #5 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline nounwind uwtable
define internal %class.anon.4* @"_ZSt11__addressofIKZ4mainE3$_3EPT_RS2_"(%class.anon.4* dereferenceable(1)) #5 {
  %2 = alloca %class.anon.4*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.379
  %6 = load i32, i32* @y.380
  %7 = add i32 %5, 1729236935
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1729236935
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1700891012, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1700891012, label %19
    i32 456058649, label %27
    i32 -162721969, label %58
    i32 1696504947, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 456058649, i32 1696504947
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %class.anon.4*, align 8
  store %class.anon.4* %0, %class.anon.4** %28, align 8
  %29 = load %class.anon.4*, %class.anon.4** %28, align 8
  %30 = bitcast %class.anon.4* %29 to i8*
  %31 = bitcast i8* %30 to %class.anon.4*
  store %class.anon.4* %31, %class.anon.4** %2
  %32 = load i32, i32* @x.379
  %33 = load i32, i32* @y.380
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -162721969, i32 1696504947
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile %class.anon.4*, %class.anon.4** %2
  ret %class.anon.4* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %class.anon.4*, align 8
  store %class.anon.4* %0, %class.anon.4** %61, align 8
  %62 = load %class.anon.4*, %class.anon.4** %61, align 8
  %63 = bitcast %class.anon.4* %62 to i8*
  %64 = bitcast i8* %63 to %class.anon.4*
  store i32 456058649, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(1) %class.anon.4* @"_ZNKSt9_Any_data9_M_accessIZ4mainE3$_3EERKT_v"(%"union.std::_Any_data"*) #5 align 2 {
  %2 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %2, align 8
  %3 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %2, align 8
  %4 = call i8* @_ZNKSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %3)
  %5 = bitcast i8* %4 to %class.anon.4*
  ret %class.anon.4* %5
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(8) %class.anon.4** @"_ZNSt9_Any_data9_M_accessIPZ4mainE3$_3EERT_v"(%"union.std::_Any_data"*) #5 align 2 {
  %2 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %2, align 8
  %3 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %2, align 8
  %4 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %3)
  %5 = bitcast i8* %4 to %class.anon.4**
  ret %class.anon.4** %5
}

; Function Attrs: noinline nounwind uwtable
define internal void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_3E8_M_cloneERSt9_Any_dataRKS3_St17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16), %"union.std::_Any_data"* dereferenceable(16)) #5 align 2 {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"union.std::_Any_data"*, align 8
  %5 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %4, align 8
  store %"union.std::_Any_data"* %1, %"union.std::_Any_data"** %5, align 8
  %6 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %4, align 8
  %7 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %6)
  %8 = bitcast i8* %7 to %class.anon.4*
  %9 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %5, align 8
  %10 = call dereferenceable(1) %class.anon.4* @"_ZNKSt9_Any_data9_M_accessIZ4mainE3$_3EERKT_v"(%"union.std::_Any_data"* %9)
  ret void
}

; Function Attrs: noinline uwtable
define internal void @"_ZNSt14_Function_base13_Base_managerIZ4mainE3$_3E10_M_destroyERSt9_Any_dataSt17integral_constantIbLb1EE"(%"union.std::_Any_data"* dereferenceable(16)) #0 align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.387
  %5 = load i32, i32* @y.388
  %6 = add i32 %4, 492461718
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 492461718
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -252285180, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %52
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -252285180, label %18
    i32 -22403350, label %26
    i32 1643700873, label %46
    i32 -275216483, label %47
  ]

; <label>:17:                                     ; preds = %15
  br label %52

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -22403350, i32 -275216483
  store i32 %25, i32* %14
  br label %52

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::integral_constant", align 1
  %28 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %28, align 8
  %29 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %28, align 8
  %30 = call dereferenceable(1) %class.anon.4* @"_ZNSt9_Any_data9_M_accessIZ4mainE3$_3EERT_v"(%"union.std::_Any_data"* %29)
  %31 = load i32, i32* @x.387
  %32 = load i32, i32* @y.388
  %33 = add i32 %31, 913054528
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 913054528
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 1643700873, i32 -275216483
  store i32 %45, i32* %14
  br label %52

; <label>:46:                                     ; preds = %15
  ret void

; <label>:47:                                     ; preds = %15
  %48 = alloca %"struct.std::integral_constant", align 1
  %49 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %49, align 8
  %50 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %49, align 8
  %51 = call dereferenceable(1) %class.anon.4* @"_ZNSt9_Any_data9_M_accessIZ4mainE3$_3EERT_v"(%"union.std::_Any_data"* %50)
  store i32 -22403350, i32* %14
  br label %52

; <label>:52:                                     ; preds = %47, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(1) %class.anon.4* @"_ZNSt9_Any_data9_M_accessIZ4mainE3$_3EERT_v"(%"union.std::_Any_data"*) #5 align 2 {
  %2 = alloca %class.anon.4*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.389
  %6 = load i32, i32* @y.390
  %7 = sub i32 %5, -2076344688
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -2076344688
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1833958731, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %53
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1833958731, label %19
    i32 1531094095, label %27
    i32 1927327825, label %46
    i32 -748001636, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %53

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1531094095, i32 -748001636
  store i32 %26, i32* %15
  br label %53

; <label>:27:                                     ; preds = %16
  %28 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %28, align 8
  %29 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %28, align 8
  %30 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %29)
  %31 = bitcast i8* %30 to %class.anon.4*
  store %class.anon.4* %31, %class.anon.4** %2
  %32 = load i32, i32* @x.389
  %33 = load i32, i32* @y.390
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 1927327825, i32 -748001636
  store i32 %45, i32* %15
  br label %53

; <label>:46:                                     ; preds = %16
  %47 = load volatile %class.anon.4*, %class.anon.4** %2
  ret %class.anon.4* %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"union.std::_Any_data"*, align 8
  store %"union.std::_Any_data"* %0, %"union.std::_Any_data"** %49, align 8
  %50 = load %"union.std::_Any_data"*, %"union.std::_Any_data"** %49, align 8
  %51 = call i8* @_ZNSt9_Any_data9_M_accessEv(%"union.std::_Any_data"* %50)
  %52 = bitcast i8* %51 to %class.anon.4*
  store i32 1531094095, i32* %15
  br label %53

; <label>:53:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEEC2ERKS5_(%"class.std::_Rb_tree"*, %"class.std::_Rb_tree"* dereferenceable(48)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.391
  %4 = load i32, i32* @y.392
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %167

; <label>:16:                                     ; preds = %2, %167
  %17 = alloca %"class.std::_Rb_tree"*, align 8
  %18 = alloca %"class.std::_Rb_tree"*, align 8
  %19 = alloca %"class.std::allocator.6", align 1
  %20 = alloca i8*
  %21 = alloca i32
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %17, align 8
  store %"class.std::_Rb_tree"* %1, %"class.std::_Rb_tree"** %18, align 8
  %22 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %17, align 8
  %23 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %22, i32 0, i32 0
  %24 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %18, align 8
  %25 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %25, i32 0, i32 0
  %27 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %18, align 8
  %28 = call dereferenceable(1) %"class.std::allocator.6"* @_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %27) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaISt13_Rb_tree_nodeIcEEE17_S_select_on_copyERKS3_(%"class.std::allocator.6"* sret %19, %"class.std::allocator.6"* dereferenceable(1) %28)
  %29 = load i32, i32* @x.391
  %30 = load i32, i32* @y.392
  %31 = add i32 %29, 1528228366
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, 1528228366
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  br i1 %41, label %43, label %167

; <label>:43:                                     ; preds = %16
  invoke void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_Rb_tree_implIS3_Lb1EEC2ERKS3_OSaISt13_Rb_tree_nodeIcEE(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %23, %"struct.std::less"* dereferenceable(1) %26, %"class.std::allocator.6"* dereferenceable(1) %19)
          to label %44 unwind label %111

; <label>:44:                                     ; preds = %43
  call void @_ZNSaISt13_Rb_tree_nodeIcEED2Ev(%"class.std::allocator.6"* %19) #3
  %45 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %18, align 8
  %46 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_M_rootEv(%"class.std::_Rb_tree"* %45) #3
  %47 = icmp ne %"struct.std::_Rb_tree_node_base"* %46, null
  br i1 %47, label %48, label %119

; <label>:48:                                     ; preds = %44
  %49 = load i32, i32* @x.391
  %50 = load i32, i32* @y.392
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  br i1 %60, label %62, label %180

; <label>:62:                                     ; preds = %48, %180
  %63 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %18, align 8
  %64 = call %"struct.std::_Rb_tree_node"* @_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_M_beginEv(%"class.std::_Rb_tree"* %63) #3
  %65 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE6_M_endEv(%"class.std::_Rb_tree"* %22) #3
  %66 = load i32, i32* @x.391
  %67 = load i32, i32* @y.392
  %68 = sub i32 %66, -840410063
  %69 = sub i32 %68, 1
  %70 = add i32 %69, -840410063
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 false, true
  %79 = and i1 %76, false
  %80 = and i1 %74, %78
  %81 = and i1 %77, false
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 false, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  br i1 %90, label %92, label %180

; <label>:92:                                     ; preds = %62
  %93 = invoke %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_M_copyEPKSt13_Rb_tree_nodeIcEPS7_(%"class.std::_Rb_tree"* %22, %"struct.std::_Rb_tree_node"* %64, %"struct.std::_Rb_tree_node"* %65)
          to label %94 unwind label %115

; <label>:94:                                     ; preds = %92
  %95 = bitcast %"struct.std::_Rb_tree_node"* %93 to %"struct.std::_Rb_tree_node_base"*
  %96 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_M_rootEv(%"class.std::_Rb_tree"* %22) #3
  store %"struct.std::_Rb_tree_node_base"* %95, %"struct.std::_Rb_tree_node_base"** %96, align 8
  %97 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_M_rootEv(%"class.std::_Rb_tree"* %22) #3
  %98 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %97, align 8
  %99 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE10_S_minimumEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %98) #3
  %100 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE11_M_leftmostEv(%"class.std::_Rb_tree"* %22) #3
  store %"struct.std::_Rb_tree_node_base"* %99, %"struct.std::_Rb_tree_node_base"** %100, align 8
  %101 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_M_rootEv(%"class.std::_Rb_tree"* %22) #3
  %102 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %101, align 8
  %103 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE10_S_maximumEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %102) #3
  %104 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE12_M_rightmostEv(%"class.std::_Rb_tree"* %22) #3
  store %"struct.std::_Rb_tree_node_base"* %103, %"struct.std::_Rb_tree_node_base"** %104, align 8
  %105 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %18, align 8
  %106 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %105, i32 0, i32 0
  %107 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %106, i32 0, i32 2
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %22, i32 0, i32 0
  %110 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %109, i32 0, i32 2
  store i64 %108, i64* %110, align 8
  br label %119

; <label>:111:                                    ; preds = %43
  %112 = landingpad { i8*, i32 }
          cleanup
  %113 = extractvalue { i8*, i32 } %112, 0
  store i8* %113, i8** %20, align 8
  %114 = extractvalue { i8*, i32 } %112, 1
  store i32 %114, i32* %21, align 4
  call void @_ZNSaISt13_Rb_tree_nodeIcEED2Ev(%"class.std::allocator.6"* %19) #3
  br label %162

; <label>:115:                                    ; preds = %92
  %116 = landingpad { i8*, i32 }
          cleanup
  %117 = extractvalue { i8*, i32 } %116, 0
  store i8* %117, i8** %20, align 8
  %118 = extractvalue { i8*, i32 } %116, 1
  store i32 %118, i32* %21, align 4
  call void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_Rb_tree_implIS3_Lb1EED2Ev(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %23) #3
  br label %162

; <label>:119:                                    ; preds = %94, %44
  %120 = load i32, i32* @x.391
  %121 = load i32, i32* @y.392
  %122 = add i32 %120, 2118224150
  %123 = sub i32 %122, 1
  %124 = sub i32 %123, 2118224150
  %125 = sub i32 %120, 1
  %126 = mul i32 %120, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %121, 10
  %130 = and i1 %128, %129
  %131 = xor i1 %128, %129
  %132 = or i1 %130, %131
  %133 = or i1 %128, %129
  br i1 %132, label %134, label %184

; <label>:134:                                    ; preds = %119, %184
  %135 = load i32, i32* @x.391
  %136 = load i32, i32* @y.392
  %137 = add i32 %135, -396958951
  %138 = sub i32 %137, 1
  %139 = sub i32 %138, -396958951
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = xor i1 %143, true
  %146 = xor i1 %144, true
  %147 = xor i1 false, true
  %148 = and i1 %145, false
  %149 = and i1 %143, %147
  %150 = and i1 %146, false
  %151 = and i1 %144, %147
  %152 = or i1 %148, %149
  %153 = or i1 %150, %151
  %154 = xor i1 %152, %153
  %155 = or i1 %145, %146
  %156 = xor i1 %155, true
  %157 = or i1 false, %147
  %158 = and i1 %156, %157
  %159 = or i1 %154, %158
  %160 = or i1 %143, %144
  br i1 %159, label %161, label %184

; <label>:161:                                    ; preds = %134
  ret void

; <label>:162:                                    ; preds = %115, %111
  %163 = load i8*, i8** %20, align 8
  %164 = load i32, i32* %21, align 4
  %165 = insertvalue { i8*, i32 } undef, i8* %163, 0
  %166 = insertvalue { i8*, i32 } %165, i32 %164, 1
  resume { i8*, i32 } %166

; <label>:167:                                    ; preds = %16, %2
  %168 = alloca %"class.std::_Rb_tree"*, align 8
  %169 = alloca %"class.std::_Rb_tree"*, align 8
  %170 = alloca %"class.std::allocator.6", align 1
  %171 = alloca i8*
  %172 = alloca i32
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %168, align 8
  store %"class.std::_Rb_tree"* %1, %"class.std::_Rb_tree"** %169, align 8
  %173 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %168, align 8
  %174 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %173, i32 0, i32 0
  %175 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %169, align 8
  %176 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %175, i32 0, i32 0
  %177 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %176, i32 0, i32 0
  %178 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %169, align 8
  %179 = call dereferenceable(1) %"class.std::allocator.6"* @_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %178) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaISt13_Rb_tree_nodeIcEEE17_S_select_on_copyERKS3_(%"class.std::allocator.6"* sret %170, %"class.std::allocator.6"* dereferenceable(1) %179)
  br label %16

; <label>:180:                                    ; preds = %62, %48
  %181 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %18, align 8
  %182 = call %"struct.std::_Rb_tree_node"* @_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_M_beginEv(%"class.std::_Rb_tree"* %181) #3
  %183 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE6_M_endEv(%"class.std::_Rb_tree"* %22) #3
  br label %62

; <label>:184:                                    ; preds = %134, %119
  br label %134
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaISt13_Rb_tree_nodeIcEEE17_S_select_on_copyERKS3_(%"class.std::allocator.6"* noalias sret, %"class.std::allocator.6"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.6"*, align 8
  store %"class.std::allocator.6"* %1, %"class.std::allocator.6"** %3, align 8
  %4 = load %"class.std::allocator.6"*, %"class.std::allocator.6"** %3, align 8
  call void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIcEEE37select_on_container_copy_constructionERKS2_(%"class.std::allocator.6"* sret %0, %"class.std::allocator.6"* dereferenceable(1) %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.6"* @_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.6"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.395
  %6 = load i32, i32* @y.396
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1203902004, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %77
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1203902004, label %18
    i32 1897639530, label %38
    i32 -441289308, label %70
    i32 -8608927, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %77

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1897639530, i32 -8608927
  store i32 %37, i32* %14
  br label %77

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %39, align 8
  %40 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %39, align 8
  %41 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %40, i32 0, i32 0
  %42 = bitcast %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %41 to %"class.std::allocator.6"*
  store %"class.std::allocator.6"* %42, %"class.std::allocator.6"** %2
  %43 = load i32, i32* @x.395
  %44 = load i32, i32* @y.396
  %45 = sub i32 %43, -512142990
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -512142990
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -441289308, i32 -8608927
  store i32 %69, i32* %14
  br label %77

; <label>:70:                                     ; preds = %15
  %71 = load volatile %"class.std::allocator.6"*, %"class.std::allocator.6"** %2
  ret %"class.std::allocator.6"* %71

; <label>:72:                                     ; preds = %15
  %73 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %73, align 8
  %74 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %73, align 8
  %75 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %74, i32 0, i32 0
  %76 = bitcast %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %75 to %"class.std::allocator.6"*
  store i32 1897639530, i32* %14
  br label %77

; <label>:77:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_Rb_tree_implIS3_Lb1EEC2ERKS3_OSaISt13_Rb_tree_nodeIcEE(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"*, %"struct.std::less"* dereferenceable(1), %"class.std::allocator.6"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"*, align 8
  %5 = alloca %"struct.std::less"*, align 8
  %6 = alloca %"class.std::allocator.6"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"** %4, align 8
  store %"struct.std::less"* %1, %"struct.std::less"** %5, align 8
  store %"class.std::allocator.6"* %2, %"class.std::allocator.6"** %6, align 8
  %9 = load %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"** %4, align 8
  %10 = bitcast %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %9 to %"class.std::allocator.6"*
  %11 = load %"class.std::allocator.6"*, %"class.std::allocator.6"** %6, align 8
  %12 = call dereferenceable(1) %"class.std::allocator.6"* @_ZSt4moveIRSaISt13_Rb_tree_nodeIcEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.6"* dereferenceable(1) %11) #3
  call void @_ZNSaISt13_Rb_tree_nodeIcEEC2ERKS1_(%"class.std::allocator.6"* %10, %"class.std::allocator.6"* dereferenceable(1) %12) #3
  %13 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %9, i32 0, i32 0
  %14 = load %"struct.std::less"*, %"struct.std::less"** %5, align 8
  %15 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %9, i32 0, i32 1
  %16 = bitcast %"struct.std::_Rb_tree_node_base"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* %16, i8 0, i64 32, i32 8, i1 false)
  %17 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %9, i32 0, i32 2
  store i64 0, i64* %17, align 8
  invoke void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_Rb_tree_implIS3_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %9)
          to label %18 unwind label %19

; <label>:18:                                     ; preds = %3
  ret void

; <label>:19:                                     ; preds = %3
  %20 = load i32, i32* @x.397
  %21 = load i32, i32* @y.398
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  br i1 %31, label %33, label %69

; <label>:33:                                     ; preds = %19, %69
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  store i8* %35, i8** %7, align 8
  %36 = extractvalue { i8*, i32 } %34, 1
  store i32 %36, i32* %8, align 4
  %37 = bitcast %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %9 to %"class.std::allocator.6"*
  call void @_ZNSaISt13_Rb_tree_nodeIcEED2Ev(%"class.std::allocator.6"* %37) #3
  %38 = load i32, i32* @x.397
  %39 = load i32, i32* @y.398
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  br i1 %61, label %63, label %69

; <label>:63:                                     ; preds = %33
  br label %64

; <label>:64:                                     ; preds = %63
  %65 = load i8*, i8** %7, align 8
  %66 = load i32, i32* %8, align 4
  %67 = insertvalue { i8*, i32 } undef, i8* %65, 0
  %68 = insertvalue { i8*, i32 } %67, i32 %66, 1
  resume { i8*, i32 } %68

; <label>:69:                                     ; preds = %33, %19
  %70 = landingpad { i8*, i32 }
          cleanup
  %71 = extractvalue { i8*, i32 } %70, 0
  store i8* %71, i8** %7, align 8
  %72 = extractvalue { i8*, i32 } %70, 1
  store i32 %72, i32* %8, align 4
  %73 = bitcast %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %9 to %"class.std::allocator.6"*
  call void @_ZNSaISt13_Rb_tree_nodeIcEED2Ev(%"class.std::allocator.6"* %73) #3
  br label %33
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeIcEED2Ev(%"class.std::allocator.6"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.6"*, align 8
  store %"class.std::allocator.6"* %0, %"class.std::allocator.6"** %2, align 8
  %3 = load %"class.std::allocator.6"*, %"class.std::allocator.6"** %2, align 8
  %4 = bitcast %"class.std::allocator.6"* %3 to %"class.__gnu_cxx::new_allocator.7"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEED2Ev(%"class.__gnu_cxx::new_allocator.7"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_M_rootEv(%"class.std::_Rb_tree"*) #5 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %5, i32 0, i32 1
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  ret %"struct.std::_Rb_tree_node_base"* %7
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_M_copyEPKSt13_Rb_tree_nodeIcEPS7_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %4 = alloca %"class.std::_Rb_tree"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %6 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %7 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node", align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %4, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
  store %"struct.std::_Rb_tree_node"* %2, %"struct.std::_Rb_tree_node"** %6, align 8
  %8 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  call void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE11_Alloc_nodeC2ERS5_(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* %7, %"class.std::_Rb_tree"* dereferenceable(48) %8)
  %9 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %10 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %11 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_M_copyINS5_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIcEPKS9_SA_RT_(%"class.std::_Rb_tree"* %8, %"struct.std::_Rb_tree_node"* %9, %"struct.std::_Rb_tree_node"* %10, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* dereferenceable(8) %7)
  ret %"struct.std::_Rb_tree_node"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_M_beginEv(%"class.std::_Rb_tree"*) #5 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %5, i32 0, i32 1
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = bitcast %"struct.std::_Rb_tree_node_base"* %7 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE10_S_minimumEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt18_Rb_tree_node_base10_S_minimumEPS_(%"struct.std::_Rb_tree_node_base"* %3) #3
  ret %"struct.std::_Rb_tree_node_base"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE10_S_maximumEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt18_Rb_tree_node_base10_S_maximumEPS_(%"struct.std::_Rb_tree_node_base"* %3) #3
  ret %"struct.std::_Rb_tree_node_base"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIcEEE37select_on_container_copy_constructionERKS2_(%"class.std::allocator.6"* noalias sret, %"class.std::allocator.6"* dereferenceable(1)) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.411
  %6 = load i32, i32* @y.412
  %7 = sub i32 %5, 988707764
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 988707764
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1934447990, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1934447990, label %19
    i32 252557476, label %27
    i32 -2077249856, label %57
    i32 1098763448, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 252557476, i32 1098763448
  store i32 %26, i32* %15
  br label %61

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.6"*, align 8
  store %"class.std::allocator.6"* %1, %"class.std::allocator.6"** %28, align 8
  %29 = load %"class.std::allocator.6"*, %"class.std::allocator.6"** %28, align 8
  call void @_ZNSaISt13_Rb_tree_nodeIcEEC2ERKS1_(%"class.std::allocator.6"* %0, %"class.std::allocator.6"* dereferenceable(1) %29) #3
  %30 = load i32, i32* @x.411
  %31 = load i32, i32* @y.412
  %32 = sub i32 %30, 1551268502
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 1551268502
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -2077249856, i32 1098763448
  store i32 %56, i32* %15
  br label %61

; <label>:57:                                     ; preds = %16
  ret void

; <label>:58:                                     ; preds = %16
  %59 = alloca %"class.std::allocator.6"*, align 8
  store %"class.std::allocator.6"* %1, %"class.std::allocator.6"** %59, align 8
  %60 = load %"class.std::allocator.6"*, %"class.std::allocator.6"** %59, align 8
  call void @_ZNSaISt13_Rb_tree_nodeIcEEC2ERKS1_(%"class.std::allocator.6"* %0, %"class.std::allocator.6"* dereferenceable(1) %60) #3
  store i32 252557476, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeIcEEC2ERKS1_(%"class.std::allocator.6"*, %"class.std::allocator.6"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.413
  %6 = load i32, i32* @y.414
  %7 = add i32 %5, 1167930131
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1167930131
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1715775255, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1715775255, label %19
    i32 648782378, label %39
    i32 -2124469359, label %60
    i32 -2139396677, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 648782378, i32 -2139396677
  store i32 %38, i32* %15
  br label %68

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.6"*, align 8
  %41 = alloca %"class.std::allocator.6"*, align 8
  store %"class.std::allocator.6"* %0, %"class.std::allocator.6"** %40, align 8
  store %"class.std::allocator.6"* %1, %"class.std::allocator.6"** %41, align 8
  %42 = load %"class.std::allocator.6"*, %"class.std::allocator.6"** %40, align 8
  %43 = bitcast %"class.std::allocator.6"* %42 to %"class.__gnu_cxx::new_allocator.7"*
  %44 = load %"class.std::allocator.6"*, %"class.std::allocator.6"** %41, align 8
  %45 = bitcast %"class.std::allocator.6"* %44 to %"class.__gnu_cxx::new_allocator.7"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.7"* %43, %"class.__gnu_cxx::new_allocator.7"* dereferenceable(1) %45) #3
  %46 = load i32, i32* @x.413
  %47 = load i32, i32* @y.414
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -2124469359, i32 -2139396677
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::allocator.6"*, align 8
  %63 = alloca %"class.std::allocator.6"*, align 8
  store %"class.std::allocator.6"* %0, %"class.std::allocator.6"** %62, align 8
  store %"class.std::allocator.6"* %1, %"class.std::allocator.6"** %63, align 8
  %64 = load %"class.std::allocator.6"*, %"class.std::allocator.6"** %62, align 8
  %65 = bitcast %"class.std::allocator.6"* %64 to %"class.__gnu_cxx::new_allocator.7"*
  %66 = load %"class.std::allocator.6"*, %"class.std::allocator.6"** %63, align 8
  %67 = bitcast %"class.std::allocator.6"* %66 to %"class.__gnu_cxx::new_allocator.7"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.7"* %65, %"class.__gnu_cxx::new_allocator.7"* dereferenceable(1) %67) #3
  store i32 648782378, i32* %15
  br label %68

; <label>:68:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.6"* @_ZSt4moveIRSaISt13_Rb_tree_nodeIcEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.6"* dereferenceable(1)) #5 comdat {
  %2 = alloca %"class.std::allocator.6"*, align 8
  store %"class.std::allocator.6"* %0, %"class.std::allocator.6"** %2, align 8
  %3 = load %"class.std::allocator.6"*, %"class.std::allocator.6"** %2, align 8
  ret %"class.std::allocator.6"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_M_copyINS5_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIcEPKS9_SA_RT_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.417
  %6 = load i32, i32* @y.418
  %7 = sub i32 %5, -1090654868
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1090654868
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %6, 10
  %15 = xor i1 %13, true
  %16 = xor i1 %14, true
  %17 = xor i1 false, true
  %18 = and i1 %15, false
  %19 = and i1 %13, %17
  %20 = and i1 %16, false
  %21 = and i1 %14, %17
  %22 = or i1 %18, %19
  %23 = or i1 %20, %21
  %24 = xor i1 %22, %23
  %25 = or i1 %15, %16
  %26 = xor i1 %25, true
  %27 = or i1 false, %17
  %28 = and i1 %26, %27
  %29 = or i1 %24, %28
  %30 = or i1 %13, %14
  br i1 %29, label %31, label %370

; <label>:31:                                     ; preds = %4, %370
  %32 = alloca %"class.std::_Rb_tree"*, align 8
  %33 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %34 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %35 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"*, align 8
  %36 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %37 = alloca i8*
  %38 = alloca i32
  %39 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %32, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %33, align 8
  store %"struct.std::_Rb_tree_node"* %2, %"struct.std::_Rb_tree_node"** %34, align 8
  store %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* %3, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"** %35, align 8
  %40 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %32, align 8
  %41 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %33, align 8
  %42 = load %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"** %35, align 8
  %43 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_M_clone_nodeINS5_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIcEPKS9_RT_(%"class.std::_Rb_tree"* %40, %"struct.std::_Rb_tree_node"* %41, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* dereferenceable(8) %42)
  store %"struct.std::_Rb_tree_node"* %43, %"struct.std::_Rb_tree_node"** %36, align 8
  %44 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %34, align 8
  %45 = bitcast %"struct.std::_Rb_tree_node"* %44 to %"struct.std::_Rb_tree_node_base"*
  %46 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %36, align 8
  %47 = bitcast %"struct.std::_Rb_tree_node"* %46 to %"struct.std::_Rb_tree_node_base"*
  %48 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %47, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %45, %"struct.std::_Rb_tree_node_base"** %48, align 8
  %49 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %33, align 8
  %50 = bitcast %"struct.std::_Rb_tree_node"* %49 to %"struct.std::_Rb_tree_node_base"*
  %51 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %50, i32 0, i32 3
  %52 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %51, align 8
  %53 = icmp ne %"struct.std::_Rb_tree_node_base"* %52, null
  %54 = load i32, i32* @x.417
  %55 = load i32, i32* @y.418
  %56 = sub i32 %54, 748658572
  %57 = sub i32 %56, 1
  %58 = add i32 %57, 748658572
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  br i1 %66, label %68, label %370

; <label>:68:                                     ; preds = %31
  br i1 %53, label %69, label %185

; <label>:69:                                     ; preds = %68
  %70 = load i32, i32* @x.417
  %71 = load i32, i32* @y.418
  %72 = add i32 %70, -175043681
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, -175043681
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  br i1 %82, label %84, label %393

; <label>:84:                                     ; preds = %69, %393
  %85 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %33, align 8
  %86 = bitcast %"struct.std::_Rb_tree_node"* %85 to %"struct.std::_Rb_tree_node_base"*
  %87 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_S_rightEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %86) #3
  %88 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %36, align 8
  %89 = load %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"** %35, align 8
  %90 = load i32, i32* @x.417
  %91 = load i32, i32* @y.418
  %92 = sub i32 0, 1
  %93 = add i32 %90, %92
  %94 = sub i32 %90, 1
  %95 = mul i32 %90, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %91, 10
  %99 = xor i1 %97, true
  %100 = xor i1 %98, true
  %101 = xor i1 false, true
  %102 = and i1 %99, false
  %103 = and i1 %97, %101
  %104 = and i1 %100, false
  %105 = and i1 %98, %101
  %106 = or i1 %102, %103
  %107 = or i1 %104, %105
  %108 = xor i1 %106, %107
  %109 = or i1 %99, %100
  %110 = xor i1 %109, true
  %111 = or i1 false, %101
  %112 = and i1 %110, %111
  %113 = or i1 %108, %112
  %114 = or i1 %97, %98
  br i1 %113, label %115, label %393

; <label>:115:                                    ; preds = %84
  %116 = invoke %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_M_copyINS5_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIcEPKS9_SA_RT_(%"class.std::_Rb_tree"* %40, %"struct.std::_Rb_tree_node"* %87, %"struct.std::_Rb_tree_node"* %88, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* dereferenceable(8) %89)
          to label %117 unwind label %122

; <label>:117:                                    ; preds = %115
  %118 = bitcast %"struct.std::_Rb_tree_node"* %116 to %"struct.std::_Rb_tree_node_base"*
  %119 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %36, align 8
  %120 = bitcast %"struct.std::_Rb_tree_node"* %119 to %"struct.std::_Rb_tree_node_base"*
  %121 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %120, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %118, %"struct.std::_Rb_tree_node_base"** %121, align 8
  br label %185

; <label>:122:                                    ; preds = %254, %193, %115
  %123 = landingpad { i8*, i32 }
          catch i8* null
  %124 = extractvalue { i8*, i32 } %123, 0
  store i8* %124, i8** %37, align 8
  %125 = extractvalue { i8*, i32 } %123, 1
  store i32 %125, i32* %38, align 4
  br label %126

; <label>:126:                                    ; preds = %122
  %127 = load i8*, i8** %37, align 8
  %128 = call i8* @__cxa_begin_catch(i8* %127) #3
  %129 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %36, align 8
  invoke void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_M_eraseEPSt13_Rb_tree_nodeIcE(%"class.std::_Rb_tree"* %40, %"struct.std::_Rb_tree_node"* %129)
          to label %130 unwind label %301

; <label>:130:                                    ; preds = %126
  %131 = load i32, i32* @x.417
  %132 = load i32, i32* @y.418
  %133 = sub i32 %131, -743759991
  %134 = sub i32 %133, 1
  %135 = add i32 %134, -743759991
  %136 = sub i32 %131, 1
  %137 = mul i32 %131, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %132, 10
  %141 = xor i1 %139, true
  %142 = xor i1 %140, true
  %143 = xor i1 true, true
  %144 = and i1 %141, true
  %145 = and i1 %139, %143
  %146 = and i1 %142, true
  %147 = and i1 %140, %143
  %148 = or i1 %144, %145
  %149 = or i1 %146, %147
  %150 = xor i1 %148, %149
  %151 = or i1 %141, %142
  %152 = xor i1 %151, true
  %153 = or i1 true, %143
  %154 = and i1 %152, %153
  %155 = or i1 %150, %154
  %156 = or i1 %139, %140
  br i1 %155, label %157, label %399

; <label>:157:                                    ; preds = %130, %399
  %158 = load i32, i32* @x.417
  %159 = load i32, i32* @y.418
  %160 = sub i32 %158, 1467204500
  %161 = sub i32 %160, 1
  %162 = add i32 %161, 1467204500
  %163 = sub i32 %158, 1
  %164 = mul i32 %158, %162
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %159, 10
  %168 = xor i1 %166, true
  %169 = xor i1 %167, true
  %170 = xor i1 true, true
  %171 = and i1 %168, true
  %172 = and i1 %166, %170
  %173 = and i1 %169, true
  %174 = and i1 %167, %170
  %175 = or i1 %171, %172
  %176 = or i1 %173, %174
  %177 = xor i1 %175, %176
  %178 = or i1 %168, %169
  %179 = xor i1 %178, true
  %180 = or i1 true, %170
  %181 = and i1 %179, %180
  %182 = or i1 %177, %181
  %183 = or i1 %166, %167
  br i1 %182, label %184, label %399

; <label>:184:                                    ; preds = %157
  invoke void @__cxa_rethrow() #14
          to label %369 unwind label %301

; <label>:185:                                    ; preds = %117, %68
  %186 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %36, align 8
  store %"struct.std::_Rb_tree_node"* %186, %"struct.std::_Rb_tree_node"** %34, align 8
  %187 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %33, align 8
  %188 = bitcast %"struct.std::_Rb_tree_node"* %187 to %"struct.std::_Rb_tree_node_base"*
  %189 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_S_leftEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %188) #3
  store %"struct.std::_Rb_tree_node"* %189, %"struct.std::_Rb_tree_node"** %33, align 8
  br label %190

; <label>:190:                                    ; preds = %266, %185
  %191 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %33, align 8
  %192 = icmp ne %"struct.std::_Rb_tree_node"* %191, null
  br i1 %192, label %193, label %271

; <label>:193:                                    ; preds = %190
  %194 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %33, align 8
  %195 = load %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"** %35, align 8
  %196 = invoke %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_M_clone_nodeINS5_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIcEPKS9_RT_(%"class.std::_Rb_tree"* %40, %"struct.std::_Rb_tree_node"* %194, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* dereferenceable(8) %195)
          to label %197 unwind label %122

; <label>:197:                                    ; preds = %193
  %198 = load i32, i32* @x.417
  %199 = load i32, i32* @y.418
  %200 = sub i32 %198, 1132988172
  %201 = sub i32 %200, 1
  %202 = add i32 %201, 1132988172
  %203 = sub i32 %198, 1
  %204 = mul i32 %198, %202
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %199, 10
  %208 = and i1 %206, %207
  %209 = xor i1 %206, %207
  %210 = or i1 %208, %209
  %211 = or i1 %206, %207
  br i1 %210, label %212, label %400

; <label>:212:                                    ; preds = %197, %400
  store %"struct.std::_Rb_tree_node"* %196, %"struct.std::_Rb_tree_node"** %39, align 8
  %213 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %39, align 8
  %214 = bitcast %"struct.std::_Rb_tree_node"* %213 to %"struct.std::_Rb_tree_node_base"*
  %215 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %34, align 8
  %216 = bitcast %"struct.std::_Rb_tree_node"* %215 to %"struct.std::_Rb_tree_node_base"*
  %217 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %216, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %214, %"struct.std::_Rb_tree_node_base"** %217, align 8
  %218 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %34, align 8
  %219 = bitcast %"struct.std::_Rb_tree_node"* %218 to %"struct.std::_Rb_tree_node_base"*
  %220 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %39, align 8
  %221 = bitcast %"struct.std::_Rb_tree_node"* %220 to %"struct.std::_Rb_tree_node_base"*
  %222 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %221, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %219, %"struct.std::_Rb_tree_node_base"** %222, align 8
  %223 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %33, align 8
  %224 = bitcast %"struct.std::_Rb_tree_node"* %223 to %"struct.std::_Rb_tree_node_base"*
  %225 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %224, i32 0, i32 3
  %226 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %225, align 8
  %227 = icmp ne %"struct.std::_Rb_tree_node_base"* %226, null
  %228 = load i32, i32* @x.417
  %229 = load i32, i32* @y.418
  %230 = sub i32 0, 1
  %231 = add i32 %228, %230
  %232 = sub i32 %228, 1
  %233 = mul i32 %228, %231
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %229, 10
  %237 = xor i1 %235, true
  %238 = xor i1 %236, true
  %239 = xor i1 true, true
  %240 = and i1 %237, true
  %241 = and i1 %235, %239
  %242 = and i1 %238, true
  %243 = and i1 %236, %239
  %244 = or i1 %240, %241
  %245 = or i1 %242, %243
  %246 = xor i1 %244, %245
  %247 = or i1 %237, %238
  %248 = xor i1 %247, true
  %249 = or i1 true, %239
  %250 = and i1 %248, %249
  %251 = or i1 %246, %250
  %252 = or i1 %235, %236
  br i1 %251, label %253, label %400

; <label>:253:                                    ; preds = %212
  br i1 %227, label %254, label %266

; <label>:254:                                    ; preds = %253
  %255 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %33, align 8
  %256 = bitcast %"struct.std::_Rb_tree_node"* %255 to %"struct.std::_Rb_tree_node_base"*
  %257 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_S_rightEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %256) #3
  %258 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %39, align 8
  %259 = load %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"** %35, align 8
  %260 = invoke %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_M_copyINS5_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIcEPKS9_SA_RT_(%"class.std::_Rb_tree"* %40, %"struct.std::_Rb_tree_node"* %257, %"struct.std::_Rb_tree_node"* %258, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* dereferenceable(8) %259)
          to label %261 unwind label %122

; <label>:261:                                    ; preds = %254
  %262 = bitcast %"struct.std::_Rb_tree_node"* %260 to %"struct.std::_Rb_tree_node_base"*
  %263 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %39, align 8
  %264 = bitcast %"struct.std::_Rb_tree_node"* %263 to %"struct.std::_Rb_tree_node_base"*
  %265 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %264, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %262, %"struct.std::_Rb_tree_node_base"** %265, align 8
  br label %266

; <label>:266:                                    ; preds = %261, %253
  %267 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %39, align 8
  store %"struct.std::_Rb_tree_node"* %267, %"struct.std::_Rb_tree_node"** %34, align 8
  %268 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %33, align 8
  %269 = bitcast %"struct.std::_Rb_tree_node"* %268 to %"struct.std::_Rb_tree_node_base"*
  %270 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_S_leftEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %269) #3
  store %"struct.std::_Rb_tree_node"* %270, %"struct.std::_Rb_tree_node"** %33, align 8
  br label %190

; <label>:271:                                    ; preds = %190
  %272 = load i32, i32* @x.417
  %273 = load i32, i32* @y.418
  %274 = sub i32 0, 1
  %275 = add i32 %272, %274
  %276 = sub i32 %272, 1
  %277 = mul i32 %272, %275
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %273, 10
  %281 = and i1 %279, %280
  %282 = xor i1 %279, %280
  %283 = or i1 %281, %282
  %284 = or i1 %279, %280
  br i1 %283, label %285, label %416

; <label>:285:                                    ; preds = %271, %416
  %286 = load i32, i32* @x.417
  %287 = load i32, i32* @y.418
  %288 = add i32 %286, -1410703255
  %289 = sub i32 %288, 1
  %290 = sub i32 %289, -1410703255
  %291 = sub i32 %286, 1
  %292 = mul i32 %286, %290
  %293 = urem i32 %292, 2
  %294 = icmp eq i32 %293, 0
  %295 = icmp slt i32 %287, 10
  %296 = and i1 %294, %295
  %297 = xor i1 %294, %295
  %298 = or i1 %296, %297
  %299 = or i1 %294, %295
  br i1 %298, label %300, label %416

; <label>:300:                                    ; preds = %285
  br label %359

; <label>:301:                                    ; preds = %184, %126
  %302 = load i32, i32* @x.417
  %303 = load i32, i32* @y.418
  %304 = sub i32 0, 1
  %305 = add i32 %302, %304
  %306 = sub i32 %302, 1
  %307 = mul i32 %302, %305
  %308 = urem i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %303, 10
  %311 = xor i1 %309, true
  %312 = xor i1 %310, true
  %313 = xor i1 false, true
  %314 = and i1 %311, false
  %315 = and i1 %309, %313
  %316 = and i1 %312, false
  %317 = and i1 %310, %313
  %318 = or i1 %314, %315
  %319 = or i1 %316, %317
  %320 = xor i1 %318, %319
  %321 = or i1 %311, %312
  %322 = xor i1 %321, true
  %323 = or i1 false, %313
  %324 = and i1 %322, %323
  %325 = or i1 %320, %324
  %326 = or i1 %309, %310
  br i1 %325, label %327, label %417

; <label>:327:                                    ; preds = %301, %417
  %328 = landingpad { i8*, i32 }
          cleanup
  %329 = extractvalue { i8*, i32 } %328, 0
  store i8* %329, i8** %37, align 8
  %330 = extractvalue { i8*, i32 } %328, 1
  store i32 %330, i32* %38, align 4
  %331 = load i32, i32* @x.417
  %332 = load i32, i32* @y.418
  %333 = sub i32 %331, 1506802998
  %334 = sub i32 %333, 1
  %335 = add i32 %334, 1506802998
  %336 = sub i32 %331, 1
  %337 = mul i32 %331, %335
  %338 = urem i32 %337, 2
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %332, 10
  %341 = xor i1 %339, true
  %342 = xor i1 %340, true
  %343 = xor i1 true, true
  %344 = and i1 %341, true
  %345 = and i1 %339, %343
  %346 = and i1 %342, true
  %347 = and i1 %340, %343
  %348 = or i1 %344, %345
  %349 = or i1 %346, %347
  %350 = xor i1 %348, %349
  %351 = or i1 %341, %342
  %352 = xor i1 %351, true
  %353 = or i1 true, %343
  %354 = and i1 %352, %353
  %355 = or i1 %350, %354
  %356 = or i1 %339, %340
  br i1 %355, label %357, label %417

; <label>:357:                                    ; preds = %327
  invoke void @__cxa_end_catch()
          to label %358 unwind label %366

; <label>:358:                                    ; preds = %357
  br label %361

; <label>:359:                                    ; preds = %300
  %360 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %36, align 8
  ret %"struct.std::_Rb_tree_node"* %360

; <label>:361:                                    ; preds = %358
  %362 = load i8*, i8** %37, align 8
  %363 = load i32, i32* %38, align 4
  %364 = insertvalue { i8*, i32 } undef, i8* %362, 0
  %365 = insertvalue { i8*, i32 } %364, i32 %363, 1
  resume { i8*, i32 } %365

; <label>:366:                                    ; preds = %357
  %367 = landingpad { i8*, i32 }
          catch i8* null
  %368 = extractvalue { i8*, i32 } %367, 0
  call void @__clang_call_terminate(i8* %368) #12
  unreachable

; <label>:369:                                    ; preds = %184
  unreachable

; <label>:370:                                    ; preds = %31, %4
  %371 = alloca %"class.std::_Rb_tree"*, align 8
  %372 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %373 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %374 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"*, align 8
  %375 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %376 = alloca i8*
  %377 = alloca i32
  %378 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %371, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %372, align 8
  store %"struct.std::_Rb_tree_node"* %2, %"struct.std::_Rb_tree_node"** %373, align 8
  store %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* %3, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"** %374, align 8
  %379 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %371, align 8
  %380 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %372, align 8
  %381 = load %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"** %374, align 8
  %382 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_M_clone_nodeINS5_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIcEPKS9_RT_(%"class.std::_Rb_tree"* %379, %"struct.std::_Rb_tree_node"* %380, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* dereferenceable(8) %381)
  store %"struct.std::_Rb_tree_node"* %382, %"struct.std::_Rb_tree_node"** %375, align 8
  %383 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %373, align 8
  %384 = bitcast %"struct.std::_Rb_tree_node"* %383 to %"struct.std::_Rb_tree_node_base"*
  %385 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %375, align 8
  %386 = bitcast %"struct.std::_Rb_tree_node"* %385 to %"struct.std::_Rb_tree_node_base"*
  %387 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %386, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %384, %"struct.std::_Rb_tree_node_base"** %387, align 8
  %388 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %372, align 8
  %389 = bitcast %"struct.std::_Rb_tree_node"* %388 to %"struct.std::_Rb_tree_node_base"*
  %390 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %389, i32 0, i32 3
  %391 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %390, align 8
  %392 = icmp ne %"struct.std::_Rb_tree_node_base"* %391, null
  br label %31

; <label>:393:                                    ; preds = %84, %69
  %394 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %33, align 8
  %395 = bitcast %"struct.std::_Rb_tree_node"* %394 to %"struct.std::_Rb_tree_node_base"*
  %396 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_S_rightEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %395) #3
  %397 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %36, align 8
  %398 = load %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"** %35, align 8
  br label %84

; <label>:399:                                    ; preds = %157, %130
  br label %157

; <label>:400:                                    ; preds = %212, %197
  store %"struct.std::_Rb_tree_node"* %196, %"struct.std::_Rb_tree_node"** %39, align 8
  %401 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %39, align 8
  %402 = bitcast %"struct.std::_Rb_tree_node"* %401 to %"struct.std::_Rb_tree_node_base"*
  %403 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %34, align 8
  %404 = bitcast %"struct.std::_Rb_tree_node"* %403 to %"struct.std::_Rb_tree_node_base"*
  %405 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %404, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %402, %"struct.std::_Rb_tree_node_base"** %405, align 8
  %406 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %34, align 8
  %407 = bitcast %"struct.std::_Rb_tree_node"* %406 to %"struct.std::_Rb_tree_node_base"*
  %408 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %39, align 8
  %409 = bitcast %"struct.std::_Rb_tree_node"* %408 to %"struct.std::_Rb_tree_node_base"*
  %410 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %409, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %407, %"struct.std::_Rb_tree_node_base"** %410, align 8
  %411 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %33, align 8
  %412 = bitcast %"struct.std::_Rb_tree_node"* %411 to %"struct.std::_Rb_tree_node_base"*
  %413 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %412, i32 0, i32 3
  %414 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %413, align 8
  %415 = icmp ne %"struct.std::_Rb_tree_node_base"* %414, null
  br label %212

; <label>:416:                                    ; preds = %285, %271
  br label %285

; <label>:417:                                    ; preds = %327, %301
  %418 = landingpad { i8*, i32 }
          cleanup
  %419 = extractvalue { i8*, i32 } %418, 0
  store i8* %419, i8** %37, align 8
  %420 = extractvalue { i8*, i32 } %418, 1
  store i32 %420, i32* %38, align 4
  br label %327
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_M_clone_nodeINS5_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIcEPKS9_RT_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Rb_tree_node"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.419
  %8 = load i32, i32* @y.420
  %9 = sub i32 %7, -1852238549
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -1852238549
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 194646181, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %93
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 194646181, label %21
    i32 -1431550803, label %29
    i32 -691422556, label %67
    i32 606205770, label %69
  ]

; <label>:20:                                     ; preds = %18
  br label %93

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1431550803, i32 606205770
  store i32 %28, i32* %17
  br label %93

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::_Rb_tree"*, align 8
  %31 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %32 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"*, align 8
  %33 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %30, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %31, align 8
  store %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* %2, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"** %32, align 8
  %34 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %30, align 8
  %35 = load %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"** %32, align 8
  %36 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %31, align 8
  %37 = call i8* @_ZNKSt13_Rb_tree_nodeIcE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %36)
  %38 = call %"struct.std::_Rb_tree_node"* @_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE11_Alloc_nodeclIRKcEEPSt13_Rb_tree_nodeIcEOT_(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* %35, i8* dereferenceable(1) %37)
  store %"struct.std::_Rb_tree_node"* %38, %"struct.std::_Rb_tree_node"** %33, align 8
  %39 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %31, align 8
  %40 = bitcast %"struct.std::_Rb_tree_node"* %39 to %"struct.std::_Rb_tree_node_base"*
  %41 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %40, i32 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %33, align 8
  %44 = bitcast %"struct.std::_Rb_tree_node"* %43 to %"struct.std::_Rb_tree_node_base"*
  %45 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %44, i32 0, i32 0
  store i32 %42, i32* %45, align 8
  %46 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %33, align 8
  %47 = bitcast %"struct.std::_Rb_tree_node"* %46 to %"struct.std::_Rb_tree_node_base"*
  %48 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %47, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %48, align 8
  %49 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %33, align 8
  %50 = bitcast %"struct.std::_Rb_tree_node"* %49 to %"struct.std::_Rb_tree_node_base"*
  %51 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %50, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %51, align 8
  %52 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %33, align 8
  store %"struct.std::_Rb_tree_node"* %52, %"struct.std::_Rb_tree_node"** %4
  %53 = load i32, i32* @x.419
  %54 = load i32, i32* @y.420
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 -691422556, i32 606205770
  store i32 %66, i32* %17
  br label %93

; <label>:67:                                     ; preds = %18
  %68 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4
  ret %"struct.std::_Rb_tree_node"* %68

; <label>:69:                                     ; preds = %18
  %70 = alloca %"class.std::_Rb_tree"*, align 8
  %71 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %72 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"*, align 8
  %73 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %70, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %71, align 8
  store %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* %2, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"** %72, align 8
  %74 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %70, align 8
  %75 = load %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"** %72, align 8
  %76 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %71, align 8
  %77 = call i8* @_ZNKSt13_Rb_tree_nodeIcE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %76)
  %78 = call %"struct.std::_Rb_tree_node"* @_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE11_Alloc_nodeclIRKcEEPSt13_Rb_tree_nodeIcEOT_(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* %75, i8* dereferenceable(1) %77)
  store %"struct.std::_Rb_tree_node"* %78, %"struct.std::_Rb_tree_node"** %73, align 8
  %79 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %71, align 8
  %80 = bitcast %"struct.std::_Rb_tree_node"* %79 to %"struct.std::_Rb_tree_node_base"*
  %81 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %80, i32 0, i32 0
  %82 = load i32, i32* %81, align 8
  %83 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %73, align 8
  %84 = bitcast %"struct.std::_Rb_tree_node"* %83 to %"struct.std::_Rb_tree_node_base"*
  %85 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %84, i32 0, i32 0
  store i32 %82, i32* %85, align 8
  %86 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %73, align 8
  %87 = bitcast %"struct.std::_Rb_tree_node"* %86 to %"struct.std::_Rb_tree_node_base"*
  %88 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %87, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %88, align 8
  %89 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %73, align 8
  %90 = bitcast %"struct.std::_Rb_tree_node"* %89 to %"struct.std::_Rb_tree_node_base"*
  %91 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %90, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %91, align 8
  %92 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %73, align 8
  store i32 -1431550803, i32* %17
  br label %93

; <label>:93:                                     ; preds = %69, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_S_rightEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 3
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_S_leftEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 2
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt18_Rb_tree_node_base10_S_minimumEPS_(%"struct.std::_Rb_tree_node_base"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %3, align 8
  %4 = alloca i32
  store i32 -214926392, i32* %4
  br label %5

; <label>:5:                                      ; preds = %1, %57
  %6 = load i32, i32* %4
  switch i32 %6, label %7 [
    i32 -214926392, label %8
    i32 -864617164, label %24
    i32 -1992860065, label %43
    i32 -920028331, label %46
    i32 324287976, label %50
    i32 514308179, label %52
  ]

; <label>:7:                                      ; preds = %5
  br label %57

; <label>:8:                                      ; preds = %5
  %9 = load i32, i32* @x.425
  %10 = load i32, i32* @y.426
  %11 = add i32 %9, 2042150555
  %12 = sub i32 %11, 1
  %13 = sub i32 %12, 2042150555
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %10, 10
  %19 = and i1 %17, %18
  %20 = xor i1 %17, %18
  %21 = or i1 %19, %20
  %22 = or i1 %17, %18
  %23 = select i1 %21, i32 -864617164, i32 514308179
  store i32 %23, i32* %4
  br label %57

; <label>:24:                                     ; preds = %5
  %25 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %3, align 8
  %26 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %25, i32 0, i32 2
  %27 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %26, align 8
  %28 = icmp ne %"struct.std::_Rb_tree_node_base"* %27, null
  store i1 %28, i1* %2
  %29 = load i32, i32* @x.425
  %30 = load i32, i32* @y.426
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 -1992860065, i32 514308179
  store i32 %42, i32* %4
  br label %57

; <label>:43:                                     ; preds = %5
  %44 = load volatile i1, i1* %2
  %45 = select i1 %44, i32 -920028331, i32 324287976
  store i32 %45, i32* %4
  br label %57

; <label>:46:                                     ; preds = %5
  %47 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %3, align 8
  %48 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %47, i32 0, i32 2
  %49 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %48, align 8
  store %"struct.std::_Rb_tree_node_base"* %49, %"struct.std::_Rb_tree_node_base"** %3, align 8
  store i32 -214926392, i32* %4
  br label %57

; <label>:50:                                     ; preds = %5
  %51 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %3, align 8
  ret %"struct.std::_Rb_tree_node_base"* %51

; <label>:52:                                     ; preds = %5
  %53 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %3, align 8
  %54 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %53, i32 0, i32 2
  %55 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %54, align 8
  %56 = icmp ne %"struct.std::_Rb_tree_node_base"* %55, null
  store i32 -864617164, i32* %4
  br label %57

; <label>:57:                                     ; preds = %52, %46, %43, %24, %8, %7
  br label %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt18_Rb_tree_node_base10_S_maximumEPS_(%"struct.std::_Rb_tree_node_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = alloca i32
  store i32 922429036, i32* %3
  br label %4

; <label>:4:                                      ; preds = %1, %79
  %5 = load i32, i32* %3
  switch i32 %5, label %6 [
    i32 922429036, label %7
    i32 -874249353, label %13
    i32 -518266904, label %41
    i32 -1758235117, label %72
    i32 952304640, label %73
    i32 1606581836, label %75
  ]

; <label>:6:                                      ; preds = %4
  br label %79

; <label>:7:                                      ; preds = %4
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %8, i32 0, i32 3
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %11 = icmp ne %"struct.std::_Rb_tree_node_base"* %10, null
  %12 = select i1 %11, i32 -874249353, i32 952304640
  store i32 %12, i32* %3
  br label %79

; <label>:13:                                     ; preds = %4
  %14 = load i32, i32* @x.427
  %15 = load i32, i32* @y.428
  %16 = add i32 %14, -1986448280
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, -1986448280
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -518266904, i32 1606581836
  store i32 %40, i32* %3
  br label %79

; <label>:41:                                     ; preds = %4
  %42 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %43 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %42, i32 0, i32 3
  %44 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %43, align 8
  store %"struct.std::_Rb_tree_node_base"* %44, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %45 = load i32, i32* @x.427
  %46 = load i32, i32* @y.428
  %47 = add i32 %45, 1982101964
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, 1982101964
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -1758235117, i32 1606581836
  store i32 %71, i32* %3
  br label %79

; <label>:72:                                     ; preds = %4
  store i32 922429036, i32* %3
  br label %79

; <label>:73:                                     ; preds = %4
  %74 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  ret %"struct.std::_Rb_tree_node_base"* %74

; <label>:75:                                     ; preds = %4
  %76 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %77 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %76, i32 0, i32 3
  %78 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %77, align 8
  store %"struct.std::_Rb_tree_node_base"* %78, %"struct.std::_Rb_tree_node_base"** %2, align 8
  store i32 -518266904, i32* %3
  br label %79

; <label>:79:                                     ; preds = %75, %72, %41, %13, %7, %6
  br label %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EEC2ERKS6_(%"class.std::function"*, %"class.std::function"* dereferenceable(32)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::function"*, align 8
  %4 = alloca %"class.std::function"*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"class.std::function"* %0, %"class.std::function"** %3, align 8
  store %"class.std::function"* %1, %"class.std::function"** %4, align 8
  %7 = load %"class.std::function"*, %"class.std::function"** %3, align 8
  %8 = bitcast %"class.std::function"* %7 to %"struct.std::_Maybe_unary_or_binary_function"*
  %9 = bitcast %"class.std::function"* %7 to %"class.std::_Function_base"*
  call void @_ZNSt14_Function_baseC2Ev(%"class.std::_Function_base"* %9)
  %10 = load %"class.std::function"*, %"class.std::function"** %4, align 8
  %11 = call zeroext i1 @_ZNKSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EEcvbEv(%"class.std::function"* %10) #3
  br i1 %11, label %12, label %39

; <label>:12:                                     ; preds = %2
  %13 = load %"class.std::function"*, %"class.std::function"** %4, align 8
  %14 = bitcast %"class.std::function"* %13 to %"class.std::_Function_base"*
  %15 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %14, i32 0, i32 1
  %16 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %15, align 8
  %17 = bitcast %"class.std::function"* %7 to %"class.std::_Function_base"*
  %18 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %17, i32 0, i32 0
  %19 = load %"class.std::function"*, %"class.std::function"** %4, align 8
  %20 = bitcast %"class.std::function"* %19 to %"class.std::_Function_base"*
  %21 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %20, i32 0, i32 0
  %22 = invoke zeroext i1 %16(%"union.std::_Any_data"* dereferenceable(16) %18, %"union.std::_Any_data"* dereferenceable(16) %21, i32 2)
          to label %23 unwind label %34

; <label>:23:                                     ; preds = %12
  %24 = load %"class.std::function"*, %"class.std::function"** %4, align 8
  %25 = getelementptr inbounds %"class.std::function", %"class.std::function"* %24, i32 0, i32 1
  %26 = load void (%"class.std::set"*, %"union.std::_Any_data"*, %"class.std::set"*, %"class.std::set"*)*, void (%"class.std::set"*, %"union.std::_Any_data"*, %"class.std::set"*, %"class.std::set"*)** %25, align 8
  %27 = getelementptr inbounds %"class.std::function", %"class.std::function"* %7, i32 0, i32 1
  store void (%"class.std::set"*, %"union.std::_Any_data"*, %"class.std::set"*, %"class.std::set"*)* %26, void (%"class.std::set"*, %"union.std::_Any_data"*, %"class.std::set"*, %"class.std::set"*)** %27, align 8
  %28 = load %"class.std::function"*, %"class.std::function"** %4, align 8
  %29 = bitcast %"class.std::function"* %28 to %"class.std::_Function_base"*
  %30 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %29, i32 0, i32 1
  %31 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %30, align 8
  %32 = bitcast %"class.std::function"* %7 to %"class.std::_Function_base"*
  %33 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %32, i32 0, i32 1
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %31, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %33, align 8
  br label %39

; <label>:34:                                     ; preds = %12
  %35 = landingpad { i8*, i32 }
          cleanup
  %36 = extractvalue { i8*, i32 } %35, 0
  store i8* %36, i8** %5, align 8
  %37 = extractvalue { i8*, i32 } %35, 1
  store i32 %37, i32* %6, align 4
  %38 = bitcast %"class.std::function"* %7 to %"class.std::_Function_base"*
  call void @_ZNSt14_Function_baseD2Ev(%"class.std::_Function_base"* %38) #3
  br label %40

; <label>:39:                                     ; preds = %23, %2
  ret void

; <label>:40:                                     ; preds = %34
  %41 = load i32, i32* @x.429
  %42 = load i32, i32* @y.430
  %43 = add i32 %41, 1121161927
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 1121161927
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  br i1 %65, label %67, label %99

; <label>:67:                                     ; preds = %40, %99
  %68 = load i8*, i8** %5, align 8
  %69 = load i32, i32* %6, align 4
  %70 = insertvalue { i8*, i32 } undef, i8* %68, 0
  %71 = insertvalue { i8*, i32 } %70, i32 %69, 1
  %72 = load i32, i32* @x.429
  %73 = load i32, i32* @y.430
  %74 = sub i32 %72, 220639974
  %75 = sub i32 %74, 1
  %76 = add i32 %75, 220639974
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = xor i1 %80, true
  %83 = xor i1 %81, true
  %84 = xor i1 false, true
  %85 = and i1 %82, false
  %86 = and i1 %80, %84
  %87 = and i1 %83, false
  %88 = and i1 %81, %84
  %89 = or i1 %85, %86
  %90 = or i1 %87, %88
  %91 = xor i1 %89, %90
  %92 = or i1 %82, %83
  %93 = xor i1 %92, true
  %94 = or i1 false, %84
  %95 = and i1 %93, %94
  %96 = or i1 %91, %95
  %97 = or i1 %80, %81
  br i1 %96, label %98, label %99

; <label>:98:                                     ; preds = %67
  resume { i8*, i32 } %71

; <label>:99:                                     ; preds = %67, %40
  %100 = load i8*, i8** %5, align 8
  %101 = load i32, i32* %6, align 4
  %102 = insertvalue { i8*, i32 } undef, i8* %100, 0
  %103 = insertvalue { i8*, i32 } %102, i32 %101, 1
  br label %67
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8functionIFSt3setIcSt4lessIcESaIcEES4_xEEC2ERKS6_(%"class.std::function.10"*, %"class.std::function.10"* dereferenceable(32)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::function.10"*, align 8
  %4 = alloca %"class.std::function.10"*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"class.std::function.10"* %0, %"class.std::function.10"** %3, align 8
  store %"class.std::function.10"* %1, %"class.std::function.10"** %4, align 8
  %7 = load %"class.std::function.10"*, %"class.std::function.10"** %3, align 8
  %8 = bitcast %"class.std::function.10"* %7 to %"struct.std::_Maybe_unary_or_binary_function.11"*
  %9 = bitcast %"class.std::function.10"* %7 to %"class.std::_Function_base"*
  call void @_ZNSt14_Function_baseC2Ev(%"class.std::_Function_base"* %9)
  %10 = load %"class.std::function.10"*, %"class.std::function.10"** %4, align 8
  %11 = call zeroext i1 @_ZNKSt8functionIFSt3setIcSt4lessIcESaIcEES4_xEEcvbEv(%"class.std::function.10"* %10) #3
  br i1 %11, label %12, label %68

; <label>:12:                                     ; preds = %2
  %13 = load i32, i32* @x.431
  %14 = load i32, i32* @y.432
  %15 = sub i32 0, 1
  %16 = add i32 %13, %15
  %17 = sub i32 %13, 1
  %18 = mul i32 %13, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %14, 10
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  br i1 %24, label %26, label %74

; <label>:26:                                     ; preds = %12, %74
  %27 = load %"class.std::function.10"*, %"class.std::function.10"** %4, align 8
  %28 = bitcast %"class.std::function.10"* %27 to %"class.std::_Function_base"*
  %29 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %28, i32 0, i32 1
  %30 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %29, align 8
  %31 = bitcast %"class.std::function.10"* %7 to %"class.std::_Function_base"*
  %32 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %31, i32 0, i32 0
  %33 = load %"class.std::function.10"*, %"class.std::function.10"** %4, align 8
  %34 = bitcast %"class.std::function.10"* %33 to %"class.std::_Function_base"*
  %35 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %34, i32 0, i32 0
  %36 = load i32, i32* @x.431
  %37 = load i32, i32* @y.432
  %38 = add i32 %36, -1802376080
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, -1802376080
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  br i1 %48, label %50, label %74

; <label>:50:                                     ; preds = %26
  %51 = invoke zeroext i1 %30(%"union.std::_Any_data"* dereferenceable(16) %32, %"union.std::_Any_data"* dereferenceable(16) %35, i32 2)
          to label %52 unwind label %63

; <label>:52:                                     ; preds = %50
  %53 = load %"class.std::function.10"*, %"class.std::function.10"** %4, align 8
  %54 = getelementptr inbounds %"class.std::function.10", %"class.std::function.10"* %53, i32 0, i32 1
  %55 = load void (%"class.std::set"*, %"union.std::_Any_data"*, %"class.std::set"*, i64*)*, void (%"class.std::set"*, %"union.std::_Any_data"*, %"class.std::set"*, i64*)** %54, align 8
  %56 = getelementptr inbounds %"class.std::function.10", %"class.std::function.10"* %7, i32 0, i32 1
  store void (%"class.std::set"*, %"union.std::_Any_data"*, %"class.std::set"*, i64*)* %55, void (%"class.std::set"*, %"union.std::_Any_data"*, %"class.std::set"*, i64*)** %56, align 8
  %57 = load %"class.std::function.10"*, %"class.std::function.10"** %4, align 8
  %58 = bitcast %"class.std::function.10"* %57 to %"class.std::_Function_base"*
  %59 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %58, i32 0, i32 1
  %60 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %59, align 8
  %61 = bitcast %"class.std::function.10"* %7 to %"class.std::_Function_base"*
  %62 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %61, i32 0, i32 1
  store i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %60, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %62, align 8
  br label %68

; <label>:63:                                     ; preds = %50
  %64 = landingpad { i8*, i32 }
          cleanup
  %65 = extractvalue { i8*, i32 } %64, 0
  store i8* %65, i8** %5, align 8
  %66 = extractvalue { i8*, i32 } %64, 1
  store i32 %66, i32* %6, align 4
  %67 = bitcast %"class.std::function.10"* %7 to %"class.std::_Function_base"*
  call void @_ZNSt14_Function_baseD2Ev(%"class.std::_Function_base"* %67) #3
  br label %69

; <label>:68:                                     ; preds = %52, %2
  ret void

; <label>:69:                                     ; preds = %63
  %70 = load i8*, i8** %5, align 8
  %71 = load i32, i32* %6, align 4
  %72 = insertvalue { i8*, i32 } undef, i8* %70, 0
  %73 = insertvalue { i8*, i32 } %72, i32 %71, 1
  resume { i8*, i32 } %73

; <label>:74:                                     ; preds = %26, %12
  %75 = load %"class.std::function.10"*, %"class.std::function.10"** %4, align 8
  %76 = bitcast %"class.std::function.10"* %75 to %"class.std::_Function_base"*
  %77 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %76, i32 0, i32 1
  %78 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %77, align 8
  %79 = bitcast %"class.std::function.10"* %7 to %"class.std::_Function_base"*
  %80 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %79, i32 0, i32 0
  %81 = load %"class.std::function.10"*, %"class.std::function.10"** %4, align 8
  %82 = bitcast %"class.std::function.10"* %81 to %"class.std::_Function_base"*
  %83 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %82, i32 0, i32 0
  br label %26
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt3setIcSt4lessIcESaIcEEEC2Ev(%"class.std::allocator.13"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.13"*, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %2, align 8
  %3 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %2, align 8
  %4 = bitcast %"class.std::allocator.13"* %3 to %"class.__gnu_cxx::new_allocator.14"*
  call void @_ZN9__gnu_cxx13new_allocatorISt3setIcSt4lessIcESaIcEEEC2Ev(%"class.__gnu_cxx::new_allocator.14"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EEC2EmRKS4_RKS5_(%"class.std::vector"*, i64, %"class.std::set"* dereferenceable(48), %"class.std::allocator.13"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::set"*, align 8
  %8 = alloca %"class.std::allocator.13"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::set"* %2, %"class.std::set"** %7, align 8
  store %"class.std::allocator.13"* %3, %"class.std::allocator.13"** %8, align 8
  %11 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %12 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %8, align 8
  call void @_ZNSt12_Vector_baseISt3setIcSt4lessIcESaIcEESaIS4_EEC2EmRKS5_(%"struct.std::_Vector_base"* %12, i64 %13, %"class.std::allocator.13"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load %"class.std::set"*, %"class.std::set"** %7, align 8
  invoke void @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EE18_M_fill_initializeEmRKS4_(%"class.std::vector"* %11, i64 %15, %"class.std::set"* dereferenceable(48) %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %4
  ret void

; <label>:18:                                     ; preds = %4
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %9, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %10, align 4
  %22 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt3setIcSt4lessIcESaIcEESaIS4_EED2Ev(%"struct.std::_Vector_base"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %9, align 8
  %25 = load i32, i32* %10, align 4
  %26 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt3setIcSt4lessIcESaIcEEED2Ev(%"class.std::allocator.13"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.437
  %5 = load i32, i32* @y.438
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 384236640, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %48
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 384236640, label %17
    i32 595527353, label %25
    i32 2066365638, label %43
    i32 2067277294, label %44
  ]

; <label>:16:                                     ; preds = %14
  br label %48

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 595527353, i32 2067277294
  store i32 %24, i32* %13
  br label %48

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.std::allocator.13"*, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %26, align 8
  %27 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %26, align 8
  %28 = bitcast %"class.std::allocator.13"* %27 to %"class.__gnu_cxx::new_allocator.14"*
  call void @_ZN9__gnu_cxx13new_allocatorISt3setIcSt4lessIcESaIcEEED2Ev(%"class.__gnu_cxx::new_allocator.14"* %28) #3
  %29 = load i32, i32* @x.437
  %30 = load i32, i32* @y.438
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 2066365638, i32 2067277294
  store i32 %42, i32* %13
  br label %48

; <label>:43:                                     ; preds = %14
  ret void

; <label>:44:                                     ; preds = %14
  %45 = alloca %"class.std::allocator.13"*, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %45, align 8
  %46 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %45, align 8
  %47 = bitcast %"class.std::allocator.13"* %46 to %"class.__gnu_cxx::new_allocator.14"*
  call void @_ZN9__gnu_cxx13new_allocatorISt3setIcSt4lessIcESaIcEEED2Ev(%"class.__gnu_cxx::new_allocator.14"* %47) #3
  store i32 595527353, i32* %13
  br label %48

; <label>:48:                                     ; preds = %44, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EEcvbEv(%"class.std::function"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::function"*, align 8
  store %"class.std::function"* %0, %"class.std::function"** %2, align 8
  %3 = load %"class.std::function"*, %"class.std::function"** %2, align 8
  %4 = bitcast %"class.std::function"* %3 to %"class.std::_Function_base"*
  %5 = invoke zeroext i1 @_ZNKSt14_Function_base8_M_emptyEv(%"class.std::_Function_base"* %4)
          to label %6 unwind label %13

; <label>:6:                                      ; preds = %1
  %7 = xor i1 %5, true
  %8 = and i1 true, %7
  %9 = xor i1 true, true
  %10 = and i1 %5, %9
  %11 = or i1 %8, %10
  %12 = xor i1 %5, true
  ret i1 %11

; <label>:13:                                     ; preds = %1
  %14 = landingpad { i8*, i32 }
          catch i8* null
  %15 = extractvalue { i8*, i32 } %14, 0
  call void @__clang_call_terminate(i8* %15) #12
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt14_Function_base8_M_emptyEv(%"class.std::_Function_base"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.441
  %6 = load i32, i32* @y.442
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 424913162, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %89
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 424913162, label %18
    i32 -1144318145, label %38
    i32 273276905, label %65
    i32 786549049, label %67
  ]

; <label>:17:                                     ; preds = %15
  br label %89

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1144318145, i32 786549049
  store i32 %37, i32* %14
  br label %89

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::_Function_base"*, align 8
  store %"class.std::_Function_base"* %0, %"class.std::_Function_base"** %39, align 8
  %40 = load %"class.std::_Function_base"*, %"class.std::_Function_base"** %39, align 8
  %41 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %40, i32 0, i32 1
  %42 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %41, align 8
  %43 = icmp ne i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %42, null
  %44 = xor i1 %43, true
  %45 = and i1 true, %44
  %46 = xor i1 true, true
  %47 = and i1 %43, %46
  %48 = or i1 %45, %47
  %49 = xor i1 %43, true
  store i1 %48, i1* %2
  %50 = load i32, i32* @x.441
  %51 = load i32, i32* @y.442
  %52 = sub i32 %50, 508970557
  %53 = sub i32 %52, 1
  %54 = add i32 %53, 508970557
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 273276905, i32 786549049
  store i32 %64, i32* %14
  br label %89

; <label>:65:                                     ; preds = %15
  %66 = load volatile i1, i1* %2
  ret i1 %66

; <label>:67:                                     ; preds = %15
  %68 = alloca %"class.std::_Function_base"*, align 8
  store %"class.std::_Function_base"* %0, %"class.std::_Function_base"** %68, align 8
  %69 = load %"class.std::_Function_base"*, %"class.std::_Function_base"** %68, align 8
  %70 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %69, i32 0, i32 1
  %71 = load i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)*, i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)** %70, align 8
  %72 = icmp ne i1 (%"union.std::_Any_data"*, %"union.std::_Any_data"*, i32)* %71, null
  %73 = add i1 %72, false
  %74 = sub i1 %73, true
  %75 = sub i1 %74, false
  %76 = sub i1 %72, true
  %77 = mul i1 %75, true
  %78 = xor i1 %72, true
  %79 = and i1 true, %78
  %80 = xor i1 true, true
  %81 = and i1 %72, %80
  %82 = xor i1 true, true
  %83 = and i1 %82, true
  %84 = and i1 true, %80
  %85 = or i1 %79, %81
  %86 = or i1 %83, %84
  %87 = xor i1 %85, %86
  %88 = xor i1 %72, true
  store i32 -1144318145, i32* %14
  br label %89

; <label>:89:                                     ; preds = %67, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt8functionIFSt3setIcSt4lessIcESaIcEES4_xEEcvbEv(%"class.std::function.10"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.443
  %3 = load i32, i32* @y.444
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %86

; <label>:15:                                     ; preds = %1, %86
  %16 = alloca %"class.std::function.10"*, align 8
  store %"class.std::function.10"* %0, %"class.std::function.10"** %16, align 8
  %17 = load %"class.std::function.10"*, %"class.std::function.10"** %16, align 8
  %18 = bitcast %"class.std::function.10"* %17 to %"class.std::_Function_base"*
  %19 = load i32, i32* @x.443
  %20 = load i32, i32* @y.444
  %21 = add i32 %19, 397450396
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, 397450396
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  br i1 %31, label %33, label %86

; <label>:33:                                     ; preds = %15
  %34 = invoke zeroext i1 @_ZNKSt14_Function_base8_M_emptyEv(%"class.std::_Function_base"* %18)
          to label %35 unwind label %42

; <label>:35:                                     ; preds = %33
  %36 = xor i1 %34, true
  %37 = and i1 true, %36
  %38 = xor i1 true, true
  %39 = and i1 %34, %38
  %40 = or i1 %37, %39
  %41 = xor i1 %34, true
  ret i1 %40

; <label>:42:                                     ; preds = %33
  %43 = load i32, i32* @x.443
  %44 = load i32, i32* @y.444
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  br i1 %66, label %68, label %90

; <label>:68:                                     ; preds = %42, %90
  %69 = landingpad { i8*, i32 }
          catch i8* null
  %70 = extractvalue { i8*, i32 } %69, 0
  call void @__clang_call_terminate(i8* %70) #12
  %71 = load i32, i32* @x.443
  %72 = load i32, i32* @y.444
  %73 = sub i32 %71, -619157889
  %74 = sub i32 %73, 1
  %75 = add i32 %74, -619157889
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  br i1 %83, label %85, label %90

; <label>:85:                                     ; preds = %68
  unreachable

; <label>:86:                                     ; preds = %15, %1
  %87 = alloca %"class.std::function.10"*, align 8
  store %"class.std::function.10"* %0, %"class.std::function.10"** %87, align 8
  %88 = load %"class.std::function.10"*, %"class.std::function.10"** %87, align 8
  %89 = bitcast %"class.std::function.10"* %88 to %"class.std::_Function_base"*
  br label %15

; <label>:90:                                     ; preds = %68, %42
  %91 = landingpad { i8*, i32 }
          catch i8* null
  %92 = extractvalue { i8*, i32 } %91, 0
  call void @__clang_call_terminate(i8* %92) #12
  br label %68
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt3setIcSt4lessIcESaIcEEEC2Ev(%"class.__gnu_cxx::new_allocator.14"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.445
  %5 = load i32, i32* @y.446
  %6 = add i32 %4, 403721010
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 403721010
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 303957790, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 303957790, label %18
    i32 -1514354368, label %38
    i32 1945749149, label %56
    i32 -308390154, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1514354368, i32 -308390154
  store i32 %37, i32* %14
  br label %60

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %39, align 8
  %41 = load i32, i32* @x.445
  %42 = load i32, i32* @y.446
  %43 = add i32 %41, -1854040186
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -1854040186
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 1945749149, i32 -308390154
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %58, align 8
  store i32 -1514354368, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt3setIcSt4lessIcESaIcEESaIS4_EEC2EmRKS5_(%"struct.std::_Vector_base"*, i64, %"class.std::allocator.13"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.447
  %5 = load i32, i32* @y.448
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %5, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %158

; <label>:29:                                     ; preds = %3, %158
  %30 = alloca %"struct.std::_Vector_base"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"class.std::allocator.13"*, align 8
  %33 = alloca i8*
  %34 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %30, align 8
  store i64 %1, i64* %31, align 8
  store %"class.std::allocator.13"* %2, %"class.std::allocator.13"** %32, align 8
  %35 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %30, align 8
  %36 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %35, i32 0, i32 0
  %37 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %32, align 8
  call void @_ZNSt12_Vector_baseISt3setIcSt4lessIcESaIcEESaIS4_EE12_Vector_implC2ERKS5_(%"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %36, %"class.std::allocator.13"* dereferenceable(1) %37) #3
  %38 = load i64, i64* %31, align 8
  %39 = load i32, i32* @x.447
  %40 = load i32, i32* @y.448
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  br i1 %62, label %64, label %158

; <label>:64:                                     ; preds = %29
  invoke void @_ZNSt12_Vector_baseISt3setIcSt4lessIcESaIcEESaIS4_EE17_M_create_storageEm(%"struct.std::_Vector_base"* %35, i64 %38)
          to label %65 unwind label %66

; <label>:65:                                     ; preds = %64
  ret void

; <label>:66:                                     ; preds = %64
  %67 = load i32, i32* @x.447
  %68 = load i32, i32* @y.448
  %69 = sub i32 %67, -1640528830
  %70 = sub i32 %69, 1
  %71 = add i32 %70, -1640528830
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = xor i1 %75, true
  %78 = xor i1 %76, true
  %79 = xor i1 true, true
  %80 = and i1 %77, true
  %81 = and i1 %75, %79
  %82 = and i1 %78, true
  %83 = and i1 %76, %79
  %84 = or i1 %80, %81
  %85 = or i1 %82, %83
  %86 = xor i1 %84, %85
  %87 = or i1 %77, %78
  %88 = xor i1 %87, true
  %89 = or i1 true, %79
  %90 = and i1 %88, %89
  %91 = or i1 %86, %90
  %92 = or i1 %75, %76
  br i1 %91, label %93, label %168

; <label>:93:                                     ; preds = %66, %168
  %94 = landingpad { i8*, i32 }
          cleanup
  %95 = extractvalue { i8*, i32 } %94, 0
  store i8* %95, i8** %33, align 8
  %96 = extractvalue { i8*, i32 } %94, 1
  store i32 %96, i32* %34, align 4
  call void @_ZNSt12_Vector_baseISt3setIcSt4lessIcESaIcEESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %36) #3
  %97 = load i32, i32* @x.447
  %98 = load i32, i32* @y.448
  %99 = sub i32 0, 1
  %100 = add i32 %97, %99
  %101 = sub i32 %97, 1
  %102 = mul i32 %97, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %98, 10
  %106 = and i1 %104, %105
  %107 = xor i1 %104, %105
  %108 = or i1 %106, %107
  %109 = or i1 %104, %105
  br i1 %108, label %110, label %168

; <label>:110:                                    ; preds = %93
  br label %111

; <label>:111:                                    ; preds = %110
  %112 = load i32, i32* @x.447
  %113 = load i32, i32* @y.448
  %114 = add i32 %112, 1595735015
  %115 = sub i32 %114, 1
  %116 = sub i32 %115, 1595735015
  %117 = sub i32 %112, 1
  %118 = mul i32 %112, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %113, 10
  %122 = xor i1 %120, true
  %123 = xor i1 %121, true
  %124 = xor i1 false, true
  %125 = and i1 %122, false
  %126 = and i1 %120, %124
  %127 = and i1 %123, false
  %128 = and i1 %121, %124
  %129 = or i1 %125, %126
  %130 = or i1 %127, %128
  %131 = xor i1 %129, %130
  %132 = or i1 %122, %123
  %133 = xor i1 %132, true
  %134 = or i1 false, %124
  %135 = and i1 %133, %134
  %136 = or i1 %131, %135
  %137 = or i1 %120, %121
  br i1 %136, label %138, label %172

; <label>:138:                                    ; preds = %111, %172
  %139 = load i8*, i8** %33, align 8
  %140 = load i32, i32* %34, align 4
  %141 = insertvalue { i8*, i32 } undef, i8* %139, 0
  %142 = insertvalue { i8*, i32 } %141, i32 %140, 1
  %143 = load i32, i32* @x.447
  %144 = load i32, i32* @y.448
  %145 = sub i32 %143, -1991937817
  %146 = sub i32 %145, 1
  %147 = add i32 %146, -1991937817
  %148 = sub i32 %143, 1
  %149 = mul i32 %143, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %144, 10
  %153 = and i1 %151, %152
  %154 = xor i1 %151, %152
  %155 = or i1 %153, %154
  %156 = or i1 %151, %152
  br i1 %155, label %157, label %172

; <label>:157:                                    ; preds = %138
  resume { i8*, i32 } %142

; <label>:158:                                    ; preds = %29, %3
  %159 = alloca %"struct.std::_Vector_base"*, align 8
  %160 = alloca i64, align 8
  %161 = alloca %"class.std::allocator.13"*, align 8
  %162 = alloca i8*
  %163 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %159, align 8
  store i64 %1, i64* %160, align 8
  store %"class.std::allocator.13"* %2, %"class.std::allocator.13"** %161, align 8
  %164 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %159, align 8
  %165 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %164, i32 0, i32 0
  %166 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %161, align 8
  call void @_ZNSt12_Vector_baseISt3setIcSt4lessIcESaIcEESaIS4_EE12_Vector_implC2ERKS5_(%"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %165, %"class.std::allocator.13"* dereferenceable(1) %166) #3
  %167 = load i64, i64* %160, align 8
  br label %29

; <label>:168:                                    ; preds = %93, %66
  %169 = landingpad { i8*, i32 }
          cleanup
  %170 = extractvalue { i8*, i32 } %169, 0
  store i8* %170, i8** %33, align 8
  %171 = extractvalue { i8*, i32 } %169, 1
  store i32 %171, i32* %34, align 4
  call void @_ZNSt12_Vector_baseISt3setIcSt4lessIcESaIcEESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %36) #3
  br label %93

; <label>:172:                                    ; preds = %138, %111
  %173 = load i8*, i8** %33, align 8
  %174 = load i32, i32* %34, align 4
  %175 = insertvalue { i8*, i32 } undef, i8* %173, 0
  %176 = insertvalue { i8*, i32 } %175, i32 %174, 1
  br label %138
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EE18_M_fill_initializeEmRKS4_(%"class.std::vector"*, i64, %"class.std::set"* dereferenceable(48)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::set"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::set"* %2, %"class.std::set"** %6, align 8
  %7 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %8 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::set"*, %"class.std::set"** %10, align 8
  %12 = load i64, i64* %5, align 8
  %13 = load %"class.std::set"*, %"class.std::set"** %6, align 8
  %14 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseISt3setIcSt4lessIcESaIcEESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %14) #3
  %16 = call %"class.std::set"* @_ZSt24__uninitialized_fill_n_aIPSt3setIcSt4lessIcESaIcEEmS4_S4_ET_S6_T0_RKT1_RSaIT2_E(%"class.std::set"* %11, i64 %12, %"class.std::set"* dereferenceable(48) %13, %"class.std::allocator.13"* dereferenceable(1) %15)
  %17 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %18, i32 0, i32 1
  store %"class.std::set"* %16, %"class.std::set"** %19, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt3setIcSt4lessIcESaIcEESaIS4_EE12_Vector_implC2ERKS5_(%"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"*, %"class.std::allocator.13"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.13"*, align 8
  store %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.13"* %1, %"class.std::allocator.13"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %5 to %"class.std::allocator.13"*
  %7 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %4, align 8
  call void @_ZNSaISt3setIcSt4lessIcESaIcEEEC2ERKS4_(%"class.std::allocator.13"* %6, %"class.std::allocator.13"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %5, i32 0, i32 0
  store %"class.std::set"* null, %"class.std::set"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %5, i32 0, i32 1
  store %"class.std::set"* null, %"class.std::set"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %5, i32 0, i32 2
  store %"class.std::set"* null, %"class.std::set"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt3setIcSt4lessIcESaIcEESaIS4_EE17_M_create_storageEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"class.std::set"* @_ZNSt12_Vector_baseISt3setIcSt4lessIcESaIcEESaIS4_EE11_M_allocateEm(%"struct.std::_Vector_base"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %8, i32 0, i32 0
  store %"class.std::set"* %7, %"class.std::set"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"class.std::set"*, %"class.std::set"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %13, i32 0, i32 1
  store %"class.std::set"* %12, %"class.std::set"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"class.std::set"*, %"class.std::set"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"class.std::set", %"class.std::set"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %20, i32 0, i32 2
  store %"class.std::set"* %19, %"class.std::set"** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt3setIcSt4lessIcESaIcEEEC2ERKS4_(%"class.std::allocator.13"*, %"class.std::allocator.13"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.455
  %6 = load i32, i32* @y.456
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -2079467568, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %68
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2079467568, label %18
    i32 1032768795, label %38
    i32 -1485817858, label %60
    i32 859811742, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %68

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1032768795, i32 859811742
  store i32 %37, i32* %14
  br label %68

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.13"*, align 8
  %40 = alloca %"class.std::allocator.13"*, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %39, align 8
  store %"class.std::allocator.13"* %1, %"class.std::allocator.13"** %40, align 8
  %41 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %39, align 8
  %42 = bitcast %"class.std::allocator.13"* %41 to %"class.__gnu_cxx::new_allocator.14"*
  %43 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %40, align 8
  %44 = bitcast %"class.std::allocator.13"* %43 to %"class.__gnu_cxx::new_allocator.14"*
  call void @_ZN9__gnu_cxx13new_allocatorISt3setIcSt4lessIcESaIcEEEC2ERKS6_(%"class.__gnu_cxx::new_allocator.14"* %42, %"class.__gnu_cxx::new_allocator.14"* dereferenceable(1) %44) #3
  %45 = load i32, i32* @x.455
  %46 = load i32, i32* @y.456
  %47 = add i32 %45, -1873934203
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -1873934203
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -1485817858, i32 859811742
  store i32 %59, i32* %14
  br label %68

; <label>:60:                                     ; preds = %15
  ret void

; <label>:61:                                     ; preds = %15
  %62 = alloca %"class.std::allocator.13"*, align 8
  %63 = alloca %"class.std::allocator.13"*, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %62, align 8
  store %"class.std::allocator.13"* %1, %"class.std::allocator.13"** %63, align 8
  %64 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %62, align 8
  %65 = bitcast %"class.std::allocator.13"* %64 to %"class.__gnu_cxx::new_allocator.14"*
  %66 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %63, align 8
  %67 = bitcast %"class.std::allocator.13"* %66 to %"class.__gnu_cxx::new_allocator.14"*
  call void @_ZN9__gnu_cxx13new_allocatorISt3setIcSt4lessIcESaIcEEEC2ERKS6_(%"class.__gnu_cxx::new_allocator.14"* %65, %"class.__gnu_cxx::new_allocator.14"* dereferenceable(1) %67) #3
  store i32 1032768795, i32* %14
  br label %68

; <label>:68:                                     ; preds = %61, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt3setIcSt4lessIcESaIcEEEC2ERKS6_(%"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %1, %"class.__gnu_cxx::new_allocator.14"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::set"* @_ZNSt12_Vector_baseISt3setIcSt4lessIcESaIcEESaIS4_EE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base"*
  %5 = alloca %"struct.std::_Vector_base"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5, align 8
  store %"struct.std::_Vector_base"* %7, %"struct.std::_Vector_base"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 889918559, i32* %9
  %10 = alloca %"class.std::set"*
  br label %11

; <label>:11:                                     ; preds = %2, %27
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 889918559, label %14
    i32 1917701597, label %18
    i32 -1424680764, label %24
    i32 1835524800, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %27

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 1917701597, i32 -1424680764
  store i32 %17, i32* %9
  br label %27

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %20 to %"class.std::allocator.13"*
  %22 = load i64, i64* %6, align 8
  %23 = call %"class.std::set"* @_ZNSt16allocator_traitsISaISt3setIcSt4lessIcESaIcEEEE8allocateERS5_m(%"class.std::allocator.13"* dereferenceable(1) %21, i64 %22)
  store i32 1835524800, i32* %9
  store %"class.std::set"* %23, %"class.std::set"** %10
  br label %27

; <label>:24:                                     ; preds = %11
  store i32 1835524800, i32* %9
  store %"class.std::set"* null, %"class.std::set"** %10
  br label %27

; <label>:25:                                     ; preds = %11
  %26 = load %"class.std::set"*, %"class.std::set"** %10
  ret %"class.std::set"* %26

; <label>:27:                                     ; preds = %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::set"* @_ZNSt16allocator_traitsISaISt3setIcSt4lessIcESaIcEEEE8allocateERS5_m(%"class.std::allocator.13"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.13"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %3, align 8
  %6 = bitcast %"class.std::allocator.13"* %5 to %"class.__gnu_cxx::new_allocator.14"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::set"* @_ZN9__gnu_cxx13new_allocatorISt3setIcSt4lessIcESaIcEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.14"* %6, i64 %7, i8* null)
  ret %"class.std::set"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::set"* @_ZN9__gnu_cxx13new_allocatorISt3setIcSt4lessIcESaIcEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.14"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.std::set"*
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt3setIcSt4lessIcESaIcEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.14"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 595278052, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %117
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 595278052, label %17
    i32 882573323, label %22
    i32 1775683347, label %23
    i32 1463703007, label %50
    i32 1286855228, label %81
    i32 -1001011521, label %83
  ]

; <label>:16:                                     ; preds = %14
  br label %117

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 882573323, i32 1775683347
  store i32 %21, i32* %13
  br label %117

; <label>:22:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #14
  unreachable

; <label>:23:                                     ; preds = %14
  %24 = load i32, i32* @x.463
  %25 = load i32, i32* @y.464
  %26 = sub i32 0, 1
  %27 = add i32 %24, %26
  %28 = sub i32 %24, 1
  %29 = mul i32 %24, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %25, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 false, true
  %36 = and i1 %33, false
  %37 = and i1 %31, %35
  %38 = and i1 %34, false
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 false, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  %49 = select i1 %47, i32 1463703007, i32 -1001011521
  store i32 %49, i32* %13
  br label %117

; <label>:50:                                     ; preds = %14
  %51 = load i64, i64* %8, align 8
  %52 = mul i64 %51, 48
  %53 = call i8* @_Znwm(i64 %52)
  %54 = bitcast i8* %53 to %"class.std::set"*
  store %"class.std::set"* %54, %"class.std::set"** %4
  %55 = load i32, i32* @x.463
  %56 = load i32, i32* @y.464
  %57 = sub i32 0, 1
  %58 = add i32 %55, %57
  %59 = sub i32 %55, 1
  %60 = mul i32 %55, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %56, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 true, true
  %67 = and i1 %64, true
  %68 = and i1 %62, %66
  %69 = and i1 %65, true
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 true, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  %80 = select i1 %78, i32 1286855228, i32 -1001011521
  store i32 %80, i32* %13
  br label %117

; <label>:81:                                     ; preds = %14
  %82 = load volatile %"class.std::set"*, %"class.std::set"** %4
  ret %"class.std::set"* %82

; <label>:83:                                     ; preds = %14
  %84 = load i64, i64* %8, align 8
  %85 = shl i64 %84, 48
  %86 = sub i64 0, 48
  %87 = add i64 %84, %86
  %88 = sub i64 %84, 48
  %89 = mul i64 %87, 48
  %90 = sub i64 0, 5210145831460841975
  %91 = sub i64 %90, %84
  %92 = add i64 %91, 5210145831460841975
  %93 = sub i64 0, %84
  %94 = sub i64 %92, -1539724509735406255
  %95 = add i64 %94, 48
  %96 = add i64 %95, -1539724509735406255
  %97 = add i64 %92, 48
  %98 = shl i64 %84, 48
  %99 = sub i64 0, 48
  %100 = add i64 %84, %99
  %101 = sub i64 %84, 48
  %102 = mul i64 %100, 48
  %103 = shl i64 %84, 48
  %104 = add i64 %84, 4936603104984480942
  %105 = sub i64 %104, 48
  %106 = sub i64 %105, 4936603104984480942
  %107 = sub i64 %84, 48
  %108 = mul i64 %106, 48
  %109 = sub i64 %84, -3922366878856918956
  %110 = sub i64 %109, 48
  %111 = add i64 %110, -3922366878856918956
  %112 = sub i64 %84, 48
  %113 = mul i64 %111, 48
  %114 = mul i64 %84, 48
  %115 = call i8* @_Znwm(i64 %114)
  %116 = bitcast i8* %115 to %"class.std::set"*
  store i32 1463703007, i32* %13
  br label %117

; <label>:117:                                    ; preds = %83, %50, %23, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt3setIcSt4lessIcESaIcEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.14"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.465
  %5 = load i32, i32* @y.466
  %6 = add i32 %4, 1992837295
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1992837295
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -241265612, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -241265612, label %18
    i32 -1154235263, label %38
    i32 -1664442793, label %56
    i32 -1653524438, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1154235263, i32 -1653524438
  store i32 %37, i32* %14
  br label %60

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %39, align 8
  %41 = load i32, i32* @x.465
  %42 = load i32, i32* @y.466
  %43 = sub i32 %41, 284634348
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 284634348
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -1664442793, i32 -1653524438
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret i64 384307168202282325

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %58, align 8
  store i32 -1154235263, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::set"* @_ZSt24__uninitialized_fill_n_aIPSt3setIcSt4lessIcESaIcEEmS4_S4_ET_S6_T0_RKT1_RSaIT2_E(%"class.std::set"*, i64, %"class.std::set"* dereferenceable(48), %"class.std::allocator.13"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::set"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::set"*, align 8
  %8 = alloca %"class.std::allocator.13"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::set"* %2, %"class.std::set"** %7, align 8
  store %"class.std::allocator.13"* %3, %"class.std::allocator.13"** %8, align 8
  %9 = load %"class.std::set"*, %"class.std::set"** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load %"class.std::set"*, %"class.std::set"** %7, align 8
  %12 = call %"class.std::set"* @_ZSt20uninitialized_fill_nIPSt3setIcSt4lessIcESaIcEEmS4_ET_S6_T0_RKT1_(%"class.std::set"* %9, i64 %10, %"class.std::set"* dereferenceable(48) %11)
  ret %"class.std::set"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::set"* @_ZSt20uninitialized_fill_nIPSt3setIcSt4lessIcESaIcEEmS4_ET_S6_T0_RKT1_(%"class.std::set"*, i64, %"class.std::set"* dereferenceable(48)) #0 comdat {
  %4 = alloca %"class.std::set"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::set"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::set"* %0, %"class.std::set"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::set"* %2, %"class.std::set"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"class.std::set"*, %"class.std::set"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %"class.std::set"*, %"class.std::set"** %6, align 8
  %11 = call %"class.std::set"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt3setIcSt4lessIcESaIcEEmS6_EET_S8_T0_RKT1_(%"class.std::set"* %8, i64 %9, %"class.std::set"* dereferenceable(48) %10)
  ret %"class.std::set"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::set"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt3setIcSt4lessIcESaIcEEmS6_EET_S8_T0_RKT1_(%"class.std::set"*, i64, %"class.std::set"* dereferenceable(48)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::set"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::set"*, align 8
  %7 = alloca %"class.std::set"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::set"* %0, %"class.std::set"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::set"* %2, %"class.std::set"** %6, align 8
  %10 = load %"class.std::set"*, %"class.std::set"** %4, align 8
  store %"class.std::set"* %10, %"class.std::set"** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %19, %3
  %12 = load i64, i64* %5, align 8
  %13 = icmp ugt i64 %12, 0
  br i1 %13, label %14, label %79

; <label>:14:                                     ; preds = %11
  %15 = load %"class.std::set"*, %"class.std::set"** %7, align 8
  %16 = call %"class.std::set"* @_ZSt11__addressofISt3setIcSt4lessIcESaIcEEEPT_RS5_(%"class.std::set"* dereferenceable(48) %15) #3
  %17 = load %"class.std::set"*, %"class.std::set"** %6, align 8
  invoke void @_ZSt10_ConstructISt3setIcSt4lessIcESaIcEEJRKS4_EEvPT_DpOT0_(%"class.std::set"* %16, %"class.std::set"* dereferenceable(48) %17)
          to label %18 unwind label %28

; <label>:18:                                     ; preds = %14
  br label %19

; <label>:19:                                     ; preds = %18
  %20 = load i64, i64* %5, align 8
  %21 = sub i64 0, %20
  %22 = sub i64 0, -1
  %23 = add i64 %21, %22
  %24 = sub i64 0, %23
  %25 = add i64 %20, -1
  store i64 %24, i64* %5, align 8
  %26 = load %"class.std::set"*, %"class.std::set"** %7, align 8
  %27 = getelementptr inbounds %"class.std::set", %"class.std::set"* %26, i32 1
  store %"class.std::set"* %27, %"class.std::set"** %7, align 8
  br label %11

; <label>:28:                                     ; preds = %14
  %29 = landingpad { i8*, i32 }
          catch i8* null
  %30 = extractvalue { i8*, i32 } %29, 0
  store i8* %30, i8** %8, align 8
  %31 = extractvalue { i8*, i32 } %29, 1
  store i32 %31, i32* %9, align 4
  br label %32

; <label>:32:                                     ; preds = %28
  %33 = load i8*, i8** %8, align 8
  %34 = call i8* @__cxa_begin_catch(i8* %33) #3
  %35 = load %"class.std::set"*, %"class.std::set"** %4, align 8
  %36 = load %"class.std::set"*, %"class.std::set"** %7, align 8
  invoke void @_ZSt8_DestroyIPSt3setIcSt4lessIcESaIcEEEvT_S6_(%"class.std::set"* %35, %"class.std::set"* %36)
          to label %37 unwind label %81

; <label>:37:                                     ; preds = %32
  %38 = load i32, i32* @x.471
  %39 = load i32, i32* @y.472
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  br i1 %49, label %51, label %153

; <label>:51:                                     ; preds = %37, %153
  %52 = load i32, i32* @x.471
  %53 = load i32, i32* @y.472
  %54 = sub i32 %52, -485800725
  %55 = sub i32 %54, 1
  %56 = add i32 %55, -485800725
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  br i1 %76, label %78, label %153

; <label>:78:                                     ; preds = %51
  invoke void @__cxa_rethrow() #14
          to label %124 unwind label %81

; <label>:79:                                     ; preds = %11
  %80 = load %"class.std::set"*, %"class.std::set"** %7, align 8
  ret %"class.std::set"* %80

; <label>:81:                                     ; preds = %78, %32
  %82 = landingpad { i8*, i32 }
          cleanup
  %83 = extractvalue { i8*, i32 } %82, 0
  store i8* %83, i8** %8, align 8
  %84 = extractvalue { i8*, i32 } %82, 1
  store i32 %84, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %85 unwind label %92

; <label>:85:                                     ; preds = %81
  br label %87
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:87:                                     ; preds = %85
  %88 = load i8*, i8** %8, align 8
  %89 = load i32, i32* %9, align 4
  %90 = insertvalue { i8*, i32 } undef, i8* %88, 0
  %91 = insertvalue { i8*, i32 } %90, i32 %89, 1
  resume { i8*, i32 } %91

; <label>:92:                                     ; preds = %81
  %93 = load i32, i32* @x.471
  %94 = load i32, i32* @y.472
  %95 = sub i32 0, 1
  %96 = add i32 %93, %95
  %97 = sub i32 %93, 1
  %98 = mul i32 %93, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %94, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  br i1 %104, label %106, label %154

; <label>:106:                                    ; preds = %92, %154
  %107 = landingpad { i8*, i32 }
          catch i8* null
  %108 = extractvalue { i8*, i32 } %107, 0
  call void @__clang_call_terminate(i8* %108) #12
  %109 = load i32, i32* @x.471
  %110 = load i32, i32* @y.472
  %111 = sub i32 %109, 732213331
  %112 = sub i32 %111, 1
  %113 = add i32 %112, 732213331
  %114 = sub i32 %109, 1
  %115 = mul i32 %109, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %110, 10
  %119 = and i1 %117, %118
  %120 = xor i1 %117, %118
  %121 = or i1 %119, %120
  %122 = or i1 %117, %118
  br i1 %121, label %123, label %154

; <label>:123:                                    ; preds = %106
  unreachable

; <label>:124:                                    ; preds = %78
  %125 = load i32, i32* @x.471
  %126 = load i32, i32* @y.472
  %127 = sub i32 0, 1
  %128 = add i32 %125, %127
  %129 = sub i32 %125, 1
  %130 = mul i32 %125, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %126, 10
  %134 = and i1 %132, %133
  %135 = xor i1 %132, %133
  %136 = or i1 %134, %135
  %137 = or i1 %132, %133
  br i1 %136, label %138, label %157

; <label>:138:                                    ; preds = %124, %157
  %139 = load i32, i32* @x.471
  %140 = load i32, i32* @y.472
  %141 = sub i32 0, 1
  %142 = add i32 %139, %141
  %143 = sub i32 %139, 1
  %144 = mul i32 %139, %142
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %140, 10
  %148 = and i1 %146, %147
  %149 = xor i1 %146, %147
  %150 = or i1 %148, %149
  %151 = or i1 %146, %147
  br i1 %150, label %152, label %157

; <label>:152:                                    ; preds = %138
  unreachable

; <label>:153:                                    ; preds = %51, %37
  br label %51

; <label>:154:                                    ; preds = %106, %92
  %155 = landingpad { i8*, i32 }
          catch i8* null
  %156 = extractvalue { i8*, i32 } %155, 0
  call void @__clang_call_terminate(i8* %156) #12
  br label %106

; <label>:157:                                    ; preds = %138, %124
  br label %138
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt3setIcSt4lessIcESaIcEEJRKS4_EEvPT_DpOT0_(%"class.std::set"*, %"class.std::set"* dereferenceable(48)) #0 comdat {
  %3 = alloca %"class.std::set"*, align 8
  %4 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %3, align 8
  store %"class.std::set"* %1, %"class.std::set"** %4, align 8
  %5 = load %"class.std::set"*, %"class.std::set"** %3, align 8
  %6 = bitcast %"class.std::set"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::set"*
  %8 = load %"class.std::set"*, %"class.std::set"** %4, align 8
  %9 = call dereferenceable(48) %"class.std::set"* @_ZSt7forwardIRKSt3setIcSt4lessIcESaIcEEEOT_RNSt16remove_referenceIS7_E4typeE(%"class.std::set"* dereferenceable(48) %8) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEEC2ERKS3_(%"class.std::set"* %7, %"class.std::set"* dereferenceable(48) %9)
  ret void
}

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #12

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(48) %"class.std::set"* @_ZSt7forwardIRKSt3setIcSt4lessIcESaIcEEEOT_RNSt16remove_referenceIS7_E4typeE(%"class.std::set"* dereferenceable(48)) #5 comdat {
  %2 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %2, align 8
  %3 = load %"class.std::set"*, %"class.std::set"** %2, align 8
  ret %"class.std::set"* %3
}

; Function Attrs: nounwind
declare void @_ZNSaIcEC1ERKS_(%"class.std::allocator"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEEC2ERKS3_RKS4_(%"class.std::_Rb_tree"*, %"struct.std::less"* dereferenceable(1), %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Rb_tree"*, align 8
  %5 = alloca %"struct.std::less"*, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  %7 = alloca %"class.std::allocator.6", align 1
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %4, align 8
  store %"struct.std::less"* %1, %"struct.std::less"** %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %10 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  %11 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %10, i32 0, i32 0
  %12 = load %"struct.std::less"*, %"struct.std::less"** %5, align 8
  %13 = load %"class.std::allocator"*, %"class.std::allocator"** %6, align 8
  call void @_ZNSaISt13_Rb_tree_nodeIcEEC2IcEERKSaIT_E(%"class.std::allocator.6"* %7, %"class.std::allocator"* dereferenceable(1) %13) #3
  invoke void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_Rb_tree_implIS3_Lb1EEC2ERKS3_OSaISt13_Rb_tree_nodeIcEE(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %11, %"struct.std::less"* dereferenceable(1) %12, %"class.std::allocator.6"* dereferenceable(1) %7)
          to label %14 unwind label %57

; <label>:14:                                     ; preds = %3
  %15 = load i32, i32* @x.477
  %16 = load i32, i32* @y.478
  %17 = sub i32 %15, -571398874
  %18 = sub i32 %17, 1
  %19 = add i32 %18, -571398874
  %20 = sub i32 %15, 1
  %21 = mul i32 %15, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %16, 10
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  br i1 %27, label %29, label %108

; <label>:29:                                     ; preds = %14, %108
  call void @_ZNSaISt13_Rb_tree_nodeIcEED2Ev(%"class.std::allocator.6"* %7) #3
  %30 = load i32, i32* @x.477
  %31 = load i32, i32* @y.478
  %32 = add i32 %30, -556441052
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -556441052
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  br i1 %54, label %56, label %108

; <label>:56:                                     ; preds = %29
  ret void

; <label>:57:                                     ; preds = %3
  %58 = load i32, i32* @x.477
  %59 = load i32, i32* @y.478
  %60 = sub i32 %58, -969983667
  %61 = sub i32 %60, 1
  %62 = add i32 %61, -969983667
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  br i1 %70, label %72, label %109

; <label>:72:                                     ; preds = %57, %109
  %73 = landingpad { i8*, i32 }
          cleanup
  %74 = extractvalue { i8*, i32 } %73, 0
  store i8* %74, i8** %8, align 8
  %75 = extractvalue { i8*, i32 } %73, 1
  store i32 %75, i32* %9, align 4
  call void @_ZNSaISt13_Rb_tree_nodeIcEED2Ev(%"class.std::allocator.6"* %7) #3
  %76 = load i32, i32* @x.477
  %77 = load i32, i32* @y.478
  %78 = sub i32 %76, 429452373
  %79 = sub i32 %78, 1
  %80 = add i32 %79, 429452373
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = xor i1 %84, true
  %87 = xor i1 %85, true
  %88 = xor i1 false, true
  %89 = and i1 %86, false
  %90 = and i1 %84, %88
  %91 = and i1 %87, false
  %92 = and i1 %85, %88
  %93 = or i1 %89, %90
  %94 = or i1 %91, %92
  %95 = xor i1 %93, %94
  %96 = or i1 %86, %87
  %97 = xor i1 %96, true
  %98 = or i1 false, %88
  %99 = and i1 %97, %98
  %100 = or i1 %95, %99
  %101 = or i1 %84, %85
  br i1 %100, label %102, label %109

; <label>:102:                                    ; preds = %72
  br label %103

; <label>:103:                                    ; preds = %102
  %104 = load i8*, i8** %8, align 8
  %105 = load i32, i32* %9, align 4
  %106 = insertvalue { i8*, i32 } undef, i8* %104, 0
  %107 = insertvalue { i8*, i32 } %106, i32 %105, 1
  resume { i8*, i32 } %107

; <label>:108:                                    ; preds = %29, %14
  call void @_ZNSaISt13_Rb_tree_nodeIcEED2Ev(%"class.std::allocator.6"* %7) #3
  br label %29

; <label>:109:                                    ; preds = %72, %57
  %110 = landingpad { i8*, i32 }
          cleanup
  %111 = extractvalue { i8*, i32 } %110, 0
  store i8* %111, i8** %8, align 8
  %112 = extractvalue { i8*, i32 } %110, 1
  store i32 %112, i32* %9, align 4
  call void @_ZNSaISt13_Rb_tree_nodeIcEED2Ev(%"class.std::allocator.6"* %7) #3
  br label %72
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE16_M_insert_uniqueIPKcEEvT_S9_(%"class.std::_Rb_tree"*, i8*, i8*) #0 comdat align 2 {
  %4 = alloca %"class.std::_Rb_tree"*
  %5 = alloca %"class.std::_Rb_tree"*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node", align 8
  %9 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %10 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %11 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  %12 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5, align 8
  store %"class.std::_Rb_tree"* %12, %"class.std::_Rb_tree"** %4
  %13 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4
  call void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE11_Alloc_nodeC2ERS5_(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* %8, %"class.std::_Rb_tree"* dereferenceable(48) %13)
  %14 = alloca i32
  store i32 1063157575, i32* %14
  br label %15

; <label>:15:                                     ; preds = %3, %147
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1063157575, label %18
    i32 -1141922951, label %23
    i32 -382392368, label %38
    i32 1840783683, label %74
    i32 2038300472, label %75
    i32 -1735424945, label %102
    i32 -737557941, label %132
    i32 2025639637, label %133
    i32 -2044773043, label %134
    i32 1507677830, label %144
  ]

; <label>:17:                                     ; preds = %15
  br label %147

; <label>:18:                                     ; preds = %15
  %19 = load i8*, i8** %6, align 8
  %20 = load i8*, i8** %7, align 8
  %21 = icmp ne i8* %19, %20
  %22 = select i1 %21, i32 -1141922951, i32 2025639637
  store i32 %22, i32* %14
  br label %147

; <label>:23:                                     ; preds = %15
  %24 = load i32, i32* @x.479
  %25 = load i32, i32* @y.480
  %26 = sub i32 0, 1
  %27 = add i32 %24, %26
  %28 = sub i32 %24, 1
  %29 = mul i32 %24, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %25, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  %37 = select i1 %35, i32 -382392368, i32 -2044773043
  store i32 %37, i32* %14
  br label %147

; <label>:38:                                     ; preds = %15
  %39 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4
  %40 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE3endEv(%"class.std::_Rb_tree"* %39) #3
  %41 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %10, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %40, %"struct.std::_Rb_tree_node_base"** %41, align 8
  call void @_ZNSt23_Rb_tree_const_iteratorIcEC2ERKSt17_Rb_tree_iteratorIcE(%"struct.std::_Rb_tree_const_iterator"* %9, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %10) #3
  %42 = load i8*, i8** %6, align 8
  %43 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %9, i32 0, i32 0
  %44 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %43, align 8
  %45 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4
  %46 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE17_M_insert_unique_IRKcNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIcESt23_Rb_tree_const_iteratorIcEOT_RT0_(%"class.std::_Rb_tree"* %45, %"struct.std::_Rb_tree_node_base"* %44, i8* dereferenceable(1) %42, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* dereferenceable(8) %8)
  %47 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %11, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %46, %"struct.std::_Rb_tree_node_base"** %47, align 8
  %48 = load i32, i32* @x.479
  %49 = load i32, i32* @y.480
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 1840783683, i32 -2044773043
  store i32 %73, i32* %14
  br label %147

; <label>:74:                                     ; preds = %15
  store i32 2038300472, i32* %14
  br label %147

; <label>:75:                                     ; preds = %15
  %76 = load i32, i32* @x.479
  %77 = load i32, i32* @y.480
  %78 = sub i32 0, 1
  %79 = add i32 %76, %78
  %80 = sub i32 %76, 1
  %81 = mul i32 %76, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %77, 10
  %85 = xor i1 %83, true
  %86 = xor i1 %84, true
  %87 = xor i1 true, true
  %88 = and i1 %85, true
  %89 = and i1 %83, %87
  %90 = and i1 %86, true
  %91 = and i1 %84, %87
  %92 = or i1 %88, %89
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = or i1 %85, %86
  %96 = xor i1 %95, true
  %97 = or i1 true, %87
  %98 = and i1 %96, %97
  %99 = or i1 %94, %98
  %100 = or i1 %83, %84
  %101 = select i1 %99, i32 -1735424945, i32 1507677830
  store i32 %101, i32* %14
  br label %147

; <label>:102:                                    ; preds = %15
  %103 = load i8*, i8** %6, align 8
  %104 = getelementptr inbounds i8, i8* %103, i32 1
  store i8* %104, i8** %6, align 8
  %105 = load i32, i32* @x.479
  %106 = load i32, i32* @y.480
  %107 = sub i32 %105, 212787071
  %108 = sub i32 %107, 1
  %109 = add i32 %108, 212787071
  %110 = sub i32 %105, 1
  %111 = mul i32 %105, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %106, 10
  %115 = xor i1 %113, true
  %116 = xor i1 %114, true
  %117 = xor i1 false, true
  %118 = and i1 %115, false
  %119 = and i1 %113, %117
  %120 = and i1 %116, false
  %121 = and i1 %114, %117
  %122 = or i1 %118, %119
  %123 = or i1 %120, %121
  %124 = xor i1 %122, %123
  %125 = or i1 %115, %116
  %126 = xor i1 %125, true
  %127 = or i1 false, %117
  %128 = and i1 %126, %127
  %129 = or i1 %124, %128
  %130 = or i1 %113, %114
  %131 = select i1 %129, i32 -737557941, i32 1507677830
  store i32 %131, i32* %14
  br label %147

; <label>:132:                                    ; preds = %15
  store i32 1063157575, i32* %14
  br label %147

; <label>:133:                                    ; preds = %15
  ret void

; <label>:134:                                    ; preds = %15
  %135 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4
  %136 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE3endEv(%"class.std::_Rb_tree"* %135) #3
  %137 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %10, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %136, %"struct.std::_Rb_tree_node_base"** %137, align 8
  call void @_ZNSt23_Rb_tree_const_iteratorIcEC2ERKSt17_Rb_tree_iteratorIcE(%"struct.std::_Rb_tree_const_iterator"* %9, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %10) #3
  %138 = load i8*, i8** %6, align 8
  %139 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %9, i32 0, i32 0
  %140 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %139, align 8
  %141 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4
  %142 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE17_M_insert_unique_IRKcNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIcESt23_Rb_tree_const_iteratorIcEOT_RT0_(%"class.std::_Rb_tree"* %141, %"struct.std::_Rb_tree_node_base"* %140, i8* dereferenceable(1) %138, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Alloc_node"* dereferenceable(8) %8)
  %143 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %11, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %142, %"struct.std::_Rb_tree_node_base"** %143, align 8
  store i32 -382392368, i32* %14
  br label %147

; <label>:144:                                    ; preds = %15
  %145 = load i8*, i8** %6, align 8
  %146 = getelementptr inbounds i8, i8* %145, i32 1
  store i8* %146, i8** %6, align 8
  store i32 -1735424945, i32* %14
  br label %147

; <label>:147:                                    ; preds = %144, %134, %132, %102, %75, %74, %38, %23, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNKSt16initializer_listIcE5beginEv(%"class.std::initializer_list"*) #5 comdat align 2 {
  %2 = alloca %"class.std::initializer_list"*, align 8
  store %"class.std::initializer_list"* %0, %"class.std::initializer_list"** %2, align 8
  %3 = load %"class.std::initializer_list"*, %"class.std::initializer_list"** %2, align 8
  %4 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %3, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  ret i8* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNKSt16initializer_listIcE3endEv(%"class.std::initializer_list"*) #5 comdat align 2 {
  %2 = alloca %"class.std::initializer_list"*, align 8
  store %"class.std::initializer_list"* %0, %"class.std::initializer_list"** %2, align 8
  %3 = load %"class.std::initializer_list"*, %"class.std::initializer_list"** %2, align 8
  %4 = call i8* @_ZNKSt16initializer_listIcE5beginEv(%"class.std::initializer_list"* %3) #3
  %5 = call i64 @_ZNKSt16initializer_listIcE4sizeEv(%"class.std::initializer_list"* %3) #3
  %6 = getelementptr inbounds i8, i8* %4, i64 %5
  ret i8* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeIcEEC2IcEERKSaIT_E(%"class.std::allocator.6"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.6"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator.6"* %0, %"class.std::allocator.6"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"class.std::allocator.6"*, %"class.std::allocator.6"** %3, align 8
  %6 = bitcast %"class.std::allocator.6"* %5 to %"class.__gnu_cxx::new_allocator.7"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIcEEC2Ev(%"class.__gnu_cxx::new_allocator.7"* %6) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE3endEv(%"class.std::_Rb_tree"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  %4 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %5, i32 0, i32 1
  call void @_ZNSt17_Rb_tree_iteratorIcEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %2, %"struct.std::_Rb_tree_node_base"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %2, i32 0, i32 0
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_node_base"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt16initializer_listIcE4sizeEv(%"class.std::initializer_list"*) #5 comdat align 2 {
  %2 = alloca %"class.std::initializer_list"*, align 8
  store %"class.std::initializer_list"* %0, %"class.std::initializer_list"** %2, align 8
  %3 = load %"class.std::initializer_list"*, %"class.std::initializer_list"** %2, align 8
  %4 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(48) %"class.std::set"* @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EEixEm(%"class.std::vector"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::set<char, std::less<char>, std::allocator<char> >, std::allocator<std::set<char, std::less<char>, std::allocator<char> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::set"*, %"class.std::set"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::set", %"class.std::set"* %9, i64 %10
  ret %"class.std::set"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(48) %"class.std::set"* @_ZNSt3setIcSt4lessIcESaIcEEaSERKS3_(%"class.std::set"*, %"class.std::set"* dereferenceable(48)) #0 comdat align 2 {
  %3 = alloca %"class.std::set"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.493
  %7 = load i32, i32* @y.494
  %8 = sub i32 %6, -2122747483
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -2122747483
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1863349901, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %74
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1863349901, label %20
    i32 1035410042, label %40
    i32 -1595603874, label %64
    i32 -192978644, label %66
  ]

; <label>:19:                                     ; preds = %17
  br label %74

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1035410042, i32 -192978644
  store i32 %39, i32* %16
  br label %74

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::set"*, align 8
  %42 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %41, align 8
  store %"class.std::set"* %1, %"class.std::set"** %42, align 8
  %43 = load %"class.std::set"*, %"class.std::set"** %41, align 8
  store %"class.std::set"* %43, %"class.std::set"** %3
  %44 = load %"class.std::set"*, %"class.std::set"** %42, align 8
  %45 = getelementptr inbounds %"class.std::set", %"class.std::set"* %44, i32 0, i32 0
  %46 = load volatile %"class.std::set"*, %"class.std::set"** %3
  %47 = getelementptr inbounds %"class.std::set", %"class.std::set"* %46, i32 0, i32 0
  %48 = call dereferenceable(48) %"class.std::_Rb_tree"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEEaSERKS5_(%"class.std::_Rb_tree"* %47, %"class.std::_Rb_tree"* dereferenceable(48) %45)
  %49 = load i32, i32* @x.493
  %50 = load i32, i32* @y.494
  %51 = sub i32 %49, 241485565
  %52 = sub i32 %51, 1
  %53 = add i32 %52, 241485565
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 -1595603874, i32 -192978644
  store i32 %63, i32* %16
  br label %74

; <label>:64:                                     ; preds = %17
  %65 = load volatile %"class.std::set"*, %"class.std::set"** %3
  ret %"class.std::set"* %65

; <label>:66:                                     ; preds = %17
  %67 = alloca %"class.std::set"*, align 8
  %68 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %67, align 8
  store %"class.std::set"* %1, %"class.std::set"** %68, align 8
  %69 = load %"class.std::set"*, %"class.std::set"** %67, align 8
  %70 = load %"class.std::set"*, %"class.std::set"** %68, align 8
  %71 = getelementptr inbounds %"class.std::set", %"class.std::set"* %70, i32 0, i32 0
  %72 = getelementptr inbounds %"class.std::set", %"class.std::set"* %69, i32 0, i32 0
  %73 = call dereferenceable(48) %"class.std::_Rb_tree"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEEaSERKS5_(%"class.std::_Rb_tree"* %72, %"class.std::_Rb_tree"* dereferenceable(48) %71)
  store i32 1035410042, i32* %16
  br label %74

; <label>:74:                                     ; preds = %66, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(48) %"class.std::_Rb_tree"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEEaSERKS5_(%"class.std::_Rb_tree"*, %"class.std::_Rb_tree"* dereferenceable(48)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  %4 = alloca %"class.std::_Rb_tree"*, align 8
  %5 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  store %"class.std::_Rb_tree"* %1, %"class.std::_Rb_tree"** %4, align 8
  %8 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %9 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  %10 = icmp ne %"class.std::_Rb_tree"* %8, %9
  br i1 %10, label %11, label %156

; <label>:11:                                     ; preds = %2
  call void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE20_Reuse_or_alloc_nodeC2ERS5_(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %5, %"class.std::_Rb_tree"* dereferenceable(48) %8)
  %12 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %8, i32 0, i32 0
  invoke void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_Rb_tree_implIS3_Lb1EE8_M_resetEv(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %12)
          to label %13 unwind label %98

; <label>:13:                                     ; preds = %11
  %14 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  %15 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %8, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %17, i32 0, i32 0
  %19 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  %20 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_M_rootEv(%"class.std::_Rb_tree"* %19) #3
  %21 = icmp ne %"struct.std::_Rb_tree_node_base"* %20, null
  br i1 %21, label %22, label %102

; <label>:22:                                     ; preds = %13
  %23 = load i32, i32* @x.495
  %24 = load i32, i32* @y.496
  %25 = sub i32 %23, 1736774481
  %26 = sub i32 %25, 1
  %27 = add i32 %26, 1736774481
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 false, true
  %36 = and i1 %33, false
  %37 = and i1 %31, %35
  %38 = and i1 %34, false
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 false, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  br i1 %47, label %49, label %162

; <label>:49:                                     ; preds = %22, %162
  %50 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  %51 = call %"struct.std::_Rb_tree_node"* @_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_M_beginEv(%"class.std::_Rb_tree"* %50) #3
  %52 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE6_M_endEv(%"class.std::_Rb_tree"* %8) #3
  %53 = load i32, i32* @x.495
  %54 = load i32, i32* @y.496
  %55 = sub i32 %53, -1202191802
  %56 = sub i32 %55, 1
  %57 = add i32 %56, -1202191802
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 false, true
  %66 = and i1 %63, false
  %67 = and i1 %61, %65
  %68 = and i1 %64, false
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 false, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  br i1 %77, label %79, label %162

; <label>:79:                                     ; preds = %49
  %80 = invoke %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_M_copyINS5_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIcEPKS9_SA_RT_(%"class.std::_Rb_tree"* %8, %"struct.std::_Rb_tree_node"* %51, %"struct.std::_Rb_tree_node"* %52, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* dereferenceable(24) %5)
          to label %81 unwind label %98

; <label>:81:                                     ; preds = %79
  %82 = bitcast %"struct.std::_Rb_tree_node"* %80 to %"struct.std::_Rb_tree_node_base"*
  %83 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_M_rootEv(%"class.std::_Rb_tree"* %8) #3
  store %"struct.std::_Rb_tree_node_base"* %82, %"struct.std::_Rb_tree_node_base"** %83, align 8
  %84 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_M_rootEv(%"class.std::_Rb_tree"* %8) #3
  %85 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %84, align 8
  %86 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE10_S_minimumEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %85) #3
  %87 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE11_M_leftmostEv(%"class.std::_Rb_tree"* %8) #3
  store %"struct.std::_Rb_tree_node_base"* %86, %"struct.std::_Rb_tree_node_base"** %87, align 8
  %88 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_M_rootEv(%"class.std::_Rb_tree"* %8) #3
  %89 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %88, align 8
  %90 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE10_S_maximumEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %89) #3
  %91 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE12_M_rightmostEv(%"class.std::_Rb_tree"* %8) #3
  store %"struct.std::_Rb_tree_node_base"* %90, %"struct.std::_Rb_tree_node_base"** %91, align 8
  %92 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  %93 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %92, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %93, i32 0, i32 2
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %8, i32 0, i32 0
  %97 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %96, i32 0, i32 2
  store i64 %95, i64* %97, align 8
  br label %102

; <label>:98:                                     ; preds = %79, %11
  %99 = landingpad { i8*, i32 }
          cleanup
  %100 = extractvalue { i8*, i32 } %99, 0
  store i8* %100, i8** %6, align 8
  %101 = extractvalue { i8*, i32 } %99, 1
  store i32 %101, i32* %7, align 4
  call void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE20_Reuse_or_alloc_nodeD2Ev(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %5) #3
  br label %157

; <label>:102:                                    ; preds = %81, %13
  %103 = load i32, i32* @x.495
  %104 = load i32, i32* @y.496
  %105 = sub i32 %103, -389993148
  %106 = sub i32 %105, 1
  %107 = add i32 %106, -389993148
  %108 = sub i32 %103, 1
  %109 = mul i32 %103, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %104, 10
  %113 = xor i1 %111, true
  %114 = xor i1 %112, true
  %115 = xor i1 false, true
  %116 = and i1 %113, false
  %117 = and i1 %111, %115
  %118 = and i1 %114, false
  %119 = and i1 %112, %115
  %120 = or i1 %116, %117
  %121 = or i1 %118, %119
  %122 = xor i1 %120, %121
  %123 = or i1 %113, %114
  %124 = xor i1 %123, true
  %125 = or i1 false, %115
  %126 = and i1 %124, %125
  %127 = or i1 %122, %126
  %128 = or i1 %111, %112
  br i1 %127, label %129, label %166

; <label>:129:                                    ; preds = %102, %166
  call void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE20_Reuse_or_alloc_nodeD2Ev(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %5) #3
  %130 = load i32, i32* @x.495
  %131 = load i32, i32* @y.496
  %132 = sub i32 0, 1
  %133 = add i32 %130, %132
  %134 = sub i32 %130, 1
  %135 = mul i32 %130, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %131, 10
  %139 = xor i1 %137, true
  %140 = xor i1 %138, true
  %141 = xor i1 false, true
  %142 = and i1 %139, false
  %143 = and i1 %137, %141
  %144 = and i1 %140, false
  %145 = and i1 %138, %141
  %146 = or i1 %142, %143
  %147 = or i1 %144, %145
  %148 = xor i1 %146, %147
  %149 = or i1 %139, %140
  %150 = xor i1 %149, true
  %151 = or i1 false, %141
  %152 = and i1 %150, %151
  %153 = or i1 %148, %152
  %154 = or i1 %137, %138
  br i1 %153, label %155, label %166

; <label>:155:                                    ; preds = %129
  br label %156

; <label>:156:                                    ; preds = %155, %2
  ret %"class.std::_Rb_tree"* %8

; <label>:157:                                    ; preds = %98
  %158 = load i8*, i8** %6, align 8
  %159 = load i32, i32* %7, align 4
  %160 = insertvalue { i8*, i32 } undef, i8* %158, 0
  %161 = insertvalue { i8*, i32 } %160, i32 %159, 1
  resume { i8*, i32 } %161

; <label>:162:                                    ; preds = %49, %22
  %163 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  %164 = call %"struct.std::_Rb_tree_node"* @_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_M_beginEv(%"class.std::_Rb_tree"* %163) #3
  %165 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE6_M_endEv(%"class.std::_Rb_tree"* %8) #3
  br label %49

; <label>:166:                                    ; preds = %129, %102
  call void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE20_Reuse_or_alloc_nodeD2Ev(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %5) #3
  br label %129
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE20_Reuse_or_alloc_nodeC2ERS5_(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"class.std::_Rb_tree"* dereferenceable(48)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node_base"*
  %4 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*
  %5 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, align 8
  %6 = alloca %"class.std::_Rb_tree"*, align 8
  store %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %0, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %5, align 8
  store %"class.std::_Rb_tree"* %1, %"class.std::_Rb_tree"** %6, align 8
  %7 = load %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %5, align 8
  store %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %7, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %8 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %9 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %8, i32 0, i32 0
  %10 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
  %11 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_M_rootEv(%"class.std::_Rb_tree"* %10) #3
  %12 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  store %"struct.std::_Rb_tree_node_base"* %12, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %13 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %14 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %13, i32 0, i32 1
  %15 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
  %16 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE12_M_rightmostEv(%"class.std::_Rb_tree"* %15) #3
  %17 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %16, align 8
  store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %14, align 8
  %18 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %19 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %18, i32 0, i32 2
  %20 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
  store %"class.std::_Rb_tree"* %20, %"class.std::_Rb_tree"** %19, align 8
  %21 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %22 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %21, i32 0, i32 0
  %23 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %22, align 8
  store %"struct.std::_Rb_tree_node_base"* %23, %"struct.std::_Rb_tree_node_base"** %3
  %24 = alloca i32
  store i32 -241658845, i32* %24
  br label %25

; <label>:25:                                     ; preds = %2, %132
  %26 = load i32, i32* %24
  switch i32 %26, label %27 [
    i32 -241658845, label %28
    i32 241832231, label %32
    i32 2037227822, label %44
    i32 -725305083, label %60
    i32 -501782960, label %83
    i32 506523929, label %84
    i32 -721844067, label %85
    i32 -1240210277, label %101
    i32 1002855072, label %119
    i32 -1077503655, label %120
    i32 -1878539172, label %121
    i32 -958049514, label %129
  ]

; <label>:27:                                     ; preds = %25
  br label %132

; <label>:28:                                     ; preds = %25
  %29 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %3
  %30 = icmp ne %"struct.std::_Rb_tree_node_base"* %29, null
  %31 = select i1 %30, i32 241832231, i32 -721844067
  store i32 %31, i32* %24
  br label %132

; <label>:32:                                     ; preds = %25
  %33 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %34 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %33, i32 0, i32 0
  %35 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %34, align 8
  %36 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %35, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %36, align 8
  %37 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %38 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %37, i32 0, i32 1
  %39 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %38, align 8
  %40 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %39, i32 0, i32 2
  %41 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %40, align 8
  %42 = icmp ne %"struct.std::_Rb_tree_node_base"* %41, null
  %43 = select i1 %42, i32 2037227822, i32 506523929
  store i32 %43, i32* %24
  br label %132

; <label>:44:                                     ; preds = %25
  %45 = load i32, i32* @x.497
  %46 = load i32, i32* @y.498
  %47 = sub i32 %45, 828830961
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 828830961
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -725305083, i32 -1878539172
  store i32 %59, i32* %24
  br label %132

; <label>:60:                                     ; preds = %25
  %61 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %62 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %61, i32 0, i32 1
  %63 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %63, i32 0, i32 2
  %65 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %64, align 8
  %66 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %67 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %66, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %65, %"struct.std::_Rb_tree_node_base"** %67, align 8
  %68 = load i32, i32* @x.497
  %69 = load i32, i32* @y.498
  %70 = add i32 %68, -191285889
  %71 = sub i32 %70, 1
  %72 = sub i32 %71, -191285889
  %73 = sub i32 %68, 1
  %74 = mul i32 %68, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %69, 10
  %78 = and i1 %76, %77
  %79 = xor i1 %76, %77
  %80 = or i1 %78, %79
  %81 = or i1 %76, %77
  %82 = select i1 %80, i32 -501782960, i32 -1878539172
  store i32 %82, i32* %24
  br label %132

; <label>:83:                                     ; preds = %25
  store i32 506523929, i32* %24
  br label %132

; <label>:84:                                     ; preds = %25
  store i32 -1077503655, i32* %24
  br label %132

; <label>:85:                                     ; preds = %25
  %86 = load i32, i32* @x.497
  %87 = load i32, i32* @y.498
  %88 = sub i32 %86, -691023750
  %89 = sub i32 %88, 1
  %90 = add i32 %89, -691023750
  %91 = sub i32 %86, 1
  %92 = mul i32 %86, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %87, 10
  %96 = and i1 %94, %95
  %97 = xor i1 %94, %95
  %98 = or i1 %96, %97
  %99 = or i1 %94, %95
  %100 = select i1 %98, i32 -1240210277, i32 -958049514
  store i32 %100, i32* %24
  br label %132

; <label>:101:                                    ; preds = %25
  %102 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %103 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %102, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %103, align 8
  %104 = load i32, i32* @x.497
  %105 = load i32, i32* @y.498
  %106 = sub i32 %104, -385373256
  %107 = sub i32 %106, 1
  %108 = add i32 %107, -385373256
  %109 = sub i32 %104, 1
  %110 = mul i32 %104, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %105, 10
  %114 = and i1 %112, %113
  %115 = xor i1 %112, %113
  %116 = or i1 %114, %115
  %117 = or i1 %112, %113
  %118 = select i1 %116, i32 1002855072, i32 -958049514
  store i32 %118, i32* %24
  br label %132

; <label>:119:                                    ; preds = %25
  store i32 -1077503655, i32* %24
  br label %132

; <label>:120:                                    ; preds = %25
  ret void

; <label>:121:                                    ; preds = %25
  %122 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %123 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %122, i32 0, i32 1
  %124 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %123, align 8
  %125 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %124, i32 0, i32 2
  %126 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %125, align 8
  %127 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %128 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %127, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %126, %"struct.std::_Rb_tree_node_base"** %128, align 8
  store i32 -725305083, i32* %24
  br label %132

; <label>:129:                                    ; preds = %25
  %130 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %131 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %130, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %131, align 8
  store i32 -1240210277, i32* %24
  br label %132

; <label>:132:                                    ; preds = %129, %121, %119, %101, %85, %84, %83, %60, %44, %32, %28, %27
  br label %25
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_Rb_tree_implIS3_Lb1EE8_M_resetEv(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"** %2, align 8
  %3 = load %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %4, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %7, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %10 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %3, i32 0, i32 1
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %10, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %9, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %12 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %3, i32 0, i32 2
  store i64 0, i64* %12, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_M_copyINS5_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIcEPKS9_SA_RT_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::_Rb_tree"*, align 8
  %6 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %7 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %8 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, align 8
  %9 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %10 = alloca i8*
  %11 = alloca i32
  %12 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %5, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %6, align 8
  store %"struct.std::_Rb_tree_node"* %2, %"struct.std::_Rb_tree_node"** %7, align 8
  store %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %3, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %8, align 8
  %13 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5, align 8
  %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %15 = load %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %8, align 8
  %16 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_M_clone_nodeINS5_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIcEPKS9_RT_(%"class.std::_Rb_tree"* %13, %"struct.std::_Rb_tree_node"* %14, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* dereferenceable(24) %15)
  store %"struct.std::_Rb_tree_node"* %16, %"struct.std::_Rb_tree_node"** %9, align 8
  %17 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  %18 = bitcast %"struct.std::_Rb_tree_node"* %17 to %"struct.std::_Rb_tree_node_base"*
  %19 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %20 = bitcast %"struct.std::_Rb_tree_node"* %19 to %"struct.std::_Rb_tree_node_base"*
  %21 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %20, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %18, %"struct.std::_Rb_tree_node_base"** %21, align 8
  %22 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %23 = bitcast %"struct.std::_Rb_tree_node"* %22 to %"struct.std::_Rb_tree_node_base"*
  %24 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %23, i32 0, i32 3
  %25 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %24, align 8
  %26 = icmp ne %"struct.std::_Rb_tree_node_base"* %25, null
  br i1 %26, label %27, label %102

; <label>:27:                                     ; preds = %4
  %28 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %29 = bitcast %"struct.std::_Rb_tree_node"* %28 to %"struct.std::_Rb_tree_node_base"*
  %30 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_S_rightEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %29) #3
  %31 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %32 = load %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %8, align 8
  %33 = invoke %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_M_copyINS5_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIcEPKS9_SA_RT_(%"class.std::_Rb_tree"* %13, %"struct.std::_Rb_tree_node"* %30, %"struct.std::_Rb_tree_node"* %31, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* dereferenceable(24) %32)
          to label %34 unwind label %39

; <label>:34:                                     ; preds = %27
  %35 = bitcast %"struct.std::_Rb_tree_node"* %33 to %"struct.std::_Rb_tree_node_base"*
  %36 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %37 = bitcast %"struct.std::_Rb_tree_node"* %36 to %"struct.std::_Rb_tree_node_base"*
  %38 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %37, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %35, %"struct.std::_Rb_tree_node_base"** %38, align 8
  br label %102

; <label>:39:                                     ; preds = %130, %110, %27
  %40 = landingpad { i8*, i32 }
          catch i8* null
  %41 = extractvalue { i8*, i32 } %40, 0
  store i8* %41, i8** %10, align 8
  %42 = extractvalue { i8*, i32 } %40, 1
  store i32 %42, i32* %11, align 4
  br label %43

; <label>:43:                                     ; preds = %39
  %44 = load i8*, i8** %10, align 8
  %45 = call i8* @__cxa_begin_catch(i8* %44) #3
  %46 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  invoke void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_M_eraseEPSt13_Rb_tree_nodeIcE(%"class.std::_Rb_tree"* %13, %"struct.std::_Rb_tree_node"* %46)
          to label %47 unwind label %148

; <label>:47:                                     ; preds = %43
  %48 = load i32, i32* @x.501
  %49 = load i32, i32* @y.502
  %50 = add i32 %48, -304109722
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, -304109722
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  br i1 %72, label %74, label %217

; <label>:74:                                     ; preds = %47, %217
  %75 = load i32, i32* @x.501
  %76 = load i32, i32* @y.502
  %77 = add i32 %75, -1824548712
  %78 = sub i32 %77, 1
  %79 = sub i32 %78, -1824548712
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = xor i1 %83, true
  %86 = xor i1 %84, true
  %87 = xor i1 true, true
  %88 = and i1 %85, true
  %89 = and i1 %83, %87
  %90 = and i1 %86, true
  %91 = and i1 %84, %87
  %92 = or i1 %88, %89
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = or i1 %85, %86
  %96 = xor i1 %95, true
  %97 = or i1 true, %87
  %98 = and i1 %96, %97
  %99 = or i1 %94, %98
  %100 = or i1 %83, %84
  br i1 %99, label %101, label %217

; <label>:101:                                    ; preds = %74
  invoke void @__cxa_rethrow() #14
          to label %216 unwind label %148

; <label>:102:                                    ; preds = %34, %4
  %103 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  store %"struct.std::_Rb_tree_node"* %103, %"struct.std::_Rb_tree_node"** %7, align 8
  %104 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %105 = bitcast %"struct.std::_Rb_tree_node"* %104 to %"struct.std::_Rb_tree_node_base"*
  %106 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_S_leftEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %105) #3
  store %"struct.std::_Rb_tree_node"* %106, %"struct.std::_Rb_tree_node"** %6, align 8
  br label %107

; <label>:107:                                    ; preds = %142, %102
  %108 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %109 = icmp ne %"struct.std::_Rb_tree_node"* %108, null
  br i1 %109, label %110, label %147

; <label>:110:                                    ; preds = %107
  %111 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %112 = load %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %8, align 8
  %113 = invoke %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_M_clone_nodeINS5_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIcEPKS9_RT_(%"class.std::_Rb_tree"* %13, %"struct.std::_Rb_tree_node"* %111, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* dereferenceable(24) %112)
          to label %114 unwind label %39

; <label>:114:                                    ; preds = %110
  store %"struct.std::_Rb_tree_node"* %113, %"struct.std::_Rb_tree_node"** %12, align 8
  %115 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
  %116 = bitcast %"struct.std::_Rb_tree_node"* %115 to %"struct.std::_Rb_tree_node_base"*
  %117 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  %118 = bitcast %"struct.std::_Rb_tree_node"* %117 to %"struct.std::_Rb_tree_node_base"*
  %119 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %118, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %116, %"struct.std::_Rb_tree_node_base"** %119, align 8
  %120 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  %121 = bitcast %"struct.std::_Rb_tree_node"* %120 to %"struct.std::_Rb_tree_node_base"*
  %122 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
  %123 = bitcast %"struct.std::_Rb_tree_node"* %122 to %"struct.std::_Rb_tree_node_base"*
  %124 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %123, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %121, %"struct.std::_Rb_tree_node_base"** %124, align 8
  %125 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %126 = bitcast %"struct.std::_Rb_tree_node"* %125 to %"struct.std::_Rb_tree_node_base"*
  %127 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %126, i32 0, i32 3
  %128 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %127, align 8
  %129 = icmp ne %"struct.std::_Rb_tree_node_base"* %128, null
  br i1 %129, label %130, label %142

; <label>:130:                                    ; preds = %114
  %131 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %132 = bitcast %"struct.std::_Rb_tree_node"* %131 to %"struct.std::_Rb_tree_node_base"*
  %133 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_S_rightEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %132) #3
  %134 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
  %135 = load %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %8, align 8
  %136 = invoke %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_M_copyINS5_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIcEPKS9_SA_RT_(%"class.std::_Rb_tree"* %13, %"struct.std::_Rb_tree_node"* %133, %"struct.std::_Rb_tree_node"* %134, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* dereferenceable(24) %135)
          to label %137 unwind label %39

; <label>:137:                                    ; preds = %130
  %138 = bitcast %"struct.std::_Rb_tree_node"* %136 to %"struct.std::_Rb_tree_node_base"*
  %139 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
  %140 = bitcast %"struct.std::_Rb_tree_node"* %139 to %"struct.std::_Rb_tree_node_base"*
  %141 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %140, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %138, %"struct.std::_Rb_tree_node_base"** %141, align 8
  br label %142

; <label>:142:                                    ; preds = %137, %114
  %143 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
  store %"struct.std::_Rb_tree_node"* %143, %"struct.std::_Rb_tree_node"** %7, align 8
  %144 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %145 = bitcast %"struct.std::_Rb_tree_node"* %144 to %"struct.std::_Rb_tree_node_base"*
  %146 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_S_leftEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %145) #3
  store %"struct.std::_Rb_tree_node"* %146, %"struct.std::_Rb_tree_node"** %6, align 8
  br label %107

; <label>:147:                                    ; preds = %107
  br label %153

; <label>:148:                                    ; preds = %101, %43
  %149 = landingpad { i8*, i32 }
          cleanup
  %150 = extractvalue { i8*, i32 } %149, 0
  store i8* %150, i8** %10, align 8
  %151 = extractvalue { i8*, i32 } %149, 1
  store i32 %151, i32* %11, align 4
  invoke void @__cxa_end_catch()
          to label %152 unwind label %213

; <label>:152:                                    ; preds = %148
  br label %155

; <label>:153:                                    ; preds = %147
  %154 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  ret %"struct.std::_Rb_tree_node"* %154

; <label>:155:                                    ; preds = %152
  %156 = load i32, i32* @x.501
  %157 = load i32, i32* @y.502
  %158 = add i32 %156, 761005806
  %159 = sub i32 %158, 1
  %160 = sub i32 %159, 761005806
  %161 = sub i32 %156, 1
  %162 = mul i32 %156, %160
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %157, 10
  %166 = xor i1 %164, true
  %167 = xor i1 %165, true
  %168 = xor i1 true, true
  %169 = and i1 %166, true
  %170 = and i1 %164, %168
  %171 = and i1 %167, true
  %172 = and i1 %165, %168
  %173 = or i1 %169, %170
  %174 = or i1 %171, %172
  %175 = xor i1 %173, %174
  %176 = or i1 %166, %167
  %177 = xor i1 %176, true
  %178 = or i1 true, %168
  %179 = and i1 %177, %178
  %180 = or i1 %175, %179
  %181 = or i1 %164, %165
  br i1 %180, label %182, label %218

; <label>:182:                                    ; preds = %155, %218
  %183 = load i8*, i8** %10, align 8
  %184 = load i32, i32* %11, align 4
  %185 = insertvalue { i8*, i32 } undef, i8* %183, 0
  %186 = insertvalue { i8*, i32 } %185, i32 %184, 1
  %187 = load i32, i32* @x.501
  %188 = load i32, i32* @y.502
  %189 = sub i32 0, 1
  %190 = add i32 %187, %189
  %191 = sub i32 %187, 1
  %192 = mul i32 %187, %190
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %188, 10
  %196 = xor i1 %194, true
  %197 = xor i1 %195, true
  %198 = xor i1 false, true
  %199 = and i1 %196, false
  %200 = and i1 %194, %198
  %201 = and i1 %197, false
  %202 = and i1 %195, %198
  %203 = or i1 %199, %200
  %204 = or i1 %201, %202
  %205 = xor i1 %203, %204
  %206 = or i1 %196, %197
  %207 = xor i1 %206, true
  %208 = or i1 false, %198
  %209 = and i1 %207, %208
  %210 = or i1 %205, %209
  %211 = or i1 %194, %195
  br i1 %210, label %212, label %218

; <label>:212:                                    ; preds = %182
  resume { i8*, i32 } %186

; <label>:213:                                    ; preds = %148
  %214 = landingpad { i8*, i32 }
          catch i8* null
  %215 = extractvalue { i8*, i32 } %214, 0
  call void @__clang_call_terminate(i8* %215) #12
  unreachable

; <label>:216:                                    ; preds = %101
  unreachable

; <label>:217:                                    ; preds = %74, %47
  br label %74

; <label>:218:                                    ; preds = %182, %155
  %219 = load i8*, i8** %10, align 8
  %220 = load i32, i32* %11, align 4
  %221 = insertvalue { i8*, i32 } undef, i8* %219, 0
  %222 = insertvalue { i8*, i32 } %221, i32 %220, 1
  br label %182
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE20_Reuse_or_alloc_nodeD2Ev(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, align 8
  store %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %0, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %2, align 8
  %3 = load %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %3, i32 0, i32 2
  %5 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %3, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = bitcast %"struct.std::_Rb_tree_node_base"* %7 to %"struct.std::_Rb_tree_node"*
  invoke void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_M_eraseEPSt13_Rb_tree_nodeIcE(%"class.std::_Rb_tree"* %5, %"struct.std::_Rb_tree_node"* %8)
          to label %9 unwind label %51

; <label>:9:                                      ; preds = %1
  %10 = load i32, i32* @x.503
  %11 = load i32, i32* @y.504
  %12 = add i32 %10, -2009525869
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, -2009525869
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %11, 10
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  br i1 %22, label %24, label %54

; <label>:24:                                     ; preds = %9, %54
  %25 = load i32, i32* @x.503
  %26 = load i32, i32* @y.504
  %27 = sub i32 0, 1
  %28 = add i32 %25, %27
  %29 = sub i32 %25, 1
  %30 = mul i32 %25, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %26, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 false, true
  %37 = and i1 %34, false
  %38 = and i1 %32, %36
  %39 = and i1 %35, false
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 false, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  br i1 %48, label %50, label %54

; <label>:50:                                     ; preds = %24
  ret void

; <label>:51:                                     ; preds = %1
  %52 = landingpad { i8*, i32 }
          catch i8* null
  %53 = extractvalue { i8*, i32 } %52, 0
  call void @__clang_call_terminate(i8* %53) #12
  unreachable

; <label>:54:                                     ; preds = %24, %9
  br label %24
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_M_clone_nodeINS5_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIcEPKS9_RT_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"class.std::_Rb_tree"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %6 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, align 8
  %7 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %4, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
  store %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %2, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %6, align 8
  %8 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  %9 = load %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %6, align 8
  %10 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %11 = call i8* @_ZNKSt13_Rb_tree_nodeIcE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %10)
  %12 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE20_Reuse_or_alloc_nodeclIRKcEEPSt13_Rb_tree_nodeIcEOT_(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %9, i8* dereferenceable(1) %11)
  store %"struct.std::_Rb_tree_node"* %12, %"struct.std::_Rb_tree_node"** %7, align 8
  %13 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %14 = bitcast %"struct.std::_Rb_tree_node"* %13 to %"struct.std::_Rb_tree_node_base"*
  %15 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %14, i32 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  %18 = bitcast %"struct.std::_Rb_tree_node"* %17 to %"struct.std::_Rb_tree_node_base"*
  %19 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %18, i32 0, i32 0
  store i32 %16, i32* %19, align 8
  %20 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  %21 = bitcast %"struct.std::_Rb_tree_node"* %20 to %"struct.std::_Rb_tree_node_base"*
  %22 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %21, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %22, align 8
  %23 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  %24 = bitcast %"struct.std::_Rb_tree_node"* %23 to %"struct.std::_Rb_tree_node_base"*
  %25 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %24, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %25, align 8
  %26 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  ret %"struct.std::_Rb_tree_node"* %26
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE20_Reuse_or_alloc_nodeclIRKcEEPSt13_Rb_tree_nodeIcEOT_(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, i8* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node"*
  %4 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*
  %5 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %6 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %0, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %6, align 8
  store i8* %1, i8** %7, align 8
  %9 = load %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %6, align 8
  store %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %9, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %10 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %11 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE20_Reuse_or_alloc_node10_M_extractEv(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %10)
  %12 = bitcast %"struct.std::_Rb_tree_node_base"* %11 to %"struct.std::_Rb_tree_node"*
  store %"struct.std::_Rb_tree_node"* %12, %"struct.std::_Rb_tree_node"** %8, align 8
  %13 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %8, align 8
  store %"struct.std::_Rb_tree_node"* %13, %"struct.std::_Rb_tree_node"** %3
  %14 = alloca i32
  store i32 -1431643170, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %43
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1431643170, label %18
    i32 1180544148, label %22
    i32 -2101757828, label %34
    i32 289230261, label %41
  ]

; <label>:17:                                     ; preds = %15
  br label %43

; <label>:18:                                     ; preds = %15
  %19 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %3
  %20 = icmp ne %"struct.std::_Rb_tree_node"* %19, null
  %21 = select i1 %20, i32 1180544148, i32 -2101757828
  store i32 %21, i32* %14
  br label %43

; <label>:22:                                     ; preds = %15
  %23 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %24 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %23, i32 0, i32 2
  %25 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %24, align 8
  %26 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %8, align 8
  call void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIcE(%"class.std::_Rb_tree"* %25, %"struct.std::_Rb_tree_node"* %26) #3
  %27 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %28 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %27, i32 0, i32 2
  %29 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %28, align 8
  %30 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %8, align 8
  %31 = load i8*, i8** %7, align 8
  %32 = call dereferenceable(1) i8* @_ZSt7forwardIRKcEOT_RNSt16remove_referenceIS2_E4typeE(i8* dereferenceable(1) %31) #3
  call void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE17_M_construct_nodeIJRKcEEEvPSt13_Rb_tree_nodeIcEDpOT_(%"class.std::_Rb_tree"* %29, %"struct.std::_Rb_tree_node"* %30, i8* dereferenceable(1) %32)
  %33 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %8, align 8
  store %"struct.std::_Rb_tree_node"* %33, %"struct.std::_Rb_tree_node"** %5, align 8
  store i32 289230261, i32* %14
  br label %43

; <label>:34:                                     ; preds = %15
  %35 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %36 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %35, i32 0, i32 2
  %37 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %36, align 8
  %38 = load i8*, i8** %7, align 8
  %39 = call dereferenceable(1) i8* @_ZSt7forwardIRKcEOT_RNSt16remove_referenceIS2_E4typeE(i8* dereferenceable(1) %38) #3
  %40 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE14_M_create_nodeIJRKcEEEPSt13_Rb_tree_nodeIcEDpOT_(%"class.std::_Rb_tree"* %37, i8* dereferenceable(1) %39)
  store %"struct.std::_Rb_tree_node"* %40, %"struct.std::_Rb_tree_node"** %5, align 8
  store i32 289230261, i32* %14
  br label %43

; <label>:41:                                     ; preds = %15
  %42 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  ret %"struct.std::_Rb_tree_node"* %42

; <label>:43:                                     ; preds = %34, %22, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE20_Reuse_or_alloc_node10_M_extractEv(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca %"struct.std::_Rb_tree_node_base"*
  %4 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*
  %5 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %6 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, align 8
  %7 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %0, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %6, align 8
  %8 = load %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %6, align 8
  store %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %8, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %9 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %10 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %9, i32 0, i32 1
  %11 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
  store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %3
  %12 = alloca i32
  store i32 -117475754, i32* %12
  br label %13

; <label>:13:                                     ; preds = %1, %216
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -117475754, label %16
    i32 353929860, label %20
    i32 369758791, label %24
    i32 1328473433, label %40
    i32 -447395496, label %49
    i32 327687344, label %65
    i32 1897006842, label %91
    i32 -1863276155, label %94
    i32 1981971030, label %102
    i32 -1013464071, label %110
    i32 -1450382636, label %118
    i32 878321217, label %126
    i32 1881995553, label %134
    i32 615443947, label %135
    i32 2069505019, label %162
    i32 1876638188, label %190
    i32 -1766936617, label %191
    i32 -278003512, label %196
    i32 -1282299915, label %197
    i32 1959900898, label %200
    i32 2080243514, label %202
    i32 1685721013, label %204
    i32 -746040237, label %215
  ]

; <label>:15:                                     ; preds = %13
  br label %216

; <label>:16:                                     ; preds = %13
  %17 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %3
  %18 = icmp ne %"struct.std::_Rb_tree_node_base"* %17, null
  %19 = select i1 %18, i32 369758791, i32 353929860
  store i32 %19, i32* %12
  br label %216

; <label>:20:                                     ; preds = %13
  %21 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %22 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %21, i32 0, i32 1
  %23 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %22, align 8
  store %"struct.std::_Rb_tree_node_base"* %23, %"struct.std::_Rb_tree_node_base"** %5, align 8
  store i32 2080243514, i32* %12
  br label %216

; <label>:24:                                     ; preds = %13
  %25 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %26 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %25, i32 0, i32 1
  %27 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %26, align 8
  store %"struct.std::_Rb_tree_node_base"* %27, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %28 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %29 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %28, i32 0, i32 1
  %30 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %29, align 8
  %31 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %30, i32 0, i32 1
  %32 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %31, align 8
  %33 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %34 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %33, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %32, %"struct.std::_Rb_tree_node_base"** %34, align 8
  %35 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %36 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %35, i32 0, i32 1
  %37 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %36, align 8
  %38 = icmp ne %"struct.std::_Rb_tree_node_base"* %37, null
  %39 = select i1 %38, i32 1328473433, i32 -1282299915
  store i32 %39, i32* %12
  br label %216

; <label>:40:                                     ; preds = %13
  %41 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %42 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %41, i32 0, i32 1
  %43 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %42, align 8
  %44 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %43, i32 0, i32 3
  %45 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %44, align 8
  %46 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %47 = icmp eq %"struct.std::_Rb_tree_node_base"* %45, %46
  %48 = select i1 %47, i32 -447395496, i32 -1766936617
  store i32 %48, i32* %12
  br label %216

; <label>:49:                                     ; preds = %13
  %50 = load i32, i32* @x.509
  %51 = load i32, i32* @y.510
  %52 = add i32 %50, 1970059497
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 1970059497
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 327687344, i32 1685721013
  store i32 %64, i32* %12
  br label %216

; <label>:65:                                     ; preds = %13
  %66 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %67 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %66, i32 0, i32 1
  %68 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %67, align 8
  %69 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %68, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %69, align 8
  %70 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %71 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %70, i32 0, i32 1
  %72 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %71, align 8
  %73 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %72, i32 0, i32 2
  %74 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %73, align 8
  %75 = icmp ne %"struct.std::_Rb_tree_node_base"* %74, null
  store i1 %75, i1* %2
  %76 = load i32, i32* @x.509
  %77 = load i32, i32* @y.510
  %78 = add i32 %76, 1109465182
  %79 = sub i32 %78, 1
  %80 = sub i32 %79, 1109465182
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = and i1 %84, %85
  %87 = xor i1 %84, %85
  %88 = or i1 %86, %87
  %89 = or i1 %84, %85
  %90 = select i1 %88, i32 1897006842, i32 1685721013
  store i32 %90, i32* %12
  br label %216

; <label>:91:                                     ; preds = %13
  %92 = load volatile i1, i1* %2
  %93 = select i1 %92, i32 -1863276155, i32 615443947
  store i32 %93, i32* %12
  br label %216

; <label>:94:                                     ; preds = %13
  %95 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %96 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %95, i32 0, i32 1
  %97 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %96, align 8
  %98 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %97, i32 0, i32 2
  %99 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %98, align 8
  %100 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %101 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %100, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %99, %"struct.std::_Rb_tree_node_base"** %101, align 8
  store i32 1981971030, i32* %12
  br label %216

; <label>:102:                                    ; preds = %13
  %103 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %104 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %103, i32 0, i32 1
  %105 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %104, align 8
  %106 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %105, i32 0, i32 3
  %107 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %106, align 8
  %108 = icmp ne %"struct.std::_Rb_tree_node_base"* %107, null
  %109 = select i1 %108, i32 -1013464071, i32 -1450382636
  store i32 %109, i32* %12
  br label %216

; <label>:110:                                    ; preds = %13
  %111 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %112 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %111, i32 0, i32 1
  %113 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %112, align 8
  %114 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %113, i32 0, i32 3
  %115 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %114, align 8
  %116 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %117 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %116, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %115, %"struct.std::_Rb_tree_node_base"** %117, align 8
  store i32 1981971030, i32* %12
  br label %216

; <label>:118:                                    ; preds = %13
  %119 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %120 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %119, i32 0, i32 1
  %121 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %120, align 8
  %122 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %121, i32 0, i32 2
  %123 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %122, align 8
  %124 = icmp ne %"struct.std::_Rb_tree_node_base"* %123, null
  %125 = select i1 %124, i32 878321217, i32 1881995553
  store i32 %125, i32* %12
  br label %216

; <label>:126:                                    ; preds = %13
  %127 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %128 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %127, i32 0, i32 1
  %129 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %129, i32 0, i32 2
  %131 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %130, align 8
  %132 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %133 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %132, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* %131, %"struct.std::_Rb_tree_node_base"** %133, align 8
  store i32 1881995553, i32* %12
  br label %216

; <label>:134:                                    ; preds = %13
  store i32 615443947, i32* %12
  br label %216

; <label>:135:                                    ; preds = %13
  %136 = load i32, i32* @x.509
  %137 = load i32, i32* @y.510
  %138 = sub i32 0, 1
  %139 = add i32 %136, %138
  %140 = sub i32 %136, 1
  %141 = mul i32 %136, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %137, 10
  %145 = xor i1 %143, true
  %146 = xor i1 %144, true
  %147 = xor i1 true, true
  %148 = and i1 %145, true
  %149 = and i1 %143, %147
  %150 = and i1 %146, true
  %151 = and i1 %144, %147
  %152 = or i1 %148, %149
  %153 = or i1 %150, %151
  %154 = xor i1 %152, %153
  %155 = or i1 %145, %146
  %156 = xor i1 %155, true
  %157 = or i1 true, %147
  %158 = and i1 %156, %157
  %159 = or i1 %154, %158
  %160 = or i1 %143, %144
  %161 = select i1 %159, i32 2069505019, i32 -746040237
  store i32 %161, i32* %12
  br label %216

; <label>:162:                                    ; preds = %13
  %163 = load i32, i32* @x.509
  %164 = load i32, i32* @y.510
  %165 = sub i32 %163, -1329427866
  %166 = sub i32 %165, 1
  %167 = add i32 %166, -1329427866
  %168 = sub i32 %163, 1
  %169 = mul i32 %163, %167
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %164, 10
  %173 = xor i1 %171, true
  %174 = xor i1 %172, true
  %175 = xor i1 true, true
  %176 = and i1 %173, true
  %177 = and i1 %171, %175
  %178 = and i1 %174, true
  %179 = and i1 %172, %175
  %180 = or i1 %176, %177
  %181 = or i1 %178, %179
  %182 = xor i1 %180, %181
  %183 = or i1 %173, %174
  %184 = xor i1 %183, true
  %185 = or i1 true, %175
  %186 = and i1 %184, %185
  %187 = or i1 %182, %186
  %188 = or i1 %171, %172
  %189 = select i1 %187, i32 1876638188, i32 -746040237
  store i32 %189, i32* %12
  br label %216

; <label>:190:                                    ; preds = %13
  store i32 -278003512, i32* %12
  br label %216

; <label>:191:                                    ; preds = %13
  %192 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %193 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %192, i32 0, i32 1
  %194 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %193, align 8
  %195 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %194, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %195, align 8
  store i32 -278003512, i32* %12
  br label %216

; <label>:196:                                    ; preds = %13
  store i32 1959900898, i32* %12
  br label %216

; <label>:197:                                    ; preds = %13
  %198 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %199 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %198, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %199, align 8
  store i32 1959900898, i32* %12
  br label %216

; <label>:200:                                    ; preds = %13
  %201 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  store %"struct.std::_Rb_tree_node_base"* %201, %"struct.std::_Rb_tree_node_base"** %5, align 8
  store i32 2080243514, i32* %12
  br label %216

; <label>:202:                                    ; preds = %13
  %203 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %5, align 8
  ret %"struct.std::_Rb_tree_node_base"* %203

; <label>:204:                                    ; preds = %13
  %205 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %206 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %205, i32 0, i32 1
  %207 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %206, align 8
  %208 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %207, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %208, align 8
  %209 = load volatile %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"*, %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"** %4
  %210 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node"* %209, i32 0, i32 1
  %211 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %210, align 8
  %212 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %211, i32 0, i32 2
  %213 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %212, align 8
  %214 = icmp ne %"struct.std::_Rb_tree_node_base"* %213, null
  store i32 327687344, i32* %12
  br label %216

; <label>:215:                                    ; preds = %13
  store i32 2069505019, i32* %12
  br label %216

; <label>:216:                                    ; preds = %215, %204, %200, %197, %196, %191, %190, %162, %135, %134, %126, %118, %110, %102, %94, %91, %65, %49, %40, %24, %20, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNKSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EEclES4_S4_(%"class.std::set"* noalias sret, %"class.std::function"*, %"class.std::set"*, %"class.std::set"*) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca %"class.std::function"*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.511
  %10 = load i32, i32* @y.512
  %11 = sub i32 %9, 410945936
  %12 = sub i32 %11, 1
  %13 = add i32 %12, 410945936
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 -331941668, i32* %19
  br label %20

; <label>:20:                                     ; preds = %4, %82
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -331941668, label %23
    i32 -1312950490, label %43
    i32 1345239448, label %64
    i32 -753610474, label %67
    i32 154099941, label %68
    i32 -1964971487, label %77
  ]

; <label>:22:                                     ; preds = %20
  br label %82

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 -1312950490, i32 -1964971487
  store i32 %42, i32* %19
  br label %82

; <label>:43:                                     ; preds = %20
  %44 = alloca %"class.std::function"*, align 8
  store %"class.std::function"* %1, %"class.std::function"** %44, align 8
  %45 = load %"class.std::function"*, %"class.std::function"** %44, align 8
  store %"class.std::function"* %45, %"class.std::function"** %6
  %46 = load volatile %"class.std::function"*, %"class.std::function"** %6
  %47 = bitcast %"class.std::function"* %46 to %"class.std::_Function_base"*
  %48 = call zeroext i1 @_ZNKSt14_Function_base8_M_emptyEv(%"class.std::_Function_base"* %47)
  store i1 %48, i1* %5
  %49 = load i32, i32* @x.511
  %50 = load i32, i32* @y.512
  %51 = sub i32 %49, -2045047802
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -2045047802
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 1345239448, i32 -1964971487
  store i32 %63, i32* %19
  br label %82

; <label>:64:                                     ; preds = %20
  %65 = load volatile i1, i1* %5
  %66 = select i1 %65, i32 -753610474, i32 154099941
  store i32 %66, i32* %19
  br label %82

; <label>:67:                                     ; preds = %20
  call void @_ZSt25__throw_bad_function_callv() #14
  unreachable

; <label>:68:                                     ; preds = %20
  %69 = load volatile %"class.std::function"*, %"class.std::function"** %6
  %70 = getelementptr inbounds %"class.std::function", %"class.std::function"* %69, i32 0, i32 1
  %71 = load void (%"class.std::set"*, %"union.std::_Any_data"*, %"class.std::set"*, %"class.std::set"*)*, void (%"class.std::set"*, %"union.std::_Any_data"*, %"class.std::set"*, %"class.std::set"*)** %70, align 8
  %72 = load volatile %"class.std::function"*, %"class.std::function"** %6
  %73 = bitcast %"class.std::function"* %72 to %"class.std::_Function_base"*
  %74 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %73, i32 0, i32 0
  %75 = call dereferenceable(48) %"class.std::set"* @_ZSt7forwardISt3setIcSt4lessIcESaIcEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::set"* dereferenceable(48) %2) #3
  %76 = call dereferenceable(48) %"class.std::set"* @_ZSt7forwardISt3setIcSt4lessIcESaIcEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::set"* dereferenceable(48) %3) #3
  call void %71(%"class.std::set"* sret %0, %"union.std::_Any_data"* dereferenceable(16) %74, %"class.std::set"* dereferenceable(48) %75, %"class.std::set"* dereferenceable(48) %76)
  ret void

; <label>:77:                                     ; preds = %20
  %78 = alloca %"class.std::function"*, align 8
  store %"class.std::function"* %1, %"class.std::function"** %78, align 8
  %79 = load %"class.std::function"*, %"class.std::function"** %78, align 8
  %80 = bitcast %"class.std::function"* %79 to %"class.std::_Function_base"*
  %81 = call zeroext i1 @_ZNKSt14_Function_base8_M_emptyEv(%"class.std::_Function_base"* %80)
  store i32 -1312950490, i32* %19
  br label %82

; <label>:82:                                     ; preds = %77, %64, %43, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(48) %"class.std::set"* @_ZNSt3setIcSt4lessIcESaIcEEaSEOS3_(%"class.std::set"*, %"class.std::set"* dereferenceable(48)) #5 comdat align 2 {
  %3 = alloca %"class.std::set"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.513
  %7 = load i32, i32* @y.514
  %8 = sub i32 %6, 358861087
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 358861087
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -862881584, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %62
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -862881584, label %20
    i32 1938265032, label %28
    i32 745707503, label %52
    i32 -746349268, label %54
  ]

; <label>:19:                                     ; preds = %17
  br label %62

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1938265032, i32 -746349268
  store i32 %27, i32* %16
  br label %62

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::set"*, align 8
  %30 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %29, align 8
  store %"class.std::set"* %1, %"class.std::set"** %30, align 8
  %31 = load %"class.std::set"*, %"class.std::set"** %29, align 8
  store %"class.std::set"* %31, %"class.std::set"** %3
  %32 = load volatile %"class.std::set"*, %"class.std::set"** %3
  %33 = getelementptr inbounds %"class.std::set", %"class.std::set"* %32, i32 0, i32 0
  %34 = load %"class.std::set"*, %"class.std::set"** %30, align 8
  %35 = getelementptr inbounds %"class.std::set", %"class.std::set"* %34, i32 0, i32 0
  %36 = call dereferenceable(48) %"class.std::_Rb_tree"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEEaSEOS5_(%"class.std::_Rb_tree"* %33, %"class.std::_Rb_tree"* dereferenceable(48) %35) #3
  %37 = load i32, i32* @x.513
  %38 = load i32, i32* @y.514
  %39 = add i32 %37, 1732022433
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, 1732022433
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 745707503, i32 -746349268
  store i32 %51, i32* %16
  br label %62

; <label>:52:                                     ; preds = %17
  %53 = load volatile %"class.std::set"*, %"class.std::set"** %3
  ret %"class.std::set"* %53

; <label>:54:                                     ; preds = %17
  %55 = alloca %"class.std::set"*, align 8
  %56 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %55, align 8
  store %"class.std::set"* %1, %"class.std::set"** %56, align 8
  %57 = load %"class.std::set"*, %"class.std::set"** %55, align 8
  %58 = getelementptr inbounds %"class.std::set", %"class.std::set"* %57, i32 0, i32 0
  %59 = load %"class.std::set"*, %"class.std::set"** %56, align 8
  %60 = getelementptr inbounds %"class.std::set", %"class.std::set"* %59, i32 0, i32 0
  %61 = call dereferenceable(48) %"class.std::_Rb_tree"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEEaSEOS5_(%"class.std::_Rb_tree"* %58, %"class.std::_Rb_tree"* dereferenceable(48) %60) #3
  store i32 1938265032, i32* %16
  br label %62

; <label>:62:                                     ; preds = %54, %28, %20, %19
  br label %17
}

; Function Attrs: noreturn
declare void @_ZSt25__throw_bad_function_callv() #10

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(48) %"class.std::_Rb_tree"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEEaSEOS5_(%"class.std::_Rb_tree"*, %"class.std::_Rb_tree"* dereferenceable(48)) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  %4 = alloca %"class.std::_Rb_tree"*, align 8
  %5 = alloca %"struct.std::integral_constant", align 1
  %6 = alloca %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Reuse_or_alloc_node", align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  store %"class.std::_Rb_tree"* %1, %"class.std::_Rb_tree"** %4, align 8
  %7 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %8 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  %9 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %9, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %7, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl", %"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %11, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE5clearEv(%"class.std::_Rb_tree"* %7) #3
  %13 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  %14 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE7_M_rootEv(%"class.std::_Rb_tree"* %13) #3
  %15 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %14, align 8
  %16 = icmp ne %"struct.std::_Rb_tree_node_base"* %15, null
  br i1 %16, label %17, label %20

; <label>:17:                                     ; preds = %2
  %18 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  invoke void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE12_M_move_dataERS5_St17integral_constantIbLb1EE(%"class.std::_Rb_tree"* %7, %"class.std::_Rb_tree"* dereferenceable(48) %18)
          to label %19 unwind label %96

; <label>:19:                                     ; preds = %17
  br label %20

; <label>:20:                                     ; preds = %19, %2
  %21 = load i32, i32* @x.515
  %22 = load i32, i32* @y.516
  %23 = sub i32 %21, 1213863627
  %24 = sub i32 %23, 1
  %25 = add i32 %24, 1213863627
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  br i1 %33, label %35, label %139

; <label>:35:                                     ; preds = %20, %139
  %36 = call dereferenceable(1) %"class.std::allocator.6"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %7) #3
  %37 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  %38 = call dereferenceable(1) %"class.std::allocator.6"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %37) #3
  %39 = load i32, i32* @x.515
  %40 = load i32, i32* @y.516
  %41 = add i32 %39, -2102105220
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, -2102105220
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  br i1 %51, label %53, label %139

; <label>:53:                                     ; preds = %35
  invoke void @_ZSt15__alloc_on_moveISaISt13_Rb_tree_nodeIcEEEvRT_S4_(%"class.std::allocator.6"* dereferenceable(1) %36, %"class.std::allocator.6"* dereferenceable(1) %38)
          to label %54 unwind label %96

; <label>:54:                                     ; preds = %53
  %55 = load i32, i32* @x.515
  %56 = load i32, i32* @y.516
  %57 = sub i32 %55, 79847077
  %58 = sub i32 %57, 1
  %59 = add i32 %58, 79847077
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  br i1 %67, label %69, label %143

; <label>:69:                                     ; preds = %54, %143
  %70 = load i32, i32* @x.515
  %71 = load i32, i32* @y.516
  %72 = sub i32 0, 1
  %73 = add i32 %70, %72
  %74 = sub i32 %70, 1
  %75 = mul i32 %70, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %71, 10
  %79 = xor i1 %77, true
  %80 = xor i1 %78, true
  %81 = xor i1 true, true
  %82 = and i1 %79, true
  %83 = and i1 %77, %81
  %84 = and i1 %80, true
  %85 = and i1 %78, %81
  %86 = or i1 %82, %83
  %87 = or i1 %84, %85
  %88 = xor i1 %86, %87
  %89 = or i1 %79, %80
  %90 = xor i1 %89, true
  %91 = or i1 true, %81
  %92 = and i1 %90, %91
  %93 = or i1 %88, %92
  %94 = or i1 %77, %78
  br i1 %93, label %95, label %143

; <label>:95:                                     ; preds = %69
  ret %"class.std::_Rb_tree"* %7

; <label>:96:                                     ; preds = %53, %17
  %97 = load i32, i32* @x.515
  %98 = load i32, i32* @y.516
  %99 = sub i32 0, 1
  %100 = add i32 %97, %99
  %101 = sub i32 %97, 1
  %102 = mul i32 %97, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %98, 10
  %106 = xor i1 %104, true
  %107 = xor i1 %105, true
  %108 = xor i1 false, true
  %109 = and i1 %106, false
  %110 = and i1 %104, %108
  %111 = and i1 %107, false
  %112 = and i1 %105, %108
  %113 = or i1 %109, %110
  %114 = or i1 %111, %112
  %115 = xor i1 %113, %114
  %116 = or i1 %106, %107
  %117 = xor i1 %116, true
  %118 = or i1 false, %108
  %119 = and i1 %117, %118
  %120 = or i1 %115, %119
  %121 = or i1 %104, %105
  br i1 %120, label %122, label %144

; <label>:122:                                    ; preds = %96, %144
  %123 = landingpad { i8*, i32 }
          catch i8* null
  %124 = extractvalue { i8*, i32 } %123, 0
  call void @__clang_call_terminate(i8* %124) #12
  %125 = load i32, i32* @x.515
  %126 = load i32, i32* @y.516
  %127 = sub i32 0, 1
  %128 = add i32 %125, %127
  %129 = sub i32 %125, 1
  %130 = mul i32 %125, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %126, 10
  %134 = and i1 %132, %133
  %135 = xor i1 %132, %133
  %136 = or i1 %134, %135
  %137 = or i1 %132, %133
  br i1 %136, label %138, label %144

; <label>:138:                                    ; preds = %122
  unreachable

; <label>:139:                                    ; preds = %35, %20
  %140 = call dereferenceable(1) %"class.std::allocator.6"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %7) #3
  %141 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  %142 = call dereferenceable(1) %"class.std::allocator.6"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %141) #3
  br label %35

; <label>:143:                                    ; preds = %69, %54
  br label %69

; <label>:144:                                    ; preds = %122, %96
  %145 = landingpad { i8*, i32 }
          catch i8* null
  %146 = extractvalue { i8*, i32 } %145, 0
  call void @__clang_call_terminate(i8* %146) #12
  br label %122
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE5clearEv(%"class.std::_Rb_tree"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_M_beginEv(%"class.std::_Rb_tree"* %3) #3
  invoke void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE8_M_eraseEPSt13_Rb_tree_nodeIcE(%"class.std::_Rb_tree"* %3, %"struct.std::_Rb_tree_node"* %4)
          to label %5 unwind label %8

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  invoke void @_ZNSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE13_Rb_tree_implIS3_Lb1EE8_M_resetEv(%"struct.std::_Rb_tree<char, char, std::_Identity<char>, std::less<char>, std::allocator<char> >::_Rb_tree_impl"* %6)
          to label %7 unwind label %8

; <label>:7:                                      ; preds = %5
  ret void

; <label>:8:                                      ; preds = %5, %1
  %9 = landingpad { i8*, i32 }
          catch i8* null
  %10 = extractvalue { i8*, i32 } %9, 0
  call void @__clang_call_terminate(i8* %10) #12
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt15__alloc_on_moveISaISt13_Rb_tree_nodeIcEEEvRT_S4_(%"class.std::allocator.6"* dereferenceable(1), %"class.std::allocator.6"* dereferenceable(1)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.519
  %6 = load i32, i32* @y.520
  %7 = add i32 %5, -1349439807
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1349439807
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1701588189, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1701588189, label %19
    i32 -2051471225, label %39
    i32 -1970443765, label %71
    i32 1292435449, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2051471225, i32 1292435449
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.6"*, align 8
  %41 = alloca %"class.std::allocator.6"*, align 8
  %42 = alloca %"struct.std::integral_constant", align 1
  store %"class.std::allocator.6"* %0, %"class.std::allocator.6"** %40, align 8
  store %"class.std::allocator.6"* %1, %"class.std::allocator.6"** %41, align 8
  %43 = load %"class.std::allocator.6"*, %"class.std::allocator.6"** %40, align 8
  %44 = load %"class.std::allocator.6"*, %"class.std::allocator.6"** %41, align 8
  call void @_ZSt18__do_alloc_on_moveISaISt13_Rb_tree_nodeIcEEEvRT_S4_St17integral_constantIbLb1EE(%"class.std::allocator.6"* dereferenceable(1) %43, %"class.std::allocator.6"* dereferenceable(1) %44)
  %45 = load i32, i32* @x.519
  %46 = load i32, i32* @y.520
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -1970443765, i32 1292435449
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  ret void

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.std::allocator.6"*, align 8
  %74 = alloca %"class.std::allocator.6"*, align 8
  %75 = alloca %"struct.std::integral_constant", align 1
  store %"class.std::allocator.6"* %0, %"class.std::allocator.6"** %73, align 8
  store %"class.std::allocator.6"* %1, %"class.std::allocator.6"** %74, align 8
  %76 = load %"class.std::allocator.6"*, %"class.std::allocator.6"** %73, align 8
  %77 = load %"class.std::allocator.6"*, %"class.std::allocator.6"** %74, align 8
  call void @_ZSt18__do_alloc_on_moveISaISt13_Rb_tree_nodeIcEEEvRT_S4_St17integral_constantIbLb1EE(%"class.std::allocator.6"* dereferenceable(1) %76, %"class.std::allocator.6"* dereferenceable(1) %77)
  store i32 -2051471225, i32* %15
  br label %78

; <label>:78:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt18__do_alloc_on_moveISaISt13_Rb_tree_nodeIcEEEvRT_S4_St17integral_constantIbLb1EE(%"class.std::allocator.6"* dereferenceable(1), %"class.std::allocator.6"* dereferenceable(1)) #5 comdat {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"class.std::allocator.6"*, align 8
  %5 = alloca %"class.std::allocator.6"*, align 8
  store %"class.std::allocator.6"* %0, %"class.std::allocator.6"** %4, align 8
  store %"class.std::allocator.6"* %1, %"class.std::allocator.6"** %5, align 8
  %6 = load %"class.std::allocator.6"*, %"class.std::allocator.6"** %5, align 8
  %7 = call dereferenceable(1) %"class.std::allocator.6"* @_ZSt4moveIRSaISt13_Rb_tree_nodeIcEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.6"* dereferenceable(1) %6) #3
  %8 = load %"class.std::allocator.6"*, %"class.std::allocator.6"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_E6updateExxS4_xxx(%struct.SegTreeLazyProportional*, i64, i64, %"class.std::set"*, i64, i64, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %8 = alloca %struct.SegTreeLazyProportional*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca %"class.std::set", align 8
  %15 = alloca %"class.std::set", align 8
  %16 = alloca %"class.std::set", align 8
  %17 = alloca i8*
  %18 = alloca i32
  %19 = alloca %"class.std::set", align 8
  %20 = alloca %"class.std::set", align 8
  %21 = alloca %"class.std::set", align 8
  %22 = alloca %"class.std::set", align 8
  %23 = alloca %"class.std::set", align 8
  store %struct.SegTreeLazyProportional* %0, %struct.SegTreeLazyProportional** %8, align 8
  store i64 %1, i64* %9, align 8
  store i64 %2, i64* %10, align 8
  store i64 %4, i64* %11, align 8
  store i64 %5, i64* %12, align 8
  store i64 %6, i64* %13, align 8
  %24 = load %struct.SegTreeLazyProportional*, %struct.SegTreeLazyProportional** %8, align 8
  %25 = load i64, i64* %11, align 8
  %26 = load i64, i64* %13, align 8
  %27 = load i64, i64* %12, align 8
  %28 = sub i64 %26, 5871893875153550403
  %29 = sub i64 %28, %27
  %30 = add i64 %29, 5871893875153550403
  %31 = sub nsw i64 %26, %27
  call void @_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_E4evalExx(%struct.SegTreeLazyProportional* %24, i64 %25, i64 %30)
  %32 = load i64, i64* %9, align 8
  %33 = load i64, i64* %12, align 8
  %34 = icmp sle i64 %32, %33
  br i1 %34, label %35, label %65

; <label>:35:                                     ; preds = %7
  %36 = load i64, i64* %13, align 8
  %37 = load i64, i64* %10, align 8
  %38 = icmp sle i64 %36, %37
  br i1 %38, label %39, label %65

; <label>:39:                                     ; preds = %35
  %40 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %24, i32 0, i32 3
  %41 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %24, i32 0, i32 8
  %42 = load i64, i64* %11, align 8
  %43 = call dereferenceable(48) %"class.std::set"* @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EEixEm(%"class.std::vector"* %41, i64 %42) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEEC2ERKS3_(%"class.std::set"* %15, %"class.std::set"* dereferenceable(48) %43)
  invoke void @_ZNSt3setIcSt4lessIcESaIcEEC2ERKS3_(%"class.std::set"* %16, %"class.std::set"* dereferenceable(48) %3)
          to label %44 unwind label %56

; <label>:44:                                     ; preds = %39
  invoke void @_ZNKSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EEclES4_S4_(%"class.std::set"* sret %14, %"class.std::function"* %40, %"class.std::set"* %15, %"class.std::set"* %16)
          to label %45 unwind label %60

; <label>:45:                                     ; preds = %44
  %46 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %24, i32 0, i32 8
  %47 = load i64, i64* %11, align 8
  %48 = call dereferenceable(48) %"class.std::set"* @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EEixEm(%"class.std::vector"* %46, i64 %47) #3
  %49 = call dereferenceable(48) %"class.std::set"* @_ZNSt3setIcSt4lessIcESaIcEEaSEOS3_(%"class.std::set"* %48, %"class.std::set"* dereferenceable(48) %14) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %14) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %16) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %15) #3
  %50 = load i64, i64* %11, align 8
  %51 = load i64, i64* %13, align 8
  %52 = load i64, i64* %12, align 8
  %53 = sub i64 0, %52
  %54 = add i64 %51, %53
  %55 = sub nsw i64 %51, %52
  call void @_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_E4evalExx(%struct.SegTreeLazyProportional* %24, i64 %50, i64 %54)
  br label %286

; <label>:56:                                     ; preds = %39
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %17, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %18, align 4
  br label %64

; <label>:60:                                     ; preds = %44
  %61 = landingpad { i8*, i32 }
          cleanup
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %17, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %18, align 4
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %16) #3
  br label %64

; <label>:64:                                     ; preds = %60, %56
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %15) #3
  br label %328

; <label>:65:                                     ; preds = %35, %7
  %66 = load i64, i64* %9, align 8
  %67 = load i64, i64* %13, align 8
  %68 = icmp slt i64 %66, %67
  br i1 %68, label %69, label %256

; <label>:69:                                     ; preds = %65
  %70 = load i64, i64* %12, align 8
  %71 = load i64, i64* %10, align 8
  %72 = icmp slt i64 %70, %71
  br i1 %72, label %73, label %256

; <label>:73:                                     ; preds = %69
  %74 = load i64, i64* %9, align 8
  %75 = load i64, i64* %10, align 8
  call void @_ZNSt3setIcSt4lessIcESaIcEEC2ERKS3_(%"class.std::set"* %19, %"class.std::set"* dereferenceable(48) %3)
  %76 = load i64, i64* %11, align 8
  %77 = mul nsw i64 %76, 2
  %78 = add i64 %77, 8357246619974426011
  %79 = add i64 %78, 1
  %80 = sub i64 %79, 8357246619974426011
  %81 = add nsw i64 %77, 1
  %82 = load i64, i64* %12, align 8
  %83 = load i64, i64* %12, align 8
  %84 = load i64, i64* %13, align 8
  %85 = add i64 %83, -4688987840379232278
  %86 = add i64 %85, %84
  %87 = sub i64 %86, -4688987840379232278
  %88 = add nsw i64 %83, %84
  %89 = sdiv i64 %87, 2
  invoke void @_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_E6updateExxS4_xxx(%struct.SegTreeLazyProportional* %24, i64 %74, i64 %75, %"class.std::set"* %19, i64 %80, i64 %82, i64 %89)
          to label %90 unwind label %239

; <label>:90:                                     ; preds = %73
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %19) #3
  %91 = load i64, i64* %9, align 8
  %92 = load i64, i64* %10, align 8
  call void @_ZNSt3setIcSt4lessIcESaIcEEC2ERKS3_(%"class.std::set"* %20, %"class.std::set"* dereferenceable(48) %3)
  %93 = load i64, i64* %11, align 8
  %94 = mul nsw i64 %93, 2
  %95 = add i64 %94, -7674518995975782555
  %96 = add i64 %95, 2
  %97 = sub i64 %96, -7674518995975782555
  %98 = add nsw i64 %94, 2
  %99 = load i64, i64* %12, align 8
  %100 = load i64, i64* %13, align 8
  %101 = sub i64 0, %99
  %102 = sub i64 0, %100
  %103 = add i64 %101, %102
  %104 = sub i64 0, %103
  %105 = add nsw i64 %99, %100
  %106 = sdiv i64 %104, 2
  %107 = load i64, i64* %13, align 8
  invoke void @_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_E6updateExxS4_xxx(%struct.SegTreeLazyProportional* %24, i64 %91, i64 %92, %"class.std::set"* %20, i64 %97, i64 %106, i64 %107)
          to label %108 unwind label %243

; <label>:108:                                    ; preds = %90
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %20) #3
  %109 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %24, i32 0, i32 1
  %110 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %24, i32 0, i32 7
  %111 = load i64, i64* %11, align 8
  %112 = mul nsw i64 %111, 2
  %113 = sub i64 %112, 8741211485923204014
  %114 = add i64 %113, 1
  %115 = add i64 %114, 8741211485923204014
  %116 = add nsw i64 %112, 1
  %117 = call dereferenceable(48) %"class.std::set"* @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EEixEm(%"class.std::vector"* %110, i64 %115) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEEC2ERKS3_(%"class.std::set"* %22, %"class.std::set"* dereferenceable(48) %117)
  %118 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %24, i32 0, i32 7
  %119 = load i64, i64* %11, align 8
  %120 = mul nsw i64 %119, 2
  %121 = add i64 %120, -2720367438431108153
  %122 = add i64 %121, 2
  %123 = sub i64 %122, -2720367438431108153
  %124 = add nsw i64 %120, 2
  %125 = call dereferenceable(48) %"class.std::set"* @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EEixEm(%"class.std::vector"* %118, i64 %123) #3
  invoke void @_ZNSt3setIcSt4lessIcESaIcEEC2ERKS3_(%"class.std::set"* %23, %"class.std::set"* dereferenceable(48) %125)
          to label %126 unwind label %247

; <label>:126:                                    ; preds = %108
  %127 = load i32, i32* @x.523
  %128 = load i32, i32* @y.524
  %129 = sub i32 0, 1
  %130 = add i32 %127, %129
  %131 = sub i32 %127, 1
  %132 = mul i32 %127, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %128, 10
  %136 = xor i1 %134, true
  %137 = xor i1 %135, true
  %138 = xor i1 true, true
  %139 = and i1 %136, true
  %140 = and i1 %134, %138
  %141 = and i1 %137, true
  %142 = and i1 %135, %138
  %143 = or i1 %139, %140
  %144 = or i1 %141, %142
  %145 = xor i1 %143, %144
  %146 = or i1 %136, %137
  %147 = xor i1 %146, true
  %148 = or i1 true, %138
  %149 = and i1 %147, %148
  %150 = or i1 %145, %149
  %151 = or i1 %134, %135
  br i1 %150, label %152, label %333

; <label>:152:                                    ; preds = %126, %333
  %153 = load i32, i32* @x.523
  %154 = load i32, i32* @y.524
  %155 = sub i32 %153, -313630071
  %156 = sub i32 %155, 1
  %157 = add i32 %156, -313630071
  %158 = sub i32 %153, 1
  %159 = mul i32 %153, %157
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %154, 10
  %163 = xor i1 %161, true
  %164 = xor i1 %162, true
  %165 = xor i1 true, true
  %166 = and i1 %163, true
  %167 = and i1 %161, %165
  %168 = and i1 %164, true
  %169 = and i1 %162, %165
  %170 = or i1 %166, %167
  %171 = or i1 %168, %169
  %172 = xor i1 %170, %171
  %173 = or i1 %163, %164
  %174 = xor i1 %173, true
  %175 = or i1 true, %165
  %176 = and i1 %174, %175
  %177 = or i1 %172, %176
  %178 = or i1 %161, %162
  br i1 %177, label %179, label %333

; <label>:179:                                    ; preds = %152
  invoke void @_ZNKSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EEclES4_S4_(%"class.std::set"* sret %21, %"class.std::function"* %109, %"class.std::set"* %22, %"class.std::set"* %23)
          to label %180 unwind label %251

; <label>:180:                                    ; preds = %179
  %181 = load i32, i32* @x.523
  %182 = load i32, i32* @y.524
  %183 = add i32 %181, -851836837
  %184 = sub i32 %183, 1
  %185 = sub i32 %184, -851836837
  %186 = sub i32 %181, 1
  %187 = mul i32 %181, %185
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %182, 10
  %191 = xor i1 %189, true
  %192 = xor i1 %190, true
  %193 = xor i1 false, true
  %194 = and i1 %191, false
  %195 = and i1 %189, %193
  %196 = and i1 %192, false
  %197 = and i1 %190, %193
  %198 = or i1 %194, %195
  %199 = or i1 %196, %197
  %200 = xor i1 %198, %199
  %201 = or i1 %191, %192
  %202 = xor i1 %201, true
  %203 = or i1 false, %193
  %204 = and i1 %202, %203
  %205 = or i1 %200, %204
  %206 = or i1 %189, %190
  br i1 %205, label %207, label %334

; <label>:207:                                    ; preds = %180, %334
  %208 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %24, i32 0, i32 7
  %209 = load i64, i64* %11, align 8
  %210 = call dereferenceable(48) %"class.std::set"* @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EEixEm(%"class.std::vector"* %208, i64 %209) #3
  %211 = call dereferenceable(48) %"class.std::set"* @_ZNSt3setIcSt4lessIcESaIcEEaSEOS3_(%"class.std::set"* %210, %"class.std::set"* dereferenceable(48) %21) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %21) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %23) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %22) #3
  %212 = load i32, i32* @x.523
  %213 = load i32, i32* @y.524
  %214 = add i32 %212, 1878075772
  %215 = sub i32 %214, 1
  %216 = sub i32 %215, 1878075772
  %217 = sub i32 %212, 1
  %218 = mul i32 %212, %216
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %213, 10
  %222 = xor i1 %220, true
  %223 = xor i1 %221, true
  %224 = xor i1 false, true
  %225 = and i1 %222, false
  %226 = and i1 %220, %224
  %227 = and i1 %223, false
  %228 = and i1 %221, %224
  %229 = or i1 %225, %226
  %230 = or i1 %227, %228
  %231 = xor i1 %229, %230
  %232 = or i1 %222, %223
  %233 = xor i1 %232, true
  %234 = or i1 false, %224
  %235 = and i1 %233, %234
  %236 = or i1 %231, %235
  %237 = or i1 %220, %221
  br i1 %236, label %238, label %334

; <label>:238:                                    ; preds = %207
  br label %256

; <label>:239:                                    ; preds = %73
  %240 = landingpad { i8*, i32 }
          cleanup
  %241 = extractvalue { i8*, i32 } %240, 0
  store i8* %241, i8** %17, align 8
  %242 = extractvalue { i8*, i32 } %240, 1
  store i32 %242, i32* %18, align 4
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %19) #3
  br label %328

; <label>:243:                                    ; preds = %90
  %244 = landingpad { i8*, i32 }
          cleanup
  %245 = extractvalue { i8*, i32 } %244, 0
  store i8* %245, i8** %17, align 8
  %246 = extractvalue { i8*, i32 } %244, 1
  store i32 %246, i32* %18, align 4
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %20) #3
  br label %328

; <label>:247:                                    ; preds = %108
  %248 = landingpad { i8*, i32 }
          cleanup
  %249 = extractvalue { i8*, i32 } %248, 0
  store i8* %249, i8** %17, align 8
  %250 = extractvalue { i8*, i32 } %248, 1
  store i32 %250, i32* %18, align 4
  br label %255

; <label>:251:                                    ; preds = %179
  %252 = landingpad { i8*, i32 }
          cleanup
  %253 = extractvalue { i8*, i32 } %252, 0
  store i8* %253, i8** %17, align 8
  %254 = extractvalue { i8*, i32 } %252, 1
  store i32 %254, i32* %18, align 4
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %23) #3
  br label %255

; <label>:255:                                    ; preds = %251, %247
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %22) #3
  br label %328

; <label>:256:                                    ; preds = %238, %69, %65
  %257 = load i32, i32* @x.523
  %258 = load i32, i32* @y.524
  %259 = add i32 %257, -6549636
  %260 = sub i32 %259, 1
  %261 = sub i32 %260, -6549636
  %262 = sub i32 %257, 1
  %263 = mul i32 %257, %261
  %264 = urem i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %258, 10
  %267 = and i1 %265, %266
  %268 = xor i1 %265, %266
  %269 = or i1 %267, %268
  %270 = or i1 %265, %266
  br i1 %269, label %271, label %339

; <label>:271:                                    ; preds = %256, %339
  %272 = load i32, i32* @x.523
  %273 = load i32, i32* @y.524
  %274 = sub i32 0, 1
  %275 = add i32 %272, %274
  %276 = sub i32 %272, 1
  %277 = mul i32 %272, %275
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %273, 10
  %281 = and i1 %279, %280
  %282 = xor i1 %279, %280
  %283 = or i1 %281, %282
  %284 = or i1 %279, %280
  br i1 %283, label %285, label %339

; <label>:285:                                    ; preds = %271
  br label %286

; <label>:286:                                    ; preds = %285, %45
  %287 = load i32, i32* @x.523
  %288 = load i32, i32* @y.524
  %289 = sub i32 %287, -1936078850
  %290 = sub i32 %289, 1
  %291 = add i32 %290, -1936078850
  %292 = sub i32 %287, 1
  %293 = mul i32 %287, %291
  %294 = urem i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %288, 10
  %297 = xor i1 %295, true
  %298 = xor i1 %296, true
  %299 = xor i1 false, true
  %300 = and i1 %297, false
  %301 = and i1 %295, %299
  %302 = and i1 %298, false
  %303 = and i1 %296, %299
  %304 = or i1 %300, %301
  %305 = or i1 %302, %303
  %306 = xor i1 %304, %305
  %307 = or i1 %297, %298
  %308 = xor i1 %307, true
  %309 = or i1 false, %299
  %310 = and i1 %308, %309
  %311 = or i1 %306, %310
  %312 = or i1 %295, %296
  br i1 %311, label %313, label %340

; <label>:313:                                    ; preds = %286, %340
  %314 = load i32, i32* @x.523
  %315 = load i32, i32* @y.524
  %316 = sub i32 0, 1
  %317 = add i32 %314, %316
  %318 = sub i32 %314, 1
  %319 = mul i32 %314, %317
  %320 = urem i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = icmp slt i32 %315, 10
  %323 = and i1 %321, %322
  %324 = xor i1 %321, %322
  %325 = or i1 %323, %324
  %326 = or i1 %321, %322
  br i1 %325, label %327, label %340

; <label>:327:                                    ; preds = %313
  ret void

; <label>:328:                                    ; preds = %255, %243, %239, %64
  %329 = load i8*, i8** %17, align 8
  %330 = load i32, i32* %18, align 4
  %331 = insertvalue { i8*, i32 } undef, i8* %329, 0
  %332 = insertvalue { i8*, i32 } %331, i32 %330, 1
  resume { i8*, i32 } %332

; <label>:333:                                    ; preds = %152, %126
  br label %152

; <label>:334:                                    ; preds = %207, %180
  %335 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %24, i32 0, i32 7
  %336 = load i64, i64* %11, align 8
  %337 = call dereferenceable(48) %"class.std::set"* @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EEixEm(%"class.std::vector"* %335, i64 %336) #3
  %338 = call dereferenceable(48) %"class.std::set"* @_ZNSt3setIcSt4lessIcESaIcEEaSEOS3_(%"class.std::set"* %337, %"class.std::set"* dereferenceable(48) %21) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %21) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %23) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %22) #3
  br label %207

; <label>:339:                                    ; preds = %271, %256
  br label %271

; <label>:340:                                    ; preds = %313, %286
  br label %313
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_E4evalExx(%struct.SegTreeLazyProportional*, i64, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %struct.SegTreeLazyProportional*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::set", align 8
  %8 = alloca %"class.std::set", align 8
  %9 = alloca %"class.std::set", align 8
  %10 = alloca i8*
  %11 = alloca i32
  %12 = alloca %"class.std::set", align 8
  %13 = alloca %"class.std::set", align 8
  %14 = alloca %"class.std::set", align 8
  %15 = alloca %"class.std::set", align 8
  %16 = alloca %"class.std::set", align 8
  %17 = alloca %"class.std::set", align 8
  %18 = alloca %"class.std::set", align 8
  store %struct.SegTreeLazyProportional* %0, %struct.SegTreeLazyProportional** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64 %2, i64* %6, align 8
  %19 = load %struct.SegTreeLazyProportional*, %struct.SegTreeLazyProportional** %4, align 8
  %20 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %19, i32 0, i32 8
  %21 = load i64, i64* %5, align 8
  %22 = call dereferenceable(48) %"class.std::set"* @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EEixEm(%"class.std::vector"* %20, i64 %21) #3
  %23 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %19, i32 0, i32 6
  %24 = call zeroext i1 @_ZSteqIcSt4lessIcESaIcEEbRKSt3setIT_T0_T1_ES9_(%"class.std::set"* dereferenceable(48) %22, %"class.std::set"* dereferenceable(48) %23)
  br i1 %24, label %25, label %26

; <label>:25:                                     ; preds = %3
  br label %234

; <label>:26:                                     ; preds = %3
  %27 = load i64, i64* %5, align 8
  %28 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %19, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %29, -7557314977177377583
  %31 = sub i64 %30, 1
  %32 = add i64 %31, -7557314977177377583
  %33 = sub nsw i64 %29, 1
  %34 = icmp slt i64 %27, %32
  br i1 %34, label %35, label %212

; <label>:35:                                     ; preds = %26
  %36 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %19, i32 0, i32 3
  %37 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %19, i32 0, i32 8
  %38 = load i64, i64* %5, align 8
  %39 = mul nsw i64 %38, 2
  %40 = sub i64 0, %39
  %41 = sub i64 0, 1
  %42 = add i64 %40, %41
  %43 = sub i64 0, %42
  %44 = add nsw i64 %39, 1
  %45 = call dereferenceable(48) %"class.std::set"* @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EEixEm(%"class.std::vector"* %37, i64 %43) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEEC2ERKS3_(%"class.std::set"* %8, %"class.std::set"* dereferenceable(48) %45)
  %46 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %19, i32 0, i32 8
  %47 = load i64, i64* %5, align 8
  %48 = call dereferenceable(48) %"class.std::set"* @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EEixEm(%"class.std::vector"* %46, i64 %47) #3
  invoke void @_ZNSt3setIcSt4lessIcESaIcEEC2ERKS3_(%"class.std::set"* %9, %"class.std::set"* dereferenceable(48) %48)
          to label %49 unwind label %164

; <label>:49:                                     ; preds = %35
  invoke void @_ZNKSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EEclES4_S4_(%"class.std::set"* sret %7, %"class.std::function"* %36, %"class.std::set"* %8, %"class.std::set"* %9)
          to label %50 unwind label %168

; <label>:50:                                     ; preds = %49
  %51 = load i32, i32* @x.525
  %52 = load i32, i32* @y.526
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  br i1 %74, label %76, label %296

; <label>:76:                                     ; preds = %50, %296
  %77 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %19, i32 0, i32 8
  %78 = load i64, i64* %5, align 8
  %79 = mul nsw i64 %78, 2
  %80 = add i64 %79, 7566341499945628624
  %81 = add i64 %80, 1
  %82 = sub i64 %81, 7566341499945628624
  %83 = add nsw i64 %79, 1
  %84 = call dereferenceable(48) %"class.std::set"* @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EEixEm(%"class.std::vector"* %77, i64 %82) #3
  %85 = call dereferenceable(48) %"class.std::set"* @_ZNSt3setIcSt4lessIcESaIcEEaSEOS3_(%"class.std::set"* %84, %"class.std::set"* dereferenceable(48) %7) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %7) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %9) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %8) #3
  %86 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %19, i32 0, i32 3
  %87 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %19, i32 0, i32 8
  %88 = load i64, i64* %5, align 8
  %89 = mul nsw i64 %88, 2
  %90 = sub i64 0, %89
  %91 = sub i64 0, 2
  %92 = add i64 %90, %91
  %93 = sub i64 0, %92
  %94 = add nsw i64 %89, 2
  %95 = call dereferenceable(48) %"class.std::set"* @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EEixEm(%"class.std::vector"* %87, i64 %93) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEEC2ERKS3_(%"class.std::set"* %13, %"class.std::set"* dereferenceable(48) %95)
  %96 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %19, i32 0, i32 8
  %97 = load i64, i64* %5, align 8
  %98 = call dereferenceable(48) %"class.std::set"* @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EEixEm(%"class.std::vector"* %96, i64 %97) #3
  %99 = load i32, i32* @x.525
  %100 = load i32, i32* @y.526
  %101 = sub i32 0, 1
  %102 = add i32 %99, %101
  %103 = sub i32 %99, 1
  %104 = mul i32 %99, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %100, 10
  %108 = xor i1 %106, true
  %109 = xor i1 %107, true
  %110 = xor i1 true, true
  %111 = and i1 %108, true
  %112 = and i1 %106, %110
  %113 = and i1 %109, true
  %114 = and i1 %107, %110
  %115 = or i1 %111, %112
  %116 = or i1 %113, %114
  %117 = xor i1 %115, %116
  %118 = or i1 %108, %109
  %119 = xor i1 %118, true
  %120 = or i1 true, %110
  %121 = and i1 %119, %120
  %122 = or i1 %117, %121
  %123 = or i1 %106, %107
  br i1 %122, label %124, label %296

; <label>:124:                                    ; preds = %76
  invoke void @_ZNSt3setIcSt4lessIcESaIcEEC2ERKS3_(%"class.std::set"* %14, %"class.std::set"* dereferenceable(48) %98)
          to label %125 unwind label %173

; <label>:125:                                    ; preds = %124
  %126 = load i32, i32* @x.525
  %127 = load i32, i32* @y.526
  %128 = sub i32 0, 1
  %129 = add i32 %126, %128
  %130 = sub i32 %126, 1
  %131 = mul i32 %126, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %127, 10
  %135 = and i1 %133, %134
  %136 = xor i1 %133, %134
  %137 = or i1 %135, %136
  %138 = or i1 %133, %134
  br i1 %137, label %139, label %412

; <label>:139:                                    ; preds = %125, %412
  %140 = load i32, i32* @x.525
  %141 = load i32, i32* @y.526
  %142 = sub i32 %140, -949258093
  %143 = sub i32 %142, 1
  %144 = add i32 %143, -949258093
  %145 = sub i32 %140, 1
  %146 = mul i32 %140, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %141, 10
  %150 = and i1 %148, %149
  %151 = xor i1 %148, %149
  %152 = or i1 %150, %151
  %153 = or i1 %148, %149
  br i1 %152, label %154, label %412

; <label>:154:                                    ; preds = %139
  invoke void @_ZNKSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EEclES4_S4_(%"class.std::set"* sret %12, %"class.std::function"* %86, %"class.std::set"* %13, %"class.std::set"* %14)
          to label %155 unwind label %207

; <label>:155:                                    ; preds = %154
  %156 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %19, i32 0, i32 8
  %157 = load i64, i64* %5, align 8
  %158 = mul nsw i64 %157, 2
  %159 = sub i64 0, 2
  %160 = sub i64 %158, %159
  %161 = add nsw i64 %158, 2
  %162 = call dereferenceable(48) %"class.std::set"* @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EEixEm(%"class.std::vector"* %156, i64 %160) #3
  %163 = call dereferenceable(48) %"class.std::set"* @_ZNSt3setIcSt4lessIcESaIcEEaSEOS3_(%"class.std::set"* %162, %"class.std::set"* dereferenceable(48) %12) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %12) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %14) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %13) #3
  br label %212

; <label>:164:                                    ; preds = %35
  %165 = landingpad { i8*, i32 }
          cleanup
  %166 = extractvalue { i8*, i32 } %165, 0
  store i8* %166, i8** %10, align 8
  %167 = extractvalue { i8*, i32 } %165, 1
  store i32 %167, i32* %11, align 4
  br label %172

; <label>:168:                                    ; preds = %49
  %169 = landingpad { i8*, i32 }
          cleanup
  %170 = extractvalue { i8*, i32 } %169, 0
  store i8* %170, i8** %10, align 8
  %171 = extractvalue { i8*, i32 } %169, 1
  store i32 %171, i32* %11, align 4
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %9) #3
  br label %172

; <label>:172:                                    ; preds = %168, %164
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %8) #3
  br label %291

; <label>:173:                                    ; preds = %124
  %174 = load i32, i32* @x.525
  %175 = load i32, i32* @y.526
  %176 = sub i32 %174, -2029080710
  %177 = sub i32 %176, 1
  %178 = add i32 %177, -2029080710
  %179 = sub i32 %174, 1
  %180 = mul i32 %174, %178
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %175, 10
  %184 = and i1 %182, %183
  %185 = xor i1 %182, %183
  %186 = or i1 %184, %185
  %187 = or i1 %182, %183
  br i1 %186, label %188, label %413

; <label>:188:                                    ; preds = %173, %413
  %189 = landingpad { i8*, i32 }
          cleanup
  %190 = extractvalue { i8*, i32 } %189, 0
  store i8* %190, i8** %10, align 8
  %191 = extractvalue { i8*, i32 } %189, 1
  store i32 %191, i32* %11, align 4
  %192 = load i32, i32* @x.525
  %193 = load i32, i32* @y.526
  %194 = sub i32 %192, -1052081551
  %195 = sub i32 %194, 1
  %196 = add i32 %195, -1052081551
  %197 = sub i32 %192, 1
  %198 = mul i32 %192, %196
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %193, 10
  %202 = and i1 %200, %201
  %203 = xor i1 %200, %201
  %204 = or i1 %202, %203
  %205 = or i1 %200, %201
  br i1 %204, label %206, label %413

; <label>:206:                                    ; preds = %188
  br label %211

; <label>:207:                                    ; preds = %154
  %208 = landingpad { i8*, i32 }
          cleanup
  %209 = extractvalue { i8*, i32 } %208, 0
  store i8* %209, i8** %10, align 8
  %210 = extractvalue { i8*, i32 } %208, 1
  store i32 %210, i32* %11, align 4
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %14) #3
  br label %211

; <label>:211:                                    ; preds = %207, %206
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %13) #3
  br label %291

; <label>:212:                                    ; preds = %155, %26
  %213 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %19, i32 0, i32 2
  %214 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %19, i32 0, i32 7
  %215 = load i64, i64* %5, align 8
  %216 = call dereferenceable(48) %"class.std::set"* @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EEixEm(%"class.std::vector"* %214, i64 %215) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEEC2ERKS3_(%"class.std::set"* %16, %"class.std::set"* dereferenceable(48) %216)
  %217 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %19, i32 0, i32 4
  %218 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %19, i32 0, i32 8
  %219 = load i64, i64* %5, align 8
  %220 = call dereferenceable(48) %"class.std::set"* @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EEixEm(%"class.std::vector"* %218, i64 %219) #3
  invoke void @_ZNSt3setIcSt4lessIcESaIcEEC2ERKS3_(%"class.std::set"* %18, %"class.std::set"* dereferenceable(48) %220)
          to label %221 unwind label %235

; <label>:221:                                    ; preds = %212
  %222 = load i64, i64* %6, align 8
  invoke void @_ZNKSt8functionIFSt3setIcSt4lessIcESaIcEES4_xEEclES4_x(%"class.std::set"* sret %17, %"class.std::function.10"* %217, %"class.std::set"* %18, i64 %222)
          to label %223 unwind label %281

; <label>:223:                                    ; preds = %221
  invoke void @_ZNKSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EEclES4_S4_(%"class.std::set"* sret %15, %"class.std::function"* %213, %"class.std::set"* %16, %"class.std::set"* %17)
          to label %224 unwind label %285

; <label>:224:                                    ; preds = %223
  %225 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %19, i32 0, i32 7
  %226 = load i64, i64* %5, align 8
  %227 = call dereferenceable(48) %"class.std::set"* @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EEixEm(%"class.std::vector"* %225, i64 %226) #3
  %228 = call dereferenceable(48) %"class.std::set"* @_ZNSt3setIcSt4lessIcESaIcEEaSEOS3_(%"class.std::set"* %227, %"class.std::set"* dereferenceable(48) %15) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %15) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %17) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %18) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %16) #3
  %229 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %19, i32 0, i32 6
  %230 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %19, i32 0, i32 8
  %231 = load i64, i64* %5, align 8
  %232 = call dereferenceable(48) %"class.std::set"* @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EEixEm(%"class.std::vector"* %230, i64 %231) #3
  %233 = call dereferenceable(48) %"class.std::set"* @_ZNSt3setIcSt4lessIcESaIcEEaSERKS3_(%"class.std::set"* %232, %"class.std::set"* dereferenceable(48) %229)
  br label %234

; <label>:234:                                    ; preds = %224, %25
  ret void

; <label>:235:                                    ; preds = %212
  %236 = load i32, i32* @x.525
  %237 = load i32, i32* @y.526
  %238 = add i32 %236, 363422089
  %239 = sub i32 %238, 1
  %240 = sub i32 %239, 363422089
  %241 = sub i32 %236, 1
  %242 = mul i32 %236, %240
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %237, 10
  %246 = xor i1 %244, true
  %247 = xor i1 %245, true
  %248 = xor i1 true, true
  %249 = and i1 %246, true
  %250 = and i1 %244, %248
  %251 = and i1 %247, true
  %252 = and i1 %245, %248
  %253 = or i1 %249, %250
  %254 = or i1 %251, %252
  %255 = xor i1 %253, %254
  %256 = or i1 %246, %247
  %257 = xor i1 %256, true
  %258 = or i1 true, %248
  %259 = and i1 %257, %258
  %260 = or i1 %255, %259
  %261 = or i1 %244, %245
  br i1 %260, label %262, label %417

; <label>:262:                                    ; preds = %235, %417
  %263 = landingpad { i8*, i32 }
          cleanup
  %264 = extractvalue { i8*, i32 } %263, 0
  store i8* %264, i8** %10, align 8
  %265 = extractvalue { i8*, i32 } %263, 1
  store i32 %265, i32* %11, align 4
  %266 = load i32, i32* @x.525
  %267 = load i32, i32* @y.526
  %268 = sub i32 %266, -1875176129
  %269 = sub i32 %268, 1
  %270 = add i32 %269, -1875176129
  %271 = sub i32 %266, 1
  %272 = mul i32 %266, %270
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %267, 10
  %276 = and i1 %274, %275
  %277 = xor i1 %274, %275
  %278 = or i1 %276, %277
  %279 = or i1 %274, %275
  br i1 %278, label %280, label %417

; <label>:280:                                    ; preds = %262
  br label %290

; <label>:281:                                    ; preds = %221
  %282 = landingpad { i8*, i32 }
          cleanup
  %283 = extractvalue { i8*, i32 } %282, 0
  store i8* %283, i8** %10, align 8
  %284 = extractvalue { i8*, i32 } %282, 1
  store i32 %284, i32* %11, align 4
  br label %289

; <label>:285:                                    ; preds = %223
  %286 = landingpad { i8*, i32 }
          cleanup
  %287 = extractvalue { i8*, i32 } %286, 0
  store i8* %287, i8** %10, align 8
  %288 = extractvalue { i8*, i32 } %286, 1
  store i32 %288, i32* %11, align 4
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %17) #3
  br label %289

; <label>:289:                                    ; preds = %285, %281
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %18) #3
  br label %290

; <label>:290:                                    ; preds = %289, %280
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %16) #3
  br label %291

; <label>:291:                                    ; preds = %290, %211, %172
  %292 = load i8*, i8** %10, align 8
  %293 = load i32, i32* %11, align 4
  %294 = insertvalue { i8*, i32 } undef, i8* %292, 0
  %295 = insertvalue { i8*, i32 } %294, i32 %293, 1
  resume { i8*, i32 } %295

; <label>:296:                                    ; preds = %76, %50
  %297 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %19, i32 0, i32 8
  %298 = load i64, i64* %5, align 8
  %299 = shl i64 %298, 2
  %300 = add i64 0, 5806591645572594540
  %301 = sub i64 %300, %298
  %302 = sub i64 %301, 5806591645572594540
  %303 = sub i64 0, %298
  %304 = sub i64 %302, -8943135689011858211
  %305 = add i64 %304, 2
  %306 = add i64 %305, -8943135689011858211
  %307 = add i64 %302, 2
  %308 = sub i64 0, %298
  %309 = add i64 0, %308
  %310 = sub i64 0, %298
  %311 = add i64 %309, 8616800866598812871
  %312 = add i64 %311, 2
  %313 = sub i64 %312, 8616800866598812871
  %314 = add i64 %309, 2
  %315 = sub i64 %298, -9018254748802716110
  %316 = sub i64 %315, 2
  %317 = add i64 %316, -9018254748802716110
  %318 = sub i64 %298, 2
  %319 = mul i64 %317, 2
  %320 = shl i64 %298, 2
  %321 = sub i64 0, 2
  %322 = add i64 %298, %321
  %323 = sub i64 %298, 2
  %324 = mul i64 %322, 2
  %325 = mul nsw i64 %298, 2
  %326 = shl i64 %325, 1
  %327 = sub i64 %325, -7431193497746908908
  %328 = sub i64 %327, 1
  %329 = add i64 %328, -7431193497746908908
  %330 = sub i64 %325, 1
  %331 = mul i64 %329, 1
  %332 = add i64 0, -315664197592674485
  %333 = sub i64 %332, %325
  %334 = sub i64 %333, -315664197592674485
  %335 = sub i64 0, %325
  %336 = sub i64 0, 1
  %337 = sub i64 %334, %336
  %338 = add i64 %334, 1
  %339 = sub i64 0, %325
  %340 = add i64 0, %339
  %341 = sub i64 0, %325
  %342 = sub i64 0, 1
  %343 = sub i64 %340, %342
  %344 = add i64 %340, 1
  %345 = shl i64 %325, 1
  %346 = sub i64 0, 1
  %347 = add i64 %325, %346
  %348 = sub i64 %325, 1
  %349 = mul i64 %347, 1
  %350 = sub i64 0, %325
  %351 = sub i64 0, 1
  %352 = add i64 %350, %351
  %353 = sub i64 0, %352
  %354 = add nsw i64 %325, 1
  %355 = call dereferenceable(48) %"class.std::set"* @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EEixEm(%"class.std::vector"* %297, i64 %353) #3
  %356 = call dereferenceable(48) %"class.std::set"* @_ZNSt3setIcSt4lessIcESaIcEEaSEOS3_(%"class.std::set"* %355, %"class.std::set"* dereferenceable(48) %7) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %7) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %9) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %8) #3
  %357 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %19, i32 0, i32 3
  %358 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %19, i32 0, i32 8
  %359 = load i64, i64* %5, align 8
  %360 = sub i64 0, -8984883119833641311
  %361 = sub i64 %360, %359
  %362 = add i64 %361, -8984883119833641311
  %363 = sub i64 0, %359
  %364 = sub i64 %362, -7545051543633994228
  %365 = add i64 %364, 2
  %366 = add i64 %365, -7545051543633994228
  %367 = add i64 %362, 2
  %368 = shl i64 %359, 2
  %369 = add i64 0, 9137962096187403951
  %370 = sub i64 %369, %359
  %371 = sub i64 %370, 9137962096187403951
  %372 = sub i64 0, %359
  %373 = sub i64 0, %371
  %374 = sub i64 0, 2
  %375 = add i64 %373, %374
  %376 = sub i64 0, %375
  %377 = add i64 %371, 2
  %378 = shl i64 %359, 2
  %379 = sub i64 0, -6027672461845420196
  %380 = sub i64 %379, %359
  %381 = add i64 %380, -6027672461845420196
  %382 = sub i64 0, %359
  %383 = sub i64 %381, -1151546300988852361
  %384 = add i64 %383, 2
  %385 = add i64 %384, -1151546300988852361
  %386 = add i64 %381, 2
  %387 = sub i64 0, 2
  %388 = add i64 %359, %387
  %389 = sub i64 %359, 2
  %390 = mul i64 %388, 2
  %391 = mul nsw i64 %359, 2
  %392 = add i64 0, 7761645314376326593
  %393 = sub i64 %392, %391
  %394 = sub i64 %393, 7761645314376326593
  %395 = sub i64 0, %391
  %396 = sub i64 %394, -8067791422526220228
  %397 = add i64 %396, 2
  %398 = add i64 %397, -8067791422526220228
  %399 = add i64 %394, 2
  %400 = shl i64 %391, 2
  %401 = shl i64 %391, 2
  %402 = shl i64 %391, 2
  %403 = shl i64 %391, 2
  %404 = shl i64 %391, 2
  %405 = sub i64 0, 2
  %406 = sub i64 %391, %405
  %407 = add nsw i64 %391, 2
  %408 = call dereferenceable(48) %"class.std::set"* @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EEixEm(%"class.std::vector"* %358, i64 %406) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEEC2ERKS3_(%"class.std::set"* %13, %"class.std::set"* dereferenceable(48) %408)
  %409 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %19, i32 0, i32 8
  %410 = load i64, i64* %5, align 8
  %411 = call dereferenceable(48) %"class.std::set"* @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EEixEm(%"class.std::vector"* %409, i64 %410) #3
  br label %76

; <label>:412:                                    ; preds = %139, %125
  br label %139

; <label>:413:                                    ; preds = %188, %173
  %414 = landingpad { i8*, i32 }
          cleanup
  %415 = extractvalue { i8*, i32 } %414, 0
  store i8* %415, i8** %10, align 8
  %416 = extractvalue { i8*, i32 } %414, 1
  store i32 %416, i32* %11, align 4
  br label %188

; <label>:417:                                    ; preds = %262, %235
  %418 = landingpad { i8*, i32 }
          cleanup
  %419 = extractvalue { i8*, i32 } %418, 0
  store i8* %419, i8** %10, align 8
  %420 = extractvalue { i8*, i32 } %418, 1
  store i32 %420, i32* %11, align 4
  br label %262
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIcSt4lessIcESaIcEEbRKSt3setIT_T0_T1_ES9_(%"class.std::set"* dereferenceable(48), %"class.std::set"* dereferenceable(48)) #0 comdat {
  %3 = alloca %"class.std::set"*, align 8
  %4 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %3, align 8
  store %"class.std::set"* %1, %"class.std::set"** %4, align 8
  %5 = load %"class.std::set"*, %"class.std::set"** %3, align 8
  %6 = getelementptr inbounds %"class.std::set", %"class.std::set"* %5, i32 0, i32 0
  %7 = load %"class.std::set"*, %"class.std::set"** %4, align 8
  %8 = getelementptr inbounds %"class.std::set", %"class.std::set"* %7, i32 0, i32 0
  %9 = call zeroext i1 @_ZSteqIccSt9_IdentityIcESt4lessIcESaIcEEbRKSt8_Rb_treeIT_T0_T1_T2_T3_ESD_(%"class.std::_Rb_tree"* dereferenceable(48) %6, %"class.std::_Rb_tree"* dereferenceable(48) %8)
  ret i1 %9
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNKSt8functionIFSt3setIcSt4lessIcESaIcEES4_xEEclES4_x(%"class.std::set"* noalias sret, %"class.std::function.10"*, %"class.std::set"*, i64) #0 comdat align 2 {
  %5 = alloca %"class.std::_Function_base"*
  %6 = alloca %"class.std::function.10"*
  %7 = alloca %"class.std::function.10"*, align 8
  %8 = alloca i64, align 8
  store %"class.std::function.10"* %1, %"class.std::function.10"** %7, align 8
  store i64 %3, i64* %8, align 8
  %9 = load %"class.std::function.10"*, %"class.std::function.10"** %7, align 8
  store %"class.std::function.10"* %9, %"class.std::function.10"** %6
  %10 = load volatile %"class.std::function.10"*, %"class.std::function.10"** %6
  %11 = bitcast %"class.std::function.10"* %10 to %"class.std::_Function_base"*
  store %"class.std::_Function_base"* %11, %"class.std::_Function_base"** %5
  %12 = alloca i32
  store i32 212550428, i32* %12
  br label %13

; <label>:13:                                     ; preds = %4, %30
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 212550428, label %16
    i32 1572358013, label %20
    i32 1135130952, label %21
  ]

; <label>:15:                                     ; preds = %13
  br label %30

; <label>:16:                                     ; preds = %13
  %17 = load volatile %"class.std::_Function_base"*, %"class.std::_Function_base"** %5
  %18 = call zeroext i1 @_ZNKSt14_Function_base8_M_emptyEv(%"class.std::_Function_base"* %17)
  %19 = select i1 %18, i32 1572358013, i32 1135130952
  store i32 %19, i32* %12
  br label %30

; <label>:20:                                     ; preds = %13
  call void @_ZSt25__throw_bad_function_callv() #14
  unreachable

; <label>:21:                                     ; preds = %13
  %22 = load volatile %"class.std::function.10"*, %"class.std::function.10"** %6
  %23 = getelementptr inbounds %"class.std::function.10", %"class.std::function.10"* %22, i32 0, i32 1
  %24 = load void (%"class.std::set"*, %"union.std::_Any_data"*, %"class.std::set"*, i64*)*, void (%"class.std::set"*, %"union.std::_Any_data"*, %"class.std::set"*, i64*)** %23, align 8
  %25 = load volatile %"class.std::function.10"*, %"class.std::function.10"** %6
  %26 = bitcast %"class.std::function.10"* %25 to %"class.std::_Function_base"*
  %27 = getelementptr inbounds %"class.std::_Function_base", %"class.std::_Function_base"* %26, i32 0, i32 0
  %28 = call dereferenceable(48) %"class.std::set"* @_ZSt7forwardISt3setIcSt4lessIcESaIcEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::set"* dereferenceable(48) %2) #3
  %29 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %8) #3
  call void %24(%"class.std::set"* sret %0, %"union.std::_Any_data"* dereferenceable(16) %27, %"class.std::set"* dereferenceable(48) %28, i64* dereferenceable(8) %29)
  ret void

; <label>:30:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIccSt9_IdentityIcESt4lessIcESaIcEEbRKSt8_Rb_treeIT_T0_T1_T2_T3_ESD_(%"class.std::_Rb_tree"* dereferenceable(48), %"class.std::_Rb_tree"* dereferenceable(48)) #0 comdat {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca %"class.std::_Rb_tree"*, align 8
  %6 = alloca %"class.std::_Rb_tree"*, align 8
  %7 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %8 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %9 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %5, align 8
  store %"class.std::_Rb_tree"* %1, %"class.std::_Rb_tree"** %6, align 8
  %10 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5, align 8
  %11 = call i64 @_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE4sizeEv(%"class.std::_Rb_tree"* %10) #3
  store i64 %11, i64* %4
  %12 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
  %13 = call i64 @_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE4sizeEv(%"class.std::_Rb_tree"* %12) #3
  store i64 %13, i64* %3
  %14 = alloca i32
  store i32 1071815599, i32* %14
  %15 = alloca i1
  br label %16

; <label>:16:                                     ; preds = %2, %43
  %17 = load i32, i32* %14
  switch i32 %17, label %18 [
    i32 1071815599, label %19
    i32 1885203596, label %24
    i32 851327024, label %41
  ]

; <label>:18:                                     ; preds = %16
  br label %43

; <label>:19:                                     ; preds = %16
  %20 = load volatile i64, i64* %4
  %21 = load volatile i64, i64* %3
  %22 = icmp eq i64 %20, %21
  %23 = select i1 %22, i32 1885203596, i32 851327024
  store i32 %23, i32* %14
  store i1 false, i1* %15
  br label %43

; <label>:24:                                     ; preds = %16
  %25 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5, align 8
  %26 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE5beginEv(%"class.std::_Rb_tree"* %25) #3
  %27 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %7, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %26, %"struct.std::_Rb_tree_node_base"** %27, align 8
  %28 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5, align 8
  %29 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE3endEv(%"class.std::_Rb_tree"* %28) #3
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %8, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %29, %"struct.std::_Rb_tree_node_base"** %30, align 8
  %31 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
  %32 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeIccSt9_IdentityIcESt4lessIcESaIcEE5beginEv(%"class.std::_Rb_tree"* %31) #3
  %33 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %9, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %32, %"struct.std::_Rb_tree_node_base"** %33, align 8
  %34 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %7, i32 0, i32 0
  %35 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %34, align 8
  %36 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %8, i32 0, i32 0
  %37 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %36, align 8
  %38 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %9, i32 0, i32 0
  %39 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %38, align 8
  %40 = call zeroext i1 @_ZSt5equalISt23_Rb_tree_const_iteratorIcES1_EbT_S2_T0_(%"struct.std::_Rb_tree_node_base"* %35, %"struct.std::_Rb_tree_node_base"* %37, %"struct.std::_Rb_tree_node_base"* %39)
  store i32 851327024, i32* %14
  store i1 %40, i1* %15
  br label %43

; <label>:41:                                     ; preds = %16
  %42 = load i1, i1* %15
  ret i1 %42

; <label>:43:                                     ; preds = %24, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSt5equalISt23_Rb_tree_const_iteratorIcES1_EbT_S2_T0_(%"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*) #0 comdat {
  %4 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %5 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %6 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %7 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %8 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %9 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %10 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %11 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %12 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %4, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %13, align 8
  %14 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %6, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %15, align 8
  %16 = bitcast %"struct.std::_Rb_tree_const_iterator"* %8 to i8*
  %17 = bitcast %"struct.std::_Rb_tree_const_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %8, i32 0, i32 0
  %19 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %18, align 8
  %20 = call %"struct.std::_Rb_tree_node_base"* @_ZSt12__niter_baseISt23_Rb_tree_const_iteratorIcEENSt11_Niter_baseIT_E13iterator_typeES3_(%"struct.std::_Rb_tree_node_base"* %19)
  %21 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %7, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %20, %"struct.std::_Rb_tree_node_base"** %21, align 8
  %22 = bitcast %"struct.std::_Rb_tree_const_iterator"* %10 to i8*
  %23 = bitcast %"struct.std::_Rb_tree_const_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %10, i32 0, i32 0
  %25 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %24, align 8
  %26 = call %"struct.std::_Rb_tree_node_base"* @_ZSt12__niter_baseISt23_Rb_tree_const_iteratorIcEENSt11_Niter_baseIT_E13iterator_typeES3_(%"struct.std::_Rb_tree_node_base"* %25)
  %27 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %9, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %26, %"struct.std::_Rb_tree_node_base"** %27, align 8
  %28 = bitcast %"struct.std::_Rb_tree_const_iterator"* %12 to i8*
  %29 = bitcast %"struct.std::_Rb_tree_const_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 8, i1 false)
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %12, i32 0, i32 0
  %31 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %30, align 8
  %32 = call %"struct.std::_Rb_tree_node_base"* @_ZSt12__niter_baseISt23_Rb_tree_const_iteratorIcEENSt11_Niter_baseIT_E13iterator_typeES3_(%"struct.std::_Rb_tree_node_base"* %31)
  %33 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %11, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %32, %"struct.std::_Rb_tree_node_base"** %33, align 8
  %34 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %7, i32 0, i32 0
  %35 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %34, align 8
  %36 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %9, i32 0, i32 0
  %37 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %36, align 8
  %38 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %11, i32 0, i32 0
  %39 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %38, align 8
  %40 = call zeroext i1 @_ZSt11__equal_auxISt23_Rb_tree_const_iteratorIcES1_EbT_S2_T0_(%"struct.std::_Rb_tree_node_base"* %35, %"struct.std::_Rb_tree_node_base"* %37, %"struct.std::_Rb_tree_node_base"* %39)
  ret i1 %40
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSt11__equal_auxISt23_Rb_tree_const_iteratorIcES1_EbT_S2_T0_(%"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.535
  %8 = load i32, i32* @y.536
  %9 = add i32 %7, -660311887
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -660311887
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 202183355, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %106
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 202183355, label %21
    i32 2027244767, label %29
    i32 -1974837609, label %80
    i32 1809477599, label %82
  ]

; <label>:20:                                     ; preds = %18
  br label %106

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 2027244767, i32 1809477599
  store i32 %28, i32* %17
  br label %106

; <label>:29:                                     ; preds = %18
  %30 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %31 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %32 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %33 = alloca i8, align 1
  %34 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %35 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %36 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %37 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %30, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %37, align 8
  %38 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %31, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %38, align 8
  %39 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %32, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %39, align 8
  store i8 0, i8* %33, align 1
  %40 = bitcast %"struct.std::_Rb_tree_const_iterator"* %34 to i8*
  %41 = bitcast %"struct.std::_Rb_tree_const_iterator"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 8, i32 8, i1 false)
  %42 = bitcast %"struct.std::_Rb_tree_const_iterator"* %35 to i8*
  %43 = bitcast %"struct.std::_Rb_tree_const_iterator"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 8, i32 8, i1 false)
  %44 = bitcast %"struct.std::_Rb_tree_const_iterator"* %36 to i8*
  %45 = bitcast %"struct.std::_Rb_tree_const_iterator"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %44, i8* %45, i64 8, i32 8, i1 false)
  %46 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %34, i32 0, i32 0
  %47 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %46, align 8
  %48 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %35, i32 0, i32 0
  %49 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %48, align 8
  %50 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %36, i32 0, i32 0
  %51 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %50, align 8
  %52 = call zeroext i1 @_ZNSt7__equalILb0EE5equalISt23_Rb_tree_const_iteratorIcES3_EEbT_S4_T0_(%"struct.std::_Rb_tree_node_base"* %47, %"struct.std::_Rb_tree_node_base"* %49, %"struct.std::_Rb_tree_node_base"* %51)
  store i1 %52, i1* %4
  %53 = load i32, i32* @x.535
  %54 = load i32, i32* @y.536
  %55 = add i32 %53, 1983566962
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, 1983566962
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 false, true
  %66 = and i1 %63, false
  %67 = and i1 %61, %65
  %68 = and i1 %64, false
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 false, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 -1974837609, i32 1809477599
  store i32 %79, i32* %17
  br label %106

; <label>:80:                                     ; preds = %18
  %81 = load volatile i1, i1* %4
  ret i1 %81

; <label>:82:                                     ; preds = %18
  %83 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %84 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %85 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %86 = alloca i8, align 1
  %87 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %88 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %89 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %90 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %83, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %90, align 8
  %91 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %84, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %91, align 8
  %92 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %85, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %92, align 8
  store i8 0, i8* %86, align 1
  %93 = bitcast %"struct.std::_Rb_tree_const_iterator"* %87 to i8*
  %94 = bitcast %"struct.std::_Rb_tree_const_iterator"* %83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %93, i8* %94, i64 8, i32 8, i1 false)
  %95 = bitcast %"struct.std::_Rb_tree_const_iterator"* %88 to i8*
  %96 = bitcast %"struct.std::_Rb_tree_const_iterator"* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* %96, i64 8, i32 8, i1 false)
  %97 = bitcast %"struct.std::_Rb_tree_const_iterator"* %89 to i8*
  %98 = bitcast %"struct.std::_Rb_tree_const_iterator"* %85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %97, i8* %98, i64 8, i32 8, i1 false)
  %99 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %87, i32 0, i32 0
  %100 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %99, align 8
  %101 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %88, i32 0, i32 0
  %102 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %101, align 8
  %103 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %89, i32 0, i32 0
  %104 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %103, align 8
  %105 = call zeroext i1 @_ZNSt7__equalILb0EE5equalISt23_Rb_tree_const_iteratorIcES3_EEbT_S4_T0_(%"struct.std::_Rb_tree_node_base"* %100, %"struct.std::_Rb_tree_node_base"* %102, %"struct.std::_Rb_tree_node_base"* %104)
  store i32 2027244767, i32* %17
  br label %106

; <label>:106:                                    ; preds = %82, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNSt7__equalILb0EE5equalISt23_Rb_tree_const_iteratorIcES3_EEbT_S4_T0_(%"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*) #5 comdat align 2 {
  %4 = alloca i1, align 1
  %5 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %6 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %7 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %6, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %7, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %10, align 8
  %11 = alloca i32
  store i32 -56687301, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %82
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -56687301, label %15
    i32 -1768762103, label %18
    i32 -64604841, label %27
    i32 -709734, label %28
    i32 509959737, label %29
    i32 154383805, label %45
    i32 1754513175, label %75
    i32 -2145263034, label %76
    i32 -1171493817, label %77
    i32 1253129286, label %79
  ]

; <label>:14:                                     ; preds = %12
  br label %82

; <label>:15:                                     ; preds = %12
  %16 = call zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorIcEneERKS0_(%"struct.std::_Rb_tree_const_iterator"* %5, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %6) #3
  %17 = select i1 %16, i32 -1768762103, i32 -2145263034
  store i32 %17, i32* %11
  br label %82

; <label>:18:                                     ; preds = %12
  %19 = call dereferenceable(1) i8* @_ZNKSt23_Rb_tree_const_iteratorIcEdeEv(%"struct.std::_Rb_tree_const_iterator"* %5) #3
  %20 = load i8, i8* %19, align 1
  %21 = sext i8 %20 to i32
  %22 = call dereferenceable(1) i8* @_ZNKSt23_Rb_tree_const_iteratorIcEdeEv(%"struct.std::_Rb_tree_const_iterator"* %7) #3
  %23 = load i8, i8* %22, align 1
  %24 = sext i8 %23 to i32
  %25 = icmp eq i32 %21, %24
  %26 = select i1 %25, i32 -709734, i32 -64604841
  store i32 %26, i32* %11
  br label %82

; <label>:27:                                     ; preds = %12
  store i1 false, i1* %4, align 1
  store i32 -1171493817, i32* %11
  br label %82

; <label>:28:                                     ; preds = %12
  store i32 509959737, i32* %11
  br label %82

; <label>:29:                                     ; preds = %12
  %30 = load i32, i32* @x.537
  %31 = load i32, i32* @y.538
  %32 = add i32 %30, -1427764443
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -1427764443
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 154383805, i32 1253129286
  store i32 %44, i32* %11
  br label %82

; <label>:45:                                     ; preds = %12
  %46 = call dereferenceable(8) %"struct.std::_Rb_tree_const_iterator"* @_ZNSt23_Rb_tree_const_iteratorIcEppEv(%"struct.std::_Rb_tree_const_iterator"* %5) #3
  %47 = call dereferenceable(8) %"struct.std::_Rb_tree_const_iterator"* @_ZNSt23_Rb_tree_const_iteratorIcEppEv(%"struct.std::_Rb_tree_const_iterator"* %7) #3
  %48 = load i32, i32* @x.537
  %49 = load i32, i32* @y.538
  %50 = sub i32 %48, -94297302
  %51 = sub i32 %50, 1
  %52 = add i32 %51, -94297302
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 1754513175, i32 1253129286
  store i32 %74, i32* %11
  br label %82

; <label>:75:                                     ; preds = %12
  store i32 -56687301, i32* %11
  br label %82

; <label>:76:                                     ; preds = %12
  store i1 true, i1* %4, align 1
  store i32 -1171493817, i32* %11
  br label %82

; <label>:77:                                     ; preds = %12
  %78 = load i1, i1* %4, align 1
  ret i1 %78

; <label>:79:                                     ; preds = %12
  %80 = call dereferenceable(8) %"struct.std::_Rb_tree_const_iterator"* @_ZNSt23_Rb_tree_const_iteratorIcEppEv(%"struct.std::_Rb_tree_const_iterator"* %5) #3
  %81 = call dereferenceable(8) %"struct.std::_Rb_tree_const_iterator"* @_ZNSt23_Rb_tree_const_iteratorIcEppEv(%"struct.std::_Rb_tree_const_iterator"* %7) #3
  store i32 154383805, i32* %11
  br label %82

; <label>:82:                                     ; preds = %79, %76, %75, %45, %29, %28, %27, %18, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_E9query_subExxxxx(%"class.std::set"* noalias sret, %struct.SegTreeLazyProportional*, i64, i64, i64, i64, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %8 = alloca %struct.SegTreeLazyProportional*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca %"class.std::set", align 8
  %15 = alloca %"class.std::set", align 8
  %16 = alloca i8*
  %17 = alloca i32
  %18 = alloca %"class.std::set", align 8
  %19 = alloca %"class.std::set", align 8
  store %struct.SegTreeLazyProportional* %1, %struct.SegTreeLazyProportional** %8, align 8
  store i64 %2, i64* %9, align 8
  store i64 %3, i64* %10, align 8
  store i64 %4, i64* %11, align 8
  store i64 %5, i64* %12, align 8
  store i64 %6, i64* %13, align 8
  %20 = load %struct.SegTreeLazyProportional*, %struct.SegTreeLazyProportional** %8, align 8
  %21 = load i64, i64* %11, align 8
  %22 = load i64, i64* %13, align 8
  %23 = load i64, i64* %12, align 8
  %24 = sub i64 0, %23
  %25 = add i64 %22, %24
  %26 = sub nsw i64 %22, %23
  call void @_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_E4evalExx(%struct.SegTreeLazyProportional* %20, i64 %21, i64 %25)
  %27 = load i64, i64* %13, align 8
  %28 = load i64, i64* %9, align 8
  %29 = icmp sle i64 %27, %28
  br i1 %29, label %63, label %30

; <label>:30:                                     ; preds = %7
  %31 = load i32, i32* @x.539
  %32 = load i32, i32* @y.540
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  br i1 %42, label %44, label %304

; <label>:44:                                     ; preds = %30, %304
  %45 = load i64, i64* %10, align 8
  %46 = load i64, i64* %12, align 8
  %47 = icmp sle i64 %45, %46
  %48 = load i32, i32* @x.539
  %49 = load i32, i32* @y.540
  %50 = sub i32 %48, 256184745
  %51 = sub i32 %50, 1
  %52 = add i32 %51, 256184745
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  br i1 %60, label %62, label %304

; <label>:62:                                     ; preds = %44
  br i1 %47, label %63, label %65

; <label>:63:                                     ; preds = %62, %7
  %64 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %20, i32 0, i32 5
  call void @_ZNSt3setIcSt4lessIcESaIcEEC2ERKS3_(%"class.std::set"* %0, %"class.std::set"* dereferenceable(48) %64)
  br label %269

; <label>:65:                                     ; preds = %62
  %66 = load i64, i64* %9, align 8
  %67 = load i64, i64* %12, align 8
  %68 = icmp sle i64 %66, %67
  br i1 %68, label %69, label %77

; <label>:69:                                     ; preds = %65
  %70 = load i64, i64* %13, align 8
  %71 = load i64, i64* %10, align 8
  %72 = icmp sle i64 %70, %71
  br i1 %72, label %73, label %77

; <label>:73:                                     ; preds = %69
  %74 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %20, i32 0, i32 7
  %75 = load i64, i64* %11, align 8
  %76 = call dereferenceable(48) %"class.std::set"* @_ZNSt6vectorISt3setIcSt4lessIcESaIcEESaIS4_EEixEm(%"class.std::vector"* %74, i64 %75) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEEC2ERKS3_(%"class.std::set"* %0, %"class.std::set"* dereferenceable(48) %76)
  br label %269

; <label>:77:                                     ; preds = %69, %65
  %78 = load i64, i64* %9, align 8
  %79 = load i64, i64* %10, align 8
  %80 = load i64, i64* %11, align 8
  %81 = mul nsw i64 %80, 2
  %82 = sub i64 0, 1
  %83 = sub i64 %81, %82
  %84 = add nsw i64 %81, 1
  %85 = load i64, i64* %12, align 8
  %86 = load i64, i64* %12, align 8
  %87 = load i64, i64* %13, align 8
  %88 = sub i64 %86, -1879029944728828697
  %89 = add i64 %88, %87
  %90 = add i64 %89, -1879029944728828697
  %91 = add nsw i64 %86, %87
  %92 = sdiv i64 %90, 2
  call void @_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_E9query_subExxxxx(%"class.std::set"* sret %14, %struct.SegTreeLazyProportional* %20, i64 %78, i64 %79, i64 %83, i64 %85, i64 %92)
  %93 = load i64, i64* %9, align 8
  %94 = load i64, i64* %10, align 8
  %95 = load i64, i64* %11, align 8
  %96 = mul nsw i64 %95, 2
  %97 = sub i64 0, 2
  %98 = sub i64 %96, %97
  %99 = add nsw i64 %96, 2
  %100 = load i64, i64* %12, align 8
  %101 = load i64, i64* %13, align 8
  %102 = sub i64 0, %100
  %103 = sub i64 0, %101
  %104 = add i64 %102, %103
  %105 = sub i64 0, %104
  %106 = add nsw i64 %100, %101
  %107 = sdiv i64 %105, 2
  %108 = load i64, i64* %13, align 8
  invoke void @_ZN23SegTreeLazyProportionalISt3setIcSt4lessIcESaIcEES4_E9query_subExxxxx(%"class.std::set"* sret %15, %struct.SegTreeLazyProportional* %20, i64 %93, i64 %94, i64 %98, i64 %107, i64 %108)
          to label %109 unwind label %208

; <label>:109:                                    ; preds = %77
  %110 = load i32, i32* @x.539
  %111 = load i32, i32* @y.540
  %112 = add i32 %110, 178716403
  %113 = sub i32 %112, 1
  %114 = sub i32 %113, 178716403
  %115 = sub i32 %110, 1
  %116 = mul i32 %110, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %111, 10
  %120 = xor i1 %118, true
  %121 = xor i1 %119, true
  %122 = xor i1 false, true
  %123 = and i1 %120, false
  %124 = and i1 %118, %122
  %125 = and i1 %121, false
  %126 = and i1 %119, %122
  %127 = or i1 %123, %124
  %128 = or i1 %125, %126
  %129 = xor i1 %127, %128
  %130 = or i1 %120, %121
  %131 = xor i1 %130, true
  %132 = or i1 false, %122
  %133 = and i1 %131, %132
  %134 = or i1 %129, %133
  %135 = or i1 %118, %119
  br i1 %134, label %136, label %308

; <label>:136:                                    ; preds = %109, %308
  %137 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %20, i32 0, i32 1
  %138 = load i32, i32* @x.539
  %139 = load i32, i32* @y.540
  %140 = sub i32 0, 1
  %141 = add i32 %138, %140
  %142 = sub i32 %138, 1
  %143 = mul i32 %138, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %139, 10
  %147 = xor i1 %145, true
  %148 = xor i1 %146, true
  %149 = xor i1 true, true
  %150 = and i1 %147, true
  %151 = and i1 %145, %149
  %152 = and i1 %148, true
  %153 = and i1 %146, %149
  %154 = or i1 %150, %151
  %155 = or i1 %152, %153
  %156 = xor i1 %154, %155
  %157 = or i1 %147, %148
  %158 = xor i1 %157, true
  %159 = or i1 true, %149
  %160 = and i1 %158, %159
  %161 = or i1 %156, %160
  %162 = or i1 %145, %146
  br i1 %161, label %163, label %308

; <label>:163:                                    ; preds = %136
  invoke void @_ZNSt3setIcSt4lessIcESaIcEEC2ERKS3_(%"class.std::set"* %18, %"class.std::set"* dereferenceable(48) %14)
          to label %164 unwind label %212

; <label>:164:                                    ; preds = %163
  %165 = load i32, i32* @x.539
  %166 = load i32, i32* @y.540
  %167 = sub i32 0, 1
  %168 = add i32 %165, %167
  %169 = sub i32 %165, 1
  %170 = mul i32 %165, %168
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %166, 10
  %174 = xor i1 %172, true
  %175 = xor i1 %173, true
  %176 = xor i1 false, true
  %177 = and i1 %174, false
  %178 = and i1 %172, %176
  %179 = and i1 %175, false
  %180 = and i1 %173, %176
  %181 = or i1 %177, %178
  %182 = or i1 %179, %180
  %183 = xor i1 %181, %182
  %184 = or i1 %174, %175
  %185 = xor i1 %184, true
  %186 = or i1 false, %176
  %187 = and i1 %185, %186
  %188 = or i1 %183, %187
  %189 = or i1 %172, %173
  br i1 %188, label %190, label %310

; <label>:190:                                    ; preds = %164, %310
  %191 = load i32, i32* @x.539
  %192 = load i32, i32* @y.540
  %193 = add i32 %191, 991165167
  %194 = sub i32 %193, 1
  %195 = sub i32 %194, 991165167
  %196 = sub i32 %191, 1
  %197 = mul i32 %191, %195
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %192, 10
  %201 = and i1 %199, %200
  %202 = xor i1 %199, %200
  %203 = or i1 %201, %202
  %204 = or i1 %199, %200
  br i1 %203, label %205, label %310

; <label>:205:                                    ; preds = %190
  invoke void @_ZNSt3setIcSt4lessIcESaIcEEC2ERKS3_(%"class.std::set"* %19, %"class.std::set"* dereferenceable(48) %15)
          to label %206 unwind label %258

; <label>:206:                                    ; preds = %205
  invoke void @_ZNKSt8functionIFSt3setIcSt4lessIcESaIcEES4_S4_EEclES4_S4_(%"class.std::set"* sret %0, %"class.std::function"* %137, %"class.std::set"* %18, %"class.std::set"* %19)
          to label %207 unwind label %262

; <label>:207:                                    ; preds = %206
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %19) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %18) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %15) #3
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %14) #3
  br label %269

; <label>:208:                                    ; preds = %77
  %209 = landingpad { i8*, i32 }
          cleanup
  %210 = extractvalue { i8*, i32 } %209, 0
  store i8* %210, i8** %16, align 8
  %211 = extractvalue { i8*, i32 } %209, 1
  store i32 %211, i32* %17, align 4
  br label %268

; <label>:212:                                    ; preds = %163
  %213 = load i32, i32* @x.539
  %214 = load i32, i32* @y.540
  %215 = sub i32 %213, 901794620
  %216 = sub i32 %215, 1
  %217 = add i32 %216, 901794620
  %218 = sub i32 %213, 1
  %219 = mul i32 %213, %217
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %214, 10
  %223 = and i1 %221, %222
  %224 = xor i1 %221, %222
  %225 = or i1 %223, %224
  %226 = or i1 %221, %222
  br i1 %225, label %227, label %311

; <label>:227:                                    ; preds = %212, %311
  %228 = landingpad { i8*, i32 }
          cleanup
  %229 = extractvalue { i8*, i32 } %228, 0
  store i8* %229, i8** %16, align 8
  %230 = extractvalue { i8*, i32 } %228, 1
  store i32 %230, i32* %17, align 4
  %231 = load i32, i32* @x.539
  %232 = load i32, i32* @y.540
  %233 = add i32 %231, 1762089590
  %234 = sub i32 %233, 1
  %235 = sub i32 %234, 1762089590
  %236 = sub i32 %231, 1
  %237 = mul i32 %231, %235
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %232, 10
  %241 = xor i1 %239, true
  %242 = xor i1 %240, true
  %243 = xor i1 true, true
  %244 = and i1 %241, true
  %245 = and i1 %239, %243
  %246 = and i1 %242, true
  %247 = and i1 %240, %243
  %248 = or i1 %244, %245
  %249 = or i1 %246, %247
  %250 = xor i1 %248, %249
  %251 = or i1 %241, %242
  %252 = xor i1 %251, true
  %253 = or i1 true, %243
  %254 = and i1 %252, %253
  %255 = or i1 %250, %254
  %256 = or i1 %239, %240
  br i1 %255, label %257, label %311

; <label>:257:                                    ; preds = %227
  br label %267

; <label>:258:                                    ; preds = %205
  %259 = landingpad { i8*, i32 }
          cleanup
  %260 = extractvalue { i8*, i32 } %259, 0
  store i8* %260, i8** %16, align 8
  %261 = extractvalue { i8*, i32 } %259, 1
  store i32 %261, i32* %17, align 4
  br label %266

; <label>:262:                                    ; preds = %206
  %263 = landingpad { i8*, i32 }
          cleanup
  %264 = extractvalue { i8*, i32 } %263, 0
  store i8* %264, i8** %16, align 8
  %265 = extractvalue { i8*, i32 } %263, 1
  store i32 %265, i32* %17, align 4
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %19) #3
  br label %266

; <label>:266:                                    ; preds = %262, %258
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %18) #3
  br label %267

; <label>:267:                                    ; preds = %266, %257
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %15) #3
  br label %268

; <label>:268:                                    ; preds = %267, %208
  call void @_ZNSt3setIcSt4lessIcESaIcEED2Ev(%"class.std::set"* %14) #3
  br label %299

; <label>:269:                                    ; preds = %207, %73, %63
  %270 = load i32, i32* @x.539
  %271 = load i32, i32* @y.540
  %272 = sub i32 %270, 445365663
  %273 = sub i32 %272, 1
  %274 = add i32 %273, 445365663
  %275 = sub i32 %270, 1
  %276 = mul i32 %270, %274
  %277 = urem i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %271, 10
  %280 = and i1 %278, %279
  %281 = xor i1 %278, %279
  %282 = or i1 %280, %281
  %283 = or i1 %278, %279
  br i1 %282, label %284, label %315

; <label>:284:                                    ; preds = %269, %315
  %285 = load i32, i32* @x.539
  %286 = load i32, i32* @y.540
  %287 = sub i32 0, 1
  %288 = add i32 %285, %287
  %289 = sub i32 %285, 1
  %290 = mul i32 %285, %288
  %291 = urem i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %286, 10
  %294 = and i1 %292, %293
  %295 = xor i1 %292, %293
  %296 = or i1 %294, %295
  %297 = or i1 %292, %293
  br i1 %296, label %298, label %315

; <label>:298:                                    ; preds = %284
  ret void

; <label>:299:                                    ; preds = %268
  %300 = load i8*, i8** %16, align 8
  %301 = load i32, i32* %17, align 4
  %302 = insertvalue { i8*, i32 } undef, i8* %300, 0
  %303 = insertvalue { i8*, i32 } %302, i32 %301, 1
  resume { i8*, i32 } %303

; <label>:304:                                    ; preds = %44, %30
  %305 = load i64, i64* %10, align 8
  %306 = load i64, i64* %12, align 8
  %307 = icmp sle i64 %305, %306
  br label %44

; <label>:308:                                    ; preds = %136, %109
  %309 = getelementptr inbounds %struct.SegTreeLazyProportional, %struct.SegTreeLazyProportional* %20, i32 0, i32 1
  br label %136

; <label>:310:                                    ; preds = %190, %164
  br label %190

; <label>:311:                                    ; preds = %227, %212
  %312 = landingpad { i8*, i32 }
          cleanup
  %313 = extractvalue { i8*, i32 } %312, 0
  store i8* %313, i8** %16, align 8
  %314 = extractvalue { i8*, i32 } %312, 1
  store i32 %314, i32* %17, align 4
  br label %227

; <label>:315:                                    ; preds = %284, %269
  br label %284
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s276162300.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline noreturn nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind }
attributes #9 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
