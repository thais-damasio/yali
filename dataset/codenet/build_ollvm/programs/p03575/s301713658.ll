; ModuleID = 'Project_CodeNet_C++1400/p03575/s301713658.cpp'
source_filename = "Project_CodeNet_C++1400/p03575/s301713658.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"struct.std::piecewise_construct_t" = type { i8 }
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl" }
%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl" = type { i64*, i64*, i64* }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl" = type { %"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"* }
%"class.std::allocator" = type { i8 }
%"class.std::allocator.2" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.46" = type { i64* }
%"class.std::vector.5" = type { %"struct.std::_Vector_base.6" }
%"struct.std::_Vector_base.6" = type { %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl" = type { %"class.std::vector.10"*, %"class.std::vector.10"*, %"class.std::vector.10"* }
%"class.std::vector.10" = type { %"struct.std::_Vector_base.11" }
%"struct.std::_Vector_base.11" = type { %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl" }
%"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl" = type { i8*, i8*, i8* }
%"class.std::queue" = type { %"class.std::deque" }
%"class.std::deque" = type { %"class.std::_Deque_base" }
%"class.std::_Deque_base" = type { %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl" }
%"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl" = type { %"struct.std::pair"**, i64, %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator" }
%"struct.std::pair" = type { i32, i32 }
%"struct.std::_Deque_iterator" = type { %"struct.std::pair"*, %"struct.std::pair"*, %"struct.std::pair"*, %"struct.std::pair"** }
%"class.std::allocator.15" = type { i8 }
%"class.__gnu_cxx::new_allocator.3" = type { i8 }
%"class.std::map" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl" = type { %"struct.std::less", %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::less" = type { i8 }
%"struct.std::_Rb_tree_node_base" = type { i32, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%"struct.std::_Rb_tree_iterator" = type { %"struct.std::_Rb_tree_node_base"* }
%"struct.std::_Rb_tree_const_iterator" = type { %"struct.std::_Rb_tree_node_base"* }
%"class.std::tuple" = type { %"struct.std::_Tuple_impl" }
%"struct.std::_Tuple_impl" = type { %"struct.std::_Head_base" }
%"struct.std::_Head_base" = type { i64* }
%"class.std::tuple.50" = type { i8 }
%"struct.std::pair.44" = type { i64, i64 }
%"class.std::vector.21" = type { %"struct.std::_Vector_base.22" }
%"struct.std::_Vector_base.22" = type { %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl" = type { %"class.std::vector.26"*, %"class.std::vector.26"*, %"class.std::vector.26"* }
%"class.std::vector.26" = type { %"struct.std::_Vector_base.27" }
%"struct.std::_Vector_base.27" = type { %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl" }
%"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl" = type { %struct.Edge*, %struct.Edge*, %struct.Edge* }
%struct.Edge = type { i64, i64 }
%"class.std::priority_queue" = type <{ %"class.std::vector.31", %"struct.std::greater", [7 x i8] }>
%"class.std::vector.31" = type { %"struct.std::_Vector_base.32" }
%"struct.std::_Vector_base.32" = type { %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl" = type { %"struct.std::pair.36"*, %"struct.std::pair.36"*, %"struct.std::pair.36"* }
%"struct.std::pair.36" = type { i64, i64 }
%"struct.std::greater" = type { i8 }
%"class.__gnu_cxx::__normal_iterator" = type { %struct.Edge* }
%"class.__gnu_cxx::__normal_iterator.38" = type { i64* }
%"class.__gnu_cxx::__normal_iterator.53" = type { %"struct.std::pair.36"* }
%"class.std::allocator.33" = type { i8 }
%"struct.std::random_access_iterator_tag" = type { i8 }
%"class.std::vector.39" = type { %"struct.std::_Vector_base.40" }
%"struct.std::_Vector_base.40" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl" = type { %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.std::__cxx11::basic_stringstream" = type { %"class.std::basic_iostream.base", %"class.std::__cxx11::basic_stringbuf", %"class.std::basic_ios" }
%"class.std::basic_iostream.base" = type { %"class.std::basic_istream.base", %"class.std::basic_ostream.base" }
%"class.std::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::basic_ostream.base" = type { i32 (...)** }
%"class.std::__cxx11::basic_stringbuf" = type { %"class.std::basic_streambuf", i32, %"class.std::__cxx11::basic_string" }
%"class.std::allocator.41" = type { i8 }
%"struct.__gnu_cxx::__ops::_Iter_less_iter" = type { i8 }
%"class.std::allocator.23" = type { i8 }
%"class.__gnu_cxx::new_allocator.24" = type { i8 }
%"class.std::allocator.28" = type { i8 }
%"struct.std::_Rb_tree_node" = type { %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf" }
%"struct.__gnu_cxx::__aligned_membuf" = type { [16 x i8] }
%"class.std::allocator.18" = type { i8 }
%"class.__gnu_cxx::new_allocator.19" = type { i8 }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"class.std::move_iterator" = type { %"class.std::vector.0"* }
%"class.std::move_iterator.45" = type { i64* }
%"class.__gnu_cxx::new_allocator.16" = type { i8 }
%"class.std::allocator.47" = type { i8 }
%"class.__gnu_cxx::new_allocator.48" = type { i8 }
%"struct.std::integral_constant" = type { i8 }
%"struct.__gnu_cxx::__allocator_always_compares_equal" = type { i8 }
%"struct.std::pair.51" = type { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%"struct.std::_Select1st" = type { i8 }
%"struct.std::_Index_tuple" = type { i8 }
%"struct.std::_Index_tuple.52" = type { i8 }
%"class.__gnu_cxx::new_allocator.34" = type { i8 }
%"struct.__gnu_cxx::__ops::_Iter_comp_iter" = type { %"struct.std::greater" }
%"struct.__gnu_cxx::__ops::_Iter_comp_val" = type { %"struct.std::greater" }
%"class.std::move_iterator.54" = type { %"struct.std::pair.36"* }
%"class.__gnu_cxx::__normal_iterator.55" = type { %"struct.std::pair.36"* }
%"class.__gnu_cxx::new_allocator.42" = type { i8 }
%"class.std::move_iterator.56" = type { %"class.std::__cxx11::basic_string"* }
%"struct.__gnu_cxx::__ops::_Iter_less_val" = type { i8 }
%"struct.__gnu_cxx::__ops::_Val_less_iter" = type { i8 }
%"class.__gnu_cxx::new_allocator.29" = type { i8 }
%"class.std::move_iterator.57" = type { %struct.Edge* }

$_ZSt4acosIiEN9__gnu_cxx11__enable_ifIXsr12__is_integerIT_EE7__valueEdE6__typeES2_ = comdat any

$_ZNKSt6vectorIxSaIxEE4sizeEv = comdat any

$_ZNSt6vectorIS_IxSaIxEESaIS1_EE9push_backERKS1_ = comdat any

$_ZNSt6vectorIxSaIxEE9push_backERKx = comdat any

$_ZNSt6vectorIxSaIxEEC2ERKS1_ = comdat any

$_ZNSt6vectorIxSaIxEED2Ev = comdat any

$_ZNSt6vectorIxSaIxEE8pop_backEv = comdat any

$_ZNSt5dequeISt4pairIiiESaIS1_EEC2Ev = comdat any

$_ZNSt5queueISt4pairIiiESt5dequeIS1_SaIS1_EEEC2EOS4_ = comdat any

$_ZNSt5dequeISt4pairIiiESaIS1_EED2Ev = comdat any

$_ZNSt6vectorIS_IxSaIxEESaIS1_EEC2Ev = comdat any

$_ZNSaIxEC2Ev = comdat any

$_ZNSt6vectorIxSaIxEEC2EmRKS0_ = comdat any

$_ZNSaIxED2Ev = comdat any

$_ZNSt5queueISt4pairIiiESt5dequeIS1_SaIS1_EEE4pushEOS1_ = comdat any

$_ZSt9make_pairIRiS0_ESt4pairINSt17__decay_and_stripIT_E6__typeENS2_IT0_E6__typeEEOS3_OS6_ = comdat any

$_ZNKSt5queueISt4pairIiiESt5dequeIS1_SaIS1_EEE4sizeEv = comdat any

$_ZNSt5queueISt4pairIiiESt5dequeIS1_SaIS1_EEE5frontEv = comdat any

$_ZNSt5queueISt4pairIiiESt5dequeIS1_SaIS1_EEE3popEv = comdat any

$_ZNSt6vectorIS_IcSaIcEESaIS1_EEixEm = comdat any

$_ZNSt6vectorIcSaIcEEixEm = comdat any

$_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm = comdat any

$_ZNSt6vectorIxSaIxEEixEm = comdat any

$_ZSt3minIxERKT_S2_S2_ = comdat any

$_ZSt9make_pairIiiESt4pairINSt17__decay_and_stripIT_E6__typeENS1_IT0_E6__typeEEOS2_OS5_ = comdat any

$_ZNSt6vectorIS_IxSaIxEESaIS1_EED2Ev = comdat any

$_ZNSt5queueISt4pairIiiESt5dequeIS1_SaIS1_EEED2Ev = comdat any

$_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEEC2Ev = comdat any

$_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEEixERS3_ = comdat any

$_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEED2Ev = comdat any

$_ZNKSt6vectorIS_I4EdgeSaIS0_EESaIS2_EE4sizeEv = comdat any

$_ZNSt6vectorIxSaIxEE6resizeEmRKx = comdat any

$_ZNSt6vectorISt4pairIxxESaIS1_EEC2Ev = comdat any

$_ZNSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EEC2ERKS6_OS4_ = comdat any

$_ZNSt6vectorISt4pairIxxESaIS1_EED2Ev = comdat any

$_ZNSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EE7emplaceIJRxRiEEEvDpOT_ = comdat any

$_ZNKSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EE5emptyEv = comdat any

$_ZNKSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EE3topEv = comdat any

$_ZNSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EE3popEv = comdat any

$_ZNKSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEixEm = comdat any

$_ZNKSt6vectorI4EdgeSaIS0_EE5beginEv = comdat any

$_ZNKSt6vectorI4EdgeSaIS0_EE3endEv = comdat any

$_ZN9__gnu_cxxneIPK4EdgeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS1_SaIS1_EEEdeEv = comdat any

$_ZNSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EE7emplaceIJRxRKxEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS1_SaIS1_EEEppEv = comdat any

$_ZNSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EED2Ev = comdat any

$_ZNSt6vectorIxSaIxEEC2Ev = comdat any

$_ZNKSt6vectorIxSaIxEEixEm = comdat any

$_ZSt7reverseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEEvT_S7_ = comdat any

$_ZNSt6vectorIxSaIxEE5beginEv = comdat any

$_ZNSt6vectorIxSaIxEE3endEv = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev = comdat any

$_ZStorSt13_Ios_OpenmodeS_ = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev = comdat any

$_ZNSt6vectorIxSaIxEE9push_backEOx = comdat any

$_ZSt4sortIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEEvT_S7_ = comdat any

$_ZSt5beginISt6vectorIxSaIxEEEDTcldtfp_5beginEERT_ = comdat any

$_ZSt3endISt6vectorIxSaIxEEEDTcldtfp_3endEERT_ = comdat any

$_ZNSt6vectorISt4pairIxxESaIS1_EE9push_backEOS1_ = comdat any

$_ZSt9make_pairIRxS0_ESt4pairINSt17__decay_and_stripIT_E6__typeENS2_IT0_E6__typeEEOS3_OS6_ = comdat any

$_ZNSaISt6vectorI4EdgeSaIS0_EEEC2Ev = comdat any

$_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEC2EmRKS3_ = comdat any

$_ZNSaISt6vectorI4EdgeSaIS0_EEED2Ev = comdat any

$_ZNSt6vectorISt4pairIxxESaIS1_EEixEm = comdat any

$_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEixEm = comdat any

$_ZNSt6vectorI4EdgeSaIS0_EE9push_backERKS0_ = comdat any

$_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EED2Ev = comdat any

$_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZNSt4pairIiiEC2IRiS2_vEEOT_OT0_ = comdat any

$_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZNSt4pairIiiEC2IiivEEOT_OT0_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EED2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_beginEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE7destroyIS3_EEvRS5_PT_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE21_M_get_Node_allocatorEv = comdat any

$_ZNSt13_Rb_tree_nodeISt4pairIKxxEE9_M_valptrEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE7destroyIS4_EEvPT_ = comdat any

$_ZN9__gnu_cxx16__aligned_membufISt4pairIKxxEE6_M_ptrEv = comdat any

$_ZN9__gnu_cxx16__aligned_membufISt4pairIKxxEE7_M_addrEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE10deallocateERS5_PS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE10deallocateEPS5_m = comdat any

$_ZNSaISt13_Rb_tree_nodeISt4pairIKxxEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEED2Ev = comdat any

$_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZNSt4pairIxxEC2IRxS2_vEEOT_OT0_ = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_ = comdat any

$_ZNSt6vectorIS_IxSaIxEESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE9constructIS3_JRKS3_EEEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS5_E4typeE = comdat any

$_ZNKSt6vectorIS_IxSaIxEESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE11_M_allocateEm = comdat any

$_ZNKSt6vectorIS_IxSaIxEESaIS1_EE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIxSaIxEES3_SaIS2_EET0_T_S6_S5_RT1_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE7destroyIS2_EEvRS3_PT_ = comdat any

$_ZSt8_DestroyIPSt6vectorIxSaIxEES2_EvT_S4_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZNKSt6vectorIS_IxSaIxEESaIS1_EE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE8max_sizeERKS3_ = comdat any

$_ZNKSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIxSaIxEEES4_S3_ET0_T_S7_S6_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIxSaIxEESt13move_iteratorIS3_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIxSaIxEEES4_ET0_T_S7_S6_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIxSaIxEEES6_EET0_T_S9_S8_ = comdat any

$_ZStneIPSt6vectorIxSaIxEEEbRKSt13move_iteratorIT_ES8_ = comdat any

$_ZSt10_ConstructISt6vectorIxSaIxEEJS2_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt6vectorIxSaIxEEEPT_RS3_ = comdat any

$_ZNKSt13move_iteratorIPSt6vectorIxSaIxEEEdeEv = comdat any

$_ZNSt13move_iteratorIPSt6vectorIxSaIxEEEppEv = comdat any

$_ZSt8_DestroyIPSt6vectorIxSaIxEEEvT_S4_ = comdat any

$_ZSteqIPSt6vectorIxSaIxEEEbRKSt13move_iteratorIT_ES8_ = comdat any

$_ZNKSt13move_iteratorIPSt6vectorIxSaIxEEE4baseEv = comdat any

$_ZSt7forwardISt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNSt6vectorIxSaIxEEC2EOS1_ = comdat any

$_ZSt4moveIRSt6vectorIxSaIxEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEEC2EOS1_ = comdat any

$_ZSt4moveIRSaIxEEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2EOS0_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_impl12_M_swap_dataERS2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_ = comdat any

$_ZSt4swapIPxEvRT_S2_ = comdat any

$_ZSt4moveIRPxEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIxSaIxEEEEvT_S6_ = comdat any

$_ZSt8_DestroyISt6vectorIxSaIxEEEvPT_ = comdat any

$_ZNSt13move_iteratorIPSt6vectorIxSaIxEEEC2ES3_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE7destroyIS3_EEvPT_ = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE10deallocateEPS3_m = comdat any

$_ZNSt16allocator_traitsISaIxEE9constructIxJRKxEEEvRS0_PT_DpOT0_ = comdat any

$_ZNSt6vectorIxSaIxEE19_M_emplace_back_auxIJRKxEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE9constructIxJRKxEEEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPxS0_SaIxEET0_T_S3_S2_RT1_ = comdat any

$_ZNSt16allocator_traitsISaIxEE7destroyIxEEvRS0_PT_ = comdat any

$_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm = comdat any

$_ZNKSt6vectorIxSaIxEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIxEE8max_sizeERKS0_ = comdat any

$_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIxEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPxES1_xET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPxES1_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPxES3_EET0_T_S6_S5_ = comdat any

$_ZSt4copyISt13move_iteratorIPxES1_ET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb1EPxS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZSt13__copy_move_aILb1EPxS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPxELb1EE7_S_baseES2_ = comdat any

$_ZNKSt13move_iteratorIPxE4baseEv = comdat any

$_ZNSt13move_iteratorIPxEC2ES0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE7destroyIxEEvPT_ = comdat any

$_ZSt8_DestroyIPxEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_ = comdat any

$_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIxEE17_S_select_on_copyERKS1_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_ = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxxET0_T_SA_S9_RSaIT1_E = comdat any

$_ZNKSt6vectorIxSaIxEE5beginEv = comdat any

$_ZNKSt6vectorIxSaIxEE3endEv = comdat any

$_ZNSt12_Vector_baseIxSaIxEED2Ev = comdat any

$_ZNSt16allocator_traitsISaIxEE37select_on_container_copy_constructionERKS0_ = comdat any

$_ZNSaIxEC2ERKS_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIxED2Ev = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxEET0_T_SC_SB_ = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET1_T0_SA_S9_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_ = comdat any

$_ZSt13__copy_move_aILb0EPKxPxET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb1EE7_S_baseES7_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb0EE7_S_baseES7_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_ = comdat any

$_ZNSt11_Deque_baseISt4pairIiiESaIS1_EEC2Ev = comdat any

$_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE11_Deque_implC2Ev = comdat any

$_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE17_M_initialize_mapEm = comdat any

$_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE11_Deque_implD2Ev = comdat any

$_ZNSaISt4pairIiiEEC2Ev = comdat any

$_ZNSt15_Deque_iteratorISt4pairIiiERS1_PS1_EC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIiiEEC2Ev = comdat any

$_ZSt16__deque_buf_sizem = comdat any

$_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE15_M_allocate_mapEm = comdat any

$_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE15_M_create_nodesEPPS1_S5_ = comdat any

$_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE17_M_deallocate_mapEPPS1_m = comdat any

$_ZNSt15_Deque_iteratorISt4pairIiiERS1_PS1_E11_M_set_nodeEPS3_ = comdat any

$_ZNKSt11_Deque_baseISt4pairIiiESaIS1_EE20_M_get_map_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIPSt4pairIiiEEE8allocateERS3_m = comdat any

$_ZNSaIPSt4pairIiiEED2Ev = comdat any

$_ZNKSt11_Deque_baseISt4pairIiiESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSaIPSt4pairIiiEEC2IS0_EERKSaIT_E = comdat any

$_ZN9__gnu_cxx13new_allocatorIPSt4pairIiiEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIPSt4pairIiiEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIPSt4pairIiiEE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIPSt4pairIiiEED2Ev = comdat any

$_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE16_M_allocate_nodeEv = comdat any

$_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE16_M_destroy_nodesEPPS1_S5_ = comdat any

$_ZNSt16allocator_traitsISaISt4pairIiiEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIiiEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt4pairIiiEE8max_sizeEv = comdat any

$_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE18_M_deallocate_nodeEPS1_ = comdat any

$_ZNSt16allocator_traitsISaISt4pairIiiEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIiiEE10deallocateEPS2_m = comdat any

$_ZNSt16allocator_traitsISaIPSt4pairIiiEEE10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIPSt4pairIiiEE10deallocateEPS3_m = comdat any

$_ZNSt15_Deque_iteratorISt4pairIiiERS1_PS1_E14_S_buffer_sizeEv = comdat any

$_ZNSaISt4pairIiiEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIiiEED2Ev = comdat any

$_ZNSt5dequeISt4pairIiiESaIS1_EE15_M_destroy_dataESt15_Deque_iteratorIS1_RS1_PS1_ES7_RKS2_ = comdat any

$_ZNSt5dequeISt4pairIiiESaIS1_EE5beginEv = comdat any

$_ZNSt5dequeISt4pairIiiESaIS1_EE3endEv = comdat any

$_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt11_Deque_baseISt4pairIiiESaIS1_EED2Ev = comdat any

$_ZNSt15_Deque_iteratorISt4pairIiiERS1_PS1_EC2ERKS4_ = comdat any

$_ZSt4moveIRSt5dequeISt4pairIiiESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_ = comdat any

$_ZNSt5dequeISt4pairIiiESaIS1_EEC2EOS3_ = comdat any

$_ZNSt11_Deque_baseISt4pairIiiESaIS1_EEC2EOS3_ = comdat any

$_ZSt4moveIRSt11_Deque_baseISt4pairIiiESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_ = comdat any

$_ZNSt11_Deque_baseISt4pairIiiESaIS1_EEC2EOS3_St17integral_constantIbLb1EE = comdat any

$_ZSt4moveIRSaISt4pairIiiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE11_Deque_implC2EOS2_ = comdat any

$_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE11_Deque_impl12_M_swap_dataERS4_ = comdat any

$_ZNSaISt4pairIiiEEC2ERKS1_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIiiEEC2ERKS3_ = comdat any

$_ZSt4swapISt15_Deque_iteratorISt4pairIiiERS2_PS2_EEvRT_S7_ = comdat any

$_ZSt4swapIPPSt4pairIiiEEvRT_S5_ = comdat any

$_ZSt4swapImEvRT_S1_ = comdat any

$_ZSt4moveIRSt15_Deque_iteratorISt4pairIiiERS2_PS2_EEONSt16remove_referenceIT_E4typeEOS8_ = comdat any

$_ZSt4moveIRPPSt4pairIiiEEONSt16remove_referenceIT_E4typeEOS6_ = comdat any

$_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt6vectorIxSaIxEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev = comdat any

$_ZNSaISt6vectorIxSaIxEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIxEC2Ev = comdat any

$_ZNSt6vectorIxSaIxEE21_M_default_initializeEm = comdat any

$_ZSt27__uninitialized_default_n_aIPxmxET_S1_T0_RSaIT1_E = comdat any

$_ZSt25__uninitialized_default_nIPxmET_S1_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPxmEET_S3_T0_ = comdat any

$_ZSt6fill_nIPxmxET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZNSt5dequeISt4pairIiiESaIS1_EE9push_backEOS1_ = comdat any

$_ZSt4moveIRSt4pairIiiEEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNSt5dequeISt4pairIiiESaIS1_EE12emplace_backIJS1_EEEvDpOT_ = comdat any

$_ZNSt16allocator_traitsISaISt4pairIiiEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_ = comdat any

$_ZSt7forwardISt4pairIiiEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt5dequeISt4pairIiiESaIS1_EE16_M_push_back_auxIJS1_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIiiEE9constructIS2_JS2_EEEvPT_DpOT0_ = comdat any

$_ZNSt5dequeISt4pairIiiESaIS1_EE22_M_reserve_map_at_backEm = comdat any

$_ZNSt5dequeISt4pairIiiESaIS1_EE17_M_reallocate_mapEmb = comdat any

$_ZSt4copyIPPSt4pairIiiES3_ET0_T_S5_S4_ = comdat any

$_ZSt13copy_backwardIPPSt4pairIiiES3_ET0_T_S5_S4_ = comdat any

$_ZSt14__copy_move_a2ILb0EPPSt4pairIiiES3_ET1_T0_S5_S4_ = comdat any

$_ZSt12__miter_baseIPPSt4pairIiiEENSt11_Miter_baseIT_E13iterator_typeES5_ = comdat any

$_ZSt13__copy_move_aILb0EPPSt4pairIiiES3_ET1_T0_S5_S4_ = comdat any

$_ZSt12__niter_baseIPPSt4pairIiiEENSt11_Niter_baseIT_E13iterator_typeES5_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPSt4pairIiiEEEPT_PKS6_S9_S7_ = comdat any

$_ZNSt10_Iter_baseIPPSt4pairIiiELb0EE7_S_baseES3_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EPPSt4pairIiiES3_ET1_T0_S5_S4_ = comdat any

$_ZSt22__copy_move_backward_aILb0EPPSt4pairIiiES3_ET1_T0_S5_S4_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPSt4pairIiiEEEPT_PKS6_S9_S7_ = comdat any

$_ZNKSt5dequeISt4pairIiiESaIS1_EE4sizeEv = comdat any

$_ZStmiISt4pairIiiERS1_PS1_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS8_SB_ = comdat any

$_ZNSt5dequeISt4pairIiiESaIS1_EE5frontEv = comdat any

$_ZNKSt15_Deque_iteratorISt4pairIiiERS1_PS1_EdeEv = comdat any

$_ZNSt5dequeISt4pairIiiESaIS1_EE9pop_frontEv = comdat any

$_ZNSt16allocator_traitsISaISt4pairIiiEEE7destroyIS1_EEvRS2_PT_ = comdat any

$_ZNSt5dequeISt4pairIiiESaIS1_EE16_M_pop_front_auxEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIiiEE7destroyIS2_EEvPT_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EEC2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EEC2Ev = comdat any

$_ZNSaISt13_Rb_tree_nodeISt4pairIKxxEEEC2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EE13_M_initializeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEEC2Ev = comdat any

$_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEE11lower_boundERS3_ = comdat any

$_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEeqERKS3_ = comdat any

$_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEE3endEv = comdat any

$_ZNKSt3mapIxxSt4lessIxESaISt4pairIKxxEEE8key_compEv = comdat any

$_ZNKSt4lessIxEclERKxS2_ = comdat any

$_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEdeEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_ = comdat any

$_ZNSt23_Rb_tree_const_iteratorISt4pairIKxxEEC2ERKSt17_Rb_tree_iteratorIS2_E = comdat any

$_ZNSt5tupleIJRKxEEC2ES1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11lower_boundERS1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_M_endEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E = comdat any

$_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base = comdat any

$_ZNKSt10_Select1stISt4pairIKxxEEclERKS2_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E = comdat any

$_ZNKSt13_Rb_tree_nodeISt4pairIKxxEE9_M_valptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxxEE6_M_ptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxxEE7_M_addrEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE3endEv = comdat any

$_ZNKSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8key_compEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEPSt13_Rb_tree_nodeIS2_EDpOT_ = comdat any

$_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSA_PSt13_Rb_tree_nodeIS2_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_get_nodeEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEvPSt13_Rb_tree_nodeIS2_EDpOT_ = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE8allocateERS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESB_IJEEEEEvRS5_PT_DpOT0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESB_IJEEEEEvPT_DpOT0_ = comdat any

$_ZNSt5tupleIJRKxEEC2EOS2_ = comdat any

$_ZNSt4pairIKxxEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE = comdat any

$_ZNSt11_Tuple_implILm0EJRKxEEC2EOS2_ = comdat any

$_ZNSt11_Tuple_implILm0EJRKxEE7_M_headERS2_ = comdat any

$_ZNSt10_Head_baseILm0ERKxLb0EEC2ES1_ = comdat any

$_ZNSt10_Head_baseILm0ERKxLb0EE7_M_headERS2_ = comdat any

$_ZNSt4pairIKxxEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE = comdat any

$_ZSt3getILm0EJRKxEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_ = comdat any

$_ZSt12__get_helperILm0ERKxJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE = comdat any

$_ZNKSt23_Rb_tree_const_iteratorISt4pairIKxxEE13_M_const_castEv = comdat any

$_ZNKSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE4sizeEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_rightmostEv = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE24_M_get_insert_unique_posERS1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_leftmostEv = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_ = comdat any

$_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEmmEv = comdat any

$_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEppEv = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base = comdat any

$_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE5beginEv = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxxEES9_vEEOT_OT0_ = comdat any

$_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxxEEEOT_RNSt16remove_referenceIS7_E4typeE = comdat any

$_ZNSt11_Tuple_implILm0EJRKxEEC2ES1_ = comdat any

$_ZNSt6vectorIxSaIxEE6insertEN9__gnu_cxx17__normal_iteratorIPKxS1_EEmRS4_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2IPxEERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameIS9_S8_EE7__valueES5_E6__typeEEE = comdat any

$_ZNSt6vectorIxSaIxEE15_M_erase_at_endEPx = comdat any

$_ZN9__gnu_cxxmiIPKxSt6vectorIxSaIxEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_ = comdat any

$_ZNKSt6vectorIxSaIxEE6cbeginEv = comdat any

$_ZNSt6vectorIxSaIxEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPxS1_EEmRKx = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl = comdat any

$_ZN9__gnu_cxxmiIPxSt6vectorIxSaIxEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_ = comdat any

$_ZSt22__uninitialized_move_aIPxS0_SaIxEET0_T_S3_S2_RT1_ = comdat any

$_ZSt13move_backwardIPxS0_ET0_T_S2_S1_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv = comdat any

$_ZSt4fillIPxxEvT_S1_RKT0_ = comdat any

$_ZSt24__uninitialized_fill_n_aIPxmxxET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZSt18make_move_iteratorIPxESt13move_iteratorIT_ES2_ = comdat any

$_ZSt23__copy_move_backward_a2ILb1EPxS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseIPxENSt11_Miter_baseIT_E13iterator_typeES2_ = comdat any

$_ZSt22__copy_move_backward_aILb1EPxS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIxEEPT_PKS3_S6_S4_ = comdat any

$_ZSt8__fill_aIPxxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZSt20uninitialized_fill_nIPxmxET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPxmxEET_S3_T0_RKT1_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEC2ERKS1_ = comdat any

$_ZNSt12_Vector_baseISt4pairIxxESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt4pairIxxEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIxxEEC2Ev = comdat any

$_ZSt8_DestroyIPSt4pairIxxES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt4pairIxxESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPSt4pairIxxEEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPSt4pairIxxEEEvT_S5_ = comdat any

$_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaISt4pairIxxEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE10deallocateEPS2_m = comdat any

$_ZNSaISt4pairIxxEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIxxEED2Ev = comdat any

$_ZSt4moveIRSt6vectorISt4pairIxxESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_ = comdat any

$_ZNSt6vectorISt4pairIxxESaIS1_EEC2EOS3_ = comdat any

$_ZSt9make_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEESt7greaterIS3_EEvT_SB_T0_ = comdat any

$_ZNSt6vectorISt4pairIxxESaIS1_EE5beginEv = comdat any

$_ZNSt6vectorISt4pairIxxESaIS1_EE3endEv = comdat any

$_ZNSt12_Vector_baseISt4pairIxxESaIS1_EEC2EOS3_ = comdat any

$_ZSt4moveIRSaISt4pairIxxEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implC2EOS2_ = comdat any

$_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_impl12_M_swap_dataERS4_ = comdat any

$_ZNSaISt4pairIxxEEC2ERKS1_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIxxEEC2ERKS3_ = comdat any

$_ZSt4swapIPSt4pairIxxEEvRT_S4_ = comdat any

$_ZSt4moveIRPSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_SE_T0_ = comdat any

$_ZN9__gnu_cxx5__ops16__iter_comp_iterISt7greaterISt4pairIxxEEEENS0_15_Iter_comp_iterIT_EES7_ = comdat any

$_ZN9__gnu_cxxmiIPSt4pairIxxESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_ = comdat any

$_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEplEl = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_T0_SF_T1_T2_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt7greaterISt4pairIxxEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEESD_EEbT_T0_ = comdat any

$_ZNSt4pairIxxEaSEOS0_ = comdat any

$_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops14_Iter_comp_valISt7greaterIS3_EEEEvT_T0_SF_T1_T2_ = comdat any

$_ZN9__gnu_cxx5__ops15__iter_comp_valISt7greaterISt4pairIxxEEEENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS7_EE = comdat any

$_ZNKSt7greaterISt4pairIxxEEclERKS1_S4_ = comdat any

$_ZStgtIxxEbRKSt4pairIT_T0_ES5_ = comdat any

$_ZStltIxxEbRKSt4pairIT_T0_ES5_ = comdat any

$_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZN9__gnu_cxx5__ops14_Iter_comp_valISt7greaterISt4pairIxxEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEES4_EEbT_RT0_ = comdat any

$_ZN9__gnu_cxx5__ops14_Iter_comp_valISt7greaterISt4pairIxxEEEC2ES5_ = comdat any

$_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt7greaterISt4pairIxxEEEC2ES5_ = comdat any

$_ZNSt6vectorISt4pairIxxESaIS1_EE12emplace_backIJRxRiEEEvDpOT_ = comdat any

$_ZSt9push_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEESt7greaterIS3_EEvT_SB_T0_ = comdat any

$_ZNSt16allocator_traitsISaISt4pairIxxEEE9constructIS1_JRxRiEEEvRS2_PT_DpOT0_ = comdat any

$_ZNSt6vectorISt4pairIxxESaIS1_EE19_M_emplace_back_auxIJRxRiEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE9constructIS2_JRxRiEEEvPT_DpOT0_ = comdat any

$_ZNSt4pairIxxEC2IRxRivEEOT_OT0_ = comdat any

$_ZNKSt6vectorISt4pairIxxESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE11_M_allocateEm = comdat any

$_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPSt4pairIxxES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZNSt16allocator_traitsISaISt4pairIxxEEE7destroyIS1_EEvRS2_PT_ = comdat any

$_ZNKSt6vectorISt4pairIxxESaIS1_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt4pairIxxEEE8max_sizeERKS2_ = comdat any

$_ZNKSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt4pairIxxEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt4pairIxxEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt4pairIxxEES3_S2_ET0_T_S6_S5_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPSt4pairIxxESt13move_iteratorIS2_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPSt4pairIxxEES3_ET0_T_S6_S5_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt4pairIxxEES5_EET0_T_S8_S7_ = comdat any

$_ZStneIPSt4pairIxxEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZSt10_ConstructISt4pairIxxEJS1_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt4pairIxxEEPT_RS2_ = comdat any

$_ZNKSt13move_iteratorIPSt4pairIxxEEdeEv = comdat any

$_ZNSt13move_iteratorIPSt4pairIxxEEppEv = comdat any

$_ZSteqIPSt4pairIxxEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZNKSt13move_iteratorIPSt4pairIxxEE4baseEv = comdat any

$_ZSt7forwardISt4pairIxxEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt13move_iteratorIPSt4pairIxxEEC2ES2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE7destroyIS2_EEvPT_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEmiEl = comdat any

$_ZN9__gnu_cxx5__ops15__iter_comp_valISt7greaterISt4pairIxxEEEENS0_14_Iter_comp_valIT_EES7_ = comdat any

$_ZNKSt6vectorISt4pairIxxESaIS1_EE5emptyEv = comdat any

$_ZN9__gnu_cxxeqIPKSt4pairIxxESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_ = comdat any

$_ZNKSt6vectorISt4pairIxxESaIS1_EE5beginEv = comdat any

$_ZNKSt6vectorISt4pairIxxESaIS1_EE3endEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIxxESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIxxESt6vectorIS2_SaIS2_EEEC2ERKS4_ = comdat any

$_ZNKSt6vectorISt4pairIxxESaIS1_EE5frontEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZSt8pop_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEESt7greaterIS3_EEvT_SB_T0_ = comdat any

$_ZNSt6vectorISt4pairIxxESaIS1_EE8pop_backEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEmmEv = comdat any

$_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_SE_SE_T0_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS1_SaIS1_EEEC2ERKS3_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS1_SaIS1_EEE4baseEv = comdat any

$_ZNSt6vectorISt4pairIxxESaIS1_EE12emplace_backIJRxRKxEEEvDpOT_ = comdat any

$_ZNSt16allocator_traitsISaISt4pairIxxEEE9constructIS1_JRxRKxEEEvRS2_PT_DpOT0_ = comdat any

$_ZNSt6vectorISt4pairIxxESaIS1_EE19_M_emplace_back_auxIJRxRKxEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE9constructIS2_JRxRKxEEEvPT_DpOT0_ = comdat any

$_ZNSt4pairIxxEC2IRxvEEOT_RKx = comdat any

$_ZNSt12_Vector_baseIxSaIxEEC2Ev = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2Ev = comdat any

$_ZSt9__reverseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEEvT_S7_St26random_access_iterator_tag = comdat any

$_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt15iterator_traitsIT_E17iterator_categoryERKS8_ = comdat any

$_ZN9__gnu_cxxeqIPxSt6vectorIxSaIxEEEEbRKNS_17__normal_iteratorIT_T0_EESA_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEmmEv = comdat any

$_ZN9__gnu_cxxltIPxSt6vectorIxSaIxEEEEbRKNS_17__normal_iteratorIT_T0_EESA_ = comdat any

$_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES6_EvT_T0_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEppEv = comdat any

$_ZSt4swapIxEvRT_S1_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv = comdat any

$_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC2Ev = comdat any

$_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev = comdat any

$_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev = comdat any

$_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_ = comdat any

$_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_ = comdat any

$_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_ = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m = comdat any

$_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JRKS5_EEEvRS6_PT_DpOT0_ = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIJRKS5_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JRKS6_EEEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE = comdat any

$_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm = comdat any

$_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_ = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS5_EEvRS6_PT_ = comdat any

$_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeERKS6_ = comdat any

$_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_S6_ET0_T_SA_S9_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt13move_iteratorIS6_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_ET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES9_EET0_T_SC_SB_ = comdat any

$_ZStneIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_ = comdat any

$_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_ = comdat any

$_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv = comdat any

$_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv = comdat any

$_ZSteqIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_ = comdat any

$_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv = comdat any

$_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE = comdat any

$_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ES6_ = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7destroyIS6_EEvPT_ = comdat any

$_ZNSt6vectorIxSaIxEE12emplace_backIJxEEEvDpOT_ = comdat any

$_ZNSt16allocator_traitsISaIxEE9constructIxJxEEEvRS0_PT_DpOT0_ = comdat any

$_ZNSt6vectorIxSaIxEE19_M_emplace_back_auxIJxEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE9constructIxJxEEEvPT_DpOT0_ = comdat any

$_ZSt6__sortIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_ = comdat any

$_ZN9__gnu_cxx5__ops16__iter_less_iterEv = comdat any

$_ZN9__gnu_cxxneIPxSt6vectorIxSaIxEEEEbRKNS_17__normal_iteratorIT_T0_EESA_ = comdat any

$_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_ = comdat any

$_ZSt4__lgl = comdat any

$_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_ = comdat any

$_ZSt14__partial_sortIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_ = comdat any

$_ZSt27__unguarded_partition_pivotIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEET_S9_S9_T0_ = comdat any

$_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_ = comdat any

$_ZSt11__sort_heapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_ = comdat any

$_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_ = comdat any

$_ZNK9__gnu_cxx5__ops15_Iter_less_iterclINS_17__normal_iteratorIPxSt6vectorIxSaIxEEEES8_EEbT_T0_ = comdat any

$_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_ = comdat any

$_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEElxNS0_5__ops15_Iter_less_iterEEvT_T0_SA_T1_T2_ = comdat any

$_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEElxNS0_5__ops14_Iter_less_valEEvT_T0_SA_T1_T2_ = comdat any

$_ZN9__gnu_cxx5__ops15__iter_comp_valENS0_15_Iter_less_iterE = comdat any

$_ZNK9__gnu_cxx5__ops14_Iter_less_valclINS_17__normal_iteratorIPxSt6vectorIxSaIxEEEExEEbT_RT0_ = comdat any

$_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_S9_T0_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEmiEl = comdat any

$_ZSt21__unguarded_partitionIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEET_S9_S9_S9_T0_ = comdat any

$_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_ = comdat any

$_ZSt26__unguarded_insertion_sortIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_ = comdat any

$_ZSt13move_backwardIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES6_ET0_T_S8_S7_ = comdat any

$_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops14_Val_less_iterEEvT_T0_ = comdat any

$_ZN9__gnu_cxx5__ops15__val_comp_iterENS0_15_Iter_less_iterE = comdat any

$_ZSt23__copy_move_backward_a2ILb1EN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES6_ET1_T0_S8_S7_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES8_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES8_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEELb1EE7_S_baseES6_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEELb0EE7_S_baseES6_ = comdat any

$_ZNK9__gnu_cxx5__ops14_Val_less_iterclIxNS_17__normal_iteratorIPxSt6vectorIxSaIxEEEEEEbRT_T0_ = comdat any

$_ZNSt6vectorISt4pairIxxESaIS1_EE12emplace_backIJS1_EEEvDpOT_ = comdat any

$_ZNSt16allocator_traitsISaISt4pairIxxEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_ = comdat any

$_ZNSt6vectorISt4pairIxxESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE9constructIS2_JS2_EEEvPT_DpOT0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EEC2EmRKS4_ = comdat any

$_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EE21_M_default_initializeEm = comdat any

$_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE12_Vector_implC2ERKS4_ = comdat any

$_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE12_Vector_implD2Ev = comdat any

$_ZNSaISt6vectorI4EdgeSaIS0_EEEC2ERKS3_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEEC2ERKS5_ = comdat any

$_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaISt6vectorI4EdgeSaIS1_EEEE8allocateERS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEE8max_sizeEv = comdat any

$_ZSt27__uninitialized_default_n_aIPSt6vectorI4EdgeSaIS1_EEmS3_ET_S5_T0_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt25__uninitialized_default_nIPSt6vectorI4EdgeSaIS1_EEmET_S5_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorI4EdgeSaIS3_EEmEET_S7_T0_ = comdat any

$_ZSt10_ConstructISt6vectorI4EdgeSaIS1_EEJEEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt6vectorI4EdgeSaIS1_EEEPT_RS4_ = comdat any

$_ZSt8_DestroyIPSt6vectorI4EdgeSaIS1_EEEvT_S5_ = comdat any

$_ZNSt6vectorI4EdgeSaIS0_EEC2Ev = comdat any

$_ZNSt12_Vector_baseI4EdgeSaIS0_EEC2Ev = comdat any

$_ZNSt12_Vector_baseI4EdgeSaIS0_EE12_Vector_implC2Ev = comdat any

$_ZNSaI4EdgeEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorI4EdgeEC2Ev = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorI4EdgeSaIS3_EEEEvT_S7_ = comdat any

$_ZSt8_DestroyISt6vectorI4EdgeSaIS1_EEEvPT_ = comdat any

$_ZNSt6vectorI4EdgeSaIS0_EED2Ev = comdat any

$_ZSt8_DestroyIP4EdgeS0_EvT_S2_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseI4EdgeSaIS0_EED2Ev = comdat any

$_ZSt8_DestroyIP4EdgeEvT_S2_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIP4EdgeEEvT_S4_ = comdat any

$_ZNSt12_Vector_baseI4EdgeSaIS0_EE13_M_deallocateEPS0_m = comdat any

$_ZNSt12_Vector_baseI4EdgeSaIS0_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaI4EdgeEE10deallocateERS1_PS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI4EdgeE10deallocateEPS1_m = comdat any

$_ZNSaI4EdgeED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorI4EdgeED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE13_M_deallocateEPS3_m = comdat any

$_ZNSt16allocator_traitsISaISt6vectorI4EdgeSaIS1_EEEE10deallocateERS4_PS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEE10deallocateEPS4_m = comdat any

$_ZSt8_DestroyIPSt6vectorI4EdgeSaIS1_EES3_EvT_S5_RSaIT0_E = comdat any

$_ZNSt16allocator_traitsISaI4EdgeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_ = comdat any

$_ZNSt6vectorI4EdgeSaIS0_EE19_M_emplace_back_auxIJRKS0_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorI4EdgeE9constructIS1_JRKS1_EEEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRK4EdgeEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNKSt6vectorI4EdgeSaIS0_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseI4EdgeSaIS0_EE11_M_allocateEm = comdat any

$_ZNKSt6vectorI4EdgeSaIS0_EE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIP4EdgeS1_SaIS0_EET0_T_S4_S3_RT1_ = comdat any

$_ZNSt16allocator_traitsISaI4EdgeEE7destroyIS0_EEvRS1_PT_ = comdat any

$_ZNKSt6vectorI4EdgeSaIS0_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaI4EdgeEE8max_sizeERKS1_ = comdat any

$_ZNKSt12_Vector_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorI4EdgeE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaI4EdgeEE8allocateERS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI4EdgeE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIP4EdgeES2_S1_ET0_T_S5_S4_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIP4EdgeSt13move_iteratorIS1_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIP4EdgeES2_ET0_T_S5_S4_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIP4EdgeES4_EET0_T_S7_S6_ = comdat any

$_ZSt4copyISt13move_iteratorIP4EdgeES2_ET0_T_S5_S4_ = comdat any

$_ZSt14__copy_move_a2ILb1EP4EdgeS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIP4EdgeEENSt11_Miter_baseIT_E13iterator_typeES5_ = comdat any

$_ZSt13__copy_move_aILb1EP4EdgeS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__niter_baseIP4EdgeENSt11_Niter_baseIT_E13iterator_typeES3_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mI4EdgeEEPT_PKS4_S7_S5_ = comdat any

$_ZNSt10_Iter_baseIP4EdgeLb0EE7_S_baseES1_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIP4EdgeELb1EE7_S_baseES3_ = comdat any

$_ZNKSt13move_iteratorIP4EdgeE4baseEv = comdat any

$_ZNSt13move_iteratorIP4EdgeEC2ES1_ = comdat any

$_ZN9__gnu_cxx13new_allocatorI4EdgeE7destroyIS1_EEvPT_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZL2PI = internal global x86_fp80 0xK00000000000000000000, align 16
@_ZL3INF = internal constant i64 1152921504606846976, align 8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [28 x i8] c"vector::_M_emplace_back_aux\00", align 1
@_ZStL19piecewise_construct = internal constant %"struct.std::piecewise_construct_t" undef, align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"vector::_M_fill_insert\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s301713658.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0
@x.147 = common global i32 0
@y.148 = common global i32 0
@x.149 = common global i32 0
@y.150 = common global i32 0
@x.151 = common global i32 0
@y.152 = common global i32 0
@x.153 = common global i32 0
@y.154 = common global i32 0
@x.155 = common global i32 0
@y.156 = common global i32 0
@x.157 = common global i32 0
@y.158 = common global i32 0
@x.159 = common global i32 0
@y.160 = common global i32 0
@x.161 = common global i32 0
@y.162 = common global i32 0
@x.163 = common global i32 0
@y.164 = common global i32 0
@x.165 = common global i32 0
@y.166 = common global i32 0
@x.167 = common global i32 0
@y.168 = common global i32 0
@x.169 = common global i32 0
@y.170 = common global i32 0
@x.171 = common global i32 0
@y.172 = common global i32 0
@x.173 = common global i32 0
@y.174 = common global i32 0
@x.175 = common global i32 0
@y.176 = common global i32 0
@x.177 = common global i32 0
@y.178 = common global i32 0
@x.179 = common global i32 0
@y.180 = common global i32 0
@x.181 = common global i32 0
@y.182 = common global i32 0
@x.183 = common global i32 0
@y.184 = common global i32 0
@x.185 = common global i32 0
@y.186 = common global i32 0
@x.187 = common global i32 0
@y.188 = common global i32 0
@x.189 = common global i32 0
@y.190 = common global i32 0
@x.191 = common global i32 0
@y.192 = common global i32 0
@x.193 = common global i32 0
@y.194 = common global i32 0
@x.195 = common global i32 0
@y.196 = common global i32 0
@x.197 = common global i32 0
@y.198 = common global i32 0
@x.199 = common global i32 0
@y.200 = common global i32 0
@x.201 = common global i32 0
@y.202 = common global i32 0
@x.203 = common global i32 0
@y.204 = common global i32 0
@x.205 = common global i32 0
@y.206 = common global i32 0
@x.207 = common global i32 0
@y.208 = common global i32 0
@x.209 = common global i32 0
@y.210 = common global i32 0
@x.211 = common global i32 0
@y.212 = common global i32 0
@x.213 = common global i32 0
@y.214 = common global i32 0
@x.215 = common global i32 0
@y.216 = common global i32 0
@x.217 = common global i32 0
@y.218 = common global i32 0
@x.219 = common global i32 0
@y.220 = common global i32 0
@x.221 = common global i32 0
@y.222 = common global i32 0
@x.223 = common global i32 0
@y.224 = common global i32 0
@x.225 = common global i32 0
@y.226 = common global i32 0
@x.227 = common global i32 0
@y.228 = common global i32 0
@x.229 = common global i32 0
@y.230 = common global i32 0
@x.231 = common global i32 0
@y.232 = common global i32 0
@x.233 = common global i32 0
@y.234 = common global i32 0
@x.235 = common global i32 0
@y.236 = common global i32 0
@x.237 = common global i32 0
@y.238 = common global i32 0
@x.239 = common global i32 0
@y.240 = common global i32 0
@x.241 = common global i32 0
@y.242 = common global i32 0
@x.243 = common global i32 0
@y.244 = common global i32 0
@x.245 = common global i32 0
@y.246 = common global i32 0
@x.247 = common global i32 0
@y.248 = common global i32 0
@x.249 = common global i32 0
@y.250 = common global i32 0
@x.251 = common global i32 0
@y.252 = common global i32 0
@x.253 = common global i32 0
@y.254 = common global i32 0
@x.255 = common global i32 0
@y.256 = common global i32 0
@x.257 = common global i32 0
@y.258 = common global i32 0
@x.259 = common global i32 0
@y.260 = common global i32 0
@x.261 = common global i32 0
@y.262 = common global i32 0
@x.263 = common global i32 0
@y.264 = common global i32 0
@x.265 = common global i32 0
@y.266 = common global i32 0
@x.267 = common global i32 0
@y.268 = common global i32 0
@x.269 = common global i32 0
@y.270 = common global i32 0
@x.271 = common global i32 0
@y.272 = common global i32 0
@x.273 = common global i32 0
@y.274 = common global i32 0
@x.275 = common global i32 0
@y.276 = common global i32 0
@x.277 = common global i32 0
@y.278 = common global i32 0
@x.279 = common global i32 0
@y.280 = common global i32 0
@x.281 = common global i32 0
@y.282 = common global i32 0
@x.283 = common global i32 0
@y.284 = common global i32 0
@x.285 = common global i32 0
@y.286 = common global i32 0
@x.287 = common global i32 0
@y.288 = common global i32 0
@x.289 = common global i32 0
@y.290 = common global i32 0
@x.291 = common global i32 0
@y.292 = common global i32 0
@x.293 = common global i32 0
@y.294 = common global i32 0
@x.295 = common global i32 0
@y.296 = common global i32 0
@x.297 = common global i32 0
@y.298 = common global i32 0
@x.299 = common global i32 0
@y.300 = common global i32 0
@x.301 = common global i32 0
@y.302 = common global i32 0
@x.303 = common global i32 0
@y.304 = common global i32 0
@x.305 = common global i32 0
@y.306 = common global i32 0
@x.307 = common global i32 0
@y.308 = common global i32 0
@x.309 = common global i32 0
@y.310 = common global i32 0
@x.311 = common global i32 0
@y.312 = common global i32 0
@x.313 = common global i32 0
@y.314 = common global i32 0
@x.315 = common global i32 0
@y.316 = common global i32 0
@x.317 = common global i32 0
@y.318 = common global i32 0
@x.319 = common global i32 0
@y.320 = common global i32 0
@x.321 = common global i32 0
@y.322 = common global i32 0
@x.323 = common global i32 0
@y.324 = common global i32 0
@x.325 = common global i32 0
@y.326 = common global i32 0
@x.327 = common global i32 0
@y.328 = common global i32 0
@x.329 = common global i32 0
@y.330 = common global i32 0
@x.331 = common global i32 0
@y.332 = common global i32 0
@x.333 = common global i32 0
@y.334 = common global i32 0
@x.335 = common global i32 0
@y.336 = common global i32 0
@x.337 = common global i32 0
@y.338 = common global i32 0
@x.339 = common global i32 0
@y.340 = common global i32 0
@x.341 = common global i32 0
@y.342 = common global i32 0
@x.343 = common global i32 0
@y.344 = common global i32 0
@x.345 = common global i32 0
@y.346 = common global i32 0
@x.347 = common global i32 0
@y.348 = common global i32 0
@x.349 = common global i32 0
@y.350 = common global i32 0
@x.351 = common global i32 0
@y.352 = common global i32 0
@x.353 = common global i32 0
@y.354 = common global i32 0
@x.355 = common global i32 0
@y.356 = common global i32 0
@x.357 = common global i32 0
@y.358 = common global i32 0
@x.359 = common global i32 0
@y.360 = common global i32 0
@x.361 = common global i32 0
@y.362 = common global i32 0
@x.363 = common global i32 0
@y.364 = common global i32 0
@x.365 = common global i32 0
@y.366 = common global i32 0
@x.367 = common global i32 0
@y.368 = common global i32 0
@x.369 = common global i32 0
@y.370 = common global i32 0
@x.371 = common global i32 0
@y.372 = common global i32 0
@x.373 = common global i32 0
@y.374 = common global i32 0
@x.375 = common global i32 0
@y.376 = common global i32 0
@x.377 = common global i32 0
@y.378 = common global i32 0
@x.379 = common global i32 0
@y.380 = common global i32 0
@x.381 = common global i32 0
@y.382 = common global i32 0
@x.383 = common global i32 0
@y.384 = common global i32 0
@x.385 = common global i32 0
@y.386 = common global i32 0
@x.387 = common global i32 0
@y.388 = common global i32 0
@x.389 = common global i32 0
@y.390 = common global i32 0
@x.391 = common global i32 0
@y.392 = common global i32 0
@x.393 = common global i32 0
@y.394 = common global i32 0
@x.395 = common global i32 0
@y.396 = common global i32 0
@x.397 = common global i32 0
@y.398 = common global i32 0
@x.399 = common global i32 0
@y.400 = common global i32 0
@x.401 = common global i32 0
@y.402 = common global i32 0
@x.403 = common global i32 0
@y.404 = common global i32 0
@x.405 = common global i32 0
@y.406 = common global i32 0
@x.407 = common global i32 0
@y.408 = common global i32 0
@x.409 = common global i32 0
@y.410 = common global i32 0
@x.411 = common global i32 0
@y.412 = common global i32 0
@x.413 = common global i32 0
@y.414 = common global i32 0
@x.415 = common global i32 0
@y.416 = common global i32 0
@x.417 = common global i32 0
@y.418 = common global i32 0
@x.419 = common global i32 0
@y.420 = common global i32 0
@x.421 = common global i32 0
@y.422 = common global i32 0
@x.423 = common global i32 0
@y.424 = common global i32 0
@x.425 = common global i32 0
@y.426 = common global i32 0
@x.427 = common global i32 0
@y.428 = common global i32 0
@x.429 = common global i32 0
@y.430 = common global i32 0
@x.431 = common global i32 0
@y.432 = common global i32 0
@x.433 = common global i32 0
@y.434 = common global i32 0
@x.435 = common global i32 0
@y.436 = common global i32 0
@x.437 = common global i32 0
@y.438 = common global i32 0
@x.439 = common global i32 0
@y.440 = common global i32 0
@x.441 = common global i32 0
@y.442 = common global i32 0
@x.443 = common global i32 0
@y.444 = common global i32 0
@x.445 = common global i32 0
@y.446 = common global i32 0
@x.447 = common global i32 0
@y.448 = common global i32 0
@x.449 = common global i32 0
@y.450 = common global i32 0
@x.451 = common global i32 0
@y.452 = common global i32 0
@x.453 = common global i32 0
@y.454 = common global i32 0
@x.455 = common global i32 0
@y.456 = common global i32 0
@x.457 = common global i32 0
@y.458 = common global i32 0
@x.459 = common global i32 0
@y.460 = common global i32 0
@x.461 = common global i32 0
@y.462 = common global i32 0
@x.463 = common global i32 0
@y.464 = common global i32 0
@x.465 = common global i32 0
@y.466 = common global i32 0
@x.467 = common global i32 0
@y.468 = common global i32 0
@x.469 = common global i32 0
@y.470 = common global i32 0
@x.471 = common global i32 0
@y.472 = common global i32 0
@x.473 = common global i32 0
@y.474 = common global i32 0
@x.475 = common global i32 0
@y.476 = common global i32 0
@x.477 = common global i32 0
@y.478 = common global i32 0
@x.479 = common global i32 0
@y.480 = common global i32 0
@x.481 = common global i32 0
@y.482 = common global i32 0
@x.483 = common global i32 0
@y.484 = common global i32 0
@x.485 = common global i32 0
@y.486 = common global i32 0
@x.487 = common global i32 0
@y.488 = common global i32 0
@x.489 = common global i32 0
@y.490 = common global i32 0
@x.491 = common global i32 0
@y.492 = common global i32 0
@x.493 = common global i32 0
@y.494 = common global i32 0
@x.495 = common global i32 0
@y.496 = common global i32 0
@x.497 = common global i32 0
@y.498 = common global i32 0
@x.499 = common global i32 0
@y.500 = common global i32 0
@x.501 = common global i32 0
@y.502 = common global i32 0
@x.503 = common global i32 0
@y.504 = common global i32 0
@x.505 = common global i32 0
@y.506 = common global i32 0
@x.507 = common global i32 0
@y.508 = common global i32 0
@x.509 = common global i32 0
@y.510 = common global i32 0
@x.511 = common global i32 0
@y.512 = common global i32 0
@x.513 = common global i32 0
@y.514 = common global i32 0
@x.515 = common global i32 0
@y.516 = common global i32 0
@x.517 = common global i32 0
@y.518 = common global i32 0
@x.519 = common global i32 0
@y.520 = common global i32 0
@x.521 = common global i32 0
@y.522 = common global i32 0
@x.523 = common global i32 0
@y.524 = common global i32 0
@x.525 = common global i32 0
@y.526 = common global i32 0
@x.527 = common global i32 0
@y.528 = common global i32 0
@x.529 = common global i32 0
@y.530 = common global i32 0
@x.531 = common global i32 0
@y.532 = common global i32 0
@x.533 = common global i32 0
@y.534 = common global i32 0
@x.535 = common global i32 0
@y.536 = common global i32 0
@x.537 = common global i32 0
@y.538 = common global i32 0
@x.539 = common global i32 0
@y.540 = common global i32 0
@x.541 = common global i32 0
@y.542 = common global i32 0
@x.543 = common global i32 0
@y.544 = common global i32 0
@x.545 = common global i32 0
@y.546 = common global i32 0
@x.547 = common global i32 0
@y.548 = common global i32 0
@x.549 = common global i32 0
@y.550 = common global i32 0
@x.551 = common global i32 0
@y.552 = common global i32 0
@x.553 = common global i32 0
@y.554 = common global i32 0
@x.555 = common global i32 0
@y.556 = common global i32 0
@x.557 = common global i32 0
@y.558 = common global i32 0
@x.559 = common global i32 0
@y.560 = common global i32 0
@x.561 = common global i32 0
@y.562 = common global i32 0
@x.563 = common global i32 0
@y.564 = common global i32 0
@x.565 = common global i32 0
@y.566 = common global i32 0
@x.567 = common global i32 0
@y.568 = common global i32 0
@x.569 = common global i32 0
@y.570 = common global i32 0
@x.571 = common global i32 0
@y.572 = common global i32 0
@x.573 = common global i32 0
@y.574 = common global i32 0
@x.575 = common global i32 0
@y.576 = common global i32 0
@x.577 = common global i32 0
@y.578 = common global i32 0
@x.579 = common global i32 0
@y.580 = common global i32 0
@x.581 = common global i32 0
@y.582 = common global i32 0
@x.583 = common global i32 0
@y.584 = common global i32 0
@x.585 = common global i32 0
@y.586 = common global i32 0
@x.587 = common global i32 0
@y.588 = common global i32 0
@x.589 = common global i32 0
@y.590 = common global i32 0
@x.591 = common global i32 0
@y.592 = common global i32 0
@x.593 = common global i32 0
@y.594 = common global i32 0
@x.595 = common global i32 0
@y.596 = common global i32 0
@x.597 = common global i32 0
@y.598 = common global i32 0
@x.599 = common global i32 0
@y.600 = common global i32 0
@x.601 = common global i32 0
@y.602 = common global i32 0
@x.603 = common global i32 0
@y.604 = common global i32 0
@x.605 = common global i32 0
@y.606 = common global i32 0
@x.607 = common global i32 0
@y.608 = common global i32 0
@x.609 = common global i32 0
@y.610 = common global i32 0
@x.611 = common global i32 0
@y.612 = common global i32 0
@x.613 = common global i32 0
@y.614 = common global i32 0
@x.615 = common global i32 0
@y.616 = common global i32 0
@x.617 = common global i32 0
@y.618 = common global i32 0
@x.619 = common global i32 0
@y.620 = common global i32 0
@x.621 = common global i32 0
@y.622 = common global i32 0
@x.623 = common global i32 0
@y.624 = common global i32 0
@x.625 = common global i32 0
@y.626 = common global i32 0
@x.627 = common global i32 0
@y.628 = common global i32 0
@x.629 = common global i32 0
@y.630 = common global i32 0
@x.631 = common global i32 0
@y.632 = common global i32 0
@x.633 = common global i32 0
@y.634 = common global i32 0
@x.635 = common global i32 0
@y.636 = common global i32 0
@x.637 = common global i32 0
@y.638 = common global i32 0
@x.639 = common global i32 0
@y.640 = common global i32 0
@x.641 = common global i32 0
@y.642 = common global i32 0
@x.643 = common global i32 0
@y.644 = common global i32 0
@x.645 = common global i32 0
@y.646 = common global i32 0
@x.647 = common global i32 0
@y.648 = common global i32 0
@x.649 = common global i32 0
@y.650 = common global i32 0
@x.651 = common global i32 0
@y.652 = common global i32 0
@x.653 = common global i32 0
@y.654 = common global i32 0
@x.655 = common global i32 0
@y.656 = common global i32 0
@x.657 = common global i32 0
@y.658 = common global i32 0
@x.659 = common global i32 0
@y.660 = common global i32 0
@x.661 = common global i32 0
@y.662 = common global i32 0
@x.663 = common global i32 0
@y.664 = common global i32 0
@x.665 = common global i32 0
@y.666 = common global i32 0
@x.667 = common global i32 0
@y.668 = common global i32 0
@x.669 = common global i32 0
@y.670 = common global i32 0
@x.671 = common global i32 0
@y.672 = common global i32 0
@x.673 = common global i32 0
@y.674 = common global i32 0
@x.675 = common global i32 0
@y.676 = common global i32 0
@x.677 = common global i32 0
@y.678 = common global i32 0
@x.679 = common global i32 0
@y.680 = common global i32 0
@x.681 = common global i32 0
@y.682 = common global i32 0
@x.683 = common global i32 0
@y.684 = common global i32 0
@x.685 = common global i32 0
@y.686 = common global i32 0
@x.687 = common global i32 0
@y.688 = common global i32 0
@x.689 = common global i32 0
@y.690 = common global i32 0
@x.691 = common global i32 0
@y.692 = common global i32 0
@x.693 = common global i32 0
@y.694 = common global i32 0
@x.695 = common global i32 0
@y.696 = common global i32 0
@x.697 = common global i32 0
@y.698 = common global i32 0
@x.699 = common global i32 0
@y.700 = common global i32 0
@x.701 = common global i32 0
@y.702 = common global i32 0
@x.703 = common global i32 0
@y.704 = common global i32 0
@x.705 = common global i32 0
@y.706 = common global i32 0
@x.707 = common global i32 0
@y.708 = common global i32 0
@x.709 = common global i32 0
@y.710 = common global i32 0
@x.711 = common global i32 0
@y.712 = common global i32 0
@x.713 = common global i32 0
@y.714 = common global i32 0
@x.715 = common global i32 0
@y.716 = common global i32 0
@x.717 = common global i32 0
@y.718 = common global i32 0
@x.719 = common global i32 0
@y.720 = common global i32 0
@x.721 = common global i32 0
@y.722 = common global i32 0
@x.723 = common global i32 0
@y.724 = common global i32 0
@x.725 = common global i32 0
@y.726 = common global i32 0
@x.727 = common global i32 0
@y.728 = common global i32 0
@x.729 = common global i32 0
@y.730 = common global i32 0
@x.731 = common global i32 0
@y.732 = common global i32 0
@x.733 = common global i32 0
@y.734 = common global i32 0
@x.735 = common global i32 0
@y.736 = common global i32 0
@x.737 = common global i32 0
@y.738 = common global i32 0
@x.739 = common global i32 0
@y.740 = common global i32 0
@x.741 = common global i32 0
@y.742 = common global i32 0
@x.743 = common global i32 0
@y.744 = common global i32 0
@x.745 = common global i32 0
@y.746 = common global i32 0
@x.747 = common global i32 0
@y.748 = common global i32 0
@x.749 = common global i32 0
@y.750 = common global i32 0
@x.751 = common global i32 0
@y.752 = common global i32 0
@x.753 = common global i32 0
@y.754 = common global i32 0
@x.755 = common global i32 0
@y.756 = common global i32 0
@x.757 = common global i32 0
@y.758 = common global i32 0
@x.759 = common global i32 0
@y.760 = common global i32 0
@x.761 = common global i32 0
@y.762 = common global i32 0
@x.763 = common global i32 0
@y.764 = common global i32 0
@x.765 = common global i32 0
@y.766 = common global i32 0
@x.767 = common global i32 0
@y.768 = common global i32 0
@x.769 = common global i32 0
@y.770 = common global i32 0
@x.771 = common global i32 0
@y.772 = common global i32 0
@x.773 = common global i32 0
@y.774 = common global i32 0
@x.775 = common global i32 0
@y.776 = common global i32 0
@x.777 = common global i32 0
@y.778 = common global i32 0
@x.779 = common global i32 0
@y.780 = common global i32 0
@x.781 = common global i32 0
@y.782 = common global i32 0
@x.783 = common global i32 0
@y.784 = common global i32 0
@x.785 = common global i32 0
@y.786 = common global i32 0
@x.787 = common global i32 0
@y.788 = common global i32 0
@x.789 = common global i32 0
@y.790 = common global i32 0
@x.791 = common global i32 0
@y.792 = common global i32 0
@x.793 = common global i32 0
@y.794 = common global i32 0
@x.795 = common global i32 0
@y.796 = common global i32 0
@x.797 = common global i32 0
@y.798 = common global i32 0
@x.799 = common global i32 0
@y.800 = common global i32 0
@x.801 = common global i32 0
@y.802 = common global i32 0
@x.803 = common global i32 0
@y.804 = common global i32 0
@x.805 = common global i32 0
@y.806 = common global i32 0
@x.807 = common global i32 0
@y.808 = common global i32 0
@x.809 = common global i32 0
@y.810 = common global i32 0
@x.811 = common global i32 0
@y.812 = common global i32 0
@x.813 = common global i32 0
@y.814 = common global i32 0
@x.815 = common global i32 0
@y.816 = common global i32 0
@x.817 = common global i32 0
@y.818 = common global i32 0
@x.819 = common global i32 0
@y.820 = common global i32 0
@x.821 = common global i32 0
@y.822 = common global i32 0
@x.823 = common global i32 0
@y.824 = common global i32 0
@x.825 = common global i32 0
@y.826 = common global i32 0
@x.827 = common global i32 0
@y.828 = common global i32 0
@x.829 = common global i32 0
@y.830 = common global i32 0
@x.831 = common global i32 0
@y.832 = common global i32 0
@x.833 = common global i32 0
@y.834 = common global i32 0
@x.835 = common global i32 0
@y.836 = common global i32 0
@x.837 = common global i32 0
@y.838 = common global i32 0
@x.839 = common global i32 0
@y.840 = common global i32 0
@x.841 = common global i32 0
@y.842 = common global i32 0
@x.843 = common global i32 0
@y.844 = common global i32 0
@x.845 = common global i32 0
@y.846 = common global i32 0
@x.847 = common global i32 0
@y.848 = common global i32 0
@x.849 = common global i32 0
@y.850 = common global i32 0
@x.851 = common global i32 0
@y.852 = common global i32 0
@x.853 = common global i32 0
@y.854 = common global i32 0
@x.855 = common global i32 0
@y.856 = common global i32 0
@x.857 = common global i32 0
@y.858 = common global i32 0
@x.859 = common global i32 0
@y.860 = common global i32 0
@x.861 = common global i32 0
@y.862 = common global i32 0
@x.863 = common global i32 0
@y.864 = common global i32 0
@x.865 = common global i32 0
@y.866 = common global i32 0
@x.867 = common global i32 0
@y.868 = common global i32 0
@x.869 = common global i32 0
@y.870 = common global i32 0
@x.871 = common global i32 0
@y.872 = common global i32 0
@x.873 = common global i32 0
@y.874 = common global i32 0
@x.875 = common global i32 0
@y.876 = common global i32 0
@x.877 = common global i32 0
@y.878 = common global i32 0
@x.879 = common global i32 0
@y.880 = common global i32 0
@x.881 = common global i32 0
@y.882 = common global i32 0
@x.883 = common global i32 0
@y.884 = common global i32 0
@x.885 = common global i32 0
@y.886 = common global i32 0
@x.887 = common global i32 0
@y.888 = common global i32 0
@x.889 = common global i32 0
@y.890 = common global i32 0
@x.891 = common global i32 0
@y.892 = common global i32 0
@x.893 = common global i32 0
@y.894 = common global i32 0
@x.895 = common global i32 0
@y.896 = common global i32 0
@x.897 = common global i32 0
@y.898 = common global i32 0
@x.899 = common global i32 0
@y.900 = common global i32 0
@x.901 = common global i32 0
@y.902 = common global i32 0
@x.903 = common global i32 0
@y.904 = common global i32 0
@x.905 = common global i32 0
@y.906 = common global i32 0
@x.907 = common global i32 0
@y.908 = common global i32 0
@x.909 = common global i32 0
@y.910 = common global i32 0
@x.911 = common global i32 0
@y.912 = common global i32 0
@x.913 = common global i32 0
@y.914 = common global i32 0
@x.915 = common global i32 0
@y.916 = common global i32 0
@x.917 = common global i32 0
@y.918 = common global i32 0
@x.919 = common global i32 0
@y.920 = common global i32 0
@x.921 = common global i32 0
@y.922 = common global i32 0
@x.923 = common global i32 0
@y.924 = common global i32 0
@x.925 = common global i32 0
@y.926 = common global i32 0
@x.927 = common global i32 0
@y.928 = common global i32 0
@x.929 = common global i32 0
@y.930 = common global i32 0
@x.931 = common global i32 0
@y.932 = common global i32 0
@x.933 = common global i32 0
@y.934 = common global i32 0
@x.935 = common global i32 0
@y.936 = common global i32 0
@x.937 = common global i32 0
@y.938 = common global i32 0
@x.939 = common global i32 0
@y.940 = common global i32 0
@x.941 = common global i32 0
@y.942 = common global i32 0
@x.943 = common global i32 0
@y.944 = common global i32 0
@x.945 = common global i32 0
@y.946 = common global i32 0
@x.947 = common global i32 0
@y.948 = common global i32 0
@x.949 = common global i32 0
@y.950 = common global i32 0
@x.951 = common global i32 0
@y.952 = common global i32 0
@x.953 = common global i32 0
@y.954 = common global i32 0
@x.955 = common global i32 0
@y.956 = common global i32 0
@x.957 = common global i32 0
@y.958 = common global i32 0
@x.959 = common global i32 0
@y.960 = common global i32 0
@x.961 = common global i32 0
@y.962 = common global i32 0
@x.963 = common global i32 0
@y.964 = common global i32 0
@x.965 = common global i32 0
@y.966 = common global i32 0
@x.967 = common global i32 0
@y.968 = common global i32 0
@x.969 = common global i32 0
@y.970 = common global i32 0
@x.971 = common global i32 0
@y.972 = common global i32 0
@x.973 = common global i32 0
@y.974 = common global i32 0
@x.975 = common global i32 0
@y.976 = common global i32 0
@x.977 = common global i32 0
@y.978 = common global i32 0
@x.979 = common global i32 0
@y.980 = common global i32 0
@x.981 = common global i32 0
@y.982 = common global i32 0
@x.983 = common global i32 0
@y.984 = common global i32 0
@x.985 = common global i32 0
@y.986 = common global i32 0
@x.987 = common global i32 0
@y.988 = common global i32 0
@x.989 = common global i32 0
@y.990 = common global i32 0
@x.991 = common global i32 0
@y.992 = common global i32 0
@x.993 = common global i32 0
@y.994 = common global i32 0
@x.995 = common global i32 0
@y.996 = common global i32 0
@x.997 = common global i32 0
@y.998 = common global i32 0
@x.999 = common global i32 0
@y.1000 = common global i32 0
@x.1001 = common global i32 0
@y.1002 = common global i32 0
@x.1003 = common global i32 0
@y.1004 = common global i32 0
@x.1005 = common global i32 0
@y.1006 = common global i32 0
@x.1007 = common global i32 0
@y.1008 = common global i32 0
@x.1009 = common global i32 0
@y.1010 = common global i32 0
@x.1011 = common global i32 0
@y.1012 = common global i32 0
@x.1013 = common global i32 0
@y.1014 = common global i32 0
@x.1015 = common global i32 0
@y.1016 = common global i32 0
@x.1017 = common global i32 0
@y.1018 = common global i32 0
@x.1019 = common global i32 0
@y.1020 = common global i32 0
@x.1021 = common global i32 0
@y.1022 = common global i32 0
@x.1023 = common global i32 0
@y.1024 = common global i32 0
@x.1025 = common global i32 0
@y.1026 = common global i32 0
@x.1027 = common global i32 0
@y.1028 = common global i32 0
@x.1029 = common global i32 0
@y.1030 = common global i32 0
@x.1031 = common global i32 0
@y.1032 = common global i32 0
@x.1033 = common global i32 0
@y.1034 = common global i32 0
@x.1035 = common global i32 0
@y.1036 = common global i32 0
@x.1037 = common global i32 0
@y.1038 = common global i32 0
@x.1039 = common global i32 0
@y.1040 = common global i32 0
@x.1041 = common global i32 0
@y.1042 = common global i32 0
@x.1043 = common global i32 0
@y.1044 = common global i32 0
@x.1045 = common global i32 0
@y.1046 = common global i32 0
@x.1047 = common global i32 0
@y.1048 = common global i32 0
@x.1049 = common global i32 0
@y.1050 = common global i32 0
@x.1051 = common global i32 0
@y.1052 = common global i32 0
@x.1053 = common global i32 0
@y.1054 = common global i32 0
@x.1055 = common global i32 0
@y.1056 = common global i32 0
@x.1057 = common global i32 0
@y.1058 = common global i32 0
@x.1059 = common global i32 0
@y.1060 = common global i32 0
@x.1061 = common global i32 0
@y.1062 = common global i32 0
@x.1063 = common global i32 0
@y.1064 = common global i32 0
@x.1065 = common global i32 0
@y.1066 = common global i32 0
@x.1067 = common global i32 0
@y.1068 = common global i32 0
@x.1069 = common global i32 0
@y.1070 = common global i32 0
@x.1071 = common global i32 0
@y.1072 = common global i32 0
@x.1073 = common global i32 0
@y.1074 = common global i32 0
@x.1075 = common global i32 0
@y.1076 = common global i32 0
@x.1077 = common global i32 0
@y.1078 = common global i32 0
@x.1079 = common global i32 0
@y.1080 = common global i32 0
@x.1081 = common global i32 0
@y.1082 = common global i32 0
@x.1083 = common global i32 0
@y.1084 = common global i32 0
@x.1085 = common global i32 0
@y.1086 = common global i32 0
@x.1087 = common global i32 0
@y.1088 = common global i32 0
@x.1089 = common global i32 0
@y.1090 = common global i32 0
@x.1091 = common global i32 0
@y.1092 = common global i32 0
@x.1093 = common global i32 0
@y.1094 = common global i32 0
@x.1095 = common global i32 0
@y.1096 = common global i32 0
@x.1097 = common global i32 0
@y.1098 = common global i32 0
@x.1099 = common global i32 0
@y.1100 = common global i32 0
@x.1101 = common global i32 0
@y.1102 = common global i32 0
@x.1103 = common global i32 0
@y.1104 = common global i32 0
@x.1105 = common global i32 0
@y.1106 = common global i32 0
@x.1107 = common global i32 0
@y.1108 = common global i32 0
@x.1109 = common global i32 0
@y.1110 = common global i32 0
@x.1111 = common global i32 0
@y.1112 = common global i32 0
@x.1113 = common global i32 0
@y.1114 = common global i32 0
@x.1115 = common global i32 0
@y.1116 = common global i32 0
@x.1117 = common global i32 0
@y.1118 = common global i32 0
@x.1119 = common global i32 0
@y.1120 = common global i32 0
@x.1121 = common global i32 0
@y.1122 = common global i32 0
@x.1123 = common global i32 0
@y.1124 = common global i32 0
@x.1125 = common global i32 0
@y.1126 = common global i32 0
@x.1127 = common global i32 0
@y.1128 = common global i32 0
@x.1129 = common global i32 0
@y.1130 = common global i32 0
@x.1131 = common global i32 0
@y.1132 = common global i32 0
@x.1133 = common global i32 0
@y.1134 = common global i32 0
@x.1135 = common global i32 0
@y.1136 = common global i32 0
@x.1137 = common global i32 0
@y.1138 = common global i32 0
@x.1139 = common global i32 0
@y.1140 = common global i32 0
@x.1141 = common global i32 0
@y.1142 = common global i32 0
@x.1143 = common global i32 0
@y.1144 = common global i32 0
@x.1145 = common global i32 0
@y.1146 = common global i32 0
@x.1147 = common global i32 0
@y.1148 = common global i32 0
@x.1149 = common global i32 0
@y.1150 = common global i32 0
@x.1151 = common global i32 0
@y.1152 = common global i32 0
@x.1153 = common global i32 0
@y.1154 = common global i32 0
@x.1155 = common global i32 0
@y.1156 = common global i32 0
@x.1157 = common global i32 0
@y.1158 = common global i32 0
@x.1159 = common global i32 0
@y.1160 = common global i32 0
@x.1161 = common global i32 0
@y.1162 = common global i32 0
@x.1163 = common global i32 0
@y.1164 = common global i32 0
@x.1165 = common global i32 0
@y.1166 = common global i32 0
@x.1167 = common global i32 0
@y.1168 = common global i32 0
@x.1169 = common global i32 0
@y.1170 = common global i32 0
@x.1171 = common global i32 0
@y.1172 = common global i32 0
@x.1173 = common global i32 0
@y.1174 = common global i32 0
@x.1175 = common global i32 0
@y.1176 = common global i32 0
@x.1177 = common global i32 0
@y.1178 = common global i32 0
@x.1179 = common global i32 0
@y.1180 = common global i32 0
@x.1181 = common global i32 0
@y.1182 = common global i32 0
@x.1183 = common global i32 0
@y.1184 = common global i32 0
@x.1185 = common global i32 0
@y.1186 = common global i32 0
@x.1187 = common global i32 0
@y.1188 = common global i32 0
@x.1189 = common global i32 0
@y.1190 = common global i32 0
@x.1191 = common global i32 0
@y.1192 = common global i32 0
@x.1193 = common global i32 0
@y.1194 = common global i32 0
@x.1195 = common global i32 0
@y.1196 = common global i32 0
@x.1197 = common global i32 0
@y.1198 = common global i32 0
@x.1199 = common global i32 0
@y.1200 = common global i32 0
@x.1201 = common global i32 0
@y.1202 = common global i32 0
@x.1203 = common global i32 0
@y.1204 = common global i32 0
@x.1205 = common global i32 0
@y.1206 = common global i32 0
@x.1207 = common global i32 0
@y.1208 = common global i32 0
@x.1209 = common global i32 0
@y.1210 = common global i32 0
@x.1211 = common global i32 0
@y.1212 = common global i32 0
@x.1213 = common global i32 0
@y.1214 = common global i32 0
@x.1215 = common global i32 0
@y.1216 = common global i32 0
@x.1217 = common global i32 0
@y.1218 = common global i32 0
@x.1219 = common global i32 0
@y.1220 = common global i32 0
@x.1221 = common global i32 0
@y.1222 = common global i32 0
@x.1223 = common global i32 0
@y.1224 = common global i32 0
@x.1225 = common global i32 0
@y.1226 = common global i32 0
@x.1227 = common global i32 0
@y.1228 = common global i32 0
@x.1229 = common global i32 0
@y.1230 = common global i32 0
@x.1231 = common global i32 0
@y.1232 = common global i32 0
@x.1233 = common global i32 0
@y.1234 = common global i32 0
@x.1235 = common global i32 0
@y.1236 = common global i32 0
@x.1237 = common global i32 0
@y.1238 = common global i32 0
@x.1239 = common global i32 0
@y.1240 = common global i32 0
@x.1241 = common global i32 0
@y.1242 = common global i32 0
@x.1243 = common global i32 0
@y.1244 = common global i32 0
@x.1245 = common global i32 0
@y.1246 = common global i32 0
@x.1247 = common global i32 0
@y.1248 = common global i32 0
@x.1249 = common global i32 0
@y.1250 = common global i32 0
@x.1251 = common global i32 0
@y.1252 = common global i32 0
@x.1253 = common global i32 0
@y.1254 = common global i32 0
@x.1255 = common global i32 0
@y.1256 = common global i32 0
@x.1257 = common global i32 0
@y.1258 = common global i32 0
@x.1259 = common global i32 0
@y.1260 = common global i32 0
@x.1261 = common global i32 0
@y.1262 = common global i32 0
@x.1263 = common global i32 0
@y.1264 = common global i32 0
@x.1265 = common global i32 0
@y.1266 = common global i32 0
@x.1267 = common global i32 0
@y.1268 = common global i32 0
@x.1269 = common global i32 0
@y.1270 = common global i32 0
@x.1271 = common global i32 0
@y.1272 = common global i32 0
@x.1273 = common global i32 0
@y.1274 = common global i32 0
@x.1275 = common global i32 0
@y.1276 = common global i32 0
@x.1277 = common global i32 0
@y.1278 = common global i32 0
@x.1279 = common global i32 0
@y.1280 = common global i32 0
@x.1281 = common global i32 0
@y.1282 = common global i32 0
@x.1283 = common global i32 0
@y.1284 = common global i32 0
@x.1285 = common global i32 0
@y.1286 = common global i32 0
@x.1287 = common global i32 0
@y.1288 = common global i32 0
@x.1289 = common global i32 0
@y.1290 = common global i32 0
@x.1291 = common global i32 0
@y.1292 = common global i32 0
@x.1293 = common global i32 0
@y.1294 = common global i32 0
@x.1295 = common global i32 0
@y.1296 = common global i32 0
@x.1297 = common global i32 0
@y.1298 = common global i32 0
@x.1299 = common global i32 0
@y.1300 = common global i32 0
@x.1301 = common global i32 0
@y.1302 = common global i32 0
@x.1303 = common global i32 0
@y.1304 = common global i32 0
@x.1305 = common global i32 0
@y.1306 = common global i32 0
@x.1307 = common global i32 0
@y.1308 = common global i32 0
@x.1309 = common global i32 0
@y.1310 = common global i32 0
@x.1311 = common global i32 0
@y.1312 = common global i32 0
@x.1313 = common global i32 0
@y.1314 = common global i32 0
@x.1315 = common global i32 0
@y.1316 = common global i32 0
@x.1317 = common global i32 0
@y.1318 = common global i32 0
@x.1319 = common global i32 0
@y.1320 = common global i32 0
@x.1321 = common global i32 0
@y.1322 = common global i32 0
@x.1323 = common global i32 0
@y.1324 = common global i32 0
@x.1325 = common global i32 0
@y.1326 = common global i32 0
@x.1327 = common global i32 0
@y.1328 = common global i32 0
@x.1329 = common global i32 0
@y.1330 = common global i32 0
@x.1331 = common global i32 0
@y.1332 = common global i32 0
@x.1333 = common global i32 0
@y.1334 = common global i32 0
@x.1335 = common global i32 0
@y.1336 = common global i32 0
@x.1337 = common global i32 0
@y.1338 = common global i32 0
@x.1339 = common global i32 0
@y.1340 = common global i32 0
@x.1341 = common global i32 0
@y.1342 = common global i32 0
@x.1343 = common global i32 0
@y.1344 = common global i32 0
@x.1345 = common global i32 0
@y.1346 = common global i32 0
@x.1347 = common global i32 0
@y.1348 = common global i32 0
@x.1349 = common global i32 0
@y.1350 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.1() #0 section ".text.startup" {
  %1 = call double @_ZSt4acosIiEN9__gnu_cxx11__enable_ifIXsr12__is_integerIT_EE7__valueEdE6__typeES2_(i32 -1)
  %2 = fpext double %1 to x86_fp80
  store x86_fp80 %2, x86_fp80* @_ZL2PI, align 16
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double @_ZSt4acosIiEN9__gnu_cxx11__enable_ifIXsr12__is_integerIT_EE7__valueEdE6__typeES2_(i32) #4 comdat {
  %2 = alloca double
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.5
  %6 = load i32, i32* @y.6
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -734331614, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -734331614, label %18
    i32 -745161498, label %38
    i32 399071382, label %58
    i32 -1334568450, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -745161498, i32 -1334568450
  store i32 %37, i32* %14
  br label %65

; <label>:38:                                     ; preds = %15
  %39 = alloca i32, align 4
  store i32 %0, i32* %39, align 4
  %40 = load i32, i32* %39, align 4
  %41 = sitofp i32 %40 to double
  %42 = call double @acos(double %41) #14
  store double %42, double* %2
  %43 = load i32, i32* @x.5
  %44 = load i32, i32* @y.6
  %45 = add i32 %43, 1308302975
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 1308302975
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 399071382, i32 -1334568450
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile double, double* %2
  ret double %59

; <label>:60:                                     ; preds = %15
  %61 = alloca i32, align 4
  store i32 %0, i32* %61, align 4
  %62 = load i32, i32* %61, align 4
  %63 = sitofp i32 %62 to double
  %64 = call double @acos(double %63) #14
  store i32 -745161498, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define zeroext i1 @_Z8is_primex(i64) #4 {
  %2 = alloca i1, align 1
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  store i64 2, i64* %4, align 8
  %5 = alloca i32
  store i32 956499349, i32* %5
  br label %6

; <label>:6:                                      ; preds = %1, %134
  %7 = load i32, i32* %5
  switch i32 %7, label %8 [
    i32 956499349, label %9
    i32 2018739115, label %16
    i32 -1717317229, label %22
    i32 -1600798470, label %23
    i32 1898260129, label %50
    i32 -2015626865, label %78
    i32 1126127675, label %79
    i32 -1110745446, label %85
    i32 -1704262921, label %113
    i32 -1719208524, label %129
    i32 -1638470679, label %130
    i32 1935168339, label %132
    i32 -1871031418, label %133
  ]

; <label>:8:                                      ; preds = %6
  br label %134

; <label>:9:                                      ; preds = %6
  %10 = load i64, i64* %4, align 8
  %11 = load i64, i64* %4, align 8
  %12 = mul nsw i64 %10, %11
  %13 = load i64, i64* %3, align 8
  %14 = icmp sle i64 %12, %13
  %15 = select i1 %14, i32 2018739115, i32 -1110745446
  store i32 %15, i32* %5
  br label %134

; <label>:16:                                     ; preds = %6
  %17 = load i64, i64* %3, align 8
  %18 = load i64, i64* %4, align 8
  %19 = srem i64 %17, %18
  %20 = icmp eq i64 %19, 0
  %21 = select i1 %20, i32 -1717317229, i32 -1600798470
  store i32 %21, i32* %5
  br label %134

; <label>:22:                                     ; preds = %6
  store i1 false, i1* %2, align 1
  store i32 -1638470679, i32* %5
  br label %134

; <label>:23:                                     ; preds = %6
  %24 = load i32, i32* @x.7
  %25 = load i32, i32* @y.8
  %26 = sub i32 0, 1
  %27 = add i32 %24, %26
  %28 = sub i32 %24, 1
  %29 = mul i32 %24, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %25, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 false, true
  %36 = and i1 %33, false
  %37 = and i1 %31, %35
  %38 = and i1 %34, false
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 false, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  %49 = select i1 %47, i32 1898260129, i32 1935168339
  store i32 %49, i32* %5
  br label %134

; <label>:50:                                     ; preds = %6
  %51 = load i32, i32* @x.7
  %52 = load i32, i32* @y.8
  %53 = sub i32 %51, 88954793
  %54 = sub i32 %53, 1
  %55 = add i32 %54, 88954793
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 -2015626865, i32 1935168339
  store i32 %77, i32* %5
  br label %134

; <label>:78:                                     ; preds = %6
  store i32 1126127675, i32* %5
  br label %134

; <label>:79:                                     ; preds = %6
  %80 = load i64, i64* %4, align 8
  %81 = sub i64 %80, -7303509542409114216
  %82 = add i64 %81, 1
  %83 = add i64 %82, -7303509542409114216
  %84 = add nsw i64 %80, 1
  store i64 %83, i64* %4, align 8
  store i32 956499349, i32* %5
  br label %134

; <label>:85:                                     ; preds = %6
  %86 = load i32, i32* @x.7
  %87 = load i32, i32* @y.8
  %88 = sub i32 %86, 106579370
  %89 = sub i32 %88, 1
  %90 = add i32 %89, 106579370
  %91 = sub i32 %86, 1
  %92 = mul i32 %86, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %87, 10
  %96 = xor i1 %94, true
  %97 = xor i1 %95, true
  %98 = xor i1 false, true
  %99 = and i1 %96, false
  %100 = and i1 %94, %98
  %101 = and i1 %97, false
  %102 = and i1 %95, %98
  %103 = or i1 %99, %100
  %104 = or i1 %101, %102
  %105 = xor i1 %103, %104
  %106 = or i1 %96, %97
  %107 = xor i1 %106, true
  %108 = or i1 false, %98
  %109 = and i1 %107, %108
  %110 = or i1 %105, %109
  %111 = or i1 %94, %95
  %112 = select i1 %110, i32 -1704262921, i32 -1871031418
  store i32 %112, i32* %5
  br label %134

; <label>:113:                                    ; preds = %6
  store i1 true, i1* %2, align 1
  %114 = load i32, i32* @x.7
  %115 = load i32, i32* @y.8
  %116 = sub i32 %114, 679240771
  %117 = sub i32 %116, 1
  %118 = add i32 %117, 679240771
  %119 = sub i32 %114, 1
  %120 = mul i32 %114, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %115, 10
  %124 = and i1 %122, %123
  %125 = xor i1 %122, %123
  %126 = or i1 %124, %125
  %127 = or i1 %122, %123
  %128 = select i1 %126, i32 -1719208524, i32 -1871031418
  store i32 %128, i32* %5
  br label %134

; <label>:129:                                    ; preds = %6
  store i32 -1638470679, i32* %5
  br label %134

; <label>:130:                                    ; preds = %6
  %131 = load i1, i1* %2, align 1
  ret i1 %131

; <label>:132:                                    ; preds = %6
  store i32 1898260129, i32* %5
  br label %134

; <label>:133:                                    ; preds = %6
  store i1 true, i1* %2, align 1
  store i32 -1704262921, i32* %5
  br label %134

; <label>:134:                                    ; preds = %133, %132, %129, %113, %85, %79, %78, %50, %23, %22, %16, %9, %8
  br label %6
}

; Function Attrs: noinline nounwind uwtable
define i64 @_Z6modpowxxx(i64, i64, i64) #4 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i64*
  %7 = alloca i64*
  %8 = alloca i64*
  %9 = alloca i1
  %10 = alloca i1
  %11 = load i32, i32* @x.9
  %12 = load i32, i32* @y.10
  %13 = sub i32 %11, -290931242
  %14 = sub i32 %13, 1
  %15 = add i32 %14, -290931242
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  store i1 %19, i1* %10
  %20 = icmp slt i32 %12, 10
  store i1 %20, i1* %9
  %21 = alloca i32
  store i32 1032572997, i32* %21
  br label %22

; <label>:22:                                     ; preds = %3, %184
  %23 = load i32, i32* %21
  switch i32 %23, label %24 [
    i32 1032572997, label %25
    i32 -1341166076, label %33
    i32 383661953, label %56
    i32 -1698499125, label %57
    i32 819995562, label %62
    i32 -497960884, label %90
    i32 -2063810568, label %129
    i32 280364990, label %132
    i32 56011529, label %142
    i32 1929702961, label %156
    i32 1438679231, label %159
    i32 1687038118, label %164
  ]

; <label>:24:                                     ; preds = %22
  br label %184

; <label>:25:                                     ; preds = %22
  %26 = load volatile i1, i1* %10
  %27 = load volatile i1, i1* %9
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  %32 = select i1 %30, i32 -1341166076, i32 1438679231
  store i32 %32, i32* %21
  br label %184

; <label>:33:                                     ; preds = %22
  %34 = alloca i64, align 8
  store i64* %34, i64** %8
  %35 = alloca i64, align 8
  store i64* %35, i64** %7
  %36 = alloca i64, align 8
  store i64* %36, i64** %6
  %37 = alloca i64, align 8
  store i64* %37, i64** %5
  %38 = load volatile i64*, i64** %8
  store i64 %0, i64* %38, align 8
  %39 = load volatile i64*, i64** %7
  store i64 %1, i64* %39, align 8
  %40 = load volatile i64*, i64** %6
  store i64 %2, i64* %40, align 8
  %41 = load volatile i64*, i64** %5
  store i64 1, i64* %41, align 8
  %42 = load i32, i32* @x.9
  %43 = load i32, i32* @y.10
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 383661953, i32 1438679231
  store i32 %55, i32* %21
  br label %184

; <label>:56:                                     ; preds = %22
  store i32 -1698499125, i32* %21
  br label %184

; <label>:57:                                     ; preds = %22
  %58 = load volatile i64*, i64** %7
  %59 = load i64, i64* %58, align 8
  %60 = icmp ne i64 %59, 0
  %61 = select i1 %60, i32 819995562, i32 1929702961
  store i32 %61, i32* %21
  br label %184

; <label>:62:                                     ; preds = %22
  %63 = load i32, i32* @x.9
  %64 = load i32, i32* @y.10
  %65 = add i32 %63, -295743421
  %66 = sub i32 %65, 1
  %67 = sub i32 %66, -295743421
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = xor i1 %71, true
  %74 = xor i1 %72, true
  %75 = xor i1 true, true
  %76 = and i1 %73, true
  %77 = and i1 %71, %75
  %78 = and i1 %74, true
  %79 = and i1 %72, %75
  %80 = or i1 %76, %77
  %81 = or i1 %78, %79
  %82 = xor i1 %80, %81
  %83 = or i1 %73, %74
  %84 = xor i1 %83, true
  %85 = or i1 true, %75
  %86 = and i1 %84, %85
  %87 = or i1 %82, %86
  %88 = or i1 %71, %72
  %89 = select i1 %87, i32 -497960884, i32 1687038118
  store i32 %89, i32* %21
  br label %184

; <label>:90:                                     ; preds = %22
  %91 = load volatile i64*, i64** %7
  %92 = load i64, i64* %91, align 8
  %93 = xor i64 %92, -1
  %94 = xor i64 1, -1
  %95 = xor i64 59762471649249329, -1
  %96 = or i64 %93, %94
  %97 = or i64 59762471649249329, %95
  %98 = xor i64 %96, -1
  %99 = and i64 %98, %97
  %100 = and i64 %92, 1
  %101 = icmp ne i64 %99, 0
  store i1 %101, i1* %4
  %102 = load i32, i32* @x.9
  %103 = load i32, i32* @y.10
  %104 = add i32 %102, -845491805
  %105 = sub i32 %104, 1
  %106 = sub i32 %105, -845491805
  %107 = sub i32 %102, 1
  %108 = mul i32 %102, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %103, 10
  %112 = xor i1 %110, true
  %113 = xor i1 %111, true
  %114 = xor i1 true, true
  %115 = and i1 %112, true
  %116 = and i1 %110, %114
  %117 = and i1 %113, true
  %118 = and i1 %111, %114
  %119 = or i1 %115, %116
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = or i1 %112, %113
  %123 = xor i1 %122, true
  %124 = or i1 true, %114
  %125 = and i1 %123, %124
  %126 = or i1 %121, %125
  %127 = or i1 %110, %111
  %128 = select i1 %126, i32 -2063810568, i32 1687038118
  store i32 %128, i32* %21
  br label %184

; <label>:129:                                    ; preds = %22
  %130 = load volatile i1, i1* %4
  %131 = select i1 %130, i32 280364990, i32 56011529
  store i32 %131, i32* %21
  br label %184

; <label>:132:                                    ; preds = %22
  %133 = load volatile i64*, i64** %5
  %134 = load i64, i64* %133, align 8
  %135 = load volatile i64*, i64** %8
  %136 = load i64, i64* %135, align 8
  %137 = mul nsw i64 %134, %136
  %138 = load volatile i64*, i64** %6
  %139 = load i64, i64* %138, align 8
  %140 = srem i64 %137, %139
  %141 = load volatile i64*, i64** %5
  store i64 %140, i64* %141, align 8
  store i32 56011529, i32* %21
  br label %184

; <label>:142:                                    ; preds = %22
  %143 = load volatile i64*, i64** %8
  %144 = load i64, i64* %143, align 8
  %145 = load volatile i64*, i64** %8
  %146 = load i64, i64* %145, align 8
  %147 = mul nsw i64 %144, %146
  %148 = load volatile i64*, i64** %6
  %149 = load i64, i64* %148, align 8
  %150 = srem i64 %147, %149
  %151 = load volatile i64*, i64** %8
  store i64 %150, i64* %151, align 8
  %152 = load volatile i64*, i64** %7
  %153 = load i64, i64* %152, align 8
  %154 = ashr i64 %153, 1
  %155 = load volatile i64*, i64** %7
  store i64 %154, i64* %155, align 8
  store i32 -1698499125, i32* %21
  br label %184

; <label>:156:                                    ; preds = %22
  %157 = load volatile i64*, i64** %5
  %158 = load i64, i64* %157, align 8
  ret i64 %158

; <label>:159:                                    ; preds = %22
  %160 = alloca i64, align 8
  %161 = alloca i64, align 8
  %162 = alloca i64, align 8
  %163 = alloca i64, align 8
  store i64 %0, i64* %160, align 8
  store i64 %1, i64* %161, align 8
  store i64 %2, i64* %162, align 8
  store i64 1, i64* %163, align 8
  store i32 -1341166076, i32* %21
  br label %184

; <label>:164:                                    ; preds = %22
  %165 = load volatile i64*, i64** %7
  %166 = load i64, i64* %165, align 8
  %167 = shl i64 %166, 1
  %168 = sub i64 0, %166
  %169 = add i64 0, %168
  %170 = sub i64 0, %166
  %171 = add i64 %169, -6602331916045174991
  %172 = add i64 %171, 1
  %173 = sub i64 %172, -6602331916045174991
  %174 = add i64 %169, 1
  %175 = xor i64 %166, -1
  %176 = xor i64 1, -1
  %177 = xor i64 4899730637367417761, -1
  %178 = or i64 %175, %176
  %179 = or i64 4899730637367417761, %177
  %180 = xor i64 %178, -1
  %181 = and i64 %180, %179
  %182 = and i64 %166, 1
  %183 = icmp ne i64 %181, 0
  store i32 -497960884, i32* %21
  br label %184

; <label>:184:                                    ; preds = %164, %159, %142, %132, %129, %90, %62, %57, %56, %33, %25, %24
  br label %22
}

; Function Attrs: noinline nounwind uwtable
define i64 @_Z5combixx(i64, i64) #4 {
  %3 = alloca i1
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  store i64 %0, i64* %4, align 8
  store i64 %1, i64* %5, align 8
  store i64 1, i64* %6, align 8
  store i64 1, i64* %7, align 8
  %10 = load i64, i64* %4, align 8
  %11 = load i64, i64* %5, align 8
  %12 = add i64 %10, -3957949573699754588
  %13 = sub i64 %12, %11
  %14 = sub i64 %13, -3957949573699754588
  %15 = sub nsw i64 %10, %11
  %16 = sub i64 0, 1
  %17 = sub i64 %14, %16
  %18 = add nsw i64 %14, 1
  store i64 %17, i64* %8, align 8
  %19 = alloca i32
  store i32 -1393042772, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %190
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1393042772, label %23
    i32 624169645, label %51
    i32 999284334, label %70
    i32 -1208429803, label %73
    i32 708492644, label %80
    i32 1501370070, label %108
    i32 -1202570276, label %139
    i32 516030842, label %140
    i32 -528192067, label %141
    i32 1717162140, label %146
    i32 -582325359, label %151
    i32 2117797593, label %156
    i32 -195072816, label %164
    i32 2033189467, label %168
  ]

; <label>:22:                                     ; preds = %20
  br label %190

; <label>:23:                                     ; preds = %20
  %24 = load i32, i32* @x.11
  %25 = load i32, i32* @y.12
  %26 = add i32 %24, 63135550
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, 63135550
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 false, true
  %37 = and i1 %34, false
  %38 = and i1 %32, %36
  %39 = and i1 %35, false
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 false, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  %50 = select i1 %48, i32 624169645, i32 -195072816
  store i32 %50, i32* %19
  br label %190

; <label>:51:                                     ; preds = %20
  %52 = load i64, i64* %8, align 8
  %53 = load i64, i64* %4, align 8
  %54 = icmp sle i64 %52, %53
  store i1 %54, i1* %3
  %55 = load i32, i32* @x.11
  %56 = load i32, i32* @y.12
  %57 = sub i32 %55, 984339166
  %58 = sub i32 %57, 1
  %59 = add i32 %58, 984339166
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  %69 = select i1 %67, i32 999284334, i32 -195072816
  store i32 %69, i32* %19
  br label %190

; <label>:70:                                     ; preds = %20
  %71 = load volatile i1, i1* %3
  %72 = select i1 %71, i32 -1208429803, i32 516030842
  store i32 %72, i32* %19
  br label %190

; <label>:73:                                     ; preds = %20
  %74 = load i64, i64* %8, align 8
  %75 = srem i64 %74, 1000000007
  %76 = load i64, i64* %6, align 8
  %77 = mul nsw i64 %76, %75
  store i64 %77, i64* %6, align 8
  %78 = load i64, i64* %6, align 8
  %79 = srem i64 %78, 1000000007
  store i64 %79, i64* %6, align 8
  store i32 708492644, i32* %19
  br label %190

; <label>:80:                                     ; preds = %20
  %81 = load i32, i32* @x.11
  %82 = load i32, i32* @y.12
  %83 = add i32 %81, -36037914
  %84 = sub i32 %83, 1
  %85 = sub i32 %84, -36037914
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = xor i1 %89, true
  %92 = xor i1 %90, true
  %93 = xor i1 true, true
  %94 = and i1 %91, true
  %95 = and i1 %89, %93
  %96 = and i1 %92, true
  %97 = and i1 %90, %93
  %98 = or i1 %94, %95
  %99 = or i1 %96, %97
  %100 = xor i1 %98, %99
  %101 = or i1 %91, %92
  %102 = xor i1 %101, true
  %103 = or i1 true, %93
  %104 = and i1 %102, %103
  %105 = or i1 %100, %104
  %106 = or i1 %89, %90
  %107 = select i1 %105, i32 1501370070, i32 2033189467
  store i32 %107, i32* %19
  br label %190

; <label>:108:                                    ; preds = %20
  %109 = load i64, i64* %8, align 8
  %110 = sub i64 0, 1
  %111 = sub i64 %109, %110
  %112 = add nsw i64 %109, 1
  store i64 %111, i64* %8, align 8
  %113 = load i32, i32* @x.11
  %114 = load i32, i32* @y.12
  %115 = sub i32 0, 1
  %116 = add i32 %113, %115
  %117 = sub i32 %113, 1
  %118 = mul i32 %113, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %114, 10
  %122 = xor i1 %120, true
  %123 = xor i1 %121, true
  %124 = xor i1 false, true
  %125 = and i1 %122, false
  %126 = and i1 %120, %124
  %127 = and i1 %123, false
  %128 = and i1 %121, %124
  %129 = or i1 %125, %126
  %130 = or i1 %127, %128
  %131 = xor i1 %129, %130
  %132 = or i1 %122, %123
  %133 = xor i1 %132, true
  %134 = or i1 false, %124
  %135 = and i1 %133, %134
  %136 = or i1 %131, %135
  %137 = or i1 %120, %121
  %138 = select i1 %136, i32 -1202570276, i32 2033189467
  store i32 %138, i32* %19
  br label %190

; <label>:139:                                    ; preds = %20
  store i32 -1393042772, i32* %19
  br label %190

; <label>:140:                                    ; preds = %20
  store i64 2, i64* %9, align 8
  store i32 -528192067, i32* %19
  br label %190

; <label>:141:                                    ; preds = %20
  %142 = load i64, i64* %9, align 8
  %143 = load i64, i64* %5, align 8
  %144 = icmp sle i64 %142, %143
  %145 = select i1 %144, i32 1717162140, i32 2117797593
  store i32 %145, i32* %19
  br label %190

; <label>:146:                                    ; preds = %20
  %147 = load i64, i64* %7, align 8
  %148 = load i64, i64* %9, align 8
  %149 = mul nsw i64 %147, %148
  %150 = srem i64 %149, 1000000007
  store i64 %150, i64* %7, align 8
  store i32 -582325359, i32* %19
  br label %190

; <label>:151:                                    ; preds = %20
  %152 = load i64, i64* %9, align 8
  %153 = sub i64 0, 1
  %154 = sub i64 %152, %153
  %155 = add nsw i64 %152, 1
  store i64 %154, i64* %9, align 8
  store i32 -528192067, i32* %19
  br label %190

; <label>:156:                                    ; preds = %20
  %157 = load i64, i64* %7, align 8
  %158 = call i64 @_Z6modpowxxx(i64 %157, i64 1000000005, i64 1000000007)
  store i64 %158, i64* %7, align 8
  %159 = load i64, i64* %6, align 8
  %160 = srem i64 %159, 1000000007
  %161 = load i64, i64* %7, align 8
  %162 = mul nsw i64 %160, %161
  %163 = srem i64 %162, 1000000007
  ret i64 %163

; <label>:164:                                    ; preds = %20
  %165 = load i64, i64* %8, align 8
  %166 = load i64, i64* %4, align 8
  %167 = icmp sle i64 %165, %166
  store i32 624169645, i32* %19
  br label %190

; <label>:168:                                    ; preds = %20
  %169 = load i64, i64* %8, align 8
  %170 = shl i64 %169, 1
  %171 = shl i64 %169, 1
  %172 = sub i64 0, -6671671005427894169
  %173 = sub i64 %172, %169
  %174 = add i64 %173, -6671671005427894169
  %175 = sub i64 0, %169
  %176 = sub i64 %174, 4994261772048598563
  %177 = add i64 %176, 1
  %178 = add i64 %177, 4994261772048598563
  %179 = add i64 %174, 1
  %180 = add i64 %169, -5339032151074380352
  %181 = sub i64 %180, 1
  %182 = sub i64 %181, -5339032151074380352
  %183 = sub i64 %169, 1
  %184 = mul i64 %182, 1
  %185 = sub i64 0, %169
  %186 = sub i64 0, 1
  %187 = add i64 %185, %186
  %188 = sub i64 0, %187
  %189 = add nsw i64 %169, 1
  store i64 %188, i64* %8, align 8
  store i32 1501370070, i32* %19
  br label %190

; <label>:190:                                    ; preds = %168, %164, %151, %146, %141, %140, %139, %108, %80, %73, %70, %51, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define void @_Z3dfsSt6vectorIxSaIxEExxxRS_IS1_SaIS1_EE(%"class.std::vector.0"*, i64, i64, i64, %"class.std::vector"* dereferenceable(24)) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.std::vector"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.std::vector.0", align 8
  %12 = alloca i8*
  %13 = alloca i32
  store i64 %1, i64* %6, align 8
  store i64 %2, i64* %7, align 8
  store i64 %3, i64* %8, align 8
  store %"class.std::vector"* %4, %"class.std::vector"** %9, align 8
  %14 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.0"* %0) #3
  %15 = load i64, i64* %8, align 8
  %16 = icmp eq i64 %14, %15
  br i1 %16, label %17, label %19

; <label>:17:                                     ; preds = %5
  %18 = load %"class.std::vector"*, %"class.std::vector"** %9, align 8
  call void @_ZNSt6vectorIS_IxSaIxEESaIS1_EE9push_backERKS1_(%"class.std::vector"* %18, %"class.std::vector.0"* dereferenceable(24) %0)
  br label %76

; <label>:19:                                     ; preds = %5
  %20 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.0"* %0) #3
  %21 = icmp ugt i64 %20, 0
  br i1 %21, label %22, label %23

; <label>:22:                                     ; preds = %19
  br label %53

; <label>:23:                                     ; preds = %19
  %24 = load i32, i32* @x.13
  %25 = load i32, i32* @y.14
  %26 = sub i32 0, 1
  %27 = add i32 %24, %26
  %28 = sub i32 %24, 1
  %29 = mul i32 %24, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %25, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  br i1 %35, label %37, label %152

; <label>:37:                                     ; preds = %23, %152
  %38 = load i64, i64* %6, align 8
  %39 = load i32, i32* @x.13
  %40 = load i32, i32* @y.14
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %152

; <label>:52:                                     ; preds = %37
  br label %53

; <label>:53:                                     ; preds = %52, %22
  %54 = phi i64 [ 0, %22 ], [ %38, %52 ]
  store i64 %54, i64* %10, align 8
  br label %55

; <label>:55:                                     ; preds = %65, %53
  %56 = load i64, i64* %10, align 8
  %57 = load i64, i64* %7, align 8
  %58 = icmp sle i64 %56, %57
  br i1 %58, label %59, label %75

; <label>:59:                                     ; preds = %55
  call void @_ZNSt6vectorIxSaIxEE9push_backERKx(%"class.std::vector.0"* %0, i64* dereferenceable(8) %10)
  call void @_ZNSt6vectorIxSaIxEEC2ERKS1_(%"class.std::vector.0"* %11, %"class.std::vector.0"* dereferenceable(24) %0)
  %60 = load i64, i64* %6, align 8
  %61 = load i64, i64* %7, align 8
  %62 = load i64, i64* %8, align 8
  %63 = load %"class.std::vector"*, %"class.std::vector"** %9, align 8
  invoke void @_Z3dfsSt6vectorIxSaIxEExxxRS_IS1_SaIS1_EE(%"class.std::vector.0"* %11, i64 %60, i64 %61, i64 %62, %"class.std::vector"* dereferenceable(24) %63)
          to label %64 unwind label %71

; <label>:64:                                     ; preds = %59
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"* %11) #3
  call void @_ZNSt6vectorIxSaIxEE8pop_backEv(%"class.std::vector.0"* %0) #3
  br label %65

; <label>:65:                                     ; preds = %64
  %66 = load i64, i64* %10, align 8
  %67 = add i64 %66, 1684495238603884307
  %68 = add i64 %67, 1
  %69 = sub i64 %68, 1684495238603884307
  %70 = add nsw i64 %66, 1
  store i64 %69, i64* %10, align 8
  br label %55

; <label>:71:                                     ; preds = %59
  %72 = landingpad { i8*, i32 }
          cleanup
  %73 = extractvalue { i8*, i32 } %72, 0
  store i8* %73, i8** %12, align 8
  %74 = extractvalue { i8*, i32 } %72, 1
  store i32 %74, i32* %13, align 4
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"* %11) #3
  br label %106

; <label>:75:                                     ; preds = %55
  br label %76

; <label>:76:                                     ; preds = %75, %17
  %77 = load i32, i32* @x.13
  %78 = load i32, i32* @y.14
  %79 = sub i32 0, 1
  %80 = add i32 %77, %79
  %81 = sub i32 %77, 1
  %82 = mul i32 %77, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %78, 10
  %86 = and i1 %84, %85
  %87 = xor i1 %84, %85
  %88 = or i1 %86, %87
  %89 = or i1 %84, %85
  br i1 %88, label %90, label %154

; <label>:90:                                     ; preds = %76, %154
  %91 = load i32, i32* @x.13
  %92 = load i32, i32* @y.14
  %93 = sub i32 %91, -1546682127
  %94 = sub i32 %93, 1
  %95 = add i32 %94, -1546682127
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = and i1 %99, %100
  %102 = xor i1 %99, %100
  %103 = or i1 %101, %102
  %104 = or i1 %99, %100
  br i1 %103, label %105, label %154

; <label>:105:                                    ; preds = %90
  ret void

; <label>:106:                                    ; preds = %71
  %107 = load i32, i32* @x.13
  %108 = load i32, i32* @y.14
  %109 = sub i32 0, 1
  %110 = add i32 %107, %109
  %111 = sub i32 %107, 1
  %112 = mul i32 %107, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %108, 10
  %116 = xor i1 %114, true
  %117 = xor i1 %115, true
  %118 = xor i1 true, true
  %119 = and i1 %116, true
  %120 = and i1 %114, %118
  %121 = and i1 %117, true
  %122 = and i1 %115, %118
  %123 = or i1 %119, %120
  %124 = or i1 %121, %122
  %125 = xor i1 %123, %124
  %126 = or i1 %116, %117
  %127 = xor i1 %126, true
  %128 = or i1 true, %118
  %129 = and i1 %127, %128
  %130 = or i1 %125, %129
  %131 = or i1 %114, %115
  br i1 %130, label %132, label %155

; <label>:132:                                    ; preds = %106, %155
  %133 = load i8*, i8** %12, align 8
  %134 = load i32, i32* %13, align 4
  %135 = insertvalue { i8*, i32 } undef, i8* %133, 0
  %136 = insertvalue { i8*, i32 } %135, i32 %134, 1
  %137 = load i32, i32* @x.13
  %138 = load i32, i32* @y.14
  %139 = sub i32 %137, 876035516
  %140 = sub i32 %139, 1
  %141 = add i32 %140, 876035516
  %142 = sub i32 %137, 1
  %143 = mul i32 %137, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %138, 10
  %147 = and i1 %145, %146
  %148 = xor i1 %145, %146
  %149 = or i1 %147, %148
  %150 = or i1 %145, %146
  br i1 %149, label %151, label %155

; <label>:151:                                    ; preds = %132
  resume { i8*, i32 } %136

; <label>:152:                                    ; preds = %37, %23
  %153 = load i64, i64* %6, align 8
  br label %37

; <label>:154:                                    ; preds = %90, %76
  br label %90

; <label>:155:                                    ; preds = %132, %106
  %156 = load i8*, i8** %12, align 8
  %157 = load i32, i32* %13, align 4
  %158 = insertvalue { i8*, i32 } undef, i8* %156, 0
  %159 = insertvalue { i8*, i32 } %158, i32 %157, 1
  br label %132
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8
  %8 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = ptrtoint i64* %7 to i64
  %13 = ptrtoint i64* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 8
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IxSaIxEESaIS1_EE9push_backERKS1_(%"class.std::vector"*, %"class.std::vector.0"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*
  %4 = alloca %"class.std::vector.0"*
  %5 = alloca %"class.std::vector"*
  %6 = alloca %"class.std::vector"*, align 8
  %7 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %6, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %7, align 8
  %8 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8
  store %"class.std::vector"* %8, %"class.std::vector"** %5
  %9 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %10 = bitcast %"class.std::vector"* %9 to %"struct.std::_Vector_base"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::vector.0"*, %"class.std::vector.0"** %12, align 8
  store %"class.std::vector.0"* %13, %"class.std::vector.0"** %4
  %14 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %15 = bitcast %"class.std::vector"* %14 to %"struct.std::_Vector_base"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load %"class.std::vector.0"*, %"class.std::vector.0"** %17, align 8
  store %"class.std::vector.0"* %18, %"class.std::vector.0"** %3
  %19 = alloca i32
  store i32 473911255, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %107
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 473911255, label %23
    i32 -1386750047, label %28
    i32 -50706935, label %45
    i32 1844332597, label %72
    i32 130564957, label %102
    i32 514047827, label %103
    i32 -1533121703, label %104
  ]

; <label>:22:                                     ; preds = %20
  br label %107

; <label>:23:                                     ; preds = %20
  %24 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %25 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %3
  %26 = icmp ne %"class.std::vector.0"* %24, %25
  %27 = select i1 %26, i32 -1386750047, i32 -50706935
  store i32 %27, i32* %19
  br label %107

; <label>:28:                                     ; preds = %20
  %29 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %30 = bitcast %"class.std::vector"* %29 to %"struct.std::_Vector_base"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %31 to %"class.std::allocator"*
  %33 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %34 = bitcast %"class.std::vector"* %33 to %"struct.std::_Vector_base"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %35, i32 0, i32 1
  %37 = load %"class.std::vector.0"*, %"class.std::vector.0"** %36, align 8
  %38 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1) %32, %"class.std::vector.0"* %37, %"class.std::vector.0"* dereferenceable(24) %38)
  %39 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %40 = bitcast %"class.std::vector"* %39 to %"struct.std::_Vector_base"*
  %41 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %40, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %41, i32 0, i32 1
  %43 = load %"class.std::vector.0"*, %"class.std::vector.0"** %42, align 8
  %44 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %43, i32 1
  store %"class.std::vector.0"* %44, %"class.std::vector.0"** %42, align 8
  store i32 514047827, i32* %19
  br label %107

; <label>:45:                                     ; preds = %20
  %46 = load i32, i32* @x.17
  %47 = load i32, i32* @y.18
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 1844332597, i32 -1533121703
  store i32 %71, i32* %19
  br label %107

; <label>:72:                                     ; preds = %20
  %73 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %74 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  call void @_ZNSt6vectorIS_IxSaIxEESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_(%"class.std::vector"* %74, %"class.std::vector.0"* dereferenceable(24) %73)
  %75 = load i32, i32* @x.17
  %76 = load i32, i32* @y.18
  %77 = add i32 %75, -1660957751
  %78 = sub i32 %77, 1
  %79 = sub i32 %78, -1660957751
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = xor i1 %83, true
  %86 = xor i1 %84, true
  %87 = xor i1 false, true
  %88 = and i1 %85, false
  %89 = and i1 %83, %87
  %90 = and i1 %86, false
  %91 = and i1 %84, %87
  %92 = or i1 %88, %89
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = or i1 %85, %86
  %96 = xor i1 %95, true
  %97 = or i1 false, %87
  %98 = and i1 %96, %97
  %99 = or i1 %94, %98
  %100 = or i1 %83, %84
  %101 = select i1 %99, i32 130564957, i32 -1533121703
  store i32 %101, i32* %19
  br label %107

; <label>:102:                                    ; preds = %20
  store i32 514047827, i32* %19
  br label %107

; <label>:103:                                    ; preds = %20
  ret void

; <label>:104:                                    ; preds = %20
  %105 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %106 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  call void @_ZNSt6vectorIS_IxSaIxEESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_(%"class.std::vector"* %106, %"class.std::vector.0"* dereferenceable(24) %105)
  store i32 1844332597, i32* %19
  br label %107

; <label>:107:                                    ; preds = %104, %102, %72, %45, %28, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE9push_backERKx(%"class.std::vector.0"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i64*
  %5 = alloca %"class.std::vector.0"*
  %6 = alloca %"class.std::vector.0"*, align 8
  %7 = alloca i64*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %6, align 8
  store i64* %1, i64** %7, align 8
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  store %"class.std::vector.0"* %8, %"class.std::vector.0"** %5
  %9 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  %10 = bitcast %"class.std::vector.0"* %9 to %"struct.std::_Vector_base.1"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  store i64* %13, i64** %4
  %14 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  %15 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load i64*, i64** %17, align 8
  store i64* %18, i64** %3
  %19 = alloca i32
  store i32 -356819542, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %49
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -356819542, label %23
    i32 1966925973, label %28
    i32 -28061613, label %45
    i32 -819101181, label %48
  ]

; <label>:22:                                     ; preds = %20
  br label %49

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64*, i64** %4
  %25 = load volatile i64*, i64** %3
  %26 = icmp ne i64* %24, %25
  %27 = select i1 %26, i32 1966925973, i32 -28061613
  store i32 %27, i32* %19
  br label %49

; <label>:28:                                     ; preds = %20
  %29 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  %30 = bitcast %"class.std::vector.0"* %29 to %"struct.std::_Vector_base.1"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %31 to %"class.std::allocator.2"*
  %33 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  %34 = bitcast %"class.std::vector.0"* %33 to %"struct.std::_Vector_base.1"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %35, i32 0, i32 1
  %37 = load i64*, i64** %36, align 8
  %38 = load i64*, i64** %7, align 8
  call void @_ZNSt16allocator_traitsISaIxEE9constructIxJRKxEEEvRS0_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1) %32, i64* %37, i64* dereferenceable(8) %38)
  %39 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  %40 = bitcast %"class.std::vector.0"* %39 to %"struct.std::_Vector_base.1"*
  %41 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %40, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %41, i32 0, i32 1
  %43 = load i64*, i64** %42, align 8
  %44 = getelementptr inbounds i64, i64* %43, i32 1
  store i64* %44, i64** %42, align 8
  store i32 -819101181, i32* %19
  br label %49

; <label>:45:                                     ; preds = %20
  %46 = load i64*, i64** %7, align 8
  %47 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  call void @_ZNSt6vectorIxSaIxEE19_M_emplace_back_auxIJRKxEEEvDpOT_(%"class.std::vector.0"* %47, i64* dereferenceable(8) %46)
  store i32 -819101181, i32* %19
  br label %49

; <label>:48:                                     ; preds = %20
  ret void

; <label>:49:                                     ; preds = %45, %28, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEEC2ERKS1_(%"class.std::vector.0"*, %"class.std::vector.0"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca %"class.std::allocator.2", align 1
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %4, align 8
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %11 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %12 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %13 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.0"* %12) #3
  %14 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %15 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %16 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %15) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIxEE17_S_select_on_copyERKS1_(%"class.std::allocator.2"* sret %5, %"class.std::allocator.2"* dereferenceable(1) %16)
  invoke void @_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_(%"struct.std::_Vector_base.1"* %11, i64 %13, %"class.std::allocator.2"* dereferenceable(1) %5)
          to label %17 unwind label %39

; <label>:17:                                     ; preds = %2
  call void @_ZNSaIxED2Ev(%"class.std::allocator.2"* %5) #3
  %18 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %19 = call i64* @_ZNKSt6vectorIxSaIxEE5beginEv(%"class.std::vector.0"* %18) #3
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %8, i32 0, i32 0
  store i64* %19, i64** %20, align 8
  %21 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %22 = call i64* @_ZNKSt6vectorIxSaIxEE3endEv(%"class.std::vector.0"* %21) #3
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %9, i32 0, i32 0
  store i64* %22, i64** %23, align 8
  %24 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %25, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %29 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %28) #3
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %8, i32 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %9, i32 0, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = invoke i64* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxxET0_T_SA_S9_RSaIT1_E(i64* %31, i64* %33, i64* %27, %"class.std::allocator.2"* dereferenceable(1) %29)
          to label %35 unwind label %43

; <label>:35:                                     ; preds = %17
  %36 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %37, i32 0, i32 1
  store i64* %34, i64** %38, align 8
  ret void

; <label>:39:                                     ; preds = %2
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = extractvalue { i8*, i32 } %40, 0
  store i8* %41, i8** %6, align 8
  %42 = extractvalue { i8*, i32 } %40, 1
  store i32 %42, i32* %7, align 4
  call void @_ZNSaIxED2Ev(%"class.std::allocator.2"* %5) #3
  br label %48

; <label>:43:                                     ; preds = %17
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = extractvalue { i8*, i32 } %44, 0
  store i8* %45, i8** %6, align 8
  %46 = extractvalue { i8*, i32 } %44, 1
  store i32 %46, i32* %7, align 4
  %47 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.1"* %47) #3
  br label %48

; <label>:48:                                     ; preds = %43, %39
  %49 = load i8*, i8** %6, align 8
  %50 = load i32, i32* %7, align 4
  %51 = insertvalue { i8*, i32 } undef, i8* %49, 0
  %52 = insertvalue { i8*, i32 } %51, i32 %50, 1
  resume { i8*, i32 } %52
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.0"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %15 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %14) #3
  invoke void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %9, i64* %13, %"class.std::allocator.2"* dereferenceable(1) %15)
          to label %16 unwind label %59

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.23
  %18 = load i32, i32* @y.24
  %19 = sub i32 0, 1
  %20 = add i32 %17, %19
  %21 = sub i32 %17, 1
  %22 = mul i32 %17, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %18, 10
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 false, true
  %29 = and i1 %26, false
  %30 = and i1 %24, %28
  %31 = and i1 %27, false
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 false, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  br i1 %40, label %42, label %106

; <label>:42:                                     ; preds = %16, %106
  %43 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.1"* %43) #3
  %44 = load i32, i32* @x.23
  %45 = load i32, i32* @y.24
  %46 = sub i32 %44, 524145113
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 524145113
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  br i1 %56, label %58, label %106

; <label>:58:                                     ; preds = %42
  ret void

; <label>:59:                                     ; preds = %1
  %60 = landingpad { i8*, i32 }
          catch i8* null
  %61 = extractvalue { i8*, i32 } %60, 0
  store i8* %61, i8** %3, align 8
  %62 = extractvalue { i8*, i32 } %60, 1
  store i32 %62, i32* %4, align 4
  %63 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.1"* %63) #3
  br label %64

; <label>:64:                                     ; preds = %59
  %65 = load i32, i32* @x.23
  %66 = load i32, i32* @y.24
  %67 = sub i32 0, 1
  %68 = add i32 %65, %67
  %69 = sub i32 %65, 1
  %70 = mul i32 %65, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %66, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 false, true
  %77 = and i1 %74, false
  %78 = and i1 %72, %76
  %79 = and i1 %75, false
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 false, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  br i1 %88, label %90, label %108

; <label>:90:                                     ; preds = %64, %108
  %91 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %91) #12
  %92 = load i32, i32* @x.23
  %93 = load i32, i32* @y.24
  %94 = sub i32 0, 1
  %95 = add i32 %92, %94
  %96 = sub i32 %92, 1
  %97 = mul i32 %92, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %93, 10
  %101 = and i1 %99, %100
  %102 = xor i1 %99, %100
  %103 = or i1 %101, %102
  %104 = or i1 %99, %100
  br i1 %103, label %105, label %108

; <label>:105:                                    ; preds = %90
  unreachable

; <label>:106:                                    ; preds = %42, %16
  %107 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.1"* %107) #3
  br label %42

; <label>:108:                                    ; preds = %90, %64
  %109 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %109) #12
  br label %90
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE8pop_backEv(%"class.std::vector.0"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i32 -1
  store i64* %8, i64** %6, align 8
  %9 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %10 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %9, i32 0, i32 0
  %11 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %10 to %"class.std::allocator.2"*
  %12 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %12, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %13, i32 0, i32 1
  %15 = load i64*, i64** %14, align 8
  invoke void @_ZNSt16allocator_traitsISaIxEE7destroyIxEEvRS0_PT_(%"class.std::allocator.2"* dereferenceable(1) %11, i64* %15)
          to label %16 unwind label %17

; <label>:16:                                     ; preds = %1
  ret void

; <label>:17:                                     ; preds = %1
  %18 = load i32, i32* @x.25
  %19 = load i32, i32* @y.26
  %20 = sub i32 %18, 1563001192
  %21 = sub i32 %20, 1
  %22 = add i32 %21, 1563001192
  %23 = sub i32 %18, 1
  %24 = mul i32 %18, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %19, 10
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  br i1 %30, label %32, label %50

; <label>:32:                                     ; preds = %17, %50
  %33 = landingpad { i8*, i32 }
          catch i8* null
  %34 = extractvalue { i8*, i32 } %33, 0
  call void @__clang_call_terminate(i8* %34) #12
  %35 = load i32, i32* @x.25
  %36 = load i32, i32* @y.26
  %37 = sub i32 %35, -1369711218
  %38 = sub i32 %37, 1
  %39 = add i32 %38, -1369711218
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  br i1 %47, label %49, label %50

; <label>:49:                                     ; preds = %32
  unreachable

; <label>:50:                                     ; preds = %32, %17
  %51 = landingpad { i8*, i32 }
          catch i8* null
  %52 = extractvalue { i8*, i32 } %51, 0
  call void @__clang_call_terminate(i8* %52) #12
  br label %32
}

; Function Attrs: noinline uwtable
define i32 @_Z3bfsiiiiiiSt6vectorIS_IcSaIcEESaIS1_EE(i32, i32, i32, i32, i32, i32, %"class.std::vector.5"*) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %8 = load i32, i32* @x.27
  %9 = load i32, i32* @y.28
  %10 = sub i32 %8, 523221261
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 523221261
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %9, 10
  %18 = and i1 %16, %17
  %19 = xor i1 %16, %17
  %20 = or i1 %18, %19
  %21 = or i1 %16, %17
  br i1 %20, label %22, label %999

; <label>:22:                                     ; preds = %7, %999
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca %"class.std::queue", align 8
  %30 = alloca %"class.std::deque", align 8
  %31 = alloca i8*
  %32 = alloca i32
  %33 = alloca %"class.std::vector", align 8
  %34 = alloca i32, align 4
  %35 = alloca %"class.std::vector.0", align 8
  %36 = alloca %"class.std::allocator.2", align 1
  %37 = alloca %"struct.std::pair", align 4
  %38 = alloca %"struct.std::pair", align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i64, align 8
  %42 = alloca %"struct.std::pair", align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  store i32 %0, i32* %23, align 4
  store i32 %1, i32* %24, align 4
  store i32 %2, i32* %25, align 4
  store i32 %3, i32* %26, align 4
  store i32 %4, i32* %27, align 4
  store i32 %5, i32* %28, align 4
  call void @_ZNSt5dequeISt4pairIiiESaIS1_EEC2Ev(%"class.std::deque"* %30)
  %45 = load i32, i32* @x.27
  %46 = load i32, i32* @y.28
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  br i1 %68, label %70, label %999

; <label>:70:                                     ; preds = %22
  invoke void @_ZNSt5queueISt4pairIiiESt5dequeIS1_SaIS1_EEEC2EOS4_(%"class.std::queue"* %29, %"class.std::deque"* dereferenceable(80) %30)
          to label %71 unwind label %210

; <label>:71:                                     ; preds = %70
  %72 = load i32, i32* @x.27
  %73 = load i32, i32* @y.28
  %74 = sub i32 0, 1
  %75 = add i32 %72, %74
  %76 = sub i32 %72, 1
  %77 = mul i32 %72, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %73, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 true, true
  %84 = and i1 %81, true
  %85 = and i1 %79, %83
  %86 = and i1 %82, true
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 true, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  br i1 %95, label %97, label %1022

; <label>:97:                                     ; preds = %71, %1022
  call void @_ZNSt5dequeISt4pairIiiESaIS1_EED2Ev(%"class.std::deque"* %30) #3
  call void @_ZNSt6vectorIS_IxSaIxEESaIS1_EEC2Ev(%"class.std::vector"* %33) #3
  store i32 0, i32* %34, align 4
  %98 = load i32, i32* @x.27
  %99 = load i32, i32* @y.28
  %100 = sub i32 %98, 1364724188
  %101 = sub i32 %100, 1
  %102 = add i32 %101, 1364724188
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = and i1 %106, %107
  %109 = xor i1 %106, %107
  %110 = or i1 %108, %109
  %111 = or i1 %106, %107
  br i1 %110, label %112, label %1022

; <label>:112:                                    ; preds = %97
  br label %113

; <label>:113:                                    ; preds = %209, %112
  %114 = load i32, i32* @x.27
  %115 = load i32, i32* @y.28
  %116 = sub i32 0, 1
  %117 = add i32 %114, %116
  %118 = sub i32 %114, 1
  %119 = mul i32 %114, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %115, 10
  %123 = xor i1 %121, true
  %124 = xor i1 %122, true
  %125 = xor i1 true, true
  %126 = and i1 %123, true
  %127 = and i1 %121, %125
  %128 = and i1 %124, true
  %129 = and i1 %122, %125
  %130 = or i1 %126, %127
  %131 = or i1 %128, %129
  %132 = xor i1 %130, %131
  %133 = or i1 %123, %124
  %134 = xor i1 %133, true
  %135 = or i1 true, %125
  %136 = and i1 %134, %135
  %137 = or i1 %132, %136
  %138 = or i1 %121, %122
  br i1 %137, label %139, label %1023

; <label>:139:                                    ; preds = %113, %1023
  %140 = load i32, i32* %34, align 4
  %141 = load i32, i32* %27, align 4
  %142 = icmp slt i32 %140, %141
  %143 = load i32, i32* @x.27
  %144 = load i32, i32* @y.28
  %145 = sub i32 0, 1
  %146 = add i32 %143, %145
  %147 = sub i32 %143, 1
  %148 = mul i32 %143, %146
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %144, 10
  %152 = and i1 %150, %151
  %153 = xor i1 %150, %151
  %154 = or i1 %152, %153
  %155 = or i1 %150, %151
  br i1 %154, label %156, label %1023

; <label>:156:                                    ; preds = %139
  br i1 %142, label %157, label %276

; <label>:157:                                    ; preds = %156
  %158 = load i32, i32* %28, align 4
  %159 = sext i32 %158 to i64
  call void @_ZNSaIxEC2Ev(%"class.std::allocator.2"* %36) #3
  invoke void @_ZNSt6vectorIxSaIxEEC2EmRKS0_(%"class.std::vector.0"* %35, i64 %159, %"class.std::allocator.2"* dereferenceable(1) %36)
          to label %160 unwind label %214

; <label>:160:                                    ; preds = %157
  call void @_ZNSaIxED2Ev(%"class.std::allocator.2"* %36) #3
  invoke void @_ZNSt6vectorIS_IxSaIxEESaIS1_EE9push_backERKS1_(%"class.std::vector"* %33, %"class.std::vector.0"* dereferenceable(24) %35)
          to label %161 unwind label %272

; <label>:161:                                    ; preds = %160
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"* %35) #3
  br label %162

; <label>:162:                                    ; preds = %161
  %163 = load i32, i32* @x.27
  %164 = load i32, i32* @y.28
  %165 = add i32 %163, -1306329225
  %166 = sub i32 %165, 1
  %167 = sub i32 %166, -1306329225
  %168 = sub i32 %163, 1
  %169 = mul i32 %163, %167
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %164, 10
  %173 = and i1 %171, %172
  %174 = xor i1 %171, %172
  %175 = or i1 %173, %174
  %176 = or i1 %171, %172
  br i1 %175, label %177, label %1027

; <label>:177:                                    ; preds = %162, %1027
  %178 = load i32, i32* %34, align 4
  %179 = add i32 %178, 841706809
  %180 = add i32 %179, 1
  %181 = sub i32 %180, 841706809
  %182 = add nsw i32 %178, 1
  store i32 %181, i32* %34, align 4
  %183 = load i32, i32* @x.27
  %184 = load i32, i32* @y.28
  %185 = add i32 %183, -820439878
  %186 = sub i32 %185, 1
  %187 = sub i32 %186, -820439878
  %188 = sub i32 %183, 1
  %189 = mul i32 %183, %187
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %184, 10
  %193 = xor i1 %191, true
  %194 = xor i1 %192, true
  %195 = xor i1 true, true
  %196 = and i1 %193, true
  %197 = and i1 %191, %195
  %198 = and i1 %194, true
  %199 = and i1 %192, %195
  %200 = or i1 %196, %197
  %201 = or i1 %198, %199
  %202 = xor i1 %200, %201
  %203 = or i1 %193, %194
  %204 = xor i1 %203, true
  %205 = or i1 true, %195
  %206 = and i1 %204, %205
  %207 = or i1 %202, %206
  %208 = or i1 %191, %192
  br i1 %207, label %209, label %1027

; <label>:209:                                    ; preds = %177
  br label %113

; <label>:210:                                    ; preds = %70
  %211 = landingpad { i8*, i32 }
          cleanup
  %212 = extractvalue { i8*, i32 } %211, 0
  store i8* %212, i8** %31, align 8
  %213 = extractvalue { i8*, i32 } %211, 1
  store i32 %213, i32* %32, align 4
  call void @_ZNSt5dequeISt4pairIiiESaIS1_EED2Ev(%"class.std::deque"* %30) #3
  br label %994

; <label>:214:                                    ; preds = %157
  %215 = load i32, i32* @x.27
  %216 = load i32, i32* @y.28
  %217 = sub i32 %215, -2018742179
  %218 = sub i32 %217, 1
  %219 = add i32 %218, -2018742179
  %220 = sub i32 %215, 1
  %221 = mul i32 %215, %219
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %216, 10
  %225 = xor i1 %223, true
  %226 = xor i1 %224, true
  %227 = xor i1 false, true
  %228 = and i1 %225, false
  %229 = and i1 %223, %227
  %230 = and i1 %226, false
  %231 = and i1 %224, %227
  %232 = or i1 %228, %229
  %233 = or i1 %230, %231
  %234 = xor i1 %232, %233
  %235 = or i1 %225, %226
  %236 = xor i1 %235, true
  %237 = or i1 false, %227
  %238 = and i1 %236, %237
  %239 = or i1 %234, %238
  %240 = or i1 %223, %224
  br i1 %239, label %241, label %1039

; <label>:241:                                    ; preds = %214, %1039
  %242 = landingpad { i8*, i32 }
          cleanup
  %243 = extractvalue { i8*, i32 } %242, 0
  store i8* %243, i8** %31, align 8
  %244 = extractvalue { i8*, i32 } %242, 1
  store i32 %244, i32* %32, align 4
  call void @_ZNSaIxED2Ev(%"class.std::allocator.2"* %36) #3
  %245 = load i32, i32* @x.27
  %246 = load i32, i32* @y.28
  %247 = sub i32 %245, 1243970415
  %248 = sub i32 %247, 1
  %249 = add i32 %248, 1243970415
  %250 = sub i32 %245, 1
  %251 = mul i32 %245, %249
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %246, 10
  %255 = xor i1 %253, true
  %256 = xor i1 %254, true
  %257 = xor i1 true, true
  %258 = and i1 %255, true
  %259 = and i1 %253, %257
  %260 = and i1 %256, true
  %261 = and i1 %254, %257
  %262 = or i1 %258, %259
  %263 = or i1 %260, %261
  %264 = xor i1 %262, %263
  %265 = or i1 %255, %256
  %266 = xor i1 %265, true
  %267 = or i1 true, %257
  %268 = and i1 %266, %267
  %269 = or i1 %264, %268
  %270 = or i1 %253, %254
  br i1 %269, label %271, label %1039

; <label>:271:                                    ; preds = %241
  br label %993

; <label>:272:                                    ; preds = %160
  %273 = landingpad { i8*, i32 }
          cleanup
  %274 = extractvalue { i8*, i32 } %273, 0
  store i8* %274, i8** %31, align 8
  %275 = extractvalue { i8*, i32 } %273, 1
  store i32 %275, i32* %32, align 4
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"* %35) #3
  br label %993

; <label>:276:                                    ; preds = %156
  %277 = invoke i64 @_ZSt9make_pairIRiS0_ESt4pairINSt17__decay_and_stripIT_E6__typeENS2_IT0_E6__typeEEOS3_OS6_(i32* dereferenceable(4) %23, i32* dereferenceable(4) %24)
          to label %278 unwind label %451

; <label>:278:                                    ; preds = %276
  %279 = load i32, i32* @x.27
  %280 = load i32, i32* @y.28
  %281 = sub i32 %279, 888685800
  %282 = sub i32 %281, 1
  %283 = add i32 %282, 888685800
  %284 = sub i32 %279, 1
  %285 = mul i32 %279, %283
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %280, 10
  %289 = xor i1 %287, true
  %290 = xor i1 %288, true
  %291 = xor i1 false, true
  %292 = and i1 %289, false
  %293 = and i1 %287, %291
  %294 = and i1 %290, false
  %295 = and i1 %288, %291
  %296 = or i1 %292, %293
  %297 = or i1 %294, %295
  %298 = xor i1 %296, %297
  %299 = or i1 %289, %290
  %300 = xor i1 %299, true
  %301 = or i1 false, %291
  %302 = and i1 %300, %301
  %303 = or i1 %298, %302
  %304 = or i1 %287, %288
  br i1 %303, label %305, label %1043

; <label>:305:                                    ; preds = %278, %1043
  %306 = bitcast %"struct.std::pair"* %37 to i64*
  store i64 %277, i64* %306, align 4
  %307 = load i32, i32* @x.27
  %308 = load i32, i32* @y.28
  %309 = sub i32 %307, 250052861
  %310 = sub i32 %309, 1
  %311 = add i32 %310, 250052861
  %312 = sub i32 %307, 1
  %313 = mul i32 %307, %311
  %314 = urem i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %308, 10
  %317 = xor i1 %315, true
  %318 = xor i1 %316, true
  %319 = xor i1 true, true
  %320 = and i1 %317, true
  %321 = and i1 %315, %319
  %322 = and i1 %318, true
  %323 = and i1 %316, %319
  %324 = or i1 %320, %321
  %325 = or i1 %322, %323
  %326 = xor i1 %324, %325
  %327 = or i1 %317, %318
  %328 = xor i1 %327, true
  %329 = or i1 true, %319
  %330 = and i1 %328, %329
  %331 = or i1 %326, %330
  %332 = or i1 %315, %316
  br i1 %331, label %333, label %1043

; <label>:333:                                    ; preds = %305
  invoke void @_ZNSt5queueISt4pairIiiESt5dequeIS1_SaIS1_EEE4pushEOS1_(%"class.std::queue"* %29, %"struct.std::pair"* dereferenceable(8) %37)
          to label %334 unwind label %451

; <label>:334:                                    ; preds = %333
  %335 = load i32, i32* @x.27
  %336 = load i32, i32* @y.28
  %337 = add i32 %335, 1097780624
  %338 = sub i32 %337, 1
  %339 = sub i32 %338, 1097780624
  %340 = sub i32 %335, 1
  %341 = mul i32 %335, %339
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %336, 10
  %345 = and i1 %343, %344
  %346 = xor i1 %343, %344
  %347 = or i1 %345, %346
  %348 = or i1 %343, %344
  br i1 %347, label %349, label %1045

; <label>:349:                                    ; preds = %334, %1045
  %350 = load i32, i32* @x.27
  %351 = load i32, i32* @y.28
  %352 = add i32 %350, -1461835455
  %353 = sub i32 %352, 1
  %354 = sub i32 %353, -1461835455
  %355 = sub i32 %350, 1
  %356 = mul i32 %350, %354
  %357 = urem i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %351, 10
  %360 = and i1 %358, %359
  %361 = xor i1 %358, %359
  %362 = or i1 %360, %361
  %363 = or i1 %358, %359
  br i1 %362, label %364, label %1045

; <label>:364:                                    ; preds = %349
  br label %365

; <label>:365:                                    ; preds = %983, %364
  %366 = invoke i64 @_ZNKSt5queueISt4pairIiiESt5dequeIS1_SaIS1_EEE4sizeEv(%"class.std::queue"* %29)
          to label %367 unwind label %451

; <label>:367:                                    ; preds = %365
  %368 = load i32, i32* @x.27
  %369 = load i32, i32* @y.28
  %370 = sub i32 0, 1
  %371 = add i32 %368, %370
  %372 = sub i32 %368, 1
  %373 = mul i32 %368, %371
  %374 = urem i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %369, 10
  %377 = and i1 %375, %376
  %378 = xor i1 %375, %376
  %379 = or i1 %377, %378
  %380 = or i1 %375, %376
  br i1 %379, label %381, label %1046

; <label>:381:                                    ; preds = %367, %1046
  %382 = icmp ugt i64 %366, 0
  %383 = load i32, i32* @x.27
  %384 = load i32, i32* @y.28
  %385 = add i32 %383, -1911711545
  %386 = sub i32 %385, 1
  %387 = sub i32 %386, -1911711545
  %388 = sub i32 %383, 1
  %389 = mul i32 %383, %387
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %384, 10
  %393 = xor i1 %391, true
  %394 = xor i1 %392, true
  %395 = xor i1 true, true
  %396 = and i1 %393, true
  %397 = and i1 %391, %395
  %398 = and i1 %394, true
  %399 = and i1 %392, %395
  %400 = or i1 %396, %397
  %401 = or i1 %398, %399
  %402 = xor i1 %400, %401
  %403 = or i1 %393, %394
  %404 = xor i1 %403, true
  %405 = or i1 true, %395
  %406 = and i1 %404, %405
  %407 = or i1 %402, %406
  %408 = or i1 %391, %392
  br i1 %407, label %409, label %1046

; <label>:409:                                    ; preds = %381
  br i1 %382, label %410, label %984

; <label>:410:                                    ; preds = %409
  %411 = invoke dereferenceable(8) %"struct.std::pair"* @_ZNSt5queueISt4pairIiiESt5dequeIS1_SaIS1_EEE5frontEv(%"class.std::queue"* %29)
          to label %412 unwind label %451

; <label>:412:                                    ; preds = %410
  %413 = bitcast %"struct.std::pair"* %38 to i8*
  %414 = bitcast %"struct.std::pair"* %411 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %413, i8* %414, i64 8, i32 4, i1 false)
  invoke void @_ZNSt5queueISt4pairIiiESt5dequeIS1_SaIS1_EEE3popEv(%"class.std::queue"* %29)
          to label %415 unwind label %451

; <label>:415:                                    ; preds = %412
  %416 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %38, i32 0, i32 0
  %417 = load i32, i32* %416, align 4
  %418 = sext i32 %417 to i64
  %419 = call dereferenceable(24) %"class.std::vector.10"* @_ZNSt6vectorIS_IcSaIcEESaIS1_EEixEm(%"class.std::vector.5"* %6, i64 %418) #3
  %420 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %38, i32 0, i32 1
  %421 = load i32, i32* %420, align 4
  %422 = sext i32 %421 to i64
  %423 = call dereferenceable(1) i8* @_ZNSt6vectorIcSaIcEEixEm(%"class.std::vector.10"* %419, i64 %422) #3
  store i8 35, i8* %423, align 1
  store i32 -1, i32* %39, align 4
  br label %424

; <label>:424:                                    ; preds = %935, %415
  %425 = load i32, i32* %39, align 4
  %426 = icmp sle i32 %425, 1
  br i1 %426, label %427, label %941

; <label>:427:                                    ; preds = %424
  store i32 -1, i32* %40, align 4
  br label %428

; <label>:428:                                    ; preds = %875, %427
  %429 = load i32, i32* %40, align 4
  %430 = icmp sle i32 %429, 1
  br i1 %430, label %431, label %881

; <label>:431:                                    ; preds = %428
  %432 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %38, i32 0, i32 0
  %433 = load i32, i32* %432, align 4
  %434 = load i32, i32* %39, align 4
  %435 = sub i32 %433, 192868763
  %436 = add i32 %435, %434
  %437 = add i32 %436, 192868763
  %438 = add nsw i32 %433, %434
  %439 = icmp slt i32 %437, 0
  br i1 %439, label %450, label %440

; <label>:440:                                    ; preds = %431
  %441 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %38, i32 0, i32 0
  %442 = load i32, i32* %441, align 4
  %443 = load i32, i32* %39, align 4
  %444 = sub i32 %442, 377632293
  %445 = add i32 %444, %443
  %446 = add i32 %445, 377632293
  %447 = add nsw i32 %442, %443
  %448 = load i32, i32* %27, align 4
  %449 = icmp sge i32 %446, %448
  br i1 %449, label %450, label %455

; <label>:450:                                    ; preds = %440, %431
  br label %875

; <label>:451:                                    ; preds = %873, %829, %722, %412, %410, %365, %333, %276
  %452 = landingpad { i8*, i32 }
          cleanup
  %453 = extractvalue { i8*, i32 } %452, 0
  store i8* %453, i8** %31, align 8
  %454 = extractvalue { i8*, i32 } %452, 1
  store i32 %454, i32* %32, align 4
  br label %993

; <label>:455:                                    ; preds = %440
  %456 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %38, i32 0, i32 1
  %457 = load i32, i32* %456, align 4
  %458 = load i32, i32* %40, align 4
  %459 = sub i32 0, %457
  %460 = sub i32 0, %458
  %461 = add i32 %459, %460
  %462 = sub i32 0, %461
  %463 = add nsw i32 %457, %458
  %464 = icmp slt i32 %462, 0
  br i1 %464, label %476, label %465

; <label>:465:                                    ; preds = %455
  %466 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %38, i32 0, i32 1
  %467 = load i32, i32* %466, align 4
  %468 = load i32, i32* %40, align 4
  %469 = sub i32 0, %467
  %470 = sub i32 0, %468
  %471 = add i32 %469, %470
  %472 = sub i32 0, %471
  %473 = add nsw i32 %467, %468
  %474 = load i32, i32* %28, align 4
  %475 = icmp sge i32 %472, %474
  br i1 %475, label %476, label %518

; <label>:476:                                    ; preds = %465, %455
  %477 = load i32, i32* @x.27
  %478 = load i32, i32* @y.28
  %479 = sub i32 0, 1
  %480 = add i32 %477, %479
  %481 = sub i32 %477, 1
  %482 = mul i32 %477, %480
  %483 = urem i32 %482, 2
  %484 = icmp eq i32 %483, 0
  %485 = icmp slt i32 %478, 10
  %486 = and i1 %484, %485
  %487 = xor i1 %484, %485
  %488 = or i1 %486, %487
  %489 = or i1 %484, %485
  br i1 %488, label %490, label %1048

; <label>:490:                                    ; preds = %476, %1048
  %491 = load i32, i32* @x.27
  %492 = load i32, i32* @y.28
  %493 = sub i32 %491, 1925884285
  %494 = sub i32 %493, 1
  %495 = add i32 %494, 1925884285
  %496 = sub i32 %491, 1
  %497 = mul i32 %491, %495
  %498 = urem i32 %497, 2
  %499 = icmp eq i32 %498, 0
  %500 = icmp slt i32 %492, 10
  %501 = xor i1 %499, true
  %502 = xor i1 %500, true
  %503 = xor i1 false, true
  %504 = and i1 %501, false
  %505 = and i1 %499, %503
  %506 = and i1 %502, false
  %507 = and i1 %500, %503
  %508 = or i1 %504, %505
  %509 = or i1 %506, %507
  %510 = xor i1 %508, %509
  %511 = or i1 %501, %502
  %512 = xor i1 %511, true
  %513 = or i1 false, %503
  %514 = and i1 %512, %513
  %515 = or i1 %510, %514
  %516 = or i1 %499, %500
  br i1 %515, label %517, label %1048

; <label>:517:                                    ; preds = %490
  br label %875

; <label>:518:                                    ; preds = %465
  %519 = load i32, i32* %39, align 4
  %520 = icmp ne i32 %519, 0
  br i1 %520, label %521, label %525

; <label>:521:                                    ; preds = %518
  %522 = load i32, i32* %40, align 4
  %523 = icmp ne i32 %522, 0
  br i1 %523, label %524, label %525

; <label>:524:                                    ; preds = %521
  br label %875

; <label>:525:                                    ; preds = %521, %518
  %526 = load i32, i32* %39, align 4
  %527 = icmp eq i32 %526, 0
  br i1 %527, label %528, label %585

; <label>:528:                                    ; preds = %525
  %529 = load i32, i32* %40, align 4
  %530 = icmp eq i32 %529, 0
  br i1 %530, label %531, label %585

; <label>:531:                                    ; preds = %528
  %532 = load i32, i32* @x.27
  %533 = load i32, i32* @y.28
  %534 = sub i32 0, 1
  %535 = add i32 %532, %534
  %536 = sub i32 %532, 1
  %537 = mul i32 %532, %535
  %538 = urem i32 %537, 2
  %539 = icmp eq i32 %538, 0
  %540 = icmp slt i32 %533, 10
  %541 = xor i1 %539, true
  %542 = xor i1 %540, true
  %543 = xor i1 true, true
  %544 = and i1 %541, true
  %545 = and i1 %539, %543
  %546 = and i1 %542, true
  %547 = and i1 %540, %543
  %548 = or i1 %544, %545
  %549 = or i1 %546, %547
  %550 = xor i1 %548, %549
  %551 = or i1 %541, %542
  %552 = xor i1 %551, true
  %553 = or i1 true, %543
  %554 = and i1 %552, %553
  %555 = or i1 %550, %554
  %556 = or i1 %539, %540
  br i1 %555, label %557, label %1049

; <label>:557:                                    ; preds = %531, %1049
  %558 = load i32, i32* @x.27
  %559 = load i32, i32* @y.28
  %560 = sub i32 %558, -678938954
  %561 = sub i32 %560, 1
  %562 = add i32 %561, -678938954
  %563 = sub i32 %558, 1
  %564 = mul i32 %558, %562
  %565 = urem i32 %564, 2
  %566 = icmp eq i32 %565, 0
  %567 = icmp slt i32 %559, 10
  %568 = xor i1 %566, true
  %569 = xor i1 %567, true
  %570 = xor i1 true, true
  %571 = and i1 %568, true
  %572 = and i1 %566, %570
  %573 = and i1 %569, true
  %574 = and i1 %567, %570
  %575 = or i1 %571, %572
  %576 = or i1 %573, %574
  %577 = xor i1 %575, %576
  %578 = or i1 %568, %569
  %579 = xor i1 %578, true
  %580 = or i1 true, %570
  %581 = and i1 %579, %580
  %582 = or i1 %577, %581
  %583 = or i1 %566, %567
  br i1 %582, label %584, label %1049

; <label>:584:                                    ; preds = %557
  br label %875

; <label>:585:                                    ; preds = %528, %525
  %586 = load i32, i32* @x.27
  %587 = load i32, i32* @y.28
  %588 = sub i32 %586, 312166236
  %589 = sub i32 %588, 1
  %590 = add i32 %589, 312166236
  %591 = sub i32 %586, 1
  %592 = mul i32 %586, %590
  %593 = urem i32 %592, 2
  %594 = icmp eq i32 %593, 0
  %595 = icmp slt i32 %587, 10
  %596 = xor i1 %594, true
  %597 = xor i1 %595, true
  %598 = xor i1 true, true
  %599 = and i1 %596, true
  %600 = and i1 %594, %598
  %601 = and i1 %597, true
  %602 = and i1 %595, %598
  %603 = or i1 %599, %600
  %604 = or i1 %601, %602
  %605 = xor i1 %603, %604
  %606 = or i1 %596, %597
  %607 = xor i1 %606, true
  %608 = or i1 true, %598
  %609 = and i1 %607, %608
  %610 = or i1 %605, %609
  %611 = or i1 %594, %595
  br i1 %610, label %612, label %1050

; <label>:612:                                    ; preds = %585, %1050
  %613 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %38, i32 0, i32 0
  %614 = load i32, i32* %613, align 4
  %615 = load i32, i32* %39, align 4
  %616 = sub i32 0, %614
  %617 = sub i32 0, %615
  %618 = add i32 %616, %617
  %619 = sub i32 0, %618
  %620 = add nsw i32 %614, %615
  %621 = sext i32 %619 to i64
  %622 = call dereferenceable(24) %"class.std::vector.10"* @_ZNSt6vectorIS_IcSaIcEESaIS1_EEixEm(%"class.std::vector.5"* %6, i64 %621) #3
  %623 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %38, i32 0, i32 1
  %624 = load i32, i32* %623, align 4
  %625 = load i32, i32* %40, align 4
  %626 = sub i32 %624, -1347997370
  %627 = add i32 %626, %625
  %628 = add i32 %627, -1347997370
  %629 = add nsw i32 %624, %625
  %630 = sext i32 %628 to i64
  %631 = call dereferenceable(1) i8* @_ZNSt6vectorIcSaIcEEixEm(%"class.std::vector.10"* %622, i64 %630) #3
  %632 = load i8, i8* %631, align 1
  %633 = sext i8 %632 to i32
  %634 = icmp eq i32 %633, 35
  %635 = load i32, i32* @x.27
  %636 = load i32, i32* @y.28
  %637 = sub i32 %635, -863780553
  %638 = sub i32 %637, 1
  %639 = add i32 %638, -863780553
  %640 = sub i32 %635, 1
  %641 = mul i32 %635, %639
  %642 = urem i32 %641, 2
  %643 = icmp eq i32 %642, 0
  %644 = icmp slt i32 %636, 10
  %645 = and i1 %643, %644
  %646 = xor i1 %643, %644
  %647 = or i1 %645, %646
  %648 = or i1 %643, %644
  br i1 %647, label %649, label %1050

; <label>:649:                                    ; preds = %612
  br i1 %634, label %650, label %651

; <label>:650:                                    ; preds = %649
  br label %875

; <label>:651:                                    ; preds = %649
  %652 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %38, i32 0, i32 0
  %653 = load i32, i32* %652, align 4
  %654 = load i32, i32* %39, align 4
  %655 = add i32 %653, 1644481436
  %656 = add i32 %655, %654
  %657 = sub i32 %656, 1644481436
  %658 = add nsw i32 %653, %654
  %659 = sext i32 %657 to i64
  %660 = call dereferenceable(24) %"class.std::vector.10"* @_ZNSt6vectorIS_IcSaIcEESaIS1_EEixEm(%"class.std::vector.5"* %6, i64 %659) #3
  %661 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %38, i32 0, i32 1
  %662 = load i32, i32* %661, align 4
  %663 = load i32, i32* %40, align 4
  %664 = sub i32 0, %663
  %665 = sub i32 %662, %664
  %666 = add nsw i32 %662, %663
  %667 = sext i32 %665 to i64
  %668 = call dereferenceable(1) i8* @_ZNSt6vectorIcSaIcEEixEm(%"class.std::vector.10"* %660, i64 %667) #3
  store i8 35, i8* %668, align 1
  %669 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %38, i32 0, i32 0
  %670 = load i32, i32* %669, align 4
  %671 = load i32, i32* %39, align 4
  %672 = sub i32 %670, -1628005309
  %673 = add i32 %672, %671
  %674 = add i32 %673, -1628005309
  %675 = add nsw i32 %670, %671
  %676 = sext i32 %674 to i64
  %677 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector"* %33, i64 %676) #3
  %678 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %38, i32 0, i32 1
  %679 = load i32, i32* %678, align 4
  %680 = load i32, i32* %40, align 4
  %681 = add i32 %679, -695171522
  %682 = add i32 %681, %680
  %683 = sub i32 %682, -695171522
  %684 = add nsw i32 %679, %680
  %685 = sext i32 %683 to i64
  %686 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %677, i64 %685) #3
  %687 = load i64, i64* %686, align 8
  %688 = icmp eq i64 %687, 0
  br i1 %688, label %689, label %722

; <label>:689:                                    ; preds = %651
  %690 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %38, i32 0, i32 0
  %691 = load i32, i32* %690, align 4
  %692 = sext i32 %691 to i64
  %693 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector"* %33, i64 %692) #3
  %694 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %38, i32 0, i32 1
  %695 = load i32, i32* %694, align 4
  %696 = sext i32 %695 to i64
  %697 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %693, i64 %696) #3
  %698 = load i64, i64* %697, align 8
  %699 = sub i64 0, %698
  %700 = sub i64 0, 1
  %701 = add i64 %699, %700
  %702 = sub i64 0, %701
  %703 = add nsw i64 %698, 1
  %704 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %38, i32 0, i32 0
  %705 = load i32, i32* %704, align 4
  %706 = load i32, i32* %39, align 4
  %707 = sub i32 0, %705
  %708 = sub i32 0, %706
  %709 = add i32 %707, %708
  %710 = sub i32 0, %709
  %711 = add nsw i32 %705, %706
  %712 = sext i32 %710 to i64
  %713 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector"* %33, i64 %712) #3
  %714 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %38, i32 0, i32 1
  %715 = load i32, i32* %714, align 4
  %716 = load i32, i32* %40, align 4
  %717 = sub i32 0, %716
  %718 = sub i32 %715, %717
  %719 = add nsw i32 %715, %716
  %720 = sext i32 %718 to i64
  %721 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %713, i64 %720) #3
  store i64 %702, i64* %721, align 8
  br label %772

; <label>:722:                                    ; preds = %651
  %723 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %38, i32 0, i32 0
  %724 = load i32, i32* %723, align 4
  %725 = load i32, i32* %39, align 4
  %726 = sub i32 %724, 2018778110
  %727 = add i32 %726, %725
  %728 = add i32 %727, 2018778110
  %729 = add nsw i32 %724, %725
  %730 = sext i32 %728 to i64
  %731 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector"* %33, i64 %730) #3
  %732 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %38, i32 0, i32 1
  %733 = load i32, i32* %732, align 4
  %734 = load i32, i32* %40, align 4
  %735 = sub i32 0, %734
  %736 = sub i32 %733, %735
  %737 = add nsw i32 %733, %734
  %738 = sext i32 %736 to i64
  %739 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %731, i64 %738) #3
  %740 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %38, i32 0, i32 0
  %741 = load i32, i32* %740, align 4
  %742 = sext i32 %741 to i64
  %743 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector"* %33, i64 %742) #3
  %744 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %38, i32 0, i32 1
  %745 = load i32, i32* %744, align 4
  %746 = sext i32 %745 to i64
  %747 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %743, i64 %746) #3
  %748 = load i64, i64* %747, align 8
  %749 = sub i64 0, 1
  %750 = sub i64 %748, %749
  %751 = add nsw i64 %748, 1
  store i64 %750, i64* %41, align 8
  %752 = invoke dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %739, i64* dereferenceable(8) %41)
          to label %753 unwind label %451

; <label>:753:                                    ; preds = %722
  %754 = load i64, i64* %752, align 8
  %755 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %38, i32 0, i32 0
  %756 = load i32, i32* %755, align 4
  %757 = load i32, i32* %39, align 4
  %758 = sub i32 0, %757
  %759 = sub i32 %756, %758
  %760 = add nsw i32 %756, %757
  %761 = sext i32 %759 to i64
  %762 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector"* %33, i64 %761) #3
  %763 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %38, i32 0, i32 1
  %764 = load i32, i32* %763, align 4
  %765 = load i32, i32* %40, align 4
  %766 = sub i32 %764, -1318059767
  %767 = add i32 %766, %765
  %768 = add i32 %767, -1318059767
  %769 = add nsw i32 %764, %765
  %770 = sext i32 %768 to i64
  %771 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %762, i64 %770) #3
  store i64 %754, i64* %771, align 8
  br label %772

; <label>:772:                                    ; preds = %753, %689
  %773 = load i32, i32* @x.27
  %774 = load i32, i32* @y.28
  %775 = sub i32 %773, -509631367
  %776 = sub i32 %775, 1
  %777 = add i32 %776, -509631367
  %778 = sub i32 %773, 1
  %779 = mul i32 %773, %777
  %780 = urem i32 %779, 2
  %781 = icmp eq i32 %780, 0
  %782 = icmp slt i32 %774, 10
  %783 = xor i1 %781, true
  %784 = xor i1 %782, true
  %785 = xor i1 true, true
  %786 = and i1 %783, true
  %787 = and i1 %781, %785
  %788 = and i1 %784, true
  %789 = and i1 %782, %785
  %790 = or i1 %786, %787
  %791 = or i1 %788, %789
  %792 = xor i1 %790, %791
  %793 = or i1 %783, %784
  %794 = xor i1 %793, true
  %795 = or i1 true, %785
  %796 = and i1 %794, %795
  %797 = or i1 %792, %796
  %798 = or i1 %781, %782
  br i1 %797, label %799, label %1096

; <label>:799:                                    ; preds = %772, %1096
  %800 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %38, i32 0, i32 0
  %801 = load i32, i32* %800, align 4
  %802 = load i32, i32* %39, align 4
  %803 = sub i32 0, %801
  %804 = sub i32 0, %802
  %805 = add i32 %803, %804
  %806 = sub i32 0, %805
  %807 = add nsw i32 %801, %802
  store i32 %806, i32* %43, align 4
  %808 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %38, i32 0, i32 1
  %809 = load i32, i32* %808, align 4
  %810 = load i32, i32* %40, align 4
  %811 = add i32 %809, -1552035264
  %812 = add i32 %811, %810
  %813 = sub i32 %812, -1552035264
  %814 = add nsw i32 %809, %810
  store i32 %813, i32* %44, align 4
  %815 = load i32, i32* @x.27
  %816 = load i32, i32* @y.28
  %817 = add i32 %815, -1330967382
  %818 = sub i32 %817, 1
  %819 = sub i32 %818, -1330967382
  %820 = sub i32 %815, 1
  %821 = mul i32 %815, %819
  %822 = urem i32 %821, 2
  %823 = icmp eq i32 %822, 0
  %824 = icmp slt i32 %816, 10
  %825 = and i1 %823, %824
  %826 = xor i1 %823, %824
  %827 = or i1 %825, %826
  %828 = or i1 %823, %824
  br i1 %827, label %829, label %1096

; <label>:829:                                    ; preds = %799
  %830 = invoke i64 @_ZSt9make_pairIiiESt4pairINSt17__decay_and_stripIT_E6__typeENS1_IT0_E6__typeEEOS2_OS5_(i32* dereferenceable(4) %43, i32* dereferenceable(4) %44)
          to label %831 unwind label %451

; <label>:831:                                    ; preds = %829
  %832 = load i32, i32* @x.27
  %833 = load i32, i32* @y.28
  %834 = sub i32 %832, 1181626498
  %835 = sub i32 %834, 1
  %836 = add i32 %835, 1181626498
  %837 = sub i32 %832, 1
  %838 = mul i32 %832, %836
  %839 = urem i32 %838, 2
  %840 = icmp eq i32 %839, 0
  %841 = icmp slt i32 %833, 10
  %842 = xor i1 %840, true
  %843 = xor i1 %841, true
  %844 = xor i1 true, true
  %845 = and i1 %842, true
  %846 = and i1 %840, %844
  %847 = and i1 %843, true
  %848 = and i1 %841, %844
  %849 = or i1 %845, %846
  %850 = or i1 %847, %848
  %851 = xor i1 %849, %850
  %852 = or i1 %842, %843
  %853 = xor i1 %852, true
  %854 = or i1 true, %844
  %855 = and i1 %853, %854
  %856 = or i1 %851, %855
  %857 = or i1 %840, %841
  br i1 %856, label %858, label %1145

; <label>:858:                                    ; preds = %831, %1145
  %859 = bitcast %"struct.std::pair"* %42 to i64*
  store i64 %830, i64* %859, align 4
  %860 = load i32, i32* @x.27
  %861 = load i32, i32* @y.28
  %862 = sub i32 0, 1
  %863 = add i32 %860, %862
  %864 = sub i32 %860, 1
  %865 = mul i32 %860, %863
  %866 = urem i32 %865, 2
  %867 = icmp eq i32 %866, 0
  %868 = icmp slt i32 %861, 10
  %869 = and i1 %867, %868
  %870 = xor i1 %867, %868
  %871 = or i1 %869, %870
  %872 = or i1 %867, %868
  br i1 %871, label %873, label %1145

; <label>:873:                                    ; preds = %858
  invoke void @_ZNSt5queueISt4pairIiiESt5dequeIS1_SaIS1_EEE4pushEOS1_(%"class.std::queue"* %29, %"struct.std::pair"* dereferenceable(8) %42)
          to label %874 unwind label %451

; <label>:874:                                    ; preds = %873
  br label %875

; <label>:875:                                    ; preds = %874, %650, %584, %524, %517, %450
  %876 = load i32, i32* %40, align 4
  %877 = sub i32 %876, -966961460
  %878 = add i32 %877, 1
  %879 = add i32 %878, -966961460
  %880 = add nsw i32 %876, 1
  store i32 %879, i32* %40, align 4
  br label %428

; <label>:881:                                    ; preds = %428
  %882 = load i32, i32* @x.27
  %883 = load i32, i32* @y.28
  %884 = sub i32 0, 1
  %885 = add i32 %882, %884
  %886 = sub i32 %882, 1
  %887 = mul i32 %882, %885
  %888 = urem i32 %887, 2
  %889 = icmp eq i32 %888, 0
  %890 = icmp slt i32 %883, 10
  %891 = xor i1 %889, true
  %892 = xor i1 %890, true
  %893 = xor i1 true, true
  %894 = and i1 %891, true
  %895 = and i1 %889, %893
  %896 = and i1 %892, true
  %897 = and i1 %890, %893
  %898 = or i1 %894, %895
  %899 = or i1 %896, %897
  %900 = xor i1 %898, %899
  %901 = or i1 %891, %892
  %902 = xor i1 %901, true
  %903 = or i1 true, %893
  %904 = and i1 %902, %903
  %905 = or i1 %900, %904
  %906 = or i1 %889, %890
  br i1 %905, label %907, label %1147

; <label>:907:                                    ; preds = %881, %1147
  %908 = load i32, i32* @x.27
  %909 = load i32, i32* @y.28
  %910 = sub i32 %908, 2054242851
  %911 = sub i32 %910, 1
  %912 = add i32 %911, 2054242851
  %913 = sub i32 %908, 1
  %914 = mul i32 %908, %912
  %915 = urem i32 %914, 2
  %916 = icmp eq i32 %915, 0
  %917 = icmp slt i32 %909, 10
  %918 = xor i1 %916, true
  %919 = xor i1 %917, true
  %920 = xor i1 true, true
  %921 = and i1 %918, true
  %922 = and i1 %916, %920
  %923 = and i1 %919, true
  %924 = and i1 %917, %920
  %925 = or i1 %921, %922
  %926 = or i1 %923, %924
  %927 = xor i1 %925, %926
  %928 = or i1 %918, %919
  %929 = xor i1 %928, true
  %930 = or i1 true, %920
  %931 = and i1 %929, %930
  %932 = or i1 %927, %931
  %933 = or i1 %916, %917
  br i1 %932, label %934, label %1147

; <label>:934:                                    ; preds = %907
  br label %935

; <label>:935:                                    ; preds = %934
  %936 = load i32, i32* %39, align 4
  %937 = add i32 %936, 1703012753
  %938 = add i32 %937, 1
  %939 = sub i32 %938, 1703012753
  %940 = add nsw i32 %936, 1
  store i32 %939, i32* %39, align 4
  br label %424

; <label>:941:                                    ; preds = %424
  %942 = load i32, i32* @x.27
  %943 = load i32, i32* @y.28
  %944 = sub i32 %942, -1194388632
  %945 = sub i32 %944, 1
  %946 = add i32 %945, -1194388632
  %947 = sub i32 %942, 1
  %948 = mul i32 %942, %946
  %949 = urem i32 %948, 2
  %950 = icmp eq i32 %949, 0
  %951 = icmp slt i32 %943, 10
  %952 = and i1 %950, %951
  %953 = xor i1 %950, %951
  %954 = or i1 %952, %953
  %955 = or i1 %950, %951
  br i1 %954, label %956, label %1148

; <label>:956:                                    ; preds = %941, %1148
  %957 = load i32, i32* @x.27
  %958 = load i32, i32* @y.28
  %959 = add i32 %957, 1542943153
  %960 = sub i32 %959, 1
  %961 = sub i32 %960, 1542943153
  %962 = sub i32 %957, 1
  %963 = mul i32 %957, %961
  %964 = urem i32 %963, 2
  %965 = icmp eq i32 %964, 0
  %966 = icmp slt i32 %958, 10
  %967 = xor i1 %965, true
  %968 = xor i1 %966, true
  %969 = xor i1 true, true
  %970 = and i1 %967, true
  %971 = and i1 %965, %969
  %972 = and i1 %968, true
  %973 = and i1 %966, %969
  %974 = or i1 %970, %971
  %975 = or i1 %972, %973
  %976 = xor i1 %974, %975
  %977 = or i1 %967, %968
  %978 = xor i1 %977, true
  %979 = or i1 true, %969
  %980 = and i1 %978, %979
  %981 = or i1 %976, %980
  %982 = or i1 %965, %966
  br i1 %981, label %983, label %1148

; <label>:983:                                    ; preds = %956
  br label %365

; <label>:984:                                    ; preds = %409
  %985 = load i32, i32* %26, align 4
  %986 = sext i32 %985 to i64
  %987 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector"* %33, i64 %986) #3
  %988 = load i32, i32* %25, align 4
  %989 = sext i32 %988 to i64
  %990 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %987, i64 %989) #3
  %991 = load i64, i64* %990, align 8
  %992 = trunc i64 %991 to i32
  call void @_ZNSt6vectorIS_IxSaIxEESaIS1_EED2Ev(%"class.std::vector"* %33) #3
  call void @_ZNSt5queueISt4pairIiiESt5dequeIS1_SaIS1_EEED2Ev(%"class.std::queue"* %29) #3
  ret i32 %992

; <label>:993:                                    ; preds = %451, %272, %271
  call void @_ZNSt6vectorIS_IxSaIxEESaIS1_EED2Ev(%"class.std::vector"* %33) #3
  call void @_ZNSt5queueISt4pairIiiESt5dequeIS1_SaIS1_EEED2Ev(%"class.std::queue"* %29) #3
  br label %994

; <label>:994:                                    ; preds = %993, %210
  %995 = load i8*, i8** %31, align 8
  %996 = load i32, i32* %32, align 4
  %997 = insertvalue { i8*, i32 } undef, i8* %995, 0
  %998 = insertvalue { i8*, i32 } %997, i32 %996, 1
  resume { i8*, i32 } %998

; <label>:999:                                    ; preds = %22, %7
  %1000 = alloca i32, align 4
  %1001 = alloca i32, align 4
  %1002 = alloca i32, align 4
  %1003 = alloca i32, align 4
  %1004 = alloca i32, align 4
  %1005 = alloca i32, align 4
  %1006 = alloca %"class.std::queue", align 8
  %1007 = alloca %"class.std::deque", align 8
  %1008 = alloca i8*
  %1009 = alloca i32
  %1010 = alloca %"class.std::vector", align 8
  %1011 = alloca i32, align 4
  %1012 = alloca %"class.std::vector.0", align 8
  %1013 = alloca %"class.std::allocator.2", align 1
  %1014 = alloca %"struct.std::pair", align 4
  %1015 = alloca %"struct.std::pair", align 4
  %1016 = alloca i32, align 4
  %1017 = alloca i32, align 4
  %1018 = alloca i64, align 8
  %1019 = alloca %"struct.std::pair", align 4
  %1020 = alloca i32, align 4
  %1021 = alloca i32, align 4
  store i32 %0, i32* %1000, align 4
  store i32 %1, i32* %1001, align 4
  store i32 %2, i32* %1002, align 4
  store i32 %3, i32* %1003, align 4
  store i32 %4, i32* %1004, align 4
  store i32 %5, i32* %1005, align 4
  call void @_ZNSt5dequeISt4pairIiiESaIS1_EEC2Ev(%"class.std::deque"* %1007)
  br label %22

; <label>:1022:                                   ; preds = %97, %71
  call void @_ZNSt5dequeISt4pairIiiESaIS1_EED2Ev(%"class.std::deque"* %30) #3
  call void @_ZNSt6vectorIS_IxSaIxEESaIS1_EEC2Ev(%"class.std::vector"* %33) #3
  store i32 0, i32* %34, align 4
  br label %97

; <label>:1023:                                   ; preds = %139, %113
  %1024 = load i32, i32* %34, align 4
  %1025 = load i32, i32* %27, align 4
  %1026 = icmp slt i32 %1024, %1025
  br label %139

; <label>:1027:                                   ; preds = %177, %162
  %1028 = load i32, i32* %34, align 4
  %1029 = sub i32 0, 1
  %1030 = add i32 %1028, %1029
  %1031 = sub i32 %1028, 1
  %1032 = mul i32 %1030, 1
  %1033 = shl i32 %1028, 1
  %1034 = shl i32 %1028, 1
  %1035 = add i32 %1028, -1828216357
  %1036 = add i32 %1035, 1
  %1037 = sub i32 %1036, -1828216357
  %1038 = add nsw i32 %1028, 1
  store i32 %1037, i32* %34, align 4
  br label %177

; <label>:1039:                                   ; preds = %241, %214
  %1040 = landingpad { i8*, i32 }
          cleanup
  %1041 = extractvalue { i8*, i32 } %1040, 0
  store i8* %1041, i8** %31, align 8
  %1042 = extractvalue { i8*, i32 } %1040, 1
  store i32 %1042, i32* %32, align 4
  call void @_ZNSaIxED2Ev(%"class.std::allocator.2"* %36) #3
  br label %241

; <label>:1043:                                   ; preds = %305, %278
  %1044 = bitcast %"struct.std::pair"* %37 to i64*
  store i64 %277, i64* %1044, align 4
  br label %305

; <label>:1045:                                   ; preds = %349, %334
  br label %349

; <label>:1046:                                   ; preds = %381, %367
  %1047 = icmp ugt i64 %366, 0
  br label %381

; <label>:1048:                                   ; preds = %490, %476
  br label %490

; <label>:1049:                                   ; preds = %557, %531
  br label %557

; <label>:1050:                                   ; preds = %612, %585
  %1051 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %38, i32 0, i32 0
  %1052 = load i32, i32* %1051, align 4
  %1053 = load i32, i32* %39, align 4
  %1054 = sub i32 0, %1053
  %1055 = add i32 %1052, %1054
  %1056 = sub i32 %1052, %1053
  %1057 = mul i32 %1055, %1053
  %1058 = sub i32 %1052, 232975867
  %1059 = sub i32 %1058, %1053
  %1060 = add i32 %1059, 232975867
  %1061 = sub i32 %1052, %1053
  %1062 = mul i32 %1060, %1053
  %1063 = sub i32 0, %1053
  %1064 = add i32 %1052, %1063
  %1065 = sub i32 %1052, %1053
  %1066 = mul i32 %1064, %1053
  %1067 = add i32 %1052, -2050888369
  %1068 = sub i32 %1067, %1053
  %1069 = sub i32 %1068, -2050888369
  %1070 = sub i32 %1052, %1053
  %1071 = mul i32 %1069, %1053
  %1072 = sub i32 0, %1053
  %1073 = sub i32 %1052, %1072
  %1074 = add nsw i32 %1052, %1053
  %1075 = sext i32 %1073 to i64
  %1076 = call dereferenceable(24) %"class.std::vector.10"* @_ZNSt6vectorIS_IcSaIcEESaIS1_EEixEm(%"class.std::vector.5"* %6, i64 %1075) #3
  %1077 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %38, i32 0, i32 1
  %1078 = load i32, i32* %1077, align 4
  %1079 = load i32, i32* %40, align 4
  %1080 = shl i32 %1078, %1079
  %1081 = add i32 %1078, -498741931
  %1082 = sub i32 %1081, %1079
  %1083 = sub i32 %1082, -498741931
  %1084 = sub i32 %1078, %1079
  %1085 = mul i32 %1083, %1079
  %1086 = sub i32 0, %1078
  %1087 = sub i32 0, %1079
  %1088 = add i32 %1086, %1087
  %1089 = sub i32 0, %1088
  %1090 = add nsw i32 %1078, %1079
  %1091 = sext i32 %1089 to i64
  %1092 = call dereferenceable(1) i8* @_ZNSt6vectorIcSaIcEEixEm(%"class.std::vector.10"* %1076, i64 %1091) #3
  %1093 = load i8, i8* %1092, align 1
  %1094 = sext i8 %1093 to i32
  %1095 = icmp eq i32 %1094, 35
  br label %612

; <label>:1096:                                   ; preds = %799, %772
  %1097 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %38, i32 0, i32 0
  %1098 = load i32, i32* %1097, align 4
  %1099 = load i32, i32* %39, align 4
  %1100 = shl i32 %1098, %1099
  %1101 = sub i32 0, %1099
  %1102 = add i32 %1098, %1101
  %1103 = sub i32 %1098, %1099
  %1104 = mul i32 %1102, %1099
  %1105 = shl i32 %1098, %1099
  %1106 = add i32 %1098, -303741143
  %1107 = sub i32 %1106, %1099
  %1108 = sub i32 %1107, -303741143
  %1109 = sub i32 %1098, %1099
  %1110 = mul i32 %1108, %1099
  %1111 = shl i32 %1098, %1099
  %1112 = shl i32 %1098, %1099
  %1113 = add i32 %1098, -1246971244
  %1114 = sub i32 %1113, %1099
  %1115 = sub i32 %1114, -1246971244
  %1116 = sub i32 %1098, %1099
  %1117 = mul i32 %1115, %1099
  %1118 = shl i32 %1098, %1099
  %1119 = sub i32 %1098, -409916522
  %1120 = add i32 %1119, %1099
  %1121 = add i32 %1120, -409916522
  %1122 = add nsw i32 %1098, %1099
  store i32 %1121, i32* %43, align 4
  %1123 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %38, i32 0, i32 1
  %1124 = load i32, i32* %1123, align 4
  %1125 = load i32, i32* %40, align 4
  %1126 = add i32 0, 617129176
  %1127 = sub i32 %1126, %1124
  %1128 = sub i32 %1127, 617129176
  %1129 = sub i32 0, %1124
  %1130 = sub i32 %1128, -461264153
  %1131 = add i32 %1130, %1125
  %1132 = add i32 %1131, -461264153
  %1133 = add i32 %1128, %1125
  %1134 = shl i32 %1124, %1125
  %1135 = shl i32 %1124, %1125
  %1136 = shl i32 %1124, %1125
  %1137 = sub i32 0, %1125
  %1138 = add i32 %1124, %1137
  %1139 = sub i32 %1124, %1125
  %1140 = mul i32 %1138, %1125
  %1141 = add i32 %1124, 132860458
  %1142 = add i32 %1141, %1125
  %1143 = sub i32 %1142, 132860458
  %1144 = add nsw i32 %1124, %1125
  store i32 %1143, i32* %44, align 4
  br label %799

; <label>:1145:                                   ; preds = %858, %831
  %1146 = bitcast %"struct.std::pair"* %42 to i64*
  store i64 %830, i64* %1146, align 4
  br label %858

; <label>:1147:                                   ; preds = %907, %881
  br label %907

; <label>:1148:                                   ; preds = %956, %941
  br label %956
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeISt4pairIiiESaIS1_EEC2Ev(%"class.std::deque"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EEC2Ev(%"class.std::_Deque_base"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5queueISt4pairIiiESt5dequeIS1_SaIS1_EEEC2EOS4_(%"class.std::queue"*, %"class.std::deque"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::queue"*, align 8
  %4 = alloca %"class.std::deque"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %3, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %4, align 8
  %5 = load %"class.std::queue"*, %"class.std::queue"** %3, align 8
  %6 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %5, i32 0, i32 0
  %7 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %8 = call dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeISt4pairIiiESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::deque"* dereferenceable(80) %7) #3
  call void @_ZNSt5dequeISt4pairIiiESaIS1_EEC2EOS3_(%"class.std::deque"* %6, %"class.std::deque"* dereferenceable(80) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeISt4pairIiiESaIS1_EED2Ev(%"class.std::deque"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.33
  %3 = load i32, i32* @y.34
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 true, true
  %14 = and i1 %11, true
  %15 = and i1 %9, %13
  %16 = and i1 %12, true
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 true, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %72

; <label>:27:                                     ; preds = %1, %72
  %28 = alloca %"class.std::deque"*, align 8
  %29 = alloca %"struct.std::_Deque_iterator", align 8
  %30 = alloca %"struct.std::_Deque_iterator", align 8
  %31 = alloca i8*
  %32 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %28, align 8
  %33 = load %"class.std::deque"*, %"class.std::deque"** %28, align 8
  call void @_ZNSt5dequeISt4pairIiiESaIS1_EE5beginEv(%"struct.std::_Deque_iterator"* sret %29, %"class.std::deque"* %33) #3
  call void @_ZNSt5dequeISt4pairIiiESaIS1_EE3endEv(%"struct.std::_Deque_iterator"* sret %30, %"class.std::deque"* %33) #3
  %34 = bitcast %"class.std::deque"* %33 to %"class.std::_Deque_base"*
  %35 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %34) #3
  %36 = load i32, i32* @x.33
  %37 = load i32, i32* @y.34
  %38 = add i32 %36, 1280240974
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, 1280240974
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  br i1 %60, label %62, label %72

; <label>:62:                                     ; preds = %27
  invoke void @_ZNSt5dequeISt4pairIiiESaIS1_EE15_M_destroy_dataESt15_Deque_iteratorIS1_RS1_PS1_ES7_RKS2_(%"class.std::deque"* %33, %"struct.std::_Deque_iterator"* %29, %"struct.std::_Deque_iterator"* %30, %"class.std::allocator.15"* dereferenceable(1) %35)
          to label %63 unwind label %65

; <label>:63:                                     ; preds = %62
  %64 = bitcast %"class.std::deque"* %33 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EED2Ev(%"class.std::_Deque_base"* %64) #3
  ret void

; <label>:65:                                     ; preds = %62
  %66 = landingpad { i8*, i32 }
          catch i8* null
  %67 = extractvalue { i8*, i32 } %66, 0
  store i8* %67, i8** %31, align 8
  %68 = extractvalue { i8*, i32 } %66, 1
  store i32 %68, i32* %32, align 4
  %69 = bitcast %"class.std::deque"* %33 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EED2Ev(%"class.std::_Deque_base"* %69) #3
  br label %70

; <label>:70:                                     ; preds = %65
  %71 = load i8*, i8** %31, align 8
  call void @__clang_call_terminate(i8* %71) #12
  unreachable

; <label>:72:                                     ; preds = %27, %1
  %73 = alloca %"class.std::deque"*, align 8
  %74 = alloca %"struct.std::_Deque_iterator", align 8
  %75 = alloca %"struct.std::_Deque_iterator", align 8
  %76 = alloca i8*
  %77 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %73, align 8
  %78 = load %"class.std::deque"*, %"class.std::deque"** %73, align 8
  call void @_ZNSt5dequeISt4pairIiiESaIS1_EE5beginEv(%"struct.std::_Deque_iterator"* sret %74, %"class.std::deque"* %78) #3
  call void @_ZNSt5dequeISt4pairIiiESaIS1_EE3endEv(%"struct.std::_Deque_iterator"* sret %75, %"class.std::deque"* %78) #3
  %79 = bitcast %"class.std::deque"* %78 to %"class.std::_Deque_base"*
  %80 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %79) #3
  br label %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IxSaIxEESaIS1_EEC2Ev(%"class.std::vector"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  invoke void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EEC2Ev(%"struct.std::_Vector_base"* %4)
          to label %5 unwind label %60

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* @x.35
  %7 = load i32, i32* @y.36
  %8 = add i32 %6, 1022176046
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1022176046
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %7, 10
  %16 = xor i1 %14, true
  %17 = xor i1 %15, true
  %18 = xor i1 false, true
  %19 = and i1 %16, false
  %20 = and i1 %14, %18
  %21 = and i1 %17, false
  %22 = and i1 %15, %18
  %23 = or i1 %19, %20
  %24 = or i1 %21, %22
  %25 = xor i1 %23, %24
  %26 = or i1 %16, %17
  %27 = xor i1 %26, true
  %28 = or i1 false, %18
  %29 = and i1 %27, %28
  %30 = or i1 %25, %29
  %31 = or i1 %14, %15
  br i1 %30, label %32, label %63

; <label>:32:                                     ; preds = %5, %63
  %33 = load i32, i32* @x.35
  %34 = load i32, i32* @y.36
  %35 = add i32 %33, -1288087971
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -1288087971
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %63

; <label>:59:                                     ; preds = %32
  ret void

; <label>:60:                                     ; preds = %1
  %61 = landingpad { i8*, i32 }
          catch i8* null
  %62 = extractvalue { i8*, i32 } %61, 0
  call void @__clang_call_terminate(i8* %62) #12
  unreachable

; <label>:63:                                     ; preds = %32, %5
  br label %32
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIxEC2Ev(%"class.std::allocator.2"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorIxEC2Ev(%"class.__gnu_cxx::new_allocator.3"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEEC2EmRKS0_(%"class.std::vector.0"*, i64, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %10 = bitcast %"class.std::vector.0"* %9 to %"struct.std::_Vector_base.1"*
  %11 = load i64, i64* %5, align 8
  %12 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %6, align 8
  call void @_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_(%"struct.std::_Vector_base.1"* %10, i64 %11, %"class.std::allocator.2"* dereferenceable(1) %12)
  %13 = load i64, i64* %5, align 8
  invoke void @_ZNSt6vectorIxSaIxEE21_M_default_initializeEm(%"class.std::vector.0"* %9, i64 %13)
          to label %14 unwind label %15

; <label>:14:                                     ; preds = %3
  ret void

; <label>:15:                                     ; preds = %3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  store i8* %17, i8** %7, align 8
  %18 = extractvalue { i8*, i32 } %16, 1
  store i32 %18, i32* %8, align 4
  %19 = bitcast %"class.std::vector.0"* %9 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.1"* %19) #3
  br label %20

; <label>:20:                                     ; preds = %15
  %21 = load i32, i32* @x.39
  %22 = load i32, i32* @y.40
  %23 = sub i32 0, 1
  %24 = add i32 %21, %23
  %25 = sub i32 %21, 1
  %26 = mul i32 %21, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %22, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 true, true
  %33 = and i1 %30, true
  %34 = and i1 %28, %32
  %35 = and i1 %31, true
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 true, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  br i1 %44, label %46, label %77

; <label>:46:                                     ; preds = %20, %77
  %47 = load i8*, i8** %7, align 8
  %48 = load i32, i32* %8, align 4
  %49 = insertvalue { i8*, i32 } undef, i8* %47, 0
  %50 = insertvalue { i8*, i32 } %49, i32 %48, 1
  %51 = load i32, i32* @x.39
  %52 = load i32, i32* @y.40
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  br i1 %74, label %76, label %77

; <label>:76:                                     ; preds = %46
  resume { i8*, i32 } %50

; <label>:77:                                     ; preds = %46, %20
  %78 = load i8*, i8** %7, align 8
  %79 = load i32, i32* %8, align 4
  %80 = insertvalue { i8*, i32 } undef, i8* %78, 0
  %81 = insertvalue { i8*, i32 } %80, i32 %79, 1
  br label %46
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIxED2Ev(%"class.std::allocator.2"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorIxED2Ev(%"class.__gnu_cxx::new_allocator.3"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5queueISt4pairIiiESt5dequeIS1_SaIS1_EEE4pushEOS1_(%"class.std::queue"*, %"struct.std::pair"* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.std::queue"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %"class.std::queue"*, %"class.std::queue"** %3, align 8
  %6 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %5, i32 0, i32 0
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %8 = call dereferenceable(8) %"struct.std::pair"* @_ZSt4moveIRSt4pairIiiEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair"* dereferenceable(8) %7) #3
  call void @_ZNSt5dequeISt4pairIiiESaIS1_EE9push_backEOS1_(%"class.std::deque"* %6, %"struct.std::pair"* dereferenceable(8) %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZSt9make_pairIRiS0_ESt4pairINSt17__decay_and_stripIT_E6__typeENS2_IT0_E6__typeEEOS3_OS6_(i32* dereferenceable(4), i32* dereferenceable(4)) #0 comdat {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.45
  %7 = load i32, i32* @y.46
  %8 = add i32 %6, -109756494
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -109756494
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1415939285, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %65
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1415939285, label %20
    i32 -2113675396, label %28
    i32 1299419374, label %53
    i32 -1202151006, label %55
  ]

; <label>:19:                                     ; preds = %17
  br label %65

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -2113675396, i32 -1202151006
  store i32 %27, i32* %16
  br label %65

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::pair", align 4
  %30 = alloca i32*, align 8
  %31 = alloca i32*, align 8
  store i32* %0, i32** %30, align 8
  store i32* %1, i32** %31, align 8
  %32 = load i32*, i32** %30, align 8
  %33 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %32) #3
  %34 = load i32*, i32** %31, align 8
  %35 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %34) #3
  call void @_ZNSt4pairIiiEC2IRiS2_vEEOT_OT0_(%"struct.std::pair"* %29, i32* dereferenceable(4) %33, i32* dereferenceable(4) %35)
  %36 = bitcast %"struct.std::pair"* %29 to i64*
  %37 = load i64, i64* %36, align 4
  store i64 %37, i64* %3
  %38 = load i32, i32* @x.45
  %39 = load i32, i32* @y.46
  %40 = add i32 %38, -1353002855
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, -1353002855
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 1299419374, i32 -1202151006
  store i32 %52, i32* %16
  br label %65

; <label>:53:                                     ; preds = %17
  %54 = load volatile i64, i64* %3
  ret i64 %54

; <label>:55:                                     ; preds = %17
  %56 = alloca %"struct.std::pair", align 4
  %57 = alloca i32*, align 8
  %58 = alloca i32*, align 8
  store i32* %0, i32** %57, align 8
  store i32* %1, i32** %58, align 8
  %59 = load i32*, i32** %57, align 8
  %60 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %59) #3
  %61 = load i32*, i32** %58, align 8
  %62 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %61) #3
  call void @_ZNSt4pairIiiEC2IRiS2_vEEOT_OT0_(%"struct.std::pair"* %56, i32* dereferenceable(4) %60, i32* dereferenceable(4) %62)
  %63 = bitcast %"struct.std::pair"* %56 to i64*
  %64 = load i64, i64* %63, align 4
  store i32 -2113675396, i32* %16
  br label %65

; <label>:65:                                     ; preds = %55, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt5queueISt4pairIiiESt5dequeIS1_SaIS1_EEE4sizeEv(%"class.std::queue"*) #4 comdat align 2 {
  %2 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %2, align 8
  %3 = load %"class.std::queue"*, %"class.std::queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i32 0, i32 0
  %5 = call i64 @_ZNKSt5dequeISt4pairIiiESaIS1_EE4sizeEv(%"class.std::deque"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::pair"* @_ZNSt5queueISt4pairIiiESt5dequeIS1_SaIS1_EEE5frontEv(%"class.std::queue"*) #4 comdat align 2 {
  %2 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %2, align 8
  %3 = load %"class.std::queue"*, %"class.std::queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i32 0, i32 0
  %5 = call dereferenceable(8) %"struct.std::pair"* @_ZNSt5dequeISt4pairIiiESaIS1_EE5frontEv(%"class.std::deque"* %4) #3
  ret %"struct.std::pair"* %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #5

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5queueISt4pairIiiESt5dequeIS1_SaIS1_EEE3popEv(%"class.std::queue"*) #4 comdat align 2 {
  %2 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %2, align 8
  %3 = load %"class.std::queue"*, %"class.std::queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i32 0, i32 0
  call void @_ZNSt5dequeISt4pairIiiESaIS1_EE9pop_frontEv(%"class.std::deque"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.10"* @_ZNSt6vectorIS_IcSaIcEESaIS1_EEixEm(%"class.std::vector.5"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %6 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.10"*, %"class.std::vector.10"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::vector.10", %"class.std::vector.10"* %9, i64 %10
  ret %"class.std::vector.10"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) i8* @_ZNSt6vectorIcSaIcEEixEm(%"class.std::vector.10"*, i64) #4 comdat align 2 {
  %3 = alloca i8*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.55
  %7 = load i32, i32* @y.56
  %8 = add i32 %6, 1114980466
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1114980466
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -62167238, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %76
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -62167238, label %20
    i32 225464377, label %28
    i32 1645172541, label %64
    i32 -1871799262, label %66
  ]

; <label>:19:                                     ; preds = %17
  br label %76

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 225464377, i32 -1871799262
  store i32 %27, i32* %16
  br label %76

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.10"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector.10"*, %"class.std::vector.10"** %29, align 8
  %32 = bitcast %"class.std::vector.10"* %31 to %"struct.std::_Vector_base.11"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = load i64, i64* %30, align 8
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  store i8* %37, i8** %3
  %38 = load i32, i32* @x.55
  %39 = load i32, i32* @y.56
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 1645172541, i32 -1871799262
  store i32 %63, i32* %16
  br label %76

; <label>:64:                                     ; preds = %17
  %65 = load volatile i8*, i8** %3
  ret i8* %65

; <label>:66:                                     ; preds = %17
  %67 = alloca %"class.std::vector.10"*, align 8
  %68 = alloca i64, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %67, align 8
  store i64 %1, i64* %68, align 8
  %69 = load %"class.std::vector.10"*, %"class.std::vector.10"** %67, align 8
  %70 = bitcast %"class.std::vector.10"* %69 to %"struct.std::_Vector_base.11"*
  %71 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %70, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %71, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = load i64, i64* %68, align 8
  %75 = getelementptr inbounds i8, i8* %73, i64 %74
  store i32 225464377, i32* %16
  br label %76

; <label>:76:                                     ; preds = %66, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_IxSaIxEESaIS1_EEixEm(%"class.std::vector"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.57
  %7 = load i32, i32* @y.58
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -571864313, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %76
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -571864313, label %19
    i32 -2096081579, label %39
    i32 -1150632527, label %64
    i32 1857301904, label %66
  ]

; <label>:18:                                     ; preds = %16
  br label %76

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2096081579, i32 1857301904
  store i32 %38, i32* %15
  br label %76

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector"*, align 8
  %41 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"class.std::vector"*, %"class.std::vector"** %40, align 8
  %43 = bitcast %"class.std::vector"* %42 to %"struct.std::_Vector_base"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %44, i32 0, i32 0
  %46 = load %"class.std::vector.0"*, %"class.std::vector.0"** %45, align 8
  %47 = load i64, i64* %41, align 8
  %48 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %46, i64 %47
  store %"class.std::vector.0"* %48, %"class.std::vector.0"** %3
  %49 = load i32, i32* @x.57
  %50 = load i32, i32* @y.58
  %51 = sub i32 %49, -1739802304
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -1739802304
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 -1150632527, i32 1857301904
  store i32 %63, i32* %15
  br label %76

; <label>:64:                                     ; preds = %16
  %65 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %3
  ret %"class.std::vector.0"* %65

; <label>:66:                                     ; preds = %16
  %67 = alloca %"class.std::vector"*, align 8
  %68 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %67, align 8
  store i64 %1, i64* %68, align 8
  %69 = load %"class.std::vector"*, %"class.std::vector"** %67, align 8
  %70 = bitcast %"class.std::vector"* %69 to %"struct.std::_Vector_base"*
  %71 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %70, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %71, i32 0, i32 0
  %73 = load %"class.std::vector.0"*, %"class.std::vector.0"** %72, align 8
  %74 = load i64, i64* %68, align 8
  %75 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %73, i64 %74
  store i32 -2096081579, i32* %15
  br label %76

; <label>:76:                                     ; preds = %66, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"*, i64) #4 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.59
  %7 = load i32, i32* @y.60
  %8 = sub i32 %6, -1822956476
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1822956476
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1317362026, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %65
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1317362026, label %20
    i32 1060442288, label %28
    i32 1809271336, label %53
    i32 -1876466468, label %55
  ]

; <label>:19:                                     ; preds = %17
  br label %65

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1060442288, i32 -1876466468
  store i32 %27, i32* %16
  br label %65

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.0"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector.0"*, %"class.std::vector.0"** %29, align 8
  %32 = bitcast %"class.std::vector.0"* %31 to %"struct.std::_Vector_base.1"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = load i64, i64* %30, align 8
  %37 = getelementptr inbounds i64, i64* %35, i64 %36
  store i64* %37, i64** %3
  %38 = load i32, i32* @x.59
  %39 = load i32, i32* @y.60
  %40 = add i32 %38, -1461831476
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, -1461831476
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 1809271336, i32 -1876466468
  store i32 %52, i32* %16
  br label %65

; <label>:53:                                     ; preds = %17
  %54 = load volatile i64*, i64** %3
  ret i64* %54

; <label>:55:                                     ; preds = %17
  %56 = alloca %"class.std::vector.0"*, align 8
  %57 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %56, align 8
  store i64 %1, i64* %57, align 8
  %58 = load %"class.std::vector.0"*, %"class.std::vector.0"** %56, align 8
  %59 = bitcast %"class.std::vector.0"* %58 to %"struct.std::_Vector_base.1"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %59, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %60, i32 0, i32 0
  %62 = load i64*, i64** %61, align 8
  %63 = load i64, i64* %57, align 8
  %64 = getelementptr inbounds i64, i64* %62, i64 %63
  store i32 1060442288, i32* %16
  br label %65

; <label>:65:                                     ; preds = %55, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i64**
  %5 = alloca i64**
  %6 = alloca i64**
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.61
  %10 = load i32, i32* @y.62
  %11 = add i32 %9, 122560919
  %12 = sub i32 %11, 1
  %13 = sub i32 %12, 122560919
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 -1792377610, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %141
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1792377610, label %23
    i32 -648890812, label %31
    i32 1335314971, label %58
    i32 1225851952, label %61
    i32 1262539733, label %89
    i32 1478082770, label %120
    i32 2075255196, label %121
    i32 1120272244, label %125
    i32 655369979, label %128
    i32 1755607587, label %137
  ]

; <label>:22:                                     ; preds = %20
  br label %141

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 -648890812, i32 655369979
  store i32 %30, i32* %19
  br label %141

; <label>:31:                                     ; preds = %20
  %32 = alloca i64*, align 8
  store i64** %32, i64*** %6
  %33 = alloca i64*, align 8
  store i64** %33, i64*** %5
  %34 = alloca i64*, align 8
  store i64** %34, i64*** %4
  %35 = load volatile i64**, i64*** %5
  store i64* %0, i64** %35, align 8
  %36 = load volatile i64**, i64*** %4
  store i64* %1, i64** %36, align 8
  %37 = load volatile i64**, i64*** %4
  %38 = load i64*, i64** %37, align 8
  %39 = load i64, i64* %38, align 8
  %40 = load volatile i64**, i64*** %5
  %41 = load i64*, i64** %40, align 8
  %42 = load i64, i64* %41, align 8
  %43 = icmp slt i64 %39, %42
  store i1 %43, i1* %3
  %44 = load i32, i32* @x.61
  %45 = load i32, i32* @y.62
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 1335314971, i32 655369979
  store i32 %57, i32* %19
  br label %141

; <label>:58:                                     ; preds = %20
  %59 = load volatile i1, i1* %3
  %60 = select i1 %59, i32 1225851952, i32 2075255196
  store i32 %60, i32* %19
  br label %141

; <label>:61:                                     ; preds = %20
  %62 = load i32, i32* @x.61
  %63 = load i32, i32* @y.62
  %64 = sub i32 %62, 336590649
  %65 = sub i32 %64, 1
  %66 = add i32 %65, 336590649
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = xor i1 %70, true
  %73 = xor i1 %71, true
  %74 = xor i1 false, true
  %75 = and i1 %72, false
  %76 = and i1 %70, %74
  %77 = and i1 %73, false
  %78 = and i1 %71, %74
  %79 = or i1 %75, %76
  %80 = or i1 %77, %78
  %81 = xor i1 %79, %80
  %82 = or i1 %72, %73
  %83 = xor i1 %82, true
  %84 = or i1 false, %74
  %85 = and i1 %83, %84
  %86 = or i1 %81, %85
  %87 = or i1 %70, %71
  %88 = select i1 %86, i32 1262539733, i32 1755607587
  store i32 %88, i32* %19
  br label %141

; <label>:89:                                     ; preds = %20
  %90 = load volatile i64**, i64*** %4
  %91 = load i64*, i64** %90, align 8
  %92 = load volatile i64**, i64*** %6
  store i64* %91, i64** %92, align 8
  %93 = load i32, i32* @x.61
  %94 = load i32, i32* @y.62
  %95 = add i32 %93, 1672553501
  %96 = sub i32 %95, 1
  %97 = sub i32 %96, 1672553501
  %98 = sub i32 %93, 1
  %99 = mul i32 %93, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %94, 10
  %103 = xor i1 %101, true
  %104 = xor i1 %102, true
  %105 = xor i1 true, true
  %106 = and i1 %103, true
  %107 = and i1 %101, %105
  %108 = and i1 %104, true
  %109 = and i1 %102, %105
  %110 = or i1 %106, %107
  %111 = or i1 %108, %109
  %112 = xor i1 %110, %111
  %113 = or i1 %103, %104
  %114 = xor i1 %113, true
  %115 = or i1 true, %105
  %116 = and i1 %114, %115
  %117 = or i1 %112, %116
  %118 = or i1 %101, %102
  %119 = select i1 %117, i32 1478082770, i32 1755607587
  store i32 %119, i32* %19
  br label %141

; <label>:120:                                    ; preds = %20
  store i32 1120272244, i32* %19
  br label %141

; <label>:121:                                    ; preds = %20
  %122 = load volatile i64**, i64*** %5
  %123 = load i64*, i64** %122, align 8
  %124 = load volatile i64**, i64*** %6
  store i64* %123, i64** %124, align 8
  store i32 1120272244, i32* %19
  br label %141

; <label>:125:                                    ; preds = %20
  %126 = load volatile i64**, i64*** %6
  %127 = load i64*, i64** %126, align 8
  ret i64* %127

; <label>:128:                                    ; preds = %20
  %129 = alloca i64*, align 8
  %130 = alloca i64*, align 8
  %131 = alloca i64*, align 8
  store i64* %0, i64** %130, align 8
  store i64* %1, i64** %131, align 8
  %132 = load i64*, i64** %131, align 8
  %133 = load i64, i64* %132, align 8
  %134 = load i64*, i64** %130, align 8
  %135 = load i64, i64* %134, align 8
  %136 = icmp slt i64 %133, %135
  store i32 -648890812, i32* %19
  br label %141

; <label>:137:                                    ; preds = %20
  %138 = load volatile i64**, i64*** %4
  %139 = load i64*, i64** %138, align 8
  %140 = load volatile i64**, i64*** %6
  store i64* %139, i64** %140, align 8
  store i32 1262539733, i32* %19
  br label %141

; <label>:141:                                    ; preds = %137, %128, %121, %120, %89, %61, %58, %31, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZSt9make_pairIiiESt4pairINSt17__decay_and_stripIT_E6__typeENS1_IT0_E6__typeEEOS2_OS5_(i32* dereferenceable(4), i32* dereferenceable(4)) #0 comdat {
  %3 = alloca %"struct.std::pair", align 4
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %6) #3
  %8 = load i32*, i32** %5, align 8
  %9 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %8) #3
  call void @_ZNSt4pairIiiEC2IiivEEOT_OT0_(%"struct.std::pair"* %3, i32* dereferenceable(4) %7, i32* dereferenceable(4) %9)
  %10 = bitcast %"struct.std::pair"* %3 to i64*
  %11 = load i64, i64* %10, align 4
  ret i64 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IxSaIxEESaIS1_EED2Ev(%"class.std::vector"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  %10 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::vector.0"*, %"class.std::vector.0"** %12, align 8
  %14 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %14) #3
  invoke void @_ZSt8_DestroyIPSt6vectorIxSaIxEES2_EvT_S4_RSaIT0_E(%"class.std::vector.0"* %9, %"class.std::vector.0"* %13, %"class.std::allocator"* dereferenceable(1) %15)
          to label %16 unwind label %47

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.65
  %18 = load i32, i32* @y.66
  %19 = sub i32 0, 1
  %20 = add i32 %17, %19
  %21 = sub i32 %17, 1
  %22 = mul i32 %17, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %18, 10
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  br i1 %28, label %30, label %83

; <label>:30:                                     ; preds = %16, %83
  %31 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev(%"struct.std::_Vector_base"* %31) #3
  %32 = load i32, i32* @x.65
  %33 = load i32, i32* @y.66
  %34 = add i32 %32, 581411121
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 581411121
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %83

; <label>:46:                                     ; preds = %30
  ret void

; <label>:47:                                     ; preds = %1
  %48 = load i32, i32* @x.65
  %49 = load i32, i32* @y.66
  %50 = sub i32 %48, -202881338
  %51 = sub i32 %50, 1
  %52 = add i32 %51, -202881338
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  br i1 %60, label %62, label %85

; <label>:62:                                     ; preds = %47, %85
  %63 = landingpad { i8*, i32 }
          catch i8* null
  %64 = extractvalue { i8*, i32 } %63, 0
  store i8* %64, i8** %3, align 8
  %65 = extractvalue { i8*, i32 } %63, 1
  store i32 %65, i32* %4, align 4
  %66 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev(%"struct.std::_Vector_base"* %66) #3
  %67 = load i32, i32* @x.65
  %68 = load i32, i32* @y.66
  %69 = sub i32 0, 1
  %70 = add i32 %67, %69
  %71 = sub i32 %67, 1
  %72 = mul i32 %67, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %68, 10
  %76 = and i1 %74, %75
  %77 = xor i1 %74, %75
  %78 = or i1 %76, %77
  %79 = or i1 %74, %75
  br i1 %78, label %80, label %85

; <label>:80:                                     ; preds = %62
  br label %81

; <label>:81:                                     ; preds = %80
  %82 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %82) #12
  unreachable

; <label>:83:                                     ; preds = %30, %16
  %84 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev(%"struct.std::_Vector_base"* %84) #3
  br label %30

; <label>:85:                                     ; preds = %62, %47
  %86 = landingpad { i8*, i32 }
          catch i8* null
  %87 = extractvalue { i8*, i32 } %86, 0
  store i8* %87, i8** %3, align 8
  %88 = extractvalue { i8*, i32 } %86, 1
  store i32 %88, i32* %4, align 4
  %89 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev(%"struct.std::_Vector_base"* %89) #3
  br label %62
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5queueISt4pairIiiESt5dequeIS1_SaIS1_EEED2Ev(%"class.std::queue"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %2, align 8
  %3 = load %"class.std::queue"*, %"class.std::queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i32 0, i32 0
  call void @_ZNSt5dequeISt4pairIiiESaIS1_EED2Ev(%"class.std::deque"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define i64 @_Z12modfactorialx(i64) #0 {
  %2 = alloca i64
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i64 %0, i64* %4, align 8
  %5 = load i64, i64* %4, align 8
  store i64 %5, i64* %2
  %6 = alloca i32
  store i32 1655903807, i32* %6
  br label %7

; <label>:7:                                      ; preds = %1, %28
  %8 = load i32, i32* %6
  switch i32 %8, label %9 [
    i32 1655903807, label %10
    i32 1658064420, label %14
    i32 -2057948687, label %15
    i32 2106069333, label %26
  ]

; <label>:9:                                      ; preds = %7
  br label %28

; <label>:10:                                     ; preds = %7
  %11 = load volatile i64, i64* %2
  %12 = icmp eq i64 %11, 1
  %13 = select i1 %12, i32 1658064420, i32 -2057948687
  store i32 %13, i32* %6
  br label %28

; <label>:14:                                     ; preds = %7
  store i64 1, i64* %3, align 8
  store i32 2106069333, i32* %6
  br label %28

; <label>:15:                                     ; preds = %7
  %16 = load i64, i64* %4, align 8
  %17 = srem i64 %16, 1000000007
  %18 = load i64, i64* %4, align 8
  %19 = add i64 %18, 1513547868493701870
  %20 = sub i64 %19, 1
  %21 = sub i64 %20, 1513547868493701870
  %22 = sub nsw i64 %18, 1
  %23 = call i64 @_Z12modfactorialx(i64 %21)
  %24 = srem i64 %23, 1000000007
  %25 = mul nsw i64 %17, %24
  store i64 %25, i64* %3, align 8
  store i32 2106069333, i32* %6
  br label %28

; <label>:26:                                     ; preds = %7
  %27 = load i64, i64* %3, align 8
  ret i64 %27

; <label>:28:                                     ; preds = %15, %14, %10, %9
  br label %7
}

; Function Attrs: noinline uwtable
define i64 @_Z3gcdxx(i64, i64) #0 {
  %3 = alloca i1
  %4 = alloca i64*
  %5 = alloca i64*
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.71
  %10 = load i32, i32* @y.72
  %11 = add i32 %9, 878030568
  %12 = sub i32 %11, 1
  %13 = sub i32 %12, 878030568
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 -118894895, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %118
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -118894895, label %23
    i32 1517555985, label %43
    i32 2129935357, label %70
    i32 -1459358650, label %73
    i32 -1818695383, label %77
    i32 -2009695819, label %87
    i32 1517805738, label %90
  ]

; <label>:22:                                     ; preds = %20
  br label %118

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 false, true
  %29 = and i1 %26, false
  %30 = and i1 %24, %28
  %31 = and i1 %27, false
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 false, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 1517555985, i32 1517805738
  store i32 %42, i32* %19
  br label %118

; <label>:43:                                     ; preds = %20
  %44 = alloca i64, align 8
  store i64* %44, i64** %6
  %45 = alloca i64, align 8
  store i64* %45, i64** %5
  %46 = alloca i64, align 8
  store i64* %46, i64** %4
  %47 = load volatile i64*, i64** %5
  store i64 %0, i64* %47, align 8
  %48 = load volatile i64*, i64** %4
  store i64 %1, i64* %48, align 8
  %49 = load volatile i64*, i64** %5
  %50 = load i64, i64* %49, align 8
  %51 = load volatile i64*, i64** %4
  %52 = load i64, i64* %51, align 8
  %53 = srem i64 %50, %52
  %54 = icmp eq i64 %53, 0
  store i1 %54, i1* %3
  %55 = load i32, i32* @x.71
  %56 = load i32, i32* @y.72
  %57 = add i32 %55, -2145510294
  %58 = sub i32 %57, 1
  %59 = sub i32 %58, -2145510294
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  %69 = select i1 %67, i32 2129935357, i32 1517805738
  store i32 %69, i32* %19
  br label %118

; <label>:70:                                     ; preds = %20
  %71 = load volatile i1, i1* %3
  %72 = select i1 %71, i32 -1459358650, i32 -1818695383
  store i32 %72, i32* %19
  br label %118

; <label>:73:                                     ; preds = %20
  %74 = load volatile i64*, i64** %4
  %75 = load i64, i64* %74, align 8
  %76 = load volatile i64*, i64** %6
  store i64 %75, i64* %76, align 8
  store i32 -2009695819, i32* %19
  br label %118

; <label>:77:                                     ; preds = %20
  %78 = load volatile i64*, i64** %4
  %79 = load i64, i64* %78, align 8
  %80 = load volatile i64*, i64** %5
  %81 = load i64, i64* %80, align 8
  %82 = load volatile i64*, i64** %4
  %83 = load i64, i64* %82, align 8
  %84 = srem i64 %81, %83
  %85 = call i64 @_Z3gcdxx(i64 %79, i64 %84)
  %86 = load volatile i64*, i64** %6
  store i64 %85, i64* %86, align 8
  store i32 -2009695819, i32* %19
  br label %118

; <label>:87:                                     ; preds = %20
  %88 = load volatile i64*, i64** %6
  %89 = load i64, i64* %88, align 8
  ret i64 %89

; <label>:90:                                     ; preds = %20
  %91 = alloca i64, align 8
  %92 = alloca i64, align 8
  %93 = alloca i64, align 8
  store i64 %0, i64* %92, align 8
  store i64 %1, i64* %93, align 8
  %94 = load i64, i64* %92, align 8
  %95 = load i64, i64* %93, align 8
  %96 = sub i64 0, %95
  %97 = add i64 %94, %96
  %98 = sub i64 %94, %95
  %99 = mul i64 %97, %95
  %100 = sub i64 0, 7944568907644006817
  %101 = sub i64 %100, %94
  %102 = add i64 %101, 7944568907644006817
  %103 = sub i64 0, %94
  %104 = sub i64 0, %95
  %105 = sub i64 %102, %104
  %106 = add i64 %102, %95
  %107 = shl i64 %94, %95
  %108 = add i64 %94, -8193575460165604462
  %109 = sub i64 %108, %95
  %110 = sub i64 %109, -8193575460165604462
  %111 = sub i64 %94, %95
  %112 = mul i64 %110, %95
  %113 = shl i64 %94, %95
  %114 = shl i64 %94, %95
  %115 = shl i64 %94, %95
  %116 = srem i64 %94, %95
  %117 = icmp eq i64 %116, 0
  store i32 1517555985, i32* %19
  br label %118

; <label>:118:                                    ; preds = %90, %77, %73, %70, %43, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define i64 @_Z3lcmxx(i64, i64) #0 {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.73
  %7 = load i32, i32* @y.74
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -2004088088, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %126
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2004088088, label %19
    i32 1578283598, label %27
    i32 1853468051, label %63
    i32 1546698660, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %126

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1578283598, i32 1546698660
  store i32 %26, i32* %15
  br label %126

; <label>:27:                                     ; preds = %16
  %28 = alloca i64, align 8
  %29 = alloca i64, align 8
  store i64 %0, i64* %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load i64, i64* %28, align 8
  %31 = load i64, i64* %28, align 8
  %32 = load i64, i64* %29, align 8
  %33 = call i64 @_Z3gcdxx(i64 %31, i64 %32)
  %34 = sdiv i64 %30, %33
  %35 = load i64, i64* %29, align 8
  %36 = mul nsw i64 %34, %35
  store i64 %36, i64* %3
  %37 = load i32, i32* @x.73
  %38 = load i32, i32* @y.74
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 1853468051, i32 1546698660
  store i32 %62, i32* %15
  br label %126

; <label>:63:                                     ; preds = %16
  %64 = load volatile i64, i64* %3
  ret i64 %64

; <label>:65:                                     ; preds = %16
  %66 = alloca i64, align 8
  %67 = alloca i64, align 8
  store i64 %0, i64* %66, align 8
  store i64 %1, i64* %67, align 8
  %68 = load i64, i64* %66, align 8
  %69 = load i64, i64* %66, align 8
  %70 = load i64, i64* %67, align 8
  %71 = call i64 @_Z3gcdxx(i64 %69, i64 %70)
  %72 = sub i64 0, %71
  %73 = add i64 %68, %72
  %74 = sub i64 %68, %71
  %75 = mul i64 %73, %71
  %76 = shl i64 %68, %71
  %77 = sub i64 0, %71
  %78 = add i64 %68, %77
  %79 = sub i64 %68, %71
  %80 = mul i64 %78, %71
  %81 = shl i64 %68, %71
  %82 = sdiv i64 %68, %71
  %83 = load i64, i64* %67, align 8
  %84 = add i64 %82, 8759379554488972285
  %85 = sub i64 %84, %83
  %86 = sub i64 %85, 8759379554488972285
  %87 = sub i64 %82, %83
  %88 = mul i64 %86, %83
  %89 = sub i64 0, 7043231449344619458
  %90 = sub i64 %89, %82
  %91 = add i64 %90, 7043231449344619458
  %92 = sub i64 0, %82
  %93 = add i64 %91, 5475953651585796836
  %94 = add i64 %93, %83
  %95 = sub i64 %94, 5475953651585796836
  %96 = add i64 %91, %83
  %97 = add i64 0, 3675902731347634683
  %98 = sub i64 %97, %82
  %99 = sub i64 %98, 3675902731347634683
  %100 = sub i64 0, %82
  %101 = sub i64 0, %99
  %102 = sub i64 0, %83
  %103 = add i64 %101, %102
  %104 = sub i64 0, %103
  %105 = add i64 %99, %83
  %106 = sub i64 %82, 6350424180149197381
  %107 = sub i64 %106, %83
  %108 = add i64 %107, 6350424180149197381
  %109 = sub i64 %82, %83
  %110 = mul i64 %108, %83
  %111 = shl i64 %82, %83
  %112 = add i64 0, -1262834757699720481
  %113 = sub i64 %112, %82
  %114 = sub i64 %113, -1262834757699720481
  %115 = sub i64 0, %82
  %116 = add i64 %114, 6580830554887120672
  %117 = add i64 %116, %83
  %118 = sub i64 %117, 6580830554887120672
  %119 = add i64 %114, %83
  %120 = sub i64 %82, 5549225333586450178
  %121 = sub i64 %120, %83
  %122 = add i64 %121, 5549225333586450178
  %123 = sub i64 %82, %83
  %124 = mul i64 %122, %83
  %125 = mul nsw i64 %82, %83
  store i32 1578283598, i32* %15
  br label %126

; <label>:126:                                    ; preds = %65, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define void @_Z12prime_factorx(%"class.std::map"* noalias sret, i64) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca i1, align 1
  %5 = alloca i64, align 8
  %6 = alloca i8*
  %7 = alloca i32
  store i64 %1, i64* %3, align 8
  store i1 false, i1* %4, align 1
  call void @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEEC2Ev(%"class.std::map"* %0) #3
  store i64 2, i64* %5, align 8
  br label %8

; <label>:8:                                      ; preds = %122, %2
  %9 = load i32, i32* @x.75
  %10 = load i32, i32* @y.76
  %11 = sub i32 %9, 2143868942
  %12 = sub i32 %11, 1
  %13 = add i32 %12, 2143868942
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %10, 10
  %19 = xor i1 %17, true
  %20 = xor i1 %18, true
  %21 = xor i1 true, true
  %22 = and i1 %19, true
  %23 = and i1 %17, %21
  %24 = and i1 %20, true
  %25 = and i1 %18, %21
  %26 = or i1 %22, %23
  %27 = or i1 %24, %25
  %28 = xor i1 %26, %27
  %29 = or i1 %19, %20
  %30 = xor i1 %29, true
  %31 = or i1 true, %21
  %32 = and i1 %30, %31
  %33 = or i1 %28, %32
  %34 = or i1 %17, %18
  br i1 %33, label %35, label %220

; <label>:35:                                     ; preds = %8, %220
  %36 = load i64, i64* %5, align 8
  %37 = load i64, i64* %5, align 8
  %38 = mul nsw i64 %36, %37
  %39 = load i64, i64* %3, align 8
  %40 = icmp sle i64 %38, %39
  %41 = load i32, i32* @x.75
  %42 = load i32, i32* @y.76
  %43 = add i32 %41, -940165123
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -940165123
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  br i1 %53, label %55, label %220

; <label>:55:                                     ; preds = %35
  br i1 %40, label %56, label %123

; <label>:56:                                     ; preds = %55
  br label %57

; <label>:57:                                     ; preds = %64, %56
  %58 = load i64, i64* %3, align 8
  %59 = load i64, i64* %5, align 8
  %60 = srem i64 %58, %59
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %76

; <label>:62:                                     ; preds = %57
  %63 = invoke dereferenceable(8) i64* @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEEixERS3_(%"class.std::map"* %0, i64* dereferenceable(8) %5)
          to label %64 unwind label %72

; <label>:64:                                     ; preds = %62
  %65 = load i64, i64* %63, align 8
  %66 = sub i64 0, 1
  %67 = sub i64 %65, %66
  %68 = add nsw i64 %65, 1
  store i64 %67, i64* %63, align 8
  %69 = load i64, i64* %5, align 8
  %70 = load i64, i64* %3, align 8
  %71 = sdiv i64 %70, %69
  store i64 %71, i64* %3, align 8
  br label %57

; <label>:72:                                     ; preds = %155, %62
  %73 = landingpad { i8*, i32 }
          cleanup
  %74 = extractvalue { i8*, i32 } %73, 0
  store i8* %74, i8** %6, align 8
  %75 = extractvalue { i8*, i32 } %73, 1
  store i32 %75, i32* %7, align 4
  call void @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEED2Ev(%"class.std::map"* %0) #3
  br label %215

; <label>:76:                                     ; preds = %57
  br label %77

; <label>:77:                                     ; preds = %76
  %78 = load i32, i32* @x.75
  %79 = load i32, i32* @y.76
  %80 = sub i32 0, 1
  %81 = add i32 %78, %80
  %82 = sub i32 %78, 1
  %83 = mul i32 %78, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %79, 10
  %87 = and i1 %85, %86
  %88 = xor i1 %85, %86
  %89 = or i1 %87, %88
  %90 = or i1 %85, %86
  br i1 %89, label %91, label %241

; <label>:91:                                     ; preds = %77, %241
  %92 = load i64, i64* %5, align 8
  %93 = sub i64 0, 1
  %94 = sub i64 %92, %93
  %95 = add nsw i64 %92, 1
  store i64 %94, i64* %5, align 8
  %96 = load i32, i32* @x.75
  %97 = load i32, i32* @y.76
  %98 = add i32 %96, -2046608446
  %99 = sub i32 %98, 1
  %100 = sub i32 %99, -2046608446
  %101 = sub i32 %96, 1
  %102 = mul i32 %96, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %97, 10
  %106 = xor i1 %104, true
  %107 = xor i1 %105, true
  %108 = xor i1 true, true
  %109 = and i1 %106, true
  %110 = and i1 %104, %108
  %111 = and i1 %107, true
  %112 = and i1 %105, %108
  %113 = or i1 %109, %110
  %114 = or i1 %111, %112
  %115 = xor i1 %113, %114
  %116 = or i1 %106, %107
  %117 = xor i1 %116, true
  %118 = or i1 true, %108
  %119 = and i1 %117, %118
  %120 = or i1 %115, %119
  %121 = or i1 %104, %105
  br i1 %120, label %122, label %241

; <label>:122:                                    ; preds = %91
  br label %8

; <label>:123:                                    ; preds = %55
  %124 = load i32, i32* @x.75
  %125 = load i32, i32* @y.76
  %126 = sub i32 0, 1
  %127 = add i32 %124, %126
  %128 = sub i32 %124, 1
  %129 = mul i32 %124, %127
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %125, 10
  %133 = and i1 %131, %132
  %134 = xor i1 %131, %132
  %135 = or i1 %133, %134
  %136 = or i1 %131, %132
  br i1 %135, label %137, label %267

; <label>:137:                                    ; preds = %123, %267
  %138 = load i64, i64* %3, align 8
  %139 = icmp ne i64 %138, 1
  %140 = load i32, i32* @x.75
  %141 = load i32, i32* @y.76
  %142 = add i32 %140, -279332674
  %143 = sub i32 %142, 1
  %144 = sub i32 %143, -279332674
  %145 = sub i32 %140, 1
  %146 = mul i32 %140, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %141, 10
  %150 = and i1 %148, %149
  %151 = xor i1 %148, %149
  %152 = or i1 %150, %151
  %153 = or i1 %148, %149
  br i1 %152, label %154, label %267

; <label>:154:                                    ; preds = %137
  br i1 %139, label %155, label %158

; <label>:155:                                    ; preds = %154
  %156 = invoke dereferenceable(8) i64* @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEEixERS3_(%"class.std::map"* %0, i64* dereferenceable(8) %3)
          to label %157 unwind label %72

; <label>:157:                                    ; preds = %155
  store i64 1, i64* %156, align 8
  br label %158

; <label>:158:                                    ; preds = %157, %154
  store i1 true, i1* %4, align 1
  %159 = load i1, i1* %4, align 1
  br i1 %159, label %161, label %160

; <label>:160:                                    ; preds = %158
  call void @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEED2Ev(%"class.std::map"* %0) #3
  br label %161

; <label>:161:                                    ; preds = %160, %158
  %162 = load i32, i32* @x.75
  %163 = load i32, i32* @y.76
  %164 = sub i32 0, 1
  %165 = add i32 %162, %164
  %166 = sub i32 %162, 1
  %167 = mul i32 %162, %165
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %163, 10
  %171 = xor i1 %169, true
  %172 = xor i1 %170, true
  %173 = xor i1 false, true
  %174 = and i1 %171, false
  %175 = and i1 %169, %173
  %176 = and i1 %172, false
  %177 = and i1 %170, %173
  %178 = or i1 %174, %175
  %179 = or i1 %176, %177
  %180 = xor i1 %178, %179
  %181 = or i1 %171, %172
  %182 = xor i1 %181, true
  %183 = or i1 false, %173
  %184 = and i1 %182, %183
  %185 = or i1 %180, %184
  %186 = or i1 %169, %170
  br i1 %185, label %187, label %270

; <label>:187:                                    ; preds = %161, %270
  %188 = load i32, i32* @x.75
  %189 = load i32, i32* @y.76
  %190 = add i32 %188, -1647014697
  %191 = sub i32 %190, 1
  %192 = sub i32 %191, -1647014697
  %193 = sub i32 %188, 1
  %194 = mul i32 %188, %192
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %189, 10
  %198 = xor i1 %196, true
  %199 = xor i1 %197, true
  %200 = xor i1 false, true
  %201 = and i1 %198, false
  %202 = and i1 %196, %200
  %203 = and i1 %199, false
  %204 = and i1 %197, %200
  %205 = or i1 %201, %202
  %206 = or i1 %203, %204
  %207 = xor i1 %205, %206
  %208 = or i1 %198, %199
  %209 = xor i1 %208, true
  %210 = or i1 false, %200
  %211 = and i1 %209, %210
  %212 = or i1 %207, %211
  %213 = or i1 %196, %197
  br i1 %212, label %214, label %270

; <label>:214:                                    ; preds = %187
  ret void

; <label>:215:                                    ; preds = %72
  %216 = load i8*, i8** %6, align 8
  %217 = load i32, i32* %7, align 4
  %218 = insertvalue { i8*, i32 } undef, i8* %216, 0
  %219 = insertvalue { i8*, i32 } %218, i32 %217, 1
  resume { i8*, i32 } %219

; <label>:220:                                    ; preds = %35, %8
  %221 = load i64, i64* %5, align 8
  %222 = load i64, i64* %5, align 8
  %223 = add i64 0, -3444242052369671621
  %224 = sub i64 %223, %221
  %225 = sub i64 %224, -3444242052369671621
  %226 = sub i64 0, %221
  %227 = sub i64 0, %225
  %228 = sub i64 0, %222
  %229 = add i64 %227, %228
  %230 = sub i64 0, %229
  %231 = add i64 %225, %222
  %232 = shl i64 %221, %222
  %233 = add i64 %221, 5572850446259283234
  %234 = sub i64 %233, %222
  %235 = sub i64 %234, 5572850446259283234
  %236 = sub i64 %221, %222
  %237 = mul i64 %235, %222
  %238 = mul nsw i64 %221, %222
  %239 = load i64, i64* %3, align 8
  %240 = icmp sle i64 %238, %239
  br label %35

; <label>:241:                                    ; preds = %91, %77
  %242 = load i64, i64* %5, align 8
  %243 = add i64 0, -2252723533913336338
  %244 = sub i64 %243, %242
  %245 = sub i64 %244, -2252723533913336338
  %246 = sub i64 0, %242
  %247 = sub i64 0, 1
  %248 = sub i64 %245, %247
  %249 = add i64 %245, 1
  %250 = add i64 %242, -2185800043368505463
  %251 = sub i64 %250, 1
  %252 = sub i64 %251, -2185800043368505463
  %253 = sub i64 %242, 1
  %254 = mul i64 %252, 1
  %255 = shl i64 %242, 1
  %256 = add i64 0, 2840652398728053801
  %257 = sub i64 %256, %242
  %258 = sub i64 %257, 2840652398728053801
  %259 = sub i64 0, %242
  %260 = sub i64 0, 1
  %261 = sub i64 %258, %260
  %262 = add i64 %258, 1
  %263 = add i64 %242, -7521969481094934468
  %264 = add i64 %263, 1
  %265 = sub i64 %264, -7521969481094934468
  %266 = add nsw i64 %242, 1
  store i64 %265, i64* %5, align 8
  br label %91

; <label>:267:                                    ; preds = %137, %123
  %268 = load i64, i64* %3, align 8
  %269 = icmp ne i64 %268, 1
  br label %137

; <label>:270:                                    ; preds = %187, %161
  br label %187
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEEC2Ev(%"class.std::map"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::map"*, align 8
  store %"class.std::map"* %0, %"class.std::map"** %2, align 8
  %3 = load %"class.std::map"*, %"class.std::map"** %2, align 8
  %4 = getelementptr inbounds %"class.std::map", %"class.std::map"* %3, i32 0, i32 0
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EEC2Ev(%"class.std::_Rb_tree"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #12
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEEixERS3_(%"class.std::map"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.std::map"*
  %4 = alloca %"class.std::map"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %7 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %8 = alloca %"struct.std::less", align 1
  %9 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %10 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %11 = alloca %"class.std::tuple", align 8
  %12 = alloca %"class.std::tuple.50", align 1
  store %"class.std::map"* %0, %"class.std::map"** %4, align 8
  store i64* %1, i64** %5, align 8
  %13 = load %"class.std::map"*, %"class.std::map"** %4, align 8
  store %"class.std::map"* %13, %"class.std::map"** %3
  %14 = load i64*, i64** %5, align 8
  %15 = load volatile %"class.std::map"*, %"class.std::map"** %3
  %16 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEE11lower_boundERS3_(%"class.std::map"* %15, i64* dereferenceable(8) %14)
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %6, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %16, %"struct.std::_Rb_tree_node_base"** %17, align 8
  %18 = load volatile %"class.std::map"*, %"class.std::map"** %3
  %19 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEE3endEv(%"class.std::map"* %18) #3
  %20 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %7, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %19, %"struct.std::_Rb_tree_node_base"** %20, align 8
  %21 = alloca i32
  store i32 2021800360, i32* %21
  %22 = alloca i1
  br label %23

; <label>:23:                                     ; preds = %2, %51
  %24 = load i32, i32* %21
  switch i32 %24, label %25 [
    i32 2021800360, label %26
    i32 -1012293054, label %29
    i32 120762049, label %35
    i32 -475971567, label %38
    i32 1526066348, label %48
  ]

; <label>:25:                                     ; preds = %23
  br label %51

; <label>:26:                                     ; preds = %23
  %27 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEeqERKS3_(%"struct.std::_Rb_tree_iterator"* %6, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %7) #3
  %28 = select i1 %27, i32 120762049, i32 -1012293054
  store i32 %28, i32* %21
  store i1 true, i1* %22
  br label %51

; <label>:29:                                     ; preds = %23
  %30 = load volatile %"class.std::map"*, %"class.std::map"** %3
  call void @_ZNKSt3mapIxxSt4lessIxESaISt4pairIKxxEEE8key_compEv(%"class.std::map"* %30)
  %31 = load i64*, i64** %5, align 8
  %32 = call dereferenceable(16) %"struct.std::pair.44"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEdeEv(%"struct.std::_Rb_tree_iterator"* %6) #3
  %33 = getelementptr inbounds %"struct.std::pair.44", %"struct.std::pair.44"* %32, i32 0, i32 0
  %34 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %8, i64* dereferenceable(8) %31, i64* dereferenceable(8) %33)
  store i32 120762049, i32* %21
  store i1 %34, i1* %22
  br label %51

; <label>:35:                                     ; preds = %23
  %36 = load i1, i1* %22
  %37 = select i1 %36, i32 -475971567, i32 1526066348
  store i32 %37, i32* %21
  br label %51

; <label>:38:                                     ; preds = %23
  %39 = load volatile %"class.std::map"*, %"class.std::map"** %3
  %40 = getelementptr inbounds %"class.std::map", %"class.std::map"* %39, i32 0, i32 0
  call void @_ZNSt23_Rb_tree_const_iteratorISt4pairIKxxEEC2ERKSt17_Rb_tree_iteratorIS2_E(%"struct.std::_Rb_tree_const_iterator"* %10, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %6) #3
  %41 = load i64*, i64** %5, align 8
  call void @_ZNSt5tupleIJRKxEEC2ES1_(%"class.std::tuple"* %11, i64* dereferenceable(8) %41)
  %42 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %10, i32 0, i32 0
  %43 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %42, align 8
  %44 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_(%"class.std::_Rb_tree"* %40, %"struct.std::_Rb_tree_node_base"* %43, %"struct.std::piecewise_construct_t"* dereferenceable(1) @_ZStL19piecewise_construct, %"class.std::tuple"* dereferenceable(8) %11, %"class.std::tuple.50"* dereferenceable(1) %12)
  %45 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %9, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %44, %"struct.std::_Rb_tree_node_base"** %45, align 8
  %46 = bitcast %"struct.std::_Rb_tree_iterator"* %6 to i8*
  %47 = bitcast %"struct.std::_Rb_tree_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 8, i32 8, i1 false)
  store i32 1526066348, i32* %21
  br label %51

; <label>:48:                                     ; preds = %23
  %49 = call dereferenceable(16) %"struct.std::pair.44"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEdeEv(%"struct.std::_Rb_tree_iterator"* %6) #3
  %50 = getelementptr inbounds %"struct.std::pair.44", %"struct.std::pair.44"* %49, i32 0, i32 1
  ret i64* %50

; <label>:51:                                     ; preds = %38, %35, %29, %26, %25
  br label %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEED2Ev(%"class.std::map"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.81
  %5 = load i32, i32* @y.82
  %6 = add i32 %4, 756121309
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 756121309
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 839101235, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %49
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 839101235, label %18
    i32 724446688, label %26
    i32 -588783126, label %44
    i32 785624826, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %49

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 724446688, i32 785624826
  store i32 %25, i32* %14
  br label %49

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::map"*, align 8
  store %"class.std::map"* %0, %"class.std::map"** %27, align 8
  %28 = load %"class.std::map"*, %"class.std::map"** %27, align 8
  %29 = getelementptr inbounds %"class.std::map", %"class.std::map"* %28, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EED2Ev(%"class.std::_Rb_tree"* %29) #3
  %30 = load i32, i32* @x.81
  %31 = load i32, i32* @y.82
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -588783126, i32 785624826
  store i32 %43, i32* %14
  br label %49

; <label>:44:                                     ; preds = %15
  ret void

; <label>:45:                                     ; preds = %15
  %46 = alloca %"class.std::map"*, align 8
  store %"class.std::map"* %0, %"class.std::map"** %46, align 8
  %47 = load %"class.std::map"*, %"class.std::map"** %46, align 8
  %48 = getelementptr inbounds %"class.std::map", %"class.std::map"* %47, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EED2Ev(%"class.std::_Rb_tree"* %48) #3
  store i32 724446688, i32* %14
  br label %49

; <label>:49:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define void @_Z8dijkstraRKSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEiRS_IxSaIxEES9_(%"class.std::vector.21"* dereferenceable(24), i32, %"class.std::vector.0"* dereferenceable(24), %"class.std::vector.0"* dereferenceable(24)) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.21"*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca %"class.std::vector.0"*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca %"class.std::priority_queue", align 8
  %12 = alloca %"struct.std::greater", align 1
  %13 = alloca %"class.std::vector.31", align 8
  %14 = alloca i8*
  %15 = alloca i32
  %16 = alloca %"struct.std::pair.36", align 8
  %17 = alloca i32, align 4
  %18 = alloca %"class.std::vector.26"*, align 8
  %19 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %20 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %21 = alloca %struct.Edge*, align 8
  store %"class.std::vector.21"* %0, %"class.std::vector.21"** %5, align 8
  store i32 %1, i32* %6, align 4
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %7, align 8
  store %"class.std::vector.0"* %3, %"class.std::vector.0"** %8, align 8
  %22 = load %"class.std::vector.21"*, %"class.std::vector.21"** %5, align 8
  %23 = call i64 @_ZNKSt6vectorIS_I4EdgeSaIS0_EESaIS2_EE4sizeEv(%"class.std::vector.21"* %22) #3
  %24 = trunc i64 %23 to i32
  store i32 %24, i32* %9, align 4
  %25 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %26 = load i32, i32* %9, align 4
  %27 = sext i32 %26 to i64
  call void @_ZNSt6vectorIxSaIxEE6resizeEmRKx(%"class.std::vector.0"* %25, i64 %27, i64* dereferenceable(8) @_ZL3INF)
  %28 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  %29 = load i32, i32* %9, align 4
  %30 = sext i32 %29 to i64
  store i64 -1, i64* %10, align 8
  call void @_ZNSt6vectorIxSaIxEE6resizeEmRKx(%"class.std::vector.0"* %28, i64 %30, i64* dereferenceable(8) %10)
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EEC2Ev(%"class.std::vector.31"* %13) #3
  invoke void @_ZNSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EEC2ERKS6_OS4_(%"class.std::priority_queue"* %11, %"struct.std::greater"* dereferenceable(1) %12, %"class.std::vector.31"* dereferenceable(24) %13)
          to label %31 unwind label %203

; <label>:31:                                     ; preds = %4
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EED2Ev(%"class.std::vector.31"* %13) #3
  %32 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %33 = load i32, i32* %6, align 4
  %34 = sext i32 %33 to i64
  %35 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %32, i64 %34) #3
  store i64 0, i64* %35, align 8
  %36 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %37 = load i32, i32* %6, align 4
  %38 = sext i32 %37 to i64
  %39 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %36, i64 %38) #3
  invoke void @_ZNSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EE7emplaceIJRxRiEEEvDpOT_(%"class.std::priority_queue"* %11, i64* dereferenceable(8) %39, i32* dereferenceable(4) %6)
          to label %40 unwind label %207

; <label>:40:                                     ; preds = %31
  br label %41

; <label>:41:                                     ; preds = %443, %202, %40
  %42 = invoke zeroext i1 @_ZNKSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EE5emptyEv(%"class.std::priority_queue"* %11)
          to label %43 unwind label %207

; <label>:43:                                     ; preds = %41
  %44 = load i32, i32* @x.83
  %45 = load i32, i32* @y.84
  %46 = sub i32 %44, 2018009301
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 2018009301
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  br i1 %68, label %70, label %480

; <label>:70:                                     ; preds = %43, %480
  %71 = xor i1 %42, true
  %72 = and i1 true, %71
  %73 = xor i1 true, true
  %74 = and i1 %42, %73
  %75 = or i1 %72, %74
  %76 = xor i1 %42, true
  %77 = load i32, i32* @x.83
  %78 = load i32, i32* @y.84
  %79 = sub i32 %77, 1993721607
  %80 = sub i32 %79, 1
  %81 = add i32 %80, 1993721607
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = and i1 %85, %86
  %88 = xor i1 %85, %86
  %89 = or i1 %87, %88
  %90 = or i1 %85, %86
  br i1 %89, label %91, label %480

; <label>:91:                                     ; preds = %70
  br i1 %75, label %92, label %444

; <label>:92:                                     ; preds = %91
  %93 = invoke dereferenceable(16) %"struct.std::pair.36"* @_ZNKSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EE3topEv(%"class.std::priority_queue"* %11)
          to label %94 unwind label %207

; <label>:94:                                     ; preds = %92
  %95 = bitcast %"struct.std::pair.36"* %16 to i8*
  %96 = bitcast %"struct.std::pair.36"* %93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* %96, i64 16, i32 8, i1 false)
  invoke void @_ZNSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EE3popEv(%"class.std::priority_queue"* %11)
          to label %97 unwind label %207

; <label>:97:                                     ; preds = %94
  %98 = load i32, i32* @x.83
  %99 = load i32, i32* @y.84
  %100 = sub i32 0, 1
  %101 = add i32 %98, %100
  %102 = sub i32 %98, 1
  %103 = mul i32 %98, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %99, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  br i1 %109, label %111, label %529

; <label>:111:                                    ; preds = %97, %529
  %112 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %16, i32 0, i32 1
  %113 = load i64, i64* %112, align 8
  %114 = trunc i64 %113 to i32
  store i32 %114, i32* %17, align 4
  %115 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %116 = load i32, i32* %17, align 4
  %117 = sext i32 %116 to i64
  %118 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %115, i64 %117) #3
  %119 = load i64, i64* %118, align 8
  %120 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %16, i32 0, i32 0
  %121 = load i64, i64* %120, align 8
  %122 = icmp slt i64 %119, %121
  %123 = load i32, i32* @x.83
  %124 = load i32, i32* @y.84
  %125 = sub i32 0, 1
  %126 = add i32 %123, %125
  %127 = sub i32 %123, 1
  %128 = mul i32 %123, %126
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %124, 10
  %132 = xor i1 %130, true
  %133 = xor i1 %131, true
  %134 = xor i1 false, true
  %135 = and i1 %132, false
  %136 = and i1 %130, %134
  %137 = and i1 %133, false
  %138 = and i1 %131, %134
  %139 = or i1 %135, %136
  %140 = or i1 %137, %138
  %141 = xor i1 %139, %140
  %142 = or i1 %132, %133
  %143 = xor i1 %142, true
  %144 = or i1 false, %134
  %145 = and i1 %143, %144
  %146 = or i1 %141, %145
  %147 = or i1 %130, %131
  br i1 %146, label %148, label %529

; <label>:148:                                    ; preds = %111
  br i1 %122, label %149, label %211

; <label>:149:                                    ; preds = %148
  %150 = load i32, i32* @x.83
  %151 = load i32, i32* @y.84
  %152 = add i32 %150, -1031443277
  %153 = sub i32 %152, 1
  %154 = sub i32 %153, -1031443277
  %155 = sub i32 %150, 1
  %156 = mul i32 %150, %154
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %151, 10
  %160 = xor i1 %158, true
  %161 = xor i1 %159, true
  %162 = xor i1 false, true
  %163 = and i1 %160, false
  %164 = and i1 %158, %162
  %165 = and i1 %161, false
  %166 = and i1 %159, %162
  %167 = or i1 %163, %164
  %168 = or i1 %165, %166
  %169 = xor i1 %167, %168
  %170 = or i1 %160, %161
  %171 = xor i1 %170, true
  %172 = or i1 false, %162
  %173 = and i1 %171, %172
  %174 = or i1 %169, %173
  %175 = or i1 %158, %159
  br i1 %174, label %176, label %541

; <label>:176:                                    ; preds = %149, %541
  %177 = load i32, i32* @x.83
  %178 = load i32, i32* @y.84
  %179 = sub i32 0, 1
  %180 = add i32 %177, %179
  %181 = sub i32 %177, 1
  %182 = mul i32 %177, %180
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %178, 10
  %186 = xor i1 %184, true
  %187 = xor i1 %185, true
  %188 = xor i1 false, true
  %189 = and i1 %186, false
  %190 = and i1 %184, %188
  %191 = and i1 %187, false
  %192 = and i1 %185, %188
  %193 = or i1 %189, %190
  %194 = or i1 %191, %192
  %195 = xor i1 %193, %194
  %196 = or i1 %186, %187
  %197 = xor i1 %196, true
  %198 = or i1 false, %188
  %199 = and i1 %197, %198
  %200 = or i1 %195, %199
  %201 = or i1 %184, %185
  br i1 %200, label %202, label %541

; <label>:202:                                    ; preds = %176
  br label %41

; <label>:203:                                    ; preds = %4
  %204 = landingpad { i8*, i32 }
          cleanup
  %205 = extractvalue { i8*, i32 } %204, 0
  store i8* %205, i8** %14, align 8
  %206 = extractvalue { i8*, i32 } %204, 1
  store i32 %206, i32* %15, align 4
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EED2Ev(%"class.std::vector.31"* %13) #3
  br label %475

; <label>:207:                                    ; preds = %397, %94, %92, %41, %31
  %208 = landingpad { i8*, i32 }
          cleanup
  %209 = extractvalue { i8*, i32 } %208, 0
  store i8* %209, i8** %14, align 8
  %210 = extractvalue { i8*, i32 } %208, 1
  store i32 %210, i32* %15, align 4
  call void @_ZNSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EED2Ev(%"class.std::priority_queue"* %11) #3
  br label %475

; <label>:211:                                    ; preds = %148
  %212 = load i32, i32* @x.83
  %213 = load i32, i32* @y.84
  %214 = sub i32 0, 1
  %215 = add i32 %212, %214
  %216 = sub i32 %212, 1
  %217 = mul i32 %212, %215
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %213, 10
  %221 = xor i1 %219, true
  %222 = xor i1 %220, true
  %223 = xor i1 false, true
  %224 = and i1 %221, false
  %225 = and i1 %219, %223
  %226 = and i1 %222, false
  %227 = and i1 %220, %223
  %228 = or i1 %224, %225
  %229 = or i1 %226, %227
  %230 = xor i1 %228, %229
  %231 = or i1 %221, %222
  %232 = xor i1 %231, true
  %233 = or i1 false, %223
  %234 = and i1 %232, %233
  %235 = or i1 %230, %234
  %236 = or i1 %219, %220
  br i1 %235, label %237, label %542

; <label>:237:                                    ; preds = %211, %542
  %238 = load %"class.std::vector.21"*, %"class.std::vector.21"** %5, align 8
  %239 = load i32, i32* %17, align 4
  %240 = sext i32 %239 to i64
  %241 = call dereferenceable(24) %"class.std::vector.26"* @_ZNKSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEixEm(%"class.std::vector.21"* %238, i64 %240) #3
  store %"class.std::vector.26"* %241, %"class.std::vector.26"** %18, align 8
  %242 = load %"class.std::vector.26"*, %"class.std::vector.26"** %18, align 8
  %243 = call %struct.Edge* @_ZNKSt6vectorI4EdgeSaIS0_EE5beginEv(%"class.std::vector.26"* %242) #3
  %244 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %19, i32 0, i32 0
  store %struct.Edge* %243, %struct.Edge** %244, align 8
  %245 = load %"class.std::vector.26"*, %"class.std::vector.26"** %18, align 8
  %246 = call %struct.Edge* @_ZNKSt6vectorI4EdgeSaIS0_EE3endEv(%"class.std::vector.26"* %245) #3
  %247 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %20, i32 0, i32 0
  store %struct.Edge* %246, %struct.Edge** %247, align 8
  %248 = load i32, i32* @x.83
  %249 = load i32, i32* @y.84
  %250 = add i32 %248, -1866927462
  %251 = sub i32 %250, 1
  %252 = sub i32 %251, -1866927462
  %253 = sub i32 %248, 1
  %254 = mul i32 %248, %252
  %255 = urem i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %249, 10
  %258 = xor i1 %256, true
  %259 = xor i1 %257, true
  %260 = xor i1 true, true
  %261 = and i1 %258, true
  %262 = and i1 %256, %260
  %263 = and i1 %259, true
  %264 = and i1 %257, %260
  %265 = or i1 %261, %262
  %266 = or i1 %263, %264
  %267 = xor i1 %265, %266
  %268 = or i1 %258, %259
  %269 = xor i1 %268, true
  %270 = or i1 true, %260
  %271 = and i1 %269, %270
  %272 = or i1 %267, %271
  %273 = or i1 %256, %257
  br i1 %272, label %274, label %542

; <label>:274:                                    ; preds = %237
  br label %275

; <label>:275:                                    ; preds = %400, %274
  %276 = call zeroext i1 @_ZN9__gnu_cxxneIPK4EdgeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %19, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %20) #3
  br i1 %276, label %277, label %402

; <label>:277:                                    ; preds = %275
  %278 = load i32, i32* @x.83
  %279 = load i32, i32* @y.84
  %280 = sub i32 0, 1
  %281 = add i32 %278, %280
  %282 = sub i32 %278, 1
  %283 = mul i32 %278, %281
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %279, 10
  %287 = and i1 %285, %286
  %288 = xor i1 %285, %286
  %289 = or i1 %287, %288
  %290 = or i1 %285, %286
  br i1 %289, label %291, label %553

; <label>:291:                                    ; preds = %277, %553
  %292 = call dereferenceable(16) %struct.Edge* @_ZNK9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %19) #3
  store %struct.Edge* %292, %struct.Edge** %21, align 8
  %293 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %294 = load %struct.Edge*, %struct.Edge** %21, align 8
  %295 = getelementptr inbounds %struct.Edge, %struct.Edge* %294, i32 0, i32 0
  %296 = load i64, i64* %295, align 8
  %297 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %293, i64 %296) #3
  %298 = load i64, i64* %297, align 8
  %299 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %300 = load i32, i32* %17, align 4
  %301 = sext i32 %300 to i64
  %302 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %299, i64 %301) #3
  %303 = load i64, i64* %302, align 8
  %304 = load %struct.Edge*, %struct.Edge** %21, align 8
  %305 = getelementptr inbounds %struct.Edge, %struct.Edge* %304, i32 0, i32 1
  %306 = load i64, i64* %305, align 8
  %307 = sub i64 0, %306
  %308 = sub i64 %303, %307
  %309 = add nsw i64 %303, %306
  %310 = icmp sgt i64 %298, %308
  %311 = load i32, i32* @x.83
  %312 = load i32, i32* @y.84
  %313 = add i32 %311, 1153103120
  %314 = sub i32 %313, 1
  %315 = sub i32 %314, 1153103120
  %316 = sub i32 %311, 1
  %317 = mul i32 %311, %315
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %312, 10
  %321 = and i1 %319, %320
  %322 = xor i1 %319, %320
  %323 = or i1 %321, %322
  %324 = or i1 %319, %320
  br i1 %323, label %325, label %553

; <label>:325:                                    ; preds = %291
  br i1 %310, label %326, label %399

; <label>:326:                                    ; preds = %325
  %327 = load i32, i32* @x.83
  %328 = load i32, i32* @y.84
  %329 = add i32 %327, -357660578
  %330 = sub i32 %329, 1
  %331 = sub i32 %330, -357660578
  %332 = sub i32 %327, 1
  %333 = mul i32 %327, %331
  %334 = urem i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %328, 10
  %337 = and i1 %335, %336
  %338 = xor i1 %335, %336
  %339 = or i1 %337, %338
  %340 = or i1 %335, %336
  br i1 %339, label %341, label %608

; <label>:341:                                    ; preds = %326, %608
  %342 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %343 = load i32, i32* %17, align 4
  %344 = sext i32 %343 to i64
  %345 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %342, i64 %344) #3
  %346 = load i64, i64* %345, align 8
  %347 = load %struct.Edge*, %struct.Edge** %21, align 8
  %348 = getelementptr inbounds %struct.Edge, %struct.Edge* %347, i32 0, i32 1
  %349 = load i64, i64* %348, align 8
  %350 = sub i64 0, %349
  %351 = sub i64 %346, %350
  %352 = add nsw i64 %346, %349
  %353 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %354 = load %struct.Edge*, %struct.Edge** %21, align 8
  %355 = getelementptr inbounds %struct.Edge, %struct.Edge* %354, i32 0, i32 0
  %356 = load i64, i64* %355, align 8
  %357 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %353, i64 %356) #3
  store i64 %351, i64* %357, align 8
  %358 = load i32, i32* %17, align 4
  %359 = sext i32 %358 to i64
  %360 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  %361 = load %struct.Edge*, %struct.Edge** %21, align 8
  %362 = getelementptr inbounds %struct.Edge, %struct.Edge* %361, i32 0, i32 0
  %363 = load i64, i64* %362, align 8
  %364 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %360, i64 %363) #3
  store i64 %359, i64* %364, align 8
  %365 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %366 = load %struct.Edge*, %struct.Edge** %21, align 8
  %367 = getelementptr inbounds %struct.Edge, %struct.Edge* %366, i32 0, i32 0
  %368 = load i64, i64* %367, align 8
  %369 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %365, i64 %368) #3
  %370 = load %struct.Edge*, %struct.Edge** %21, align 8
  %371 = getelementptr inbounds %struct.Edge, %struct.Edge* %370, i32 0, i32 0
  %372 = load i32, i32* @x.83
  %373 = load i32, i32* @y.84
  %374 = sub i32 0, 1
  %375 = add i32 %372, %374
  %376 = sub i32 %372, 1
  %377 = mul i32 %372, %375
  %378 = urem i32 %377, 2
  %379 = icmp eq i32 %378, 0
  %380 = icmp slt i32 %373, 10
  %381 = xor i1 %379, true
  %382 = xor i1 %380, true
  %383 = xor i1 true, true
  %384 = and i1 %381, true
  %385 = and i1 %379, %383
  %386 = and i1 %382, true
  %387 = and i1 %380, %383
  %388 = or i1 %384, %385
  %389 = or i1 %386, %387
  %390 = xor i1 %388, %389
  %391 = or i1 %381, %382
  %392 = xor i1 %391, true
  %393 = or i1 true, %383
  %394 = and i1 %392, %393
  %395 = or i1 %390, %394
  %396 = or i1 %379, %380
  br i1 %395, label %397, label %608

; <label>:397:                                    ; preds = %341
  invoke void @_ZNSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EE7emplaceIJRxRKxEEEvDpOT_(%"class.std::priority_queue"* %11, i64* dereferenceable(8) %369, i64* dereferenceable(8) %371)
          to label %398 unwind label %207

; <label>:398:                                    ; preds = %397
  br label %399

; <label>:399:                                    ; preds = %398, %325
  br label %400

; <label>:400:                                    ; preds = %399
  %401 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS1_SaIS1_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %19) #3
  br label %275

; <label>:402:                                    ; preds = %275
  %403 = load i32, i32* @x.83
  %404 = load i32, i32* @y.84
  %405 = sub i32 0, 1
  %406 = add i32 %403, %405
  %407 = sub i32 %403, 1
  %408 = mul i32 %403, %406
  %409 = urem i32 %408, 2
  %410 = icmp eq i32 %409, 0
  %411 = icmp slt i32 %404, 10
  %412 = xor i1 %410, true
  %413 = xor i1 %411, true
  %414 = xor i1 true, true
  %415 = and i1 %412, true
  %416 = and i1 %410, %414
  %417 = and i1 %413, true
  %418 = and i1 %411, %414
  %419 = or i1 %415, %416
  %420 = or i1 %417, %418
  %421 = xor i1 %419, %420
  %422 = or i1 %412, %413
  %423 = xor i1 %422, true
  %424 = or i1 true, %414
  %425 = and i1 %423, %424
  %426 = or i1 %421, %425
  %427 = or i1 %410, %411
  br i1 %426, label %428, label %653

; <label>:428:                                    ; preds = %402, %653
  %429 = load i32, i32* @x.83
  %430 = load i32, i32* @y.84
  %431 = add i32 %429, 996229962
  %432 = sub i32 %431, 1
  %433 = sub i32 %432, 996229962
  %434 = sub i32 %429, 1
  %435 = mul i32 %429, %433
  %436 = urem i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = icmp slt i32 %430, 10
  %439 = and i1 %437, %438
  %440 = xor i1 %437, %438
  %441 = or i1 %439, %440
  %442 = or i1 %437, %438
  br i1 %441, label %443, label %653

; <label>:443:                                    ; preds = %428
  br label %41

; <label>:444:                                    ; preds = %91
  %445 = load i32, i32* @x.83
  %446 = load i32, i32* @y.84
  %447 = add i32 %445, 1262134964
  %448 = sub i32 %447, 1
  %449 = sub i32 %448, 1262134964
  %450 = sub i32 %445, 1
  %451 = mul i32 %445, %449
  %452 = urem i32 %451, 2
  %453 = icmp eq i32 %452, 0
  %454 = icmp slt i32 %446, 10
  %455 = and i1 %453, %454
  %456 = xor i1 %453, %454
  %457 = or i1 %455, %456
  %458 = or i1 %453, %454
  br i1 %457, label %459, label %654

; <label>:459:                                    ; preds = %444, %654
  call void @_ZNSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EED2Ev(%"class.std::priority_queue"* %11) #3
  %460 = load i32, i32* @x.83
  %461 = load i32, i32* @y.84
  %462 = sub i32 %460, -1690309417
  %463 = sub i32 %462, 1
  %464 = add i32 %463, -1690309417
  %465 = sub i32 %460, 1
  %466 = mul i32 %460, %464
  %467 = urem i32 %466, 2
  %468 = icmp eq i32 %467, 0
  %469 = icmp slt i32 %461, 10
  %470 = and i1 %468, %469
  %471 = xor i1 %468, %469
  %472 = or i1 %470, %471
  %473 = or i1 %468, %469
  br i1 %472, label %474, label %654

; <label>:474:                                    ; preds = %459
  ret void

; <label>:475:                                    ; preds = %207, %203
  %476 = load i8*, i8** %14, align 8
  %477 = load i32, i32* %15, align 4
  %478 = insertvalue { i8*, i32 } undef, i8* %476, 0
  %479 = insertvalue { i8*, i32 } %478, i32 %477, 1
  resume { i8*, i32 } %479

; <label>:480:                                    ; preds = %70, %43
  %481 = add i1 %42, true
  %482 = sub i1 %481, true
  %483 = sub i1 %482, true
  %484 = sub i1 %42, true
  %485 = mul i1 %483, true
  %486 = shl i1 %42, true
  %487 = add i1 false, true
  %488 = sub i1 %487, %42
  %489 = sub i1 %488, true
  %490 = sub i1 false, %42
  %491 = sub i1 %489, true
  %492 = add i1 %491, true
  %493 = add i1 %492, true
  %494 = add i1 %489, true
  %495 = shl i1 %42, true
  %496 = sub i1 %42, false
  %497 = sub i1 %496, true
  %498 = add i1 %497, false
  %499 = sub i1 %42, true
  %500 = mul i1 %498, true
  %501 = sub i1 false, true
  %502 = sub i1 %501, %42
  %503 = add i1 %502, true
  %504 = sub i1 false, %42
  %505 = sub i1 false, true
  %506 = sub i1 %503, %505
  %507 = add i1 %503, true
  %508 = sub i1 %42, false
  %509 = sub i1 %508, true
  %510 = add i1 %509, false
  %511 = sub i1 %42, true
  %512 = mul i1 %510, true
  %513 = sub i1 false, true
  %514 = add i1 %42, %513
  %515 = sub i1 %42, true
  %516 = mul i1 %514, true
  %517 = sub i1 false, %42
  %518 = add i1 false, %517
  %519 = sub i1 false, %42
  %520 = sub i1 false, true
  %521 = sub i1 %518, %520
  %522 = add i1 %518, true
  %523 = xor i1 %42, true
  %524 = and i1 true, %523
  %525 = xor i1 true, true
  %526 = and i1 %42, %525
  %527 = or i1 %524, %526
  %528 = xor i1 %42, true
  br label %70

; <label>:529:                                    ; preds = %111, %97
  %530 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %16, i32 0, i32 1
  %531 = load i64, i64* %530, align 8
  %532 = trunc i64 %531 to i32
  store i32 %532, i32* %17, align 4
  %533 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %534 = load i32, i32* %17, align 4
  %535 = sext i32 %534 to i64
  %536 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %533, i64 %535) #3
  %537 = load i64, i64* %536, align 8
  %538 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %16, i32 0, i32 0
  %539 = load i64, i64* %538, align 8
  %540 = icmp slt i64 %537, %539
  br label %111

; <label>:541:                                    ; preds = %176, %149
  br label %176

; <label>:542:                                    ; preds = %237, %211
  %543 = load %"class.std::vector.21"*, %"class.std::vector.21"** %5, align 8
  %544 = load i32, i32* %17, align 4
  %545 = sext i32 %544 to i64
  %546 = call dereferenceable(24) %"class.std::vector.26"* @_ZNKSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEixEm(%"class.std::vector.21"* %543, i64 %545) #3
  store %"class.std::vector.26"* %546, %"class.std::vector.26"** %18, align 8
  %547 = load %"class.std::vector.26"*, %"class.std::vector.26"** %18, align 8
  %548 = call %struct.Edge* @_ZNKSt6vectorI4EdgeSaIS0_EE5beginEv(%"class.std::vector.26"* %547) #3
  %549 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %19, i32 0, i32 0
  store %struct.Edge* %548, %struct.Edge** %549, align 8
  %550 = load %"class.std::vector.26"*, %"class.std::vector.26"** %18, align 8
  %551 = call %struct.Edge* @_ZNKSt6vectorI4EdgeSaIS0_EE3endEv(%"class.std::vector.26"* %550) #3
  %552 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %20, i32 0, i32 0
  store %struct.Edge* %551, %struct.Edge** %552, align 8
  br label %237

; <label>:553:                                    ; preds = %291, %277
  %554 = call dereferenceable(16) %struct.Edge* @_ZNK9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %19) #3
  store %struct.Edge* %554, %struct.Edge** %21, align 8
  %555 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %556 = load %struct.Edge*, %struct.Edge** %21, align 8
  %557 = getelementptr inbounds %struct.Edge, %struct.Edge* %556, i32 0, i32 0
  %558 = load i64, i64* %557, align 8
  %559 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %555, i64 %558) #3
  %560 = load i64, i64* %559, align 8
  %561 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %562 = load i32, i32* %17, align 4
  %563 = sext i32 %562 to i64
  %564 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %561, i64 %563) #3
  %565 = load i64, i64* %564, align 8
  %566 = load %struct.Edge*, %struct.Edge** %21, align 8
  %567 = getelementptr inbounds %struct.Edge, %struct.Edge* %566, i32 0, i32 1
  %568 = load i64, i64* %567, align 8
  %569 = add i64 0, -6188423691303855984
  %570 = sub i64 %569, %565
  %571 = sub i64 %570, -6188423691303855984
  %572 = sub i64 0, %565
  %573 = sub i64 %571, 7614863234944854080
  %574 = add i64 %573, %568
  %575 = add i64 %574, 7614863234944854080
  %576 = add i64 %571, %568
  %577 = sub i64 0, %568
  %578 = add i64 %565, %577
  %579 = sub i64 %565, %568
  %580 = mul i64 %578, %568
  %581 = add i64 0, 5821749205747026161
  %582 = sub i64 %581, %565
  %583 = sub i64 %582, 5821749205747026161
  %584 = sub i64 0, %565
  %585 = sub i64 0, %568
  %586 = sub i64 %583, %585
  %587 = add i64 %583, %568
  %588 = add i64 0, 1139003773375543330
  %589 = sub i64 %588, %565
  %590 = sub i64 %589, 1139003773375543330
  %591 = sub i64 0, %565
  %592 = add i64 %590, 6818053829986049703
  %593 = add i64 %592, %568
  %594 = sub i64 %593, 6818053829986049703
  %595 = add i64 %590, %568
  %596 = shl i64 %565, %568
  %597 = shl i64 %565, %568
  %598 = sub i64 0, %568
  %599 = add i64 %565, %598
  %600 = sub i64 %565, %568
  %601 = mul i64 %599, %568
  %602 = shl i64 %565, %568
  %603 = sub i64 %565, 1064203097155147966
  %604 = add i64 %603, %568
  %605 = add i64 %604, 1064203097155147966
  %606 = add nsw i64 %565, %568
  %607 = icmp sgt i64 %560, %605
  br label %291

; <label>:608:                                    ; preds = %341, %326
  %609 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %610 = load i32, i32* %17, align 4
  %611 = sext i32 %610 to i64
  %612 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %609, i64 %611) #3
  %613 = load i64, i64* %612, align 8
  %614 = load %struct.Edge*, %struct.Edge** %21, align 8
  %615 = getelementptr inbounds %struct.Edge, %struct.Edge* %614, i32 0, i32 1
  %616 = load i64, i64* %615, align 8
  %617 = shl i64 %613, %616
  %618 = sub i64 0, %616
  %619 = add i64 %613, %618
  %620 = sub i64 %613, %616
  %621 = mul i64 %619, %616
  %622 = shl i64 %613, %616
  %623 = add i64 %613, 5152976843161084630
  %624 = sub i64 %623, %616
  %625 = sub i64 %624, 5152976843161084630
  %626 = sub i64 %613, %616
  %627 = mul i64 %625, %616
  %628 = shl i64 %613, %616
  %629 = shl i64 %613, %616
  %630 = sub i64 %613, -5044279636115016925
  %631 = add i64 %630, %616
  %632 = add i64 %631, -5044279636115016925
  %633 = add nsw i64 %613, %616
  %634 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %635 = load %struct.Edge*, %struct.Edge** %21, align 8
  %636 = getelementptr inbounds %struct.Edge, %struct.Edge* %635, i32 0, i32 0
  %637 = load i64, i64* %636, align 8
  %638 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %634, i64 %637) #3
  store i64 %632, i64* %638, align 8
  %639 = load i32, i32* %17, align 4
  %640 = sext i32 %639 to i64
  %641 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  %642 = load %struct.Edge*, %struct.Edge** %21, align 8
  %643 = getelementptr inbounds %struct.Edge, %struct.Edge* %642, i32 0, i32 0
  %644 = load i64, i64* %643, align 8
  %645 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %641, i64 %644) #3
  store i64 %640, i64* %645, align 8
  %646 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %647 = load %struct.Edge*, %struct.Edge** %21, align 8
  %648 = getelementptr inbounds %struct.Edge, %struct.Edge* %647, i32 0, i32 0
  %649 = load i64, i64* %648, align 8
  %650 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %646, i64 %649) #3
  %651 = load %struct.Edge*, %struct.Edge** %21, align 8
  %652 = getelementptr inbounds %struct.Edge, %struct.Edge* %651, i32 0, i32 0
  br label %341

; <label>:653:                                    ; preds = %428, %402
  br label %428

; <label>:654:                                    ; preds = %459, %444
  call void @_ZNSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EED2Ev(%"class.std::priority_queue"* %11) #3
  br label %459
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_I4EdgeSaIS0_EESaIS2_EE4sizeEv(%"class.std::vector.21"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.21"*, align 8
  store %"class.std::vector.21"* %0, %"class.std::vector.21"** %2, align 8
  %3 = load %"class.std::vector.21"*, %"class.std::vector.21"** %2, align 8
  %4 = bitcast %"class.std::vector.21"* %3 to %"struct.std::_Vector_base.22"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.22", %"struct.std::_Vector_base.22"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"class.std::vector.26"*, %"class.std::vector.26"** %6, align 8
  %8 = bitcast %"class.std::vector.21"* %3 to %"struct.std::_Vector_base.22"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.22", %"struct.std::_Vector_base.22"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::vector.26"*, %"class.std::vector.26"** %10, align 8
  %12 = ptrtoint %"class.std::vector.26"* %7 to i64
  %13 = ptrtoint %"class.std::vector.26"* %11 to i64
  %14 = sub i64 %12, -5595070773729925870
  %15 = sub i64 %14, %13
  %16 = add i64 %15, -5595070773729925870
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 24
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE6resizeEmRKx(%"class.std::vector.0"*, i64, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca %"class.std::vector.0"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.46"*
  %10 = alloca i64**
  %11 = alloca i64*
  %12 = alloca i1
  %13 = alloca i1
  %14 = load i32, i32* @x.87
  %15 = load i32, i32* @y.88
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  store i1 %21, i1* %13
  %22 = icmp slt i32 %15, 10
  store i1 %22, i1* %12
  %23 = alloca i32
  store i32 2146505975, i32* %23
  br label %24

; <label>:24:                                     ; preds = %3, %294
  %25 = load i32, i32* %23
  switch i32 %25, label %26 [
    i32 2146505975, label %27
    i32 -1488126471, label %47
    i32 58717711, label %89
    i32 1648701139, label %92
    i32 2089139486, label %115
    i32 1482854006, label %143
    i32 -382743785, label %164
    i32 -106859479, label %167
    i32 -1206169320, label %182
    i32 -447668917, label %207
    i32 91720852, label %208
    i32 687182079, label %236
    i32 -1210714624, label %264
    i32 -556169412, label %265
    i32 736382244, label %266
    i32 -415706342, label %277
    i32 827627203, label %283
    i32 -644053336, label %293
  ]

; <label>:26:                                     ; preds = %24
  br label %294

; <label>:27:                                     ; preds = %24
  %28 = load volatile i1, i1* %13
  %29 = load volatile i1, i1* %12
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 true, true
  %33 = and i1 %30, true
  %34 = and i1 %28, %32
  %35 = and i1 %31, true
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 true, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 -1488126471, i32 736382244
  store i32 %46, i32* %23
  br label %294

; <label>:47:                                     ; preds = %24
  %48 = alloca %"class.std::vector.0"*, align 8
  %49 = alloca i64, align 8
  store i64* %49, i64** %11
  %50 = alloca i64*, align 8
  store i64** %50, i64*** %10
  %51 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  store %"class.__gnu_cxx::__normal_iterator.46"* %51, %"class.__gnu_cxx::__normal_iterator.46"** %9
  %52 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %52, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %53 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %53, %"class.__gnu_cxx::__normal_iterator.38"** %7
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %48, align 8
  %54 = load volatile i64*, i64** %11
  store i64 %1, i64* %54, align 8
  %55 = load volatile i64**, i64*** %10
  store i64* %2, i64** %55, align 8
  %56 = load %"class.std::vector.0"*, %"class.std::vector.0"** %48, align 8
  store %"class.std::vector.0"* %56, %"class.std::vector.0"** %6
  %57 = load volatile i64*, i64** %11
  %58 = load i64, i64* %57, align 8
  %59 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %60 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.0"* %59) #3
  %61 = icmp ugt i64 %58, %60
  store i1 %61, i1* %5
  %62 = load i32, i32* @x.87
  %63 = load i32, i32* @y.88
  %64 = add i32 %62, -1087374175
  %65 = sub i32 %64, 1
  %66 = sub i32 %65, -1087374175
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = xor i1 %70, true
  %73 = xor i1 %71, true
  %74 = xor i1 false, true
  %75 = and i1 %72, false
  %76 = and i1 %70, %74
  %77 = and i1 %73, false
  %78 = and i1 %71, %74
  %79 = or i1 %75, %76
  %80 = or i1 %77, %78
  %81 = xor i1 %79, %80
  %82 = or i1 %72, %73
  %83 = xor i1 %82, true
  %84 = or i1 false, %74
  %85 = and i1 %83, %84
  %86 = or i1 %81, %85
  %87 = or i1 %70, %71
  %88 = select i1 %86, i32 58717711, i32 736382244
  store i32 %88, i32* %23
  br label %294

; <label>:89:                                     ; preds = %24
  %90 = load volatile i1, i1* %5
  %91 = select i1 %90, i32 1648701139, i32 2089139486
  store i32 %91, i32* %23
  br label %294

; <label>:92:                                     ; preds = %24
  %93 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %94 = call i64* @_ZNSt6vectorIxSaIxEE3endEv(%"class.std::vector.0"* %93) #3
  %95 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %96 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %95, i32 0, i32 0
  store i64* %94, i64** %96, align 8
  %97 = load volatile %"class.__gnu_cxx::__normal_iterator.46"*, %"class.__gnu_cxx::__normal_iterator.46"** %9
  %98 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2IPxEERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameIS9_S8_EE7__valueES5_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.46"* %97, %"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %98) #3
  %99 = load volatile i64*, i64** %11
  %100 = load i64, i64* %99, align 8
  %101 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %102 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.0"* %101) #3
  %103 = sub i64 0, %102
  %104 = add i64 %100, %103
  %105 = sub i64 %100, %102
  %106 = load volatile i64**, i64*** %10
  %107 = load i64*, i64** %106, align 8
  %108 = load volatile %"class.__gnu_cxx::__normal_iterator.46"*, %"class.__gnu_cxx::__normal_iterator.46"** %9
  %109 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %108, i32 0, i32 0
  %110 = load i64*, i64** %109, align 8
  %111 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %112 = call i64* @_ZNSt6vectorIxSaIxEE6insertEN9__gnu_cxx17__normal_iteratorIPKxS1_EEmRS4_(%"class.std::vector.0"* %111, i64* %110, i64 %104, i64* dereferenceable(8) %107)
  %113 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %7
  %114 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %113, i32 0, i32 0
  store i64* %112, i64** %114, align 8
  store i32 -556169412, i32* %23
  br label %294

; <label>:115:                                    ; preds = %24
  %116 = load i32, i32* @x.87
  %117 = load i32, i32* @y.88
  %118 = sub i32 %116, -65791295
  %119 = sub i32 %118, 1
  %120 = add i32 %119, -65791295
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = xor i1 %124, true
  %127 = xor i1 %125, true
  %128 = xor i1 true, true
  %129 = and i1 %126, true
  %130 = and i1 %124, %128
  %131 = and i1 %127, true
  %132 = and i1 %125, %128
  %133 = or i1 %129, %130
  %134 = or i1 %131, %132
  %135 = xor i1 %133, %134
  %136 = or i1 %126, %127
  %137 = xor i1 %136, true
  %138 = or i1 true, %128
  %139 = and i1 %137, %138
  %140 = or i1 %135, %139
  %141 = or i1 %124, %125
  %142 = select i1 %140, i32 1482854006, i32 -415706342
  store i32 %142, i32* %23
  br label %294

; <label>:143:                                    ; preds = %24
  %144 = load volatile i64*, i64** %11
  %145 = load i64, i64* %144, align 8
  %146 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %147 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.0"* %146) #3
  %148 = icmp ult i64 %145, %147
  store i1 %148, i1* %4
  %149 = load i32, i32* @x.87
  %150 = load i32, i32* @y.88
  %151 = sub i32 %149, -1409454048
  %152 = sub i32 %151, 1
  %153 = add i32 %152, -1409454048
  %154 = sub i32 %149, 1
  %155 = mul i32 %149, %153
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %150, 10
  %159 = and i1 %157, %158
  %160 = xor i1 %157, %158
  %161 = or i1 %159, %160
  %162 = or i1 %157, %158
  %163 = select i1 %161, i32 -382743785, i32 -415706342
  store i32 %163, i32* %23
  br label %294

; <label>:164:                                    ; preds = %24
  %165 = load volatile i1, i1* %4
  %166 = select i1 %165, i32 -106859479, i32 91720852
  store i32 %166, i32* %23
  br label %294

; <label>:167:                                    ; preds = %24
  %168 = load i32, i32* @x.87
  %169 = load i32, i32* @y.88
  %170 = sub i32 0, 1
  %171 = add i32 %168, %170
  %172 = sub i32 %168, 1
  %173 = mul i32 %168, %171
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %169, 10
  %177 = and i1 %175, %176
  %178 = xor i1 %175, %176
  %179 = or i1 %177, %178
  %180 = or i1 %175, %176
  %181 = select i1 %179, i32 -1206169320, i32 827627203
  store i32 %181, i32* %23
  br label %294

; <label>:182:                                    ; preds = %24
  %183 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %184 = bitcast %"class.std::vector.0"* %183 to %"struct.std::_Vector_base.1"*
  %185 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %184, i32 0, i32 0
  %186 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %185, i32 0, i32 0
  %187 = load i64*, i64** %186, align 8
  %188 = load volatile i64*, i64** %11
  %189 = load i64, i64* %188, align 8
  %190 = getelementptr inbounds i64, i64* %187, i64 %189
  %191 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  call void @_ZNSt6vectorIxSaIxEE15_M_erase_at_endEPx(%"class.std::vector.0"* %191, i64* %190) #3
  %192 = load i32, i32* @x.87
  %193 = load i32, i32* @y.88
  %194 = add i32 %192, 599885855
  %195 = sub i32 %194, 1
  %196 = sub i32 %195, 599885855
  %197 = sub i32 %192, 1
  %198 = mul i32 %192, %196
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %193, 10
  %202 = and i1 %200, %201
  %203 = xor i1 %200, %201
  %204 = or i1 %202, %203
  %205 = or i1 %200, %201
  %206 = select i1 %204, i32 -447668917, i32 827627203
  store i32 %206, i32* %23
  br label %294

; <label>:207:                                    ; preds = %24
  store i32 91720852, i32* %23
  br label %294

; <label>:208:                                    ; preds = %24
  %209 = load i32, i32* @x.87
  %210 = load i32, i32* @y.88
  %211 = sub i32 %209, -1634575079
  %212 = sub i32 %211, 1
  %213 = add i32 %212, -1634575079
  %214 = sub i32 %209, 1
  %215 = mul i32 %209, %213
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %210, 10
  %219 = xor i1 %217, true
  %220 = xor i1 %218, true
  %221 = xor i1 false, true
  %222 = and i1 %219, false
  %223 = and i1 %217, %221
  %224 = and i1 %220, false
  %225 = and i1 %218, %221
  %226 = or i1 %222, %223
  %227 = or i1 %224, %225
  %228 = xor i1 %226, %227
  %229 = or i1 %219, %220
  %230 = xor i1 %229, true
  %231 = or i1 false, %221
  %232 = and i1 %230, %231
  %233 = or i1 %228, %232
  %234 = or i1 %217, %218
  %235 = select i1 %233, i32 687182079, i32 -644053336
  store i32 %235, i32* %23
  br label %294

; <label>:236:                                    ; preds = %24
  %237 = load i32, i32* @x.87
  %238 = load i32, i32* @y.88
  %239 = sub i32 %237, -1040130734
  %240 = sub i32 %239, 1
  %241 = add i32 %240, -1040130734
  %242 = sub i32 %237, 1
  %243 = mul i32 %237, %241
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %238, 10
  %247 = xor i1 %245, true
  %248 = xor i1 %246, true
  %249 = xor i1 true, true
  %250 = and i1 %247, true
  %251 = and i1 %245, %249
  %252 = and i1 %248, true
  %253 = and i1 %246, %249
  %254 = or i1 %250, %251
  %255 = or i1 %252, %253
  %256 = xor i1 %254, %255
  %257 = or i1 %247, %248
  %258 = xor i1 %257, true
  %259 = or i1 true, %249
  %260 = and i1 %258, %259
  %261 = or i1 %256, %260
  %262 = or i1 %245, %246
  %263 = select i1 %261, i32 -1210714624, i32 -644053336
  store i32 %263, i32* %23
  br label %294

; <label>:264:                                    ; preds = %24
  store i32 -556169412, i32* %23
  br label %294

; <label>:265:                                    ; preds = %24
  ret void

; <label>:266:                                    ; preds = %24
  %267 = alloca %"class.std::vector.0"*, align 8
  %268 = alloca i64, align 8
  %269 = alloca i64*, align 8
  %270 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %271 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %272 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %267, align 8
  store i64 %1, i64* %268, align 8
  store i64* %2, i64** %269, align 8
  %273 = load %"class.std::vector.0"*, %"class.std::vector.0"** %267, align 8
  %274 = load i64, i64* %268, align 8
  %275 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.0"* %273) #3
  %276 = icmp ugt i64 %274, %275
  store i32 -1488126471, i32* %23
  br label %294

; <label>:277:                                    ; preds = %24
  %278 = load volatile i64*, i64** %11
  %279 = load i64, i64* %278, align 8
  %280 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %281 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.0"* %280) #3
  %282 = icmp ult i64 %279, %281
  store i32 1482854006, i32* %23
  br label %294

; <label>:283:                                    ; preds = %24
  %284 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %285 = bitcast %"class.std::vector.0"* %284 to %"struct.std::_Vector_base.1"*
  %286 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %285, i32 0, i32 0
  %287 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %286, i32 0, i32 0
  %288 = load i64*, i64** %287, align 8
  %289 = load volatile i64*, i64** %11
  %290 = load i64, i64* %289, align 8
  %291 = getelementptr inbounds i64, i64* %288, i64 %290
  %292 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  call void @_ZNSt6vectorIxSaIxEE15_M_erase_at_endEPx(%"class.std::vector.0"* %292, i64* %291) #3
  store i32 -1206169320, i32* %23
  br label %294

; <label>:293:                                    ; preds = %24
  store i32 687182079, i32* %23
  br label %294

; <label>:294:                                    ; preds = %293, %283, %277, %266, %264, %236, %208, %207, %182, %167, %164, %143, %115, %92, %89, %47, %27, %26
  br label %24
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIxxESaIS1_EEC2Ev(%"class.std::vector.31"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.31"*, align 8
  store %"class.std::vector.31"* %0, %"class.std::vector.31"** %2, align 8
  %3 = load %"class.std::vector.31"*, %"class.std::vector.31"** %2, align 8
  %4 = bitcast %"class.std::vector.31"* %3 to %"struct.std::_Vector_base.32"*
  invoke void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EEC2Ev(%"struct.std::_Vector_base.32"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #12
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EEC2ERKS6_OS4_(%"class.std::priority_queue"*, %"struct.std::greater"* dereferenceable(1), %"class.std::vector.31"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::priority_queue"*, align 8
  %5 = alloca %"struct.std::greater"*, align 8
  %6 = alloca %"class.std::vector.31"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %9 = alloca %"struct.std::greater", align 1
  %10 = alloca i8*
  %11 = alloca i32
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %4, align 8
  store %"struct.std::greater"* %1, %"struct.std::greater"** %5, align 8
  store %"class.std::vector.31"* %2, %"class.std::vector.31"** %6, align 8
  %12 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %4, align 8
  %13 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 0
  %14 = load %"class.std::vector.31"*, %"class.std::vector.31"** %6, align 8
  %15 = call dereferenceable(24) %"class.std::vector.31"* @_ZSt4moveIRSt6vectorISt4pairIxxESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.31"* dereferenceable(24) %14) #3
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EEC2EOS3_(%"class.std::vector.31"* %13, %"class.std::vector.31"* dereferenceable(24) %15) #3
  %16 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 1
  %17 = load %"struct.std::greater"*, %"struct.std::greater"** %5, align 8
  %18 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 0
  %19 = call %"struct.std::pair.36"* @_ZNSt6vectorISt4pairIxxESaIS1_EE5beginEv(%"class.std::vector.31"* %18) #3
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %7, i32 0, i32 0
  store %"struct.std::pair.36"* %19, %"struct.std::pair.36"** %20, align 8
  %21 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 0
  %22 = call %"struct.std::pair.36"* @_ZNSt6vectorISt4pairIxxESaIS1_EE3endEv(%"class.std::vector.31"* %21) #3
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %8, i32 0, i32 0
  store %"struct.std::pair.36"* %22, %"struct.std::pair.36"** %23, align 8
  %24 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %12, i32 0, i32 1
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %7, i32 0, i32 0
  %26 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %25, align 8
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %8, i32 0, i32 0
  %28 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %27, align 8
  invoke void @_ZSt9make_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEESt7greaterIS3_EEvT_SB_T0_(%"struct.std::pair.36"* %26, %"struct.std::pair.36"* %28)
          to label %29 unwind label %30

; <label>:29:                                     ; preds = %3
  ret void

; <label>:30:                                     ; preds = %3
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  store i8* %32, i8** %10, align 8
  %33 = extractvalue { i8*, i32 } %31, 1
  store i32 %33, i32* %11, align 4
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EED2Ev(%"class.std::vector.31"* %13) #3
  br label %34

; <label>:34:                                     ; preds = %30
  %35 = load i32, i32* @x.91
  %36 = load i32, i32* @y.92
  %37 = sub i32 %35, -1093395353
  %38 = sub i32 %37, 1
  %39 = add i32 %38, -1093395353
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  br i1 %47, label %49, label %80

; <label>:49:                                     ; preds = %34, %80
  %50 = load i8*, i8** %10, align 8
  %51 = load i32, i32* %11, align 4
  %52 = insertvalue { i8*, i32 } undef, i8* %50, 0
  %53 = insertvalue { i8*, i32 } %52, i32 %51, 1
  %54 = load i32, i32* @x.91
  %55 = load i32, i32* @y.92
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  br i1 %77, label %79, label %80

; <label>:79:                                     ; preds = %49
  resume { i8*, i32 } %53

; <label>:80:                                     ; preds = %49, %34
  %81 = load i8*, i8** %10, align 8
  %82 = load i32, i32* %11, align 4
  %83 = insertvalue { i8*, i32 } undef, i8* %81, 0
  %84 = insertvalue { i8*, i32 } %83, i32 %82, 1
  br label %49
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIxxESaIS1_EED2Ev(%"class.std::vector.31"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.31"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.31"* %0, %"class.std::vector.31"** %2, align 8
  %5 = load %"class.std::vector.31"*, %"class.std::vector.31"** %2, align 8
  %6 = bitcast %"class.std::vector.31"* %5 to %"struct.std::_Vector_base.32"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %8, align 8
  %10 = bitcast %"class.std::vector.31"* %5 to %"struct.std::_Vector_base.32"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %12, align 8
  %14 = bitcast %"class.std::vector.31"* %5 to %"struct.std::_Vector_base.32"*
  %15 = call dereferenceable(1) %"class.std::allocator.33"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.32"* %14) #3
  invoke void @_ZSt8_DestroyIPSt4pairIxxES1_EvT_S3_RSaIT0_E(%"struct.std::pair.36"* %9, %"struct.std::pair.36"* %13, %"class.std::allocator.33"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.31"* %5 to %"struct.std::_Vector_base.32"*
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EED2Ev(%"struct.std::_Vector_base.32"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = load i32, i32* @x.93
  %20 = load i32, i32* @y.94
  %21 = sub i32 0, 1
  %22 = add i32 %19, %21
  %23 = sub i32 %19, 1
  %24 = mul i32 %19, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %20, 10
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  br i1 %30, label %32, label %108

; <label>:32:                                     ; preds = %18, %108
  %33 = landingpad { i8*, i32 }
          catch i8* null
  %34 = extractvalue { i8*, i32 } %33, 0
  store i8* %34, i8** %3, align 8
  %35 = extractvalue { i8*, i32 } %33, 1
  store i32 %35, i32* %4, align 4
  %36 = bitcast %"class.std::vector.31"* %5 to %"struct.std::_Vector_base.32"*
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EED2Ev(%"struct.std::_Vector_base.32"* %36) #3
  %37 = load i32, i32* @x.93
  %38 = load i32, i32* @y.94
  %39 = add i32 %37, 1368625321
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, 1368625321
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  br i1 %49, label %51, label %108

; <label>:51:                                     ; preds = %32
  br label %52

; <label>:52:                                     ; preds = %51
  %53 = load i32, i32* @x.93
  %54 = load i32, i32* @y.94
  %55 = add i32 %53, 1268999305
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, 1268999305
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 false, true
  %66 = and i1 %63, false
  %67 = and i1 %61, %65
  %68 = and i1 %64, false
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 false, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  br i1 %77, label %79, label %113

; <label>:79:                                     ; preds = %52, %113
  %80 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %80) #12
  %81 = load i32, i32* @x.93
  %82 = load i32, i32* @y.94
  %83 = add i32 %81, 883679217
  %84 = sub i32 %83, 1
  %85 = sub i32 %84, 883679217
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = xor i1 %89, true
  %92 = xor i1 %90, true
  %93 = xor i1 false, true
  %94 = and i1 %91, false
  %95 = and i1 %89, %93
  %96 = and i1 %92, false
  %97 = and i1 %90, %93
  %98 = or i1 %94, %95
  %99 = or i1 %96, %97
  %100 = xor i1 %98, %99
  %101 = or i1 %91, %92
  %102 = xor i1 %101, true
  %103 = or i1 false, %93
  %104 = and i1 %102, %103
  %105 = or i1 %100, %104
  %106 = or i1 %89, %90
  br i1 %105, label %107, label %113

; <label>:107:                                    ; preds = %79
  unreachable

; <label>:108:                                    ; preds = %32, %18
  %109 = landingpad { i8*, i32 }
          catch i8* null
  %110 = extractvalue { i8*, i32 } %109, 0
  store i8* %110, i8** %3, align 8
  %111 = extractvalue { i8*, i32 } %109, 1
  store i32 %111, i32* %4, align 4
  %112 = bitcast %"class.std::vector.31"* %5 to %"struct.std::_Vector_base.32"*
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EED2Ev(%"struct.std::_Vector_base.32"* %112) #3
  br label %32

; <label>:113:                                    ; preds = %79, %52
  %114 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %114) #12
  br label %79
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EE7emplaceIJRxRiEEEvDpOT_(%"class.std::priority_queue"*, i64* dereferenceable(8), i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.95
  %7 = load i32, i32* @y.96
  %8 = add i32 %6, 1977326749
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1977326749
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1377607786, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %103
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1377607786, label %20
    i32 -1889103664, label %28
    i32 888151524, label %78
    i32 -139267868, label %79
  ]

; <label>:19:                                     ; preds = %17
  br label %103

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1889103664, i32 -139267868
  store i32 %27, i32* %16
  br label %103

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::priority_queue"*, align 8
  %30 = alloca i64*, align 8
  %31 = alloca i32*, align 8
  %32 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %33 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %34 = alloca %"struct.std::greater", align 1
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %29, align 8
  store i64* %1, i64** %30, align 8
  store i32* %2, i32** %31, align 8
  %35 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %29, align 8
  %36 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %35, i32 0, i32 0
  %37 = load i64*, i64** %30, align 8
  %38 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %37) #3
  %39 = load i32*, i32** %31, align 8
  %40 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %39) #3
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EE12emplace_backIJRxRiEEEvDpOT_(%"class.std::vector.31"* %36, i64* dereferenceable(8) %38, i32* dereferenceable(4) %40)
  %41 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %35, i32 0, i32 0
  %42 = call %"struct.std::pair.36"* @_ZNSt6vectorISt4pairIxxESaIS1_EE5beginEv(%"class.std::vector.31"* %41) #3
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %32, i32 0, i32 0
  store %"struct.std::pair.36"* %42, %"struct.std::pair.36"** %43, align 8
  %44 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %35, i32 0, i32 0
  %45 = call %"struct.std::pair.36"* @_ZNSt6vectorISt4pairIxxESaIS1_EE3endEv(%"class.std::vector.31"* %44) #3
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %33, i32 0, i32 0
  store %"struct.std::pair.36"* %45, %"struct.std::pair.36"** %46, align 8
  %47 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %35, i32 0, i32 1
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %32, i32 0, i32 0
  %49 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %48, align 8
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %33, i32 0, i32 0
  %51 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %50, align 8
  call void @_ZSt9push_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEESt7greaterIS3_EEvT_SB_T0_(%"struct.std::pair.36"* %49, %"struct.std::pair.36"* %51)
  %52 = load i32, i32* @x.95
  %53 = load i32, i32* @y.96
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 888151524, i32 -139267868
  store i32 %77, i32* %16
  br label %103

; <label>:78:                                     ; preds = %17
  ret void

; <label>:79:                                     ; preds = %17
  %80 = alloca %"class.std::priority_queue"*, align 8
  %81 = alloca i64*, align 8
  %82 = alloca i32*, align 8
  %83 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %84 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %85 = alloca %"struct.std::greater", align 1
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %80, align 8
  store i64* %1, i64** %81, align 8
  store i32* %2, i32** %82, align 8
  %86 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %80, align 8
  %87 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %86, i32 0, i32 0
  %88 = load i64*, i64** %81, align 8
  %89 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %88) #3
  %90 = load i32*, i32** %82, align 8
  %91 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %90) #3
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EE12emplace_backIJRxRiEEEvDpOT_(%"class.std::vector.31"* %87, i64* dereferenceable(8) %89, i32* dereferenceable(4) %91)
  %92 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %86, i32 0, i32 0
  %93 = call %"struct.std::pair.36"* @_ZNSt6vectorISt4pairIxxESaIS1_EE5beginEv(%"class.std::vector.31"* %92) #3
  %94 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %83, i32 0, i32 0
  store %"struct.std::pair.36"* %93, %"struct.std::pair.36"** %94, align 8
  %95 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %86, i32 0, i32 0
  %96 = call %"struct.std::pair.36"* @_ZNSt6vectorISt4pairIxxESaIS1_EE3endEv(%"class.std::vector.31"* %95) #3
  %97 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %84, i32 0, i32 0
  store %"struct.std::pair.36"* %96, %"struct.std::pair.36"** %97, align 8
  %98 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %86, i32 0, i32 1
  %99 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %83, i32 0, i32 0
  %100 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %99, align 8
  %101 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %84, i32 0, i32 0
  %102 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %101, align 8
  call void @_ZSt9push_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEESt7greaterIS3_EEvT_SB_T0_(%"struct.std::pair.36"* %100, %"struct.std::pair.36"* %102)
  store i32 -1889103664, i32* %16
  br label %103

; <label>:103:                                    ; preds = %79, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EE5emptyEv(%"class.std::priority_queue"*) #4 comdat align 2 {
  %2 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %2, align 8
  %3 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %3, i32 0, i32 0
  %5 = call zeroext i1 @_ZNKSt6vectorISt4pairIxxESaIS1_EE5emptyEv(%"class.std::vector.31"* %4) #3
  ret i1 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair.36"* @_ZNKSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EE3topEv(%"class.std::priority_queue"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::pair.36"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.99
  %6 = load i32, i32* @y.100
  %7 = sub i32 %5, 79566772
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 79566772
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2025494785, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2025494785, label %19
    i32 -2132336279, label %27
    i32 2000681320, label %47
    i32 1042057167, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -2132336279, i32 1042057167
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %28, align 8
  %29 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %28, align 8
  %30 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %29, i32 0, i32 0
  %31 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNKSt6vectorISt4pairIxxESaIS1_EE5frontEv(%"class.std::vector.31"* %30) #3
  store %"struct.std::pair.36"* %31, %"struct.std::pair.36"** %2
  %32 = load i32, i32* @x.99
  %33 = load i32, i32* @y.100
  %34 = sub i32 %32, -983373332
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -983373332
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 2000681320, i32 1042057167
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile %"struct.std::pair.36"*, %"struct.std::pair.36"** %2
  ret %"struct.std::pair.36"* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %50, align 8
  %51 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %50, align 8
  %52 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %51, i32 0, i32 0
  %53 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNKSt6vectorISt4pairIxxESaIS1_EE5frontEv(%"class.std::vector.31"* %52) #3
  store i32 -2132336279, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EE3popEv(%"class.std::priority_queue"*) #0 comdat align 2 {
  %2 = alloca %"class.std::priority_queue"*, align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %5 = alloca %"struct.std::greater", align 1
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %2, align 8
  %6 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %2, align 8
  %7 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %6, i32 0, i32 0
  %8 = call %"struct.std::pair.36"* @_ZNSt6vectorISt4pairIxxESaIS1_EE5beginEv(%"class.std::vector.31"* %7) #3
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %3, i32 0, i32 0
  store %"struct.std::pair.36"* %8, %"struct.std::pair.36"** %9, align 8
  %10 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %6, i32 0, i32 0
  %11 = call %"struct.std::pair.36"* @_ZNSt6vectorISt4pairIxxESaIS1_EE3endEv(%"class.std::vector.31"* %10) #3
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %4, i32 0, i32 0
  store %"struct.std::pair.36"* %11, %"struct.std::pair.36"** %12, align 8
  %13 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %6, i32 0, i32 1
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %3, i32 0, i32 0
  %15 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %14, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %4, i32 0, i32 0
  %17 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %16, align 8
  call void @_ZSt8pop_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEESt7greaterIS3_EEvT_SB_T0_(%"struct.std::pair.36"* %15, %"struct.std::pair.36"* %17)
  %18 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %6, i32 0, i32 0
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EE8pop_backEv(%"class.std::vector.31"* %18) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.26"* @_ZNKSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEixEm(%"class.std::vector.21"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector.21"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.21"* %0, %"class.std::vector.21"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.21"*, %"class.std::vector.21"** %3, align 8
  %6 = bitcast %"class.std::vector.21"* %5 to %"struct.std::_Vector_base.22"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.22", %"struct.std::_Vector_base.22"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.26"*, %"class.std::vector.26"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::vector.26", %"class.std::vector.26"* %9, i64 %10
  ret %"class.std::vector.26"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.Edge* @_ZNKSt6vectorI4EdgeSaIS0_EE5beginEv(%"class.std::vector.26"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.26"*, align 8
  %4 = alloca %struct.Edge*, align 8
  store %"class.std::vector.26"* %0, %"class.std::vector.26"** %3, align 8
  %5 = load %"class.std::vector.26"*, %"class.std::vector.26"** %3, align 8
  %6 = bitcast %"class.std::vector.26"* %5 to %"struct.std::_Vector_base.27"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %struct.Edge*, %struct.Edge** %8, align 8
  store %struct.Edge* %9, %struct.Edge** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS1_SaIS1_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %2, %struct.Edge** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %11 = load %struct.Edge*, %struct.Edge** %10, align 8
  ret %struct.Edge* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.Edge* @_ZNKSt6vectorI4EdgeSaIS0_EE3endEv(%"class.std::vector.26"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.26"*, align 8
  %4 = alloca %struct.Edge*, align 8
  store %"class.std::vector.26"* %0, %"class.std::vector.26"** %3, align 8
  %5 = load %"class.std::vector.26"*, %"class.std::vector.26"** %3, align 8
  %6 = bitcast %"class.std::vector.26"* %5 to %"struct.std::_Vector_base.27"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %7, i32 0, i32 1
  %9 = load %struct.Edge*, %struct.Edge** %8, align 8
  store %struct.Edge* %9, %struct.Edge** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS1_SaIS1_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %2, %struct.Edge** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %11 = load %struct.Edge*, %struct.Edge** %10, align 8
  ret %struct.Edge* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPK4EdgeSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #4 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call dereferenceable(8) %struct.Edge** @_ZNK9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %7 = load %struct.Edge*, %struct.Edge** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call dereferenceable(8) %struct.Edge** @_ZNK9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %8) #3
  %10 = load %struct.Edge*, %struct.Edge** %9, align 8
  %11 = icmp ne %struct.Edge* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %struct.Edge* @_ZNK9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %5 = load %struct.Edge*, %struct.Edge** %4, align 8
  ret %struct.Edge* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EE7emplaceIJRxRKxEEEvDpOT_(%"class.std::priority_queue"*, i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"class.std::priority_queue"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %9 = alloca %"struct.std::greater", align 1
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %10 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %4, align 8
  %11 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %10, i32 0, i32 0
  %12 = load i64*, i64** %5, align 8
  %13 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %12) #3
  %14 = load i64*, i64** %6, align 8
  %15 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %14) #3
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EE12emplace_backIJRxRKxEEEvDpOT_(%"class.std::vector.31"* %11, i64* dereferenceable(8) %13, i64* dereferenceable(8) %15)
  %16 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %10, i32 0, i32 0
  %17 = call %"struct.std::pair.36"* @_ZNSt6vectorISt4pairIxxESaIS1_EE5beginEv(%"class.std::vector.31"* %16) #3
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %7, i32 0, i32 0
  store %"struct.std::pair.36"* %17, %"struct.std::pair.36"** %18, align 8
  %19 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %10, i32 0, i32 0
  %20 = call %"struct.std::pair.36"* @_ZNSt6vectorISt4pairIxxESaIS1_EE3endEv(%"class.std::vector.31"* %19) #3
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %8, i32 0, i32 0
  store %"struct.std::pair.36"* %20, %"struct.std::pair.36"** %21, align 8
  %22 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %10, i32 0, i32 1
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %7, i32 0, i32 0
  %24 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %23, align 8
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %8, i32 0, i32 0
  %26 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %25, align 8
  call void @_ZSt9push_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEESt7greaterIS3_EEvT_SB_T0_(%"struct.std::pair.36"* %24, %"struct.std::pair.36"* %26)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS1_SaIS1_EEEppEv(%"class.__gnu_cxx::__normal_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %5 = load %struct.Edge*, %struct.Edge** %4, align 8
  %6 = getelementptr inbounds %struct.Edge, %struct.Edge* %5, i32 1
  store %struct.Edge* %6, %struct.Edge** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt14priority_queueISt4pairIxxESt6vectorIS1_SaIS1_EESt7greaterIS1_EED2Ev(%"class.std::priority_queue"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.117
  %5 = load i32, i32* @y.118
  %6 = sub i32 %4, 102639931
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 102639931
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1604364646, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1604364646, label %18
    i32 2139194208, label %26
    i32 -1442213142, label %57
    i32 -1415651915, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 2139194208, i32 -1415651915
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %27, align 8
  %28 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %27, align 8
  %29 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %28, i32 0, i32 0
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EED2Ev(%"class.std::vector.31"* %29) #3
  %30 = load i32, i32* @x.117
  %31 = load i32, i32* @y.118
  %32 = sub i32 %30, -2058084958
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -2058084958
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -1442213142, i32 -1415651915
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::priority_queue"*, align 8
  store %"class.std::priority_queue"* %0, %"class.std::priority_queue"** %59, align 8
  %60 = load %"class.std::priority_queue"*, %"class.std::priority_queue"** %59, align 8
  %61 = getelementptr inbounds %"class.std::priority_queue", %"class.std::priority_queue"* %60, i32 0, i32 0
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EED2Ev(%"class.std::vector.31"* %61) #3
  store i32 2139194208, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define void @_Z8get_pathRKSt6vectorIxSaIxEEx(%"class.std::vector.0"* noalias sret, %"class.std::vector.0"* dereferenceable(24), i64) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i1, align 1
  %7 = alloca i64, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %4, align 8
  store i64 %2, i64* %5, align 8
  store i1 false, i1* %6, align 1
  call void @_ZNSt6vectorIxSaIxEEC2Ev(%"class.std::vector.0"* %0) #3
  %12 = load i64, i64* %5, align 8
  store i64 %12, i64* %7, align 8
  br label %13

; <label>:13:                                     ; preds = %157, %3
  %14 = load i32, i32* @x.119
  %15 = load i32, i32* @y.120
  %16 = add i32 %14, 1233167775
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, 1233167775
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  br i1 %26, label %28, label %315

; <label>:28:                                     ; preds = %13, %315
  %29 = load i64, i64* %7, align 8
  %30 = icmp ne i64 %29, -1
  %31 = load i32, i32* @x.119
  %32 = load i32, i32* @y.120
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  br i1 %54, label %56, label %315

; <label>:56:                                     ; preds = %28
  br i1 %30, label %57, label %162

; <label>:57:                                     ; preds = %56
  invoke void @_ZNSt6vectorIxSaIxEE9push_backERKx(%"class.std::vector.0"* %0, i64* dereferenceable(8) %7)
          to label %58 unwind label %158

; <label>:58:                                     ; preds = %57
  %59 = load i32, i32* @x.119
  %60 = load i32, i32* @y.120
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  br i1 %70, label %72, label %318

; <label>:72:                                     ; preds = %58, %318
  %73 = load i32, i32* @x.119
  %74 = load i32, i32* @y.120
  %75 = sub i32 %73, 1812831064
  %76 = sub i32 %75, 1
  %77 = add i32 %76, 1812831064
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = xor i1 %81, true
  %84 = xor i1 %82, true
  %85 = xor i1 false, true
  %86 = and i1 %83, false
  %87 = and i1 %81, %85
  %88 = and i1 %84, false
  %89 = and i1 %82, %85
  %90 = or i1 %86, %87
  %91 = or i1 %88, %89
  %92 = xor i1 %90, %91
  %93 = or i1 %83, %84
  %94 = xor i1 %93, true
  %95 = or i1 false, %85
  %96 = and i1 %94, %95
  %97 = or i1 %92, %96
  %98 = or i1 %81, %82
  br i1 %97, label %99, label %318

; <label>:99:                                     ; preds = %72
  br label %100

; <label>:100:                                    ; preds = %99
  %101 = load i32, i32* @x.119
  %102 = load i32, i32* @y.120
  %103 = sub i32 0, 1
  %104 = add i32 %101, %103
  %105 = sub i32 %101, 1
  %106 = mul i32 %101, %104
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %102, 10
  %110 = xor i1 %108, true
  %111 = xor i1 %109, true
  %112 = xor i1 false, true
  %113 = and i1 %110, false
  %114 = and i1 %108, %112
  %115 = and i1 %111, false
  %116 = and i1 %109, %112
  %117 = or i1 %113, %114
  %118 = or i1 %115, %116
  %119 = xor i1 %117, %118
  %120 = or i1 %110, %111
  %121 = xor i1 %120, true
  %122 = or i1 false, %112
  %123 = and i1 %121, %122
  %124 = or i1 %119, %123
  %125 = or i1 %108, %109
  br i1 %124, label %126, label %319

; <label>:126:                                    ; preds = %100, %319
  %127 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %128 = load i64, i64* %7, align 8
  %129 = call dereferenceable(8) i64* @_ZNKSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %127, i64 %128) #3
  %130 = load i64, i64* %129, align 8
  store i64 %130, i64* %7, align 8
  %131 = load i32, i32* @x.119
  %132 = load i32, i32* @y.120
  %133 = add i32 %131, -1582700660
  %134 = sub i32 %133, 1
  %135 = sub i32 %134, -1582700660
  %136 = sub i32 %131, 1
  %137 = mul i32 %131, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %132, 10
  %141 = xor i1 %139, true
  %142 = xor i1 %140, true
  %143 = xor i1 false, true
  %144 = and i1 %141, false
  %145 = and i1 %139, %143
  %146 = and i1 %142, false
  %147 = and i1 %140, %143
  %148 = or i1 %144, %145
  %149 = or i1 %146, %147
  %150 = xor i1 %148, %149
  %151 = or i1 %141, %142
  %152 = xor i1 %151, true
  %153 = or i1 false, %143
  %154 = and i1 %152, %153
  %155 = or i1 %150, %154
  %156 = or i1 %139, %140
  br i1 %155, label %157, label %319

; <label>:157:                                    ; preds = %126
  br label %13

; <label>:158:                                    ; preds = %223, %57
  %159 = landingpad { i8*, i32 }
          cleanup
  %160 = extractvalue { i8*, i32 } %159, 0
  store i8* %160, i8** %8, align 8
  %161 = extractvalue { i8*, i32 } %159, 1
  store i32 %161, i32* %9, align 4
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"* %0) #3
  br label %270

; <label>:162:                                    ; preds = %56
  %163 = load i32, i32* @x.119
  %164 = load i32, i32* @y.120
  %165 = sub i32 0, 1
  %166 = add i32 %163, %165
  %167 = sub i32 %163, 1
  %168 = mul i32 %163, %166
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %164, 10
  %172 = xor i1 %170, true
  %173 = xor i1 %171, true
  %174 = xor i1 false, true
  %175 = and i1 %172, false
  %176 = and i1 %170, %174
  %177 = and i1 %173, false
  %178 = and i1 %171, %174
  %179 = or i1 %175, %176
  %180 = or i1 %177, %178
  %181 = xor i1 %179, %180
  %182 = or i1 %172, %173
  %183 = xor i1 %182, true
  %184 = or i1 false, %174
  %185 = and i1 %183, %184
  %186 = or i1 %181, %185
  %187 = or i1 %170, %171
  br i1 %186, label %188, label %324

; <label>:188:                                    ; preds = %162, %324
  %189 = call i64* @_ZNSt6vectorIxSaIxEE5beginEv(%"class.std::vector.0"* %0) #3
  %190 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %10, i32 0, i32 0
  store i64* %189, i64** %190, align 8
  %191 = call i64* @_ZNSt6vectorIxSaIxEE3endEv(%"class.std::vector.0"* %0) #3
  %192 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %11, i32 0, i32 0
  store i64* %191, i64** %192, align 8
  %193 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %10, i32 0, i32 0
  %194 = load i64*, i64** %193, align 8
  %195 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %11, i32 0, i32 0
  %196 = load i64*, i64** %195, align 8
  %197 = load i32, i32* @x.119
  %198 = load i32, i32* @y.120
  %199 = add i32 %197, 1904597552
  %200 = sub i32 %199, 1
  %201 = sub i32 %200, 1904597552
  %202 = sub i32 %197, 1
  %203 = mul i32 %197, %201
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %198, 10
  %207 = xor i1 %205, true
  %208 = xor i1 %206, true
  %209 = xor i1 true, true
  %210 = and i1 %207, true
  %211 = and i1 %205, %209
  %212 = and i1 %208, true
  %213 = and i1 %206, %209
  %214 = or i1 %210, %211
  %215 = or i1 %212, %213
  %216 = xor i1 %214, %215
  %217 = or i1 %207, %208
  %218 = xor i1 %217, true
  %219 = or i1 true, %209
  %220 = and i1 %218, %219
  %221 = or i1 %216, %220
  %222 = or i1 %205, %206
  br i1 %221, label %223, label %324

; <label>:223:                                    ; preds = %188
  invoke void @_ZSt7reverseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEEvT_S7_(i64* %194, i64* %196)
          to label %224 unwind label %158

; <label>:224:                                    ; preds = %223
  %225 = load i32, i32* @x.119
  %226 = load i32, i32* @y.120
  %227 = sub i32 %225, -1424009569
  %228 = sub i32 %227, 1
  %229 = add i32 %228, -1424009569
  %230 = sub i32 %225, 1
  %231 = mul i32 %225, %229
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %226, 10
  %235 = xor i1 %233, true
  %236 = xor i1 %234, true
  %237 = xor i1 false, true
  %238 = and i1 %235, false
  %239 = and i1 %233, %237
  %240 = and i1 %236, false
  %241 = and i1 %234, %237
  %242 = or i1 %238, %239
  %243 = or i1 %240, %241
  %244 = xor i1 %242, %243
  %245 = or i1 %235, %236
  %246 = xor i1 %245, true
  %247 = or i1 false, %237
  %248 = and i1 %246, %247
  %249 = or i1 %244, %248
  %250 = or i1 %233, %234
  br i1 %249, label %251, label %333

; <label>:251:                                    ; preds = %224, %333
  store i1 true, i1* %6, align 1
  %252 = load i1, i1* %6, align 1
  %253 = load i32, i32* @x.119
  %254 = load i32, i32* @y.120
  %255 = sub i32 %253, -2075090124
  %256 = sub i32 %255, 1
  %257 = add i32 %256, -2075090124
  %258 = sub i32 %253, 1
  %259 = mul i32 %253, %257
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %254, 10
  %263 = and i1 %261, %262
  %264 = xor i1 %261, %262
  %265 = or i1 %263, %264
  %266 = or i1 %261, %262
  br i1 %265, label %267, label %333

; <label>:267:                                    ; preds = %251
  br i1 %252, label %269, label %268

; <label>:268:                                    ; preds = %267
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"* %0) #3
  br label %269

; <label>:269:                                    ; preds = %268, %267
  ret void

; <label>:270:                                    ; preds = %158
  %271 = load i32, i32* @x.119
  %272 = load i32, i32* @y.120
  %273 = sub i32 0, 1
  %274 = add i32 %271, %273
  %275 = sub i32 %271, 1
  %276 = mul i32 %271, %274
  %277 = urem i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %272, 10
  %280 = and i1 %278, %279
  %281 = xor i1 %278, %279
  %282 = or i1 %280, %281
  %283 = or i1 %278, %279
  br i1 %282, label %284, label %335

; <label>:284:                                    ; preds = %270, %335
  %285 = load i8*, i8** %8, align 8
  %286 = load i32, i32* %9, align 4
  %287 = insertvalue { i8*, i32 } undef, i8* %285, 0
  %288 = insertvalue { i8*, i32 } %287, i32 %286, 1
  %289 = load i32, i32* @x.119
  %290 = load i32, i32* @y.120
  %291 = sub i32 0, 1
  %292 = add i32 %289, %291
  %293 = sub i32 %289, 1
  %294 = mul i32 %289, %292
  %295 = urem i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %290, 10
  %298 = xor i1 %296, true
  %299 = xor i1 %297, true
  %300 = xor i1 false, true
  %301 = and i1 %298, false
  %302 = and i1 %296, %300
  %303 = and i1 %299, false
  %304 = and i1 %297, %300
  %305 = or i1 %301, %302
  %306 = or i1 %303, %304
  %307 = xor i1 %305, %306
  %308 = or i1 %298, %299
  %309 = xor i1 %308, true
  %310 = or i1 false, %300
  %311 = and i1 %309, %310
  %312 = or i1 %307, %311
  %313 = or i1 %296, %297
  br i1 %312, label %314, label %335

; <label>:314:                                    ; preds = %284
  resume { i8*, i32 } %288

; <label>:315:                                    ; preds = %28, %13
  %316 = load i64, i64* %7, align 8
  %317 = icmp ne i64 %316, -1
  br label %28

; <label>:318:                                    ; preds = %72, %58
  br label %72

; <label>:319:                                    ; preds = %126, %100
  %320 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %321 = load i64, i64* %7, align 8
  %322 = call dereferenceable(8) i64* @_ZNKSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %320, i64 %321) #3
  %323 = load i64, i64* %322, align 8
  store i64 %323, i64* %7, align 8
  br label %126

; <label>:324:                                    ; preds = %188, %162
  %325 = call i64* @_ZNSt6vectorIxSaIxEE5beginEv(%"class.std::vector.0"* %0) #3
  %326 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %10, i32 0, i32 0
  store i64* %325, i64** %326, align 8
  %327 = call i64* @_ZNSt6vectorIxSaIxEE3endEv(%"class.std::vector.0"* %0) #3
  %328 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %11, i32 0, i32 0
  store i64* %327, i64** %328, align 8
  %329 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %10, i32 0, i32 0
  %330 = load i64*, i64** %329, align 8
  %331 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %11, i32 0, i32 0
  %332 = load i64*, i64** %331, align 8
  br label %188

; <label>:333:                                    ; preds = %251, %224
  store i1 true, i1* %6, align 1
  %334 = load i1, i1* %6, align 1
  br label %251

; <label>:335:                                    ; preds = %284, %270
  %336 = load i8*, i8** %8, align 8
  %337 = load i32, i32* %9, align 4
  %338 = insertvalue { i8*, i32 } undef, i8* %336, 0
  %339 = insertvalue { i8*, i32 } %338, i32 %337, 1
  br label %284
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEEC2Ev(%"class.std::vector.0"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  invoke void @_ZNSt12_Vector_baseIxSaIxEEC2Ev(%"struct.std::_Vector_base.1"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* @x.121
  %8 = load i32, i32* @y.122
  %9 = sub i32 %7, 721369655
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 721369655
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %8, 10
  %17 = and i1 %15, %16
  %18 = xor i1 %15, %16
  %19 = or i1 %17, %18
  %20 = or i1 %15, %16
  br i1 %19, label %21, label %51

; <label>:21:                                     ; preds = %6, %51
  %22 = landingpad { i8*, i32 }
          catch i8* null
  %23 = extractvalue { i8*, i32 } %22, 0
  call void @__clang_call_terminate(i8* %23) #12
  %24 = load i32, i32* @x.121
  %25 = load i32, i32* @y.122
  %26 = sub i32 %24, 290683344
  %27 = sub i32 %26, 1
  %28 = add i32 %27, 290683344
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 false, true
  %37 = and i1 %34, false
  %38 = and i1 %32, %36
  %39 = and i1 %35, false
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 false, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  br i1 %48, label %50, label %51

; <label>:50:                                     ; preds = %21
  unreachable

; <label>:51:                                     ; preds = %21, %6
  %52 = landingpad { i8*, i32 }
          catch i8* null
  %53 = extractvalue { i8*, i32 } %52, 0
  call void @__clang_call_terminate(i8* %53) #12
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNKSt6vectorIxSaIxEEixEm(%"class.std::vector.0"*, i64) #4 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.123
  %7 = load i32, i32* @y.124
  %8 = add i32 %6, -2001874099
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -2001874099
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 2047861312, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %65
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 2047861312, label %20
    i32 -292728692, label %28
    i32 -142817082, label %53
    i32 -232248944, label %55
  ]

; <label>:19:                                     ; preds = %17
  br label %65

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -292728692, i32 -232248944
  store i32 %27, i32* %16
  br label %65

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.0"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector.0"*, %"class.std::vector.0"** %29, align 8
  %32 = bitcast %"class.std::vector.0"* %31 to %"struct.std::_Vector_base.1"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = load i64, i64* %30, align 8
  %37 = getelementptr inbounds i64, i64* %35, i64 %36
  store i64* %37, i64** %3
  %38 = load i32, i32* @x.123
  %39 = load i32, i32* @y.124
  %40 = add i32 %38, -1479889540
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, -1479889540
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -142817082, i32 -232248944
  store i32 %52, i32* %16
  br label %65

; <label>:53:                                     ; preds = %17
  %54 = load volatile i64*, i64** %3
  ret i64* %54

; <label>:55:                                     ; preds = %17
  %56 = alloca %"class.std::vector.0"*, align 8
  %57 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %56, align 8
  store i64 %1, i64* %57, align 8
  %58 = load %"class.std::vector.0"*, %"class.std::vector.0"** %56, align 8
  %59 = bitcast %"class.std::vector.0"* %58 to %"struct.std::_Vector_base.1"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %59, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %60, i32 0, i32 0
  %62 = load i64*, i64** %61, align 8
  %63 = load i64, i64* %57, align 8
  %64 = getelementptr inbounds i64, i64* %62, i64 %63
  store i32 -292728692, i32* %16
  br label %65

; <label>:65:                                     ; preds = %55, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt7reverseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEEvT_S7_(i64*, i64*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.125
  %6 = load i32, i32* @y.126
  %7 = sub i32 %5, 1588603223
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1588603223
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 391839110, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 391839110, label %19
    i32 1950940146, label %27
    i32 -483087228, label %59
    i32 19170187, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1950940146, i32 19170187
  store i32 %26, i32* %15
  br label %77

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %32 = alloca %"struct.std::random_access_iterator_tag", align 1
  %33 = alloca %"struct.std::random_access_iterator_tag", align 1
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %28, i32 0, i32 0
  store i64* %0, i64** %34, align 8
  %35 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %29, i32 0, i32 0
  store i64* %1, i64** %35, align 8
  %36 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %30 to i8*
  %37 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 8, i32 8, i1 false)
  %38 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %31 to i8*
  %39 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 8, i32 8, i1 false)
  call void @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt15iterator_traitsIT_E17iterator_categoryERKS8_(%"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %28)
  %40 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %30, i32 0, i32 0
  %41 = load i64*, i64** %40, align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %31, i32 0, i32 0
  %43 = load i64*, i64** %42, align 8
  call void @_ZSt9__reverseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEEvT_S7_St26random_access_iterator_tag(i64* %41, i64* %43)
  %44 = load i32, i32* @x.125
  %45 = load i32, i32* @y.126
  %46 = sub i32 %44, 911587747
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 911587747
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -483087228, i32 19170187
  store i32 %58, i32* %15
  br label %77

; <label>:59:                                     ; preds = %16
  ret void

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %62 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %63 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %64 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %65 = alloca %"struct.std::random_access_iterator_tag", align 1
  %66 = alloca %"struct.std::random_access_iterator_tag", align 1
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %61, i32 0, i32 0
  store i64* %0, i64** %67, align 8
  %68 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %62, i32 0, i32 0
  store i64* %1, i64** %68, align 8
  %69 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %63 to i8*
  %70 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %69, i8* %70, i64 8, i32 8, i1 false)
  %71 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %64 to i8*
  %72 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %71, i8* %72, i64 8, i32 8, i1 false)
  call void @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt15iterator_traitsIT_E17iterator_categoryERKS8_(%"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %61)
  %73 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %63, i32 0, i32 0
  %74 = load i64*, i64** %73, align 8
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %64, i32 0, i32 0
  %76 = load i64*, i64** %75, align 8
  call void @_ZSt9__reverseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEEvT_S7_St26random_access_iterator_tag(i64* %74, i64* %76)
  store i32 1950940146, i32* %15
  br label %77

; <label>:77:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt6vectorIxSaIxEE5beginEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %4 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %5 = bitcast %"class.std::vector.0"* %4 to %"struct.std::_Vector_base.1"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.38"* %2, i64** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %2, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  ret i64* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt6vectorIxSaIxEE3endEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.129
  %6 = load i32, i32* @y.130
  %7 = add i32 %5, -1388603452
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1388603452
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -236931437, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -236931437, label %19
    i32 1111009446, label %27
    i32 1573236688, label %51
    i32 1836491476, label %53
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1111009446, i32 1836491476
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %29 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %29, align 8
  %30 = load %"class.std::vector.0"*, %"class.std::vector.0"** %29, align 8
  %31 = bitcast %"class.std::vector.0"* %30 to %"struct.std::_Vector_base.1"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %32, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.38"* %28, i64** dereferenceable(8) %33) #3
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %28, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  store i64* %35, i64** %2
  %36 = load i32, i32* @x.129
  %37 = load i32, i32* @y.130
  %38 = add i32 %36, -1766582057
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, -1766582057
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 1573236688, i32 1836491476
  store i32 %50, i32* %15
  br label %62

; <label>:51:                                     ; preds = %16
  %52 = load volatile i64*, i64** %2
  ret i64* %52

; <label>:53:                                     ; preds = %16
  %54 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %55 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %55, align 8
  %56 = load %"class.std::vector.0"*, %"class.std::vector.0"** %55, align 8
  %57 = bitcast %"class.std::vector.0"* %56 to %"struct.std::_Vector_base.1"*
  %58 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %57, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %58, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.38"* %54, i64** dereferenceable(8) %59) #3
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %54, i32 0, i32 0
  %61 = load i64*, i64** %60, align 8
  store i32 1111009446, i32* %15
  br label %62

; <label>:62:                                     ; preds = %53, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define void @_Z5splitRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEc(%"class.std::vector.39"* noalias sret, %"class.std::__cxx11::basic_string"* dereferenceable(32), i8 signext) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %5 = alloca i8, align 1
  %6 = alloca i1, align 1
  %7 = alloca %"class.std::__cxx11::basic_stringstream", align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = alloca %"class.std::__cxx11::basic_string", align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %4, align 8
  store i8 %2, i8* %5, align 1
  store i1 false, i1* %6, align 1
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev(%"class.std::vector.39"* %0) #3
  %11 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %12 = invoke i32 @_ZStorSt13_Ios_OpenmodeS_(i32 16, i32 8)
          to label %13 unwind label %76

; <label>:13:                                     ; preds = %3
  invoke void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1ERKNS_12basic_stringIcS2_S3_EESt13_Ios_Openmode(%"class.std::__cxx11::basic_stringstream"* %7, %"class.std::__cxx11::basic_string"* dereferenceable(32) %11, i32 %12)
          to label %14 unwind label %76

; <label>:14:                                     ; preds = %13
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_string"* %10) #3
  br label %15

; <label>:15:                                     ; preds = %179, %14
  %16 = load i32, i32* @x.131
  %17 = load i32, i32* @y.132
  %18 = add i32 %16, 1837577768
  %19 = sub i32 %18, 1
  %20 = sub i32 %19, 1837577768
  %21 = sub i32 %16, 1
  %22 = mul i32 %16, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %17, 10
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  br i1 %40, label %42, label %232

; <label>:42:                                     ; preds = %15, %232
  %43 = bitcast %"class.std::__cxx11::basic_stringstream"* %7 to %"class.std::basic_istream"*
  %44 = load i8, i8* %5, align 1
  %45 = load i32, i32* @x.131
  %46 = load i32, i32* @y.132
  %47 = add i32 %45, 76829827
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, 76829827
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  br i1 %57, label %59, label %232

; <label>:59:                                     ; preds = %42
  %60 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EES4_(%"class.std::basic_istream"* dereferenceable(280) %43, %"class.std::__cxx11::basic_string"* dereferenceable(32) %10, i8 signext %44)
          to label %61 unwind label %80

; <label>:61:                                     ; preds = %59
  %62 = bitcast %"class.std::basic_istream"* %60 to i8**
  %63 = load i8*, i8** %62, align 8
  %64 = getelementptr i8, i8* %63, i64 -24
  %65 = bitcast i8* %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.std::basic_istream"* %60 to i8*
  %68 = getelementptr inbounds i8, i8* %67, i64 %66
  %69 = bitcast i8* %68 to %"class.std::basic_ios"*
  %70 = invoke zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv(%"class.std::basic_ios"* %69)
          to label %71 unwind label %80

; <label>:71:                                     ; preds = %61
  br i1 %70, label %72, label %180

; <label>:72:                                     ; preds = %71
  %73 = call zeroext i1 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv(%"class.std::__cxx11::basic_string"* %10) #3
  br i1 %73, label %125, label %74

; <label>:74:                                     ; preds = %72
  invoke void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_(%"class.std::vector.39"* %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %10)
          to label %75 unwind label %80

; <label>:75:                                     ; preds = %74
  br label %125

; <label>:76:                                     ; preds = %13, %3
  %77 = landingpad { i8*, i32 }
          cleanup
  %78 = extractvalue { i8*, i32 } %77, 0
  store i8* %78, i8** %8, align 8
  %79 = extractvalue { i8*, i32 } %77, 1
  store i32 %79, i32* %9, align 4
  br label %184

; <label>:80:                                     ; preds = %74, %61, %59
  %81 = load i32, i32* @x.131
  %82 = load i32, i32* @y.132
  %83 = sub i32 %81, -885468951
  %84 = sub i32 %83, 1
  %85 = add i32 %84, -885468951
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = xor i1 %89, true
  %92 = xor i1 %90, true
  %93 = xor i1 true, true
  %94 = and i1 %91, true
  %95 = and i1 %89, %93
  %96 = and i1 %92, true
  %97 = and i1 %90, %93
  %98 = or i1 %94, %95
  %99 = or i1 %96, %97
  %100 = xor i1 %98, %99
  %101 = or i1 %91, %92
  %102 = xor i1 %101, true
  %103 = or i1 true, %93
  %104 = and i1 %102, %103
  %105 = or i1 %100, %104
  %106 = or i1 %89, %90
  br i1 %105, label %107, label %235

; <label>:107:                                    ; preds = %80, %235
  %108 = landingpad { i8*, i32 }
          cleanup
  %109 = extractvalue { i8*, i32 } %108, 0
  store i8* %109, i8** %8, align 8
  %110 = extractvalue { i8*, i32 } %108, 1
  store i32 %110, i32* %9, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %10) #3
  call void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_stringstream"* %7) #3
  %111 = load i32, i32* @x.131
  %112 = load i32, i32* @y.132
  %113 = sub i32 0, 1
  %114 = add i32 %111, %113
  %115 = sub i32 %111, 1
  %116 = mul i32 %111, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %112, 10
  %120 = and i1 %118, %119
  %121 = xor i1 %118, %119
  %122 = or i1 %120, %121
  %123 = or i1 %118, %119
  br i1 %122, label %124, label %235

; <label>:124:                                    ; preds = %107
  br label %184

; <label>:125:                                    ; preds = %75, %72
  %126 = load i32, i32* @x.131
  %127 = load i32, i32* @y.132
  %128 = add i32 %126, -410938379
  %129 = sub i32 %128, 1
  %130 = sub i32 %129, -410938379
  %131 = sub i32 %126, 1
  %132 = mul i32 %126, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %127, 10
  %136 = xor i1 %134, true
  %137 = xor i1 %135, true
  %138 = xor i1 false, true
  %139 = and i1 %136, false
  %140 = and i1 %134, %138
  %141 = and i1 %137, false
  %142 = and i1 %135, %138
  %143 = or i1 %139, %140
  %144 = or i1 %141, %142
  %145 = xor i1 %143, %144
  %146 = or i1 %136, %137
  %147 = xor i1 %146, true
  %148 = or i1 false, %138
  %149 = and i1 %147, %148
  %150 = or i1 %145, %149
  %151 = or i1 %134, %135
  br i1 %150, label %152, label %239

; <label>:152:                                    ; preds = %125, %239
  %153 = load i32, i32* @x.131
  %154 = load i32, i32* @y.132
  %155 = add i32 %153, -191440085
  %156 = sub i32 %155, 1
  %157 = sub i32 %156, -191440085
  %158 = sub i32 %153, 1
  %159 = mul i32 %153, %157
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %154, 10
  %163 = xor i1 %161, true
  %164 = xor i1 %162, true
  %165 = xor i1 false, true
  %166 = and i1 %163, false
  %167 = and i1 %161, %165
  %168 = and i1 %164, false
  %169 = and i1 %162, %165
  %170 = or i1 %166, %167
  %171 = or i1 %168, %169
  %172 = xor i1 %170, %171
  %173 = or i1 %163, %164
  %174 = xor i1 %173, true
  %175 = or i1 false, %165
  %176 = and i1 %174, %175
  %177 = or i1 %172, %176
  %178 = or i1 %161, %162
  br i1 %177, label %179, label %239

; <label>:179:                                    ; preds = %152
  br label %15

; <label>:180:                                    ; preds = %71
  store i1 true, i1* %6, align 1
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %10) #3
  call void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_stringstream"* %7) #3
  %181 = load i1, i1* %6, align 1
  br i1 %181, label %183, label %182

; <label>:182:                                    ; preds = %180
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"class.std::vector.39"* %0) #3
  br label %183

; <label>:183:                                    ; preds = %182, %180
  ret void

; <label>:184:                                    ; preds = %124, %76
  %185 = load i32, i32* @x.131
  %186 = load i32, i32* @y.132
  %187 = sub i32 %185, 1500621025
  %188 = sub i32 %187, 1
  %189 = add i32 %188, 1500621025
  %190 = sub i32 %185, 1
  %191 = mul i32 %185, %189
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %186, 10
  %195 = xor i1 %193, true
  %196 = xor i1 %194, true
  %197 = xor i1 false, true
  %198 = and i1 %195, false
  %199 = and i1 %193, %197
  %200 = and i1 %196, false
  %201 = and i1 %194, %197
  %202 = or i1 %198, %199
  %203 = or i1 %200, %201
  %204 = xor i1 %202, %203
  %205 = or i1 %195, %196
  %206 = xor i1 %205, true
  %207 = or i1 false, %197
  %208 = and i1 %206, %207
  %209 = or i1 %204, %208
  %210 = or i1 %193, %194
  br i1 %209, label %211, label %240

; <label>:211:                                    ; preds = %184, %240
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"class.std::vector.39"* %0) #3
  %212 = load i32, i32* @x.131
  %213 = load i32, i32* @y.132
  %214 = sub i32 %212, 892949025
  %215 = sub i32 %214, 1
  %216 = add i32 %215, 892949025
  %217 = sub i32 %212, 1
  %218 = mul i32 %212, %216
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %213, 10
  %222 = and i1 %220, %221
  %223 = xor i1 %220, %221
  %224 = or i1 %222, %223
  %225 = or i1 %220, %221
  br i1 %224, label %226, label %240

; <label>:226:                                    ; preds = %211
  br label %227

; <label>:227:                                    ; preds = %226
  %228 = load i8*, i8** %8, align 8
  %229 = load i32, i32* %9, align 4
  %230 = insertvalue { i8*, i32 } undef, i8* %228, 0
  %231 = insertvalue { i8*, i32 } %230, i32 %229, 1
  resume { i8*, i32 } %231

; <label>:232:                                    ; preds = %42, %15
  %233 = bitcast %"class.std::__cxx11::basic_stringstream"* %7 to %"class.std::basic_istream"*
  %234 = load i8, i8* %5, align 1
  br label %42

; <label>:235:                                    ; preds = %107, %80
  %236 = landingpad { i8*, i32 }
          cleanup
  %237 = extractvalue { i8*, i32 } %236, 0
  store i8* %237, i8** %8, align 8
  %238 = extractvalue { i8*, i32 } %236, 1
  store i32 %238, i32* %9, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %10) #3
  call void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_stringstream"* %7) #3
  br label %107

; <label>:239:                                    ; preds = %152, %125
  br label %152

; <label>:240:                                    ; preds = %211, %184
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"class.std::vector.39"* %0) #3
  br label %211
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev(%"class.std::vector.39"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.39"*, align 8
  store %"class.std::vector.39"* %0, %"class.std::vector.39"** %2, align 8
  %3 = load %"class.std::vector.39"*, %"class.std::vector.39"** %2, align 8
  %4 = bitcast %"class.std::vector.39"* %3 to %"struct.std::_Vector_base.40"*
  invoke void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev(%"struct.std::_Vector_base.40"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* @x.133
  %8 = load i32, i32* @y.134
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %8, 10
  %16 = xor i1 %14, true
  %17 = xor i1 %15, true
  %18 = xor i1 false, true
  %19 = and i1 %16, false
  %20 = and i1 %14, %18
  %21 = and i1 %17, false
  %22 = and i1 %15, %18
  %23 = or i1 %19, %20
  %24 = or i1 %21, %22
  %25 = xor i1 %23, %24
  %26 = or i1 %16, %17
  %27 = xor i1 %26, true
  %28 = or i1 false, %18
  %29 = and i1 %27, %28
  %30 = or i1 %25, %29
  %31 = or i1 %14, %15
  br i1 %30, label %32, label %49

; <label>:32:                                     ; preds = %6, %49
  %33 = landingpad { i8*, i32 }
          catch i8* null
  %34 = extractvalue { i8*, i32 } %33, 0
  call void @__clang_call_terminate(i8* %34) #12
  %35 = load i32, i32* @x.133
  %36 = load i32, i32* @y.134
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  br i1 %46, label %48, label %49

; <label>:48:                                     ; preds = %32
  unreachable

; <label>:49:                                     ; preds = %32, %6
  %50 = landingpad { i8*, i32 }
          catch i8* null
  %51 = extractvalue { i8*, i32 } %50, 0
  call void @__clang_call_terminate(i8* %51) #12
  br label %32
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZStorSt13_Ios_OpenmodeS_(i32, i32) #4 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %3, align 4
  %6 = load i32, i32* %4, align 4
  %7 = xor i32 %5, -1
  %8 = xor i32 %6, -1
  %9 = xor i32 1744686599, -1
  %10 = and i32 %7, 1744686599
  %11 = and i32 %5, %9
  %12 = and i32 %8, 1744686599
  %13 = and i32 %6, %9
  %14 = or i32 %10, %11
  %15 = or i32 %12, %13
  %16 = xor i32 %14, %15
  %17 = or i32 %7, %8
  %18 = xor i32 %17, -1
  %19 = or i32 1744686599, %9
  %20 = and i32 %18, %19
  %21 = or i32 %16, %20
  %22 = or i32 %5, %6
  ret i32 %21
}

declare void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1ERKNS_12basic_stringIcS2_S3_EESt13_Ios_Openmode(%"class.std::__cxx11::basic_stringstream"*, %"class.std::__cxx11::basic_string"* dereferenceable(32), i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #2

declare dereferenceable(280) %"class.std::basic_istream"* @_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EES4_(%"class.std::basic_istream"* dereferenceable(280), %"class.std::__cxx11::basic_string"* dereferenceable(32), i8 signext) #1

declare zeroext i1 @_ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv(%"class.std::basic_ios"*) #1

; Function Attrs: nounwind
declare zeroext i1 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv(%"class.std::__cxx11::basic_string"*) #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_(%"class.std::vector.39"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) #0 comdat align 2 {
  %3 = alloca %"class.std::__cxx11::basic_string"*
  %4 = alloca %"class.std::__cxx11::basic_string"*
  %5 = alloca %"class.std::vector.39"*
  %6 = alloca %"class.std::vector.39"*, align 8
  %7 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::vector.39"* %0, %"class.std::vector.39"** %6, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %7, align 8
  %8 = load %"class.std::vector.39"*, %"class.std::vector.39"** %6, align 8
  store %"class.std::vector.39"* %8, %"class.std::vector.39"** %5
  %9 = load volatile %"class.std::vector.39"*, %"class.std::vector.39"** %5
  %10 = bitcast %"class.std::vector.39"* %9 to %"struct.std::_Vector_base.40"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %12, align 8
  store %"class.std::__cxx11::basic_string"* %13, %"class.std::__cxx11::basic_string"** %4
  %14 = load volatile %"class.std::vector.39"*, %"class.std::vector.39"** %5
  %15 = bitcast %"class.std::vector.39"* %14 to %"struct.std::_Vector_base.40"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %17, align 8
  store %"class.std::__cxx11::basic_string"* %18, %"class.std::__cxx11::basic_string"** %3
  %19 = alloca i32
  store i32 518543433, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %120
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 518543433, label %23
    i32 -1303634521, label %28
    i32 1283527279, label %55
    i32 1480810153, label %98
    i32 -37880697, label %99
    i32 779925884, label %102
    i32 1898019021, label %103
  ]

; <label>:22:                                     ; preds = %20
  br label %120

; <label>:23:                                     ; preds = %20
  %24 = load volatile %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4
  %25 = load volatile %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3
  %26 = icmp ne %"class.std::__cxx11::basic_string"* %24, %25
  %27 = select i1 %26, i32 -1303634521, i32 -37880697
  store i32 %27, i32* %19
  br label %120

; <label>:28:                                     ; preds = %20
  %29 = load i32, i32* @x.137
  %30 = load i32, i32* @y.138
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 1283527279, i32 1898019021
  store i32 %54, i32* %19
  br label %120

; <label>:55:                                     ; preds = %20
  %56 = load volatile %"class.std::vector.39"*, %"class.std::vector.39"** %5
  %57 = bitcast %"class.std::vector.39"* %56 to %"struct.std::_Vector_base.40"*
  %58 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %57, i32 0, i32 0
  %59 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %58 to %"class.std::allocator.41"*
  %60 = load volatile %"class.std::vector.39"*, %"class.std::vector.39"** %5
  %61 = bitcast %"class.std::vector.39"* %60 to %"struct.std::_Vector_base.40"*
  %62 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %61, i32 0, i32 0
  %63 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %62, i32 0, i32 1
  %64 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %63, align 8
  %65 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  call void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JRKS5_EEEvRS6_PT_DpOT0_(%"class.std::allocator.41"* dereferenceable(1) %59, %"class.std::__cxx11::basic_string"* %64, %"class.std::__cxx11::basic_string"* dereferenceable(32) %65)
  %66 = load volatile %"class.std::vector.39"*, %"class.std::vector.39"** %5
  %67 = bitcast %"class.std::vector.39"* %66 to %"struct.std::_Vector_base.40"*
  %68 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %67, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %68, i32 0, i32 1
  %70 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %69, align 8
  %71 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %70, i32 1
  store %"class.std::__cxx11::basic_string"* %71, %"class.std::__cxx11::basic_string"** %69, align 8
  %72 = load i32, i32* @x.137
  %73 = load i32, i32* @y.138
  %74 = sub i32 0, 1
  %75 = add i32 %72, %74
  %76 = sub i32 %72, 1
  %77 = mul i32 %72, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %73, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 false, true
  %84 = and i1 %81, false
  %85 = and i1 %79, %83
  %86 = and i1 %82, false
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 false, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  %97 = select i1 %95, i32 1480810153, i32 1898019021
  store i32 %97, i32* %19
  br label %120

; <label>:98:                                     ; preds = %20
  store i32 779925884, i32* %19
  br label %120

; <label>:99:                                     ; preds = %20
  %100 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %101 = load volatile %"class.std::vector.39"*, %"class.std::vector.39"** %5
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIJRKS5_EEEvDpOT_(%"class.std::vector.39"* %101, %"class.std::__cxx11::basic_string"* dereferenceable(32) %100)
  store i32 779925884, i32* %19
  br label %120

; <label>:102:                                    ; preds = %20
  ret void

; <label>:103:                                    ; preds = %20
  %104 = load volatile %"class.std::vector.39"*, %"class.std::vector.39"** %5
  %105 = bitcast %"class.std::vector.39"* %104 to %"struct.std::_Vector_base.40"*
  %106 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %105, i32 0, i32 0
  %107 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %106 to %"class.std::allocator.41"*
  %108 = load volatile %"class.std::vector.39"*, %"class.std::vector.39"** %5
  %109 = bitcast %"class.std::vector.39"* %108 to %"struct.std::_Vector_base.40"*
  %110 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %109, i32 0, i32 0
  %111 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %110, i32 0, i32 1
  %112 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %111, align 8
  %113 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  call void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JRKS5_EEEvRS6_PT_DpOT0_(%"class.std::allocator.41"* dereferenceable(1) %107, %"class.std::__cxx11::basic_string"* %112, %"class.std::__cxx11::basic_string"* dereferenceable(32) %113)
  %114 = load volatile %"class.std::vector.39"*, %"class.std::vector.39"** %5
  %115 = bitcast %"class.std::vector.39"* %114 to %"struct.std::_Vector_base.40"*
  %116 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %115, i32 0, i32 0
  %117 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %116, i32 0, i32 1
  %118 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %117, align 8
  %119 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %118, i32 1
  store %"class.std::__cxx11::basic_string"* %119, %"class.std::__cxx11::basic_string"** %117, align 8
  store i32 1283527279, i32* %19
  br label %120

; <label>:120:                                    ; preds = %103, %99, %98, %55, %28, %23, %22
  br label %20
}

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_stringstream"*) unnamed_addr #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"class.std::vector.39"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.139
  %3 = load i32, i32* @y.140
  %4 = add i32 %2, -1221055696
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -1221055696
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %55

; <label>:16:                                     ; preds = %1, %55
  %17 = alloca %"class.std::vector.39"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"class.std::vector.39"* %0, %"class.std::vector.39"** %17, align 8
  %20 = load %"class.std::vector.39"*, %"class.std::vector.39"** %17, align 8
  %21 = bitcast %"class.std::vector.39"* %20 to %"struct.std::_Vector_base.40"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %21, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %22, i32 0, i32 0
  %24 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %23, align 8
  %25 = bitcast %"class.std::vector.39"* %20 to %"struct.std::_Vector_base.40"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %26, i32 0, i32 1
  %28 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %27, align 8
  %29 = bitcast %"class.std::vector.39"* %20 to %"struct.std::_Vector_base.40"*
  %30 = call dereferenceable(1) %"class.std::allocator.41"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.40"* %29) #3
  %31 = load i32, i32* @x.139
  %32 = load i32, i32* @y.140
  %33 = sub i32 %31, -515315282
  %34 = sub i32 %33, 1
  %35 = add i32 %34, -515315282
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  br i1 %43, label %45, label %55

; <label>:45:                                     ; preds = %16
  invoke void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E(%"class.std::__cxx11::basic_string"* %24, %"class.std::__cxx11::basic_string"* %28, %"class.std::allocator.41"* dereferenceable(1) %30)
          to label %46 unwind label %48

; <label>:46:                                     ; preds = %45
  %47 = bitcast %"class.std::vector.39"* %20 to %"struct.std::_Vector_base.40"*
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"struct.std::_Vector_base.40"* %47) #3
  ret void

; <label>:48:                                     ; preds = %45
  %49 = landingpad { i8*, i32 }
          catch i8* null
  %50 = extractvalue { i8*, i32 } %49, 0
  store i8* %50, i8** %18, align 8
  %51 = extractvalue { i8*, i32 } %49, 1
  store i32 %51, i32* %19, align 4
  %52 = bitcast %"class.std::vector.39"* %20 to %"struct.std::_Vector_base.40"*
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"struct.std::_Vector_base.40"* %52) #3
  br label %53

; <label>:53:                                     ; preds = %48
  %54 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %54) #12
  unreachable

; <label>:55:                                     ; preds = %16, %1
  %56 = alloca %"class.std::vector.39"*, align 8
  %57 = alloca i8*
  %58 = alloca i32
  store %"class.std::vector.39"* %0, %"class.std::vector.39"** %56, align 8
  %59 = load %"class.std::vector.39"*, %"class.std::vector.39"** %56, align 8
  %60 = bitcast %"class.std::vector.39"* %59 to %"struct.std::_Vector_base.40"*
  %61 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %60, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %61, i32 0, i32 0
  %63 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %62, align 8
  %64 = bitcast %"class.std::vector.39"* %59 to %"struct.std::_Vector_base.40"*
  %65 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %64, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %65, i32 0, i32 1
  %67 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %66, align 8
  %68 = bitcast %"class.std::vector.39"* %59 to %"struct.std::_Vector_base.40"*
  %69 = call dereferenceable(1) %"class.std::allocator.41"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.40"* %68) #3
  br label %16
}

; Function Attrs: noinline uwtable
define void @_Z7divisorx(%"class.std::vector.0"* noalias sret, i64) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i64, align 8
  %4 = alloca i1, align 1
  %5 = alloca i64, align 8
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca i64, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store i64 %1, i64* %3, align 8
  store i1 false, i1* %4, align 1
  call void @_ZNSt6vectorIxSaIxEEC2Ev(%"class.std::vector.0"* %0) #3
  store i64 1, i64* %5, align 8
  br label %11

; <label>:11:                                     ; preds = %175, %2
  %12 = load i64, i64* %5, align 8
  %13 = load i64, i64* %5, align 8
  %14 = mul nsw i64 %12, %13
  %15 = load i64, i64* %3, align 8
  %16 = icmp sle i64 %14, %15
  br i1 %16, label %17, label %181

; <label>:17:                                     ; preds = %11
  %18 = load i64, i64* %3, align 8
  %19 = load i64, i64* %5, align 8
  %20 = srem i64 %18, %19
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %134

; <label>:22:                                     ; preds = %17
  invoke void @_ZNSt6vectorIxSaIxEE9push_backERKx(%"class.std::vector.0"* %0, i64* dereferenceable(8) %5)
          to label %23 unwind label %75

; <label>:23:                                     ; preds = %22
  %24 = load i64, i64* %5, align 8
  %25 = load i64, i64* %5, align 8
  %26 = mul nsw i64 %24, %25
  %27 = load i64, i64* %3, align 8
  %28 = icmp ne i64 %26, %27
  br i1 %28, label %29, label %133

; <label>:29:                                     ; preds = %23
  %30 = load i64, i64* %3, align 8
  %31 = load i64, i64* %5, align 8
  %32 = sdiv i64 %30, %31
  store i64 %32, i64* %8, align 8
  invoke void @_ZNSt6vectorIxSaIxEE9push_backEOx(%"class.std::vector.0"* %0, i64* dereferenceable(8) %8)
          to label %33 unwind label %75

; <label>:33:                                     ; preds = %29
  %34 = load i32, i32* @x.141
  %35 = load i32, i32* @y.142
  %36 = sub i32 %34, -241691545
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -241691545
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  br i1 %58, label %60, label %314

; <label>:60:                                     ; preds = %33, %314
  %61 = load i32, i32* @x.141
  %62 = load i32, i32* @y.142
  %63 = sub i32 0, 1
  %64 = add i32 %61, %63
  %65 = sub i32 %61, 1
  %66 = mul i32 %61, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %62, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  br i1 %72, label %74, label %314

; <label>:74:                                     ; preds = %60
  br label %133

; <label>:75:                                     ; preds = %228, %225, %223, %29, %22
  %76 = load i32, i32* @x.141
  %77 = load i32, i32* @y.142
  %78 = sub i32 %76, 1966726270
  %79 = sub i32 %78, 1
  %80 = add i32 %79, 1966726270
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = xor i1 %84, true
  %87 = xor i1 %85, true
  %88 = xor i1 true, true
  %89 = and i1 %86, true
  %90 = and i1 %84, %88
  %91 = and i1 %87, true
  %92 = and i1 %85, %88
  %93 = or i1 %89, %90
  %94 = or i1 %91, %92
  %95 = xor i1 %93, %94
  %96 = or i1 %86, %87
  %97 = xor i1 %96, true
  %98 = or i1 true, %88
  %99 = and i1 %97, %98
  %100 = or i1 %95, %99
  %101 = or i1 %84, %85
  br i1 %100, label %102, label %315

; <label>:102:                                    ; preds = %75, %315
  %103 = landingpad { i8*, i32 }
          cleanup
  %104 = extractvalue { i8*, i32 } %103, 0
  store i8* %104, i8** %6, align 8
  %105 = extractvalue { i8*, i32 } %103, 1
  store i32 %105, i32* %7, align 4
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"* %0) #3
  %106 = load i32, i32* @x.141
  %107 = load i32, i32* @y.142
  %108 = sub i32 %106, 853208176
  %109 = sub i32 %108, 1
  %110 = add i32 %109, 853208176
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = xor i1 %114, true
  %117 = xor i1 %115, true
  %118 = xor i1 false, true
  %119 = and i1 %116, false
  %120 = and i1 %114, %118
  %121 = and i1 %117, false
  %122 = and i1 %115, %118
  %123 = or i1 %119, %120
  %124 = or i1 %121, %122
  %125 = xor i1 %123, %124
  %126 = or i1 %116, %117
  %127 = xor i1 %126, true
  %128 = or i1 false, %118
  %129 = and i1 %127, %128
  %130 = or i1 %125, %129
  %131 = or i1 %114, %115
  br i1 %130, label %132, label %315

; <label>:132:                                    ; preds = %102
  br label %268

; <label>:133:                                    ; preds = %74, %23
  br label %134

; <label>:134:                                    ; preds = %133, %17
  %135 = load i32, i32* @x.141
  %136 = load i32, i32* @y.142
  %137 = sub i32 0, 1
  %138 = add i32 %135, %137
  %139 = sub i32 %135, 1
  %140 = mul i32 %135, %138
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %136, 10
  %144 = and i1 %142, %143
  %145 = xor i1 %142, %143
  %146 = or i1 %144, %145
  %147 = or i1 %142, %143
  br i1 %146, label %148, label %319

; <label>:148:                                    ; preds = %134, %319
  %149 = load i32, i32* @x.141
  %150 = load i32, i32* @y.142
  %151 = sub i32 0, 1
  %152 = add i32 %149, %151
  %153 = sub i32 %149, 1
  %154 = mul i32 %149, %152
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %150, 10
  %158 = xor i1 %156, true
  %159 = xor i1 %157, true
  %160 = xor i1 true, true
  %161 = and i1 %158, true
  %162 = and i1 %156, %160
  %163 = and i1 %159, true
  %164 = and i1 %157, %160
  %165 = or i1 %161, %162
  %166 = or i1 %163, %164
  %167 = xor i1 %165, %166
  %168 = or i1 %158, %159
  %169 = xor i1 %168, true
  %170 = or i1 true, %160
  %171 = and i1 %169, %170
  %172 = or i1 %167, %171
  %173 = or i1 %156, %157
  br i1 %172, label %174, label %319

; <label>:174:                                    ; preds = %148
  br label %175

; <label>:175:                                    ; preds = %174
  %176 = load i64, i64* %5, align 8
  %177 = add i64 %176, -2589483543443322491
  %178 = add i64 %177, 1
  %179 = sub i64 %178, -2589483543443322491
  %180 = add nsw i64 %176, 1
  store i64 %179, i64* %5, align 8
  br label %11

; <label>:181:                                    ; preds = %11
  %182 = load i32, i32* @x.141
  %183 = load i32, i32* @y.142
  %184 = sub i32 %182, -1522418064
  %185 = sub i32 %184, 1
  %186 = add i32 %185, -1522418064
  %187 = sub i32 %182, 1
  %188 = mul i32 %182, %186
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %183, 10
  %192 = and i1 %190, %191
  %193 = xor i1 %190, %191
  %194 = or i1 %192, %193
  %195 = or i1 %190, %191
  br i1 %194, label %196, label %320

; <label>:196:                                    ; preds = %181, %320
  %197 = load i32, i32* @x.141
  %198 = load i32, i32* @y.142
  %199 = sub i32 %197, 1912528811
  %200 = sub i32 %199, 1
  %201 = add i32 %200, 1912528811
  %202 = sub i32 %197, 1
  %203 = mul i32 %197, %201
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %198, 10
  %207 = xor i1 %205, true
  %208 = xor i1 %206, true
  %209 = xor i1 true, true
  %210 = and i1 %207, true
  %211 = and i1 %205, %209
  %212 = and i1 %208, true
  %213 = and i1 %206, %209
  %214 = or i1 %210, %211
  %215 = or i1 %212, %213
  %216 = xor i1 %214, %215
  %217 = or i1 %207, %208
  %218 = xor i1 %217, true
  %219 = or i1 true, %209
  %220 = and i1 %218, %219
  %221 = or i1 %216, %220
  %222 = or i1 %205, %206
  br i1 %221, label %223, label %320

; <label>:223:                                    ; preds = %196
  %224 = invoke i64* @_ZSt5beginISt6vectorIxSaIxEEEDTcldtfp_5beginEERT_(%"class.std::vector.0"* dereferenceable(24) %0)
          to label %225 unwind label %75

; <label>:225:                                    ; preds = %223
  %226 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %9, i32 0, i32 0
  store i64* %224, i64** %226, align 8
  %227 = invoke i64* @_ZSt3endISt6vectorIxSaIxEEEDTcldtfp_3endEERT_(%"class.std::vector.0"* dereferenceable(24) %0)
          to label %228 unwind label %75

; <label>:228:                                    ; preds = %225
  %229 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %10, i32 0, i32 0
  store i64* %227, i64** %229, align 8
  %230 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %9, i32 0, i32 0
  %231 = load i64*, i64** %230, align 8
  %232 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %10, i32 0, i32 0
  %233 = load i64*, i64** %232, align 8
  invoke void @_ZSt4sortIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEEvT_S7_(i64* %231, i64* %233)
          to label %234 unwind label %75

; <label>:234:                                    ; preds = %228
  store i1 true, i1* %4, align 1
  %235 = load i1, i1* %4, align 1
  br i1 %235, label %237, label %236

; <label>:236:                                    ; preds = %234
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"* %0) #3
  br label %237

; <label>:237:                                    ; preds = %236, %234
  %238 = load i32, i32* @x.141
  %239 = load i32, i32* @y.142
  %240 = add i32 %238, -1794572215
  %241 = sub i32 %240, 1
  %242 = sub i32 %241, -1794572215
  %243 = sub i32 %238, 1
  %244 = mul i32 %238, %242
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %239, 10
  %248 = and i1 %246, %247
  %249 = xor i1 %246, %247
  %250 = or i1 %248, %249
  %251 = or i1 %246, %247
  br i1 %250, label %252, label %321

; <label>:252:                                    ; preds = %237, %321
  %253 = load i32, i32* @x.141
  %254 = load i32, i32* @y.142
  %255 = sub i32 %253, -1036646040
  %256 = sub i32 %255, 1
  %257 = add i32 %256, -1036646040
  %258 = sub i32 %253, 1
  %259 = mul i32 %253, %257
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %254, 10
  %263 = and i1 %261, %262
  %264 = xor i1 %261, %262
  %265 = or i1 %263, %264
  %266 = or i1 %261, %262
  br i1 %265, label %267, label %321

; <label>:267:                                    ; preds = %252
  ret void

; <label>:268:                                    ; preds = %132
  %269 = load i32, i32* @x.141
  %270 = load i32, i32* @y.142
  %271 = sub i32 %269, -2081581990
  %272 = sub i32 %271, 1
  %273 = add i32 %272, -2081581990
  %274 = sub i32 %269, 1
  %275 = mul i32 %269, %273
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %270, 10
  %279 = xor i1 %277, true
  %280 = xor i1 %278, true
  %281 = xor i1 true, true
  %282 = and i1 %279, true
  %283 = and i1 %277, %281
  %284 = and i1 %280, true
  %285 = and i1 %278, %281
  %286 = or i1 %282, %283
  %287 = or i1 %284, %285
  %288 = xor i1 %286, %287
  %289 = or i1 %279, %280
  %290 = xor i1 %289, true
  %291 = or i1 true, %281
  %292 = and i1 %290, %291
  %293 = or i1 %288, %292
  %294 = or i1 %277, %278
  br i1 %293, label %295, label %322

; <label>:295:                                    ; preds = %268, %322
  %296 = load i8*, i8** %6, align 8
  %297 = load i32, i32* %7, align 4
  %298 = insertvalue { i8*, i32 } undef, i8* %296, 0
  %299 = insertvalue { i8*, i32 } %298, i32 %297, 1
  %300 = load i32, i32* @x.141
  %301 = load i32, i32* @y.142
  %302 = sub i32 0, 1
  %303 = add i32 %300, %302
  %304 = sub i32 %300, 1
  %305 = mul i32 %300, %303
  %306 = urem i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %301, 10
  %309 = and i1 %307, %308
  %310 = xor i1 %307, %308
  %311 = or i1 %309, %310
  %312 = or i1 %307, %308
  br i1 %311, label %313, label %322

; <label>:313:                                    ; preds = %295
  resume { i8*, i32 } %299

; <label>:314:                                    ; preds = %60, %33
  br label %60

; <label>:315:                                    ; preds = %102, %75
  %316 = landingpad { i8*, i32 }
          cleanup
  %317 = extractvalue { i8*, i32 } %316, 0
  store i8* %317, i8** %6, align 8
  %318 = extractvalue { i8*, i32 } %316, 1
  store i32 %318, i32* %7, align 4
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"* %0) #3
  br label %102

; <label>:319:                                    ; preds = %148, %134
  br label %148

; <label>:320:                                    ; preds = %196, %181
  br label %196

; <label>:321:                                    ; preds = %252, %237
  br label %252

; <label>:322:                                    ; preds = %295, %268
  %323 = load i8*, i8** %6, align 8
  %324 = load i32, i32* %7, align 4
  %325 = insertvalue { i8*, i32 } undef, i8* %323, 0
  %326 = insertvalue { i8*, i32 } %325, i32 %324, 1
  br label %295
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE9push_backEOx(%"class.std::vector.0"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = load i64*, i64** %4, align 8
  %7 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %6) #3
  call void @_ZNSt6vectorIxSaIxEE12emplace_backIJxEEEvDpOT_(%"class.std::vector.0"* %5, i64* dereferenceable(8) %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4sortIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEEvT_S7_(i64*, i64*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.145
  %6 = load i32, i32* @y.146
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 736803024, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %76
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 736803024, label %18
    i32 1376440233, label %26
    i32 -812730159, label %58
    i32 1697906387, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %76

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1376440233, i32 1697906387
  store i32 %25, i32* %14
  br label %76

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %31 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %32 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %27, i32 0, i32 0
  store i64* %0, i64** %33, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %28, i32 0, i32 0
  store i64* %1, i64** %34, align 8
  %35 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %29 to i8*
  %36 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 8, i32 8, i1 false)
  %37 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %30 to i8*
  %38 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops16__iter_less_iterEv()
  %39 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %29, i32 0, i32 0
  %40 = load i64*, i64** %39, align 8
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %30, i32 0, i32 0
  %42 = load i64*, i64** %41, align 8
  call void @_ZSt6__sortIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i64* %40, i64* %42)
  %43 = load i32, i32* @x.145
  %44 = load i32, i32* @y.146
  %45 = sub i32 %43, -163357824
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -163357824
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -812730159, i32 1697906387
  store i32 %57, i32* %14
  br label %76

; <label>:58:                                     ; preds = %15
  ret void

; <label>:59:                                     ; preds = %15
  %60 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %61 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %62 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %63 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %64 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %65 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %60, i32 0, i32 0
  store i64* %0, i64** %66, align 8
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %61, i32 0, i32 0
  store i64* %1, i64** %67, align 8
  %68 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %62 to i8*
  %69 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %68, i8* %69, i64 8, i32 8, i1 false)
  %70 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %63 to i8*
  %71 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %70, i8* %71, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops16__iter_less_iterEv()
  %72 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %62, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %63, i32 0, i32 0
  %75 = load i64*, i64** %74, align 8
  call void @_ZSt6__sortIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i64* %73, i64* %75)
  store i32 1376440233, i32* %14
  br label %76

; <label>:76:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt5beginISt6vectorIxSaIxEEEDTcldtfp_5beginEERT_(%"class.std::vector.0"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %4 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %5 = call i64* @_ZNSt6vectorIxSaIxEE5beginEv(%"class.std::vector.0"* %4) #3
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %2, i32 0, i32 0
  store i64* %5, i64** %6, align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %2, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  ret i64* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt3endISt6vectorIxSaIxEEEDTcldtfp_3endEERT_(%"class.std::vector.0"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %4 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %5 = call i64* @_ZNSt6vectorIxSaIxEE3endEv(%"class.std::vector.0"* %4) #3
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %2, i32 0, i32 0
  store i64* %5, i64** %6, align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %2, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  ret i64* %8
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() #6 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i32, align 4
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::vector.31", align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = alloca %"struct.std::pair.36", align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca %"class.std::vector.21", align 8
  %14 = alloca %"class.std::allocator.23", align 1
  %15 = alloca i32, align 4
  %16 = alloca %struct.Edge, align 8
  %17 = alloca i32, align 4
  %18 = alloca %"class.std::vector.0", align 8
  %19 = alloca %"class.std::vector.0", align 8
  %20 = alloca i8, align 1
  %21 = alloca i32, align 4
  %22 = alloca i32
  store i32 0, i32* %1, align 4
  %23 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) %2)
  %24 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %23, i64* dereferenceable(8) %3)
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EEC2Ev(%"class.std::vector.31"* %4) #3
  store i32 0, i32* %5, align 4
  br label %25

; <label>:25:                                     ; preds = %137, %0
  %26 = load i32, i32* %5, align 4
  %27 = sext i32 %26 to i64
  %28 = load i64, i64* %3, align 8
  %29 = icmp slt i64 %27, %28
  br i1 %29, label %30, label %146

; <label>:30:                                     ; preds = %25
  %31 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) %6)
          to label %32 unwind label %142

; <label>:32:                                     ; preds = %30
  %33 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %31, i64* dereferenceable(8) %7)
          to label %34 unwind label %142

; <label>:34:                                     ; preds = %32
  %35 = load i32, i32* @x.151
  %36 = load i32, i32* @y.152
  %37 = sub i32 %35, 373710049
  %38 = sub i32 %37, 1
  %39 = add i32 %38, 373710049
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  br i1 %59, label %61, label %614

; <label>:61:                                     ; preds = %34, %614
  %62 = load i64, i64* %6, align 8
  %63 = sub i64 0, %62
  %64 = sub i64 0, -1
  %65 = add i64 %63, %64
  %66 = sub i64 0, %65
  %67 = add nsw i64 %62, -1
  store i64 %66, i64* %6, align 8
  %68 = load i64, i64* %7, align 8
  %69 = sub i64 0, %68
  %70 = sub i64 0, -1
  %71 = add i64 %69, %70
  %72 = sub i64 0, %71
  %73 = add nsw i64 %68, -1
  store i64 %72, i64* %7, align 8
  %74 = load i32, i32* @x.151
  %75 = load i32, i32* @y.152
  %76 = sub i32 0, 1
  %77 = add i32 %74, %76
  %78 = sub i32 %74, 1
  %79 = mul i32 %74, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %75, 10
  %83 = and i1 %81, %82
  %84 = xor i1 %81, %82
  %85 = or i1 %83, %84
  %86 = or i1 %81, %82
  br i1 %85, label %87, label %614

; <label>:87:                                     ; preds = %61
  %88 = invoke { i64, i64 } @_ZSt9make_pairIRxS0_ESt4pairINSt17__decay_and_stripIT_E6__typeENS2_IT0_E6__typeEEOS3_OS6_(i64* dereferenceable(8) %6, i64* dereferenceable(8) %7)
          to label %89 unwind label %142

; <label>:89:                                     ; preds = %87
  %90 = bitcast %"struct.std::pair.36"* %10 to { i64, i64 }*
  %91 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %90, i32 0, i32 0
  %92 = extractvalue { i64, i64 } %88, 0
  store i64 %92, i64* %91, align 8
  %93 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %90, i32 0, i32 1
  %94 = extractvalue { i64, i64 } %88, 1
  store i64 %94, i64* %93, align 8
  invoke void @_ZNSt6vectorISt4pairIxxESaIS1_EE9push_backEOS1_(%"class.std::vector.31"* %4, %"struct.std::pair.36"* dereferenceable(16) %10)
          to label %95 unwind label %142

; <label>:95:                                     ; preds = %89
  %96 = load i32, i32* @x.151
  %97 = load i32, i32* @y.152
  %98 = sub i32 %96, 1324034271
  %99 = sub i32 %98, 1
  %100 = add i32 %99, 1324034271
  %101 = sub i32 %96, 1
  %102 = mul i32 %96, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %97, 10
  %106 = and i1 %104, %105
  %107 = xor i1 %104, %105
  %108 = or i1 %106, %107
  %109 = or i1 %104, %105
  br i1 %108, label %110, label %647

; <label>:110:                                    ; preds = %95, %647
  %111 = load i32, i32* @x.151
  %112 = load i32, i32* @y.152
  %113 = sub i32 0, 1
  %114 = add i32 %111, %113
  %115 = sub i32 %111, 1
  %116 = mul i32 %111, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %112, 10
  %120 = xor i1 %118, true
  %121 = xor i1 %119, true
  %122 = xor i1 true, true
  %123 = and i1 %120, true
  %124 = and i1 %118, %122
  %125 = and i1 %121, true
  %126 = and i1 %119, %122
  %127 = or i1 %123, %124
  %128 = or i1 %125, %126
  %129 = xor i1 %127, %128
  %130 = or i1 %120, %121
  %131 = xor i1 %130, true
  %132 = or i1 true, %122
  %133 = and i1 %131, %132
  %134 = or i1 %129, %133
  %135 = or i1 %118, %119
  br i1 %134, label %136, label %647

; <label>:136:                                    ; preds = %110
  br label %137

; <label>:137:                                    ; preds = %136
  %138 = load i32, i32* %5, align 4
  %139 = sub i32 0, 1
  %140 = sub i32 %138, %139
  %141 = add nsw i32 %138, 1
  store i32 %140, i32* %5, align 4
  br label %25

; <label>:142:                                    ; preds = %563, %560, %89, %87, %32, %30
  %143 = landingpad { i8*, i32 }
          cleanup
  %144 = extractvalue { i8*, i32 } %143, 0
  store i8* %144, i8** %8, align 8
  %145 = extractvalue { i8*, i32 } %143, 1
  store i32 %145, i32* %9, align 4
  br label %567

; <label>:146:                                    ; preds = %25
  %147 = load i32, i32* @x.151
  %148 = load i32, i32* @y.152
  %149 = sub i32 0, 1
  %150 = add i32 %147, %149
  %151 = sub i32 %147, 1
  %152 = mul i32 %147, %150
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %148, 10
  %156 = and i1 %154, %155
  %157 = xor i1 %154, %155
  %158 = or i1 %156, %157
  %159 = or i1 %154, %155
  br i1 %158, label %160, label %648

; <label>:160:                                    ; preds = %146, %648
  store i64 0, i64* %11, align 8
  store i32 0, i32* %12, align 4
  %161 = load i32, i32* @x.151
  %162 = load i32, i32* @y.152
  %163 = sub i32 %161, 2079429592
  %164 = sub i32 %163, 1
  %165 = add i32 %164, 2079429592
  %166 = sub i32 %161, 1
  %167 = mul i32 %161, %165
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %162, 10
  %171 = and i1 %169, %170
  %172 = xor i1 %169, %170
  %173 = or i1 %171, %172
  %174 = or i1 %169, %170
  br i1 %173, label %175, label %648

; <label>:175:                                    ; preds = %160
  br label %176

; <label>:176:                                    ; preds = %554, %175
  %177 = load i32, i32* %12, align 4
  %178 = sext i32 %177 to i64
  %179 = load i64, i64* %3, align 8
  %180 = icmp slt i64 %178, %179
  br i1 %180, label %181, label %560

; <label>:181:                                    ; preds = %176
  %182 = load i64, i64* %2, align 8
  call void @_ZNSaISt6vectorI4EdgeSaIS0_EEEC2Ev(%"class.std::allocator.23"* %14) #3
  invoke void @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEC2EmRKS3_(%"class.std::vector.21"* %13, i64 %182, %"class.std::allocator.23"* dereferenceable(1) %14)
          to label %183 unwind label %289

; <label>:183:                                    ; preds = %181
  %184 = load i32, i32* @x.151
  %185 = load i32, i32* @y.152
  %186 = sub i32 0, 1
  %187 = add i32 %184, %186
  %188 = sub i32 %184, 1
  %189 = mul i32 %184, %187
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %185, 10
  %193 = and i1 %191, %192
  %194 = xor i1 %191, %192
  %195 = or i1 %193, %194
  %196 = or i1 %191, %192
  br i1 %195, label %197, label %649

; <label>:197:                                    ; preds = %183, %649
  call void @_ZNSaISt6vectorI4EdgeSaIS0_EEED2Ev(%"class.std::allocator.23"* %14) #3
  store i32 0, i32* %15, align 4
  %198 = load i32, i32* @x.151
  %199 = load i32, i32* @y.152
  %200 = add i32 %198, 1397338373
  %201 = sub i32 %200, 1
  %202 = sub i32 %201, 1397338373
  %203 = sub i32 %198, 1
  %204 = mul i32 %198, %202
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %199, 10
  %208 = xor i1 %206, true
  %209 = xor i1 %207, true
  %210 = xor i1 false, true
  %211 = and i1 %208, false
  %212 = and i1 %206, %210
  %213 = and i1 %209, false
  %214 = and i1 %207, %210
  %215 = or i1 %211, %212
  %216 = or i1 %213, %214
  %217 = xor i1 %215, %216
  %218 = or i1 %208, %209
  %219 = xor i1 %218, true
  %220 = or i1 false, %210
  %221 = and i1 %219, %220
  %222 = or i1 %217, %221
  %223 = or i1 %206, %207
  br i1 %222, label %224, label %649

; <label>:224:                                    ; preds = %197
  br label %225

; <label>:225:                                    ; preds = %363, %224
  %226 = load i32, i32* %15, align 4
  %227 = sext i32 %226 to i64
  %228 = load i64, i64* %3, align 8
  %229 = icmp slt i64 %227, %228
  br i1 %229, label %230, label %373

; <label>:230:                                    ; preds = %225
  %231 = load i32, i32* %12, align 4
  %232 = load i32, i32* %15, align 4
  %233 = icmp eq i32 %231, %232
  br i1 %233, label %234, label %293

; <label>:234:                                    ; preds = %230
  %235 = load i32, i32* @x.151
  %236 = load i32, i32* @y.152
  %237 = add i32 %235, 561750339
  %238 = sub i32 %237, 1
  %239 = sub i32 %238, 561750339
  %240 = sub i32 %235, 1
  %241 = mul i32 %235, %239
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %236, 10
  %245 = xor i1 %243, true
  %246 = xor i1 %244, true
  %247 = xor i1 true, true
  %248 = and i1 %245, true
  %249 = and i1 %243, %247
  %250 = and i1 %246, true
  %251 = and i1 %244, %247
  %252 = or i1 %248, %249
  %253 = or i1 %250, %251
  %254 = xor i1 %252, %253
  %255 = or i1 %245, %246
  %256 = xor i1 %255, true
  %257 = or i1 true, %247
  %258 = and i1 %256, %257
  %259 = or i1 %254, %258
  %260 = or i1 %243, %244
  br i1 %259, label %261, label %650

; <label>:261:                                    ; preds = %234, %650
  %262 = load i32, i32* @x.151
  %263 = load i32, i32* @y.152
  %264 = sub i32 %262, 306908677
  %265 = sub i32 %264, 1
  %266 = add i32 %265, 306908677
  %267 = sub i32 %262, 1
  %268 = mul i32 %262, %266
  %269 = urem i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %263, 10
  %272 = xor i1 %270, true
  %273 = xor i1 %271, true
  %274 = xor i1 true, true
  %275 = and i1 %272, true
  %276 = and i1 %270, %274
  %277 = and i1 %273, true
  %278 = and i1 %271, %274
  %279 = or i1 %275, %276
  %280 = or i1 %277, %278
  %281 = xor i1 %279, %280
  %282 = or i1 %272, %273
  %283 = xor i1 %282, true
  %284 = or i1 true, %274
  %285 = and i1 %283, %284
  %286 = or i1 %281, %285
  %287 = or i1 %270, %271
  br i1 %286, label %288, label %650

; <label>:288:                                    ; preds = %261
  br label %363

; <label>:289:                                    ; preds = %181
  %290 = landingpad { i8*, i32 }
          cleanup
  %291 = extractvalue { i8*, i32 } %290, 0
  store i8* %291, i8** %8, align 8
  %292 = extractvalue { i8*, i32 } %290, 1
  store i32 %292, i32* %9, align 4
  call void @_ZNSaISt6vectorI4EdgeSaIS0_EEED2Ev(%"class.std::allocator.23"* %14) #3
  br label %567

; <label>:293:                                    ; preds = %230
  %294 = load i32, i32* %15, align 4
  %295 = sext i32 %294 to i64
  %296 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNSt6vectorISt4pairIxxESaIS1_EEixEm(%"class.std::vector.31"* %4, i64 %295) #3
  %297 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %296, i32 0, i32 1
  %298 = load i64, i64* %297, align 8
  %299 = getelementptr inbounds %struct.Edge, %struct.Edge* %16, i32 0, i32 0
  store i64 %298, i64* %299, align 8
  %300 = getelementptr inbounds %struct.Edge, %struct.Edge* %16, i32 0, i32 1
  store i64 1, i64* %300, align 8
  %301 = load i32, i32* %15, align 4
  %302 = sext i32 %301 to i64
  %303 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNSt6vectorISt4pairIxxESaIS1_EEixEm(%"class.std::vector.31"* %4, i64 %302) #3
  %304 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %303, i32 0, i32 0
  %305 = load i64, i64* %304, align 8
  %306 = call dereferenceable(24) %"class.std::vector.26"* @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEixEm(%"class.std::vector.21"* %13, i64 %305) #3
  invoke void @_ZNSt6vectorI4EdgeSaIS0_EE9push_backERKS0_(%"class.std::vector.26"* %306, %struct.Edge* dereferenceable(16) %16)
          to label %307 unwind label %369

; <label>:307:                                    ; preds = %293
  %308 = load i32, i32* @x.151
  %309 = load i32, i32* @y.152
  %310 = sub i32 0, 1
  %311 = add i32 %308, %310
  %312 = sub i32 %308, 1
  %313 = mul i32 %308, %311
  %314 = urem i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %309, 10
  %317 = and i1 %315, %316
  %318 = xor i1 %315, %316
  %319 = or i1 %317, %318
  %320 = or i1 %315, %316
  br i1 %319, label %321, label %651

; <label>:321:                                    ; preds = %307, %651
  %322 = load i32, i32* %15, align 4
  %323 = sext i32 %322 to i64
  %324 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNSt6vectorISt4pairIxxESaIS1_EEixEm(%"class.std::vector.31"* %4, i64 %323) #3
  %325 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %324, i32 0, i32 0
  %326 = load i64, i64* %325, align 8
  %327 = getelementptr inbounds %struct.Edge, %struct.Edge* %16, i32 0, i32 0
  store i64 %326, i64* %327, align 8
  %328 = getelementptr inbounds %struct.Edge, %struct.Edge* %16, i32 0, i32 1
  store i64 1, i64* %328, align 8
  %329 = load i32, i32* %15, align 4
  %330 = sext i32 %329 to i64
  %331 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNSt6vectorISt4pairIxxESaIS1_EEixEm(%"class.std::vector.31"* %4, i64 %330) #3
  %332 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %331, i32 0, i32 1
  %333 = load i64, i64* %332, align 8
  %334 = call dereferenceable(24) %"class.std::vector.26"* @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEixEm(%"class.std::vector.21"* %13, i64 %333) #3
  %335 = load i32, i32* @x.151
  %336 = load i32, i32* @y.152
  %337 = sub i32 %335, -243008501
  %338 = sub i32 %337, 1
  %339 = add i32 %338, -243008501
  %340 = sub i32 %335, 1
  %341 = mul i32 %335, %339
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %336, 10
  %345 = xor i1 %343, true
  %346 = xor i1 %344, true
  %347 = xor i1 true, true
  %348 = and i1 %345, true
  %349 = and i1 %343, %347
  %350 = and i1 %346, true
  %351 = and i1 %344, %347
  %352 = or i1 %348, %349
  %353 = or i1 %350, %351
  %354 = xor i1 %352, %353
  %355 = or i1 %345, %346
  %356 = xor i1 %355, true
  %357 = or i1 true, %347
  %358 = and i1 %356, %357
  %359 = or i1 %354, %358
  %360 = or i1 %343, %344
  br i1 %359, label %361, label %651

; <label>:361:                                    ; preds = %321
  invoke void @_ZNSt6vectorI4EdgeSaIS0_EE9push_backERKS0_(%"class.std::vector.26"* %334, %struct.Edge* dereferenceable(16) %16)
          to label %362 unwind label %369

; <label>:362:                                    ; preds = %361
  br label %363

; <label>:363:                                    ; preds = %362, %288
  %364 = load i32, i32* %15, align 4
  %365 = add i32 %364, -30251676
  %366 = add i32 %365, 1
  %367 = sub i32 %366, -30251676
  %368 = add nsw i32 %364, 1
  store i32 %367, i32* %15, align 4
  br label %225

; <label>:369:                                    ; preds = %361, %293
  %370 = landingpad { i8*, i32 }
          cleanup
  %371 = extractvalue { i8*, i32 } %370, 0
  store i8* %371, i8** %8, align 8
  %372 = extractvalue { i8*, i32 } %370, 1
  store i32 %372, i32* %9, align 4
  br label %559

; <label>:373:                                    ; preds = %225
  store i32 0, i32* %17, align 4
  br label %374

; <label>:374:                                    ; preds = %504, %373
  %375 = load i32, i32* %17, align 4
  %376 = sext i32 %375 to i64
  %377 = load i64, i64* %2, align 8
  %378 = icmp slt i64 %376, %377
  br i1 %378, label %379, label %511

; <label>:379:                                    ; preds = %374
  call void @_ZNSt6vectorIxSaIxEEC2Ev(%"class.std::vector.0"* %18) #3
  call void @_ZNSt6vectorIxSaIxEEC2Ev(%"class.std::vector.0"* %19) #3
  %380 = load i32, i32* %17, align 4
  invoke void @_Z8dijkstraRKSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEiRS_IxSaIxEES9_(%"class.std::vector.21"* dereferenceable(24) %13, i32 %380, %"class.std::vector.0"* dereferenceable(24) %18, %"class.std::vector.0"* dereferenceable(24) %19)
          to label %381 unwind label %429

; <label>:381:                                    ; preds = %379
  store i8 1, i8* %20, align 1
  store i32 0, i32* %21, align 4
  br label %382

; <label>:382:                                    ; preds = %492, %381
  %383 = load i32, i32* %21, align 4
  %384 = sext i32 %383 to i64
  %385 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.0"* %18) #3
  %386 = icmp ult i64 %384, %385
  br i1 %386, label %387, label %493

; <label>:387:                                    ; preds = %382
  %388 = load i32, i32* @x.151
  %389 = load i32, i32* @y.152
  %390 = sub i32 %388, -1196078708
  %391 = sub i32 %390, 1
  %392 = add i32 %391, -1196078708
  %393 = sub i32 %388, 1
  %394 = mul i32 %388, %392
  %395 = urem i32 %394, 2
  %396 = icmp eq i32 %395, 0
  %397 = icmp slt i32 %389, 10
  %398 = and i1 %396, %397
  %399 = xor i1 %396, %397
  %400 = or i1 %398, %399
  %401 = or i1 %396, %397
  br i1 %400, label %402, label %665

; <label>:402:                                    ; preds = %387, %665
  %403 = load i32, i32* %21, align 4
  %404 = sext i32 %403 to i64
  %405 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %18, i64 %404) #3
  %406 = load i64, i64* %405, align 8
  %407 = icmp eq i64 %406, 1152921504606846976
  %408 = load i32, i32* @x.151
  %409 = load i32, i32* @y.152
  %410 = add i32 %408, 497525355
  %411 = sub i32 %410, 1
  %412 = sub i32 %411, 497525355
  %413 = sub i32 %408, 1
  %414 = mul i32 %408, %412
  %415 = urem i32 %414, 2
  %416 = icmp eq i32 %415, 0
  %417 = icmp slt i32 %409, 10
  %418 = and i1 %416, %417
  %419 = xor i1 %416, %417
  %420 = or i1 %418, %419
  %421 = or i1 %416, %417
  br i1 %420, label %422, label %665

; <label>:422:                                    ; preds = %402
  br i1 %407, label %423, label %433

; <label>:423:                                    ; preds = %422
  %424 = load i64, i64* %11, align 8
  %425 = add i64 %424, -2498403445277008774
  %426 = add i64 %425, 1
  %427 = sub i64 %426, -2498403445277008774
  %428 = add nsw i64 %424, 1
  store i64 %427, i64* %11, align 8
  store i8 0, i8* %20, align 1
  br label %493

; <label>:429:                                    ; preds = %379
  %430 = landingpad { i8*, i32 }
          cleanup
  %431 = extractvalue { i8*, i32 } %430, 0
  store i8* %431, i8** %8, align 8
  %432 = extractvalue { i8*, i32 } %430, 1
  store i32 %432, i32* %9, align 4
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"* %19) #3
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"* %18) #3
  br label %559

; <label>:433:                                    ; preds = %422
  br label %434

; <label>:434:                                    ; preds = %433
  %435 = load i32, i32* @x.151
  %436 = load i32, i32* @y.152
  %437 = sub i32 %435, 1348705269
  %438 = sub i32 %437, 1
  %439 = add i32 %438, 1348705269
  %440 = sub i32 %435, 1
  %441 = mul i32 %435, %439
  %442 = urem i32 %441, 2
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %436, 10
  %445 = xor i1 %443, true
  %446 = xor i1 %444, true
  %447 = xor i1 true, true
  %448 = and i1 %445, true
  %449 = and i1 %443, %447
  %450 = and i1 %446, true
  %451 = and i1 %444, %447
  %452 = or i1 %448, %449
  %453 = or i1 %450, %451
  %454 = xor i1 %452, %453
  %455 = or i1 %445, %446
  %456 = xor i1 %455, true
  %457 = or i1 true, %447
  %458 = and i1 %456, %457
  %459 = or i1 %454, %458
  %460 = or i1 %443, %444
  br i1 %459, label %461, label %671

; <label>:461:                                    ; preds = %434, %671
  %462 = load i32, i32* %21, align 4
  %463 = sub i32 %462, 1976678680
  %464 = add i32 %463, 1
  %465 = add i32 %464, 1976678680
  %466 = add nsw i32 %462, 1
  store i32 %465, i32* %21, align 4
  %467 = load i32, i32* @x.151
  %468 = load i32, i32* @y.152
  %469 = sub i32 0, 1
  %470 = add i32 %467, %469
  %471 = sub i32 %467, 1
  %472 = mul i32 %467, %470
  %473 = urem i32 %472, 2
  %474 = icmp eq i32 %473, 0
  %475 = icmp slt i32 %468, 10
  %476 = xor i1 %474, true
  %477 = xor i1 %475, true
  %478 = xor i1 true, true
  %479 = and i1 %476, true
  %480 = and i1 %474, %478
  %481 = and i1 %477, true
  %482 = and i1 %475, %478
  %483 = or i1 %479, %480
  %484 = or i1 %481, %482
  %485 = xor i1 %483, %484
  %486 = or i1 %476, %477
  %487 = xor i1 %486, true
  %488 = or i1 true, %478
  %489 = and i1 %487, %488
  %490 = or i1 %485, %489
  %491 = or i1 %474, %475
  br i1 %490, label %492, label %671

; <label>:492:                                    ; preds = %461
  br label %382

; <label>:493:                                    ; preds = %423, %382
  %494 = load i8, i8* %20, align 1
  %495 = trunc i8 %494 to i1
  br i1 %495, label %497, label %496

; <label>:496:                                    ; preds = %493
  store i32 11, i32* %22, align 4
  br label %498

; <label>:497:                                    ; preds = %493
  store i32 0, i32* %22, align 4
  br label %498

; <label>:498:                                    ; preds = %497, %496
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"* %19) #3
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"* %18) #3
  %499 = load i32, i32* %22, align 4
  br label %500

; <label>:500:                                    ; preds = %498
  %501 = icmp eq i32 %499, 11
  br i1 %501, label %511, label %502

; <label>:502:                                    ; preds = %500
  br label %503

; <label>:503:                                    ; preds = %502
  br label %504

; <label>:504:                                    ; preds = %503
  %505 = load i32, i32* %17, align 4
  %506 = sub i32 0, %505
  %507 = sub i32 0, 1
  %508 = add i32 %506, %507
  %509 = sub i32 0, %508
  %510 = add nsw i32 %505, 1
  store i32 %509, i32* %17, align 4
  br label %374

; <label>:511:                                    ; preds = %500, %374
  %512 = load i32, i32* @x.151
  %513 = load i32, i32* @y.152
  %514 = sub i32 %512, -1332229354
  %515 = sub i32 %514, 1
  %516 = add i32 %515, -1332229354
  %517 = sub i32 %512, 1
  %518 = mul i32 %512, %516
  %519 = urem i32 %518, 2
  %520 = icmp eq i32 %519, 0
  %521 = icmp slt i32 %513, 10
  %522 = and i1 %520, %521
  %523 = xor i1 %520, %521
  %524 = or i1 %522, %523
  %525 = or i1 %520, %521
  br i1 %524, label %526, label %709

; <label>:526:                                    ; preds = %511, %709
  call void @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EED2Ev(%"class.std::vector.21"* %13) #3
  %527 = load i32, i32* @x.151
  %528 = load i32, i32* @y.152
  %529 = sub i32 %527, 128368959
  %530 = sub i32 %529, 1
  %531 = add i32 %530, 128368959
  %532 = sub i32 %527, 1
  %533 = mul i32 %527, %531
  %534 = urem i32 %533, 2
  %535 = icmp eq i32 %534, 0
  %536 = icmp slt i32 %528, 10
  %537 = xor i1 %535, true
  %538 = xor i1 %536, true
  %539 = xor i1 true, true
  %540 = and i1 %537, true
  %541 = and i1 %535, %539
  %542 = and i1 %538, true
  %543 = and i1 %536, %539
  %544 = or i1 %540, %541
  %545 = or i1 %542, %543
  %546 = xor i1 %544, %545
  %547 = or i1 %537, %538
  %548 = xor i1 %547, true
  %549 = or i1 true, %539
  %550 = and i1 %548, %549
  %551 = or i1 %546, %550
  %552 = or i1 %535, %536
  br i1 %551, label %553, label %709

; <label>:553:                                    ; preds = %526
  br label %554

; <label>:554:                                    ; preds = %553
  %555 = load i32, i32* %12, align 4
  %556 = sub i32 0, 1
  %557 = sub i32 %555, %556
  %558 = add nsw i32 %555, 1
  store i32 %557, i32* %12, align 4
  br label %176

; <label>:559:                                    ; preds = %429, %369
  call void @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EED2Ev(%"class.std::vector.21"* %13) #3
  br label %567

; <label>:560:                                    ; preds = %176
  %561 = load i64, i64* %11, align 8
  %562 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* @_ZSt4cout, i64 %561)
          to label %563 unwind label %142

; <label>:563:                                    ; preds = %560
  %564 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %562, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %565 unwind label %142

; <label>:565:                                    ; preds = %563
  store i32 0, i32* %1, align 4
  store i32 1, i32* %22, align 4
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EED2Ev(%"class.std::vector.31"* %4) #3
  %566 = load i32, i32* %1, align 4
  ret i32 %566

; <label>:567:                                    ; preds = %559, %289, %142
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EED2Ev(%"class.std::vector.31"* %4) #3
  br label %568

; <label>:568:                                    ; preds = %567
  %569 = load i32, i32* @x.151
  %570 = load i32, i32* @y.152
  %571 = sub i32 0, 1
  %572 = add i32 %569, %571
  %573 = sub i32 %569, 1
  %574 = mul i32 %569, %572
  %575 = urem i32 %574, 2
  %576 = icmp eq i32 %575, 0
  %577 = icmp slt i32 %570, 10
  %578 = xor i1 %576, true
  %579 = xor i1 %577, true
  %580 = xor i1 true, true
  %581 = and i1 %578, true
  %582 = and i1 %576, %580
  %583 = and i1 %579, true
  %584 = and i1 %577, %580
  %585 = or i1 %581, %582
  %586 = or i1 %583, %584
  %587 = xor i1 %585, %586
  %588 = or i1 %578, %579
  %589 = xor i1 %588, true
  %590 = or i1 true, %580
  %591 = and i1 %589, %590
  %592 = or i1 %587, %591
  %593 = or i1 %576, %577
  br i1 %592, label %594, label %710

; <label>:594:                                    ; preds = %568, %710
  %595 = load i8*, i8** %8, align 8
  %596 = load i32, i32* %9, align 4
  %597 = insertvalue { i8*, i32 } undef, i8* %595, 0
  %598 = insertvalue { i8*, i32 } %597, i32 %596, 1
  %599 = load i32, i32* @x.151
  %600 = load i32, i32* @y.152
  %601 = sub i32 %599, -642775643
  %602 = sub i32 %601, 1
  %603 = add i32 %602, -642775643
  %604 = sub i32 %599, 1
  %605 = mul i32 %599, %603
  %606 = urem i32 %605, 2
  %607 = icmp eq i32 %606, 0
  %608 = icmp slt i32 %600, 10
  %609 = and i1 %607, %608
  %610 = xor i1 %607, %608
  %611 = or i1 %609, %610
  %612 = or i1 %607, %608
  br i1 %611, label %613, label %710

; <label>:613:                                    ; preds = %594
  resume { i8*, i32 } %598

; <label>:614:                                    ; preds = %61, %34
  %615 = load i64, i64* %6, align 8
  %616 = sub i64 %615, 7144804303283182351
  %617 = add i64 %616, -1
  %618 = add i64 %617, 7144804303283182351
  %619 = add nsw i64 %615, -1
  store i64 %618, i64* %6, align 8
  %620 = load i64, i64* %7, align 8
  %621 = sub i64 %620, -1757931997387120002
  %622 = sub i64 %621, -1
  %623 = add i64 %622, -1757931997387120002
  %624 = sub i64 %620, -1
  %625 = mul i64 %623, -1
  %626 = shl i64 %620, -1
  %627 = add i64 0, 3845109121467754639
  %628 = sub i64 %627, %620
  %629 = sub i64 %628, 3845109121467754639
  %630 = sub i64 0, %620
  %631 = sub i64 %629, 5184923152447730736
  %632 = add i64 %631, -1
  %633 = add i64 %632, 5184923152447730736
  %634 = add i64 %629, -1
  %635 = sub i64 0, -5509691343293994595
  %636 = sub i64 %635, %620
  %637 = add i64 %636, -5509691343293994595
  %638 = sub i64 0, %620
  %639 = sub i64 %637, 8859269549216314189
  %640 = add i64 %639, -1
  %641 = add i64 %640, 8859269549216314189
  %642 = add i64 %637, -1
  %643 = sub i64 %620, -8834570714622954832
  %644 = add i64 %643, -1
  %645 = add i64 %644, -8834570714622954832
  %646 = add nsw i64 %620, -1
  store i64 %645, i64* %7, align 8
  br label %61

; <label>:647:                                    ; preds = %110, %95
  br label %110

; <label>:648:                                    ; preds = %160, %146
  store i64 0, i64* %11, align 8
  store i32 0, i32* %12, align 4
  br label %160

; <label>:649:                                    ; preds = %197, %183
  call void @_ZNSaISt6vectorI4EdgeSaIS0_EEED2Ev(%"class.std::allocator.23"* %14) #3
  store i32 0, i32* %15, align 4
  br label %197

; <label>:650:                                    ; preds = %261, %234
  br label %261

; <label>:651:                                    ; preds = %321, %307
  %652 = load i32, i32* %15, align 4
  %653 = sext i32 %652 to i64
  %654 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNSt6vectorISt4pairIxxESaIS1_EEixEm(%"class.std::vector.31"* %4, i64 %653) #3
  %655 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %654, i32 0, i32 0
  %656 = load i64, i64* %655, align 8
  %657 = getelementptr inbounds %struct.Edge, %struct.Edge* %16, i32 0, i32 0
  store i64 %656, i64* %657, align 8
  %658 = getelementptr inbounds %struct.Edge, %struct.Edge* %16, i32 0, i32 1
  store i64 1, i64* %658, align 8
  %659 = load i32, i32* %15, align 4
  %660 = sext i32 %659 to i64
  %661 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNSt6vectorISt4pairIxxESaIS1_EEixEm(%"class.std::vector.31"* %4, i64 %660) #3
  %662 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %661, i32 0, i32 1
  %663 = load i64, i64* %662, align 8
  %664 = call dereferenceable(24) %"class.std::vector.26"* @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEixEm(%"class.std::vector.21"* %13, i64 %663) #3
  br label %321

; <label>:665:                                    ; preds = %402, %387
  %666 = load i32, i32* %21, align 4
  %667 = sext i32 %666 to i64
  %668 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.0"* %18, i64 %667) #3
  %669 = load i64, i64* %668, align 8
  %670 = icmp eq i64 %669, 1152921504606846976
  br label %402

; <label>:671:                                    ; preds = %461, %434
  %672 = load i32, i32* %21, align 4
  %673 = add i32 0, 1830222271
  %674 = sub i32 %673, %672
  %675 = sub i32 %674, 1830222271
  %676 = sub i32 0, %672
  %677 = sub i32 0, 1
  %678 = sub i32 %675, %677
  %679 = add i32 %675, 1
  %680 = sub i32 %672, -2117568384
  %681 = sub i32 %680, 1
  %682 = add i32 %681, -2117568384
  %683 = sub i32 %672, 1
  %684 = mul i32 %682, 1
  %685 = sub i32 %672, 1131605854
  %686 = sub i32 %685, 1
  %687 = add i32 %686, 1131605854
  %688 = sub i32 %672, 1
  %689 = mul i32 %687, 1
  %690 = add i32 %672, 2132699475
  %691 = sub i32 %690, 1
  %692 = sub i32 %691, 2132699475
  %693 = sub i32 %672, 1
  %694 = mul i32 %692, 1
  %695 = shl i32 %672, 1
  %696 = sub i32 0, -368112878
  %697 = sub i32 %696, %672
  %698 = add i32 %697, -368112878
  %699 = sub i32 0, %672
  %700 = sub i32 0, %698
  %701 = sub i32 0, 1
  %702 = add i32 %700, %701
  %703 = sub i32 0, %702
  %704 = add i32 %698, 1
  %705 = sub i32 %672, -1164578482
  %706 = add i32 %705, 1
  %707 = add i32 %706, -1164578482
  %708 = add nsw i32 %672, 1
  store i32 %707, i32* %21, align 4
  br label %461

; <label>:709:                                    ; preds = %526, %511
  call void @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EED2Ev(%"class.std::vector.21"* %13) #3
  br label %526

; <label>:710:                                    ; preds = %594, %568
  %711 = load i8*, i8** %8, align 8
  %712 = load i32, i32* %9, align 4
  %713 = insertvalue { i8*, i32 } undef, i8* %711, 0
  %714 = insertvalue { i8*, i32 } %713, i32 %712, 1
  br label %594
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIxxESaIS1_EE9push_backEOS1_(%"class.std::vector.31"*, %"struct.std::pair.36"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.153
  %6 = load i32, i32* @y.154
  %7 = sub i32 %5, -1256544284
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1256544284
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1530539871, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1530539871, label %19
    i32 946325173, label %27
    i32 91674414, label %60
    i32 -1598558479, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 946325173, i32 -1598558479
  store i32 %26, i32* %15
  br label %67

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.31"*, align 8
  %29 = alloca %"struct.std::pair.36"*, align 8
  store %"class.std::vector.31"* %0, %"class.std::vector.31"** %28, align 8
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %29, align 8
  %30 = load %"class.std::vector.31"*, %"class.std::vector.31"** %28, align 8
  %31 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %29, align 8
  %32 = call dereferenceable(16) %"struct.std::pair.36"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.36"* dereferenceable(16) %31) #3
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.31"* %30, %"struct.std::pair.36"* dereferenceable(16) %32)
  %33 = load i32, i32* @x.153
  %34 = load i32, i32* @y.154
  %35 = sub i32 %33, 61470107
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 61470107
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 91674414, i32 -1598558479
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::vector.31"*, align 8
  %63 = alloca %"struct.std::pair.36"*, align 8
  store %"class.std::vector.31"* %0, %"class.std::vector.31"** %62, align 8
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %63, align 8
  %64 = load %"class.std::vector.31"*, %"class.std::vector.31"** %62, align 8
  %65 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %63, align 8
  %66 = call dereferenceable(16) %"struct.std::pair.36"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.36"* dereferenceable(16) %65) #3
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.31"* %64, %"struct.std::pair.36"* dereferenceable(16) %66)
  store i32 946325173, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64, i64 } @_ZSt9make_pairIRxS0_ESt4pairINSt17__decay_and_stripIT_E6__typeENS2_IT0_E6__typeEEOS3_OS6_(i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat {
  %3 = alloca %"struct.std::pair.36", align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  %6 = load i64*, i64** %4, align 8
  %7 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %6) #3
  %8 = load i64*, i64** %5, align 8
  %9 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %8) #3
  call void @_ZNSt4pairIxxEC2IRxS2_vEEOT_OT0_(%"struct.std::pair.36"* %3, i64* dereferenceable(8) %7, i64* dereferenceable(8) %9)
  %10 = bitcast %"struct.std::pair.36"* %3 to { i64, i64 }*
  %11 = load { i64, i64 }, { i64, i64 }* %10, align 8
  ret { i64, i64 } %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorI4EdgeSaIS0_EEEC2Ev(%"class.std::allocator.23"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.157
  %5 = load i32, i32* @y.158
  %6 = add i32 %4, 2053663854
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 2053663854
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1770288868, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %50
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1770288868, label %18
    i32 -248790034, label %26
    i32 -533098465, label %45
    i32 -381421759, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %50

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -248790034, i32 -381421759
  store i32 %25, i32* %14
  br label %50

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.23"*, align 8
  store %"class.std::allocator.23"* %0, %"class.std::allocator.23"** %27, align 8
  %28 = load %"class.std::allocator.23"*, %"class.std::allocator.23"** %27, align 8
  %29 = bitcast %"class.std::allocator.23"* %28 to %"class.__gnu_cxx::new_allocator.24"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEEC2Ev(%"class.__gnu_cxx::new_allocator.24"* %29) #3
  %30 = load i32, i32* @x.157
  %31 = load i32, i32* @y.158
  %32 = add i32 %30, -474151119
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -474151119
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -533098465, i32 -381421759
  store i32 %44, i32* %14
  br label %50

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca %"class.std::allocator.23"*, align 8
  store %"class.std::allocator.23"* %0, %"class.std::allocator.23"** %47, align 8
  %48 = load %"class.std::allocator.23"*, %"class.std::allocator.23"** %47, align 8
  %49 = bitcast %"class.std::allocator.23"* %48 to %"class.__gnu_cxx::new_allocator.24"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEEC2Ev(%"class.__gnu_cxx::new_allocator.24"* %49) #3
  store i32 -248790034, i32* %14
  br label %50

; <label>:50:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEC2EmRKS3_(%"class.std::vector.21"*, i64, %"class.std::allocator.23"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.159
  %5 = load i32, i32* @y.160
  %6 = add i32 %4, 342504115
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 342504115
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %55

; <label>:18:                                     ; preds = %3, %55
  %19 = alloca %"class.std::vector.21"*, align 8
  %20 = alloca i64, align 8
  %21 = alloca %"class.std::allocator.23"*, align 8
  %22 = alloca i8*
  %23 = alloca i32
  store %"class.std::vector.21"* %0, %"class.std::vector.21"** %19, align 8
  store i64 %1, i64* %20, align 8
  store %"class.std::allocator.23"* %2, %"class.std::allocator.23"** %21, align 8
  %24 = load %"class.std::vector.21"*, %"class.std::vector.21"** %19, align 8
  %25 = bitcast %"class.std::vector.21"* %24 to %"struct.std::_Vector_base.22"*
  %26 = load i64, i64* %20, align 8
  %27 = load %"class.std::allocator.23"*, %"class.std::allocator.23"** %21, align 8
  call void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EEC2EmRKS4_(%"struct.std::_Vector_base.22"* %25, i64 %26, %"class.std::allocator.23"* dereferenceable(1) %27)
  %28 = load i64, i64* %20, align 8
  %29 = load i32, i32* @x.159
  %30 = load i32, i32* @y.160
  %31 = add i32 %29, 595509312
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, 595509312
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  br i1 %41, label %43, label %55

; <label>:43:                                     ; preds = %18
  invoke void @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EE21_M_default_initializeEm(%"class.std::vector.21"* %24, i64 %28)
          to label %44 unwind label %45

; <label>:44:                                     ; preds = %43
  ret void

; <label>:45:                                     ; preds = %43
  %46 = landingpad { i8*, i32 }
          cleanup
  %47 = extractvalue { i8*, i32 } %46, 0
  store i8* %47, i8** %22, align 8
  %48 = extractvalue { i8*, i32 } %46, 1
  store i32 %48, i32* %23, align 4
  %49 = bitcast %"class.std::vector.21"* %24 to %"struct.std::_Vector_base.22"*
  call void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EED2Ev(%"struct.std::_Vector_base.22"* %49) #3
  br label %50

; <label>:50:                                     ; preds = %45
  %51 = load i8*, i8** %22, align 8
  %52 = load i32, i32* %23, align 4
  %53 = insertvalue { i8*, i32 } undef, i8* %51, 0
  %54 = insertvalue { i8*, i32 } %53, i32 %52, 1
  resume { i8*, i32 } %54

; <label>:55:                                     ; preds = %18, %3
  %56 = alloca %"class.std::vector.21"*, align 8
  %57 = alloca i64, align 8
  %58 = alloca %"class.std::allocator.23"*, align 8
  %59 = alloca i8*
  %60 = alloca i32
  store %"class.std::vector.21"* %0, %"class.std::vector.21"** %56, align 8
  store i64 %1, i64* %57, align 8
  store %"class.std::allocator.23"* %2, %"class.std::allocator.23"** %58, align 8
  %61 = load %"class.std::vector.21"*, %"class.std::vector.21"** %56, align 8
  %62 = bitcast %"class.std::vector.21"* %61 to %"struct.std::_Vector_base.22"*
  %63 = load i64, i64* %57, align 8
  %64 = load %"class.std::allocator.23"*, %"class.std::allocator.23"** %58, align 8
  call void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EEC2EmRKS4_(%"struct.std::_Vector_base.22"* %62, i64 %63, %"class.std::allocator.23"* dereferenceable(1) %64)
  %65 = load i64, i64* %57, align 8
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorI4EdgeSaIS0_EEED2Ev(%"class.std::allocator.23"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.23"*, align 8
  store %"class.std::allocator.23"* %0, %"class.std::allocator.23"** %2, align 8
  %3 = load %"class.std::allocator.23"*, %"class.std::allocator.23"** %2, align 8
  %4 = bitcast %"class.std::allocator.23"* %3 to %"class.__gnu_cxx::new_allocator.24"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEED2Ev(%"class.__gnu_cxx::new_allocator.24"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair.36"* @_ZNSt6vectorISt4pairIxxESaIS1_EEixEm(%"class.std::vector.31"*, i64) #4 comdat align 2 {
  %3 = alloca %"struct.std::pair.36"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.163
  %7 = load i32, i32* @y.164
  %8 = add i32 %6, 1504545952
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1504545952
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -252814388, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %65
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -252814388, label %20
    i32 -539623271, label %28
    i32 1473372168, label %53
    i32 -2098404451, label %55
  ]

; <label>:19:                                     ; preds = %17
  br label %65

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -539623271, i32 -2098404451
  store i32 %27, i32* %16
  br label %65

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.31"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector.31"* %0, %"class.std::vector.31"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector.31"*, %"class.std::vector.31"** %29, align 8
  %32 = bitcast %"class.std::vector.31"* %31 to %"struct.std::_Vector_base.32"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %34, align 8
  %36 = load i64, i64* %30, align 8
  %37 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %35, i64 %36
  store %"struct.std::pair.36"* %37, %"struct.std::pair.36"** %3
  %38 = load i32, i32* @x.163
  %39 = load i32, i32* @y.164
  %40 = add i32 %38, 358879545
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 358879545
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 1473372168, i32 -2098404451
  store i32 %52, i32* %16
  br label %65

; <label>:53:                                     ; preds = %17
  %54 = load volatile %"struct.std::pair.36"*, %"struct.std::pair.36"** %3
  ret %"struct.std::pair.36"* %54

; <label>:55:                                     ; preds = %17
  %56 = alloca %"class.std::vector.31"*, align 8
  %57 = alloca i64, align 8
  store %"class.std::vector.31"* %0, %"class.std::vector.31"** %56, align 8
  store i64 %1, i64* %57, align 8
  %58 = load %"class.std::vector.31"*, %"class.std::vector.31"** %56, align 8
  %59 = bitcast %"class.std::vector.31"* %58 to %"struct.std::_Vector_base.32"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %59, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %60, i32 0, i32 0
  %62 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %61, align 8
  %63 = load i64, i64* %57, align 8
  %64 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %62, i64 %63
  store i32 -539623271, i32* %16
  br label %65

; <label>:65:                                     ; preds = %55, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.26"* @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EEixEm(%"class.std::vector.21"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector.21"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.21"* %0, %"class.std::vector.21"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.21"*, %"class.std::vector.21"** %3, align 8
  %6 = bitcast %"class.std::vector.21"* %5 to %"struct.std::_Vector_base.22"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.22", %"struct.std::_Vector_base.22"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.26"*, %"class.std::vector.26"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::vector.26", %"class.std::vector.26"* %9, i64 %10
  ret %"class.std::vector.26"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI4EdgeSaIS0_EE9push_backERKS0_(%"class.std::vector.26"*, %struct.Edge* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %struct.Edge*
  %4 = alloca %struct.Edge*
  %5 = alloca %"class.std::vector.26"*
  %6 = alloca %"class.std::vector.26"*, align 8
  %7 = alloca %struct.Edge*, align 8
  store %"class.std::vector.26"* %0, %"class.std::vector.26"** %6, align 8
  store %struct.Edge* %1, %struct.Edge** %7, align 8
  %8 = load %"class.std::vector.26"*, %"class.std::vector.26"** %6, align 8
  store %"class.std::vector.26"* %8, %"class.std::vector.26"** %5
  %9 = load volatile %"class.std::vector.26"*, %"class.std::vector.26"** %5
  %10 = bitcast %"class.std::vector.26"* %9 to %"struct.std::_Vector_base.27"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %struct.Edge*, %struct.Edge** %12, align 8
  store %struct.Edge* %13, %struct.Edge** %4
  %14 = load volatile %"class.std::vector.26"*, %"class.std::vector.26"** %5
  %15 = bitcast %"class.std::vector.26"* %14 to %"struct.std::_Vector_base.27"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load %struct.Edge*, %struct.Edge** %17, align 8
  store %struct.Edge* %18, %struct.Edge** %3
  %19 = alloca i32
  store i32 -939568464, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %110
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -939568464, label %23
    i32 -21996591, label %28
    i32 728962658, label %56
    i32 2066054708, label %88
    i32 -1598182246, label %89
    i32 -1462661201, label %92
    i32 -1839404837, label %93
  ]

; <label>:22:                                     ; preds = %20
  br label %110

; <label>:23:                                     ; preds = %20
  %24 = load volatile %struct.Edge*, %struct.Edge** %4
  %25 = load volatile %struct.Edge*, %struct.Edge** %3
  %26 = icmp ne %struct.Edge* %24, %25
  %27 = select i1 %26, i32 -21996591, i32 -1598182246
  store i32 %27, i32* %19
  br label %110

; <label>:28:                                     ; preds = %20
  %29 = load i32, i32* @x.167
  %30 = load i32, i32* @y.168
  %31 = add i32 %29, 1266669983
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, 1266669983
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 728962658, i32 -1839404837
  store i32 %55, i32* %19
  br label %110

; <label>:56:                                     ; preds = %20
  %57 = load volatile %"class.std::vector.26"*, %"class.std::vector.26"** %5
  %58 = bitcast %"class.std::vector.26"* %57 to %"struct.std::_Vector_base.27"*
  %59 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %58, i32 0, i32 0
  %60 = bitcast %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %59 to %"class.std::allocator.28"*
  %61 = load volatile %"class.std::vector.26"*, %"class.std::vector.26"** %5
  %62 = bitcast %"class.std::vector.26"* %61 to %"struct.std::_Vector_base.27"*
  %63 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %62, i32 0, i32 0
  %64 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %63, i32 0, i32 1
  %65 = load %struct.Edge*, %struct.Edge** %64, align 8
  %66 = load %struct.Edge*, %struct.Edge** %7, align 8
  call void @_ZNSt16allocator_traitsISaI4EdgeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator.28"* dereferenceable(1) %60, %struct.Edge* %65, %struct.Edge* dereferenceable(16) %66)
  %67 = load volatile %"class.std::vector.26"*, %"class.std::vector.26"** %5
  %68 = bitcast %"class.std::vector.26"* %67 to %"struct.std::_Vector_base.27"*
  %69 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %68, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %69, i32 0, i32 1
  %71 = load %struct.Edge*, %struct.Edge** %70, align 8
  %72 = getelementptr inbounds %struct.Edge, %struct.Edge* %71, i32 1
  store %struct.Edge* %72, %struct.Edge** %70, align 8
  %73 = load i32, i32* @x.167
  %74 = load i32, i32* @y.168
  %75 = add i32 %73, 472469361
  %76 = sub i32 %75, 1
  %77 = sub i32 %76, 472469361
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = and i1 %81, %82
  %84 = xor i1 %81, %82
  %85 = or i1 %83, %84
  %86 = or i1 %81, %82
  %87 = select i1 %85, i32 2066054708, i32 -1839404837
  store i32 %87, i32* %19
  br label %110

; <label>:88:                                     ; preds = %20
  store i32 -1462661201, i32* %19
  br label %110

; <label>:89:                                     ; preds = %20
  %90 = load %struct.Edge*, %struct.Edge** %7, align 8
  %91 = load volatile %"class.std::vector.26"*, %"class.std::vector.26"** %5
  call void @_ZNSt6vectorI4EdgeSaIS0_EE19_M_emplace_back_auxIJRKS0_EEEvDpOT_(%"class.std::vector.26"* %91, %struct.Edge* dereferenceable(16) %90)
  store i32 -1462661201, i32* %19
  br label %110

; <label>:92:                                     ; preds = %20
  ret void

; <label>:93:                                     ; preds = %20
  %94 = load volatile %"class.std::vector.26"*, %"class.std::vector.26"** %5
  %95 = bitcast %"class.std::vector.26"* %94 to %"struct.std::_Vector_base.27"*
  %96 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %95, i32 0, i32 0
  %97 = bitcast %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %96 to %"class.std::allocator.28"*
  %98 = load volatile %"class.std::vector.26"*, %"class.std::vector.26"** %5
  %99 = bitcast %"class.std::vector.26"* %98 to %"struct.std::_Vector_base.27"*
  %100 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %99, i32 0, i32 0
  %101 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %100, i32 0, i32 1
  %102 = load %struct.Edge*, %struct.Edge** %101, align 8
  %103 = load %struct.Edge*, %struct.Edge** %7, align 8
  call void @_ZNSt16allocator_traitsISaI4EdgeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator.28"* dereferenceable(1) %97, %struct.Edge* %102, %struct.Edge* dereferenceable(16) %103)
  %104 = load volatile %"class.std::vector.26"*, %"class.std::vector.26"** %5
  %105 = bitcast %"class.std::vector.26"* %104 to %"struct.std::_Vector_base.27"*
  %106 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %105, i32 0, i32 0
  %107 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %106, i32 0, i32 1
  %108 = load %struct.Edge*, %struct.Edge** %107, align 8
  %109 = getelementptr inbounds %struct.Edge, %struct.Edge* %108, i32 1
  store %struct.Edge* %109, %struct.Edge** %107, align 8
  store i32 728962658, i32* %19
  br label %110

; <label>:110:                                    ; preds = %93, %89, %88, %56, %28, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EED2Ev(%"class.std::vector.21"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.21"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.21"* %0, %"class.std::vector.21"** %2, align 8
  %5 = load %"class.std::vector.21"*, %"class.std::vector.21"** %2, align 8
  %6 = bitcast %"class.std::vector.21"* %5 to %"struct.std::_Vector_base.22"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.22", %"struct.std::_Vector_base.22"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.26"*, %"class.std::vector.26"** %8, align 8
  %10 = bitcast %"class.std::vector.21"* %5 to %"struct.std::_Vector_base.22"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.22", %"struct.std::_Vector_base.22"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::vector.26"*, %"class.std::vector.26"** %12, align 8
  %14 = bitcast %"class.std::vector.21"* %5 to %"struct.std::_Vector_base.22"*
  %15 = call dereferenceable(1) %"class.std::allocator.23"* @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.22"* %14) #3
  invoke void @_ZSt8_DestroyIPSt6vectorI4EdgeSaIS1_EES3_EvT_S5_RSaIT0_E(%"class.std::vector.26"* %9, %"class.std::vector.26"* %13, %"class.std::allocator.23"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.21"* %5 to %"struct.std::_Vector_base.22"*
  call void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EED2Ev(%"struct.std::_Vector_base.22"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector.21"* %5 to %"struct.std::_Vector_base.22"*
  call void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EED2Ev(%"struct.std::_Vector_base.22"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i32, i32* @x.169
  %25 = load i32, i32* @y.170
  %26 = sub i32 0, 1
  %27 = add i32 %24, %26
  %28 = sub i32 %24, 1
  %29 = mul i32 %24, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %25, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 false, true
  %36 = and i1 %33, false
  %37 = and i1 %31, %35
  %38 = and i1 %34, false
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 false, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  br i1 %47, label %49, label %66

; <label>:49:                                     ; preds = %23, %66
  %50 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %50) #12
  %51 = load i32, i32* @x.169
  %52 = load i32, i32* @y.170
  %53 = sub i32 %51, 367423780
  %54 = sub i32 %53, 1
  %55 = add i32 %54, 367423780
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  br i1 %63, label %65, label %66

; <label>:65:                                     ; preds = %49
  unreachable

; <label>:66:                                     ; preds = %49, %23
  %67 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %67) #12
  br label %49
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: nounwind readnone
declare double @acos(double) #7

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4)) #4 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.171
  %6 = load i32, i32* @y.172
  %7 = sub i32 %5, -2026434727
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -2026434727
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 513084001, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 513084001, label %19
    i32 1734094481, label %39
    i32 1996669818, label %69
    i32 1424517609, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1734094481, i32 1424517609
  store i32 %38, i32* %15
  br label %74

; <label>:39:                                     ; preds = %16
  %40 = alloca i32*, align 8
  store i32* %0, i32** %40, align 8
  %41 = load i32*, i32** %40, align 8
  store i32* %41, i32** %2
  %42 = load i32, i32* @x.171
  %43 = load i32, i32* @y.172
  %44 = add i32 %42, 709795174
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 709795174
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 1996669818, i32 1424517609
  store i32 %68, i32* %15
  br label %74

; <label>:69:                                     ; preds = %16
  %70 = load volatile i32*, i32** %2
  ret i32* %70

; <label>:71:                                     ; preds = %16
  %72 = alloca i32*, align 8
  store i32* %0, i32** %72, align 8
  %73 = load i32*, i32** %72, align 8
  store i32 1734094481, i32* %15
  br label %74

; <label>:74:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIiiEC2IRiS2_vEEOT_OT0_(%"struct.std::pair"*, i32* dereferenceable(4), i32* dereferenceable(4)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::pair"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 0
  %9 = load i32*, i32** %5, align 8
  %10 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %9) #3
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %8, align 4
  %12 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 1
  %13 = load i32*, i32** %6, align 8
  %14 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %13) #3
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %12, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4)) #4 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIiiEC2IiivEEOT_OT0_(%"struct.std::pair"*, i32* dereferenceable(4), i32* dereferenceable(4)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::pair"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 0
  %9 = load i32*, i32** %5, align 8
  %10 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %9) #3
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %8, align 4
  %12 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 1
  %13 = load i32*, i32** %6, align 8
  %14 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %13) #3
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %12, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EED2Ev(%"class.std::_Rb_tree"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %5 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %6 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_beginEv(%"class.std::_Rb_tree"* %5) #3
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* %5, %"struct.std::_Rb_tree_node"* %6)
          to label %7 unwind label %51

; <label>:7:                                      ; preds = %1
  %8 = load i32, i32* @x.179
  %9 = load i32, i32* @y.180
  %10 = add i32 %8, -404278006
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -404278006
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %9, 10
  %18 = xor i1 %16, true
  %19 = xor i1 %17, true
  %20 = xor i1 false, true
  %21 = and i1 %18, false
  %22 = and i1 %16, %20
  %23 = and i1 %19, false
  %24 = and i1 %17, %20
  %25 = or i1 %21, %22
  %26 = or i1 %23, %24
  %27 = xor i1 %25, %26
  %28 = or i1 %18, %19
  %29 = xor i1 %28, true
  %30 = or i1 false, %20
  %31 = and i1 %29, %30
  %32 = or i1 %27, %31
  %33 = or i1 %16, %17
  br i1 %32, label %34, label %99

; <label>:34:                                     ; preds = %7, %99
  %35 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %5, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %35) #3
  %36 = load i32, i32* @x.179
  %37 = load i32, i32* @y.180
  %38 = sub i32 %36, -1097440624
  %39 = sub i32 %38, 1
  %40 = add i32 %39, -1097440624
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  br i1 %48, label %50, label %99

; <label>:50:                                     ; preds = %34
  ret void

; <label>:51:                                     ; preds = %1
  %52 = load i32, i32* @x.179
  %53 = load i32, i32* @y.180
  %54 = sub i32 %52, -1197350143
  %55 = sub i32 %54, 1
  %56 = add i32 %55, -1197350143
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  br i1 %76, label %78, label %101

; <label>:78:                                     ; preds = %51, %101
  %79 = landingpad { i8*, i32 }
          catch i8* null
  %80 = extractvalue { i8*, i32 } %79, 0
  store i8* %80, i8** %3, align 8
  %81 = extractvalue { i8*, i32 } %79, 1
  store i32 %81, i32* %4, align 4
  %82 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %5, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %82) #3
  %83 = load i32, i32* @x.179
  %84 = load i32, i32* @y.180
  %85 = sub i32 0, 1
  %86 = add i32 %83, %85
  %87 = sub i32 %83, 1
  %88 = mul i32 %83, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %84, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  br i1 %94, label %96, label %101

; <label>:96:                                     ; preds = %78
  br label %97

; <label>:97:                                     ; preds = %96
  %98 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %98) #12
  unreachable

; <label>:99:                                     ; preds = %34, %7
  %100 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %5, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %100) #3
  br label %34

; <label>:101:                                    ; preds = %78, %51
  %102 = landingpad { i8*, i32 }
          catch i8* null
  %103 = extractvalue { i8*, i32 } %102, 0
  store i8* %103, i8** %3, align 8
  %104 = extractvalue { i8*, i32 } %102, 1
  store i32 %104, i32* %4, align 4
  %105 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %5, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %105) #3
  br label %78
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %3 = alloca %"class.std::_Rb_tree"*
  %4 = alloca %"class.std::_Rb_tree"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %6 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %4, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
  %7 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  store %"class.std::_Rb_tree"* %7, %"class.std::_Rb_tree"** %3
  %8 = alloca i32
  store i32 -1169010018, i32* %8
  br label %9

; <label>:9:                                      ; preds = %2, %69
  %10 = load i32, i32* %8
  switch i32 %10, label %11 [
    i32 -1169010018, label %12
    i32 -1738985833, label %16
    i32 -991102887, label %31
    i32 -869326224, label %56
    i32 2084237395, label %57
    i32 2011788269, label %58
  ]

; <label>:11:                                     ; preds = %9
  br label %69

; <label>:12:                                     ; preds = %9
  %13 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %14 = icmp ne %"struct.std::_Rb_tree_node"* %13, null
  %15 = select i1 %14, i32 -1738985833, i32 2084237395
  store i32 %15, i32* %8
  br label %69

; <label>:16:                                     ; preds = %9
  %17 = load i32, i32* @x.181
  %18 = load i32, i32* @y.182
  %19 = sub i32 0, 1
  %20 = add i32 %17, %19
  %21 = sub i32 %17, 1
  %22 = mul i32 %17, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %18, 10
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 -991102887, i32 2011788269
  store i32 %30, i32* %8
  br label %69

; <label>:31:                                     ; preds = %9
  %32 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %33 = bitcast %"struct.std::_Rb_tree_node"* %32 to %"struct.std::_Rb_tree_node_base"*
  %34 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %33) #3
  %35 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* %35, %"struct.std::_Rb_tree_node"* %34)
  %36 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %37 = bitcast %"struct.std::_Rb_tree_node"* %36 to %"struct.std::_Rb_tree_node_base"*
  %38 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %37) #3
  store %"struct.std::_Rb_tree_node"* %38, %"struct.std::_Rb_tree_node"** %6, align 8
  %39 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %40 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* %40, %"struct.std::_Rb_tree_node"* %39) #3
  %41 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  store %"struct.std::_Rb_tree_node"* %41, %"struct.std::_Rb_tree_node"** %5, align 8
  %42 = load i32, i32* @x.181
  %43 = load i32, i32* @y.182
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -869326224, i32 2011788269
  store i32 %55, i32* %8
  br label %69

; <label>:56:                                     ; preds = %9
  store i32 -1169010018, i32* %8
  br label %69

; <label>:57:                                     ; preds = %9
  ret void

; <label>:58:                                     ; preds = %9
  %59 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %60 = bitcast %"struct.std::_Rb_tree_node"* %59 to %"struct.std::_Rb_tree_node_base"*
  %61 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %60) #3
  %62 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* %62, %"struct.std::_Rb_tree_node"* %61)
  %63 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %64 = bitcast %"struct.std::_Rb_tree_node"* %63 to %"struct.std::_Rb_tree_node_base"*
  %65 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %64) #3
  store %"struct.std::_Rb_tree_node"* %65, %"struct.std::_Rb_tree_node"** %6, align 8
  %66 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %67 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* %67, %"struct.std::_Rb_tree_node"* %66) #3
  %68 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  store %"struct.std::_Rb_tree_node"* %68, %"struct.std::_Rb_tree_node"** %5, align 8
  store i32 -991102887, i32* %8
  br label %69

; <label>:69:                                     ; preds = %58, %56, %31, %16, %12, %11
  br label %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_beginEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %5, i32 0, i32 1
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = bitcast %"struct.std::_Rb_tree_node_base"* %7 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"** %2, align 8
  %3 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %3 to %"class.std::allocator.18"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxxEEED2Ev(%"class.std::allocator.18"* %4) #3
  ret void
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #8 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #12
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 3
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 2
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #4 comdat align 2 {
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
  %5 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %6 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* %5, %"struct.std::_Rb_tree_node"* %6) #3
  %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* %5, %"struct.std::_Rb_tree_node"* %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
  %5 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %6 = call dereferenceable(1) %"class.std::allocator.18"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %5) #3
  %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  %8 = invoke %"struct.std::pair.44"* @_ZNSt13_Rb_tree_nodeISt4pairIKxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %7)
          to label %9 unwind label %12

; <label>:9:                                      ; preds = %2
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE7destroyIS3_EEvRS5_PT_(%"class.std::allocator.18"* dereferenceable(1) %6, %"struct.std::pair.44"* %8)
          to label %10 unwind label %12

; <label>:10:                                     ; preds = %9
  %11 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  ret void

; <label>:12:                                     ; preds = %9, %2
  %13 = landingpad { i8*, i32 }
          catch i8* null
  %14 = extractvalue { i8*, i32 } %13, 0
  call void @__clang_call_terminate(i8* %14) #12
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
  %5 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %6 = call dereferenceable(1) %"class.std::allocator.18"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %5) #3
  %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE10deallocateERS5_PS4_m(%"class.std::allocator.18"* dereferenceable(1) %6, %"struct.std::_Rb_tree_node"* %7, i64 1)
          to label %8 unwind label %9

; <label>:8:                                      ; preds = %2
  ret void

; <label>:9:                                      ; preds = %2
  %10 = landingpad { i8*, i32 }
          catch i8* null
  %11 = extractvalue { i8*, i32 } %10, 0
  call void @__clang_call_terminate(i8* %11) #12
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE7destroyIS3_EEvRS5_PT_(%"class.std::allocator.18"* dereferenceable(1), %"struct.std::pair.44"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.18"*, align 8
  %4 = alloca %"struct.std::pair.44"*, align 8
  store %"class.std::allocator.18"* %0, %"class.std::allocator.18"** %3, align 8
  store %"struct.std::pair.44"* %1, %"struct.std::pair.44"** %4, align 8
  %5 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %3, align 8
  %6 = bitcast %"class.std::allocator.18"* %5 to %"class.__gnu_cxx::new_allocator.19"*
  %7 = load %"struct.std::pair.44"*, %"struct.std::pair.44"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE7destroyIS4_EEvPT_(%"class.__gnu_cxx::new_allocator.19"* %6, %"struct.std::pair.44"* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.18"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %4 to %"class.std::allocator.18"*
  ret %"class.std::allocator.18"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.44"* @_ZNSt13_Rb_tree_nodeISt4pairIKxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %3, i32 0, i32 1
  %5 = call %"struct.std::pair.44"* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxxEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* %4) #3
  ret %"struct.std::pair.44"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE7destroyIS4_EEvPT_(%"class.__gnu_cxx::new_allocator.19"*, %"struct.std::pair.44"*) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.19"*, align 8
  %4 = alloca %"struct.std::pair.44"*, align 8
  store %"class.__gnu_cxx::new_allocator.19"* %0, %"class.__gnu_cxx::new_allocator.19"** %3, align 8
  store %"struct.std::pair.44"* %1, %"struct.std::pair.44"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.19"*, %"class.__gnu_cxx::new_allocator.19"** %3, align 8
  %6 = load %"struct.std::pair.44"*, %"struct.std::pair.44"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.44"* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxxEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %4 = call i8* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxxEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* %3) #3
  %5 = bitcast i8* %4 to %"struct.std::pair.44"*
  ret %"struct.std::pair.44"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxxEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf", %"struct.__gnu_cxx::__aligned_membuf"* %3, i32 0, i32 0
  %5 = bitcast [16 x i8]* %4 to i8*
  ret i8* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE10deallocateERS5_PS4_m(%"class.std::allocator.18"* dereferenceable(1), %"struct.std::_Rb_tree_node"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.18"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.18"* %0, %"class.std::allocator.18"** %4, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %4, align 8
  %8 = bitcast %"class.std::allocator.18"* %7 to %"class.__gnu_cxx::new_allocator.19"*
  %9 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.19"* %8, %"struct.std::_Rb_tree_node"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.19"*, %"struct.std::_Rb_tree_node"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.19"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.19"* %0, %"class.__gnu_cxx::new_allocator.19"** %4, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.19"*, %"class.__gnu_cxx::new_allocator.19"** %4, align 8
  %8 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %9 = bitcast %"struct.std::_Rb_tree_node"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #9

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxxEEED2Ev(%"class.std::allocator.18"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.215
  %5 = load i32, i32* @y.216
  %6 = sub i32 %4, -1401192860
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1401192860
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1211621868, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1211621868, label %18
    i32 1975954963, label %38
    i32 -1375938685, label %56
    i32 248756425, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1975954963, i32 248756425
  store i32 %37, i32* %14
  br label %61

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.18"*, align 8
  store %"class.std::allocator.18"* %0, %"class.std::allocator.18"** %39, align 8
  %40 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %39, align 8
  %41 = bitcast %"class.std::allocator.18"* %40 to %"class.__gnu_cxx::new_allocator.19"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEED2Ev(%"class.__gnu_cxx::new_allocator.19"* %41) #3
  %42 = load i32, i32* @x.215
  %43 = load i32, i32* @y.216
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -1375938685, i32 248756425
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.std::allocator.18"*, align 8
  store %"class.std::allocator.18"* %0, %"class.std::allocator.18"** %58, align 8
  %59 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %58, align 8
  %60 = bitcast %"class.std::allocator.18"* %59 to %"class.__gnu_cxx::new_allocator.19"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEED2Ev(%"class.__gnu_cxx::new_allocator.19"* %60) #3
  store i32 1975954963, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEED2Ev(%"class.__gnu_cxx::new_allocator.19"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.19"*, align 8
  store %"class.__gnu_cxx::new_allocator.19"* %0, %"class.__gnu_cxx::new_allocator.19"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.19"*, %"class.__gnu_cxx::new_allocator.19"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIxxEC2IRxS2_vEEOT_OT0_(%"struct.std::pair.36"*, i64* dereferenceable(8), i64* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::pair.36"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %7, i32 0, i32 0
  %9 = load i64*, i64** %5, align 8
  %10 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %9) #3
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %8, align 8
  %12 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %7, i32 0, i32 1
  %13 = load i64*, i64** %6, align 8
  %14 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %13) #3
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1), %"class.std::vector.0"*, %"class.std::vector.0"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %5, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %6, align 8
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %11 = call dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardIRKSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector.0"* dereferenceable(24) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE9constructIS3_JRKS3_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"* %8, %"class.std::vector.0"* %9, %"class.std::vector.0"* dereferenceable(24) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IxSaIxEESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_(%"class.std::vector"*, %"class.std::vector.0"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.225
  %4 = load i32, i32* @y.226
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %198

; <label>:16:                                     ; preds = %2, %198
  %17 = alloca %"class.std::vector"*, align 8
  %18 = alloca %"class.std::vector.0"*, align 8
  %19 = alloca i64, align 8
  %20 = alloca %"class.std::vector.0"*, align 8
  %21 = alloca %"class.std::vector.0"*, align 8
  %22 = alloca i8*
  %23 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %17, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %18, align 8
  %24 = load %"class.std::vector"*, %"class.std::vector"** %17, align 8
  %25 = call i64 @_ZNKSt6vectorIS_IxSaIxEESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector"* %24, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %25, i64* %19, align 8
  %26 = bitcast %"class.std::vector"* %24 to %"struct.std::_Vector_base"*
  %27 = load i64, i64* %19, align 8
  %28 = call %"class.std::vector.0"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base"* %26, i64 %27)
  store %"class.std::vector.0"* %28, %"class.std::vector.0"** %20, align 8
  %29 = load %"class.std::vector.0"*, %"class.std::vector.0"** %20, align 8
  store %"class.std::vector.0"* %29, %"class.std::vector.0"** %21, align 8
  %30 = bitcast %"class.std::vector"* %24 to %"struct.std::_Vector_base"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %31 to %"class.std::allocator"*
  %33 = load %"class.std::vector.0"*, %"class.std::vector.0"** %20, align 8
  %34 = call i64 @_ZNKSt6vectorIS_IxSaIxEESaIS1_EE4sizeEv(%"class.std::vector"* %24) #3
  %35 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %33, i64 %34
  %36 = load %"class.std::vector.0"*, %"class.std::vector.0"** %18, align 8
  %37 = call dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardIRKSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector.0"* dereferenceable(24) %36) #3
  %38 = load i32, i32* @x.225
  %39 = load i32, i32* @y.226
  %40 = sub i32 %38, 1076776863
  %41 = sub i32 %40, 1
  %42 = add i32 %41, 1076776863
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  br i1 %62, label %64, label %198

; <label>:64:                                     ; preds = %16
  invoke void @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1) %32, %"class.std::vector.0"* %35, %"class.std::vector.0"* dereferenceable(24) %37)
          to label %65 unwind label %81

; <label>:65:                                     ; preds = %64
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %21, align 8
  %66 = bitcast %"class.std::vector"* %24 to %"struct.std::_Vector_base"*
  %67 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %66, i32 0, i32 0
  %68 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %67, i32 0, i32 0
  %69 = load %"class.std::vector.0"*, %"class.std::vector.0"** %68, align 8
  %70 = bitcast %"class.std::vector"* %24 to %"struct.std::_Vector_base"*
  %71 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %70, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %71, i32 0, i32 1
  %73 = load %"class.std::vector.0"*, %"class.std::vector.0"** %72, align 8
  %74 = load %"class.std::vector.0"*, %"class.std::vector.0"** %20, align 8
  %75 = bitcast %"class.std::vector"* %24 to %"struct.std::_Vector_base"*
  %76 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %75) #3
  %77 = invoke %"class.std::vector.0"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIxSaIxEES3_SaIS2_EET0_T_S6_S5_RT1_(%"class.std::vector.0"* %69, %"class.std::vector.0"* %73, %"class.std::vector.0"* %74, %"class.std::allocator"* dereferenceable(1) %76)
          to label %78 unwind label %81

; <label>:78:                                     ; preds = %65
  store %"class.std::vector.0"* %77, %"class.std::vector.0"** %21, align 8
  %79 = load %"class.std::vector.0"*, %"class.std::vector.0"** %21, align 8
  %80 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %79, i32 1
  store %"class.std::vector.0"* %80, %"class.std::vector.0"** %21, align 8
  br label %144

; <label>:81:                                     ; preds = %65, %64
  %82 = landingpad { i8*, i32 }
          catch i8* null
  %83 = extractvalue { i8*, i32 } %82, 0
  store i8* %83, i8** %22, align 8
  %84 = extractvalue { i8*, i32 } %82, 1
  store i32 %84, i32* %23, align 4
  br label %85

; <label>:85:                                     ; preds = %81
  %86 = load i8*, i8** %22, align 8
  %87 = call i8* @__cxa_begin_catch(i8* %86) #3
  %88 = load %"class.std::vector.0"*, %"class.std::vector.0"** %21, align 8
  %89 = icmp ne %"class.std::vector.0"* %88, null
  br i1 %89, label %102, label %90

; <label>:90:                                     ; preds = %85
  %91 = bitcast %"class.std::vector"* %24 to %"struct.std::_Vector_base"*
  %92 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %91, i32 0, i32 0
  %93 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %92 to %"class.std::allocator"*
  %94 = load %"class.std::vector.0"*, %"class.std::vector.0"** %20, align 8
  %95 = call i64 @_ZNKSt6vectorIS_IxSaIxEESaIS1_EE4sizeEv(%"class.std::vector"* %24) #3
  %96 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %94, i64 %95
  invoke void @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE7destroyIS2_EEvRS3_PT_(%"class.std::allocator"* dereferenceable(1) %93, %"class.std::vector.0"* %96)
          to label %97 unwind label %98

; <label>:97:                                     ; preds = %90
  br label %138

; <label>:98:                                     ; preds = %142, %138, %136, %90
  %99 = landingpad { i8*, i32 }
          cleanup
  %100 = extractvalue { i8*, i32 } %99, 0
  store i8* %100, i8** %22, align 8
  %101 = extractvalue { i8*, i32 } %99, 1
  store i32 %101, i32* %23, align 4
  invoke void @__cxa_end_catch()
          to label %143 unwind label %194

; <label>:102:                                    ; preds = %85
  %103 = load i32, i32* @x.225
  %104 = load i32, i32* @y.226
  %105 = add i32 %103, -321322273
  %106 = sub i32 %105, 1
  %107 = sub i32 %106, -321322273
  %108 = sub i32 %103, 1
  %109 = mul i32 %103, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %104, 10
  %113 = and i1 %111, %112
  %114 = xor i1 %111, %112
  %115 = or i1 %113, %114
  %116 = or i1 %111, %112
  br i1 %115, label %117, label %220

; <label>:117:                                    ; preds = %102, %220
  %118 = load %"class.std::vector.0"*, %"class.std::vector.0"** %20, align 8
  %119 = load %"class.std::vector.0"*, %"class.std::vector.0"** %21, align 8
  %120 = bitcast %"class.std::vector"* %24 to %"struct.std::_Vector_base"*
  %121 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %120) #3
  %122 = load i32, i32* @x.225
  %123 = load i32, i32* @y.226
  %124 = add i32 %122, -1048095570
  %125 = sub i32 %124, 1
  %126 = sub i32 %125, -1048095570
  %127 = sub i32 %122, 1
  %128 = mul i32 %122, %126
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %123, 10
  %132 = and i1 %130, %131
  %133 = xor i1 %130, %131
  %134 = or i1 %132, %133
  %135 = or i1 %130, %131
  br i1 %134, label %136, label %220

; <label>:136:                                    ; preds = %117
  invoke void @_ZSt8_DestroyIPSt6vectorIxSaIxEES2_EvT_S4_RSaIT0_E(%"class.std::vector.0"* %118, %"class.std::vector.0"* %119, %"class.std::allocator"* dereferenceable(1) %121)
          to label %137 unwind label %98

; <label>:137:                                    ; preds = %136
  br label %138

; <label>:138:                                    ; preds = %137, %97
  %139 = bitcast %"class.std::vector"* %24 to %"struct.std::_Vector_base"*
  %140 = load %"class.std::vector.0"*, %"class.std::vector.0"** %20, align 8
  %141 = load i64, i64* %19, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base"* %139, %"class.std::vector.0"* %140, i64 %141)
          to label %142 unwind label %98

; <label>:142:                                    ; preds = %138
  invoke void @__cxa_rethrow() #15
          to label %197 unwind label %98

; <label>:143:                                    ; preds = %98
  br label %189

; <label>:144:                                    ; preds = %78
  %145 = bitcast %"class.std::vector"* %24 to %"struct.std::_Vector_base"*
  %146 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %145, i32 0, i32 0
  %147 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %146, i32 0, i32 0
  %148 = load %"class.std::vector.0"*, %"class.std::vector.0"** %147, align 8
  %149 = bitcast %"class.std::vector"* %24 to %"struct.std::_Vector_base"*
  %150 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %149, i32 0, i32 0
  %151 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %150, i32 0, i32 1
  %152 = load %"class.std::vector.0"*, %"class.std::vector.0"** %151, align 8
  %153 = bitcast %"class.std::vector"* %24 to %"struct.std::_Vector_base"*
  %154 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %153) #3
  call void @_ZSt8_DestroyIPSt6vectorIxSaIxEES2_EvT_S4_RSaIT0_E(%"class.std::vector.0"* %148, %"class.std::vector.0"* %152, %"class.std::allocator"* dereferenceable(1) %154)
  %155 = bitcast %"class.std::vector"* %24 to %"struct.std::_Vector_base"*
  %156 = bitcast %"class.std::vector"* %24 to %"struct.std::_Vector_base"*
  %157 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %156, i32 0, i32 0
  %158 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %157, i32 0, i32 0
  %159 = load %"class.std::vector.0"*, %"class.std::vector.0"** %158, align 8
  %160 = bitcast %"class.std::vector"* %24 to %"struct.std::_Vector_base"*
  %161 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %160, i32 0, i32 0
  %162 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %161, i32 0, i32 2
  %163 = load %"class.std::vector.0"*, %"class.std::vector.0"** %162, align 8
  %164 = bitcast %"class.std::vector"* %24 to %"struct.std::_Vector_base"*
  %165 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %164, i32 0, i32 0
  %166 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %165, i32 0, i32 0
  %167 = load %"class.std::vector.0"*, %"class.std::vector.0"** %166, align 8
  %168 = ptrtoint %"class.std::vector.0"* %163 to i64
  %169 = ptrtoint %"class.std::vector.0"* %167 to i64
  %170 = sub i64 %168, -1498884519363326184
  %171 = sub i64 %170, %169
  %172 = add i64 %171, -1498884519363326184
  %173 = sub i64 %168, %169
  %174 = sdiv exact i64 %172, 24
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base"* %155, %"class.std::vector.0"* %159, i64 %174)
  %175 = load %"class.std::vector.0"*, %"class.std::vector.0"** %20, align 8
  %176 = bitcast %"class.std::vector"* %24 to %"struct.std::_Vector_base"*
  %177 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %176, i32 0, i32 0
  %178 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %177, i32 0, i32 0
  store %"class.std::vector.0"* %175, %"class.std::vector.0"** %178, align 8
  %179 = load %"class.std::vector.0"*, %"class.std::vector.0"** %21, align 8
  %180 = bitcast %"class.std::vector"* %24 to %"struct.std::_Vector_base"*
  %181 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %180, i32 0, i32 0
  %182 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %181, i32 0, i32 1
  store %"class.std::vector.0"* %179, %"class.std::vector.0"** %182, align 8
  %183 = load %"class.std::vector.0"*, %"class.std::vector.0"** %20, align 8
  %184 = load i64, i64* %19, align 8
  %185 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %183, i64 %184
  %186 = bitcast %"class.std::vector"* %24 to %"struct.std::_Vector_base"*
  %187 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %186, i32 0, i32 0
  %188 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %187, i32 0, i32 2
  store %"class.std::vector.0"* %185, %"class.std::vector.0"** %188, align 8
  ret void

; <label>:189:                                    ; preds = %143
  %190 = load i8*, i8** %22, align 8
  %191 = load i32, i32* %23, align 4
  %192 = insertvalue { i8*, i32 } undef, i8* %190, 0
  %193 = insertvalue { i8*, i32 } %192, i32 %191, 1
  resume { i8*, i32 } %193

; <label>:194:                                    ; preds = %98
  %195 = landingpad { i8*, i32 }
          catch i8* null
  %196 = extractvalue { i8*, i32 } %195, 0
  call void @__clang_call_terminate(i8* %196) #12
  unreachable

; <label>:197:                                    ; preds = %142
  unreachable

; <label>:198:                                    ; preds = %16, %2
  %199 = alloca %"class.std::vector"*, align 8
  %200 = alloca %"class.std::vector.0"*, align 8
  %201 = alloca i64, align 8
  %202 = alloca %"class.std::vector.0"*, align 8
  %203 = alloca %"class.std::vector.0"*, align 8
  %204 = alloca i8*
  %205 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %199, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %200, align 8
  %206 = load %"class.std::vector"*, %"class.std::vector"** %199, align 8
  %207 = call i64 @_ZNKSt6vectorIS_IxSaIxEESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector"* %206, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %207, i64* %201, align 8
  %208 = bitcast %"class.std::vector"* %206 to %"struct.std::_Vector_base"*
  %209 = load i64, i64* %201, align 8
  %210 = call %"class.std::vector.0"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base"* %208, i64 %209)
  store %"class.std::vector.0"* %210, %"class.std::vector.0"** %202, align 8
  %211 = load %"class.std::vector.0"*, %"class.std::vector.0"** %202, align 8
  store %"class.std::vector.0"* %211, %"class.std::vector.0"** %203, align 8
  %212 = bitcast %"class.std::vector"* %206 to %"struct.std::_Vector_base"*
  %213 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %212, i32 0, i32 0
  %214 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %213 to %"class.std::allocator"*
  %215 = load %"class.std::vector.0"*, %"class.std::vector.0"** %202, align 8
  %216 = call i64 @_ZNKSt6vectorIS_IxSaIxEESaIS1_EE4sizeEv(%"class.std::vector"* %206) #3
  %217 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %215, i64 %216
  %218 = load %"class.std::vector.0"*, %"class.std::vector.0"** %200, align 8
  %219 = call dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardIRKSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector.0"* dereferenceable(24) %218) #3
  br label %16

; <label>:220:                                    ; preds = %117, %102
  %221 = load %"class.std::vector.0"*, %"class.std::vector.0"** %20, align 8
  %222 = load %"class.std::vector.0"*, %"class.std::vector.0"** %21, align 8
  %223 = bitcast %"class.std::vector"* %24 to %"struct.std::_Vector_base"*
  %224 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %223) #3
  br label %117
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE9constructIS3_JRKS3_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"*, %"class.std::vector.0"*, %"class.std::vector.0"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.227
  %7 = load i32, i32* @y.228
  %8 = add i32 %6, -1315901569
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1315901569
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 465825219, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %64
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 465825219, label %20
    i32 631252016, label %28
    i32 1922732098, label %53
    i32 -338455712, label %54
  ]

; <label>:19:                                     ; preds = %17
  br label %64

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 631252016, i32 -338455712
  store i32 %27, i32* %16
  br label %64

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %30 = alloca %"class.std::vector.0"*, align 8
  %31 = alloca %"class.std::vector.0"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %29, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %30, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %29, align 8
  %33 = load %"class.std::vector.0"*, %"class.std::vector.0"** %30, align 8
  %34 = bitcast %"class.std::vector.0"* %33 to i8*
  %35 = bitcast i8* %34 to %"class.std::vector.0"*
  %36 = load %"class.std::vector.0"*, %"class.std::vector.0"** %31, align 8
  %37 = call dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardIRKSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector.0"* dereferenceable(24) %36) #3
  call void @_ZNSt6vectorIxSaIxEEC2ERKS1_(%"class.std::vector.0"* %35, %"class.std::vector.0"* dereferenceable(24) %37)
  %38 = load i32, i32* @x.227
  %39 = load i32, i32* @y.228
  %40 = add i32 %38, -252337716
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, -252337716
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 1922732098, i32 -338455712
  store i32 %52, i32* %16
  br label %64

; <label>:53:                                     ; preds = %17
  ret void

; <label>:54:                                     ; preds = %17
  %55 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %56 = alloca %"class.std::vector.0"*, align 8
  %57 = alloca %"class.std::vector.0"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %55, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %56, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %55, align 8
  %59 = load %"class.std::vector.0"*, %"class.std::vector.0"** %56, align 8
  %60 = bitcast %"class.std::vector.0"* %59 to i8*
  %61 = bitcast i8* %60 to %"class.std::vector.0"*
  %62 = load %"class.std::vector.0"*, %"class.std::vector.0"** %57, align 8
  %63 = call dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardIRKSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector.0"* dereferenceable(24) %62) #3
  call void @_ZNSt6vectorIxSaIxEEC2ERKS1_(%"class.std::vector.0"* %61, %"class.std::vector.0"* dereferenceable(24) %63)
  store i32 631252016, i32* %16
  br label %64

; <label>:64:                                     ; preds = %54, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardIRKSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector.0"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  ret %"class.std::vector.0"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IxSaIxEESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i1
  %7 = alloca i1
  %8 = alloca i1
  %9 = alloca %"class.std::vector"*
  %10 = alloca i64*
  %11 = alloca i64*
  %12 = alloca i8**
  %13 = alloca i64*
  %14 = alloca i1
  %15 = alloca i1
  %16 = load i32, i32* @x.231
  %17 = load i32, i32* @y.232
  %18 = add i32 %16, 569251645
  %19 = sub i32 %18, 1
  %20 = sub i32 %19, 569251645
  %21 = sub i32 %16, 1
  %22 = mul i32 %16, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  store i1 %24, i1* %15
  %25 = icmp slt i32 %17, 10
  store i1 %25, i1* %14
  %26 = alloca i32
  store i32 -803027847, i32* %26
  %27 = alloca i64
  br label %28

; <label>:28:                                     ; preds = %3, %422
  %29 = load i32, i32* %26
  switch i32 %29, label %30 [
    i32 -803027847, label %31
    i32 -539242070, label %39
    i32 -1514228142, label %85
    i32 -2069393455, label %88
    i32 -933510891, label %91
    i32 939876722, label %119
    i32 -125030936, label %165
    i32 -1083176627, label %168
    i32 1804456673, label %195
    i32 -2103496348, label %228
    i32 1932552560, label %231
    i32 1568597251, label %234
    i32 -354566680, label %249
    i32 1138377036, label %267
    i32 1234395853, label %269
    i32 -1441067455, label %297
    i32 -905698241, label %324
    i32 885825908, label %326
    i32 1423020126, label %372
    i32 1825031277, label %412
    i32 -116026694, label %418
    i32 1412247571, label %421
  ]

; <label>:30:                                     ; preds = %28
  br label %422

; <label>:31:                                     ; preds = %28
  %32 = load volatile i1, i1* %15
  %33 = load volatile i1, i1* %14
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  %38 = select i1 %36, i32 -539242070, i32 885825908
  store i32 %38, i32* %26
  br label %422

; <label>:39:                                     ; preds = %28
  %40 = alloca %"class.std::vector"*, align 8
  %41 = alloca i64, align 8
  store i64* %41, i64** %13
  %42 = alloca i8*, align 8
  store i8** %42, i8*** %12
  %43 = alloca i64, align 8
  store i64* %43, i64** %11
  %44 = alloca i64, align 8
  store i64* %44, i64** %10
  store %"class.std::vector"* %0, %"class.std::vector"** %40, align 8
  %45 = load volatile i64*, i64** %13
  store i64 %1, i64* %45, align 8
  %46 = load volatile i8**, i8*** %12
  store i8* %2, i8** %46, align 8
  %47 = load %"class.std::vector"*, %"class.std::vector"** %40, align 8
  store %"class.std::vector"* %47, %"class.std::vector"** %9
  %48 = load volatile %"class.std::vector"*, %"class.std::vector"** %9
  %49 = call i64 @_ZNKSt6vectorIS_IxSaIxEESaIS1_EE8max_sizeEv(%"class.std::vector"* %48) #3
  %50 = load volatile %"class.std::vector"*, %"class.std::vector"** %9
  %51 = call i64 @_ZNKSt6vectorIS_IxSaIxEESaIS1_EE4sizeEv(%"class.std::vector"* %50) #3
  %52 = sub i64 %49, 7584042436433083769
  %53 = sub i64 %52, %51
  %54 = add i64 %53, 7584042436433083769
  %55 = sub i64 %49, %51
  %56 = load volatile i64*, i64** %13
  %57 = load i64, i64* %56, align 8
  %58 = icmp ult i64 %54, %57
  store i1 %58, i1* %8
  %59 = load i32, i32* @x.231
  %60 = load i32, i32* @y.232
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 true, true
  %71 = and i1 %68, true
  %72 = and i1 %66, %70
  %73 = and i1 %69, true
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 true, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 -1514228142, i32 885825908
  store i32 %84, i32* %26
  br label %422

; <label>:85:                                     ; preds = %28
  %86 = load volatile i1, i1* %8
  %87 = select i1 %86, i32 -2069393455, i32 -933510891
  store i32 %87, i32* %26
  br label %422

; <label>:88:                                     ; preds = %28
  %89 = load volatile i8**, i8*** %12
  %90 = load i8*, i8** %89, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %90) #15
  unreachable

; <label>:91:                                     ; preds = %28
  %92 = load i32, i32* @x.231
  %93 = load i32, i32* @y.232
  %94 = sub i32 %92, -1361933401
  %95 = sub i32 %94, 1
  %96 = add i32 %95, -1361933401
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 false, true
  %105 = and i1 %102, false
  %106 = and i1 %100, %104
  %107 = and i1 %103, false
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 false, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  %118 = select i1 %116, i32 939876722, i32 1423020126
  store i32 %118, i32* %26
  br label %422

; <label>:119:                                    ; preds = %28
  %120 = load volatile %"class.std::vector"*, %"class.std::vector"** %9
  %121 = call i64 @_ZNKSt6vectorIS_IxSaIxEESaIS1_EE4sizeEv(%"class.std::vector"* %120) #3
  %122 = load volatile %"class.std::vector"*, %"class.std::vector"** %9
  %123 = call i64 @_ZNKSt6vectorIS_IxSaIxEESaIS1_EE4sizeEv(%"class.std::vector"* %122) #3
  %124 = load volatile i64*, i64** %10
  store i64 %123, i64* %124, align 8
  %125 = load volatile i64*, i64** %13
  %126 = load volatile i64*, i64** %10
  %127 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %126, i64* dereferenceable(8) %125)
  %128 = load i64, i64* %127, align 8
  %129 = add i64 %121, 971164162478773281
  %130 = add i64 %129, %128
  %131 = sub i64 %130, 971164162478773281
  %132 = add i64 %121, %128
  %133 = load volatile i64*, i64** %11
  store i64 %131, i64* %133, align 8
  %134 = load volatile i64*, i64** %11
  %135 = load i64, i64* %134, align 8
  %136 = load volatile %"class.std::vector"*, %"class.std::vector"** %9
  %137 = call i64 @_ZNKSt6vectorIS_IxSaIxEESaIS1_EE4sizeEv(%"class.std::vector"* %136) #3
  %138 = icmp ult i64 %135, %137
  store i1 %138, i1* %7
  %139 = load i32, i32* @x.231
  %140 = load i32, i32* @y.232
  %141 = sub i32 0, 1
  %142 = add i32 %139, %141
  %143 = sub i32 %139, 1
  %144 = mul i32 %139, %142
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %140, 10
  %148 = xor i1 %146, true
  %149 = xor i1 %147, true
  %150 = xor i1 false, true
  %151 = and i1 %148, false
  %152 = and i1 %146, %150
  %153 = and i1 %149, false
  %154 = and i1 %147, %150
  %155 = or i1 %151, %152
  %156 = or i1 %153, %154
  %157 = xor i1 %155, %156
  %158 = or i1 %148, %149
  %159 = xor i1 %158, true
  %160 = or i1 false, %150
  %161 = and i1 %159, %160
  %162 = or i1 %157, %161
  %163 = or i1 %146, %147
  %164 = select i1 %162, i32 -125030936, i32 1423020126
  store i32 %164, i32* %26
  br label %422

; <label>:165:                                    ; preds = %28
  %166 = load volatile i1, i1* %7
  %167 = select i1 %166, i32 1932552560, i32 -1083176627
  store i32 %167, i32* %26
  br label %422

; <label>:168:                                    ; preds = %28
  %169 = load i32, i32* @x.231
  %170 = load i32, i32* @y.232
  %171 = sub i32 0, 1
  %172 = add i32 %169, %171
  %173 = sub i32 %169, 1
  %174 = mul i32 %169, %172
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %170, 10
  %178 = xor i1 %176, true
  %179 = xor i1 %177, true
  %180 = xor i1 true, true
  %181 = and i1 %178, true
  %182 = and i1 %176, %180
  %183 = and i1 %179, true
  %184 = and i1 %177, %180
  %185 = or i1 %181, %182
  %186 = or i1 %183, %184
  %187 = xor i1 %185, %186
  %188 = or i1 %178, %179
  %189 = xor i1 %188, true
  %190 = or i1 true, %180
  %191 = and i1 %189, %190
  %192 = or i1 %187, %191
  %193 = or i1 %176, %177
  %194 = select i1 %192, i32 1804456673, i32 1825031277
  store i32 %194, i32* %26
  br label %422

; <label>:195:                                    ; preds = %28
  %196 = load volatile i64*, i64** %11
  %197 = load i64, i64* %196, align 8
  %198 = load volatile %"class.std::vector"*, %"class.std::vector"** %9
  %199 = call i64 @_ZNKSt6vectorIS_IxSaIxEESaIS1_EE8max_sizeEv(%"class.std::vector"* %198) #3
  %200 = icmp ugt i64 %197, %199
  store i1 %200, i1* %6
  %201 = load i32, i32* @x.231
  %202 = load i32, i32* @y.232
  %203 = add i32 %201, 1471264303
  %204 = sub i32 %203, 1
  %205 = sub i32 %204, 1471264303
  %206 = sub i32 %201, 1
  %207 = mul i32 %201, %205
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %202, 10
  %211 = xor i1 %209, true
  %212 = xor i1 %210, true
  %213 = xor i1 true, true
  %214 = and i1 %211, true
  %215 = and i1 %209, %213
  %216 = and i1 %212, true
  %217 = and i1 %210, %213
  %218 = or i1 %214, %215
  %219 = or i1 %216, %217
  %220 = xor i1 %218, %219
  %221 = or i1 %211, %212
  %222 = xor i1 %221, true
  %223 = or i1 true, %213
  %224 = and i1 %222, %223
  %225 = or i1 %220, %224
  %226 = or i1 %209, %210
  %227 = select i1 %225, i32 -2103496348, i32 1825031277
  store i32 %227, i32* %26
  br label %422

; <label>:228:                                    ; preds = %28
  %229 = load volatile i1, i1* %6
  %230 = select i1 %229, i32 1932552560, i32 1568597251
  store i32 %230, i32* %26
  br label %422

; <label>:231:                                    ; preds = %28
  %232 = load volatile %"class.std::vector"*, %"class.std::vector"** %9
  %233 = call i64 @_ZNKSt6vectorIS_IxSaIxEESaIS1_EE8max_sizeEv(%"class.std::vector"* %232) #3
  store i32 1234395853, i32* %26
  store i64 %233, i64* %27
  br label %422

; <label>:234:                                    ; preds = %28
  %235 = load i32, i32* @x.231
  %236 = load i32, i32* @y.232
  %237 = sub i32 0, 1
  %238 = add i32 %235, %237
  %239 = sub i32 %235, 1
  %240 = mul i32 %235, %238
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %236, 10
  %244 = and i1 %242, %243
  %245 = xor i1 %242, %243
  %246 = or i1 %244, %245
  %247 = or i1 %242, %243
  %248 = select i1 %246, i32 -354566680, i32 -116026694
  store i32 %248, i32* %26
  br label %422

; <label>:249:                                    ; preds = %28
  %250 = load volatile i64*, i64** %11
  %251 = load i64, i64* %250, align 8
  store i64 %251, i64* %5
  %252 = load i32, i32* @x.231
  %253 = load i32, i32* @y.232
  %254 = sub i32 %252, 305410913
  %255 = sub i32 %254, 1
  %256 = add i32 %255, 305410913
  %257 = sub i32 %252, 1
  %258 = mul i32 %252, %256
  %259 = urem i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %253, 10
  %262 = and i1 %260, %261
  %263 = xor i1 %260, %261
  %264 = or i1 %262, %263
  %265 = or i1 %260, %261
  %266 = select i1 %264, i32 1138377036, i32 -116026694
  store i32 %266, i32* %26
  br label %422

; <label>:267:                                    ; preds = %28
  store i32 1234395853, i32* %26
  %268 = load volatile i64, i64* %5
  store i64 %268, i64* %27
  br label %422

; <label>:269:                                    ; preds = %28
  %270 = load i64, i64* %27
  store i64 %270, i64* %4
  %271 = load i32, i32* @x.231
  %272 = load i32, i32* @y.232
  %273 = sub i32 0, 1
  %274 = add i32 %271, %273
  %275 = sub i32 %271, 1
  %276 = mul i32 %271, %274
  %277 = urem i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %272, 10
  %280 = xor i1 %278, true
  %281 = xor i1 %279, true
  %282 = xor i1 true, true
  %283 = and i1 %280, true
  %284 = and i1 %278, %282
  %285 = and i1 %281, true
  %286 = and i1 %279, %282
  %287 = or i1 %283, %284
  %288 = or i1 %285, %286
  %289 = xor i1 %287, %288
  %290 = or i1 %280, %281
  %291 = xor i1 %290, true
  %292 = or i1 true, %282
  %293 = and i1 %291, %292
  %294 = or i1 %289, %293
  %295 = or i1 %278, %279
  %296 = select i1 %294, i32 -1441067455, i32 1412247571
  store i32 %296, i32* %26
  br label %422

; <label>:297:                                    ; preds = %28
  %298 = load i32, i32* @x.231
  %299 = load i32, i32* @y.232
  %300 = sub i32 0, 1
  %301 = add i32 %298, %300
  %302 = sub i32 %298, 1
  %303 = mul i32 %298, %301
  %304 = urem i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %299, 10
  %307 = xor i1 %305, true
  %308 = xor i1 %306, true
  %309 = xor i1 true, true
  %310 = and i1 %307, true
  %311 = and i1 %305, %309
  %312 = and i1 %308, true
  %313 = and i1 %306, %309
  %314 = or i1 %310, %311
  %315 = or i1 %312, %313
  %316 = xor i1 %314, %315
  %317 = or i1 %307, %308
  %318 = xor i1 %317, true
  %319 = or i1 true, %309
  %320 = and i1 %318, %319
  %321 = or i1 %316, %320
  %322 = or i1 %305, %306
  %323 = select i1 %321, i32 -905698241, i32 1412247571
  store i32 %323, i32* %26
  br label %422

; <label>:324:                                    ; preds = %28
  %325 = load volatile i64, i64* %4
  ret i64 %325

; <label>:326:                                    ; preds = %28
  %327 = alloca %"class.std::vector"*, align 8
  %328 = alloca i64, align 8
  %329 = alloca i8*, align 8
  %330 = alloca i64, align 8
  %331 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %327, align 8
  store i64 %1, i64* %328, align 8
  store i8* %2, i8** %329, align 8
  %332 = load %"class.std::vector"*, %"class.std::vector"** %327, align 8
  %333 = call i64 @_ZNKSt6vectorIS_IxSaIxEESaIS1_EE8max_sizeEv(%"class.std::vector"* %332) #3
  %334 = call i64 @_ZNKSt6vectorIS_IxSaIxEESaIS1_EE4sizeEv(%"class.std::vector"* %332) #3
  %335 = shl i64 %333, %334
  %336 = shl i64 %333, %334
  %337 = sub i64 0, -393445207814073405
  %338 = sub i64 %337, %333
  %339 = add i64 %338, -393445207814073405
  %340 = sub i64 0, %333
  %341 = add i64 %339, 3366347387677250592
  %342 = add i64 %341, %334
  %343 = sub i64 %342, 3366347387677250592
  %344 = add i64 %339, %334
  %345 = sub i64 0, -6723485067438273057
  %346 = sub i64 %345, %333
  %347 = add i64 %346, -6723485067438273057
  %348 = sub i64 0, %333
  %349 = sub i64 %347, 2309600705877496908
  %350 = add i64 %349, %334
  %351 = add i64 %350, 2309600705877496908
  %352 = add i64 %347, %334
  %353 = shl i64 %333, %334
  %354 = sub i64 0, 3102113172643294022
  %355 = sub i64 %354, %333
  %356 = add i64 %355, 3102113172643294022
  %357 = sub i64 0, %333
  %358 = sub i64 %356, 8893221891422755524
  %359 = add i64 %358, %334
  %360 = add i64 %359, 8893221891422755524
  %361 = add i64 %356, %334
  %362 = sub i64 0, %334
  %363 = add i64 %333, %362
  %364 = sub i64 %333, %334
  %365 = mul i64 %363, %334
  %366 = add i64 %333, -9029234336534467565
  %367 = sub i64 %366, %334
  %368 = sub i64 %367, -9029234336534467565
  %369 = sub i64 %333, %334
  %370 = load i64, i64* %328, align 8
  %371 = icmp ult i64 %368, %370
  store i32 -539242070, i32* %26
  br label %422

; <label>:372:                                    ; preds = %28
  %373 = load volatile %"class.std::vector"*, %"class.std::vector"** %9
  %374 = call i64 @_ZNKSt6vectorIS_IxSaIxEESaIS1_EE4sizeEv(%"class.std::vector"* %373) #3
  %375 = load volatile %"class.std::vector"*, %"class.std::vector"** %9
  %376 = call i64 @_ZNKSt6vectorIS_IxSaIxEESaIS1_EE4sizeEv(%"class.std::vector"* %375) #3
  %377 = load volatile i64*, i64** %10
  store i64 %376, i64* %377, align 8
  %378 = load volatile i64*, i64** %13
  %379 = load volatile i64*, i64** %10
  %380 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %379, i64* dereferenceable(8) %378)
  %381 = load i64, i64* %380, align 8
  %382 = shl i64 %374, %381
  %383 = shl i64 %374, %381
  %384 = shl i64 %374, %381
  %385 = add i64 0, -5235316367861533057
  %386 = sub i64 %385, %374
  %387 = sub i64 %386, -5235316367861533057
  %388 = sub i64 0, %374
  %389 = sub i64 %387, -6839005080182907536
  %390 = add i64 %389, %381
  %391 = add i64 %390, -6839005080182907536
  %392 = add i64 %387, %381
  %393 = sub i64 0, -3181124196629485978
  %394 = sub i64 %393, %374
  %395 = add i64 %394, -3181124196629485978
  %396 = sub i64 0, %374
  %397 = sub i64 0, %395
  %398 = sub i64 0, %381
  %399 = add i64 %397, %398
  %400 = sub i64 0, %399
  %401 = add i64 %395, %381
  %402 = add i64 %374, 1171786958489666285
  %403 = add i64 %402, %381
  %404 = sub i64 %403, 1171786958489666285
  %405 = add i64 %374, %381
  %406 = load volatile i64*, i64** %11
  store i64 %404, i64* %406, align 8
  %407 = load volatile i64*, i64** %11
  %408 = load i64, i64* %407, align 8
  %409 = load volatile %"class.std::vector"*, %"class.std::vector"** %9
  %410 = call i64 @_ZNKSt6vectorIS_IxSaIxEESaIS1_EE4sizeEv(%"class.std::vector"* %409) #3
  %411 = icmp ult i64 %408, %410
  store i32 939876722, i32* %26
  br label %422

; <label>:412:                                    ; preds = %28
  %413 = load volatile i64*, i64** %11
  %414 = load i64, i64* %413, align 8
  %415 = load volatile %"class.std::vector"*, %"class.std::vector"** %9
  %416 = call i64 @_ZNKSt6vectorIS_IxSaIxEESaIS1_EE8max_sizeEv(%"class.std::vector"* %415) #3
  %417 = icmp ugt i64 %414, %416
  store i32 1804456673, i32* %26
  br label %422

; <label>:418:                                    ; preds = %28
  %419 = load volatile i64*, i64** %11
  %420 = load i64, i64* %419, align 8
  store i32 -354566680, i32* %26
  br label %422

; <label>:421:                                    ; preds = %28
  store i32 -1441067455, i32* %26
  br label %422

; <label>:422:                                    ; preds = %421, %418, %412, %372, %326, %297, %269, %267, %249, %234, %231, %228, %195, %168, %165, %119, %91, %85, %39, %31, %30
  br label %28
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*
  %4 = alloca %"class.std::vector.0"*
  %5 = alloca i64
  %6 = alloca %"struct.std::_Vector_base"*
  %7 = alloca %"struct.std::_Vector_base"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %7, align 8
  store i64 %1, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %7, align 8
  store %"struct.std::_Vector_base"* %9, %"struct.std::_Vector_base"** %6
  %10 = load i64, i64* %8, align 8
  store i64 %10, i64* %5
  %11 = alloca i32
  store i32 1445397032, i32* %11
  %12 = alloca %"class.std::vector.0"*
  br label %13

; <label>:13:                                     ; preds = %2, %137
  %14 = load i32, i32* %11
  switch i32 %14, label %15 [
    i32 1445397032, label %16
    i32 1205273973, label %20
    i32 -1724126241, label %36
    i32 382698084, label %69
    i32 1512812185, label %71
    i32 -1753608290, label %72
    i32 -472854131, label %100
    i32 681340754, label %128
    i32 1030826712, label %130
    i32 1596915719, label %136
  ]

; <label>:15:                                     ; preds = %13
  br label %137

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = icmp ne i64 %17, 0
  %19 = select i1 %18, i32 1205273973, i32 1512812185
  store i32 %19, i32* %11
  br label %137

; <label>:20:                                     ; preds = %13
  %21 = load i32, i32* @x.233
  %22 = load i32, i32* @y.234
  %23 = add i32 %21, 2081221305
  %24 = sub i32 %23, 1
  %25 = sub i32 %24, 2081221305
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  %35 = select i1 %33, i32 -1724126241, i32 1030826712
  store i32 %35, i32* %11
  br label %137

; <label>:36:                                     ; preds = %13
  %37 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6
  %38 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %37, i32 0, i32 0
  %39 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %38 to %"class.std::allocator"*
  %40 = load i64, i64* %8, align 8
  %41 = call %"class.std::vector.0"* @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE8allocateERS3_m(%"class.std::allocator"* dereferenceable(1) %39, i64 %40)
  store %"class.std::vector.0"* %41, %"class.std::vector.0"** %4
  %42 = load i32, i32* @x.233
  %43 = load i32, i32* @y.234
  %44 = sub i32 %42, -451621756
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -451621756
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 382698084, i32 1030826712
  store i32 %68, i32* %11
  br label %137

; <label>:69:                                     ; preds = %13
  store i32 -1753608290, i32* %11
  %70 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  store %"class.std::vector.0"* %70, %"class.std::vector.0"** %12
  br label %137

; <label>:71:                                     ; preds = %13
  store i32 -1753608290, i32* %11
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %12
  br label %137

; <label>:72:                                     ; preds = %13
  %73 = load %"class.std::vector.0"*, %"class.std::vector.0"** %12
  store %"class.std::vector.0"* %73, %"class.std::vector.0"** %3
  %74 = load i32, i32* @x.233
  %75 = load i32, i32* @y.234
  %76 = sub i32 0, 1
  %77 = add i32 %74, %76
  %78 = sub i32 %74, 1
  %79 = mul i32 %74, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %75, 10
  %83 = xor i1 %81, true
  %84 = xor i1 %82, true
  %85 = xor i1 true, true
  %86 = and i1 %83, true
  %87 = and i1 %81, %85
  %88 = and i1 %84, true
  %89 = and i1 %82, %85
  %90 = or i1 %86, %87
  %91 = or i1 %88, %89
  %92 = xor i1 %90, %91
  %93 = or i1 %83, %84
  %94 = xor i1 %93, true
  %95 = or i1 true, %85
  %96 = and i1 %94, %95
  %97 = or i1 %92, %96
  %98 = or i1 %81, %82
  %99 = select i1 %97, i32 -472854131, i32 1596915719
  store i32 %99, i32* %11
  br label %137

; <label>:100:                                    ; preds = %13
  %101 = load i32, i32* @x.233
  %102 = load i32, i32* @y.234
  %103 = add i32 %101, 1566598748
  %104 = sub i32 %103, 1
  %105 = sub i32 %104, 1566598748
  %106 = sub i32 %101, 1
  %107 = mul i32 %101, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %102, 10
  %111 = xor i1 %109, true
  %112 = xor i1 %110, true
  %113 = xor i1 false, true
  %114 = and i1 %111, false
  %115 = and i1 %109, %113
  %116 = and i1 %112, false
  %117 = and i1 %110, %113
  %118 = or i1 %114, %115
  %119 = or i1 %116, %117
  %120 = xor i1 %118, %119
  %121 = or i1 %111, %112
  %122 = xor i1 %121, true
  %123 = or i1 false, %113
  %124 = and i1 %122, %123
  %125 = or i1 %120, %124
  %126 = or i1 %109, %110
  %127 = select i1 %125, i32 681340754, i32 1596915719
  store i32 %127, i32* %11
  br label %137

; <label>:128:                                    ; preds = %13
  %129 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %3
  ret %"class.std::vector.0"* %129

; <label>:130:                                    ; preds = %13
  %131 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6
  %132 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %131, i32 0, i32 0
  %133 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %132 to %"class.std::allocator"*
  %134 = load i64, i64* %8, align 8
  %135 = call %"class.std::vector.0"* @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE8allocateERS3_m(%"class.std::allocator"* dereferenceable(1) %133, i64 %134)
  store i32 -1724126241, i32* %11
  br label %137

; <label>:136:                                    ; preds = %13
  store i32 -472854131, i32* %11
  br label %137

; <label>:137:                                    ; preds = %136, %130, %100, %72, %71, %69, %36, %20, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IxSaIxEESaIS1_EE4sizeEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %8 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  %12 = ptrtoint %"class.std::vector.0"* %7 to i64
  %13 = ptrtoint %"class.std::vector.0"* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 24
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIxSaIxEES3_SaIS2_EET0_T_S6_S5_RT1_(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.0"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.237
  %9 = load i32, i32* @y.238
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -1443432909, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %86
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1443432909, label %21
    i32 1062732845, label %29
    i32 2043786128, label %64
    i32 -863221824, label %66
  ]

; <label>:20:                                     ; preds = %18
  br label %86

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 1062732845, i32 -863221824
  store i32 %28, i32* %17
  br label %86

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::vector.0"*, align 8
  %31 = alloca %"class.std::vector.0"*, align 8
  %32 = alloca %"class.std::vector.0"*, align 8
  %33 = alloca %"class.std::allocator"*, align 8
  %34 = alloca %"class.std::move_iterator", align 8
  %35 = alloca %"class.std::move_iterator", align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %30, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %31, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %32, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %33, align 8
  %36 = load %"class.std::vector.0"*, %"class.std::vector.0"** %30, align 8
  %37 = call %"class.std::vector.0"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIxSaIxEESt13move_iteratorIS3_EET0_T_(%"class.std::vector.0"* %36)
  %38 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %34, i32 0, i32 0
  store %"class.std::vector.0"* %37, %"class.std::vector.0"** %38, align 8
  %39 = load %"class.std::vector.0"*, %"class.std::vector.0"** %31, align 8
  %40 = call %"class.std::vector.0"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIxSaIxEESt13move_iteratorIS3_EET0_T_(%"class.std::vector.0"* %39)
  %41 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %35, i32 0, i32 0
  store %"class.std::vector.0"* %40, %"class.std::vector.0"** %41, align 8
  %42 = load %"class.std::vector.0"*, %"class.std::vector.0"** %32, align 8
  %43 = load %"class.std::allocator"*, %"class.std::allocator"** %33, align 8
  %44 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %34, i32 0, i32 0
  %45 = load %"class.std::vector.0"*, %"class.std::vector.0"** %44, align 8
  %46 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %35, i32 0, i32 0
  %47 = load %"class.std::vector.0"*, %"class.std::vector.0"** %46, align 8
  %48 = call %"class.std::vector.0"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIxSaIxEEES4_S3_ET0_T_S7_S6_RSaIT1_E(%"class.std::vector.0"* %45, %"class.std::vector.0"* %47, %"class.std::vector.0"* %42, %"class.std::allocator"* dereferenceable(1) %43)
  store %"class.std::vector.0"* %48, %"class.std::vector.0"** %5
  %49 = load i32, i32* @x.237
  %50 = load i32, i32* @y.238
  %51 = sub i32 %49, -1895402093
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -1895402093
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 2043786128, i32 -863221824
  store i32 %63, i32* %17
  br label %86

; <label>:64:                                     ; preds = %18
  %65 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  ret %"class.std::vector.0"* %65

; <label>:66:                                     ; preds = %18
  %67 = alloca %"class.std::vector.0"*, align 8
  %68 = alloca %"class.std::vector.0"*, align 8
  %69 = alloca %"class.std::vector.0"*, align 8
  %70 = alloca %"class.std::allocator"*, align 8
  %71 = alloca %"class.std::move_iterator", align 8
  %72 = alloca %"class.std::move_iterator", align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %67, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %68, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %69, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %70, align 8
  %73 = load %"class.std::vector.0"*, %"class.std::vector.0"** %67, align 8
  %74 = call %"class.std::vector.0"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIxSaIxEESt13move_iteratorIS3_EET0_T_(%"class.std::vector.0"* %73)
  %75 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %71, i32 0, i32 0
  store %"class.std::vector.0"* %74, %"class.std::vector.0"** %75, align 8
  %76 = load %"class.std::vector.0"*, %"class.std::vector.0"** %68, align 8
  %77 = call %"class.std::vector.0"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIxSaIxEESt13move_iteratorIS3_EET0_T_(%"class.std::vector.0"* %76)
  %78 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %72, i32 0, i32 0
  store %"class.std::vector.0"* %77, %"class.std::vector.0"** %78, align 8
  %79 = load %"class.std::vector.0"*, %"class.std::vector.0"** %69, align 8
  %80 = load %"class.std::allocator"*, %"class.std::allocator"** %70, align 8
  %81 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %71, i32 0, i32 0
  %82 = load %"class.std::vector.0"*, %"class.std::vector.0"** %81, align 8
  %83 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %72, i32 0, i32 0
  %84 = load %"class.std::vector.0"*, %"class.std::vector.0"** %83, align 8
  %85 = call %"class.std::vector.0"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIxSaIxEEES4_S3_ET0_T_S7_S6_RSaIT1_E(%"class.std::vector.0"* %82, %"class.std::vector.0"* %84, %"class.std::vector.0"* %79, %"class.std::allocator"* dereferenceable(1) %80)
  store i32 1062732845, i32* %17
  br label %86

; <label>:86:                                     ; preds = %66, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE7destroyIS2_EEvRS3_PT_(%"class.std::allocator"* dereferenceable(1), %"class.std::vector.0"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE7destroyIS3_EEvPT_(%"class.__gnu_cxx::new_allocator"* %6, %"class.std::vector.0"* %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIxSaIxEES2_EvT_S4_RSaIT0_E(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  call void @_ZSt8_DestroyIPSt6vectorIxSaIxEEEvT_S4_(%"class.std::vector.0"* %7, %"class.std::vector.0"* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base"*, %"class.std::vector.0"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.0"*
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca %"struct.std::_Vector_base"*, align 8
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %6, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6, align 8
  store %"struct.std::_Vector_base"* %9, %"struct.std::_Vector_base"** %5
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  store %"class.std::vector.0"* %10, %"class.std::vector.0"** %4
  %11 = alloca i32
  store i32 -1459815821, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -1459815821, label %15
    i32 2135880416, label %19
    i32 -1681098637, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  %17 = icmp ne %"class.std::vector.0"* %16, null
  %18 = select i1 %17, i32 2135880416, i32 -1681098637
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %21 to %"class.std::allocator"*
  %23 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE10deallocateERS3_PS2_m(%"class.std::allocator"* dereferenceable(1) %22, %"class.std::vector.0"* %23, i64 %24)
  store i32 -1681098637, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IxSaIxEESaIS1_EE8max_sizeEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.247
  %6 = load i32, i32* @y.248
  %7 = sub i32 %5, -1778704552
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1778704552
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -173235089, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -173235089, label %19
    i32 1494556858, label %39
    i32 -307150528, label %60
    i32 649036867, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1494556858, i32 649036867
  store i32 %38, i32* %15
  br label %68

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %40, align 8
  %41 = load %"class.std::vector"*, %"class.std::vector"** %40, align 8
  %42 = bitcast %"class.std::vector"* %41 to %"struct.std::_Vector_base"*
  %43 = call dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %42) #3
  %44 = call i64 @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE8max_sizeERKS3_(%"class.std::allocator"* dereferenceable(1) %43) #3
  store i64 %44, i64* %2
  %45 = load i32, i32* @x.247
  %46 = load i32, i32* @y.248
  %47 = sub i32 %45, 687360032
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 687360032
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -307150528, i32 649036867
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile i64, i64* %2
  ret i64 %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %63, align 8
  %64 = load %"class.std::vector"*, %"class.std::vector"** %63, align 8
  %65 = bitcast %"class.std::vector"* %64 to %"struct.std::_Vector_base"*
  %66 = call dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %65) #3
  %67 = call i64 @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE8max_sizeERKS3_(%"class.std::allocator"* dereferenceable(1) %66) #3
  store i32 1494556858, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #10

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  store i64* %0, i64** %6, align 8
  store i64* %1, i64** %7, align 8
  %8 = load i64*, i64** %6, align 8
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %4
  %10 = load i64*, i64** %7, align 8
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 1062400135, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1062400135, label %16
    i32 -491782494, label %21
    i32 590536562, label %23
    i32 560638773, label %25
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %4
  %18 = load volatile i64, i64* %3
  %19 = icmp ult i64 %17, %18
  %20 = select i1 %19, i32 -491782494, i32 590536562
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  %22 = load i64*, i64** %7, align 8
  store i64* %22, i64** %5, align 8
  store i32 560638773, i32* %12
  br label %27

; <label>:23:                                     ; preds = %13
  %24 = load i64*, i64** %6, align 8
  store i64* %24, i64** %5, align 8
  store i32 560638773, i32* %12
  br label %27

; <label>:25:                                     ; preds = %13
  %26 = load i64*, i64** %5, align 8
  ret i64* %26

; <label>:27:                                     ; preds = %23, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE8max_sizeERKS3_(%"class.std::allocator"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.251
  %6 = load i32, i32* @y.252
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -658709403, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -658709403, label %18
    i32 1846880845, label %38
    i32 -76384637, label %58
    i32 916569352, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1846880845, i32 916569352
  store i32 %37, i32* %14
  br label %65

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %39, align 8
  %40 = load %"class.std::allocator"*, %"class.std::allocator"** %39, align 8
  %41 = bitcast %"class.std::allocator"* %40 to %"class.__gnu_cxx::new_allocator"*
  %42 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %41) #3
  store i64 %42, i64* %2
  %43 = load i32, i32* @x.251
  %44 = load i32, i32* @y.252
  %45 = add i32 %43, 1919576385
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 1919576385
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -76384637, i32 916569352
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile i64, i64* %2
  ret i64 %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %61, align 8
  %62 = load %"class.std::allocator"*, %"class.std::allocator"** %61, align 8
  %63 = bitcast %"class.std::allocator"* %62 to %"class.__gnu_cxx::new_allocator"*
  %64 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %63) #3
  store i32 1846880845, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.255
  %5 = load i32, i32* @y.256
  %6 = add i32 %4, -1259991862
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1259991862
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1930444367, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %71
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1930444367, label %18
    i32 209546621, label %38
    i32 -1317802437, label %67
    i32 -1415813439, label %68
  ]

; <label>:17:                                     ; preds = %15
  br label %71

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 209546621, i32 -1415813439
  store i32 %37, i32* %14
  br label %71

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %39, align 8
  %41 = load i32, i32* @x.255
  %42 = load i32, i32* @y.256
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -1317802437, i32 -1415813439
  store i32 %66, i32* %14
  br label %71

; <label>:67:                                     ; preds = %15
  ret i64 768614336404564650

; <label>:68:                                     ; preds = %15
  %69 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %69, align 8
  %70 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %69, align 8
  store i32 209546621, i32* %14
  br label %71

; <label>:71:                                     ; preds = %68, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE8allocateERS3_m(%"class.std::allocator"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.257
  %7 = load i32, i32* @y.258
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1628848222, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %82
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1628848222, label %19
    i32 1391927497, label %39
    i32 -1668802602, label %73
    i32 667750727, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %82

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1391927497, i32 667750727
  store i32 %38, i32* %15
  br label %82

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator"*, align 8
  %41 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"class.std::allocator"*, %"class.std::allocator"** %40, align 8
  %43 = bitcast %"class.std::allocator"* %42 to %"class.__gnu_cxx::new_allocator"*
  %44 = load i64, i64* %41, align 8
  %45 = call %"class.std::vector.0"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %43, i64 %44, i8* null)
  store %"class.std::vector.0"* %45, %"class.std::vector.0"** %3
  %46 = load i32, i32* @x.257
  %47 = load i32, i32* @y.258
  %48 = sub i32 %46, -1847223989
  %49 = sub i32 %48, 1
  %50 = add i32 %49, -1847223989
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -1668802602, i32 667750727
  store i32 %72, i32* %15
  br label %82

; <label>:73:                                     ; preds = %16
  %74 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %3
  ret %"class.std::vector.0"* %74

; <label>:75:                                     ; preds = %16
  %76 = alloca %"class.std::allocator"*, align 8
  %77 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %76, align 8
  store i64 %1, i64* %77, align 8
  %78 = load %"class.std::allocator"*, %"class.std::allocator"** %76, align 8
  %79 = bitcast %"class.std::allocator"* %78 to %"class.__gnu_cxx::new_allocator"*
  %80 = load i64, i64* %77, align 8
  %81 = call %"class.std::vector.0"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %79, i64 %80, i8* null)
  store i32 1391927497, i32* %15
  br label %82

; <label>:82:                                     ; preds = %75, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.0"*
  %5 = alloca i1
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.259
  %10 = load i32, i32* @y.260
  %11 = sub i32 %9, -1125334283
  %12 = sub i32 %11, 1
  %13 = add i32 %12, -1125334283
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 1382830066, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %138
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1382830066, label %23
    i32 1911165083, label %31
    i32 1675612040, label %68
    i32 -1167246355, label %71
    i32 -986387483, label %72
    i32 353313526, label %88
    i32 1217653174, label %109
    i32 222373735, label %111
    i32 -2075353375, label %119
  ]

; <label>:22:                                     ; preds = %20
  br label %138

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 1911165083, i32 222373735
  store i32 %30, i32* %19
  br label %138

; <label>:31:                                     ; preds = %20
  %32 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %33 = alloca i64, align 8
  store i64* %33, i64** %6
  %34 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %32, align 8
  %35 = load volatile i64*, i64** %6
  store i64 %1, i64* %35, align 8
  store i8* %2, i8** %34, align 8
  %36 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %32, align 8
  %37 = load volatile i64*, i64** %6
  %38 = load i64, i64* %37, align 8
  %39 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %36) #3
  %40 = icmp ugt i64 %38, %39
  store i1 %40, i1* %5
  %41 = load i32, i32* @x.259
  %42 = load i32, i32* @y.260
  %43 = add i32 %41, -831947523
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -831947523
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 1675612040, i32 222373735
  store i32 %67, i32* %19
  br label %138

; <label>:68:                                     ; preds = %20
  %69 = load volatile i1, i1* %5
  %70 = select i1 %69, i32 -1167246355, i32 -986387483
  store i32 %70, i32* %19
  br label %138

; <label>:71:                                     ; preds = %20
  call void @_ZSt17__throw_bad_allocv() #15
  unreachable

; <label>:72:                                     ; preds = %20
  %73 = load i32, i32* @x.259
  %74 = load i32, i32* @y.260
  %75 = add i32 %73, -398945410
  %76 = sub i32 %75, 1
  %77 = sub i32 %76, -398945410
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = and i1 %81, %82
  %84 = xor i1 %81, %82
  %85 = or i1 %83, %84
  %86 = or i1 %81, %82
  %87 = select i1 %85, i32 353313526, i32 -2075353375
  store i32 %87, i32* %19
  br label %138

; <label>:88:                                     ; preds = %20
  %89 = load volatile i64*, i64** %6
  %90 = load i64, i64* %89, align 8
  %91 = mul i64 %90, 24
  %92 = call i8* @_Znwm(i64 %91)
  %93 = bitcast i8* %92 to %"class.std::vector.0"*
  store %"class.std::vector.0"* %93, %"class.std::vector.0"** %4
  %94 = load i32, i32* @x.259
  %95 = load i32, i32* @y.260
  %96 = add i32 %94, -1684103672
  %97 = sub i32 %96, 1
  %98 = sub i32 %97, -1684103672
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = and i1 %102, %103
  %105 = xor i1 %102, %103
  %106 = or i1 %104, %105
  %107 = or i1 %102, %103
  %108 = select i1 %106, i32 1217653174, i32 -2075353375
  store i32 %108, i32* %19
  br label %138

; <label>:109:                                    ; preds = %20
  %110 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  ret %"class.std::vector.0"* %110

; <label>:111:                                    ; preds = %20
  %112 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %113 = alloca i64, align 8
  %114 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %112, align 8
  store i64 %1, i64* %113, align 8
  store i8* %2, i8** %114, align 8
  %115 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %112, align 8
  %116 = load i64, i64* %113, align 8
  %117 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %115) #3
  %118 = icmp ugt i64 %116, %117
  store i32 1911165083, i32* %19
  br label %138

; <label>:119:                                    ; preds = %20
  %120 = load volatile i64*, i64** %6
  %121 = load i64, i64* %120, align 8
  %122 = sub i64 0, -8409718458114203603
  %123 = sub i64 %122, %121
  %124 = add i64 %123, -8409718458114203603
  %125 = sub i64 0, %121
  %126 = sub i64 0, 24
  %127 = sub i64 %124, %126
  %128 = add i64 %124, 24
  %129 = shl i64 %121, 24
  %130 = sub i64 0, 24
  %131 = add i64 %121, %130
  %132 = sub i64 %121, 24
  %133 = mul i64 %131, 24
  %134 = shl i64 %121, 24
  %135 = mul i64 %121, 24
  %136 = call i8* @_Znwm(i64 %135)
  %137 = bitcast i8* %136 to %"class.std::vector.0"*
  store i32 353313526, i32* %19
  br label %138

; <label>:138:                                    ; preds = %119, %111, %88, %72, %68, %31, %23, %22
  br label %20
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #10

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #11

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIxSaIxEEES4_S3_ET0_T_S7_S6_RSaIT1_E(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::move_iterator", align 8
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %6, i32 0, i32 0
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %12, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %13 = bitcast %"class.std::move_iterator"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %19 = load %"class.std::vector.0"*, %"class.std::vector.0"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %21 = load %"class.std::vector.0"*, %"class.std::vector.0"** %20, align 8
  %22 = call %"class.std::vector.0"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIxSaIxEEES4_ET0_T_S7_S6_(%"class.std::vector.0"* %19, %"class.std::vector.0"* %21, %"class.std::vector.0"* %17)
  ret %"class.std::vector.0"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIxSaIxEESt13move_iteratorIS3_EET0_T_(%"class.std::vector.0"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %4 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  call void @_ZNSt13move_iteratorIPSt6vectorIxSaIxEEEC2ES3_(%"class.std::move_iterator"* %2, %"class.std::vector.0"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  %6 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  ret %"class.std::vector.0"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIxSaIxEEES4_ET0_T_S7_S6_(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::vector.0"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %11, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %18 = load %"class.std::vector.0"*, %"class.std::vector.0"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %"class.std::vector.0"*, %"class.std::vector.0"** %19, align 8
  %21 = call %"class.std::vector.0"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIxSaIxEEES6_EET0_T_S9_S8_(%"class.std::vector.0"* %18, %"class.std::vector.0"* %20, %"class.std::vector.0"* %16)
  ret %"class.std::vector.0"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIxSaIxEEES6_EET0_T_S9_S8_(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.267
  %5 = load i32, i32* @y.268
  %6 = add i32 %4, -87872593
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -87872593
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %301

; <label>:18:                                     ; preds = %3, %301
  %19 = alloca %"class.std::move_iterator", align 8
  %20 = alloca %"class.std::move_iterator", align 8
  %21 = alloca %"class.std::vector.0"*, align 8
  %22 = alloca %"class.std::vector.0"*, align 8
  %23 = alloca i8*
  %24 = alloca i32
  %25 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %19, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %25, align 8
  %26 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %20, i32 0, i32 0
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %26, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %21, align 8
  %27 = load %"class.std::vector.0"*, %"class.std::vector.0"** %21, align 8
  store %"class.std::vector.0"* %27, %"class.std::vector.0"** %22, align 8
  %28 = load i32, i32* @x.267
  %29 = load i32, i32* @y.268
  %30 = add i32 %28, -257163203
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, -257163203
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  br i1 %40, label %42, label %301

; <label>:42:                                     ; preds = %18
  br label %43

; <label>:43:                                     ; preds = %96, %42
  %44 = invoke zeroext i1 @_ZStneIPSt6vectorIxSaIxEEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator"* dereferenceable(8) %19, %"class.std::move_iterator"* dereferenceable(8) %20)
          to label %45 unwind label %99

; <label>:45:                                     ; preds = %43
  br i1 %44, label %46, label %204

; <label>:46:                                     ; preds = %45
  %47 = load i32, i32* @x.267
  %48 = load i32, i32* @y.268
  %49 = add i32 %47, -121376896
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -121376896
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  br i1 %59, label %61, label %311

; <label>:61:                                     ; preds = %46, %311
  %62 = load %"class.std::vector.0"*, %"class.std::vector.0"** %22, align 8
  %63 = call %"class.std::vector.0"* @_ZSt11__addressofISt6vectorIxSaIxEEEPT_RS3_(%"class.std::vector.0"* dereferenceable(24) %62) #3
  %64 = load i32, i32* @x.267
  %65 = load i32, i32* @y.268
  %66 = add i32 %64, 488909802
  %67 = sub i32 %66, 1
  %68 = sub i32 %67, 488909802
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 true, true
  %77 = and i1 %74, true
  %78 = and i1 %72, %76
  %79 = and i1 %75, true
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 true, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  br i1 %88, label %90, label %311

; <label>:90:                                     ; preds = %61
  %91 = invoke dereferenceable(24) %"class.std::vector.0"* @_ZNKSt13move_iteratorIPSt6vectorIxSaIxEEEdeEv(%"class.std::move_iterator"* %19)
          to label %92 unwind label %99

; <label>:92:                                     ; preds = %90
  invoke void @_ZSt10_ConstructISt6vectorIxSaIxEEJS2_EEvPT_DpOT0_(%"class.std::vector.0"* %63, %"class.std::vector.0"* dereferenceable(24) %91)
          to label %93 unwind label %99

; <label>:93:                                     ; preds = %92
  br label %94

; <label>:94:                                     ; preds = %93
  %95 = invoke dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPSt6vectorIxSaIxEEEppEv(%"class.std::move_iterator"* %19)
          to label %96 unwind label %99

; <label>:96:                                     ; preds = %94
  %97 = load %"class.std::vector.0"*, %"class.std::vector.0"** %22, align 8
  %98 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %97, i32 1
  store %"class.std::vector.0"* %98, %"class.std::vector.0"** %22, align 8
  br label %43

; <label>:99:                                     ; preds = %94, %92, %90, %43
  %100 = load i32, i32* @x.267
  %101 = load i32, i32* @y.268
  %102 = sub i32 0, 1
  %103 = add i32 %100, %102
  %104 = sub i32 %100, 1
  %105 = mul i32 %100, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %101, 10
  %109 = and i1 %107, %108
  %110 = xor i1 %107, %108
  %111 = or i1 %109, %110
  %112 = or i1 %107, %108
  br i1 %111, label %113, label %314

; <label>:113:                                    ; preds = %99, %314
  %114 = landingpad { i8*, i32 }
          catch i8* null
  %115 = extractvalue { i8*, i32 } %114, 0
  store i8* %115, i8** %23, align 8
  %116 = extractvalue { i8*, i32 } %114, 1
  store i32 %116, i32* %24, align 4
  %117 = load i32, i32* @x.267
  %118 = load i32, i32* @y.268
  %119 = sub i32 %117, 1426192629
  %120 = sub i32 %119, 1
  %121 = add i32 %120, 1426192629
  %122 = sub i32 %117, 1
  %123 = mul i32 %117, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %118, 10
  %127 = xor i1 %125, true
  %128 = xor i1 %126, true
  %129 = xor i1 true, true
  %130 = and i1 %127, true
  %131 = and i1 %125, %129
  %132 = and i1 %128, true
  %133 = and i1 %126, %129
  %134 = or i1 %130, %131
  %135 = or i1 %132, %133
  %136 = xor i1 %134, %135
  %137 = or i1 %127, %128
  %138 = xor i1 %137, true
  %139 = or i1 true, %129
  %140 = and i1 %138, %139
  %141 = or i1 %136, %140
  %142 = or i1 %125, %126
  br i1 %141, label %143, label %314

; <label>:143:                                    ; preds = %113
  br label %144

; <label>:144:                                    ; preds = %143
  %145 = load i32, i32* @x.267
  %146 = load i32, i32* @y.268
  %147 = add i32 %145, 1003982378
  %148 = sub i32 %147, 1
  %149 = sub i32 %148, 1003982378
  %150 = sub i32 %145, 1
  %151 = mul i32 %145, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %146, 10
  %155 = xor i1 %153, true
  %156 = xor i1 %154, true
  %157 = xor i1 false, true
  %158 = and i1 %155, false
  %159 = and i1 %153, %157
  %160 = and i1 %156, false
  %161 = and i1 %154, %157
  %162 = or i1 %158, %159
  %163 = or i1 %160, %161
  %164 = xor i1 %162, %163
  %165 = or i1 %155, %156
  %166 = xor i1 %165, true
  %167 = or i1 false, %157
  %168 = and i1 %166, %167
  %169 = or i1 %164, %168
  %170 = or i1 %153, %154
  br i1 %169, label %171, label %318

; <label>:171:                                    ; preds = %144, %318
  %172 = load i8*, i8** %23, align 8
  %173 = call i8* @__cxa_begin_catch(i8* %172) #3
  %174 = load %"class.std::vector.0"*, %"class.std::vector.0"** %21, align 8
  %175 = load %"class.std::vector.0"*, %"class.std::vector.0"** %22, align 8
  %176 = load i32, i32* @x.267
  %177 = load i32, i32* @y.268
  %178 = sub i32 %176, 10890941
  %179 = sub i32 %178, 1
  %180 = add i32 %179, 10890941
  %181 = sub i32 %176, 1
  %182 = mul i32 %176, %180
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %177, 10
  %186 = xor i1 %184, true
  %187 = xor i1 %185, true
  %188 = xor i1 false, true
  %189 = and i1 %186, false
  %190 = and i1 %184, %188
  %191 = and i1 %187, false
  %192 = and i1 %185, %188
  %193 = or i1 %189, %190
  %194 = or i1 %191, %192
  %195 = xor i1 %193, %194
  %196 = or i1 %186, %187
  %197 = xor i1 %196, true
  %198 = or i1 false, %188
  %199 = and i1 %197, %198
  %200 = or i1 %195, %199
  %201 = or i1 %184, %185
  br i1 %200, label %202, label %318

; <label>:202:                                    ; preds = %171
  invoke void @_ZSt8_DestroyIPSt6vectorIxSaIxEEEvT_S4_(%"class.std::vector.0"* %174, %"class.std::vector.0"* %175)
          to label %203 unwind label %206

; <label>:203:                                    ; preds = %202
  invoke void @__cxa_rethrow() #15
          to label %300 unwind label %206

; <label>:204:                                    ; preds = %45
  %205 = load %"class.std::vector.0"*, %"class.std::vector.0"** %22, align 8
  ret %"class.std::vector.0"* %205

; <label>:206:                                    ; preds = %203, %202
  %207 = load i32, i32* @x.267
  %208 = load i32, i32* @y.268
  %209 = sub i32 0, 1
  %210 = add i32 %207, %209
  %211 = sub i32 %207, 1
  %212 = mul i32 %207, %210
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %208, 10
  %216 = xor i1 %214, true
  %217 = xor i1 %215, true
  %218 = xor i1 true, true
  %219 = and i1 %216, true
  %220 = and i1 %214, %218
  %221 = and i1 %217, true
  %222 = and i1 %215, %218
  %223 = or i1 %219, %220
  %224 = or i1 %221, %222
  %225 = xor i1 %223, %224
  %226 = or i1 %216, %217
  %227 = xor i1 %226, true
  %228 = or i1 true, %218
  %229 = and i1 %227, %228
  %230 = or i1 %225, %229
  %231 = or i1 %214, %215
  br i1 %230, label %232, label %323

; <label>:232:                                    ; preds = %206, %323
  %233 = landingpad { i8*, i32 }
          cleanup
  %234 = extractvalue { i8*, i32 } %233, 0
  store i8* %234, i8** %23, align 8
  %235 = extractvalue { i8*, i32 } %233, 1
  store i32 %235, i32* %24, align 4
  %236 = load i32, i32* @x.267
  %237 = load i32, i32* @y.268
  %238 = sub i32 0, 1
  %239 = add i32 %236, %238
  %240 = sub i32 %236, 1
  %241 = mul i32 %236, %239
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %237, 10
  %245 = xor i1 %243, true
  %246 = xor i1 %244, true
  %247 = xor i1 false, true
  %248 = and i1 %245, false
  %249 = and i1 %243, %247
  %250 = and i1 %246, false
  %251 = and i1 %244, %247
  %252 = or i1 %248, %249
  %253 = or i1 %250, %251
  %254 = xor i1 %252, %253
  %255 = or i1 %245, %246
  %256 = xor i1 %255, true
  %257 = or i1 false, %247
  %258 = and i1 %256, %257
  %259 = or i1 %254, %258
  %260 = or i1 %243, %244
  br i1 %259, label %261, label %323

; <label>:261:                                    ; preds = %232
  invoke void @__cxa_end_catch()
          to label %262 unwind label %297

; <label>:262:                                    ; preds = %261
  br label %264
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:264:                                    ; preds = %262
  %265 = load i32, i32* @x.267
  %266 = load i32, i32* @y.268
  %267 = sub i32 0, 1
  %268 = add i32 %265, %267
  %269 = sub i32 %265, 1
  %270 = mul i32 %265, %268
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %266, 10
  %274 = and i1 %272, %273
  %275 = xor i1 %272, %273
  %276 = or i1 %274, %275
  %277 = or i1 %272, %273
  br i1 %276, label %278, label %327

; <label>:278:                                    ; preds = %264, %327
  %279 = load i8*, i8** %23, align 8
  %280 = load i32, i32* %24, align 4
  %281 = insertvalue { i8*, i32 } undef, i8* %279, 0
  %282 = insertvalue { i8*, i32 } %281, i32 %280, 1
  %283 = load i32, i32* @x.267
  %284 = load i32, i32* @y.268
  %285 = sub i32 0, 1
  %286 = add i32 %283, %285
  %287 = sub i32 %283, 1
  %288 = mul i32 %283, %286
  %289 = urem i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %284, 10
  %292 = and i1 %290, %291
  %293 = xor i1 %290, %291
  %294 = or i1 %292, %293
  %295 = or i1 %290, %291
  br i1 %294, label %296, label %327

; <label>:296:                                    ; preds = %278
  resume { i8*, i32 } %282

; <label>:297:                                    ; preds = %261
  %298 = landingpad { i8*, i32 }
          catch i8* null
  %299 = extractvalue { i8*, i32 } %298, 0
  call void @__clang_call_terminate(i8* %299) #12
  unreachable

; <label>:300:                                    ; preds = %203
  unreachable

; <label>:301:                                    ; preds = %18, %3
  %302 = alloca %"class.std::move_iterator", align 8
  %303 = alloca %"class.std::move_iterator", align 8
  %304 = alloca %"class.std::vector.0"*, align 8
  %305 = alloca %"class.std::vector.0"*, align 8
  %306 = alloca i8*
  %307 = alloca i32
  %308 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %302, i32 0, i32 0
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %308, align 8
  %309 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %303, i32 0, i32 0
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %309, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %304, align 8
  %310 = load %"class.std::vector.0"*, %"class.std::vector.0"** %304, align 8
  store %"class.std::vector.0"* %310, %"class.std::vector.0"** %305, align 8
  br label %18

; <label>:311:                                    ; preds = %61, %46
  %312 = load %"class.std::vector.0"*, %"class.std::vector.0"** %22, align 8
  %313 = call %"class.std::vector.0"* @_ZSt11__addressofISt6vectorIxSaIxEEEPT_RS3_(%"class.std::vector.0"* dereferenceable(24) %312) #3
  br label %61

; <label>:314:                                    ; preds = %113, %99
  %315 = landingpad { i8*, i32 }
          catch i8* null
  %316 = extractvalue { i8*, i32 } %315, 0
  store i8* %316, i8** %23, align 8
  %317 = extractvalue { i8*, i32 } %315, 1
  store i32 %317, i32* %24, align 4
  br label %113

; <label>:318:                                    ; preds = %171, %144
  %319 = load i8*, i8** %23, align 8
  %320 = call i8* @__cxa_begin_catch(i8* %319) #3
  %321 = load %"class.std::vector.0"*, %"class.std::vector.0"** %21, align 8
  %322 = load %"class.std::vector.0"*, %"class.std::vector.0"** %22, align 8
  br label %171

; <label>:323:                                    ; preds = %232, %206
  %324 = landingpad { i8*, i32 }
          cleanup
  %325 = extractvalue { i8*, i32 } %324, 0
  store i8* %325, i8** %23, align 8
  %326 = extractvalue { i8*, i32 } %324, 1
  store i32 %326, i32* %24, align 4
  br label %232

; <label>:327:                                    ; preds = %278, %264
  %328 = load i8*, i8** %23, align 8
  %329 = load i32, i32* %24, align 4
  %330 = insertvalue { i8*, i32 } undef, i8* %328, 0
  %331 = insertvalue { i8*, i32 } %330, i32 %329, 1
  br label %278
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPSt6vectorIxSaIxEEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPSt6vectorIxSaIxEEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator"* dereferenceable(8) %5, %"class.std::move_iterator"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = or i1 %9, %11
  %13 = xor i1 %7, true
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIxSaIxEEJS2_EEvPT_DpOT0_(%"class.std::vector.0"*, %"class.std::vector.0"* dereferenceable(24)) #4 comdat {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::vector.0"*
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardISt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::vector.0"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorIxSaIxEEC2EOS1_(%"class.std::vector.0"* %7, %"class.std::vector.0"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt11__addressofISt6vectorIxSaIxEEEPT_RS3_(%"class.std::vector.0"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector.0"*
  ret %"class.std::vector.0"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZNKSt13move_iteratorIPSt6vectorIxSaIxEEEdeEv(%"class.std::move_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  ret %"class.std::vector.0"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPSt6vectorIxSaIxEEEppEv(%"class.std::move_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %6 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %5, i32 1
  store %"class.std::vector.0"* %6, %"class.std::vector.0"** %4, align 8
  ret %"class.std::move_iterator"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIxSaIxEEEvT_S4_(%"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIxSaIxEEEEvT_S6_(%"class.std::vector.0"* %5, %"class.std::vector.0"* %6)
  ret void
}

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #12

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPSt6vectorIxSaIxEEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.281
  %7 = load i32, i32* @y.282
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 275069913, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %71
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 275069913, label %19
    i32 667752267, label %27
    i32 1237548792, label %61
    i32 -1419277678, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %71

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 667752267, i32 -1419277678
  store i32 %26, i32* %15
  br label %71

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator"*, align 8
  %29 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %28, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %29, align 8
  %30 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %28, align 8
  %31 = call %"class.std::vector.0"* @_ZNKSt13move_iteratorIPSt6vectorIxSaIxEEE4baseEv(%"class.std::move_iterator"* %30)
  %32 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %29, align 8
  %33 = call %"class.std::vector.0"* @_ZNKSt13move_iteratorIPSt6vectorIxSaIxEEE4baseEv(%"class.std::move_iterator"* %32)
  %34 = icmp eq %"class.std::vector.0"* %31, %33
  store i1 %34, i1* %3
  %35 = load i32, i32* @x.281
  %36 = load i32, i32* @y.282
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 1237548792, i32 -1419277678
  store i32 %60, i32* %15
  br label %71

; <label>:61:                                     ; preds = %16
  %62 = load volatile i1, i1* %3
  ret i1 %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::move_iterator"*, align 8
  %65 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %64, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %65, align 8
  %66 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %64, align 8
  %67 = call %"class.std::vector.0"* @_ZNKSt13move_iteratorIPSt6vectorIxSaIxEEE4baseEv(%"class.std::move_iterator"* %66)
  %68 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %65, align 8
  %69 = call %"class.std::vector.0"* @_ZNKSt13move_iteratorIPSt6vectorIxSaIxEEE4baseEv(%"class.std::move_iterator"* %68)
  %70 = icmp eq %"class.std::vector.0"* %67, %69
  store i32 667752267, i32* %15
  br label %71

; <label>:71:                                     ; preds = %63, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNKSt13move_iteratorIPSt6vectorIxSaIxEEE4baseEv(%"class.std::move_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  ret %"class.std::vector.0"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardISt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::vector.0"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  ret %"class.std::vector.0"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEEC2EOS1_(%"class.std::vector.0"*, %"class.std::vector.0"* dereferenceable(24)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %8 = call dereferenceable(24) %"class.std::vector.0"* @_ZSt4moveIRSt6vectorIxSaIxEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::vector.0"* dereferenceable(24) %7) #3
  %9 = bitcast %"class.std::vector.0"* %8 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIxSaIxEEC2EOS1_(%"struct.std::_Vector_base.1"* %6, %"struct.std::_Vector_base.1"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZSt4moveIRSt6vectorIxSaIxEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::vector.0"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  ret %"class.std::vector.0"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEEC2EOS1_(%"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"* dereferenceable(24)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.1"*, align 8
  %4 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %3, align 8
  store %"struct.std::_Vector_base.1"* %1, %"struct.std::_Vector_base.1"** %4, align 8
  %5 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %7) #3
  %9 = call dereferenceable(1) %"class.std::allocator.2"* @_ZSt4moveIRSaIxEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.2"* dereferenceable(1) %8) #3
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2EOS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %6, %"class.std::allocator.2"* dereferenceable(1) %9) #3
  %10 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %11 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %11, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %10, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* dereferenceable(24) %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZSt4moveIRSaIxEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.2"* dereferenceable(1)) #4 comdat {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  ret %"class.std::allocator.2"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %3 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %4 to %"class.std::allocator.2"*
  ret %"class.std::allocator.2"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2EOS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %4, align 8
  %5 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5 to %"class.std::allocator.2"*
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.2"* @_ZSt4moveIRSaIxEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.2"* dereferenceable(1) %7) #3
  call void @_ZNSaIxEC2ERKS_(%"class.std::allocator.2"* %6, %"class.std::allocator.2"* dereferenceable(1) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 0
  store i64* null, i64** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 1
  store i64* null, i64** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 2
  store i64* null, i64** %11, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* dereferenceable(24)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %1, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPxEvRT_S2_(i64** dereferenceable(8) %6, i64** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPxEvRT_S2_(i64** dereferenceable(8) %9, i64** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPxEvRT_S2_(i64** dereferenceable(8) %12, i64** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_(%"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %1, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPxEvRT_S2_(i64** dereferenceable(8), i64** dereferenceable(8)) #4 comdat {
  %3 = alloca i64**, align 8
  %4 = alloca i64**, align 8
  %5 = alloca i64*, align 8
  store i64** %0, i64*** %3, align 8
  store i64** %1, i64*** %4, align 8
  %6 = load i64**, i64*** %3, align 8
  %7 = call dereferenceable(8) i64** @_ZSt4moveIRPxEONSt16remove_referenceIT_E4typeEOS3_(i64** dereferenceable(8) %6) #3
  %8 = load i64*, i64** %7, align 8
  store i64* %8, i64** %5, align 8
  %9 = load i64**, i64*** %4, align 8
  %10 = call dereferenceable(8) i64** @_ZSt4moveIRPxEONSt16remove_referenceIT_E4typeEOS3_(i64** dereferenceable(8) %9) #3
  %11 = load i64*, i64** %10, align 8
  %12 = load i64**, i64*** %3, align 8
  store i64* %11, i64** %12, align 8
  %13 = call dereferenceable(8) i64** @_ZSt4moveIRPxEONSt16remove_referenceIT_E4typeEOS3_(i64** dereferenceable(8) %5) #3
  %14 = load i64*, i64** %13, align 8
  %15 = load i64**, i64*** %4, align 8
  store i64* %14, i64** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64** @_ZSt4moveIRPxEONSt16remove_referenceIT_E4typeEOS3_(i64** dereferenceable(8)) #4 comdat {
  %2 = alloca i64**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.305
  %6 = load i32, i32* @y.306
  %7 = sub i32 %5, -841889061
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -841889061
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -981557166, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -981557166, label %19
    i32 103316067, label %39
    i32 -1826420686, label %57
    i32 1570872654, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 103316067, i32 1570872654
  store i32 %38, i32* %15
  br label %62

; <label>:39:                                     ; preds = %16
  %40 = alloca i64**, align 8
  store i64** %0, i64*** %40, align 8
  %41 = load i64**, i64*** %40, align 8
  store i64** %41, i64*** %2
  %42 = load i32, i32* @x.305
  %43 = load i32, i32* @y.306
  %44 = add i32 %42, 361032807
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 361032807
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1826420686, i32 1570872654
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile i64**, i64*** %2
  ret i64** %58

; <label>:59:                                     ; preds = %16
  %60 = alloca i64**, align 8
  store i64** %0, i64*** %60, align 8
  %61 = load i64**, i64*** %60, align 8
  store i32 103316067, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIxSaIxEEEEvT_S6_(%"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %5, align 8
  %6 = alloca i32
  store i32 -572232108, i32* %6
  br label %7

; <label>:7:                                      ; preds = %2, %162
  %8 = load i32, i32* %6
  switch i32 %8, label %9 [
    i32 -572232108, label %10
    i32 189071346, label %25
    i32 -532841713, label %56
    i32 1757292756, label %59
    i32 -1519236057, label %74
    i32 -2042438521, label %104
    i32 -1268027112, label %105
    i32 355973608, label %132
    i32 1597312993, label %150
    i32 -1242905498, label %151
    i32 1433508747, label %152
    i32 -482696665, label %156
    i32 -5723453, label %159
  ]

; <label>:9:                                      ; preds = %7
  br label %162

; <label>:10:                                     ; preds = %7
  %11 = load i32, i32* @x.307
  %12 = load i32, i32* @y.308
  %13 = sub i32 0, 1
  %14 = add i32 %11, %13
  %15 = sub i32 %11, 1
  %16 = mul i32 %11, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %12, 10
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 189071346, i32 1433508747
  store i32 %24, i32* %6
  br label %162

; <label>:25:                                     ; preds = %7
  %26 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %27 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %28 = icmp ne %"class.std::vector.0"* %26, %27
  store i1 %28, i1* %3
  %29 = load i32, i32* @x.307
  %30 = load i32, i32* @y.308
  %31 = add i32 %29, -1113957474
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, -1113957474
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -532841713, i32 1433508747
  store i32 %55, i32* %6
  br label %162

; <label>:56:                                     ; preds = %7
  %57 = load volatile i1, i1* %3
  %58 = select i1 %57, i32 1757292756, i32 -1242905498
  store i32 %58, i32* %6
  br label %162

; <label>:59:                                     ; preds = %7
  %60 = load i32, i32* @x.307
  %61 = load i32, i32* @y.308
  %62 = sub i32 0, 1
  %63 = add i32 %60, %62
  %64 = sub i32 %60, 1
  %65 = mul i32 %60, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %61, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  %73 = select i1 %71, i32 -1519236057, i32 -482696665
  store i32 %73, i32* %6
  br label %162

; <label>:74:                                     ; preds = %7
  %75 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %76 = call %"class.std::vector.0"* @_ZSt11__addressofISt6vectorIxSaIxEEEPT_RS3_(%"class.std::vector.0"* dereferenceable(24) %75) #3
  call void @_ZSt8_DestroyISt6vectorIxSaIxEEEvPT_(%"class.std::vector.0"* %76)
  %77 = load i32, i32* @x.307
  %78 = load i32, i32* @y.308
  %79 = add i32 %77, -1938834826
  %80 = sub i32 %79, 1
  %81 = sub i32 %80, -1938834826
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = xor i1 %85, true
  %88 = xor i1 %86, true
  %89 = xor i1 false, true
  %90 = and i1 %87, false
  %91 = and i1 %85, %89
  %92 = and i1 %88, false
  %93 = and i1 %86, %89
  %94 = or i1 %90, %91
  %95 = or i1 %92, %93
  %96 = xor i1 %94, %95
  %97 = or i1 %87, %88
  %98 = xor i1 %97, true
  %99 = or i1 false, %89
  %100 = and i1 %98, %99
  %101 = or i1 %96, %100
  %102 = or i1 %85, %86
  %103 = select i1 %101, i32 -2042438521, i32 -482696665
  store i32 %103, i32* %6
  br label %162

; <label>:104:                                    ; preds = %7
  store i32 -1268027112, i32* %6
  br label %162

; <label>:105:                                    ; preds = %7
  %106 = load i32, i32* @x.307
  %107 = load i32, i32* @y.308
  %108 = sub i32 0, 1
  %109 = add i32 %106, %108
  %110 = sub i32 %106, 1
  %111 = mul i32 %106, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %107, 10
  %115 = xor i1 %113, true
  %116 = xor i1 %114, true
  %117 = xor i1 false, true
  %118 = and i1 %115, false
  %119 = and i1 %113, %117
  %120 = and i1 %116, false
  %121 = and i1 %114, %117
  %122 = or i1 %118, %119
  %123 = or i1 %120, %121
  %124 = xor i1 %122, %123
  %125 = or i1 %115, %116
  %126 = xor i1 %125, true
  %127 = or i1 false, %117
  %128 = and i1 %126, %127
  %129 = or i1 %124, %128
  %130 = or i1 %113, %114
  %131 = select i1 %129, i32 355973608, i32 -5723453
  store i32 %131, i32* %6
  br label %162

; <label>:132:                                    ; preds = %7
  %133 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %134 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %133, i32 1
  store %"class.std::vector.0"* %134, %"class.std::vector.0"** %4, align 8
  %135 = load i32, i32* @x.307
  %136 = load i32, i32* @y.308
  %137 = sub i32 %135, -1851980104
  %138 = sub i32 %137, 1
  %139 = add i32 %138, -1851980104
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = and i1 %143, %144
  %146 = xor i1 %143, %144
  %147 = or i1 %145, %146
  %148 = or i1 %143, %144
  %149 = select i1 %147, i32 1597312993, i32 -5723453
  store i32 %149, i32* %6
  br label %162

; <label>:150:                                    ; preds = %7
  store i32 -572232108, i32* %6
  br label %162

; <label>:151:                                    ; preds = %7
  ret void

; <label>:152:                                    ; preds = %7
  %153 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %154 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %155 = icmp ne %"class.std::vector.0"* %153, %154
  store i32 189071346, i32* %6
  br label %162

; <label>:156:                                    ; preds = %7
  %157 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %158 = call %"class.std::vector.0"* @_ZSt11__addressofISt6vectorIxSaIxEEEPT_RS3_(%"class.std::vector.0"* dereferenceable(24) %157) #3
  call void @_ZSt8_DestroyISt6vectorIxSaIxEEEvPT_(%"class.std::vector.0"* %158)
  store i32 -1519236057, i32* %6
  br label %162

; <label>:159:                                    ; preds = %7
  %160 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %161 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %160, i32 1
  store %"class.std::vector.0"* %161, %"class.std::vector.0"** %4, align 8
  store i32 355973608, i32* %6
  br label %162

; <label>:162:                                    ; preds = %159, %156, %152, %150, %132, %105, %104, %74, %59, %56, %25, %10, %9
  br label %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorIxSaIxEEEvPT_(%"class.std::vector.0"*) #4 comdat {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPSt6vectorIxSaIxEEEC2ES3_(%"class.std::move_iterator"*, %"class.std::vector.0"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.311
  %6 = load i32, i32* @y.312
  %7 = add i32 %5, 1246351631
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1246351631
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1244655841, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1244655841, label %19
    i32 1648373719, label %27
    i32 2027959807, label %60
    i32 -150158360, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1648373719, i32 -150158360
  store i32 %26, i32* %15
  br label %67

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator"*, align 8
  %29 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %28, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %29, align 8
  %30 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %28, align 8
  %31 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %30, i32 0, i32 0
  %32 = load %"class.std::vector.0"*, %"class.std::vector.0"** %29, align 8
  store %"class.std::vector.0"* %32, %"class.std::vector.0"** %31, align 8
  %33 = load i32, i32* @x.311
  %34 = load i32, i32* @y.312
  %35 = add i32 %33, 566853250
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 566853250
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 2027959807, i32 -150158360
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::move_iterator"*, align 8
  %63 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %62, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %63, align 8
  %64 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %62, align 8
  %65 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %64, i32 0, i32 0
  %66 = load %"class.std::vector.0"*, %"class.std::vector.0"** %63, align 8
  store %"class.std::vector.0"* %66, %"class.std::vector.0"** %65, align 8
  store i32 1648373719, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE7destroyIS3_EEvPT_(%"class.__gnu_cxx::new_allocator"*, %"class.std::vector.0"*) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %3, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %3, align 8
  %6 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.0"* %6) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorIxSaIxEEEE10deallocateERS3_PS2_m(%"class.std::allocator"* dereferenceable(1), %"class.std::vector.0"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.315
  %7 = load i32, i32* @y.316
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 845108815, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %58
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 845108815, label %19
    i32 -552904716, label %27
    i32 1149968093, label %49
    i32 2016401051, label %50
  ]

; <label>:18:                                     ; preds = %16
  br label %58

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -552904716, i32 2016401051
  store i32 %26, i32* %15
  br label %58

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator"*, align 8
  %29 = alloca %"class.std::vector.0"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %28, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %29, align 8
  store i64 %2, i64* %30, align 8
  %31 = load %"class.std::allocator"*, %"class.std::allocator"** %28, align 8
  %32 = bitcast %"class.std::allocator"* %31 to %"class.__gnu_cxx::new_allocator"*
  %33 = load %"class.std::vector.0"*, %"class.std::vector.0"** %29, align 8
  %34 = load i64, i64* %30, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator"* %32, %"class.std::vector.0"* %33, i64 %34)
  %35 = load i32, i32* @x.315
  %36 = load i32, i32* @y.316
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 1149968093, i32 2016401051
  store i32 %48, i32* %15
  br label %58

; <label>:49:                                     ; preds = %16
  ret void

; <label>:50:                                     ; preds = %16
  %51 = alloca %"class.std::allocator"*, align 8
  %52 = alloca %"class.std::vector.0"*, align 8
  %53 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %51, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %52, align 8
  store i64 %2, i64* %53, align 8
  %54 = load %"class.std::allocator"*, %"class.std::allocator"** %51, align 8
  %55 = bitcast %"class.std::allocator"* %54 to %"class.__gnu_cxx::new_allocator"*
  %56 = load %"class.std::vector.0"*, %"class.std::vector.0"** %52, align 8
  %57 = load i64, i64* %53, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator"* %55, %"class.std::vector.0"* %56, i64 %57)
  store i32 -552904716, i32* %15
  br label %58

; <label>:58:                                     ; preds = %50, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator"*, %"class.std::vector.0"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %9 = bitcast %"class.std::vector.0"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE9constructIxJRKxEEEvRS0_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1), i64*, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.2"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = bitcast %"class.std::allocator.2"* %7 to %"class.__gnu_cxx::new_allocator.3"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIxE9constructIxJRKxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.3"* %8, i64* %9, i64* dereferenceable(8) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE19_M_emplace_back_auxIJRKxEEEvDpOT_(%"class.std::vector.0"*, i64* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store i64* %1, i64** %4, align 8
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc(%"class.std::vector.0"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %13 = load i64, i64* %5, align 8
  %14 = call i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base.1"* %12, i64 %13)
  store i64* %14, i64** %6, align 8
  %15 = load i64*, i64** %6, align 8
  store i64* %15, i64** %7, align 8
  %16 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %17 to %"class.std::allocator.2"*
  %19 = load i64*, i64** %6, align 8
  %20 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.0"* %10) #3
  %21 = getelementptr inbounds i64, i64* %19, i64 %20
  %22 = load i64*, i64** %4, align 8
  %23 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %22) #3
  invoke void @_ZNSt16allocator_traitsISaIxEE9constructIxJRKxEEEvRS0_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1) %18, i64* %21, i64* dereferenceable(8) %23)
          to label %24 unwind label %40

; <label>:24:                                     ; preds = %2
  store i64* null, i64** %7, align 8
  %25 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %26, i32 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %30, i32 0, i32 1
  %32 = load i64*, i64** %31, align 8
  %33 = load i64*, i64** %6, align 8
  %34 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %35 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %34) #3
  %36 = invoke i64* @_ZSt34__uninitialized_move_if_noexcept_aIPxS0_SaIxEET0_T_S3_S2_RT1_(i64* %28, i64* %32, i64* %33, %"class.std::allocator.2"* dereferenceable(1) %35)
          to label %37 unwind label %40

; <label>:37:                                     ; preds = %24
  store i64* %36, i64** %7, align 8
  %38 = load i64*, i64** %7, align 8
  %39 = getelementptr inbounds i64, i64* %38, i32 1
  store i64* %39, i64** %7, align 8
  br label %185

; <label>:40:                                     ; preds = %24, %2
  %41 = landingpad { i8*, i32 }
          catch i8* null
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %8, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %9, align 4
  br label %44

; <label>:44:                                     ; preds = %40
  %45 = load i8*, i8** %8, align 8
  %46 = call i8* @__cxa_begin_catch(i8* %45) #3
  %47 = load i64*, i64** %7, align 8
  %48 = icmp ne i64* %47, null
  br i1 %48, label %61, label %49

; <label>:49:                                     ; preds = %44
  %50 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %51 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %50, i32 0, i32 0
  %52 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %51 to %"class.std::allocator.2"*
  %53 = load i64*, i64** %6, align 8
  %54 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.0"* %10) #3
  %55 = getelementptr inbounds i64, i64* %53, i64 %54
  invoke void @_ZNSt16allocator_traitsISaIxEE7destroyIxEEvRS0_PT_(%"class.std::allocator.2"* dereferenceable(1) %52, i64* %55)
          to label %56 unwind label %57

; <label>:56:                                     ; preds = %49
  br label %137

; <label>:57:                                     ; preds = %141, %137, %107, %49
  %58 = landingpad { i8*, i32 }
          cleanup
  %59 = extractvalue { i8*, i32 } %58, 0
  store i8* %59, i8** %8, align 8
  %60 = extractvalue { i8*, i32 } %58, 1
  store i32 %60, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %142 unwind label %287

; <label>:61:                                     ; preds = %44
  %62 = load i32, i32* @x.321
  %63 = load i32, i32* @y.322
  %64 = sub i32 %62, -1726282459
  %65 = sub i32 %64, 1
  %66 = add i32 %65, -1726282459
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = and i1 %70, %71
  %73 = xor i1 %70, %71
  %74 = or i1 %72, %73
  %75 = or i1 %70, %71
  br i1 %74, label %76, label %291

; <label>:76:                                     ; preds = %61, %291
  %77 = load i64*, i64** %6, align 8
  %78 = load i64*, i64** %7, align 8
  %79 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %80 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %79) #3
  %81 = load i32, i32* @x.321
  %82 = load i32, i32* @y.322
  %83 = add i32 %81, 1016273362
  %84 = sub i32 %83, 1
  %85 = sub i32 %84, 1016273362
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = xor i1 %89, true
  %92 = xor i1 %90, true
  %93 = xor i1 true, true
  %94 = and i1 %91, true
  %95 = and i1 %89, %93
  %96 = and i1 %92, true
  %97 = and i1 %90, %93
  %98 = or i1 %94, %95
  %99 = or i1 %96, %97
  %100 = xor i1 %98, %99
  %101 = or i1 %91, %92
  %102 = xor i1 %101, true
  %103 = or i1 true, %93
  %104 = and i1 %102, %103
  %105 = or i1 %100, %104
  %106 = or i1 %89, %90
  br i1 %105, label %107, label %291

; <label>:107:                                    ; preds = %76
  invoke void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %77, i64* %78, %"class.std::allocator.2"* dereferenceable(1) %80)
          to label %108 unwind label %57

; <label>:108:                                    ; preds = %107
  %109 = load i32, i32* @x.321
  %110 = load i32, i32* @y.322
  %111 = sub i32 0, 1
  %112 = add i32 %109, %111
  %113 = sub i32 %109, 1
  %114 = mul i32 %109, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %110, 10
  %118 = and i1 %116, %117
  %119 = xor i1 %116, %117
  %120 = or i1 %118, %119
  %121 = or i1 %116, %117
  br i1 %120, label %122, label %296

; <label>:122:                                    ; preds = %108, %296
  %123 = load i32, i32* @x.321
  %124 = load i32, i32* @y.322
  %125 = sub i32 0, 1
  %126 = add i32 %123, %125
  %127 = sub i32 %123, 1
  %128 = mul i32 %123, %126
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %124, 10
  %132 = and i1 %130, %131
  %133 = xor i1 %130, %131
  %134 = or i1 %132, %133
  %135 = or i1 %130, %131
  br i1 %134, label %136, label %296

; <label>:136:                                    ; preds = %122
  br label %137

; <label>:137:                                    ; preds = %136, %56
  %138 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %139 = load i64*, i64** %6, align 8
  %140 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.1"* %138, i64* %139, i64 %140)
          to label %141 unwind label %57

; <label>:141:                                    ; preds = %137
  invoke void @__cxa_rethrow() #15
          to label %290 unwind label %57

; <label>:142:                                    ; preds = %57
  %143 = load i32, i32* @x.321
  %144 = load i32, i32* @y.322
  %145 = sub i32 %143, -2039692675
  %146 = sub i32 %145, 1
  %147 = add i32 %146, -2039692675
  %148 = sub i32 %143, 1
  %149 = mul i32 %143, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %144, 10
  %153 = and i1 %151, %152
  %154 = xor i1 %151, %152
  %155 = or i1 %153, %154
  %156 = or i1 %151, %152
  br i1 %155, label %157, label %297

; <label>:157:                                    ; preds = %142, %297
  %158 = load i32, i32* @x.321
  %159 = load i32, i32* @y.322
  %160 = add i32 %158, 48465471
  %161 = sub i32 %160, 1
  %162 = sub i32 %161, 48465471
  %163 = sub i32 %158, 1
  %164 = mul i32 %158, %162
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %159, 10
  %168 = xor i1 %166, true
  %169 = xor i1 %167, true
  %170 = xor i1 false, true
  %171 = and i1 %168, false
  %172 = and i1 %166, %170
  %173 = and i1 %169, false
  %174 = and i1 %167, %170
  %175 = or i1 %171, %172
  %176 = or i1 %173, %174
  %177 = xor i1 %175, %176
  %178 = or i1 %168, %169
  %179 = xor i1 %178, true
  %180 = or i1 false, %170
  %181 = and i1 %179, %180
  %182 = or i1 %177, %181
  %183 = or i1 %166, %167
  br i1 %182, label %184, label %297

; <label>:184:                                    ; preds = %157
  br label %282

; <label>:185:                                    ; preds = %37
  %186 = load i32, i32* @x.321
  %187 = load i32, i32* @y.322
  %188 = sub i32 %186, -1553024568
  %189 = sub i32 %188, 1
  %190 = add i32 %189, -1553024568
  %191 = sub i32 %186, 1
  %192 = mul i32 %186, %190
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %187, 10
  %196 = xor i1 %194, true
  %197 = xor i1 %195, true
  %198 = xor i1 true, true
  %199 = and i1 %196, true
  %200 = and i1 %194, %198
  %201 = and i1 %197, true
  %202 = and i1 %195, %198
  %203 = or i1 %199, %200
  %204 = or i1 %201, %202
  %205 = xor i1 %203, %204
  %206 = or i1 %196, %197
  %207 = xor i1 %206, true
  %208 = or i1 true, %198
  %209 = and i1 %207, %208
  %210 = or i1 %205, %209
  %211 = or i1 %194, %195
  br i1 %210, label %212, label %298

; <label>:212:                                    ; preds = %185, %298
  %213 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %214 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %213, i32 0, i32 0
  %215 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %214, i32 0, i32 0
  %216 = load i64*, i64** %215, align 8
  %217 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %218 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %217, i32 0, i32 0
  %219 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %218, i32 0, i32 1
  %220 = load i64*, i64** %219, align 8
  %221 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %222 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %221) #3
  call void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %216, i64* %220, %"class.std::allocator.2"* dereferenceable(1) %222)
  %223 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %224 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %225 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %224, i32 0, i32 0
  %226 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %225, i32 0, i32 0
  %227 = load i64*, i64** %226, align 8
  %228 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %229 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %228, i32 0, i32 0
  %230 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %229, i32 0, i32 2
  %231 = load i64*, i64** %230, align 8
  %232 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %233 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %232, i32 0, i32 0
  %234 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %233, i32 0, i32 0
  %235 = load i64*, i64** %234, align 8
  %236 = ptrtoint i64* %231 to i64
  %237 = ptrtoint i64* %235 to i64
  %238 = sub i64 0, %237
  %239 = add i64 %236, %238
  %240 = sub i64 %236, %237
  %241 = sdiv exact i64 %239, 8
  call void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.1"* %223, i64* %227, i64 %241)
  %242 = load i64*, i64** %6, align 8
  %243 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %244 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %243, i32 0, i32 0
  %245 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %244, i32 0, i32 0
  store i64* %242, i64** %245, align 8
  %246 = load i64*, i64** %7, align 8
  %247 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %248 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %247, i32 0, i32 0
  %249 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %248, i32 0, i32 1
  store i64* %246, i64** %249, align 8
  %250 = load i64*, i64** %6, align 8
  %251 = load i64, i64* %5, align 8
  %252 = getelementptr inbounds i64, i64* %250, i64 %251
  %253 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %254 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %253, i32 0, i32 0
  %255 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %254, i32 0, i32 2
  store i64* %252, i64** %255, align 8
  %256 = load i32, i32* @x.321
  %257 = load i32, i32* @y.322
  %258 = sub i32 0, 1
  %259 = add i32 %256, %258
  %260 = sub i32 %256, 1
  %261 = mul i32 %256, %259
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %257, 10
  %265 = xor i1 %263, true
  %266 = xor i1 %264, true
  %267 = xor i1 true, true
  %268 = and i1 %265, true
  %269 = and i1 %263, %267
  %270 = and i1 %266, true
  %271 = and i1 %264, %267
  %272 = or i1 %268, %269
  %273 = or i1 %270, %271
  %274 = xor i1 %272, %273
  %275 = or i1 %265, %266
  %276 = xor i1 %275, true
  %277 = or i1 true, %267
  %278 = and i1 %276, %277
  %279 = or i1 %274, %278
  %280 = or i1 %263, %264
  br i1 %279, label %281, label %298

; <label>:281:                                    ; preds = %212
  ret void

; <label>:282:                                    ; preds = %184
  %283 = load i8*, i8** %8, align 8
  %284 = load i32, i32* %9, align 4
  %285 = insertvalue { i8*, i32 } undef, i8* %283, 0
  %286 = insertvalue { i8*, i32 } %285, i32 %284, 1
  resume { i8*, i32 } %286

; <label>:287:                                    ; preds = %57
  %288 = landingpad { i8*, i32 }
          catch i8* null
  %289 = extractvalue { i8*, i32 } %288, 0
  call void @__clang_call_terminate(i8* %289) #12
  unreachable

; <label>:290:                                    ; preds = %141
  unreachable

; <label>:291:                                    ; preds = %76, %61
  %292 = load i64*, i64** %6, align 8
  %293 = load i64*, i64** %7, align 8
  %294 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %295 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %294) #3
  br label %76

; <label>:296:                                    ; preds = %122, %108
  br label %122

; <label>:297:                                    ; preds = %157, %142
  br label %157

; <label>:298:                                    ; preds = %212, %185
  %299 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %300 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %299, i32 0, i32 0
  %301 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %300, i32 0, i32 0
  %302 = load i64*, i64** %301, align 8
  %303 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %304 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %303, i32 0, i32 0
  %305 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %304, i32 0, i32 1
  %306 = load i64*, i64** %305, align 8
  %307 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %308 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %307) #3
  call void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %302, i64* %306, %"class.std::allocator.2"* dereferenceable(1) %308)
  %309 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %310 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %311 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %310, i32 0, i32 0
  %312 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %311, i32 0, i32 0
  %313 = load i64*, i64** %312, align 8
  %314 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %315 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %314, i32 0, i32 0
  %316 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %315, i32 0, i32 2
  %317 = load i64*, i64** %316, align 8
  %318 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %319 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %318, i32 0, i32 0
  %320 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %319, i32 0, i32 0
  %321 = load i64*, i64** %320, align 8
  %322 = ptrtoint i64* %317 to i64
  %323 = ptrtoint i64* %321 to i64
  %324 = sub i64 0, %322
  %325 = add i64 0, %324
  %326 = sub i64 0, %322
  %327 = sub i64 %325, 2721462442355093124
  %328 = add i64 %327, %323
  %329 = add i64 %328, 2721462442355093124
  %330 = add i64 %325, %323
  %331 = sub i64 %322, -4889668893121123454
  %332 = sub i64 %331, %323
  %333 = add i64 %332, -4889668893121123454
  %334 = sub i64 %322, %323
  %335 = mul i64 %333, %323
  %336 = sub i64 %322, 3140163209337803425
  %337 = sub i64 %336, %323
  %338 = add i64 %337, 3140163209337803425
  %339 = sub i64 %322, %323
  %340 = mul i64 %338, %323
  %341 = shl i64 %322, %323
  %342 = shl i64 %322, %323
  %343 = sub i64 0, %323
  %344 = add i64 %322, %343
  %345 = sub i64 %322, %323
  %346 = mul i64 %344, %323
  %347 = sub i64 0, %323
  %348 = add i64 %322, %347
  %349 = sub i64 %322, %323
  %350 = sub i64 0, 8
  %351 = add i64 %348, %350
  %352 = sub i64 %348, 8
  %353 = mul i64 %351, 8
  %354 = sdiv exact i64 %348, 8
  call void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.1"* %309, i64* %313, i64 %354)
  %355 = load i64*, i64** %6, align 8
  %356 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %357 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %356, i32 0, i32 0
  %358 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %357, i32 0, i32 0
  store i64* %355, i64** %358, align 8
  %359 = load i64*, i64** %7, align 8
  %360 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %361 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %360, i32 0, i32 0
  %362 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %361, i32 0, i32 1
  store i64* %359, i64** %362, align 8
  %363 = load i64*, i64** %6, align 8
  %364 = load i64, i64* %5, align 8
  %365 = getelementptr inbounds i64, i64* %363, i64 %364
  %366 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %367 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %366, i32 0, i32 0
  %368 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %367, i32 0, i32 2
  store i64* %365, i64** %368, align 8
  br label %212
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxE9constructIxJRKxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.3"*, i64*, i64* dereferenceable(8)) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = bitcast i64* %8 to i8*
  %10 = bitcast i8* %9 to i64*
  %11 = load i64*, i64** %6, align 8
  %12 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %11) #3
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.325
  %6 = load i32, i32* @y.326
  %7 = sub i32 %5, -131946107
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -131946107
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -123468468, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %49
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -123468468, label %19
    i32 1922881930, label %27
    i32 -1530651271, label %44
    i32 -1636585910, label %46
  ]

; <label>:18:                                     ; preds = %16
  br label %49

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1922881930, i32 -1636585910
  store i32 %26, i32* %15
  br label %49

; <label>:27:                                     ; preds = %16
  %28 = alloca i64*, align 8
  store i64* %0, i64** %28, align 8
  %29 = load i64*, i64** %28, align 8
  store i64* %29, i64** %2
  %30 = load i32, i32* @x.325
  %31 = load i32, i32* @y.326
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -1530651271, i32 -1636585910
  store i32 %43, i32* %15
  br label %49

; <label>:44:                                     ; preds = %16
  %45 = load volatile i64*, i64** %2
  ret i64* %45

; <label>:46:                                     ; preds = %16
  %47 = alloca i64*, align 8
  store i64* %0, i64** %47, align 8
  %48 = load i64*, i64** %47, align 8
  store i32 1922881930, i32* %15
  br label %49

; <label>:49:                                     ; preds = %46, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc(%"class.std::vector.0"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca %"class.std::vector.0"*
  %7 = alloca i64*
  %8 = alloca i64*
  %9 = alloca i8**
  %10 = alloca i64*
  %11 = alloca i1
  %12 = alloca i1
  %13 = load i32, i32* @x.327
  %14 = load i32, i32* @y.328
  %15 = sub i32 0, 1
  %16 = add i32 %13, %15
  %17 = sub i32 %13, 1
  %18 = mul i32 %13, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  store i1 %20, i1* %12
  %21 = icmp slt i32 %14, 10
  store i1 %21, i1* %11
  %22 = alloca i32
  store i32 -354754780, i32* %22
  %23 = alloca i64
  br label %24

; <label>:24:                                     ; preds = %3, %191
  %25 = load i32, i32* %22
  switch i32 %25, label %26 [
    i32 -354754780, label %27
    i32 2091714808, label %35
    i32 -1465045217, label %70
    i32 -1106886228, label %73
    i32 -937269112, label %76
    i32 -1871450503, label %98
    i32 -438151845, label %113
    i32 -114938976, label %134
    i32 -586152682, label %137
    i32 233550310, label %140
    i32 -1631488419, label %143
    i32 1891982656, label %145
    i32 -633228505, label %185
  ]

; <label>:26:                                     ; preds = %24
  br label %191

; <label>:27:                                     ; preds = %24
  %28 = load volatile i1, i1* %12
  %29 = load volatile i1, i1* %11
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  %34 = select i1 %32, i32 2091714808, i32 1891982656
  store i32 %34, i32* %22
  br label %191

; <label>:35:                                     ; preds = %24
  %36 = alloca %"class.std::vector.0"*, align 8
  %37 = alloca i64, align 8
  store i64* %37, i64** %10
  %38 = alloca i8*, align 8
  store i8** %38, i8*** %9
  %39 = alloca i64, align 8
  store i64* %39, i64** %8
  %40 = alloca i64, align 8
  store i64* %40, i64** %7
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %36, align 8
  %41 = load volatile i64*, i64** %10
  store i64 %1, i64* %41, align 8
  %42 = load volatile i8**, i8*** %9
  store i8* %2, i8** %42, align 8
  %43 = load %"class.std::vector.0"*, %"class.std::vector.0"** %36, align 8
  store %"class.std::vector.0"* %43, %"class.std::vector.0"** %6
  %44 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %45 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector.0"* %44) #3
  %46 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %47 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.0"* %46) #3
  %48 = sub i64 %45, -3131052223693566048
  %49 = sub i64 %48, %47
  %50 = add i64 %49, -3131052223693566048
  %51 = sub i64 %45, %47
  %52 = load volatile i64*, i64** %10
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %50, %53
  store i1 %54, i1* %5
  %55 = load i32, i32* @x.327
  %56 = load i32, i32* @y.328
  %57 = add i32 %55, 1701257328
  %58 = sub i32 %57, 1
  %59 = sub i32 %58, 1701257328
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  %69 = select i1 %67, i32 -1465045217, i32 1891982656
  store i32 %69, i32* %22
  br label %191

; <label>:70:                                     ; preds = %24
  %71 = load volatile i1, i1* %5
  %72 = select i1 %71, i32 -1106886228, i32 -937269112
  store i32 %72, i32* %22
  br label %191

; <label>:73:                                     ; preds = %24
  %74 = load volatile i8**, i8*** %9
  %75 = load i8*, i8** %74, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %75) #15
  unreachable

; <label>:76:                                     ; preds = %24
  %77 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %78 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.0"* %77) #3
  %79 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %80 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.0"* %79) #3
  %81 = load volatile i64*, i64** %7
  store i64 %80, i64* %81, align 8
  %82 = load volatile i64*, i64** %10
  %83 = load volatile i64*, i64** %7
  %84 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %83, i64* dereferenceable(8) %82)
  %85 = load i64, i64* %84, align 8
  %86 = sub i64 0, %78
  %87 = sub i64 0, %85
  %88 = add i64 %86, %87
  %89 = sub i64 0, %88
  %90 = add i64 %78, %85
  %91 = load volatile i64*, i64** %8
  store i64 %89, i64* %91, align 8
  %92 = load volatile i64*, i64** %8
  %93 = load i64, i64* %92, align 8
  %94 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %95 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.0"* %94) #3
  %96 = icmp ult i64 %93, %95
  %97 = select i1 %96, i32 -586152682, i32 -1871450503
  store i32 %97, i32* %22
  br label %191

; <label>:98:                                     ; preds = %24
  %99 = load i32, i32* @x.327
  %100 = load i32, i32* @y.328
  %101 = sub i32 0, 1
  %102 = add i32 %99, %101
  %103 = sub i32 %99, 1
  %104 = mul i32 %99, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %100, 10
  %108 = and i1 %106, %107
  %109 = xor i1 %106, %107
  %110 = or i1 %108, %109
  %111 = or i1 %106, %107
  %112 = select i1 %110, i32 -438151845, i32 -633228505
  store i32 %112, i32* %22
  br label %191

; <label>:113:                                    ; preds = %24
  %114 = load volatile i64*, i64** %8
  %115 = load i64, i64* %114, align 8
  %116 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %117 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector.0"* %116) #3
  %118 = icmp ugt i64 %115, %117
  store i1 %118, i1* %4
  %119 = load i32, i32* @x.327
  %120 = load i32, i32* @y.328
  %121 = add i32 %119, 1056243102
  %122 = sub i32 %121, 1
  %123 = sub i32 %122, 1056243102
  %124 = sub i32 %119, 1
  %125 = mul i32 %119, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %120, 10
  %129 = and i1 %127, %128
  %130 = xor i1 %127, %128
  %131 = or i1 %129, %130
  %132 = or i1 %127, %128
  %133 = select i1 %131, i32 -114938976, i32 -633228505
  store i32 %133, i32* %22
  br label %191

; <label>:134:                                    ; preds = %24
  %135 = load volatile i1, i1* %4
  %136 = select i1 %135, i32 -586152682, i32 233550310
  store i32 %136, i32* %22
  br label %191

; <label>:137:                                    ; preds = %24
  %138 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %139 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector.0"* %138) #3
  store i32 -1631488419, i32* %22
  store i64 %139, i64* %23
  br label %191

; <label>:140:                                    ; preds = %24
  %141 = load volatile i64*, i64** %8
  %142 = load i64, i64* %141, align 8
  store i32 -1631488419, i32* %22
  store i64 %142, i64* %23
  br label %191

; <label>:143:                                    ; preds = %24
  %144 = load i64, i64* %23
  ret i64 %144

; <label>:145:                                    ; preds = %24
  %146 = alloca %"class.std::vector.0"*, align 8
  %147 = alloca i64, align 8
  %148 = alloca i8*, align 8
  %149 = alloca i64, align 8
  %150 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %146, align 8
  store i64 %1, i64* %147, align 8
  store i8* %2, i8** %148, align 8
  %151 = load %"class.std::vector.0"*, %"class.std::vector.0"** %146, align 8
  %152 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector.0"* %151) #3
  %153 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.0"* %151) #3
  %154 = add i64 %152, 7299339288934942320
  %155 = sub i64 %154, %153
  %156 = sub i64 %155, 7299339288934942320
  %157 = sub i64 %152, %153
  %158 = mul i64 %156, %153
  %159 = add i64 %152, -6817164699659722415
  %160 = sub i64 %159, %153
  %161 = sub i64 %160, -6817164699659722415
  %162 = sub i64 %152, %153
  %163 = mul i64 %161, %153
  %164 = shl i64 %152, %153
  %165 = add i64 0, -2025535134425203564
  %166 = sub i64 %165, %152
  %167 = sub i64 %166, -2025535134425203564
  %168 = sub i64 0, %152
  %169 = sub i64 %167, 1759660521274067491
  %170 = add i64 %169, %153
  %171 = add i64 %170, 1759660521274067491
  %172 = add i64 %167, %153
  %173 = shl i64 %152, %153
  %174 = sub i64 0, %153
  %175 = add i64 %152, %174
  %176 = sub i64 %152, %153
  %177 = mul i64 %175, %153
  %178 = shl i64 %152, %153
  %179 = sub i64 %152, 1716326542636027991
  %180 = sub i64 %179, %153
  %181 = add i64 %180, 1716326542636027991
  %182 = sub i64 %152, %153
  %183 = load i64, i64* %147, align 8
  %184 = icmp ult i64 %181, %183
  store i32 2091714808, i32* %22
  br label %191

; <label>:185:                                    ; preds = %24
  %186 = load volatile i64*, i64** %8
  %187 = load i64, i64* %186, align 8
  %188 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %189 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector.0"* %188) #3
  %190 = icmp ugt i64 %187, %189
  store i32 -438151845, i32* %22
  br label %191

; <label>:191:                                    ; preds = %185, %145, %140, %137, %134, %113, %98, %76, %70, %35, %27, %26
  br label %24
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base.1"*, i64) #0 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i64
  %5 = alloca %"struct.std::_Vector_base.1"*
  %6 = alloca %"struct.std::_Vector_base.1"*, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %6, align 8
  store %"struct.std::_Vector_base.1"* %8, %"struct.std::_Vector_base.1"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = alloca i32
  store i32 1178997893, i32* %10
  %11 = alloca i64*
  br label %12

; <label>:12:                                     ; preds = %2, %111
  %13 = load i32, i32* %10
  switch i32 %13, label %14 [
    i32 1178997893, label %15
    i32 1693844875, label %19
    i32 -659690125, label %35
    i32 1852174117, label %68
    i32 851820492, label %70
    i32 2053553383, label %86
    i32 -1389480772, label %101
    i32 1095553414, label %102
    i32 1846797920, label %104
    i32 1648012701, label %110
  ]

; <label>:14:                                     ; preds = %12
  br label %111

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp ne i64 %16, 0
  %18 = select i1 %17, i32 1693844875, i32 851820492
  store i32 %18, i32* %10
  br label %111

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.329
  %21 = load i32, i32* @y.330
  %22 = add i32 %20, -1980168846
  %23 = sub i32 %22, 1
  %24 = sub i32 %23, -1980168846
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  %34 = select i1 %32, i32 -659690125, i32 1846797920
  store i32 %34, i32* %10
  br label %111

; <label>:35:                                     ; preds = %12
  %36 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %37 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %37 to %"class.std::allocator.2"*
  %39 = load i64, i64* %7, align 8
  %40 = call i64* @_ZNSt16allocator_traitsISaIxEE8allocateERS0_m(%"class.std::allocator.2"* dereferenceable(1) %38, i64 %39)
  store i64* %40, i64** %3
  %41 = load i32, i32* @x.329
  %42 = load i32, i32* @y.330
  %43 = add i32 %41, 833382930
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 833382930
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 1852174117, i32 1846797920
  store i32 %67, i32* %10
  br label %111

; <label>:68:                                     ; preds = %12
  store i32 1095553414, i32* %10
  %69 = load volatile i64*, i64** %3
  store i64* %69, i64** %11
  br label %111

; <label>:70:                                     ; preds = %12
  %71 = load i32, i32* @x.329
  %72 = load i32, i32* @y.330
  %73 = sub i32 %71, -1529727422
  %74 = sub i32 %73, 1
  %75 = add i32 %74, -1529727422
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  %85 = select i1 %83, i32 2053553383, i32 1648012701
  store i32 %85, i32* %10
  br label %111

; <label>:86:                                     ; preds = %12
  %87 = load i32, i32* @x.329
  %88 = load i32, i32* @y.330
  %89 = sub i32 0, 1
  %90 = add i32 %87, %89
  %91 = sub i32 %87, 1
  %92 = mul i32 %87, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %88, 10
  %96 = and i1 %94, %95
  %97 = xor i1 %94, %95
  %98 = or i1 %96, %97
  %99 = or i1 %94, %95
  %100 = select i1 %98, i32 -1389480772, i32 1648012701
  store i32 %100, i32* %10
  br label %111

; <label>:101:                                    ; preds = %12
  store i32 1095553414, i32* %10
  store i64* null, i64** %11
  br label %111

; <label>:102:                                    ; preds = %12
  %103 = load i64*, i64** %11
  ret i64* %103

; <label>:104:                                    ; preds = %12
  %105 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %106 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %105, i32 0, i32 0
  %107 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %106 to %"class.std::allocator.2"*
  %108 = load i64, i64* %7, align 8
  %109 = call i64* @_ZNSt16allocator_traitsISaIxEE8allocateERS0_m(%"class.std::allocator.2"* dereferenceable(1) %107, i64 %108)
  store i32 -659690125, i32* %10
  br label %111

; <label>:110:                                    ; preds = %12
  store i32 2053553383, i32* %10
  br label %111

; <label>:111:                                    ; preds = %110, %104, %101, %86, %70, %68, %35, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt34__uninitialized_move_if_noexcept_aIPxS0_SaIxEET0_T_S3_S2_RT1_(i64*, i64*, i64*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  %9 = alloca %"class.std::move_iterator.45", align 8
  %10 = alloca %"class.std::move_iterator.45", align 8
  store i64* %0, i64** %5, align 8
  store i64* %1, i64** %6, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %11 = load i64*, i64** %5, align 8
  %12 = call i64* @_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_(i64* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %9, i32 0, i32 0
  store i64* %12, i64** %13, align 8
  %14 = load i64*, i64** %6, align 8
  %15 = call i64* @_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_(i64* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %10, i32 0, i32 0
  store i64* %15, i64** %16, align 8
  %17 = load i64*, i64** %7, align 8
  %18 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %9, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %10, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = call i64* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPxES1_xET0_T_S4_S3_RSaIT1_E(i64* %20, i64* %22, i64* %17, %"class.std::allocator.2"* dereferenceable(1) %18)
  ret i64* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE7destroyIxEEvRS0_PT_(%"class.std::allocator.2"* dereferenceable(1), i64*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.333
  %6 = load i32, i32* @y.334
  %7 = sub i32 %5, 124126781
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 124126781
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1999553576, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1999553576, label %19
    i32 -1580188440, label %39
    i32 -164188006, label %60
    i32 -868398360, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1580188440, i32 -868398360
  store i32 %38, i32* %15
  br label %67

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.2"*, align 8
  %41 = alloca i64*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %40, align 8
  store i64* %1, i64** %41, align 8
  %42 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %40, align 8
  %43 = bitcast %"class.std::allocator.2"* %42 to %"class.__gnu_cxx::new_allocator.3"*
  %44 = load i64*, i64** %41, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIxE7destroyIxEEvPT_(%"class.__gnu_cxx::new_allocator.3"* %43, i64* %44)
  %45 = load i32, i32* @x.333
  %46 = load i32, i32* @y.334
  %47 = sub i32 %45, -754004173
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -754004173
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -164188006, i32 -868398360
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::allocator.2"*, align 8
  %63 = alloca i64*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %62, align 8
  store i64* %1, i64** %63, align 8
  %64 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %62, align 8
  %65 = bitcast %"class.std::allocator.2"* %64 to %"class.__gnu_cxx::new_allocator.3"*
  %66 = load i64*, i64** %63, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIxE7destroyIxEEvPT_(%"class.__gnu_cxx::new_allocator.3"* %65, i64* %66)
  store i32 -1580188440, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64*, i64*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.335
  %7 = load i32, i32* @y.336
  %8 = add i32 %6, -501935037
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -501935037
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -2059262689, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %56
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -2059262689, label %20
    i32 -1219532676, label %28
    i32 272931237, label %49
    i32 38272684, label %50
  ]

; <label>:19:                                     ; preds = %17
  br label %56

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1219532676, i32 38272684
  store i32 %27, i32* %16
  br label %56

; <label>:28:                                     ; preds = %17
  %29 = alloca i64*, align 8
  %30 = alloca i64*, align 8
  %31 = alloca %"class.std::allocator.2"*, align 8
  store i64* %0, i64** %29, align 8
  store i64* %1, i64** %30, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %31, align 8
  %32 = load i64*, i64** %29, align 8
  %33 = load i64*, i64** %30, align 8
  call void @_ZSt8_DestroyIPxEvT_S1_(i64* %32, i64* %33)
  %34 = load i32, i32* @x.335
  %35 = load i32, i32* @y.336
  %36 = add i32 %34, -1164273491
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, -1164273491
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 272931237, i32 38272684
  store i32 %48, i32* %16
  br label %56

; <label>:49:                                     ; preds = %17
  ret void

; <label>:50:                                     ; preds = %17
  %51 = alloca i64*, align 8
  %52 = alloca i64*, align 8
  %53 = alloca %"class.std::allocator.2"*, align 8
  store i64* %0, i64** %51, align 8
  store i64* %1, i64** %52, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %53, align 8
  %54 = load i64*, i64** %51, align 8
  %55 = load i64*, i64** %52, align 8
  call void @_ZSt8_DestroyIPxEvT_S1_(i64* %54, i64* %55)
  store i32 -1219532676, i32* %16
  br label %56

; <label>:56:                                     ; preds = %50, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.1"*, i64*, i64) #0 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca %"struct.std::_Vector_base.1"*
  %6 = alloca %"struct.std::_Vector_base.1"*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %6, align 8
  store i64* %1, i64** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %6, align 8
  store %"struct.std::_Vector_base.1"* %9, %"struct.std::_Vector_base.1"** %5
  %10 = load i64*, i64** %7, align 8
  store i64* %10, i64** %4
  %11 = alloca i32
  store i32 -1018356749, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -1018356749, label %15
    i32 1049290921, label %19
    i32 -762860552, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64*, i64** %4
  %17 = icmp ne i64* %16, null
  %18 = select i1 %17, i32 1049290921, i32 -762860552
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %21 to %"class.std::allocator.2"*
  %23 = load i64*, i64** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm(%"class.std::allocator.2"* dereferenceable(1) %22, i64* %23, i64 %24)
  store i32 -762860552, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %5 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIxEE8max_sizeERKS0_(%"class.std::allocator.2"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIxEE8max_sizeERKS0_(%"class.std::allocator.2"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.341
  %6 = load i32, i32* @y.342
  %7 = sub i32 %5, -1039121350
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1039121350
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 934841838, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 934841838, label %19
    i32 1337305606, label %39
    i32 869275973, label %59
    i32 737772900, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1337305606, i32 737772900
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %40, align 8
  %41 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %40, align 8
  %42 = bitcast %"class.std::allocator.2"* %41 to %"class.__gnu_cxx::new_allocator.3"*
  %43 = call i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %42) #3
  store i64 %43, i64* %2
  %44 = load i32, i32* @x.341
  %45 = load i32, i32* @y.342
  %46 = sub i32 %44, -1859821315
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -1859821315
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 869275973, i32 737772900
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile i64, i64* %2
  ret i64 %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %62, align 8
  %63 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %62, align 8
  %64 = bitcast %"class.std::allocator.2"* %63 to %"class.__gnu_cxx::new_allocator.3"*
  %65 = call i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %64) #3
  store i32 1337305606, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %3 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %4 to %"class.std::allocator.2"*
  ret %"class.std::allocator.2"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt16allocator_traitsISaIxEE8allocateERS0_m(%"class.std::allocator.2"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load i64, i64* %4, align 8
  %8 = call i64* @_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"* %6, i64 %7, i8* null)
  ret i64* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -709378511, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -709378511, label %16
    i32 -663889783, label %21
    i32 -1938600212, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -663889783, i32 -1938600212
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #15
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 8
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to i64*
  ret i64* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPxES1_xET0_T_S4_S3_RSaIT1_E(i64*, i64*, i64*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.351
  %9 = load i32, i32* @y.352
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 78885443, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %96
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 78885443, label %21
    i32 -733572698, label %41
    i32 1953662249, label %75
    i32 -1390642971, label %77
  ]

; <label>:20:                                     ; preds = %18
  br label %96

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -733572698, i32 -1390642971
  store i32 %40, i32* %17
  br label %96

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::move_iterator.45", align 8
  %43 = alloca %"class.std::move_iterator.45", align 8
  %44 = alloca i64*, align 8
  %45 = alloca %"class.std::allocator.2"*, align 8
  %46 = alloca %"class.std::move_iterator.45", align 8
  %47 = alloca %"class.std::move_iterator.45", align 8
  %48 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %42, i32 0, i32 0
  store i64* %0, i64** %48, align 8
  %49 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %43, i32 0, i32 0
  store i64* %1, i64** %49, align 8
  store i64* %2, i64** %44, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %45, align 8
  %50 = bitcast %"class.std::move_iterator.45"* %46 to i8*
  %51 = bitcast %"class.std::move_iterator.45"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = bitcast %"class.std::move_iterator.45"* %47 to i8*
  %53 = bitcast %"class.std::move_iterator.45"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = load i64*, i64** %44, align 8
  %55 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %46, i32 0, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %47, i32 0, i32 0
  %58 = load i64*, i64** %57, align 8
  %59 = call i64* @_ZSt18uninitialized_copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64* %56, i64* %58, i64* %54)
  store i64* %59, i64** %5
  %60 = load i32, i32* @x.351
  %61 = load i32, i32* @y.352
  %62 = sub i32 %60, -1022536635
  %63 = sub i32 %62, 1
  %64 = add i32 %63, -1022536635
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  %74 = select i1 %72, i32 1953662249, i32 -1390642971
  store i32 %74, i32* %17
  br label %96

; <label>:75:                                     ; preds = %18
  %76 = load volatile i64*, i64** %5
  ret i64* %76

; <label>:77:                                     ; preds = %18
  %78 = alloca %"class.std::move_iterator.45", align 8
  %79 = alloca %"class.std::move_iterator.45", align 8
  %80 = alloca i64*, align 8
  %81 = alloca %"class.std::allocator.2"*, align 8
  %82 = alloca %"class.std::move_iterator.45", align 8
  %83 = alloca %"class.std::move_iterator.45", align 8
  %84 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %78, i32 0, i32 0
  store i64* %0, i64** %84, align 8
  %85 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %79, i32 0, i32 0
  store i64* %1, i64** %85, align 8
  store i64* %2, i64** %80, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %81, align 8
  %86 = bitcast %"class.std::move_iterator.45"* %82 to i8*
  %87 = bitcast %"class.std::move_iterator.45"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 8, i32 8, i1 false)
  %88 = bitcast %"class.std::move_iterator.45"* %83 to i8*
  %89 = bitcast %"class.std::move_iterator.45"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %89, i64 8, i32 8, i1 false)
  %90 = load i64*, i64** %80, align 8
  %91 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %82, i32 0, i32 0
  %92 = load i64*, i64** %91, align 8
  %93 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %83, i32 0, i32 0
  %94 = load i64*, i64** %93, align 8
  %95 = call i64* @_ZSt18uninitialized_copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64* %92, i64* %94, i64* %90)
  store i32 -733572698, i32* %17
  br label %96

; <label>:96:                                     ; preds = %77, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_(i64*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.45", align 8
  %3 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  %4 = load i64*, i64** %3, align 8
  call void @_ZNSt13move_iteratorIPxEC2ES0_(%"class.std::move_iterator.45"* %2, i64* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %2, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  ret i64* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt18uninitialized_copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.45", align 8
  %5 = alloca %"class.std::move_iterator.45", align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.45", align 8
  %9 = alloca %"class.std::move_iterator.45", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %4, i32 0, i32 0
  store i64* %0, i64** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %5, i32 0, i32 0
  store i64* %1, i64** %11, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.45"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.45"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.45"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.45"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load i64*, i64** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %8, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %9, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = call i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPxES3_EET0_T_S6_S5_(i64* %18, i64* %20, i64* %16)
  ret i64* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPxES3_EET0_T_S6_S5_(i64*, i64*, i64*) #0 comdat align 2 {
  %4 = alloca %"class.std::move_iterator.45", align 8
  %5 = alloca %"class.std::move_iterator.45", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.std::move_iterator.45", align 8
  %8 = alloca %"class.std::move_iterator.45", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %4, i32 0, i32 0
  store i64* %0, i64** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %5, i32 0, i32 0
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %6, align 8
  %11 = bitcast %"class.std::move_iterator.45"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.45"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.std::move_iterator.45"* %8 to i8*
  %14 = bitcast %"class.std::move_iterator.45"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load i64*, i64** %6, align 8
  %16 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %7, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %8, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = call i64* @_ZSt4copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64* %17, i64* %19, i64* %15)
  ret i64* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt4copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.45", align 8
  %5 = alloca %"class.std::move_iterator.45", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.std::move_iterator.45", align 8
  %8 = alloca %"class.std::move_iterator.45", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %4, i32 0, i32 0
  store i64* %0, i64** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %5, i32 0, i32 0
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %6, align 8
  %11 = bitcast %"class.std::move_iterator.45"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.45"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %7, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = call i64* @_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_(i64* %14)
  %16 = bitcast %"class.std::move_iterator.45"* %8 to i8*
  %17 = bitcast %"class.std::move_iterator.45"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %8, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = call i64* @_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_(i64* %19)
  %21 = load i64*, i64** %6, align 8
  %22 = call i64* @_ZSt14__copy_move_a2ILb1EPxS0_ET1_T0_S2_S1_(i64* %15, i64* %20, i64* %21)
  ret i64* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt14__copy_move_a2ILb1EPxS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %7)
  %9 = load i64*, i64** %5, align 8
  %10 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %9)
  %11 = load i64*, i64** %6, align 8
  %12 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %11)
  %13 = call i64* @_ZSt13__copy_move_aILb1EPxS0_ET1_T0_S2_S1_(i64* %8, i64* %10, i64* %12)
  ret i64* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_(i64*) #0 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.363
  %6 = load i32, i32* @y.364
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1212961382, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %73
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1212961382, label %18
    i32 773538164, label %38
    i32 321717619, label %62
    i32 -193795002, label %64
  ]

; <label>:17:                                     ; preds = %15
  br label %73

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 773538164, i32 -193795002
  store i32 %37, i32* %14
  br label %73

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::move_iterator.45", align 8
  %40 = alloca %"class.std::move_iterator.45", align 8
  %41 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %39, i32 0, i32 0
  store i64* %0, i64** %41, align 8
  %42 = bitcast %"class.std::move_iterator.45"* %40 to i8*
  %43 = bitcast %"class.std::move_iterator.45"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 8, i32 8, i1 false)
  %44 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %40, i32 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = call i64* @_ZNSt10_Iter_baseISt13move_iteratorIPxELb1EE7_S_baseES2_(i64* %45)
  store i64* %46, i64** %2
  %47 = load i32, i32* @x.363
  %48 = load i32, i32* @y.364
  %49 = sub i32 %47, 466649474
  %50 = sub i32 %49, 1
  %51 = add i32 %50, 466649474
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 321717619, i32 -193795002
  store i32 %61, i32* %14
  br label %73

; <label>:62:                                     ; preds = %15
  %63 = load volatile i64*, i64** %2
  ret i64* %63

; <label>:64:                                     ; preds = %15
  %65 = alloca %"class.std::move_iterator.45", align 8
  %66 = alloca %"class.std::move_iterator.45", align 8
  %67 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %65, i32 0, i32 0
  store i64* %0, i64** %67, align 8
  %68 = bitcast %"class.std::move_iterator.45"* %66 to i8*
  %69 = bitcast %"class.std::move_iterator.45"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %68, i8* %69, i64 8, i32 8, i1 false)
  %70 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %66, i32 0, i32 0
  %71 = load i64*, i64** %70, align 8
  %72 = call i64* @_ZNSt10_Iter_baseISt13move_iteratorIPxELb1EE7_S_baseES2_(i64* %71)
  store i32 773538164, i32* %14
  br label %73

; <label>:73:                                     ; preds = %64, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt13__copy_move_aILb1EPxS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i64*, i64** %4, align 8
  %9 = load i64*, i64** %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64* %8, i64* %9, i64* %10)
  ret i64* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64*) #0 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  %4 = call i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64* %3)
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64*, i64*, i64*) #4 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64, align 8
  store i64* %0, i64** %5, align 8
  store i64* %1, i64** %6, align 8
  store i64* %2, i64** %7, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = load i64*, i64** %5, align 8
  %11 = ptrtoint i64* %9 to i64
  %12 = ptrtoint i64* %10 to i64
  %13 = add i64 %11, -3185794036196489515
  %14 = sub i64 %13, %12
  %15 = sub i64 %14, -3185794036196489515
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 8
  store i64 %17, i64* %8, align 8
  %18 = load i64, i64* %8, align 8
  store i64 %18, i64* %4
  %19 = alloca i32
  store i32 1438633520, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %38
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1438633520, label %23
    i32 1598009945, label %27
    i32 2121345513, label %34
  ]

; <label>:22:                                     ; preds = %20
  br label %38

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %4
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 1598009945, i32 2121345513
  store i32 %26, i32* %19
  br label %38

; <label>:27:                                     ; preds = %20
  %28 = load i64*, i64** %7, align 8
  %29 = bitcast i64* %28 to i8*
  %30 = load i64*, i64** %5, align 8
  %31 = bitcast i64* %30 to i8*
  %32 = load i64, i64* %8, align 8
  %33 = mul i64 8, %32
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %29, i8* %31, i64 %33, i32 8, i1 false)
  store i32 2121345513, i32* %19
  br label %38

; <label>:34:                                     ; preds = %20
  %35 = load i64*, i64** %7, align 8
  %36 = load i64, i64* %8, align 8
  %37 = getelementptr inbounds i64, i64* %35, i64 %36
  ret i64* %37

; <label>:38:                                     ; preds = %27, %23, %22
  br label %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #5

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64*) #4 comdat align 2 {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseISt13move_iteratorIPxELb1EE7_S_baseES2_(i64*) #0 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.45", align 8
  %3 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %2, i32 0, i32 0
  store i64* %0, i64** %3, align 8
  %4 = call i64* @_ZNKSt13move_iteratorIPxE4baseEv(%"class.std::move_iterator.45"* %2)
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt13move_iteratorIPxE4baseEv(%"class.std::move_iterator.45"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.45"*, align 8
  store %"class.std::move_iterator.45"* %0, %"class.std::move_iterator.45"** %2, align 8
  %3 = load %"class.std::move_iterator.45"*, %"class.std::move_iterator.45"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPxEC2ES0_(%"class.std::move_iterator.45"*, i64*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.45"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::move_iterator.45"* %0, %"class.std::move_iterator.45"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.std::move_iterator.45"*, %"class.std::move_iterator.45"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %5, i32 0, i32 0
  %7 = load i64*, i64** %4, align 8
  store i64* %7, i64** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxE7destroyIxEEvPT_(%"class.__gnu_cxx::new_allocator.3"*, i64*) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %4 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPxEvT_S1_(i64*, i64*) #0 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load i64*, i64** %3, align 8
  %6 = load i64*, i64** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_(i64* %5, i64* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_(i64*, i64*) #4 comdat align 2 {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm(%"class.std::allocator.2"* dereferenceable(1), i64*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.385
  %7 = load i32, i32* @y.386
  %8 = sub i32 %6, -705994773
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -705994773
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1194626878, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %72
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1194626878, label %20
    i32 -743709710, label %40
    i32 -790990225, label %63
    i32 -2107800711, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %72

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -743709710, i32 -2107800711
  store i32 %39, i32* %16
  br label %72

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.2"*, align 8
  %42 = alloca i64*, align 8
  %43 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %41, align 8
  store i64* %1, i64** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %41, align 8
  %45 = bitcast %"class.std::allocator.2"* %44 to %"class.__gnu_cxx::new_allocator.3"*
  %46 = load i64*, i64** %42, align 8
  %47 = load i64, i64* %43, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm(%"class.__gnu_cxx::new_allocator.3"* %45, i64* %46, i64 %47)
  %48 = load i32, i32* @x.385
  %49 = load i32, i32* @y.386
  %50 = add i32 %48, 1042337627
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, 1042337627
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -790990225, i32 -2107800711
  store i32 %62, i32* %16
  br label %72

; <label>:63:                                     ; preds = %17
  ret void

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::allocator.2"*, align 8
  %66 = alloca i64*, align 8
  %67 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %65, align 8
  store i64* %1, i64** %66, align 8
  store i64 %2, i64* %67, align 8
  %68 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %65, align 8
  %69 = bitcast %"class.std::allocator.2"* %68 to %"class.__gnu_cxx::new_allocator.3"*
  %70 = load i64*, i64** %66, align 8
  %71 = load i64, i64* %67, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm(%"class.__gnu_cxx::new_allocator.3"* %69, i64* %70, i64 %71)
  store i32 -743709710, i32* %16
  br label %72

; <label>:72:                                     ; preds = %64, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm(%"class.__gnu_cxx::new_allocator.3"*, i64*, i64) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.387
  %7 = load i32, i32* @y.388
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1847388148, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1847388148, label %19
    i32 -722952225, label %39
    i32 -932235135, label %61
    i32 -2030706953, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -722952225, i32 -2030706953
  store i32 %38, i32* %15
  br label %69

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %41 = alloca i64*, align 8
  %42 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %40, align 8
  store i64* %1, i64** %41, align 8
  store i64 %2, i64* %42, align 8
  %43 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %40, align 8
  %44 = load i64*, i64** %41, align 8
  %45 = bitcast i64* %44 to i8*
  call void @_ZdlPv(i8* %45) #3
  %46 = load i32, i32* @x.387
  %47 = load i32, i32* @y.388
  %48 = sub i32 %46, -1957655582
  %49 = sub i32 %48, 1
  %50 = add i32 %49, -1957655582
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -932235135, i32 -2030706953
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %64 = alloca i64*, align 8
  %65 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %63, align 8
  store i64* %1, i64** %64, align 8
  store i64 %2, i64* %65, align 8
  %66 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %63, align 8
  %67 = load i64*, i64** %64, align 8
  %68 = bitcast i64* %67 to i8*
  call void @_ZdlPv(i8* %68) #3
  store i32 -722952225, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIxEE17_S_select_on_copyERKS1_(%"class.std::allocator.2"* noalias sret, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %3, align 8
  %4 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  call void @_ZNSt16allocator_traitsISaIxEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator.2"* sret %0, %"class.std::allocator.2"* dereferenceable(1) %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_(%"struct.std::_Vector_base.1"*, i64, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.1"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %9 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %6, align 8
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %10, %"class.std::allocator.2"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIxSaIxEE17_M_create_storageEm(%"struct.std::_Vector_base.1"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %10) #3
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i32, i32* @x.391
  %20 = load i32, i32* @y.392
  %21 = add i32 %19, 1480647213
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, 1480647213
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  br i1 %31, label %33, label %53

; <label>:33:                                     ; preds = %18, %53
  %34 = load i8*, i8** %7, align 8
  %35 = load i32, i32* %8, align 4
  %36 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %37 = insertvalue { i8*, i32 } %36, i32 %35, 1
  %38 = load i32, i32* @x.391
  %39 = load i32, i32* @y.392
  %40 = add i32 %38, -143270735
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, -143270735
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %53

; <label>:52:                                     ; preds = %33
  resume { i8*, i32 } %37

; <label>:53:                                     ; preds = %33, %18
  %54 = load i8*, i8** %7, align 8
  %55 = load i32, i32* %8, align 4
  %56 = insertvalue { i8*, i32 } undef, i8* %54, 0
  %57 = insertvalue { i8*, i32 } %56, i32 %55, 1
  br label %33
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxxET0_T_SA_S9_RSaIT1_E(i64*, i64*, i64*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %5, i32 0, i32 0
  store i64* %0, i64** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %6, i32 0, i32 0
  store i64* %1, i64** %12, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %9 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %10 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load i64*, i64** %7, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %9, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %10, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = call i64* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64* %19, i64* %21, i64* %17)
  ret i64* %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt6vectorIxSaIxEE5beginEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.395
  %6 = load i32, i32* @y.396
  %7 = add i32 %5, 469995438
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 469995438
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -612602948, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -612602948, label %19
    i32 1433293525, label %27
    i32 -1142947618, label %65
    i32 -360547856, label %67
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1433293525, i32 -360547856
  store i32 %26, i32* %15
  br label %78

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %29 = alloca %"class.std::vector.0"*, align 8
  %30 = alloca i64*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %29, align 8
  %31 = load %"class.std::vector.0"*, %"class.std::vector.0"** %29, align 8
  %32 = bitcast %"class.std::vector.0"* %31 to %"struct.std::_Vector_base.1"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  store i64* %35, i64** %30, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.46"* %28, i64** dereferenceable(8) %30) #3
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %28, i32 0, i32 0
  %37 = load i64*, i64** %36, align 8
  store i64* %37, i64** %2
  %38 = load i32, i32* @x.395
  %39 = load i32, i32* @y.396
  %40 = add i32 %38, -990821905
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, -990821905
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 -1142947618, i32 -360547856
  store i32 %64, i32* %15
  br label %78

; <label>:65:                                     ; preds = %16
  %66 = load volatile i64*, i64** %2
  ret i64* %66

; <label>:67:                                     ; preds = %16
  %68 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %69 = alloca %"class.std::vector.0"*, align 8
  %70 = alloca i64*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %69, align 8
  %71 = load %"class.std::vector.0"*, %"class.std::vector.0"** %69, align 8
  %72 = bitcast %"class.std::vector.0"* %71 to %"struct.std::_Vector_base.1"*
  %73 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %72, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %73, i32 0, i32 0
  %75 = load i64*, i64** %74, align 8
  store i64* %75, i64** %70, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.46"* %68, i64** dereferenceable(8) %70) #3
  %76 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %68, i32 0, i32 0
  %77 = load i64*, i64** %76, align 8
  store i32 1433293525, i32* %15
  br label %78

; <label>:78:                                     ; preds = %67, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt6vectorIxSaIxEE3endEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 1
  %9 = load i64*, i64** %8, align 8
  store i64* %9, i64** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.46"* %2, i64** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %2, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  ret i64* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %5 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = ptrtoint i64* %11 to i64
  %16 = ptrtoint i64* %14 to i64
  %17 = sub i64 %15, -535210406858187214
  %18 = sub i64 %17, %16
  %19 = add i64 %18, -535210406858187214
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 8
  invoke void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.1"* %5, i64* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %28) #3
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %30) #12
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator.2"* noalias sret, %"class.std::allocator.2"* dereferenceable(1)) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.401
  %6 = load i32, i32* @y.402
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1661768956, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1661768956, label %18
    i32 -744937836, label %38
    i32 -1110125689, label %56
    i32 -1496408313, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -744937836, i32 -1496408313
  store i32 %37, i32* %14
  br label %60

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %39, align 8
  %40 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %39, align 8
  call void @_ZNSaIxEC2ERKS_(%"class.std::allocator.2"* %0, %"class.std::allocator.2"* dereferenceable(1) %40) #3
  %41 = load i32, i32* @x.401
  %42 = load i32, i32* @y.402
  %43 = sub i32 %41, -1521335336
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -1521335336
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -1110125689, i32 -1496408313
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %58, align 8
  %59 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %58, align 8
  call void @_ZNSaIxEC2ERKS_(%"class.std::allocator.2"* %0, %"class.std::allocator.2"* dereferenceable(1) %59) #3
  store i32 -744937836, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIxEC2ERKS_(%"class.std::allocator.2"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = bitcast %"class.std::allocator.2"* %7 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_(%"class.__gnu_cxx::new_allocator.3"* %6, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.405
  %6 = load i32, i32* @y.406
  %7 = add i32 %5, 2063174106
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 2063174106
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1451964878, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %84
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1451964878, label %19
    i32 772845484, label %39
    i32 -1020509881, label %74
    i32 -2092935230, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %84

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 772845484, i32 -2092935230
  store i32 %38, i32* %15
  br label %84

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  %41 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %40, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %41, align 8
  %42 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %40, align 8
  %43 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %42 to %"class.std::allocator.2"*
  %44 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %41, align 8
  call void @_ZNSaIxEC2ERKS_(%"class.std::allocator.2"* %43, %"class.std::allocator.2"* dereferenceable(1) %44) #3
  %45 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %42, i32 0, i32 0
  store i64* null, i64** %45, align 8
  %46 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %42, i32 0, i32 1
  store i64* null, i64** %46, align 8
  %47 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %42, i32 0, i32 2
  store i64* null, i64** %47, align 8
  %48 = load i32, i32* @x.405
  %49 = load i32, i32* @y.406
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -1020509881, i32 -2092935230
  store i32 %73, i32* %15
  br label %84

; <label>:74:                                     ; preds = %16
  ret void

; <label>:75:                                     ; preds = %16
  %76 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  %77 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %76, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %77, align 8
  %78 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %76, align 8
  %79 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %78 to %"class.std::allocator.2"*
  %80 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %77, align 8
  call void @_ZNSaIxEC2ERKS_(%"class.std::allocator.2"* %79, %"class.std::allocator.2"* dereferenceable(1) %80) #3
  %81 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %78, i32 0, i32 0
  store i64* null, i64** %81, align 8
  %82 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %78, i32 0, i32 1
  store i64* null, i64** %82, align 8
  %83 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %78, i32 0, i32 2
  store i64* null, i64** %83, align 8
  store i32 772845484, i32* %15
  br label %84

; <label>:84:                                     ; preds = %75, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE17_M_create_storageEm(%"struct.std::_Vector_base.1"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.1"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base.1"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %8, i32 0, i32 0
  store i64* %7, i64** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %13, i32 0, i32 1
  store i64* %12, i64** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds i64, i64* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %20, i32 0, i32 2
  store i64* %19, i64** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.409
  %5 = load i32, i32* @y.410
  %6 = sub i32 %4, -2026019101
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -2026019101
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1425240236, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1425240236, label %18
    i32 -109490089, label %26
    i32 43933088, label %56
    i32 120932922, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -109490089, i32 120932922
  store i32 %25, i32* %14
  br label %61

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %27, align 8
  %28 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %27, align 8
  %29 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %28 to %"class.std::allocator.2"*
  call void @_ZNSaIxED2Ev(%"class.std::allocator.2"* %29) #3
  %30 = load i32, i32* @x.409
  %31 = load i32, i32* @y.410
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 43933088, i32 120932922
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %58, align 8
  %59 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %58, align 8
  %60 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %59 to %"class.std::allocator.2"*
  call void @_ZNSaIxED2Ev(%"class.std::allocator.2"* %60) #3
  store i32 -109490089, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxED2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.411
  %5 = load i32, i32* @y.412
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1867082406, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %59
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1867082406, label %17
    i32 621329557, label %25
    i32 -179646886, label %55
    i32 1983762635, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %59

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 621329557, i32 1983762635
  store i32 %24, i32* %13
  br label %59

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %26, align 8
  %28 = load i32, i32* @x.411
  %29 = load i32, i32* @y.412
  %30 = sub i32 %28, -1826592024
  %31 = sub i32 %30, 1
  %32 = add i32 %31, -1826592024
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 -179646886, i32 1983762635
  store i32 %54, i32* %13
  br label %59

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %57, align 8
  store i32 621329557, i32* %13
  br label %59

; <label>:59:                                     ; preds = %56, %25, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %4, i32 0, i32 0
  store i64* %0, i64** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %5, i32 0, i32 0
  store i64* %1, i64** %11, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %8 to i8*
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %9 to i8*
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load i64*, i64** %6, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %8, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %9, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = call i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxEET0_T_SC_SB_(i64* %18, i64* %20, i64* %16)
  ret i64* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxEET0_T_SC_SB_(i64*, i64*, i64*) #0 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.415
  %8 = load i32, i32* @y.416
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -629565138, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %105
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -629565138, label %20
    i32 -1614688428, label %40
    i32 -2073918832, label %85
    i32 1361670770, label %87
  ]

; <label>:19:                                     ; preds = %17
  br label %105

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1614688428, i32 1361670770
  store i32 %39, i32* %16
  br label %105

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %43 = alloca i64*, align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %45 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %41, i32 0, i32 0
  store i64* %0, i64** %46, align 8
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %42, i32 0, i32 0
  store i64* %1, i64** %47, align 8
  store i64* %2, i64** %43, align 8
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %44 to i8*
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 8, i1 false)
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %45 to i8*
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = load i64*, i64** %43, align 8
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %44, i32 0, i32 0
  %54 = load i64*, i64** %53, align 8
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %45, i32 0, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = call i64* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64* %54, i64* %56, i64* %52)
  store i64* %57, i64** %4
  %58 = load i32, i32* @x.415
  %59 = load i32, i32* @y.416
  %60 = add i32 %58, 57892137
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, 57892137
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 -2073918832, i32 1361670770
  store i32 %84, i32* %16
  br label %105

; <label>:85:                                     ; preds = %17
  %86 = load volatile i64*, i64** %4
  ret i64* %86

; <label>:87:                                     ; preds = %17
  %88 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %89 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %90 = alloca i64*, align 8
  %91 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %92 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %93 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %88, i32 0, i32 0
  store i64* %0, i64** %93, align 8
  %94 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %89, i32 0, i32 0
  store i64* %1, i64** %94, align 8
  store i64* %2, i64** %90, align 8
  %95 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %91 to i8*
  %96 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* %96, i64 8, i32 8, i1 false)
  %97 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %92 to i8*
  %98 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %97, i8* %98, i64 8, i32 8, i1 false)
  %99 = load i64*, i64** %90, align 8
  %100 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %91, i32 0, i32 0
  %101 = load i64*, i64** %100, align 8
  %102 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %92, i32 0, i32 0
  %103 = load i64*, i64** %102, align 8
  %104 = call i64* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64* %101, i64* %103, i64* %99)
  store i32 -1614688428, i32* %16
  br label %105

; <label>:105:                                    ; preds = %87, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %4, i32 0, i32 0
  store i64* %0, i64** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %5, i32 0, i32 0
  store i64* %1, i64** %12, align 8
  store i64* %2, i64** %6, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %8, i32 0, i32 0
  %16 = load i64*, i64** %15, align 8
  %17 = call i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64* %16)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %7, i32 0, i32 0
  store i64* %17, i64** %18, align 8
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %10 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %10, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = call i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64* %22)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %9, i32 0, i32 0
  store i64* %23, i64** %24, align 8
  %25 = load i64*, i64** %6, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %7, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %9, i32 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = call i64* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET1_T0_SA_S9_(i64* %27, i64* %29, i64* %25)
  ret i64* %30
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET1_T0_SA_S9_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %4, i32 0, i32 0
  store i64* %0, i64** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %5, i32 0, i32 0
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %7, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64* %14)
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %8, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64* %19)
  %21 = load i64*, i64** %6, align 8
  %22 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %21)
  %23 = call i64* @_ZSt13__copy_move_aILb0EPKxPxET1_T0_S4_S3_(i64* %15, i64* %20, i64* %22)
  ret i64* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64*) #0 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.421
  %6 = load i32, i32* @y.422
  %7 = sub i32 %5, 782973233
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 782973233
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1371946308, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %82
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1371946308, label %19
    i32 -725337736, label %27
    i32 -884485853, label %67
    i32 -1095331163, label %69
  ]

; <label>:18:                                     ; preds = %16
  br label %82

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -725337736, i32 -1095331163
  store i32 %26, i32* %15
  br label %82

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %29, i32 0, i32 0
  store i64* %0, i64** %31, align 8
  %32 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %30 to i8*
  %33 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 8, i32 8, i1 false)
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %30, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = call i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb0EE7_S_baseES7_(i64* %35)
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %28, i32 0, i32 0
  store i64* %36, i64** %37, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %28, i32 0, i32 0
  %39 = load i64*, i64** %38, align 8
  store i64* %39, i64** %2
  %40 = load i32, i32* @x.421
  %41 = load i32, i32* @y.422
  %42 = sub i32 %40, 131362163
  %43 = sub i32 %42, 1
  %44 = add i32 %43, 131362163
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -884485853, i32 -1095331163
  store i32 %66, i32* %15
  br label %82

; <label>:67:                                     ; preds = %16
  %68 = load volatile i64*, i64** %2
  ret i64* %68

; <label>:69:                                     ; preds = %16
  %70 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %71 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %72 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %73 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %71, i32 0, i32 0
  store i64* %0, i64** %73, align 8
  %74 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %72 to i8*
  %75 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %74, i8* %75, i64 8, i32 8, i1 false)
  %76 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %72, i32 0, i32 0
  %77 = load i64*, i64** %76, align 8
  %78 = call i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb0EE7_S_baseES7_(i64* %77)
  %79 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %70, i32 0, i32 0
  store i64* %78, i64** %79, align 8
  %80 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %70, i32 0, i32 0
  %81 = load i64*, i64** %80, align 8
  store i32 -725337736, i32* %15
  br label %82

; <label>:82:                                     ; preds = %69, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt13__copy_move_aILb0EPKxPxET1_T0_S4_S3_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i64*, i64** %4, align 8
  %9 = load i64*, i64** %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64* %8, i64* %9, i64* %10)
  ret i64* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %2, i32 0, i32 0
  store i64* %0, i64** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %3, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = call i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb1EE7_S_baseES7_(i64* %8)
  ret i64* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64*, i64*, i64*) #4 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i64*
  %7 = alloca i64**
  %8 = alloca i64**
  %9 = alloca i1
  %10 = alloca i1
  %11 = load i32, i32* @x.427
  %12 = load i32, i32* @y.428
  %13 = add i32 %11, 440776292
  %14 = sub i32 %13, 1
  %15 = sub i32 %14, 440776292
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  store i1 %19, i1* %10
  %20 = icmp slt i32 %12, 10
  store i1 %20, i1* %9
  %21 = alloca i32
  store i32 711508944, i32* %21
  br label %22

; <label>:22:                                     ; preds = %3, %190
  %23 = load i32, i32* %21
  switch i32 %23, label %24 [
    i32 711508944, label %25
    i32 510762806, label %45
    i32 -102894229, label %81
    i32 1729278547, label %84
    i32 -2083249171, label %94
    i32 180789941, label %110
    i32 1230488266, label %130
    i32 -1519073006, label %132
    i32 1790145841, label %184
  ]

; <label>:24:                                     ; preds = %22
  br label %190

; <label>:25:                                     ; preds = %22
  %26 = load volatile i1, i1* %10
  %27 = load volatile i1, i1* %9
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 false, true
  %31 = and i1 %28, false
  %32 = and i1 %26, %30
  %33 = and i1 %29, false
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 false, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  %44 = select i1 %42, i32 510762806, i32 -1519073006
  store i32 %44, i32* %21
  br label %190

; <label>:45:                                     ; preds = %22
  %46 = alloca i64*, align 8
  store i64** %46, i64*** %8
  %47 = alloca i64*, align 8
  %48 = alloca i64*, align 8
  store i64** %48, i64*** %7
  %49 = alloca i64, align 8
  store i64* %49, i64** %6
  %50 = load volatile i64**, i64*** %8
  store i64* %0, i64** %50, align 8
  store i64* %1, i64** %47, align 8
  %51 = load volatile i64**, i64*** %7
  store i64* %2, i64** %51, align 8
  %52 = load i64*, i64** %47, align 8
  %53 = load volatile i64**, i64*** %8
  %54 = load i64*, i64** %53, align 8
  %55 = ptrtoint i64* %52 to i64
  %56 = ptrtoint i64* %54 to i64
  %57 = add i64 %55, -8112796686172496297
  %58 = sub i64 %57, %56
  %59 = sub i64 %58, -8112796686172496297
  %60 = sub i64 %55, %56
  %61 = sdiv exact i64 %59, 8
  %62 = load volatile i64*, i64** %6
  store i64 %61, i64* %62, align 8
  %63 = load volatile i64*, i64** %6
  %64 = load i64, i64* %63, align 8
  %65 = icmp ne i64 %64, 0
  store i1 %65, i1* %5
  %66 = load i32, i32* @x.427
  %67 = load i32, i32* @y.428
  %68 = sub i32 %66, -331329228
  %69 = sub i32 %68, 1
  %70 = add i32 %69, -331329228
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = and i1 %74, %75
  %77 = xor i1 %74, %75
  %78 = or i1 %76, %77
  %79 = or i1 %74, %75
  %80 = select i1 %78, i32 -102894229, i32 -1519073006
  store i32 %80, i32* %21
  br label %190

; <label>:81:                                     ; preds = %22
  %82 = load volatile i1, i1* %5
  %83 = select i1 %82, i32 1729278547, i32 -2083249171
  store i32 %83, i32* %21
  br label %190

; <label>:84:                                     ; preds = %22
  %85 = load volatile i64**, i64*** %7
  %86 = load i64*, i64** %85, align 8
  %87 = bitcast i64* %86 to i8*
  %88 = load volatile i64**, i64*** %8
  %89 = load i64*, i64** %88, align 8
  %90 = bitcast i64* %89 to i8*
  %91 = load volatile i64*, i64** %6
  %92 = load i64, i64* %91, align 8
  %93 = mul i64 8, %92
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %87, i8* %90, i64 %93, i32 8, i1 false)
  store i32 -2083249171, i32* %21
  br label %190

; <label>:94:                                     ; preds = %22
  %95 = load i32, i32* @x.427
  %96 = load i32, i32* @y.428
  %97 = add i32 %95, -850728824
  %98 = sub i32 %97, 1
  %99 = sub i32 %98, -850728824
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = and i1 %103, %104
  %106 = xor i1 %103, %104
  %107 = or i1 %105, %106
  %108 = or i1 %103, %104
  %109 = select i1 %107, i32 180789941, i32 1790145841
  store i32 %109, i32* %21
  br label %190

; <label>:110:                                    ; preds = %22
  %111 = load volatile i64**, i64*** %7
  %112 = load i64*, i64** %111, align 8
  %113 = load volatile i64*, i64** %6
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds i64, i64* %112, i64 %114
  store i64* %115, i64** %4
  %116 = load i32, i32* @x.427
  %117 = load i32, i32* @y.428
  %118 = sub i32 0, 1
  %119 = add i32 %116, %118
  %120 = sub i32 %116, 1
  %121 = mul i32 %116, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %117, 10
  %125 = and i1 %123, %124
  %126 = xor i1 %123, %124
  %127 = or i1 %125, %126
  %128 = or i1 %123, %124
  %129 = select i1 %127, i32 1230488266, i32 1790145841
  store i32 %129, i32* %21
  br label %190

; <label>:130:                                    ; preds = %22
  %131 = load volatile i64*, i64** %4
  ret i64* %131

; <label>:132:                                    ; preds = %22
  %133 = alloca i64*, align 8
  %134 = alloca i64*, align 8
  %135 = alloca i64*, align 8
  %136 = alloca i64, align 8
  store i64* %0, i64** %133, align 8
  store i64* %1, i64** %134, align 8
  store i64* %2, i64** %135, align 8
  %137 = load i64*, i64** %134, align 8
  %138 = load i64*, i64** %133, align 8
  %139 = ptrtoint i64* %137 to i64
  %140 = ptrtoint i64* %138 to i64
  %141 = shl i64 %139, %140
  %142 = shl i64 %139, %140
  %143 = sub i64 %139, 3342094509552945489
  %144 = sub i64 %143, %140
  %145 = add i64 %144, 3342094509552945489
  %146 = sub i64 %139, %140
  %147 = mul i64 %145, %140
  %148 = add i64 %139, 3722244855562913824
  %149 = sub i64 %148, %140
  %150 = sub i64 %149, 3722244855562913824
  %151 = sub i64 %139, %140
  %152 = mul i64 %150, %140
  %153 = add i64 %139, 3121403178038711650
  %154 = sub i64 %153, %140
  %155 = sub i64 %154, 3121403178038711650
  %156 = sub i64 %139, %140
  %157 = mul i64 %155, %140
  %158 = shl i64 %139, %140
  %159 = sub i64 %139, -9192000919716722847
  %160 = sub i64 %159, %140
  %161 = add i64 %160, -9192000919716722847
  %162 = sub i64 %139, %140
  %163 = sub i64 0, 8
  %164 = add i64 %161, %163
  %165 = sub i64 %161, 8
  %166 = mul i64 %164, 8
  %167 = sub i64 0, %161
  %168 = add i64 0, %167
  %169 = sub i64 0, %161
  %170 = sub i64 %168, 6165562819058918738
  %171 = add i64 %170, 8
  %172 = add i64 %171, 6165562819058918738
  %173 = add i64 %168, 8
  %174 = sub i64 0, %161
  %175 = add i64 0, %174
  %176 = sub i64 0, %161
  %177 = add i64 %175, -419223124642695011
  %178 = add i64 %177, 8
  %179 = sub i64 %178, -419223124642695011
  %180 = add i64 %175, 8
  %181 = sdiv exact i64 %161, 8
  store i64 %181, i64* %136, align 8
  %182 = load i64, i64* %136, align 8
  %183 = icmp ne i64 %182, 0
  store i32 510762806, i32* %21
  br label %190

; <label>:184:                                    ; preds = %22
  %185 = load volatile i64**, i64*** %7
  %186 = load i64*, i64** %185, align 8
  %187 = load volatile i64*, i64** %6
  %188 = load i64, i64* %187, align 8
  %189 = getelementptr inbounds i64, i64* %186, i64 %188
  store i32 180789941, i32* %21
  br label %190

; <label>:190:                                    ; preds = %184, %132, %110, %94, %84, %81, %45, %25, %24
  br label %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb1EE7_S_baseES7_(i64*) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.429
  %6 = load i32, i32* @y.430
  %7 = sub i32 %5, 665591192
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 665591192
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 356676278, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %53
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 356676278, label %19
    i32 1002624435, label %27
    i32 -1732506326, label %46
    i32 1023868212, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %53

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1002624435, i32 1023868212
  store i32 %26, i32* %15
  br label %53

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %28, i32 0, i32 0
  store i64* %0, i64** %29, align 8
  %30 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.46"* %28) #3
  %31 = load i64*, i64** %30, align 8
  store i64* %31, i64** %2
  %32 = load i32, i32* @x.429
  %33 = load i32, i32* @y.430
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -1732506326, i32 1023868212
  store i32 %45, i32* %15
  br label %53

; <label>:46:                                     ; preds = %16
  %47 = load volatile i64*, i64** %2
  ret i64* %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %49, i32 0, i32 0
  store i64* %0, i64** %50, align 8
  %51 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.46"* %49) #3
  %52 = load i64*, i64** %51, align 8
  store i32 1002624435, i32* %15
  br label %53

; <label>:53:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.46"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.46"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.46"* %0, %"class.__gnu_cxx::__normal_iterator.46"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.46"*, %"class.__gnu_cxx::__normal_iterator.46"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %3, i32 0, i32 0
  ret i64** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb0EE7_S_baseES7_(i64*) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.433
  %6 = load i32, i32* @y.434
  %7 = add i32 %5, 803477936
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 803477936
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -592754255, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %72
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -592754255, label %19
    i32 1959851967, label %27
    i32 1978784175, label %62
    i32 -997228117, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %72

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1959851967, i32 -997228117
  store i32 %26, i32* %15
  br label %72

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %29, i32 0, i32 0
  store i64* %0, i64** %30, align 8
  %31 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %28 to i8*
  %32 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 8, i32 8, i1 false)
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %28, i32 0, i32 0
  %34 = load i64*, i64** %33, align 8
  store i64* %34, i64** %2
  %35 = load i32, i32* @x.433
  %36 = load i32, i32* @y.434
  %37 = add i32 %35, -613062510
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -613062510
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 1978784175, i32 -997228117
  store i32 %61, i32* %15
  br label %72

; <label>:62:                                     ; preds = %16
  %63 = load volatile i64*, i64** %2
  ret i64* %63

; <label>:64:                                     ; preds = %16
  %65 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %66 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %66, i32 0, i32 0
  store i64* %0, i64** %67, align 8
  %68 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %65 to i8*
  %69 = bitcast %"class.__gnu_cxx::__normal_iterator.46"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %68, i8* %69, i64 8, i32 8, i1 false)
  %70 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %65, i32 0, i32 0
  %71 = load i64*, i64** %70, align 8
  store i32 1959851967, i32* %15
  br label %72

; <label>:72:                                     ; preds = %64, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.46"*, i64** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.435
  %6 = load i32, i32* @y.436
  %7 = sub i32 %5, -1903786966
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1903786966
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1834960701, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1834960701, label %19
    i32 1539221770, label %27
    i32 -603565724, label %60
    i32 -2088985790, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1539221770, i32 -2088985790
  store i32 %26, i32* %15
  br label %68

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.46"*, align 8
  %29 = alloca i64**, align 8
  store %"class.__gnu_cxx::__normal_iterator.46"* %0, %"class.__gnu_cxx::__normal_iterator.46"** %28, align 8
  store i64** %1, i64*** %29, align 8
  %30 = load %"class.__gnu_cxx::__normal_iterator.46"*, %"class.__gnu_cxx::__normal_iterator.46"** %28, align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %30, i32 0, i32 0
  %32 = load i64**, i64*** %29, align 8
  %33 = load i64*, i64** %32, align 8
  store i64* %33, i64** %31, align 8
  %34 = load i32, i32* @x.435
  %35 = load i32, i32* @y.436
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -603565724, i32 -2088985790
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.__gnu_cxx::__normal_iterator.46"*, align 8
  %63 = alloca i64**, align 8
  store %"class.__gnu_cxx::__normal_iterator.46"* %0, %"class.__gnu_cxx::__normal_iterator.46"** %62, align 8
  store i64** %1, i64*** %63, align 8
  %64 = load %"class.__gnu_cxx::__normal_iterator.46"*, %"class.__gnu_cxx::__normal_iterator.46"** %62, align 8
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %64, i32 0, i32 0
  %66 = load i64**, i64*** %63, align 8
  %67 = load i64*, i64** %66, align 8
  store i64* %67, i64** %65, align 8
  store i32 1539221770, i32* %15
  br label %68

; <label>:68:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EEC2Ev(%"class.std::_Deque_base"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %5 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  call void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE11_Deque_implC2Ev(%"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %6)
  invoke void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE17_M_initialize_mapEm(%"class.std::_Deque_base"* %5, i64 0)
          to label %7 unwind label %38

; <label>:7:                                      ; preds = %1
  %8 = load i32, i32* @x.437
  %9 = load i32, i32* @y.438
  %10 = add i32 %8, -1407929874
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -1407929874
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %9, 10
  %18 = and i1 %16, %17
  %19 = xor i1 %16, %17
  %20 = or i1 %18, %19
  %21 = or i1 %16, %17
  br i1 %20, label %22, label %47

; <label>:22:                                     ; preds = %7, %47
  %23 = load i32, i32* @x.437
  %24 = load i32, i32* @y.438
  %25 = sub i32 %23, -1438433695
  %26 = sub i32 %25, 1
  %27 = add i32 %26, -1438433695
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  br i1 %35, label %37, label %47

; <label>:37:                                     ; preds = %22
  ret void

; <label>:38:                                     ; preds = %1
  %39 = landingpad { i8*, i32 }
          cleanup
  %40 = extractvalue { i8*, i32 } %39, 0
  store i8* %40, i8** %3, align 8
  %41 = extractvalue { i8*, i32 } %39, 1
  store i32 %41, i32* %4, align 4
  call void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE11_Deque_implD2Ev(%"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %6) #3
  br label %42

; <label>:42:                                     ; preds = %38
  %43 = load i8*, i8** %3, align 8
  %44 = load i32, i32* %4, align 4
  %45 = insertvalue { i8*, i32 } undef, i8* %43, 0
  %46 = insertvalue { i8*, i32 } %45, i32 %44, 1
  resume { i8*, i32 } %46

; <label>:47:                                     ; preds = %22, %7
  br label %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE11_Deque_implC2Ev(%"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %0, %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"** %2, align 8
  %3 = load %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"*, %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %3 to %"class.std::allocator.15"*
  call void @_ZNSaISt4pairIiiEEC2Ev(%"class.std::allocator.15"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %3, i32 0, i32 0
  store %"struct.std::pair"** null, %"struct.std::pair"*** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %3, i32 0, i32 1
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %3, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorISt4pairIiiERS1_PS1_EC2Ev(%"struct.std::_Deque_iterator"* %7) #3
  %8 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %3, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorISt4pairIiiERS1_PS1_EC2Ev(%"struct.std::_Deque_iterator"* %8) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE17_M_initialize_mapEm(%"class.std::_Deque_base"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"struct.std::pair"**, align 8
  %9 = alloca %"struct.std::pair"**, align 8
  %10 = alloca i8*
  %11 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %12 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %13 = load i64, i64* %4, align 8
  %14 = call i64 @_ZSt16__deque_buf_sizem(i64 8)
  %15 = udiv i64 %13, %14
  %16 = sub i64 0, %15
  %17 = sub i64 0, 1
  %18 = add i64 %16, %17
  %19 = sub i64 0, %18
  %20 = add i64 %15, 1
  store i64 %19, i64* %5, align 8
  store i64 8, i64* %6, align 8
  %21 = load i64, i64* %5, align 8
  %22 = sub i64 0, %21
  %23 = sub i64 0, 2
  %24 = add i64 %22, %23
  %25 = sub i64 0, %24
  %26 = add i64 %21, 2
  store i64 %25, i64* %7, align 8
  %27 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %6, i64* dereferenceable(8) %7)
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %29, i32 0, i32 1
  store i64 %28, i64* %30, align 8
  %31 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %31, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = call %"struct.std::pair"** @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE15_M_allocate_mapEm(%"class.std::_Deque_base"* %12, i64 %33)
  %35 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %35, i32 0, i32 0
  store %"struct.std::pair"** %34, %"struct.std::pair"*** %36, align 8
  %37 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %37, i32 0, i32 0
  %39 = load %"struct.std::pair"**, %"struct.std::pair"*** %38, align 8
  %40 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %40, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = load i64, i64* %5, align 8
  %44 = add i64 %42, 3739036222475109721
  %45 = sub i64 %44, %43
  %46 = sub i64 %45, 3739036222475109721
  %47 = sub i64 %42, %43
  %48 = udiv i64 %46, 2
  %49 = getelementptr inbounds %"struct.std::pair"*, %"struct.std::pair"** %39, i64 %48
  store %"struct.std::pair"** %49, %"struct.std::pair"*** %8, align 8
  %50 = load %"struct.std::pair"**, %"struct.std::pair"*** %8, align 8
  %51 = load i64, i64* %5, align 8
  %52 = getelementptr inbounds %"struct.std::pair"*, %"struct.std::pair"** %50, i64 %51
  store %"struct.std::pair"** %52, %"struct.std::pair"*** %9, align 8
  %53 = load %"struct.std::pair"**, %"struct.std::pair"*** %8, align 8
  %54 = load %"struct.std::pair"**, %"struct.std::pair"*** %9, align 8
  invoke void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE15_M_create_nodesEPPS1_S5_(%"class.std::_Deque_base"* %12, %"struct.std::pair"** %53, %"struct.std::pair"** %54)
          to label %55 unwind label %56

; <label>:55:                                     ; preds = %2
  br label %173

; <label>:56:                                     ; preds = %2
  %57 = landingpad { i8*, i32 }
          catch i8* null
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %10, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %11, align 4
  br label %60

; <label>:60:                                     ; preds = %56
  %61 = load i32, i32* @x.441
  %62 = load i32, i32* @y.442
  %63 = add i32 %61, 1826774550
  %64 = sub i32 %63, 1
  %65 = sub i32 %64, 1826774550
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 false, true
  %74 = and i1 %71, false
  %75 = and i1 %69, %73
  %76 = and i1 %72, false
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 false, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  br i1 %85, label %87, label %262

; <label>:87:                                     ; preds = %60, %262
  %88 = load i8*, i8** %10, align 8
  %89 = call i8* @__cxa_begin_catch(i8* %88) #3
  %90 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %91 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %90, i32 0, i32 0
  %92 = load %"struct.std::pair"**, %"struct.std::pair"*** %91, align 8
  %93 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %93, i32 0, i32 1
  %95 = load i64, i64* %94, align 8
  call void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE17_M_deallocate_mapEPPS1_m(%"class.std::_Deque_base"* %12, %"struct.std::pair"** %92, i64 %95) #3
  %96 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %97 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %96, i32 0, i32 0
  store %"struct.std::pair"** null, %"struct.std::pair"*** %97, align 8
  %98 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %99 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %98, i32 0, i32 1
  store i64 0, i64* %99, align 8
  %100 = load i32, i32* @x.441
  %101 = load i32, i32* @y.442
  %102 = add i32 %100, -1381555226
  %103 = sub i32 %102, 1
  %104 = sub i32 %103, -1381555226
  %105 = sub i32 %100, 1
  %106 = mul i32 %100, %104
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %101, 10
  %110 = and i1 %108, %109
  %111 = xor i1 %108, %109
  %112 = or i1 %110, %111
  %113 = or i1 %108, %109
  br i1 %112, label %114, label %262

; <label>:114:                                    ; preds = %87
  invoke void @__cxa_rethrow() #15
          to label %261 unwind label %115

; <label>:115:                                    ; preds = %114
  %116 = landingpad { i8*, i32 }
          cleanup
  %117 = extractvalue { i8*, i32 } %116, 0
  store i8* %117, i8** %10, align 8
  %118 = extractvalue { i8*, i32 } %116, 1
  store i32 %118, i32* %11, align 4
  invoke void @__cxa_end_catch()
          to label %119 unwind label %258

; <label>:119:                                    ; preds = %115
  %120 = load i32, i32* @x.441
  %121 = load i32, i32* @y.442
  %122 = add i32 %120, -630035996
  %123 = sub i32 %122, 1
  %124 = sub i32 %123, -630035996
  %125 = sub i32 %120, 1
  %126 = mul i32 %120, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %121, 10
  %130 = xor i1 %128, true
  %131 = xor i1 %129, true
  %132 = xor i1 true, true
  %133 = and i1 %130, true
  %134 = and i1 %128, %132
  %135 = and i1 %131, true
  %136 = and i1 %129, %132
  %137 = or i1 %133, %134
  %138 = or i1 %135, %136
  %139 = xor i1 %137, %138
  %140 = or i1 %130, %131
  %141 = xor i1 %140, true
  %142 = or i1 true, %132
  %143 = and i1 %141, %142
  %144 = or i1 %139, %143
  %145 = or i1 %128, %129
  br i1 %144, label %146, label %275

; <label>:146:                                    ; preds = %119, %275
  %147 = load i32, i32* @x.441
  %148 = load i32, i32* @y.442
  %149 = sub i32 0, 1
  %150 = add i32 %147, %149
  %151 = sub i32 %147, 1
  %152 = mul i32 %147, %150
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %148, 10
  %156 = xor i1 %154, true
  %157 = xor i1 %155, true
  %158 = xor i1 true, true
  %159 = and i1 %156, true
  %160 = and i1 %154, %158
  %161 = and i1 %157, true
  %162 = and i1 %155, %158
  %163 = or i1 %159, %160
  %164 = or i1 %161, %162
  %165 = xor i1 %163, %164
  %166 = or i1 %156, %157
  %167 = xor i1 %166, true
  %168 = or i1 true, %158
  %169 = and i1 %167, %168
  %170 = or i1 %165, %169
  %171 = or i1 %154, %155
  br i1 %170, label %172, label %275

; <label>:172:                                    ; preds = %146
  br label %199

; <label>:173:                                    ; preds = %55
  %174 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %175 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %174, i32 0, i32 2
  %176 = load %"struct.std::pair"**, %"struct.std::pair"*** %8, align 8
  call void @_ZNSt15_Deque_iteratorISt4pairIiiERS1_PS1_E11_M_set_nodeEPS3_(%"struct.std::_Deque_iterator"* %175, %"struct.std::pair"** %176) #3
  %177 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %178 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %177, i32 0, i32 3
  %179 = load %"struct.std::pair"**, %"struct.std::pair"*** %9, align 8
  %180 = getelementptr inbounds %"struct.std::pair"*, %"struct.std::pair"** %179, i64 -1
  call void @_ZNSt15_Deque_iteratorISt4pairIiiERS1_PS1_E11_M_set_nodeEPS3_(%"struct.std::_Deque_iterator"* %178, %"struct.std::pair"** %180) #3
  %181 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %182 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %181, i32 0, i32 2
  %183 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %182, i32 0, i32 1
  %184 = load %"struct.std::pair"*, %"struct.std::pair"** %183, align 8
  %185 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %186 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %185, i32 0, i32 2
  %187 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %186, i32 0, i32 0
  store %"struct.std::pair"* %184, %"struct.std::pair"** %187, align 8
  %188 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %189 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %188, i32 0, i32 3
  %190 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %189, i32 0, i32 1
  %191 = load %"struct.std::pair"*, %"struct.std::pair"** %190, align 8
  %192 = load i64, i64* %4, align 8
  %193 = call i64 @_ZSt16__deque_buf_sizem(i64 8)
  %194 = urem i64 %192, %193
  %195 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %191, i64 %194
  %196 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %197 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %196, i32 0, i32 3
  %198 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %197, i32 0, i32 0
  store %"struct.std::pair"* %195, %"struct.std::pair"** %198, align 8
  ret void

; <label>:199:                                    ; preds = %172
  %200 = load i32, i32* @x.441
  %201 = load i32, i32* @y.442
  %202 = add i32 %200, 1702375572
  %203 = sub i32 %202, 1
  %204 = sub i32 %203, 1702375572
  %205 = sub i32 %200, 1
  %206 = mul i32 %200, %204
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %201, 10
  %210 = xor i1 %208, true
  %211 = xor i1 %209, true
  %212 = xor i1 true, true
  %213 = and i1 %210, true
  %214 = and i1 %208, %212
  %215 = and i1 %211, true
  %216 = and i1 %209, %212
  %217 = or i1 %213, %214
  %218 = or i1 %215, %216
  %219 = xor i1 %217, %218
  %220 = or i1 %210, %211
  %221 = xor i1 %220, true
  %222 = or i1 true, %212
  %223 = and i1 %221, %222
  %224 = or i1 %219, %223
  %225 = or i1 %208, %209
  br i1 %224, label %226, label %276

; <label>:226:                                    ; preds = %199, %276
  %227 = load i8*, i8** %10, align 8
  %228 = load i32, i32* %11, align 4
  %229 = insertvalue { i8*, i32 } undef, i8* %227, 0
  %230 = insertvalue { i8*, i32 } %229, i32 %228, 1
  %231 = load i32, i32* @x.441
  %232 = load i32, i32* @y.442
  %233 = add i32 %231, 21333035
  %234 = sub i32 %233, 1
  %235 = sub i32 %234, 21333035
  %236 = sub i32 %231, 1
  %237 = mul i32 %231, %235
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %232, 10
  %241 = xor i1 %239, true
  %242 = xor i1 %240, true
  %243 = xor i1 false, true
  %244 = and i1 %241, false
  %245 = and i1 %239, %243
  %246 = and i1 %242, false
  %247 = and i1 %240, %243
  %248 = or i1 %244, %245
  %249 = or i1 %246, %247
  %250 = xor i1 %248, %249
  %251 = or i1 %241, %242
  %252 = xor i1 %251, true
  %253 = or i1 false, %243
  %254 = and i1 %252, %253
  %255 = or i1 %250, %254
  %256 = or i1 %239, %240
  br i1 %255, label %257, label %276

; <label>:257:                                    ; preds = %226
  resume { i8*, i32 } %230

; <label>:258:                                    ; preds = %115
  %259 = landingpad { i8*, i32 }
          catch i8* null
  %260 = extractvalue { i8*, i32 } %259, 0
  call void @__clang_call_terminate(i8* %260) #12
  unreachable

; <label>:261:                                    ; preds = %114
  unreachable

; <label>:262:                                    ; preds = %87, %60
  %263 = load i8*, i8** %10, align 8
  %264 = call i8* @__cxa_begin_catch(i8* %263) #3
  %265 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %266 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %265, i32 0, i32 0
  %267 = load %"struct.std::pair"**, %"struct.std::pair"*** %266, align 8
  %268 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %269 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %268, i32 0, i32 1
  %270 = load i64, i64* %269, align 8
  call void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE17_M_deallocate_mapEPPS1_m(%"class.std::_Deque_base"* %12, %"struct.std::pair"** %267, i64 %270) #3
  %271 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %272 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %271, i32 0, i32 0
  store %"struct.std::pair"** null, %"struct.std::pair"*** %272, align 8
  %273 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %274 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %273, i32 0, i32 1
  store i64 0, i64* %274, align 8
  br label %87

; <label>:275:                                    ; preds = %146, %119
  br label %146

; <label>:276:                                    ; preds = %226, %199
  %277 = load i8*, i8** %10, align 8
  %278 = load i32, i32* %11, align 4
  %279 = insertvalue { i8*, i32 } undef, i8* %277, 0
  %280 = insertvalue { i8*, i32 } %279, i32 %278, 1
  br label %226
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE11_Deque_implD2Ev(%"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %0, %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"** %2, align 8
  %3 = load %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"*, %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %3 to %"class.std::allocator.15"*
  call void @_ZNSaISt4pairIiiEED2Ev(%"class.std::allocator.15"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt4pairIiiEEC2Ev(%"class.std::allocator.15"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.445
  %5 = load i32, i32* @y.446
  %6 = sub i32 %4, -2037030101
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -2037030101
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1450990598, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1450990598, label %18
    i32 800430133, label %38
    i32 -1440353734, label %57
    i32 -1052726254, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 800430133, i32 -1052726254
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %39, align 8
  %40 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %39, align 8
  %41 = bitcast %"class.std::allocator.15"* %40 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEEC2Ev(%"class.__gnu_cxx::new_allocator.16"* %41) #3
  %42 = load i32, i32* @x.445
  %43 = load i32, i32* @y.446
  %44 = sub i32 %42, 1006431656
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 1006431656
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1440353734, i32 -1052726254
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %59, align 8
  %60 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %59, align 8
  %61 = bitcast %"class.std::allocator.15"* %60 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEEC2Ev(%"class.__gnu_cxx::new_allocator.16"* %61) #3
  store i32 800430133, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorISt4pairIiiERS1_PS1_EC2Ev(%"struct.std::_Deque_iterator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 0
  store %"struct.std::pair"* null, %"struct.std::pair"** %4, align 8
  %5 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 1
  store %"struct.std::pair"* null, %"struct.std::pair"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 2
  store %"struct.std::pair"* null, %"struct.std::pair"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 3
  store %"struct.std::pair"** null, %"struct.std::pair"*** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEEC2Ev(%"class.__gnu_cxx::new_allocator.16"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt16__deque_buf_sizem(i64) #4 comdat {
  %2 = alloca i64
  %3 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  %4 = load i64, i64* %3, align 8
  store i64 %4, i64* %2
  %5 = alloca i32
  store i32 1408109616, i32* %5
  %6 = alloca i64
  br label %7

; <label>:7:                                      ; preds = %1, %20
  %8 = load i32, i32* %5
  switch i32 %8, label %9 [
    i32 1408109616, label %10
    i32 -1888200770, label %14
    i32 652438630, label %17
    i32 -229966680, label %18
  ]

; <label>:9:                                      ; preds = %7
  br label %20

; <label>:10:                                     ; preds = %7
  %11 = load volatile i64, i64* %2
  %12 = icmp ult i64 %11, 512
  %13 = select i1 %12, i32 -1888200770, i32 652438630
  store i32 %13, i32* %5
  br label %20

; <label>:14:                                     ; preds = %7
  %15 = load i64, i64* %3, align 8
  %16 = udiv i64 512, %15
  store i32 -229966680, i32* %5
  store i64 %16, i64* %6
  br label %20

; <label>:17:                                     ; preds = %7
  store i32 -229966680, i32* %5
  store i64 1, i64* %6
  br label %20

; <label>:18:                                     ; preds = %7
  %19 = load i64, i64* %6
  ret i64 %19

; <label>:20:                                     ; preds = %17, %14, %10, %9
  br label %7
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"** @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE15_M_allocate_mapEm(%"class.std::_Deque_base"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::allocator.47", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  call void @_ZNKSt11_Deque_baseISt4pairIiiESaIS1_EE20_M_get_map_allocatorEv(%"class.std::allocator.47"* sret %5, %"class.std::_Deque_base"* %8) #3
  %9 = load i64, i64* %4, align 8
  %10 = invoke %"struct.std::pair"** @_ZNSt16allocator_traitsISaIPSt4pairIiiEEE8allocateERS3_m(%"class.std::allocator.47"* dereferenceable(1) %5, i64 %9)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %2
  call void @_ZNSaIPSt4pairIiiEED2Ev(%"class.std::allocator.47"* %5) #3
  ret %"struct.std::pair"** %10

; <label>:12:                                     ; preds = %2
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  store i8* %14, i8** %6, align 8
  %15 = extractvalue { i8*, i32 } %13, 1
  store i32 %15, i32* %7, align 4
  call void @_ZNSaIPSt4pairIiiEED2Ev(%"class.std::allocator.47"* %5) #3
  br label %16

; <label>:16:                                     ; preds = %12
  %17 = load i32, i32* @x.453
  %18 = load i32, i32* @y.454
  %19 = sub i32 0, 1
  %20 = add i32 %17, %19
  %21 = sub i32 %17, 1
  %22 = mul i32 %17, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %18, 10
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  br i1 %28, label %30, label %49

; <label>:30:                                     ; preds = %16, %49
  %31 = load i8*, i8** %6, align 8
  %32 = load i32, i32* %7, align 4
  %33 = insertvalue { i8*, i32 } undef, i8* %31, 0
  %34 = insertvalue { i8*, i32 } %33, i32 %32, 1
  %35 = load i32, i32* @x.453
  %36 = load i32, i32* @y.454
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  br i1 %46, label %48, label %49

; <label>:48:                                     ; preds = %30
  resume { i8*, i32 } %34

; <label>:49:                                     ; preds = %30, %16
  %50 = load i8*, i8** %6, align 8
  %51 = load i32, i32* %7, align 4
  %52 = insertvalue { i8*, i32 } undef, i8* %50, 0
  %53 = insertvalue { i8*, i32 } %52, i32 %51, 1
  br label %30
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE15_M_create_nodesEPPS1_S5_(%"class.std::_Deque_base"*, %"struct.std::pair"**, %"struct.std::pair"**) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca %"struct.std::pair"**, align 8
  %6 = alloca %"struct.std::pair"**, align 8
  %7 = alloca %"struct.std::pair"**, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store %"struct.std::pair"** %1, %"struct.std::pair"*** %5, align 8
  store %"struct.std::pair"** %2, %"struct.std::pair"*** %6, align 8
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %11 = load %"struct.std::pair"**, %"struct.std::pair"*** %5, align 8
  store %"struct.std::pair"** %11, %"struct.std::pair"*** %7, align 8
  br label %12

; <label>:12:                                     ; preds = %61, %3
  %13 = load %"struct.std::pair"**, %"struct.std::pair"*** %7, align 8
  %14 = load %"struct.std::pair"**, %"struct.std::pair"*** %6, align 8
  %15 = icmp ult %"struct.std::pair"** %13, %14
  br i1 %15, label %16, label %73

; <label>:16:                                     ; preds = %12
  %17 = invoke %"struct.std::pair"* @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %10)
          to label %18 unwind label %64

; <label>:18:                                     ; preds = %16
  %19 = load i32, i32* @x.455
  %20 = load i32, i32* @y.456
  %21 = sub i32 0, 1
  %22 = add i32 %19, %21
  %23 = sub i32 %19, 1
  %24 = mul i32 %19, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %20, 10
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  br i1 %30, label %32, label %244

; <label>:32:                                     ; preds = %18, %244
  %33 = load %"struct.std::pair"**, %"struct.std::pair"*** %7, align 8
  store %"struct.std::pair"* %17, %"struct.std::pair"** %33, align 8
  %34 = load i32, i32* @x.455
  %35 = load i32, i32* @y.456
  %36 = sub i32 %34, -772328251
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -772328251
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  br i1 %58, label %60, label %244

; <label>:60:                                     ; preds = %32
  br label %61

; <label>:61:                                     ; preds = %60
  %62 = load %"struct.std::pair"**, %"struct.std::pair"*** %7, align 8
  %63 = getelementptr inbounds %"struct.std::pair"*, %"struct.std::pair"** %62, i32 1
  store %"struct.std::pair"** %63, %"struct.std::pair"*** %7, align 8
  br label %12

; <label>:64:                                     ; preds = %16
  %65 = landingpad { i8*, i32 }
          catch i8* null
  %66 = extractvalue { i8*, i32 } %65, 0
  store i8* %66, i8** %8, align 8
  %67 = extractvalue { i8*, i32 } %65, 1
  store i32 %67, i32* %9, align 4
  br label %68

; <label>:68:                                     ; preds = %64
  %69 = load i8*, i8** %8, align 8
  %70 = call i8* @__cxa_begin_catch(i8* %69) #3
  %71 = load %"struct.std::pair"**, %"struct.std::pair"*** %5, align 8
  %72 = load %"struct.std::pair"**, %"struct.std::pair"*** %7, align 8
  call void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE16_M_destroy_nodesEPPS1_S5_(%"class.std::_Deque_base"* %10, %"struct.std::pair"** %71, %"struct.std::pair"** %72) #3
  invoke void @__cxa_rethrow() #15
          to label %243 unwind label %116

; <label>:73:                                     ; preds = %12
  %74 = load i32, i32* @x.455
  %75 = load i32, i32* @y.456
  %76 = add i32 %74, 1243990403
  %77 = sub i32 %76, 1
  %78 = sub i32 %77, 1243990403
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = xor i1 %82, true
  %85 = xor i1 %83, true
  %86 = xor i1 false, true
  %87 = and i1 %84, false
  %88 = and i1 %82, %86
  %89 = and i1 %85, false
  %90 = and i1 %83, %86
  %91 = or i1 %87, %88
  %92 = or i1 %89, %90
  %93 = xor i1 %91, %92
  %94 = or i1 %84, %85
  %95 = xor i1 %94, true
  %96 = or i1 false, %86
  %97 = and i1 %95, %96
  %98 = or i1 %93, %97
  %99 = or i1 %82, %83
  br i1 %98, label %100, label %246

; <label>:100:                                    ; preds = %73, %246
  %101 = load i32, i32* @x.455
  %102 = load i32, i32* @y.456
  %103 = sub i32 %101, 1342499085
  %104 = sub i32 %103, 1
  %105 = add i32 %104, 1342499085
  %106 = sub i32 %101, 1
  %107 = mul i32 %101, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %102, 10
  %111 = and i1 %109, %110
  %112 = xor i1 %109, %110
  %113 = or i1 %111, %112
  %114 = or i1 %109, %110
  br i1 %113, label %115, label %246

; <label>:115:                                    ; preds = %100
  br label %150

; <label>:116:                                    ; preds = %68
  %117 = landingpad { i8*, i32 }
          cleanup
  %118 = extractvalue { i8*, i32 } %117, 0
  store i8* %118, i8** %8, align 8
  %119 = extractvalue { i8*, i32 } %117, 1
  store i32 %119, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %120 unwind label %186

; <label>:120:                                    ; preds = %116
  %121 = load i32, i32* @x.455
  %122 = load i32, i32* @y.456
  %123 = sub i32 0, 1
  %124 = add i32 %121, %123
  %125 = sub i32 %121, 1
  %126 = mul i32 %121, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %122, 10
  %130 = and i1 %128, %129
  %131 = xor i1 %128, %129
  %132 = or i1 %130, %131
  %133 = or i1 %128, %129
  br i1 %132, label %134, label %247

; <label>:134:                                    ; preds = %120, %247
  %135 = load i32, i32* @x.455
  %136 = load i32, i32* @y.456
  %137 = sub i32 %135, -2010898214
  %138 = sub i32 %137, 1
  %139 = add i32 %138, -2010898214
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = and i1 %143, %144
  %146 = xor i1 %143, %144
  %147 = or i1 %145, %146
  %148 = or i1 %143, %144
  br i1 %147, label %149, label %247

; <label>:149:                                    ; preds = %134
  br label %151

; <label>:150:                                    ; preds = %115
  ret void

; <label>:151:                                    ; preds = %149
  %152 = load i32, i32* @x.455
  %153 = load i32, i32* @y.456
  %154 = sub i32 %152, 672094290
  %155 = sub i32 %154, 1
  %156 = add i32 %155, 672094290
  %157 = sub i32 %152, 1
  %158 = mul i32 %152, %156
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %153, 10
  %162 = and i1 %160, %161
  %163 = xor i1 %160, %161
  %164 = or i1 %162, %163
  %165 = or i1 %160, %161
  br i1 %164, label %166, label %248

; <label>:166:                                    ; preds = %151, %248
  %167 = load i8*, i8** %8, align 8
  %168 = load i32, i32* %9, align 4
  %169 = insertvalue { i8*, i32 } undef, i8* %167, 0
  %170 = insertvalue { i8*, i32 } %169, i32 %168, 1
  %171 = load i32, i32* @x.455
  %172 = load i32, i32* @y.456
  %173 = sub i32 %171, 451812204
  %174 = sub i32 %173, 1
  %175 = add i32 %174, 451812204
  %176 = sub i32 %171, 1
  %177 = mul i32 %171, %175
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %172, 10
  %181 = and i1 %179, %180
  %182 = xor i1 %179, %180
  %183 = or i1 %181, %182
  %184 = or i1 %179, %180
  br i1 %183, label %185, label %248

; <label>:185:                                    ; preds = %166
  resume { i8*, i32 } %170

; <label>:186:                                    ; preds = %116
  %187 = load i32, i32* @x.455
  %188 = load i32, i32* @y.456
  %189 = sub i32 %187, 1453561663
  %190 = sub i32 %189, 1
  %191 = add i32 %190, 1453561663
  %192 = sub i32 %187, 1
  %193 = mul i32 %187, %191
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %188, 10
  %197 = xor i1 %195, true
  %198 = xor i1 %196, true
  %199 = xor i1 true, true
  %200 = and i1 %197, true
  %201 = and i1 %195, %199
  %202 = and i1 %198, true
  %203 = and i1 %196, %199
  %204 = or i1 %200, %201
  %205 = or i1 %202, %203
  %206 = xor i1 %204, %205
  %207 = or i1 %197, %198
  %208 = xor i1 %207, true
  %209 = or i1 true, %199
  %210 = and i1 %208, %209
  %211 = or i1 %206, %210
  %212 = or i1 %195, %196
  br i1 %211, label %213, label %253

; <label>:213:                                    ; preds = %186, %253
  %214 = landingpad { i8*, i32 }
          catch i8* null
  %215 = extractvalue { i8*, i32 } %214, 0
  call void @__clang_call_terminate(i8* %215) #12
  %216 = load i32, i32* @x.455
  %217 = load i32, i32* @y.456
  %218 = sub i32 %216, 523062918
  %219 = sub i32 %218, 1
  %220 = add i32 %219, 523062918
  %221 = sub i32 %216, 1
  %222 = mul i32 %216, %220
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %217, 10
  %226 = xor i1 %224, true
  %227 = xor i1 %225, true
  %228 = xor i1 true, true
  %229 = and i1 %226, true
  %230 = and i1 %224, %228
  %231 = and i1 %227, true
  %232 = and i1 %225, %228
  %233 = or i1 %229, %230
  %234 = or i1 %231, %232
  %235 = xor i1 %233, %234
  %236 = or i1 %226, %227
  %237 = xor i1 %236, true
  %238 = or i1 true, %228
  %239 = and i1 %237, %238
  %240 = or i1 %235, %239
  %241 = or i1 %224, %225
  br i1 %240, label %242, label %253

; <label>:242:                                    ; preds = %213
  unreachable

; <label>:243:                                    ; preds = %68
  unreachable

; <label>:244:                                    ; preds = %32, %18
  %245 = load %"struct.std::pair"**, %"struct.std::pair"*** %7, align 8
  store %"struct.std::pair"* %17, %"struct.std::pair"** %245, align 8
  br label %32

; <label>:246:                                    ; preds = %100, %73
  br label %100

; <label>:247:                                    ; preds = %134, %120
  br label %134

; <label>:248:                                    ; preds = %166, %151
  %249 = load i8*, i8** %8, align 8
  %250 = load i32, i32* %9, align 4
  %251 = insertvalue { i8*, i32 } undef, i8* %249, 0
  %252 = insertvalue { i8*, i32 } %251, i32 %250, 1
  br label %166

; <label>:253:                                    ; preds = %213, %186
  %254 = landingpad { i8*, i32 }
          catch i8* null
  %255 = extractvalue { i8*, i32 } %254, 0
  call void @__clang_call_terminate(i8* %255) #12
  br label %213
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE17_M_deallocate_mapEPPS1_m(%"class.std::_Deque_base"*, %"struct.std::pair"**, i64) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca %"struct.std::pair"**, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::allocator.47", align 1
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store %"struct.std::pair"** %1, %"struct.std::pair"*** %5, align 8
  store i64 %2, i64* %6, align 8
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  call void @_ZNKSt11_Deque_baseISt4pairIiiESaIS1_EE20_M_get_map_allocatorEv(%"class.std::allocator.47"* sret %7, %"class.std::_Deque_base"* %10) #3
  %11 = load %"struct.std::pair"**, %"struct.std::pair"*** %5, align 8
  %12 = load i64, i64* %6, align 8
  invoke void @_ZNSt16allocator_traitsISaIPSt4pairIiiEEE10deallocateERS3_PS2_m(%"class.std::allocator.47"* dereferenceable(1) %7, %"struct.std::pair"** %11, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  call void @_ZNSaIPSt4pairIiiEED2Ev(%"class.std::allocator.47"* %7) #3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          catch i8* null
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %8, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %9, align 4
  call void @_ZNSaIPSt4pairIiiEED2Ev(%"class.std::allocator.47"* %7) #3
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i32, i32* @x.457
  %20 = load i32, i32* @y.458
  %21 = sub i32 0, 1
  %22 = add i32 %19, %21
  %23 = sub i32 %19, 1
  %24 = mul i32 %19, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %20, 10
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  br i1 %30, label %32, label %60

; <label>:32:                                     ; preds = %18, %60
  %33 = load i8*, i8** %8, align 8
  call void @__clang_call_terminate(i8* %33) #12
  %34 = load i32, i32* @x.457
  %35 = load i32, i32* @y.458
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %60

; <label>:59:                                     ; preds = %32
  unreachable

; <label>:60:                                     ; preds = %32, %18
  %61 = load i8*, i8** %8, align 8
  call void @__clang_call_terminate(i8* %61) #12
  br label %32
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorISt4pairIiiERS1_PS1_E11_M_set_nodeEPS3_(%"struct.std::_Deque_iterator"*, %"struct.std::pair"**) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.459
  %6 = load i32, i32* @y.460
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1652942208, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %82
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1652942208, label %18
    i32 -390676342, label %26
    i32 -929589330, label %67
    i32 1351902196, label %68
  ]

; <label>:17:                                     ; preds = %15
  br label %82

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -390676342, i32 1351902196
  store i32 %25, i32* %14
  br label %82

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Deque_iterator"*, align 8
  %28 = alloca %"struct.std::pair"**, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %27, align 8
  store %"struct.std::pair"** %1, %"struct.std::pair"*** %28, align 8
  %29 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %27, align 8
  %30 = load %"struct.std::pair"**, %"struct.std::pair"*** %28, align 8
  %31 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %29, i32 0, i32 3
  store %"struct.std::pair"** %30, %"struct.std::pair"*** %31, align 8
  %32 = load %"struct.std::pair"**, %"struct.std::pair"*** %28, align 8
  %33 = load %"struct.std::pair"*, %"struct.std::pair"** %32, align 8
  %34 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %29, i32 0, i32 1
  store %"struct.std::pair"* %33, %"struct.std::pair"** %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %29, i32 0, i32 1
  %36 = load %"struct.std::pair"*, %"struct.std::pair"** %35, align 8
  %37 = call i64 @_ZNSt15_Deque_iteratorISt4pairIiiERS1_PS1_E14_S_buffer_sizeEv() #3
  %38 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %36, i64 %37
  %39 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %29, i32 0, i32 2
  store %"struct.std::pair"* %38, %"struct.std::pair"** %39, align 8
  %40 = load i32, i32* @x.459
  %41 = load i32, i32* @y.460
  %42 = add i32 %40, 1398334583
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, 1398334583
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -929589330, i32 1351902196
  store i32 %66, i32* %14
  br label %82

; <label>:67:                                     ; preds = %15
  ret void

; <label>:68:                                     ; preds = %15
  %69 = alloca %"struct.std::_Deque_iterator"*, align 8
  %70 = alloca %"struct.std::pair"**, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %69, align 8
  store %"struct.std::pair"** %1, %"struct.std::pair"*** %70, align 8
  %71 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %69, align 8
  %72 = load %"struct.std::pair"**, %"struct.std::pair"*** %70, align 8
  %73 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %71, i32 0, i32 3
  store %"struct.std::pair"** %72, %"struct.std::pair"*** %73, align 8
  %74 = load %"struct.std::pair"**, %"struct.std::pair"*** %70, align 8
  %75 = load %"struct.std::pair"*, %"struct.std::pair"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %71, i32 0, i32 1
  store %"struct.std::pair"* %75, %"struct.std::pair"** %76, align 8
  %77 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %71, i32 0, i32 1
  %78 = load %"struct.std::pair"*, %"struct.std::pair"** %77, align 8
  %79 = call i64 @_ZNSt15_Deque_iteratorISt4pairIiiERS1_PS1_E14_S_buffer_sizeEv() #3
  %80 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %78, i64 %79
  %81 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %71, i32 0, i32 2
  store %"struct.std::pair"* %80, %"struct.std::pair"** %81, align 8
  store i32 -390676342, i32* %14
  br label %82

; <label>:82:                                     ; preds = %68, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt11_Deque_baseISt4pairIiiESaIS1_EE20_M_get_map_allocatorEv(%"class.std::allocator.47"* noalias sret, %"class.std::_Deque_base"*) #4 comdat align 2 {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %3, align 8
  %4 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %5 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNKSt11_Deque_baseISt4pairIiiESaIS1_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %4) #3
  call void @_ZNSaIPSt4pairIiiEEC2IS0_EERKSaIT_E(%"class.std::allocator.47"* %0, %"class.std::allocator.15"* dereferenceable(1) %5) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"** @_ZNSt16allocator_traitsISaIPSt4pairIiiEEE8allocateERS3_m(%"class.std::allocator.47"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.47"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.47"* %0, %"class.std::allocator.47"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.47"*, %"class.std::allocator.47"** %3, align 8
  %6 = bitcast %"class.std::allocator.47"* %5 to %"class.__gnu_cxx::new_allocator.48"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.std::pair"** @_ZN9__gnu_cxx13new_allocatorIPSt4pairIiiEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.48"* %6, i64 %7, i8* null)
  ret %"struct.std::pair"** %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPSt4pairIiiEED2Ev(%"class.std::allocator.47"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.47"*, align 8
  store %"class.std::allocator.47"* %0, %"class.std::allocator.47"** %2, align 8
  %3 = load %"class.std::allocator.47"*, %"class.std::allocator.47"** %2, align 8
  %4 = bitcast %"class.std::allocator.47"* %3 to %"class.__gnu_cxx::new_allocator.48"*
  call void @_ZN9__gnu_cxx13new_allocatorIPSt4pairIiiEED2Ev(%"class.__gnu_cxx::new_allocator.48"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.15"* @_ZNKSt11_Deque_baseISt4pairIiiESaIS1_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %4 to %"class.std::allocator.15"*
  ret %"class.std::allocator.15"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPSt4pairIiiEEC2IS0_EERKSaIT_E(%"class.std::allocator.47"*, %"class.std::allocator.15"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.469
  %6 = load i32, i32* @y.470
  %7 = sub i32 %5, -290086136
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -290086136
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1837473679, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1837473679, label %19
    i32 -176817866, label %39
    i32 -2078122950, label %59
    i32 703423946, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -176817866, i32 703423946
  store i32 %38, i32* %15
  br label %65

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.47"*, align 8
  %41 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.47"* %0, %"class.std::allocator.47"** %40, align 8
  store %"class.std::allocator.15"* %1, %"class.std::allocator.15"** %41, align 8
  %42 = load %"class.std::allocator.47"*, %"class.std::allocator.47"** %40, align 8
  %43 = bitcast %"class.std::allocator.47"* %42 to %"class.__gnu_cxx::new_allocator.48"*
  call void @_ZN9__gnu_cxx13new_allocatorIPSt4pairIiiEEC2Ev(%"class.__gnu_cxx::new_allocator.48"* %43) #3
  %44 = load i32, i32* @x.469
  %45 = load i32, i32* @y.470
  %46 = add i32 %44, -1348688610
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -1348688610
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -2078122950, i32 703423946
  store i32 %58, i32* %15
  br label %65

; <label>:59:                                     ; preds = %16
  ret void

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::allocator.47"*, align 8
  %62 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.47"* %0, %"class.std::allocator.47"** %61, align 8
  store %"class.std::allocator.15"* %1, %"class.std::allocator.15"** %62, align 8
  %63 = load %"class.std::allocator.47"*, %"class.std::allocator.47"** %61, align 8
  %64 = bitcast %"class.std::allocator.47"* %63 to %"class.__gnu_cxx::new_allocator.48"*
  call void @_ZN9__gnu_cxx13new_allocatorIPSt4pairIiiEEC2Ev(%"class.__gnu_cxx::new_allocator.48"* %64) #3
  store i32 -176817866, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPSt4pairIiiEEC2Ev(%"class.__gnu_cxx::new_allocator.48"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.48"*, align 8
  store %"class.__gnu_cxx::new_allocator.48"* %0, %"class.__gnu_cxx::new_allocator.48"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.48"*, %"class.__gnu_cxx::new_allocator.48"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"** @_ZN9__gnu_cxx13new_allocatorIPSt4pairIiiEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.48"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.473
  %9 = load i32, i32* @y.474
  %10 = add i32 %8, 1055059431
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, 1055059431
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1113919745, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %117
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1113919745, label %22
    i32 -740947630, label %30
    i32 -1776006630, label %55
    i32 -1423171498, label %58
    i32 1872196951, label %86
    i32 726785332, label %101
    i32 -1293064597, label %102
    i32 913797059, label %108
    i32 -70507200, label %116
  ]

; <label>:21:                                     ; preds = %19
  br label %117

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -740947630, i32 913797059
  store i32 %29, i32* %18
  br label %117

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.__gnu_cxx::new_allocator.48"*, align 8
  %32 = alloca i64, align 8
  store i64* %32, i64** %5
  %33 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.48"* %0, %"class.__gnu_cxx::new_allocator.48"** %31, align 8
  %34 = load volatile i64*, i64** %5
  store i64 %1, i64* %34, align 8
  store i8* %2, i8** %33, align 8
  %35 = load %"class.__gnu_cxx::new_allocator.48"*, %"class.__gnu_cxx::new_allocator.48"** %31, align 8
  %36 = load volatile i64*, i64** %5
  %37 = load i64, i64* %36, align 8
  %38 = call i64 @_ZNK9__gnu_cxx13new_allocatorIPSt4pairIiiEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.48"* %35) #3
  %39 = icmp ugt i64 %37, %38
  store i1 %39, i1* %4
  %40 = load i32, i32* @x.473
  %41 = load i32, i32* @y.474
  %42 = add i32 %40, -1941473096
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -1941473096
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -1776006630, i32 913797059
  store i32 %54, i32* %18
  br label %117

; <label>:55:                                     ; preds = %19
  %56 = load volatile i1, i1* %4
  %57 = select i1 %56, i32 -1423171498, i32 -1293064597
  store i32 %57, i32* %18
  br label %117

; <label>:58:                                     ; preds = %19
  %59 = load i32, i32* @x.473
  %60 = load i32, i32* @y.474
  %61 = sub i32 %59, 759384202
  %62 = sub i32 %61, 1
  %63 = add i32 %62, 759384202
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 false, true
  %72 = and i1 %69, false
  %73 = and i1 %67, %71
  %74 = and i1 %70, false
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 false, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  %85 = select i1 %83, i32 1872196951, i32 -70507200
  store i32 %85, i32* %18
  br label %117

; <label>:86:                                     ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #15
  %87 = load i32, i32* @x.473
  %88 = load i32, i32* @y.474
  %89 = sub i32 0, 1
  %90 = add i32 %87, %89
  %91 = sub i32 %87, 1
  %92 = mul i32 %87, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %88, 10
  %96 = and i1 %94, %95
  %97 = xor i1 %94, %95
  %98 = or i1 %96, %97
  %99 = or i1 %94, %95
  %100 = select i1 %98, i32 726785332, i32 -70507200
  store i32 %100, i32* %18
  br label %117

; <label>:101:                                    ; preds = %19
  unreachable

; <label>:102:                                    ; preds = %19
  %103 = load volatile i64*, i64** %5
  %104 = load i64, i64* %103, align 8
  %105 = mul i64 %104, 8
  %106 = call i8* @_Znwm(i64 %105)
  %107 = bitcast i8* %106 to %"struct.std::pair"**
  ret %"struct.std::pair"** %107

; <label>:108:                                    ; preds = %19
  %109 = alloca %"class.__gnu_cxx::new_allocator.48"*, align 8
  %110 = alloca i64, align 8
  %111 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.48"* %0, %"class.__gnu_cxx::new_allocator.48"** %109, align 8
  store i64 %1, i64* %110, align 8
  store i8* %2, i8** %111, align 8
  %112 = load %"class.__gnu_cxx::new_allocator.48"*, %"class.__gnu_cxx::new_allocator.48"** %109, align 8
  %113 = load i64, i64* %110, align 8
  %114 = call i64 @_ZNK9__gnu_cxx13new_allocatorIPSt4pairIiiEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.48"* %112) #3
  %115 = icmp ugt i64 %113, %114
  store i32 -740947630, i32* %18
  br label %117

; <label>:116:                                    ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #15
  store i32 1872196951, i32* %18
  br label %117

; <label>:117:                                    ; preds = %116, %108, %86, %58, %55, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIPSt4pairIiiEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.48"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.48"*, align 8
  store %"class.__gnu_cxx::new_allocator.48"* %0, %"class.__gnu_cxx::new_allocator.48"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.48"*, %"class.__gnu_cxx::new_allocator.48"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPSt4pairIiiEED2Ev(%"class.__gnu_cxx::new_allocator.48"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.48"*, align 8
  store %"class.__gnu_cxx::new_allocator.48"* %0, %"class.__gnu_cxx::new_allocator.48"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.48"*, %"class.__gnu_cxx::new_allocator.48"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE16_M_allocate_nodeEv(%"class.std::_Deque_base"*) #0 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %4 to %"class.std::allocator.15"*
  %6 = call i64 @_ZSt16__deque_buf_sizem(i64 8)
  %7 = call %"struct.std::pair"* @_ZNSt16allocator_traitsISaISt4pairIiiEEE8allocateERS2_m(%"class.std::allocator.15"* dereferenceable(1) %5, i64 %6)
  ret %"struct.std::pair"* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE16_M_destroy_nodesEPPS1_S5_(%"class.std::_Deque_base"*, %"struct.std::pair"**, %"struct.std::pair"**) #4 comdat align 2 {
  %4 = alloca %"class.std::_Deque_base"*
  %5 = alloca %"struct.std::pair"***
  %6 = alloca %"struct.std::pair"***
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.481
  %10 = load i32, i32* @y.482
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 1799673429, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %79
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1799673429, label %22
    i32 1870867399, label %30
    i32 -167281797, label %53
    i32 -251317498, label %54
    i32 -1030130279, label %61
    i32 -232351993, label %66
    i32 621839081, label %71
    i32 1238037649, label %72
  ]

; <label>:21:                                     ; preds = %19
  br label %79

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %8
  %24 = load volatile i1, i1* %7
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 1870867399, i32 1238037649
  store i32 %29, i32* %18
  br label %79

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::_Deque_base"*, align 8
  %32 = alloca %"struct.std::pair"**, align 8
  %33 = alloca %"struct.std::pair"**, align 8
  store %"struct.std::pair"*** %33, %"struct.std::pair"**** %6
  %34 = alloca %"struct.std::pair"**, align 8
  store %"struct.std::pair"*** %34, %"struct.std::pair"**** %5
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %31, align 8
  store %"struct.std::pair"** %1, %"struct.std::pair"*** %32, align 8
  %35 = load volatile %"struct.std::pair"***, %"struct.std::pair"**** %6
  store %"struct.std::pair"** %2, %"struct.std::pair"*** %35, align 8
  %36 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %31, align 8
  store %"class.std::_Deque_base"* %36, %"class.std::_Deque_base"** %4
  %37 = load %"struct.std::pair"**, %"struct.std::pair"*** %32, align 8
  %38 = load volatile %"struct.std::pair"***, %"struct.std::pair"**** %5
  store %"struct.std::pair"** %37, %"struct.std::pair"*** %38, align 8
  %39 = load i32, i32* @x.481
  %40 = load i32, i32* @y.482
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -167281797, i32 1238037649
  store i32 %52, i32* %18
  br label %79

; <label>:53:                                     ; preds = %19
  store i32 -251317498, i32* %18
  br label %79

; <label>:54:                                     ; preds = %19
  %55 = load volatile %"struct.std::pair"***, %"struct.std::pair"**** %5
  %56 = load %"struct.std::pair"**, %"struct.std::pair"*** %55, align 8
  %57 = load volatile %"struct.std::pair"***, %"struct.std::pair"**** %6
  %58 = load %"struct.std::pair"**, %"struct.std::pair"*** %57, align 8
  %59 = icmp ult %"struct.std::pair"** %56, %58
  %60 = select i1 %59, i32 -1030130279, i32 621839081
  store i32 %60, i32* %18
  br label %79

; <label>:61:                                     ; preds = %19
  %62 = load volatile %"struct.std::pair"***, %"struct.std::pair"**** %5
  %63 = load %"struct.std::pair"**, %"struct.std::pair"*** %62, align 8
  %64 = load %"struct.std::pair"*, %"struct.std::pair"** %63, align 8
  %65 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4
  call void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE18_M_deallocate_nodeEPS1_(%"class.std::_Deque_base"* %65, %"struct.std::pair"* %64) #3
  store i32 -232351993, i32* %18
  br label %79

; <label>:66:                                     ; preds = %19
  %67 = load volatile %"struct.std::pair"***, %"struct.std::pair"**** %5
  %68 = load %"struct.std::pair"**, %"struct.std::pair"*** %67, align 8
  %69 = getelementptr inbounds %"struct.std::pair"*, %"struct.std::pair"** %68, i32 1
  %70 = load volatile %"struct.std::pair"***, %"struct.std::pair"**** %5
  store %"struct.std::pair"** %69, %"struct.std::pair"*** %70, align 8
  store i32 -251317498, i32* %18
  br label %79

; <label>:71:                                     ; preds = %19
  ret void

; <label>:72:                                     ; preds = %19
  %73 = alloca %"class.std::_Deque_base"*, align 8
  %74 = alloca %"struct.std::pair"**, align 8
  %75 = alloca %"struct.std::pair"**, align 8
  %76 = alloca %"struct.std::pair"**, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %73, align 8
  store %"struct.std::pair"** %1, %"struct.std::pair"*** %74, align 8
  store %"struct.std::pair"** %2, %"struct.std::pair"*** %75, align 8
  %77 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %73, align 8
  %78 = load %"struct.std::pair"**, %"struct.std::pair"*** %74, align 8
  store %"struct.std::pair"** %78, %"struct.std::pair"*** %76, align 8
  store i32 1870867399, i32* %18
  br label %79

; <label>:79:                                     ; preds = %72, %66, %61, %54, %53, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZNSt16allocator_traitsISaISt4pairIiiEEE8allocateERS2_m(%"class.std::allocator.15"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.15"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %3, align 8
  %6 = bitcast %"class.std::allocator.15"* %5 to %"class.__gnu_cxx::new_allocator.16"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.std::pair"* @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.16"* %6, i64 %7, i8* null)
  ret %"struct.std::pair"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.16"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt4pairIiiEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -246836158, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %72
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -246836158, label %16
    i32 -1158133958, label %21
    i32 -1875390565, label %49
    i32 -122001519, label %65
    i32 2004464955, label %66
    i32 -1088295465, label %71
  ]

; <label>:15:                                     ; preds = %13
  br label %72

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -1158133958, i32 2004464955
  store i32 %20, i32* %12
  br label %72

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.485
  %23 = load i32, i32* @y.486
  %24 = sub i32 %22, -122636181
  %25 = sub i32 %24, 1
  %26 = add i32 %25, -122636181
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 false, true
  %35 = and i1 %32, false
  %36 = and i1 %30, %34
  %37 = and i1 %33, false
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 false, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 -1875390565, i32 -1088295465
  store i32 %48, i32* %12
  br label %72

; <label>:49:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #15
  %50 = load i32, i32* @x.485
  %51 = load i32, i32* @y.486
  %52 = add i32 %50, 540326680
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 540326680
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -122001519, i32 -1088295465
  store i32 %64, i32* %12
  br label %72

; <label>:65:                                     ; preds = %13
  unreachable

; <label>:66:                                     ; preds = %13
  %67 = load i64, i64* %7, align 8
  %68 = mul i64 %67, 8
  %69 = call i8* @_Znwm(i64 %68)
  %70 = bitcast i8* %69 to %"struct.std::pair"*
  ret %"struct.std::pair"* %70

; <label>:71:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #15
  store i32 -1875390565, i32* %12
  br label %72

; <label>:72:                                     ; preds = %71, %49, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt4pairIiiEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE18_M_deallocate_nodeEPS1_(%"class.std::_Deque_base"*, %"struct.std::pair"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %6 to %"class.std::allocator.15"*
  %8 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %9 = invoke i64 @_ZSt16__deque_buf_sizem(i64 8)
          to label %10 unwind label %41

; <label>:10:                                     ; preds = %2
  invoke void @_ZNSt16allocator_traitsISaISt4pairIiiEEE10deallocateERS2_PS1_m(%"class.std::allocator.15"* dereferenceable(1) %7, %"struct.std::pair"* %8, i64 %9)
          to label %11 unwind label %41

; <label>:11:                                     ; preds = %10
  %12 = load i32, i32* @x.489
  %13 = load i32, i32* @y.490
  %14 = sub i32 0, 1
  %15 = add i32 %12, %14
  %16 = sub i32 %12, 1
  %17 = mul i32 %12, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %13, 10
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  br i1 %23, label %25, label %44

; <label>:25:                                     ; preds = %11, %44
  %26 = load i32, i32* @x.489
  %27 = load i32, i32* @y.490
  %28 = add i32 %26, 1471501633
  %29 = sub i32 %28, 1
  %30 = sub i32 %29, 1471501633
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  br i1 %38, label %40, label %44

; <label>:40:                                     ; preds = %25
  ret void

; <label>:41:                                     ; preds = %10, %2
  %42 = landingpad { i8*, i32 }
          catch i8* null
  %43 = extractvalue { i8*, i32 } %42, 0
  call void @__clang_call_terminate(i8* %43) #12
  unreachable

; <label>:44:                                     ; preds = %25, %11
  br label %25
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIiiEEE10deallocateERS2_PS1_m(%"class.std::allocator.15"* dereferenceable(1), %"struct.std::pair"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.15"*, align 8
  %5 = alloca %"struct.std::pair"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %4, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %4, align 8
  %8 = bitcast %"class.std::allocator.15"* %7 to %"class.__gnu_cxx::new_allocator.16"*
  %9 = load %"struct.std::pair"*, %"struct.std::pair"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.16"* %8, %"struct.std::pair"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.16"*, %"struct.std::pair"*, i64) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.493
  %7 = load i32, i32* @y.494
  %8 = add i32 %6, 1343449009
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1343449009
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 297640015, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %57
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 297640015, label %20
    i32 -1269057169, label %28
    i32 -1849895624, label %49
    i32 400492507, label %50
  ]

; <label>:19:                                     ; preds = %17
  br label %57

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1269057169, i32 400492507
  store i32 %27, i32* %16
  br label %57

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %30 = alloca %"struct.std::pair"*, align 8
  %31 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %29, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %29, align 8
  %33 = load %"struct.std::pair"*, %"struct.std::pair"** %30, align 8
  %34 = bitcast %"struct.std::pair"* %33 to i8*
  call void @_ZdlPv(i8* %34) #3
  %35 = load i32, i32* @x.493
  %36 = load i32, i32* @y.494
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -1849895624, i32 400492507
  store i32 %48, i32* %16
  br label %57

; <label>:49:                                     ; preds = %17
  ret void

; <label>:50:                                     ; preds = %17
  %51 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %52 = alloca %"struct.std::pair"*, align 8
  %53 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %51, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %52, align 8
  store i64 %2, i64* %53, align 8
  %54 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %51, align 8
  %55 = load %"struct.std::pair"*, %"struct.std::pair"** %52, align 8
  %56 = bitcast %"struct.std::pair"* %55 to i8*
  call void @_ZdlPv(i8* %56) #3
  store i32 -1269057169, i32* %16
  br label %57

; <label>:57:                                     ; preds = %50, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIPSt4pairIiiEEE10deallocateERS3_PS2_m(%"class.std::allocator.47"* dereferenceable(1), %"struct.std::pair"**, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.47"*, align 8
  %5 = alloca %"struct.std::pair"**, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.47"* %0, %"class.std::allocator.47"** %4, align 8
  store %"struct.std::pair"** %1, %"struct.std::pair"*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.47"*, %"class.std::allocator.47"** %4, align 8
  %8 = bitcast %"class.std::allocator.47"* %7 to %"class.__gnu_cxx::new_allocator.48"*
  %9 = load %"struct.std::pair"**, %"struct.std::pair"*** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPSt4pairIiiEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.48"* %8, %"struct.std::pair"** %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPSt4pairIiiEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.48"*, %"struct.std::pair"**, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.48"*, align 8
  %5 = alloca %"struct.std::pair"**, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.48"* %0, %"class.__gnu_cxx::new_allocator.48"** %4, align 8
  store %"struct.std::pair"** %1, %"struct.std::pair"*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.48"*, %"class.__gnu_cxx::new_allocator.48"** %4, align 8
  %8 = load %"struct.std::pair"**, %"struct.std::pair"*** %5, align 8
  %9 = bitcast %"struct.std::pair"** %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt15_Deque_iteratorISt4pairIiiERS1_PS1_E14_S_buffer_sizeEv() #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = invoke i64 @_ZSt16__deque_buf_sizem(i64 8)
          to label %2 unwind label %3

; <label>:2:                                      ; preds = %0
  ret i64 %1

; <label>:3:                                      ; preds = %0
  %4 = load i32, i32* @x.499
  %5 = load i32, i32* @y.500
  %6 = add i32 %4, 1871459600
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1871459600
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %35

; <label>:18:                                     ; preds = %3, %35
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  call void @__clang_call_terminate(i8* %20) #12
  %21 = load i32, i32* @x.499
  %22 = load i32, i32* @y.500
  %23 = sub i32 0, 1
  %24 = add i32 %21, %23
  %25 = sub i32 %21, 1
  %26 = mul i32 %21, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %22, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  br i1 %32, label %34, label %35

; <label>:34:                                     ; preds = %18
  unreachable

; <label>:35:                                     ; preds = %18, %3
  %36 = landingpad { i8*, i32 }
          catch i8* null
  %37 = extractvalue { i8*, i32 } %36, 0
  call void @__clang_call_terminate(i8* %37) #12
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt4pairIiiEED2Ev(%"class.std::allocator.15"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %2, align 8
  %3 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %2, align 8
  %4 = bitcast %"class.std::allocator.15"* %3 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEED2Ev(%"class.__gnu_cxx::new_allocator.16"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEED2Ev(%"class.__gnu_cxx::new_allocator.16"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeISt4pairIiiESaIS1_EE15_M_destroy_dataESt15_Deque_iteratorIS1_RS1_PS1_ES7_RKS2_(%"class.std::deque"*, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*, %"class.std::allocator.15"* dereferenceable(1)) #4 comdat align 2 {
  %5 = alloca %"class.std::deque"*, align 8
  %6 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %5, align 8
  store %"class.std::allocator.15"* %3, %"class.std::allocator.15"** %6, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %5, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeISt4pairIiiESaIS1_EE5beginEv(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque"*) #4 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %3, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %5 = bitcast %"class.std::deque"* %4 to %"class.std::_Deque_base"*
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %6, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorISt4pairIiiERS1_PS1_EC2ERKS4_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeISt4pairIiiESaIS1_EE3endEv(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque"*) #4 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %3, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %5 = bitcast %"class.std::deque"* %4 to %"class.std::_Deque_base"*
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %6, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorISt4pairIiiERS1_PS1_EC2ERKS4_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.15"* @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %4 to %"class.std::allocator.15"*
  ret %"class.std::allocator.15"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EED2Ev(%"class.std::_Deque_base"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::pair"**
  %3 = alloca %"class.std::_Deque_base"*
  %4 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  %5 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  store %"class.std::_Deque_base"* %5, %"class.std::_Deque_base"** %3
  %6 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %7 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %7, i32 0, i32 0
  %9 = load %"struct.std::pair"**, %"struct.std::pair"*** %8, align 8
  store %"struct.std::pair"** %9, %"struct.std::pair"*** %2
  %10 = alloca i32
  store i32 463450314, i32* %10
  br label %11

; <label>:11:                                     ; preds = %1, %166
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 463450314, label %14
    i32 -584263453, label %18
    i32 1248578741, label %45
    i32 -1237970481, label %94
    i32 1968861101, label %95
    i32 -1723362325, label %110
    i32 1173180645, label %140
    i32 99160716, label %141
    i32 -1107246952, label %163
  ]

; <label>:13:                                     ; preds = %11
  br label %166

; <label>:14:                                     ; preds = %11
  %15 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %2
  %16 = icmp ne %"struct.std::pair"** %15, null
  %17 = select i1 %16, i32 -584263453, i32 1968861101
  store i32 %17, i32* %10
  br label %166

; <label>:18:                                     ; preds = %11
  %19 = load i32, i32* @x.513
  %20 = load i32, i32* @y.514
  %21 = sub i32 0, 1
  %22 = add i32 %19, %21
  %23 = sub i32 %19, 1
  %24 = mul i32 %19, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %20, 10
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 true, true
  %31 = and i1 %28, true
  %32 = and i1 %26, %30
  %33 = and i1 %29, true
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 true, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  %44 = select i1 %42, i32 1248578741, i32 99160716
  store i32 %44, i32* %10
  br label %166

; <label>:45:                                     ; preds = %11
  %46 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %47 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %46, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %47, i32 0, i32 2
  %49 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %48, i32 0, i32 3
  %50 = load %"struct.std::pair"**, %"struct.std::pair"*** %49, align 8
  %51 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %52 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %51, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %52, i32 0, i32 3
  %54 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %53, i32 0, i32 3
  %55 = load %"struct.std::pair"**, %"struct.std::pair"*** %54, align 8
  %56 = getelementptr inbounds %"struct.std::pair"*, %"struct.std::pair"** %55, i64 1
  %57 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE16_M_destroy_nodesEPPS1_S5_(%"class.std::_Deque_base"* %57, %"struct.std::pair"** %50, %"struct.std::pair"** %56) #3
  %58 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %59 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %58, i32 0, i32 0
  %60 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %59, i32 0, i32 0
  %61 = load %"struct.std::pair"**, %"struct.std::pair"*** %60, align 8
  %62 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %63 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %62, i32 0, i32 0
  %64 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %63, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE17_M_deallocate_mapEPPS1_m(%"class.std::_Deque_base"* %66, %"struct.std::pair"** %61, i64 %65) #3
  %67 = load i32, i32* @x.513
  %68 = load i32, i32* @y.514
  %69 = sub i32 %67, 960036100
  %70 = sub i32 %69, 1
  %71 = add i32 %70, 960036100
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = xor i1 %75, true
  %78 = xor i1 %76, true
  %79 = xor i1 true, true
  %80 = and i1 %77, true
  %81 = and i1 %75, %79
  %82 = and i1 %78, true
  %83 = and i1 %76, %79
  %84 = or i1 %80, %81
  %85 = or i1 %82, %83
  %86 = xor i1 %84, %85
  %87 = or i1 %77, %78
  %88 = xor i1 %87, true
  %89 = or i1 true, %79
  %90 = and i1 %88, %89
  %91 = or i1 %86, %90
  %92 = or i1 %75, %76
  %93 = select i1 %91, i32 -1237970481, i32 99160716
  store i32 %93, i32* %10
  br label %166

; <label>:94:                                     ; preds = %11
  store i32 1968861101, i32* %10
  br label %166

; <label>:95:                                     ; preds = %11
  %96 = load i32, i32* @x.513
  %97 = load i32, i32* @y.514
  %98 = sub i32 0, 1
  %99 = add i32 %96, %98
  %100 = sub i32 %96, 1
  %101 = mul i32 %96, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %97, 10
  %105 = and i1 %103, %104
  %106 = xor i1 %103, %104
  %107 = or i1 %105, %106
  %108 = or i1 %103, %104
  %109 = select i1 %107, i32 -1723362325, i32 -1107246952
  store i32 %109, i32* %10
  br label %166

; <label>:110:                                    ; preds = %11
  %111 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %112 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %111, i32 0, i32 0
  call void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE11_Deque_implD2Ev(%"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %112) #3
  %113 = load i32, i32* @x.513
  %114 = load i32, i32* @y.514
  %115 = add i32 %113, 1352086269
  %116 = sub i32 %115, 1
  %117 = sub i32 %116, 1352086269
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = xor i1 %121, true
  %124 = xor i1 %122, true
  %125 = xor i1 true, true
  %126 = and i1 %123, true
  %127 = and i1 %121, %125
  %128 = and i1 %124, true
  %129 = and i1 %122, %125
  %130 = or i1 %126, %127
  %131 = or i1 %128, %129
  %132 = xor i1 %130, %131
  %133 = or i1 %123, %124
  %134 = xor i1 %133, true
  %135 = or i1 true, %125
  %136 = and i1 %134, %135
  %137 = or i1 %132, %136
  %138 = or i1 %121, %122
  %139 = select i1 %137, i32 1173180645, i32 -1107246952
  store i32 %139, i32* %10
  br label %166

; <label>:140:                                    ; preds = %11
  ret void

; <label>:141:                                    ; preds = %11
  %142 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %143 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %142, i32 0, i32 0
  %144 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %143, i32 0, i32 2
  %145 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %144, i32 0, i32 3
  %146 = load %"struct.std::pair"**, %"struct.std::pair"*** %145, align 8
  %147 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %148 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %147, i32 0, i32 0
  %149 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %148, i32 0, i32 3
  %150 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %149, i32 0, i32 3
  %151 = load %"struct.std::pair"**, %"struct.std::pair"*** %150, align 8
  %152 = getelementptr inbounds %"struct.std::pair"*, %"struct.std::pair"** %151, i64 1
  %153 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE16_M_destroy_nodesEPPS1_S5_(%"class.std::_Deque_base"* %153, %"struct.std::pair"** %146, %"struct.std::pair"** %152) #3
  %154 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %155 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %154, i32 0, i32 0
  %156 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %155, i32 0, i32 0
  %157 = load %"struct.std::pair"**, %"struct.std::pair"*** %156, align 8
  %158 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %159 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %158, i32 0, i32 0
  %160 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %159, i32 0, i32 1
  %161 = load i64, i64* %160, align 8
  %162 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE17_M_deallocate_mapEPPS1_m(%"class.std::_Deque_base"* %162, %"struct.std::pair"** %157, i64 %161) #3
  store i32 1248578741, i32* %10
  br label %166

; <label>:163:                                    ; preds = %11
  %164 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %165 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %164, i32 0, i32 0
  call void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE11_Deque_implD2Ev(%"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %165) #3
  store i32 -1723362325, i32* %10
  br label %166

; <label>:166:                                    ; preds = %163, %141, %110, %95, %94, %45, %18, %14, %13
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorISt4pairIiiERS1_PS1_EC2ERKS4_(%"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"* dereferenceable(32)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.515
  %6 = load i32, i32* @y.516
  %7 = sub i32 %5, 1498190406
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1498190406
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1023205177, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %95
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1023205177, label %19
    i32 -36636903, label %39
    i32 -1983743922, label %74
    i32 -1897565583, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %95

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -36636903, i32 -1897565583
  store i32 %38, i32* %15
  br label %95

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Deque_iterator"*, align 8
  %41 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %40, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %41, align 8
  %42 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %40, align 8
  %43 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %42, i32 0, i32 0
  %44 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %41, align 8
  %45 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %44, i32 0, i32 0
  %46 = load %"struct.std::pair"*, %"struct.std::pair"** %45, align 8
  store %"struct.std::pair"* %46, %"struct.std::pair"** %43, align 8
  %47 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %42, i32 0, i32 1
  %48 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %41, align 8
  %49 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %48, i32 0, i32 1
  %50 = load %"struct.std::pair"*, %"struct.std::pair"** %49, align 8
  store %"struct.std::pair"* %50, %"struct.std::pair"** %47, align 8
  %51 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %42, i32 0, i32 2
  %52 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %41, align 8
  %53 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %52, i32 0, i32 2
  %54 = load %"struct.std::pair"*, %"struct.std::pair"** %53, align 8
  store %"struct.std::pair"* %54, %"struct.std::pair"** %51, align 8
  %55 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %42, i32 0, i32 3
  %56 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %41, align 8
  %57 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %56, i32 0, i32 3
  %58 = load %"struct.std::pair"**, %"struct.std::pair"*** %57, align 8
  store %"struct.std::pair"** %58, %"struct.std::pair"*** %55, align 8
  %59 = load i32, i32* @x.515
  %60 = load i32, i32* @y.516
  %61 = add i32 %59, -1062958195
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, -1062958195
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  %73 = select i1 %71, i32 -1983743922, i32 -1897565583
  store i32 %73, i32* %15
  br label %95

; <label>:74:                                     ; preds = %16
  ret void

; <label>:75:                                     ; preds = %16
  %76 = alloca %"struct.std::_Deque_iterator"*, align 8
  %77 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %76, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %77, align 8
  %78 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %76, align 8
  %79 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %78, i32 0, i32 0
  %80 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %77, align 8
  %81 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %80, i32 0, i32 0
  %82 = load %"struct.std::pair"*, %"struct.std::pair"** %81, align 8
  store %"struct.std::pair"* %82, %"struct.std::pair"** %79, align 8
  %83 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %78, i32 0, i32 1
  %84 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %77, align 8
  %85 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %84, i32 0, i32 1
  %86 = load %"struct.std::pair"*, %"struct.std::pair"** %85, align 8
  store %"struct.std::pair"* %86, %"struct.std::pair"** %83, align 8
  %87 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %78, i32 0, i32 2
  %88 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %77, align 8
  %89 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %88, i32 0, i32 2
  %90 = load %"struct.std::pair"*, %"struct.std::pair"** %89, align 8
  store %"struct.std::pair"* %90, %"struct.std::pair"** %87, align 8
  %91 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %78, i32 0, i32 3
  %92 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %77, align 8
  %93 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %92, i32 0, i32 3
  %94 = load %"struct.std::pair"**, %"struct.std::pair"*** %93, align 8
  store %"struct.std::pair"** %94, %"struct.std::pair"*** %91, align 8
  store i32 -36636903, i32* %15
  br label %95

; <label>:95:                                     ; preds = %75, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeISt4pairIiiESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::deque"* dereferenceable(80)) #4 comdat {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  ret %"class.std::deque"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeISt4pairIiiESaIS1_EEC2EOS3_(%"class.std::deque"*, %"class.std::deque"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %4, align 8
  %5 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %6 = bitcast %"class.std::deque"* %5 to %"class.std::_Deque_base"*
  %7 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %8 = call dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeISt4pairIiiESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::deque"* dereferenceable(80) %7) #3
  %9 = bitcast %"class.std::deque"* %8 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EEC2EOS3_(%"class.std::_Deque_base"* %6, %"class.std::_Deque_base"* dereferenceable(80) %9)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EEC2EOS3_(%"class.std::_Deque_base"*, %"class.std::_Deque_base"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.521
  %6 = load i32, i32* @y.522
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1752773465, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %83
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1752773465, label %18
    i32 -1905343182, label %38
    i32 1649239443, label %73
    i32 -684648101, label %74
  ]

; <label>:17:                                     ; preds = %15
  br label %83

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1905343182, i32 -684648101
  store i32 %37, i32* %14
  br label %83

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::_Deque_base"*, align 8
  %40 = alloca %"class.std::_Deque_base"*, align 8
  %41 = alloca %"struct.std::integral_constant", align 1
  %42 = alloca %"struct.__gnu_cxx::__allocator_always_compares_equal", align 1
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %39, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %40, align 8
  %43 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %39, align 8
  %44 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %40, align 8
  %45 = call dereferenceable(80) %"class.std::_Deque_base"* @_ZSt4moveIRSt11_Deque_baseISt4pairIiiESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::_Deque_base"* dereferenceable(80) %44) #3
  %46 = bitcast %"struct.__gnu_cxx::__allocator_always_compares_equal"* %42 to %"struct.std::integral_constant"*
  call void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EEC2EOS3_St17integral_constantIbLb1EE(%"class.std::_Deque_base"* %43, %"class.std::_Deque_base"* dereferenceable(80) %45)
  %47 = load i32, i32* @x.521
  %48 = load i32, i32* @y.522
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 1649239443, i32 -684648101
  store i32 %72, i32* %14
  br label %83

; <label>:73:                                     ; preds = %15
  ret void

; <label>:74:                                     ; preds = %15
  %75 = alloca %"class.std::_Deque_base"*, align 8
  %76 = alloca %"class.std::_Deque_base"*, align 8
  %77 = alloca %"struct.std::integral_constant", align 1
  %78 = alloca %"struct.__gnu_cxx::__allocator_always_compares_equal", align 1
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %75, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %76, align 8
  %79 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %75, align 8
  %80 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %76, align 8
  %81 = call dereferenceable(80) %"class.std::_Deque_base"* @_ZSt4moveIRSt11_Deque_baseISt4pairIiiESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::_Deque_base"* dereferenceable(80) %80) #3
  %82 = bitcast %"struct.__gnu_cxx::__allocator_always_compares_equal"* %78 to %"struct.std::integral_constant"*
  call void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EEC2EOS3_St17integral_constantIbLb1EE(%"class.std::_Deque_base"* %79, %"class.std::_Deque_base"* dereferenceable(80) %81)
  store i32 -1905343182, i32* %14
  br label %83

; <label>:83:                                     ; preds = %74, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::_Deque_base"* @_ZSt4moveIRSt11_Deque_baseISt4pairIiiESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::_Deque_base"* dereferenceable(80)) #4 comdat {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  ret %"class.std::_Deque_base"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EEC2EOS3_St17integral_constantIbLb1EE(%"class.std::_Deque_base"*, %"class.std::_Deque_base"* dereferenceable(80)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca %"class.std::_Deque_base"*, align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %5, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %9 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %8, i32 0, i32 0
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %11 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %10) #3
  %12 = call dereferenceable(1) %"class.std::allocator.15"* @_ZSt4moveIRSaISt4pairIiiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.15"* dereferenceable(1) %11) #3
  call void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE11_Deque_implC2EOS2_(%"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %9, %"class.std::allocator.15"* dereferenceable(1) %12) #3
  invoke void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE17_M_initialize_mapEm(%"class.std::_Deque_base"* %8, i64 0)
          to label %13 unwind label %53

; <label>:13:                                     ; preds = %2
  %14 = load i32, i32* @x.525
  %15 = load i32, i32* @y.526
  %16 = sub i32 %14, 777765119
  %17 = sub i32 %16, 1
  %18 = add i32 %17, 777765119
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  br i1 %26, label %28, label %63

; <label>:28:                                     ; preds = %13, %63
  %29 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %30 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %30, i32 0, i32 0
  %32 = load %"struct.std::pair"**, %"struct.std::pair"*** %31, align 8
  %33 = icmp ne %"struct.std::pair"** %32, null
  %34 = load i32, i32* @x.525
  %35 = load i32, i32* @y.526
  %36 = sub i32 %34, 1535838384
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 1535838384
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  br i1 %46, label %48, label %63

; <label>:48:                                     ; preds = %28
  br i1 %33, label %49, label %57

; <label>:49:                                     ; preds = %48
  %50 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %8, i32 0, i32 0
  %51 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %52 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %51, i32 0, i32 0
  call void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE11_Deque_impl12_M_swap_dataERS4_(%"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %50, %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* dereferenceable(80) %52) #3
  br label %57

; <label>:53:                                     ; preds = %2
  %54 = landingpad { i8*, i32 }
          cleanup
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %6, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %7, align 4
  call void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE11_Deque_implD2Ev(%"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %9) #3
  br label %58

; <label>:57:                                     ; preds = %49, %48
  ret void

; <label>:58:                                     ; preds = %53
  %59 = load i8*, i8** %6, align 8
  %60 = load i32, i32* %7, align 4
  %61 = insertvalue { i8*, i32 } undef, i8* %59, 0
  %62 = insertvalue { i8*, i32 } %61, i32 %60, 1
  resume { i8*, i32 } %62

; <label>:63:                                     ; preds = %28, %13
  %64 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %65 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %64, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %65, i32 0, i32 0
  %67 = load %"struct.std::pair"**, %"struct.std::pair"*** %66, align 8
  %68 = icmp ne %"struct.std::pair"** %67, null
  br label %28
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.15"* @_ZSt4moveIRSaISt4pairIiiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.15"* dereferenceable(1)) #4 comdat {
  %2 = alloca %"class.std::allocator.15"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.527
  %6 = load i32, i32* @y.528
  %7 = sub i32 %5, -620509091
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -620509091
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -401810831, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -401810831, label %19
    i32 1198780225, label %27
    i32 1440262009, label %57
    i32 1841557792, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1198780225, i32 1841557792
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %28, align 8
  %29 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %28, align 8
  store %"class.std::allocator.15"* %29, %"class.std::allocator.15"** %2
  %30 = load i32, i32* @x.527
  %31 = load i32, i32* @y.528
  %32 = add i32 %30, -429395803
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -429395803
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 1440262009, i32 1841557792
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"class.std::allocator.15"*, %"class.std::allocator.15"** %2
  ret %"class.std::allocator.15"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %60, align 8
  %61 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %60, align 8
  store i32 1198780225, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE11_Deque_implC2EOS2_(%"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"*, %"class.std::allocator.15"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"*, align 8
  %4 = alloca %"class.std::allocator.15"*, align 8
  store %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %0, %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"** %3, align 8
  store %"class.std::allocator.15"* %1, %"class.std::allocator.15"** %4, align 8
  %5 = load %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"*, %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %5 to %"class.std::allocator.15"*
  %7 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.15"* @_ZSt4moveIRSaISt4pairIiiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.15"* dereferenceable(1) %7) #3
  call void @_ZNSaISt4pairIiiEEC2ERKS1_(%"class.std::allocator.15"* %6, %"class.std::allocator.15"* dereferenceable(1) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %5, i32 0, i32 0
  store %"struct.std::pair"** null, %"struct.std::pair"*** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %5, i32 0, i32 1
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %5, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorISt4pairIiiERS1_PS1_EC2Ev(%"struct.std::_Deque_iterator"* %11) #3
  %12 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %5, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorISt4pairIiiERS1_PS1_EC2Ev(%"struct.std::_Deque_iterator"* %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE11_Deque_impl12_M_swap_dataERS4_(%"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"*, %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* dereferenceable(80)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"*, align 8
  %4 = alloca %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %0, %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"** %3, align 8
  store %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %1, %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"** %4, align 8
  %5 = load %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"*, %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %5, i32 0, i32 2
  %7 = load %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"*, %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %7, i32 0, i32 2
  call void @_ZSt4swapISt15_Deque_iteratorISt4pairIiiERS2_PS2_EEvRT_S7_(%"struct.std::_Deque_iterator"* dereferenceable(32) %6, %"struct.std::_Deque_iterator"* dereferenceable(32) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %5, i32 0, i32 3
  %10 = load %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"*, %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %10, i32 0, i32 3
  call void @_ZSt4swapISt15_Deque_iteratorISt4pairIiiERS2_PS2_EEvRT_S7_(%"struct.std::_Deque_iterator"* dereferenceable(32) %9, %"struct.std::_Deque_iterator"* dereferenceable(32) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %5, i32 0, i32 0
  %13 = load %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"*, %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %13, i32 0, i32 0
  call void @_ZSt4swapIPPSt4pairIiiEEvRT_S5_(%"struct.std::pair"*** dereferenceable(8) %12, %"struct.std::pair"*** dereferenceable(8) %14) #3
  %15 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %5, i32 0, i32 1
  %16 = load %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"*, %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"** %4, align 8
  %17 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %16, i32 0, i32 1
  call void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8) %15, i64* dereferenceable(8) %17) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt4pairIiiEEC2ERKS1_(%"class.std::allocator.15"*, %"class.std::allocator.15"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.15"*, align 8
  %4 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %3, align 8
  store %"class.std::allocator.15"* %1, %"class.std::allocator.15"** %4, align 8
  %5 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %3, align 8
  %6 = bitcast %"class.std::allocator.15"* %5 to %"class.__gnu_cxx::new_allocator.16"*
  %7 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %4, align 8
  %8 = bitcast %"class.std::allocator.15"* %7 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.16"* %6, %"class.__gnu_cxx::new_allocator.16"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %1, %"class.__gnu_cxx::new_allocator.16"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapISt15_Deque_iteratorISt4pairIiiERS2_PS2_EEvRT_S7_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #4 comdat {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  %5 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %6 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %7 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorISt4pairIiiERS2_PS2_EEONSt16remove_referenceIT_E4typeEOS8_(%"struct.std::_Deque_iterator"* dereferenceable(32) %6) #3
  call void @_ZNSt15_Deque_iteratorISt4pairIiiERS1_PS1_EC2ERKS4_(%"struct.std::_Deque_iterator"* %5, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #3
  %8 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %9 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorISt4pairIiiERS2_PS2_EEONSt16remove_referenceIT_E4typeEOS8_(%"struct.std::_Deque_iterator"* dereferenceable(32) %8) #3
  %10 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %11 = bitcast %"struct.std::_Deque_iterator"* %10 to i8*
  %12 = bitcast %"struct.std::_Deque_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 32, i32 8, i1 false)
  %13 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorISt4pairIiiERS2_PS2_EEONSt16remove_referenceIT_E4typeEOS8_(%"struct.std::_Deque_iterator"* dereferenceable(32) %5) #3
  %14 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %15 = bitcast %"struct.std::_Deque_iterator"* %14 to i8*
  %16 = bitcast %"struct.std::_Deque_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 32, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPPSt4pairIiiEEvRT_S5_(%"struct.std::pair"*** dereferenceable(8), %"struct.std::pair"*** dereferenceable(8)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.539
  %6 = load i32, i32* @y.540
  %7 = add i32 %5, -822752622
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -822752622
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1915574, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %71
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1915574, label %19
    i32 -1528324239, label %27
    i32 -186185018, label %56
    i32 -460319565, label %57
  ]

; <label>:18:                                     ; preds = %16
  br label %71

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1528324239, i32 -460319565
  store i32 %26, i32* %15
  br label %71

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::pair"***, align 8
  %29 = alloca %"struct.std::pair"***, align 8
  %30 = alloca %"struct.std::pair"**, align 8
  store %"struct.std::pair"*** %0, %"struct.std::pair"**** %28, align 8
  store %"struct.std::pair"*** %1, %"struct.std::pair"**** %29, align 8
  %31 = load %"struct.std::pair"***, %"struct.std::pair"**** %28, align 8
  %32 = call dereferenceable(8) %"struct.std::pair"*** @_ZSt4moveIRPPSt4pairIiiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::pair"*** dereferenceable(8) %31) #3
  %33 = load %"struct.std::pair"**, %"struct.std::pair"*** %32, align 8
  store %"struct.std::pair"** %33, %"struct.std::pair"*** %30, align 8
  %34 = load %"struct.std::pair"***, %"struct.std::pair"**** %29, align 8
  %35 = call dereferenceable(8) %"struct.std::pair"*** @_ZSt4moveIRPPSt4pairIiiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::pair"*** dereferenceable(8) %34) #3
  %36 = load %"struct.std::pair"**, %"struct.std::pair"*** %35, align 8
  %37 = load %"struct.std::pair"***, %"struct.std::pair"**** %28, align 8
  store %"struct.std::pair"** %36, %"struct.std::pair"*** %37, align 8
  %38 = call dereferenceable(8) %"struct.std::pair"*** @_ZSt4moveIRPPSt4pairIiiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::pair"*** dereferenceable(8) %30) #3
  %39 = load %"struct.std::pair"**, %"struct.std::pair"*** %38, align 8
  %40 = load %"struct.std::pair"***, %"struct.std::pair"**** %29, align 8
  store %"struct.std::pair"** %39, %"struct.std::pair"*** %40, align 8
  %41 = load i32, i32* @x.539
  %42 = load i32, i32* @y.540
  %43 = sub i32 %41, 376370262
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 376370262
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -186185018, i32 -460319565
  store i32 %55, i32* %15
  br label %71

; <label>:56:                                     ; preds = %16
  ret void

; <label>:57:                                     ; preds = %16
  %58 = alloca %"struct.std::pair"***, align 8
  %59 = alloca %"struct.std::pair"***, align 8
  %60 = alloca %"struct.std::pair"**, align 8
  store %"struct.std::pair"*** %0, %"struct.std::pair"**** %58, align 8
  store %"struct.std::pair"*** %1, %"struct.std::pair"**** %59, align 8
  %61 = load %"struct.std::pair"***, %"struct.std::pair"**** %58, align 8
  %62 = call dereferenceable(8) %"struct.std::pair"*** @_ZSt4moveIRPPSt4pairIiiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::pair"*** dereferenceable(8) %61) #3
  %63 = load %"struct.std::pair"**, %"struct.std::pair"*** %62, align 8
  store %"struct.std::pair"** %63, %"struct.std::pair"*** %60, align 8
  %64 = load %"struct.std::pair"***, %"struct.std::pair"**** %59, align 8
  %65 = call dereferenceable(8) %"struct.std::pair"*** @_ZSt4moveIRPPSt4pairIiiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::pair"*** dereferenceable(8) %64) #3
  %66 = load %"struct.std::pair"**, %"struct.std::pair"*** %65, align 8
  %67 = load %"struct.std::pair"***, %"struct.std::pair"**** %58, align 8
  store %"struct.std::pair"** %66, %"struct.std::pair"*** %67, align 8
  %68 = call dereferenceable(8) %"struct.std::pair"*** @_ZSt4moveIRPPSt4pairIiiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::pair"*** dereferenceable(8) %60) #3
  %69 = load %"struct.std::pair"**, %"struct.std::pair"*** %68, align 8
  %70 = load %"struct.std::pair"***, %"struct.std::pair"**** %59, align 8
  store %"struct.std::pair"** %69, %"struct.std::pair"*** %70, align 8
  store i32 -1528324239, i32* %15
  br label %71

; <label>:71:                                     ; preds = %57, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  %6 = load i64*, i64** %3, align 8
  %7 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %6) #3
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %5, align 8
  %9 = load i64*, i64** %4, align 8
  %10 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %9) #3
  %11 = load i64, i64* %10, align 8
  %12 = load i64*, i64** %3, align 8
  store i64 %11, i64* %12, align 8
  %13 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %5) #3
  %14 = load i64, i64* %13, align 8
  %15 = load i64*, i64** %4, align 8
  store i64 %14, i64* %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorISt4pairIiiERS2_PS2_EEONSt16remove_referenceIT_E4typeEOS8_(%"struct.std::_Deque_iterator"* dereferenceable(32)) #4 comdat {
  %2 = alloca %"struct.std::_Deque_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.543
  %6 = load i32, i32* @y.544
  %7 = add i32 %5, -1216826491
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1216826491
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1069568058, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1069568058, label %19
    i32 57511079, label %39
    i32 -1673268071, label %57
    i32 410669310, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 57511079, i32 410669310
  store i32 %38, i32* %15
  br label %62

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %40, align 8
  %41 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %40, align 8
  store %"struct.std::_Deque_iterator"* %41, %"struct.std::_Deque_iterator"** %2
  %42 = load i32, i32* @x.543
  %43 = load i32, i32* @y.544
  %44 = add i32 %42, 1133614502
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 1133614502
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1673268071, i32 410669310
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2
  ret %"struct.std::_Deque_iterator"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %60, align 8
  %61 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %60, align 8
  store i32 57511079, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::pair"*** @_ZSt4moveIRPPSt4pairIiiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::pair"*** dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::pair"***, align 8
  store %"struct.std::pair"*** %0, %"struct.std::pair"**** %2, align 8
  %3 = load %"struct.std::pair"***, %"struct.std::pair"**** %2, align 8
  ret %"struct.std::pair"*** %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EEC2Ev(%"struct.std::_Vector_base"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaISt6vectorIxSaIxEEEC2Ev(%"class.std::allocator"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %3, i32 0, i32 0
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %3, i32 0, i32 1
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %3, i32 0, i32 2
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIxSaIxEEEC2Ev(%"class.std::allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.553
  %5 = load i32, i32* @y.554
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1617730513, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %61
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1617730513, label %17
    i32 1228815585, label %25
    i32 -1377794545, label %56
    i32 172835614, label %57
  ]

; <label>:16:                                     ; preds = %14
  br label %61

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 1228815585, i32 172835614
  store i32 %24, i32* %13
  br label %61

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %26, align 8
  %27 = load %"class.std::allocator"*, %"class.std::allocator"** %26, align 8
  %28 = bitcast %"class.std::allocator"* %27 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2Ev(%"class.__gnu_cxx::new_allocator"* %28) #3
  %29 = load i32, i32* @x.553
  %30 = load i32, i32* @y.554
  %31 = add i32 %29, -1933935451
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, -1933935451
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -1377794545, i32 172835614
  store i32 %55, i32* %13
  br label %61

; <label>:56:                                     ; preds = %14
  ret void

; <label>:57:                                     ; preds = %14
  %58 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %58, align 8
  %59 = load %"class.std::allocator"*, %"class.std::allocator"** %58, align 8
  %60 = bitcast %"class.std::allocator"* %59 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2Ev(%"class.__gnu_cxx::new_allocator"* %60) #3
  store i32 1228815585, i32* %13
  br label %61

; <label>:61:                                     ; preds = %57, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEEC2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.557
  %3 = load i32, i32* @y.558
  %4 = add i32 %2, 1020522202
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 1020522202
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %71

; <label>:28:                                     ; preds = %1, %71
  %29 = alloca %"struct.std::_Vector_base"*, align 8
  %30 = alloca i8*
  %31 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %29, align 8
  %32 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %29, align 8
  %33 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load %"class.std::vector.0"*, %"class.std::vector.0"** %34, align 8
  %36 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %32, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %36, i32 0, i32 2
  %38 = load %"class.std::vector.0"*, %"class.std::vector.0"** %37, align 8
  %39 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %32, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %39, i32 0, i32 0
  %41 = load %"class.std::vector.0"*, %"class.std::vector.0"** %40, align 8
  %42 = ptrtoint %"class.std::vector.0"* %38 to i64
  %43 = ptrtoint %"class.std::vector.0"* %41 to i64
  %44 = sub i64 0, %43
  %45 = add i64 %42, %44
  %46 = sub i64 %42, %43
  %47 = sdiv exact i64 %45, 24
  %48 = load i32, i32* @x.557
  %49 = load i32, i32* @y.558
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  br i1 %59, label %61, label %71

; <label>:61:                                     ; preds = %28
  invoke void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base"* %32, %"class.std::vector.0"* %35, i64 %47)
          to label %62 unwind label %64

; <label>:62:                                     ; preds = %61
  %63 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %63) #3
  ret void

; <label>:64:                                     ; preds = %61
  %65 = landingpad { i8*, i32 }
          catch i8* null
  %66 = extractvalue { i8*, i32 } %65, 0
  store i8* %66, i8** %30, align 8
  %67 = extractvalue { i8*, i32 } %65, 1
  store i32 %67, i32* %31, align 4
  %68 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %68) #3
  br label %69

; <label>:69:                                     ; preds = %64
  %70 = load i8*, i8** %30, align 8
  call void @__clang_call_terminate(i8* %70) #12
  unreachable

; <label>:71:                                     ; preds = %28, %1
  %72 = alloca %"struct.std::_Vector_base"*, align 8
  %73 = alloca i8*
  %74 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %72, align 8
  %75 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %72, align 8
  %76 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %75, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %76, i32 0, i32 0
  %78 = load %"class.std::vector.0"*, %"class.std::vector.0"** %77, align 8
  %79 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %75, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %79, i32 0, i32 2
  %81 = load %"class.std::vector.0"*, %"class.std::vector.0"** %80, align 8
  %82 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %75, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %82, i32 0, i32 0
  %84 = load %"class.std::vector.0"*, %"class.std::vector.0"** %83, align 8
  %85 = ptrtoint %"class.std::vector.0"* %81 to i64
  %86 = ptrtoint %"class.std::vector.0"* %84 to i64
  %87 = add i64 %85, -3143455235274243270
  %88 = sub i64 %87, %86
  %89 = sub i64 %88, -3143455235274243270
  %90 = sub i64 %85, %86
  %91 = mul i64 %89, %86
  %92 = sub i64 0, %85
  %93 = add i64 0, %92
  %94 = sub i64 0, %85
  %95 = sub i64 0, %93
  %96 = sub i64 0, %86
  %97 = add i64 %95, %96
  %98 = sub i64 0, %97
  %99 = add i64 %93, %86
  %100 = shl i64 %85, %86
  %101 = sub i64 %85, 7416032549257520801
  %102 = sub i64 %101, %86
  %103 = add i64 %102, 7416032549257520801
  %104 = sub i64 %85, %86
  %105 = sub i64 %103, -7257759926709963067
  %106 = sub i64 %105, 24
  %107 = add i64 %106, -7257759926709963067
  %108 = sub i64 %103, 24
  %109 = mul i64 %107, 24
  %110 = add i64 %103, 7634633443068004042
  %111 = sub i64 %110, 24
  %112 = sub i64 %111, 7634633443068004042
  %113 = sub i64 %103, 24
  %114 = mul i64 %112, 24
  %115 = shl i64 %103, 24
  %116 = sub i64 0, 24
  %117 = add i64 %103, %116
  %118 = sub i64 %103, 24
  %119 = mul i64 %117, 24
  %120 = shl i64 %103, 24
  %121 = sub i64 0, %103
  %122 = add i64 0, %121
  %123 = sub i64 0, %103
  %124 = add i64 %122, -1985839259379231254
  %125 = add i64 %124, 24
  %126 = sub i64 %125, -1985839259379231254
  %127 = add i64 %122, 24
  %128 = sub i64 0, 24
  %129 = add i64 %103, %128
  %130 = sub i64 %103, 24
  %131 = mul i64 %129, 24
  %132 = sdiv exact i64 %103, 24
  br label %28
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIxSaIxEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<long long, std::allocator<long long> >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaISt6vectorIxSaIxEEED2Ev(%"class.std::allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIxSaIxEEED2Ev(%"class.std::allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEED2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIxSaIxEEED2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.563
  %5 = load i32, i32* @y.564
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1504594297, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %59
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1504594297, label %17
    i32 -620289007, label %37
    i32 1881045598, label %55
    i32 -1430192006, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %59

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -620289007, i32 -1430192006
  store i32 %36, i32* %13
  br label %59

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %38, align 8
  %40 = load i32, i32* @x.563
  %41 = load i32, i32* @y.564
  %42 = sub i32 %40, -1760916611
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -1760916611
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 1881045598, i32 -1430192006
  store i32 %54, i32* %13
  br label %59

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %57, align 8
  store i32 -620289007, i32* %13
  br label %59

; <label>:59:                                     ; preds = %56, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxEC2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE21_M_default_initializeEm(%"class.std::vector.0"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %12 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %11) #3
  %13 = call i64* @_ZSt27__uninitialized_default_n_aIPxmxET_S1_T0_RSaIT1_E(i64* %9, i64 %10, %"class.std::allocator.2"* dereferenceable(1) %12)
  %14 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %15, i32 0, i32 1
  store i64* %13, i64** %16, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt27__uninitialized_default_n_aIPxmxET_S1_T0_RSaIT1_E(i64*, i64, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64* @_ZSt25__uninitialized_default_nIPxmET_S1_T0_(i64* %7, i64 %8)
  ret i64* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt25__uninitialized_default_nIPxmET_S1_T0_(i64*, i64) #0 comdat {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.571
  %7 = load i32, i32* @y.572
  %8 = sub i32 %6, 347792015
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 347792015
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 599877736, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %58
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 599877736, label %20
    i32 -339542902, label %28
    i32 -1634878755, label %49
    i32 -177197897, label %51
  ]

; <label>:19:                                     ; preds = %17
  br label %58

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -339542902, i32 -177197897
  store i32 %27, i32* %16
  br label %58

; <label>:28:                                     ; preds = %17
  %29 = alloca i64*, align 8
  %30 = alloca i64, align 8
  %31 = alloca i8, align 1
  store i64* %0, i64** %29, align 8
  store i64 %1, i64* %30, align 8
  store i8 1, i8* %31, align 1
  %32 = load i64*, i64** %29, align 8
  %33 = load i64, i64* %30, align 8
  %34 = call i64* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPxmEET_S3_T0_(i64* %32, i64 %33)
  store i64* %34, i64** %3
  %35 = load i32, i32* @x.571
  %36 = load i32, i32* @y.572
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -1634878755, i32 -177197897
  store i32 %48, i32* %16
  br label %58

; <label>:49:                                     ; preds = %17
  %50 = load volatile i64*, i64** %3
  ret i64* %50

; <label>:51:                                     ; preds = %17
  %52 = alloca i64*, align 8
  %53 = alloca i64, align 8
  %54 = alloca i8, align 1
  store i64* %0, i64** %52, align 8
  store i64 %1, i64* %53, align 8
  store i8 1, i8* %54, align 1
  %55 = load i64*, i64** %52, align 8
  %56 = load i64, i64* %53, align 8
  %57 = call i64* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPxmEET_S3_T0_(i64* %55, i64 %56)
  store i32 -339542902, i32* %16
  br label %58

; <label>:58:                                     ; preds = %51, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPxmEET_S3_T0_(i64*, i64) #0 comdat align 2 {
  %3 = alloca i64*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  store i64* %0, i64** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = load i64*, i64** %3, align 8
  %7 = load i64, i64* %4, align 8
  store i64 0, i64* %5, align 8
  %8 = call i64* @_ZSt6fill_nIPxmxET_S1_T0_RKT1_(i64* %6, i64 %7, i64* dereferenceable(8) %5)
  ret i64* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt6fill_nIPxmxET_S1_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64* %8, i64 %9, i64* dereferenceable(8) %10)
  ret i64* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64*, i64, i64* dereferenceable(8)) #4 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %7, align 8
  %11 = load i64, i64* %5, align 8
  store i64 %11, i64* %8, align 8
  %12 = alloca i32
  store i32 -645356784, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %91
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -645356784, label %16
    i32 -82111169, label %20
    i32 1575846269, label %48
    i32 -103911134, label %77
    i32 -1060784704, label %78
    i32 -1261067798, label %86
    i32 299258584, label %88
  ]

; <label>:15:                                     ; preds = %13
  br label %91

; <label>:16:                                     ; preds = %13
  %17 = load i64, i64* %8, align 8
  %18 = icmp ugt i64 %17, 0
  %19 = select i1 %18, i32 -82111169, i32 -1261067798
  store i32 %19, i32* %12
  br label %91

; <label>:20:                                     ; preds = %13
  %21 = load i32, i32* @x.577
  %22 = load i32, i32* @y.578
  %23 = sub i32 %21, -612944507
  %24 = sub i32 %23, 1
  %25 = add i32 %24, -612944507
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 true, true
  %34 = and i1 %31, true
  %35 = and i1 %29, %33
  %36 = and i1 %32, true
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 true, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  %47 = select i1 %45, i32 1575846269, i32 299258584
  store i32 %47, i32* %12
  br label %91

; <label>:48:                                     ; preds = %13
  %49 = load i64, i64* %7, align 8
  %50 = load i64*, i64** %4, align 8
  store i64 %49, i64* %50, align 8
  %51 = load i32, i32* @x.577
  %52 = load i32, i32* @y.578
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -103911134, i32 299258584
  store i32 %76, i32* %12
  br label %91

; <label>:77:                                     ; preds = %13
  store i32 -1060784704, i32* %12
  br label %91

; <label>:78:                                     ; preds = %13
  %79 = load i64, i64* %8, align 8
  %80 = sub i64 %79, 2073255305853174428
  %81 = add i64 %80, -1
  %82 = add i64 %81, 2073255305853174428
  %83 = add i64 %79, -1
  store i64 %82, i64* %8, align 8
  %84 = load i64*, i64** %4, align 8
  %85 = getelementptr inbounds i64, i64* %84, i32 1
  store i64* %85, i64** %4, align 8
  store i32 -645356784, i32* %12
  br label %91

; <label>:86:                                     ; preds = %13
  %87 = load i64*, i64** %4, align 8
  ret i64* %87

; <label>:88:                                     ; preds = %13
  %89 = load i64, i64* %7, align 8
  %90 = load i64*, i64** %4, align 8
  store i64 %89, i64* %90, align 8
  store i32 1575846269, i32* %12
  br label %91

; <label>:91:                                     ; preds = %88, %78, %77, %48, %20, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeISt4pairIiiESaIS1_EE9push_backEOS1_(%"class.std::deque"*, %"struct.std::pair"* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %6 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %7 = call dereferenceable(8) %"struct.std::pair"* @_ZSt4moveIRSt4pairIiiEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair"* dereferenceable(8) %6) #3
  call void @_ZNSt5dequeISt4pairIiiESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::deque"* %5, %"struct.std::pair"* dereferenceable(8) %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::pair"* @_ZSt4moveIRSt4pairIiiEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %2, align 8
  %3 = load %"struct.std::pair"*, %"struct.std::pair"** %2, align 8
  ret %"struct.std::pair"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeISt4pairIiiESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::deque"*, %"struct.std::pair"* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::deque"*
  %5 = alloca %"struct.std::pair"**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.583
  %9 = load i32, i32* @y.584
  %10 = sub i32 %8, 2084125
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 2084125
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 852346584, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %198
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 852346584, label %22
    i32 -1040114982, label %42
    i32 884165496, label %87
    i32 392167814, label %90
    i32 -484603835, label %118
    i32 26436559, label %154
    i32 -1285308794, label %155
    i32 1814810422, label %160
    i32 169172024, label %161
    i32 -2121073331, label %177
  ]

; <label>:21:                                     ; preds = %19
  br label %198

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -1040114982, i32 169172024
  store i32 %41, i32* %18
  br label %198

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.std::deque"*, align 8
  %44 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"** %44, %"struct.std::pair"*** %5
  store %"class.std::deque"* %0, %"class.std::deque"** %43, align 8
  %45 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %5
  store %"struct.std::pair"* %1, %"struct.std::pair"** %45, align 8
  %46 = load %"class.std::deque"*, %"class.std::deque"** %43, align 8
  store %"class.std::deque"* %46, %"class.std::deque"** %4
  %47 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %48 = bitcast %"class.std::deque"* %47 to %"class.std::_Deque_base"*
  %49 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %48, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %49, i32 0, i32 3
  %51 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %50, i32 0, i32 0
  %52 = load %"struct.std::pair"*, %"struct.std::pair"** %51, align 8
  %53 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %54 = bitcast %"class.std::deque"* %53 to %"class.std::_Deque_base"*
  %55 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %54, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %55, i32 0, i32 3
  %57 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %56, i32 0, i32 2
  %58 = load %"struct.std::pair"*, %"struct.std::pair"** %57, align 8
  %59 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %58, i64 -1
  %60 = icmp ne %"struct.std::pair"* %52, %59
  store i1 %60, i1* %3
  %61 = load i32, i32* @x.583
  %62 = load i32, i32* @y.584
  %63 = sub i32 0, 1
  %64 = add i32 %61, %63
  %65 = sub i32 %61, 1
  %66 = mul i32 %61, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %62, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 true, true
  %73 = and i1 %70, true
  %74 = and i1 %68, %72
  %75 = and i1 %71, true
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 true, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  %86 = select i1 %84, i32 884165496, i32 169172024
  store i32 %86, i32* %18
  br label %198

; <label>:87:                                     ; preds = %19
  %88 = load volatile i1, i1* %3
  %89 = select i1 %88, i32 392167814, i32 -1285308794
  store i32 %89, i32* %18
  br label %198

; <label>:90:                                     ; preds = %19
  %91 = load i32, i32* @x.583
  %92 = load i32, i32* @y.584
  %93 = add i32 %91, -1265615934
  %94 = sub i32 %93, 1
  %95 = sub i32 %94, -1265615934
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = xor i1 %99, true
  %102 = xor i1 %100, true
  %103 = xor i1 true, true
  %104 = and i1 %101, true
  %105 = and i1 %99, %103
  %106 = and i1 %102, true
  %107 = and i1 %100, %103
  %108 = or i1 %104, %105
  %109 = or i1 %106, %107
  %110 = xor i1 %108, %109
  %111 = or i1 %101, %102
  %112 = xor i1 %111, true
  %113 = or i1 true, %103
  %114 = and i1 %112, %113
  %115 = or i1 %110, %114
  %116 = or i1 %99, %100
  %117 = select i1 %115, i32 -484603835, i32 -2121073331
  store i32 %117, i32* %18
  br label %198

; <label>:118:                                    ; preds = %19
  %119 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %120 = bitcast %"class.std::deque"* %119 to %"class.std::_Deque_base"*
  %121 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %120, i32 0, i32 0
  %122 = bitcast %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %121 to %"class.std::allocator.15"*
  %123 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %124 = bitcast %"class.std::deque"* %123 to %"class.std::_Deque_base"*
  %125 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %124, i32 0, i32 0
  %126 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %125, i32 0, i32 3
  %127 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %126, i32 0, i32 0
  %128 = load %"struct.std::pair"*, %"struct.std::pair"** %127, align 8
  %129 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %5
  %130 = load %"struct.std::pair"*, %"struct.std::pair"** %129, align 8
  %131 = call dereferenceable(8) %"struct.std::pair"* @_ZSt7forwardISt4pairIiiEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair"* dereferenceable(8) %130) #3
  call void @_ZNSt16allocator_traitsISaISt4pairIiiEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.15"* dereferenceable(1) %122, %"struct.std::pair"* %128, %"struct.std::pair"* dereferenceable(8) %131)
  %132 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %133 = bitcast %"class.std::deque"* %132 to %"class.std::_Deque_base"*
  %134 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %133, i32 0, i32 0
  %135 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %134, i32 0, i32 3
  %136 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %135, i32 0, i32 0
  %137 = load %"struct.std::pair"*, %"struct.std::pair"** %136, align 8
  %138 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %137, i32 1
  store %"struct.std::pair"* %138, %"struct.std::pair"** %136, align 8
  %139 = load i32, i32* @x.583
  %140 = load i32, i32* @y.584
  %141 = sub i32 %139, -762457580
  %142 = sub i32 %141, 1
  %143 = add i32 %142, -762457580
  %144 = sub i32 %139, 1
  %145 = mul i32 %139, %143
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %140, 10
  %149 = and i1 %147, %148
  %150 = xor i1 %147, %148
  %151 = or i1 %149, %150
  %152 = or i1 %147, %148
  %153 = select i1 %151, i32 26436559, i32 -2121073331
  store i32 %153, i32* %18
  br label %198

; <label>:154:                                    ; preds = %19
  store i32 1814810422, i32* %18
  br label %198

; <label>:155:                                    ; preds = %19
  %156 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %5
  %157 = load %"struct.std::pair"*, %"struct.std::pair"** %156, align 8
  %158 = call dereferenceable(8) %"struct.std::pair"* @_ZSt7forwardISt4pairIiiEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair"* dereferenceable(8) %157) #3
  %159 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  call void @_ZNSt5dequeISt4pairIiiESaIS1_EE16_M_push_back_auxIJS1_EEEvDpOT_(%"class.std::deque"* %159, %"struct.std::pair"* dereferenceable(8) %158)
  store i32 1814810422, i32* %18
  br label %198

; <label>:160:                                    ; preds = %19
  ret void

; <label>:161:                                    ; preds = %19
  %162 = alloca %"class.std::deque"*, align 8
  %163 = alloca %"struct.std::pair"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %162, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %163, align 8
  %164 = load %"class.std::deque"*, %"class.std::deque"** %162, align 8
  %165 = bitcast %"class.std::deque"* %164 to %"class.std::_Deque_base"*
  %166 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %165, i32 0, i32 0
  %167 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %166, i32 0, i32 3
  %168 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %167, i32 0, i32 0
  %169 = load %"struct.std::pair"*, %"struct.std::pair"** %168, align 8
  %170 = bitcast %"class.std::deque"* %164 to %"class.std::_Deque_base"*
  %171 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %170, i32 0, i32 0
  %172 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %171, i32 0, i32 3
  %173 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %172, i32 0, i32 2
  %174 = load %"struct.std::pair"*, %"struct.std::pair"** %173, align 8
  %175 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %174, i64 -1
  %176 = icmp ne %"struct.std::pair"* %169, %175
  store i32 -1040114982, i32* %18
  br label %198

; <label>:177:                                    ; preds = %19
  %178 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %179 = bitcast %"class.std::deque"* %178 to %"class.std::_Deque_base"*
  %180 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %179, i32 0, i32 0
  %181 = bitcast %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %180 to %"class.std::allocator.15"*
  %182 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %183 = bitcast %"class.std::deque"* %182 to %"class.std::_Deque_base"*
  %184 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %183, i32 0, i32 0
  %185 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %184, i32 0, i32 3
  %186 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %185, i32 0, i32 0
  %187 = load %"struct.std::pair"*, %"struct.std::pair"** %186, align 8
  %188 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %5
  %189 = load %"struct.std::pair"*, %"struct.std::pair"** %188, align 8
  %190 = call dereferenceable(8) %"struct.std::pair"* @_ZSt7forwardISt4pairIiiEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair"* dereferenceable(8) %189) #3
  call void @_ZNSt16allocator_traitsISaISt4pairIiiEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.15"* dereferenceable(1) %181, %"struct.std::pair"* %187, %"struct.std::pair"* dereferenceable(8) %190)
  %191 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %192 = bitcast %"class.std::deque"* %191 to %"class.std::_Deque_base"*
  %193 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %192, i32 0, i32 0
  %194 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %193, i32 0, i32 3
  %195 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %194, i32 0, i32 0
  %196 = load %"struct.std::pair"*, %"struct.std::pair"** %195, align 8
  %197 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %196, i32 1
  store %"struct.std::pair"* %197, %"struct.std::pair"** %195, align 8
  store i32 -484603835, i32* %18
  br label %198

; <label>:198:                                    ; preds = %177, %161, %155, %154, %118, %90, %87, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIiiEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.15"* dereferenceable(1), %"struct.std::pair"*, %"struct.std::pair"* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.15"*, align 8
  %5 = alloca %"struct.std::pair"*, align 8
  %6 = alloca %"struct.std::pair"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %4, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %5, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %6, align 8
  %7 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %4, align 8
  %8 = bitcast %"class.std::allocator.15"* %7 to %"class.__gnu_cxx::new_allocator.16"*
  %9 = load %"struct.std::pair"*, %"struct.std::pair"** %5, align 8
  %10 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %11 = call dereferenceable(8) %"struct.std::pair"* @_ZSt7forwardISt4pairIiiEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair"* dereferenceable(8) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.16"* %8, %"struct.std::pair"* %9, %"struct.std::pair"* dereferenceable(8) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::pair"* @_ZSt7forwardISt4pairIiiEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %2, align 8
  %3 = load %"struct.std::pair"*, %"struct.std::pair"** %2, align 8
  ret %"struct.std::pair"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeISt4pairIiiESaIS1_EE16_M_push_back_auxIJS1_EEEvDpOT_(%"class.std::deque"*, %"struct.std::pair"* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  call void @_ZNSt5dequeISt4pairIiiESaIS1_EE22_M_reserve_map_at_backEm(%"class.std::deque"* %7, i64 1)
  %8 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %9 = call %"struct.std::pair"* @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %8)
  %10 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %11 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %11, i32 0, i32 3
  %13 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %12, i32 0, i32 3
  %14 = load %"struct.std::pair"**, %"struct.std::pair"*** %13, align 8
  %15 = getelementptr inbounds %"struct.std::pair"*, %"struct.std::pair"** %14, i64 1
  store %"struct.std::pair"* %9, %"struct.std::pair"** %15, align 8
  %16 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %17 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %17 to %"class.std::allocator.15"*
  %19 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %20 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %20, i32 0, i32 3
  %22 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %21, i32 0, i32 0
  %23 = load %"struct.std::pair"*, %"struct.std::pair"** %22, align 8
  %24 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %25 = call dereferenceable(8) %"struct.std::pair"* @_ZSt7forwardISt4pairIiiEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair"* dereferenceable(8) %24) #3
  invoke void @_ZNSt16allocator_traitsISaISt4pairIiiEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.15"* dereferenceable(1) %18, %"struct.std::pair"* %23, %"struct.std::pair"* dereferenceable(8) %25)
          to label %26 unwind label %45

; <label>:26:                                     ; preds = %2
  %27 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %28 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %28, i32 0, i32 3
  %30 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %31 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %31, i32 0, i32 3
  %33 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %32, i32 0, i32 3
  %34 = load %"struct.std::pair"**, %"struct.std::pair"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::pair"*, %"struct.std::pair"** %34, i64 1
  call void @_ZNSt15_Deque_iteratorISt4pairIiiERS1_PS1_E11_M_set_nodeEPS3_(%"struct.std::_Deque_iterator"* %29, %"struct.std::pair"** %35) #3
  %36 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %37 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %37, i32 0, i32 3
  %39 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %38, i32 0, i32 1
  %40 = load %"struct.std::pair"*, %"struct.std::pair"** %39, align 8
  %41 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %42 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %42, i32 0, i32 3
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %43, i32 0, i32 0
  store %"struct.std::pair"* %40, %"struct.std::pair"** %44, align 8
  br label %105

; <label>:45:                                     ; preds = %2
  %46 = landingpad { i8*, i32 }
          catch i8* null
  %47 = extractvalue { i8*, i32 } %46, 0
  store i8* %47, i8** %5, align 8
  %48 = extractvalue { i8*, i32 } %46, 1
  store i32 %48, i32* %6, align 4
  br label %49

; <label>:49:                                     ; preds = %45
  %50 = load i8*, i8** %5, align 8
  %51 = call i8* @__cxa_begin_catch(i8* %50) #3
  %52 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %53 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %54 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %54, i32 0, i32 3
  %56 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %55, i32 0, i32 3
  %57 = load %"struct.std::pair"**, %"struct.std::pair"*** %56, align 8
  %58 = getelementptr inbounds %"struct.std::pair"*, %"struct.std::pair"** %57, i64 1
  %59 = load %"struct.std::pair"*, %"struct.std::pair"** %58, align 8
  call void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE18_M_deallocate_nodeEPS1_(%"class.std::_Deque_base"* %52, %"struct.std::pair"* %59) #3
  invoke void @__cxa_rethrow() #15
          to label %167 unwind label %60

; <label>:60:                                     ; preds = %49
  %61 = load i32, i32* @x.589
  %62 = load i32, i32* @y.590
  %63 = sub i32 0, 1
  %64 = add i32 %61, %63
  %65 = sub i32 %61, 1
  %66 = mul i32 %61, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %62, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 false, true
  %73 = and i1 %70, false
  %74 = and i1 %68, %72
  %75 = and i1 %71, false
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 false, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  br i1 %84, label %86, label %210

; <label>:86:                                     ; preds = %60, %210
  %87 = landingpad { i8*, i32 }
          cleanup
  %88 = extractvalue { i8*, i32 } %87, 0
  store i8* %88, i8** %5, align 8
  %89 = extractvalue { i8*, i32 } %87, 1
  store i32 %89, i32* %6, align 4
  %90 = load i32, i32* @x.589
  %91 = load i32, i32* @y.590
  %92 = sub i32 0, 1
  %93 = add i32 %90, %92
  %94 = sub i32 %90, 1
  %95 = mul i32 %90, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %91, 10
  %99 = and i1 %97, %98
  %100 = xor i1 %97, %98
  %101 = or i1 %99, %100
  %102 = or i1 %97, %98
  br i1 %101, label %103, label %210

; <label>:103:                                    ; preds = %86
  invoke void @__cxa_end_catch()
          to label %104 unwind label %164

; <label>:104:                                    ; preds = %103
  br label %106

; <label>:105:                                    ; preds = %26
  ret void

; <label>:106:                                    ; preds = %104
  %107 = load i32, i32* @x.589
  %108 = load i32, i32* @y.590
  %109 = sub i32 %107, -232805722
  %110 = sub i32 %109, 1
  %111 = add i32 %110, -232805722
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = xor i1 %115, true
  %118 = xor i1 %116, true
  %119 = xor i1 false, true
  %120 = and i1 %117, false
  %121 = and i1 %115, %119
  %122 = and i1 %118, false
  %123 = and i1 %116, %119
  %124 = or i1 %120, %121
  %125 = or i1 %122, %123
  %126 = xor i1 %124, %125
  %127 = or i1 %117, %118
  %128 = xor i1 %127, true
  %129 = or i1 false, %119
  %130 = and i1 %128, %129
  %131 = or i1 %126, %130
  %132 = or i1 %115, %116
  br i1 %131, label %133, label %214

; <label>:133:                                    ; preds = %106, %214
  %134 = load i8*, i8** %5, align 8
  %135 = load i32, i32* %6, align 4
  %136 = insertvalue { i8*, i32 } undef, i8* %134, 0
  %137 = insertvalue { i8*, i32 } %136, i32 %135, 1
  %138 = load i32, i32* @x.589
  %139 = load i32, i32* @y.590
  %140 = sub i32 0, 1
  %141 = add i32 %138, %140
  %142 = sub i32 %138, 1
  %143 = mul i32 %138, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %139, 10
  %147 = xor i1 %145, true
  %148 = xor i1 %146, true
  %149 = xor i1 false, true
  %150 = and i1 %147, false
  %151 = and i1 %145, %149
  %152 = and i1 %148, false
  %153 = and i1 %146, %149
  %154 = or i1 %150, %151
  %155 = or i1 %152, %153
  %156 = xor i1 %154, %155
  %157 = or i1 %147, %148
  %158 = xor i1 %157, true
  %159 = or i1 false, %149
  %160 = and i1 %158, %159
  %161 = or i1 %156, %160
  %162 = or i1 %145, %146
  br i1 %161, label %163, label %214

; <label>:163:                                    ; preds = %133
  resume { i8*, i32 } %137

; <label>:164:                                    ; preds = %103
  %165 = landingpad { i8*, i32 }
          catch i8* null
  %166 = extractvalue { i8*, i32 } %165, 0
  call void @__clang_call_terminate(i8* %166) #12
  unreachable

; <label>:167:                                    ; preds = %49
  %168 = load i32, i32* @x.589
  %169 = load i32, i32* @y.590
  %170 = sub i32 %168, -1940870775
  %171 = sub i32 %170, 1
  %172 = add i32 %171, -1940870775
  %173 = sub i32 %168, 1
  %174 = mul i32 %168, %172
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %169, 10
  %178 = xor i1 %176, true
  %179 = xor i1 %177, true
  %180 = xor i1 false, true
  %181 = and i1 %178, false
  %182 = and i1 %176, %180
  %183 = and i1 %179, false
  %184 = and i1 %177, %180
  %185 = or i1 %181, %182
  %186 = or i1 %183, %184
  %187 = xor i1 %185, %186
  %188 = or i1 %178, %179
  %189 = xor i1 %188, true
  %190 = or i1 false, %180
  %191 = and i1 %189, %190
  %192 = or i1 %187, %191
  %193 = or i1 %176, %177
  br i1 %192, label %194, label %219

; <label>:194:                                    ; preds = %167, %219
  %195 = load i32, i32* @x.589
  %196 = load i32, i32* @y.590
  %197 = sub i32 %195, 745040893
  %198 = sub i32 %197, 1
  %199 = add i32 %198, 745040893
  %200 = sub i32 %195, 1
  %201 = mul i32 %195, %199
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %196, 10
  %205 = and i1 %203, %204
  %206 = xor i1 %203, %204
  %207 = or i1 %205, %206
  %208 = or i1 %203, %204
  br i1 %207, label %209, label %219

; <label>:209:                                    ; preds = %194
  unreachable

; <label>:210:                                    ; preds = %86, %60
  %211 = landingpad { i8*, i32 }
          cleanup
  %212 = extractvalue { i8*, i32 } %211, 0
  store i8* %212, i8** %5, align 8
  %213 = extractvalue { i8*, i32 } %211, 1
  store i32 %213, i32* %6, align 4
  br label %86

; <label>:214:                                    ; preds = %133, %106
  %215 = load i8*, i8** %5, align 8
  %216 = load i32, i32* %6, align 4
  %217 = insertvalue { i8*, i32 } undef, i8* %215, 0
  %218 = insertvalue { i8*, i32 } %217, i32 %216, 1
  br label %133

; <label>:219:                                    ; preds = %194, %167
  br label %194
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.16"*, %"struct.std::pair"*, %"struct.std::pair"* dereferenceable(8)) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %5 = alloca %"struct.std::pair"*, align 8
  %6 = alloca %"struct.std::pair"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %4, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %5, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %4, align 8
  %8 = load %"struct.std::pair"*, %"struct.std::pair"** %5, align 8
  %9 = bitcast %"struct.std::pair"* %8 to i8*
  %10 = bitcast i8* %9 to %"struct.std::pair"*
  %11 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %12 = call dereferenceable(8) %"struct.std::pair"* @_ZSt7forwardISt4pairIiiEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair"* dereferenceable(8) %11) #3
  %13 = bitcast %"struct.std::pair"* %10 to i8*
  %14 = bitcast %"struct.std::pair"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 4, i1 false)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeISt4pairIiiESaIS1_EE22_M_reserve_map_at_backEm(%"class.std::deque"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::deque"*
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.593
  %9 = load i32, i32* @y.594
  %10 = add i32 %8, -914504968
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -914504968
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 630860487, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %162
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 630860487, label %22
    i32 -807639273, label %30
    i32 166520796, label %83
    i32 -1707913190, label %86
    i32 1381564185, label %90
    i32 1473603307, label %91
  ]

; <label>:21:                                     ; preds = %19
  br label %162

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -807639273, i32 1473603307
  store i32 %29, i32* %18
  br label %162

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::deque"*, align 8
  %32 = alloca i64, align 8
  store i64* %32, i64** %5
  store %"class.std::deque"* %0, %"class.std::deque"** %31, align 8
  %33 = load volatile i64*, i64** %5
  store i64 %1, i64* %33, align 8
  %34 = load %"class.std::deque"*, %"class.std::deque"** %31, align 8
  store %"class.std::deque"* %34, %"class.std::deque"** %4
  %35 = load volatile i64*, i64** %5
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 0, %36
  %38 = sub i64 0, 1
  %39 = add i64 %37, %38
  %40 = sub i64 0, %39
  %41 = add i64 %36, 1
  %42 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %43 = bitcast %"class.std::deque"* %42 to %"class.std::_Deque_base"*
  %44 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %44, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %48 = bitcast %"class.std::deque"* %47 to %"class.std::_Deque_base"*
  %49 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %48, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %49, i32 0, i32 3
  %51 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %50, i32 0, i32 3
  %52 = load %"struct.std::pair"**, %"struct.std::pair"*** %51, align 8
  %53 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %54 = bitcast %"class.std::deque"* %53 to %"class.std::_Deque_base"*
  %55 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %54, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %55, i32 0, i32 0
  %57 = load %"struct.std::pair"**, %"struct.std::pair"*** %56, align 8
  %58 = ptrtoint %"struct.std::pair"** %52 to i64
  %59 = ptrtoint %"struct.std::pair"** %57 to i64
  %60 = sub i64 %58, 3202121051712406872
  %61 = sub i64 %60, %59
  %62 = add i64 %61, 3202121051712406872
  %63 = sub i64 %58, %59
  %64 = sdiv exact i64 %62, 8
  %65 = sub i64 0, %64
  %66 = add i64 %46, %65
  %67 = sub i64 %46, %64
  %68 = icmp ugt i64 %40, %66
  store i1 %68, i1* %3
  %69 = load i32, i32* @x.593
  %70 = load i32, i32* @y.594
  %71 = sub i32 0, 1
  %72 = add i32 %69, %71
  %73 = sub i32 %69, 1
  %74 = mul i32 %69, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %70, 10
  %78 = and i1 %76, %77
  %79 = xor i1 %76, %77
  %80 = or i1 %78, %79
  %81 = or i1 %76, %77
  %82 = select i1 %80, i32 166520796, i32 1473603307
  store i32 %82, i32* %18
  br label %162

; <label>:83:                                     ; preds = %19
  %84 = load volatile i1, i1* %3
  %85 = select i1 %84, i32 -1707913190, i32 1381564185
  store i32 %85, i32* %18
  br label %162

; <label>:86:                                     ; preds = %19
  %87 = load volatile i64*, i64** %5
  %88 = load i64, i64* %87, align 8
  %89 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  call void @_ZNSt5dequeISt4pairIiiESaIS1_EE17_M_reallocate_mapEmb(%"class.std::deque"* %89, i64 %88, i1 zeroext false)
  store i32 1381564185, i32* %18
  br label %162

; <label>:90:                                     ; preds = %19
  ret void

; <label>:91:                                     ; preds = %19
  %92 = alloca %"class.std::deque"*, align 8
  %93 = alloca i64, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %92, align 8
  store i64 %1, i64* %93, align 8
  %94 = load %"class.std::deque"*, %"class.std::deque"** %92, align 8
  %95 = load i64, i64* %93, align 8
  %96 = shl i64 %95, 1
  %97 = sub i64 0, -1516239678177456282
  %98 = sub i64 %97, %95
  %99 = add i64 %98, -1516239678177456282
  %100 = sub i64 0, %95
  %101 = sub i64 0, %99
  %102 = sub i64 0, 1
  %103 = add i64 %101, %102
  %104 = sub i64 0, %103
  %105 = add i64 %99, 1
  %106 = sub i64 %95, -416304306438259932
  %107 = add i64 %106, 1
  %108 = add i64 %107, -416304306438259932
  %109 = add i64 %95, 1
  %110 = bitcast %"class.std::deque"* %94 to %"class.std::_Deque_base"*
  %111 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %110, i32 0, i32 0
  %112 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %111, i32 0, i32 1
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.std::deque"* %94 to %"class.std::_Deque_base"*
  %115 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %114, i32 0, i32 0
  %116 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %115, i32 0, i32 3
  %117 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %116, i32 0, i32 3
  %118 = load %"struct.std::pair"**, %"struct.std::pair"*** %117, align 8
  %119 = bitcast %"class.std::deque"* %94 to %"class.std::_Deque_base"*
  %120 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %119, i32 0, i32 0
  %121 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %120, i32 0, i32 0
  %122 = load %"struct.std::pair"**, %"struct.std::pair"*** %121, align 8
  %123 = ptrtoint %"struct.std::pair"** %118 to i64
  %124 = ptrtoint %"struct.std::pair"** %122 to i64
  %125 = sub i64 0, %124
  %126 = add i64 %123, %125
  %127 = sub i64 %123, %124
  %128 = mul i64 %126, %124
  %129 = sub i64 %123, 5017916195437747826
  %130 = sub i64 %129, %124
  %131 = add i64 %130, 5017916195437747826
  %132 = sub i64 %123, %124
  %133 = sub i64 0, 8
  %134 = add i64 %131, %133
  %135 = sub i64 %131, 8
  %136 = mul i64 %134, 8
  %137 = sub i64 %131, -6818258933672080171
  %138 = sub i64 %137, 8
  %139 = add i64 %138, -6818258933672080171
  %140 = sub i64 %131, 8
  %141 = mul i64 %139, 8
  %142 = sdiv exact i64 %131, 8
  %143 = sub i64 0, -843324242037876414
  %144 = sub i64 %143, %113
  %145 = add i64 %144, -843324242037876414
  %146 = sub i64 0, %113
  %147 = sub i64 0, %142
  %148 = sub i64 %145, %147
  %149 = add i64 %145, %142
  %150 = sub i64 0, 1621137988387190299
  %151 = sub i64 %150, %113
  %152 = add i64 %151, 1621137988387190299
  %153 = sub i64 0, %113
  %154 = sub i64 0, %142
  %155 = sub i64 %152, %154
  %156 = add i64 %152, %142
  %157 = sub i64 %113, -1920094400192839876
  %158 = sub i64 %157, %142
  %159 = add i64 %158, -1920094400192839876
  %160 = sub i64 %113, %142
  %161 = icmp ugt i64 %108, %159
  store i32 -807639273, i32* %18
  br label %162

; <label>:162:                                    ; preds = %91, %86, %83, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeISt4pairIiiESaIS1_EE17_M_reallocate_mapEmb(%"class.std::deque"*, i64, i1 zeroext) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::pair"**
  %6 = alloca i1
  %7 = alloca %"struct.std::pair"**
  %8 = alloca i1
  %9 = alloca %"class.std::deque"*
  %10 = alloca %"struct.std::pair"***
  %11 = alloca i64*
  %12 = alloca %"struct.std::pair"***
  %13 = alloca i64*
  %14 = alloca i64*
  %15 = alloca i8*
  %16 = alloca i64*
  %17 = alloca i1
  %18 = alloca i1
  %19 = load i32, i32* @x.595
  %20 = load i32, i32* @y.596
  %21 = sub i32 %19, 604701462
  %22 = sub i32 %21, 1
  %23 = add i32 %22, 604701462
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  store i1 %27, i1* %18
  %28 = icmp slt i32 %20, 10
  store i1 %28, i1* %17
  %29 = alloca i32
  store i32 -302441445, i32* %29
  %30 = alloca i64
  %31 = alloca i64
  br label %32

; <label>:32:                                     ; preds = %3, %911
  %33 = load i32, i32* %29
  switch i32 %33, label %34 [
    i32 -302441445, label %35
    i32 38304539, label %55
    i32 -1211292800, label %135
    i32 1875737157, label %138
    i32 981286110, label %165
    i32 194892314, label %213
    i32 -1166252858, label %216
    i32 -1071739546, label %219
    i32 219076959, label %235
    i32 -1347912942, label %262
    i32 202365827, label %263
    i32 -1432414278, label %278
    i32 -2097544259, label %295
    i32 -1427879936, label %315
    i32 -1489940647, label %331
    i32 -1719055897, label %359
    i32 -766700071, label %360
    i32 2038187586, label %388
    i32 -1128747389, label %459
    i32 1713872540, label %462
    i32 691593014, label %465
    i32 -1734101892, label %493
    i32 -2133968782, label %508
    i32 1610407524, label %509
    i32 -824367834, label %554
    i32 1880076005, label %570
    i32 -581913051, label %602
    i32 -950871938, label %603
    i32 1886773738, label %728
    i32 1237277826, label %768
    i32 -1682062218, label %769
    i32 -724419881, label %770
    i32 1494750133, label %893
    i32 1103171699, label %894
  ]

; <label>:34:                                     ; preds = %32
  br label %911

; <label>:35:                                     ; preds = %32
  %36 = load volatile i1, i1* %18
  %37 = load volatile i1, i1* %17
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 38304539, i32 -950871938
  store i32 %54, i32* %29
  br label %911

; <label>:55:                                     ; preds = %32
  %56 = alloca %"class.std::deque"*, align 8
  %57 = alloca i64, align 8
  store i64* %57, i64** %16
  %58 = alloca i8, align 1
  store i8* %58, i8** %15
  %59 = alloca i64, align 8
  store i64* %59, i64** %14
  %60 = alloca i64, align 8
  store i64* %60, i64** %13
  %61 = alloca %"struct.std::pair"**, align 8
  store %"struct.std::pair"*** %61, %"struct.std::pair"**** %12
  %62 = alloca i64, align 8
  store i64* %62, i64** %11
  %63 = alloca %"struct.std::pair"**, align 8
  store %"struct.std::pair"*** %63, %"struct.std::pair"**** %10
  store %"class.std::deque"* %0, %"class.std::deque"** %56, align 8
  %64 = load volatile i64*, i64** %16
  store i64 %1, i64* %64, align 8
  %65 = zext i1 %2 to i8
  %66 = load volatile i8*, i8** %15
  store i8 %65, i8* %66, align 1
  %67 = load %"class.std::deque"*, %"class.std::deque"** %56, align 8
  store %"class.std::deque"* %67, %"class.std::deque"** %9
  %68 = load volatile %"class.std::deque"*, %"class.std::deque"** %9
  %69 = bitcast %"class.std::deque"* %68 to %"class.std::_Deque_base"*
  %70 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %69, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %70, i32 0, i32 3
  %72 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %71, i32 0, i32 3
  %73 = load %"struct.std::pair"**, %"struct.std::pair"*** %72, align 8
  %74 = load volatile %"class.std::deque"*, %"class.std::deque"** %9
  %75 = bitcast %"class.std::deque"* %74 to %"class.std::_Deque_base"*
  %76 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %75, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %76, i32 0, i32 2
  %78 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %77, i32 0, i32 3
  %79 = load %"struct.std::pair"**, %"struct.std::pair"*** %78, align 8
  %80 = ptrtoint %"struct.std::pair"** %73 to i64
  %81 = ptrtoint %"struct.std::pair"** %79 to i64
  %82 = add i64 %80, -4422504731962284864
  %83 = sub i64 %82, %81
  %84 = sub i64 %83, -4422504731962284864
  %85 = sub i64 %80, %81
  %86 = sdiv exact i64 %84, 8
  %87 = sub i64 0, 1
  %88 = sub i64 %86, %87
  %89 = add nsw i64 %86, 1
  %90 = load volatile i64*, i64** %14
  store i64 %88, i64* %90, align 8
  %91 = load volatile i64*, i64** %14
  %92 = load i64, i64* %91, align 8
  %93 = load volatile i64*, i64** %16
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 0, %94
  %96 = sub i64 %92, %95
  %97 = add i64 %92, %94
  %98 = load volatile i64*, i64** %13
  store i64 %96, i64* %98, align 8
  %99 = load volatile %"class.std::deque"*, %"class.std::deque"** %9
  %100 = bitcast %"class.std::deque"* %99 to %"class.std::_Deque_base"*
  %101 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %100, i32 0, i32 0
  %102 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %101, i32 0, i32 1
  %103 = load i64, i64* %102, align 8
  %104 = load volatile i64*, i64** %13
  %105 = load i64, i64* %104, align 8
  %106 = mul i64 2, %105
  %107 = icmp ugt i64 %103, %106
  store i1 %107, i1* %8
  %108 = load i32, i32* @x.595
  %109 = load i32, i32* @y.596
  %110 = add i32 %108, 877071467
  %111 = sub i32 %110, 1
  %112 = sub i32 %111, 877071467
  %113 = sub i32 %108, 1
  %114 = mul i32 %108, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %109, 10
  %118 = xor i1 %116, true
  %119 = xor i1 %117, true
  %120 = xor i1 false, true
  %121 = and i1 %118, false
  %122 = and i1 %116, %120
  %123 = and i1 %119, false
  %124 = and i1 %117, %120
  %125 = or i1 %121, %122
  %126 = or i1 %123, %124
  %127 = xor i1 %125, %126
  %128 = or i1 %118, %119
  %129 = xor i1 %128, true
  %130 = or i1 false, %120
  %131 = and i1 %129, %130
  %132 = or i1 %127, %131
  %133 = or i1 %116, %117
  %134 = select i1 %132, i32 -1211292800, i32 -950871938
  store i32 %134, i32* %29
  br label %911

; <label>:135:                                    ; preds = %32
  %136 = load volatile i1, i1* %8
  %137 = select i1 %136, i32 1875737157, i32 -766700071
  store i32 %137, i32* %29
  br label %911

; <label>:138:                                    ; preds = %32
  %139 = load i32, i32* @x.595
  %140 = load i32, i32* @y.596
  %141 = sub i32 0, 1
  %142 = add i32 %139, %141
  %143 = sub i32 %139, 1
  %144 = mul i32 %139, %142
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %140, 10
  %148 = xor i1 %146, true
  %149 = xor i1 %147, true
  %150 = xor i1 true, true
  %151 = and i1 %148, true
  %152 = and i1 %146, %150
  %153 = and i1 %149, true
  %154 = and i1 %147, %150
  %155 = or i1 %151, %152
  %156 = or i1 %153, %154
  %157 = xor i1 %155, %156
  %158 = or i1 %148, %149
  %159 = xor i1 %158, true
  %160 = or i1 true, %150
  %161 = and i1 %159, %160
  %162 = or i1 %157, %161
  %163 = or i1 %146, %147
  %164 = select i1 %162, i32 981286110, i32 1886773738
  store i32 %164, i32* %29
  br label %911

; <label>:165:                                    ; preds = %32
  %166 = load volatile %"class.std::deque"*, %"class.std::deque"** %9
  %167 = bitcast %"class.std::deque"* %166 to %"class.std::_Deque_base"*
  %168 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %167, i32 0, i32 0
  %169 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %168, i32 0, i32 0
  %170 = load %"struct.std::pair"**, %"struct.std::pair"*** %169, align 8
  %171 = load volatile %"class.std::deque"*, %"class.std::deque"** %9
  %172 = bitcast %"class.std::deque"* %171 to %"class.std::_Deque_base"*
  %173 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %172, i32 0, i32 0
  %174 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %173, i32 0, i32 1
  %175 = load i64, i64* %174, align 8
  %176 = load volatile i64*, i64** %13
  %177 = load i64, i64* %176, align 8
  %178 = sub i64 0, %177
  %179 = add i64 %175, %178
  %180 = sub i64 %175, %177
  %181 = udiv i64 %179, 2
  %182 = getelementptr inbounds %"struct.std::pair"*, %"struct.std::pair"** %170, i64 %181
  store %"struct.std::pair"** %182, %"struct.std::pair"*** %7
  %183 = load volatile i8*, i8** %15
  %184 = load i8, i8* %183, align 1
  %185 = trunc i8 %184 to i1
  store i1 %185, i1* %6
  %186 = load i32, i32* @x.595
  %187 = load i32, i32* @y.596
  %188 = add i32 %186, 309704015
  %189 = sub i32 %188, 1
  %190 = sub i32 %189, 309704015
  %191 = sub i32 %186, 1
  %192 = mul i32 %186, %190
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %187, 10
  %196 = xor i1 %194, true
  %197 = xor i1 %195, true
  %198 = xor i1 true, true
  %199 = and i1 %196, true
  %200 = and i1 %194, %198
  %201 = and i1 %197, true
  %202 = and i1 %195, %198
  %203 = or i1 %199, %200
  %204 = or i1 %201, %202
  %205 = xor i1 %203, %204
  %206 = or i1 %196, %197
  %207 = xor i1 %206, true
  %208 = or i1 true, %198
  %209 = and i1 %207, %208
  %210 = or i1 %205, %209
  %211 = or i1 %194, %195
  %212 = select i1 %210, i32 194892314, i32 1886773738
  store i32 %212, i32* %29
  br label %911

; <label>:213:                                    ; preds = %32
  %214 = load volatile i1, i1* %6
  %215 = select i1 %214, i32 -1166252858, i32 -1071739546
  store i32 %215, i32* %29
  br label %911

; <label>:216:                                    ; preds = %32
  %217 = load volatile i64*, i64** %16
  %218 = load i64, i64* %217, align 8
  store i32 202365827, i32* %29
  store i64 %218, i64* %30
  br label %911

; <label>:219:                                    ; preds = %32
  %220 = load i32, i32* @x.595
  %221 = load i32, i32* @y.596
  %222 = add i32 %220, -584366480
  %223 = sub i32 %222, 1
  %224 = sub i32 %223, -584366480
  %225 = sub i32 %220, 1
  %226 = mul i32 %220, %224
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %221, 10
  %230 = and i1 %228, %229
  %231 = xor i1 %228, %229
  %232 = or i1 %230, %231
  %233 = or i1 %228, %229
  %234 = select i1 %232, i32 219076959, i32 1237277826
  store i32 %234, i32* %29
  br label %911

; <label>:235:                                    ; preds = %32
  %236 = load i32, i32* @x.595
  %237 = load i32, i32* @y.596
  %238 = sub i32 0, 1
  %239 = add i32 %236, %238
  %240 = sub i32 %236, 1
  %241 = mul i32 %236, %239
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %237, 10
  %245 = xor i1 %243, true
  %246 = xor i1 %244, true
  %247 = xor i1 false, true
  %248 = and i1 %245, false
  %249 = and i1 %243, %247
  %250 = and i1 %246, false
  %251 = and i1 %244, %247
  %252 = or i1 %248, %249
  %253 = or i1 %250, %251
  %254 = xor i1 %252, %253
  %255 = or i1 %245, %246
  %256 = xor i1 %255, true
  %257 = or i1 false, %247
  %258 = and i1 %256, %257
  %259 = or i1 %254, %258
  %260 = or i1 %243, %244
  %261 = select i1 %259, i32 -1347912942, i32 1237277826
  store i32 %261, i32* %29
  br label %911

; <label>:262:                                    ; preds = %32
  store i32 202365827, i32* %29
  store i64 0, i64* %30
  br label %911

; <label>:263:                                    ; preds = %32
  %264 = load i64, i64* %30
  %265 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %7
  %266 = getelementptr inbounds %"struct.std::pair"*, %"struct.std::pair"** %265, i64 %264
  %267 = load volatile %"struct.std::pair"***, %"struct.std::pair"**** %12
  store %"struct.std::pair"** %266, %"struct.std::pair"*** %267, align 8
  %268 = load volatile %"struct.std::pair"***, %"struct.std::pair"**** %12
  %269 = load %"struct.std::pair"**, %"struct.std::pair"*** %268, align 8
  %270 = load volatile %"class.std::deque"*, %"class.std::deque"** %9
  %271 = bitcast %"class.std::deque"* %270 to %"class.std::_Deque_base"*
  %272 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %271, i32 0, i32 0
  %273 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %272, i32 0, i32 2
  %274 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %273, i32 0, i32 3
  %275 = load %"struct.std::pair"**, %"struct.std::pair"*** %274, align 8
  %276 = icmp ult %"struct.std::pair"** %269, %275
  %277 = select i1 %276, i32 -1432414278, i32 -2097544259
  store i32 %277, i32* %29
  br label %911

; <label>:278:                                    ; preds = %32
  %279 = load volatile %"class.std::deque"*, %"class.std::deque"** %9
  %280 = bitcast %"class.std::deque"* %279 to %"class.std::_Deque_base"*
  %281 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %280, i32 0, i32 0
  %282 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %281, i32 0, i32 2
  %283 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %282, i32 0, i32 3
  %284 = load %"struct.std::pair"**, %"struct.std::pair"*** %283, align 8
  %285 = load volatile %"class.std::deque"*, %"class.std::deque"** %9
  %286 = bitcast %"class.std::deque"* %285 to %"class.std::_Deque_base"*
  %287 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %286, i32 0, i32 0
  %288 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %287, i32 0, i32 3
  %289 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %288, i32 0, i32 3
  %290 = load %"struct.std::pair"**, %"struct.std::pair"*** %289, align 8
  %291 = getelementptr inbounds %"struct.std::pair"*, %"struct.std::pair"** %290, i64 1
  %292 = load volatile %"struct.std::pair"***, %"struct.std::pair"**** %12
  %293 = load %"struct.std::pair"**, %"struct.std::pair"*** %292, align 8
  %294 = call %"struct.std::pair"** @_ZSt4copyIPPSt4pairIiiES3_ET0_T_S5_S4_(%"struct.std::pair"** %284, %"struct.std::pair"** %291, %"struct.std::pair"** %293)
  store i32 -1427879936, i32* %29
  br label %911

; <label>:295:                                    ; preds = %32
  %296 = load volatile %"class.std::deque"*, %"class.std::deque"** %9
  %297 = bitcast %"class.std::deque"* %296 to %"class.std::_Deque_base"*
  %298 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %297, i32 0, i32 0
  %299 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %298, i32 0, i32 2
  %300 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %299, i32 0, i32 3
  %301 = load %"struct.std::pair"**, %"struct.std::pair"*** %300, align 8
  %302 = load volatile %"class.std::deque"*, %"class.std::deque"** %9
  %303 = bitcast %"class.std::deque"* %302 to %"class.std::_Deque_base"*
  %304 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %303, i32 0, i32 0
  %305 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %304, i32 0, i32 3
  %306 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %305, i32 0, i32 3
  %307 = load %"struct.std::pair"**, %"struct.std::pair"*** %306, align 8
  %308 = getelementptr inbounds %"struct.std::pair"*, %"struct.std::pair"** %307, i64 1
  %309 = load volatile %"struct.std::pair"***, %"struct.std::pair"**** %12
  %310 = load %"struct.std::pair"**, %"struct.std::pair"*** %309, align 8
  %311 = load volatile i64*, i64** %14
  %312 = load i64, i64* %311, align 8
  %313 = getelementptr inbounds %"struct.std::pair"*, %"struct.std::pair"** %310, i64 %312
  %314 = call %"struct.std::pair"** @_ZSt13copy_backwardIPPSt4pairIiiES3_ET0_T_S5_S4_(%"struct.std::pair"** %301, %"struct.std::pair"** %308, %"struct.std::pair"** %313)
  store i32 -1427879936, i32* %29
  br label %911

; <label>:315:                                    ; preds = %32
  %316 = load i32, i32* @x.595
  %317 = load i32, i32* @y.596
  %318 = sub i32 %316, -2090661772
  %319 = sub i32 %318, 1
  %320 = add i32 %319, -2090661772
  %321 = sub i32 %316, 1
  %322 = mul i32 %316, %320
  %323 = urem i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %317, 10
  %326 = and i1 %324, %325
  %327 = xor i1 %324, %325
  %328 = or i1 %326, %327
  %329 = or i1 %324, %325
  %330 = select i1 %328, i32 -1489940647, i32 -1682062218
  store i32 %330, i32* %29
  br label %911

; <label>:331:                                    ; preds = %32
  %332 = load i32, i32* @x.595
  %333 = load i32, i32* @y.596
  %334 = add i32 %332, 845583519
  %335 = sub i32 %334, 1
  %336 = sub i32 %335, 845583519
  %337 = sub i32 %332, 1
  %338 = mul i32 %332, %336
  %339 = urem i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %333, 10
  %342 = xor i1 %340, true
  %343 = xor i1 %341, true
  %344 = xor i1 true, true
  %345 = and i1 %342, true
  %346 = and i1 %340, %344
  %347 = and i1 %343, true
  %348 = and i1 %341, %344
  %349 = or i1 %345, %346
  %350 = or i1 %347, %348
  %351 = xor i1 %349, %350
  %352 = or i1 %342, %343
  %353 = xor i1 %352, true
  %354 = or i1 true, %344
  %355 = and i1 %353, %354
  %356 = or i1 %351, %355
  %357 = or i1 %340, %341
  %358 = select i1 %356, i32 -1719055897, i32 -1682062218
  store i32 %358, i32* %29
  br label %911

; <label>:359:                                    ; preds = %32
  store i32 -824367834, i32* %29
  br label %911

; <label>:360:                                    ; preds = %32
  %361 = load i32, i32* @x.595
  %362 = load i32, i32* @y.596
  %363 = sub i32 %361, 1259069184
  %364 = sub i32 %363, 1
  %365 = add i32 %364, 1259069184
  %366 = sub i32 %361, 1
  %367 = mul i32 %361, %365
  %368 = urem i32 %367, 2
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %362, 10
  %371 = xor i1 %369, true
  %372 = xor i1 %370, true
  %373 = xor i1 true, true
  %374 = and i1 %371, true
  %375 = and i1 %369, %373
  %376 = and i1 %372, true
  %377 = and i1 %370, %373
  %378 = or i1 %374, %375
  %379 = or i1 %376, %377
  %380 = xor i1 %378, %379
  %381 = or i1 %371, %372
  %382 = xor i1 %381, true
  %383 = or i1 true, %373
  %384 = and i1 %382, %383
  %385 = or i1 %380, %384
  %386 = or i1 %369, %370
  %387 = select i1 %385, i32 2038187586, i32 -724419881
  store i32 %387, i32* %29
  br label %911

; <label>:388:                                    ; preds = %32
  %389 = load volatile %"class.std::deque"*, %"class.std::deque"** %9
  %390 = bitcast %"class.std::deque"* %389 to %"class.std::_Deque_base"*
  %391 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %390, i32 0, i32 0
  %392 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %391, i32 0, i32 1
  %393 = load i64, i64* %392, align 8
  %394 = load volatile %"class.std::deque"*, %"class.std::deque"** %9
  %395 = bitcast %"class.std::deque"* %394 to %"class.std::_Deque_base"*
  %396 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %395, i32 0, i32 0
  %397 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %396, i32 0, i32 1
  %398 = load volatile i64*, i64** %16
  %399 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %397, i64* dereferenceable(8) %398)
  %400 = load i64, i64* %399, align 8
  %401 = add i64 %393, 7033271315138074226
  %402 = add i64 %401, %400
  %403 = sub i64 %402, 7033271315138074226
  %404 = add i64 %393, %400
  %405 = sub i64 0, %403
  %406 = sub i64 0, 2
  %407 = add i64 %405, %406
  %408 = sub i64 0, %407
  %409 = add i64 %403, 2
  %410 = load volatile i64*, i64** %11
  store i64 %408, i64* %410, align 8
  %411 = load volatile %"class.std::deque"*, %"class.std::deque"** %9
  %412 = bitcast %"class.std::deque"* %411 to %"class.std::_Deque_base"*
  %413 = load volatile i64*, i64** %11
  %414 = load i64, i64* %413, align 8
  %415 = call %"struct.std::pair"** @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE15_M_allocate_mapEm(%"class.std::_Deque_base"* %412, i64 %414)
  %416 = load volatile %"struct.std::pair"***, %"struct.std::pair"**** %10
  store %"struct.std::pair"** %415, %"struct.std::pair"*** %416, align 8
  %417 = load volatile %"struct.std::pair"***, %"struct.std::pair"**** %10
  %418 = load %"struct.std::pair"**, %"struct.std::pair"*** %417, align 8
  %419 = load volatile i64*, i64** %11
  %420 = load i64, i64* %419, align 8
  %421 = load volatile i64*, i64** %13
  %422 = load i64, i64* %421, align 8
  %423 = add i64 %420, 7073263001865064330
  %424 = sub i64 %423, %422
  %425 = sub i64 %424, 7073263001865064330
  %426 = sub i64 %420, %422
  %427 = udiv i64 %425, 2
  %428 = getelementptr inbounds %"struct.std::pair"*, %"struct.std::pair"** %418, i64 %427
  store %"struct.std::pair"** %428, %"struct.std::pair"*** %5
  %429 = load volatile i8*, i8** %15
  %430 = load i8, i8* %429, align 1
  %431 = trunc i8 %430 to i1
  store i1 %431, i1* %4
  %432 = load i32, i32* @x.595
  %433 = load i32, i32* @y.596
  %434 = add i32 %432, 372757359
  %435 = sub i32 %434, 1
  %436 = sub i32 %435, 372757359
  %437 = sub i32 %432, 1
  %438 = mul i32 %432, %436
  %439 = urem i32 %438, 2
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %433, 10
  %442 = xor i1 %440, true
  %443 = xor i1 %441, true
  %444 = xor i1 true, true
  %445 = and i1 %442, true
  %446 = and i1 %440, %444
  %447 = and i1 %443, true
  %448 = and i1 %441, %444
  %449 = or i1 %445, %446
  %450 = or i1 %447, %448
  %451 = xor i1 %449, %450
  %452 = or i1 %442, %443
  %453 = xor i1 %452, true
  %454 = or i1 true, %444
  %455 = and i1 %453, %454
  %456 = or i1 %451, %455
  %457 = or i1 %440, %441
  %458 = select i1 %456, i32 -1128747389, i32 -724419881
  store i32 %458, i32* %29
  br label %911

; <label>:459:                                    ; preds = %32
  %460 = load volatile i1, i1* %4
  %461 = select i1 %460, i32 1713872540, i32 691593014
  store i32 %461, i32* %29
  br label %911

; <label>:462:                                    ; preds = %32
  %463 = load volatile i64*, i64** %16
  %464 = load i64, i64* %463, align 8
  store i32 1610407524, i32* %29
  store i64 %464, i64* %31
  br label %911

; <label>:465:                                    ; preds = %32
  %466 = load i32, i32* @x.595
  %467 = load i32, i32* @y.596
  %468 = add i32 %466, -265399042
  %469 = sub i32 %468, 1
  %470 = sub i32 %469, -265399042
  %471 = sub i32 %466, 1
  %472 = mul i32 %466, %470
  %473 = urem i32 %472, 2
  %474 = icmp eq i32 %473, 0
  %475 = icmp slt i32 %467, 10
  %476 = xor i1 %474, true
  %477 = xor i1 %475, true
  %478 = xor i1 true, true
  %479 = and i1 %476, true
  %480 = and i1 %474, %478
  %481 = and i1 %477, true
  %482 = and i1 %475, %478
  %483 = or i1 %479, %480
  %484 = or i1 %481, %482
  %485 = xor i1 %483, %484
  %486 = or i1 %476, %477
  %487 = xor i1 %486, true
  %488 = or i1 true, %478
  %489 = and i1 %487, %488
  %490 = or i1 %485, %489
  %491 = or i1 %474, %475
  %492 = select i1 %490, i32 -1734101892, i32 1494750133
  store i32 %492, i32* %29
  br label %911

; <label>:493:                                    ; preds = %32
  %494 = load i32, i32* @x.595
  %495 = load i32, i32* @y.596
  %496 = sub i32 0, 1
  %497 = add i32 %494, %496
  %498 = sub i32 %494, 1
  %499 = mul i32 %494, %497
  %500 = urem i32 %499, 2
  %501 = icmp eq i32 %500, 0
  %502 = icmp slt i32 %495, 10
  %503 = and i1 %501, %502
  %504 = xor i1 %501, %502
  %505 = or i1 %503, %504
  %506 = or i1 %501, %502
  %507 = select i1 %505, i32 -2133968782, i32 1494750133
  store i32 %507, i32* %29
  br label %911

; <label>:508:                                    ; preds = %32
  store i32 1610407524, i32* %29
  store i64 0, i64* %31
  br label %911

; <label>:509:                                    ; preds = %32
  %510 = load i64, i64* %31
  %511 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %5
  %512 = getelementptr inbounds %"struct.std::pair"*, %"struct.std::pair"** %511, i64 %510
  %513 = load volatile %"struct.std::pair"***, %"struct.std::pair"**** %12
  store %"struct.std::pair"** %512, %"struct.std::pair"*** %513, align 8
  %514 = load volatile %"class.std::deque"*, %"class.std::deque"** %9
  %515 = bitcast %"class.std::deque"* %514 to %"class.std::_Deque_base"*
  %516 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %515, i32 0, i32 0
  %517 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %516, i32 0, i32 2
  %518 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %517, i32 0, i32 3
  %519 = load %"struct.std::pair"**, %"struct.std::pair"*** %518, align 8
  %520 = load volatile %"class.std::deque"*, %"class.std::deque"** %9
  %521 = bitcast %"class.std::deque"* %520 to %"class.std::_Deque_base"*
  %522 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %521, i32 0, i32 0
  %523 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %522, i32 0, i32 3
  %524 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %523, i32 0, i32 3
  %525 = load %"struct.std::pair"**, %"struct.std::pair"*** %524, align 8
  %526 = getelementptr inbounds %"struct.std::pair"*, %"struct.std::pair"** %525, i64 1
  %527 = load volatile %"struct.std::pair"***, %"struct.std::pair"**** %12
  %528 = load %"struct.std::pair"**, %"struct.std::pair"*** %527, align 8
  %529 = call %"struct.std::pair"** @_ZSt4copyIPPSt4pairIiiES3_ET0_T_S5_S4_(%"struct.std::pair"** %519, %"struct.std::pair"** %526, %"struct.std::pair"** %528)
  %530 = load volatile %"class.std::deque"*, %"class.std::deque"** %9
  %531 = bitcast %"class.std::deque"* %530 to %"class.std::_Deque_base"*
  %532 = load volatile %"class.std::deque"*, %"class.std::deque"** %9
  %533 = bitcast %"class.std::deque"* %532 to %"class.std::_Deque_base"*
  %534 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %533, i32 0, i32 0
  %535 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %534, i32 0, i32 0
  %536 = load %"struct.std::pair"**, %"struct.std::pair"*** %535, align 8
  %537 = load volatile %"class.std::deque"*, %"class.std::deque"** %9
  %538 = bitcast %"class.std::deque"* %537 to %"class.std::_Deque_base"*
  %539 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %538, i32 0, i32 0
  %540 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %539, i32 0, i32 1
  %541 = load i64, i64* %540, align 8
  call void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE17_M_deallocate_mapEPPS1_m(%"class.std::_Deque_base"* %531, %"struct.std::pair"** %536, i64 %541) #3
  %542 = load volatile %"struct.std::pair"***, %"struct.std::pair"**** %10
  %543 = load %"struct.std::pair"**, %"struct.std::pair"*** %542, align 8
  %544 = load volatile %"class.std::deque"*, %"class.std::deque"** %9
  %545 = bitcast %"class.std::deque"* %544 to %"class.std::_Deque_base"*
  %546 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %545, i32 0, i32 0
  %547 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %546, i32 0, i32 0
  store %"struct.std::pair"** %543, %"struct.std::pair"*** %547, align 8
  %548 = load volatile i64*, i64** %11
  %549 = load i64, i64* %548, align 8
  %550 = load volatile %"class.std::deque"*, %"class.std::deque"** %9
  %551 = bitcast %"class.std::deque"* %550 to %"class.std::_Deque_base"*
  %552 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %551, i32 0, i32 0
  %553 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %552, i32 0, i32 1
  store i64 %549, i64* %553, align 8
  store i32 -824367834, i32* %29
  br label %911

; <label>:554:                                    ; preds = %32
  %555 = load i32, i32* @x.595
  %556 = load i32, i32* @y.596
  %557 = add i32 %555, -962129112
  %558 = sub i32 %557, 1
  %559 = sub i32 %558, -962129112
  %560 = sub i32 %555, 1
  %561 = mul i32 %555, %559
  %562 = urem i32 %561, 2
  %563 = icmp eq i32 %562, 0
  %564 = icmp slt i32 %556, 10
  %565 = and i1 %563, %564
  %566 = xor i1 %563, %564
  %567 = or i1 %565, %566
  %568 = or i1 %563, %564
  %569 = select i1 %567, i32 1880076005, i32 1103171699
  store i32 %569, i32* %29
  br label %911

; <label>:570:                                    ; preds = %32
  %571 = load volatile %"class.std::deque"*, %"class.std::deque"** %9
  %572 = bitcast %"class.std::deque"* %571 to %"class.std::_Deque_base"*
  %573 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %572, i32 0, i32 0
  %574 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %573, i32 0, i32 2
  %575 = load volatile %"struct.std::pair"***, %"struct.std::pair"**** %12
  %576 = load %"struct.std::pair"**, %"struct.std::pair"*** %575, align 8
  call void @_ZNSt15_Deque_iteratorISt4pairIiiERS1_PS1_E11_M_set_nodeEPS3_(%"struct.std::_Deque_iterator"* %574, %"struct.std::pair"** %576) #3
  %577 = load volatile %"class.std::deque"*, %"class.std::deque"** %9
  %578 = bitcast %"class.std::deque"* %577 to %"class.std::_Deque_base"*
  %579 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %578, i32 0, i32 0
  %580 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %579, i32 0, i32 3
  %581 = load volatile %"struct.std::pair"***, %"struct.std::pair"**** %12
  %582 = load %"struct.std::pair"**, %"struct.std::pair"*** %581, align 8
  %583 = load volatile i64*, i64** %14
  %584 = load i64, i64* %583, align 8
  %585 = getelementptr inbounds %"struct.std::pair"*, %"struct.std::pair"** %582, i64 %584
  %586 = getelementptr inbounds %"struct.std::pair"*, %"struct.std::pair"** %585, i64 -1
  call void @_ZNSt15_Deque_iteratorISt4pairIiiERS1_PS1_E11_M_set_nodeEPS3_(%"struct.std::_Deque_iterator"* %580, %"struct.std::pair"** %586) #3
  %587 = load i32, i32* @x.595
  %588 = load i32, i32* @y.596
  %589 = sub i32 %587, 1131189433
  %590 = sub i32 %589, 1
  %591 = add i32 %590, 1131189433
  %592 = sub i32 %587, 1
  %593 = mul i32 %587, %591
  %594 = urem i32 %593, 2
  %595 = icmp eq i32 %594, 0
  %596 = icmp slt i32 %588, 10
  %597 = and i1 %595, %596
  %598 = xor i1 %595, %596
  %599 = or i1 %597, %598
  %600 = or i1 %595, %596
  %601 = select i1 %599, i32 -581913051, i32 1103171699
  store i32 %601, i32* %29
  br label %911

; <label>:602:                                    ; preds = %32
  ret void

; <label>:603:                                    ; preds = %32
  %604 = alloca %"class.std::deque"*, align 8
  %605 = alloca i64, align 8
  %606 = alloca i8, align 1
  %607 = alloca i64, align 8
  %608 = alloca i64, align 8
  %609 = alloca %"struct.std::pair"**, align 8
  %610 = alloca i64, align 8
  %611 = alloca %"struct.std::pair"**, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %604, align 8
  store i64 %1, i64* %605, align 8
  %612 = zext i1 %2 to i8
  store i8 %612, i8* %606, align 1
  %613 = load %"class.std::deque"*, %"class.std::deque"** %604, align 8
  %614 = bitcast %"class.std::deque"* %613 to %"class.std::_Deque_base"*
  %615 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %614, i32 0, i32 0
  %616 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %615, i32 0, i32 3
  %617 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %616, i32 0, i32 3
  %618 = load %"struct.std::pair"**, %"struct.std::pair"*** %617, align 8
  %619 = bitcast %"class.std::deque"* %613 to %"class.std::_Deque_base"*
  %620 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %619, i32 0, i32 0
  %621 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %620, i32 0, i32 2
  %622 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %621, i32 0, i32 3
  %623 = load %"struct.std::pair"**, %"struct.std::pair"*** %622, align 8
  %624 = ptrtoint %"struct.std::pair"** %618 to i64
  %625 = ptrtoint %"struct.std::pair"** %623 to i64
  %626 = sub i64 0, -6315437843855187047
  %627 = sub i64 %626, %624
  %628 = add i64 %627, -6315437843855187047
  %629 = sub i64 0, %624
  %630 = add i64 %628, -7514464477602234718
  %631 = add i64 %630, %625
  %632 = sub i64 %631, -7514464477602234718
  %633 = add i64 %628, %625
  %634 = sub i64 0, %625
  %635 = add i64 %624, %634
  %636 = sub i64 %624, %625
  %637 = mul i64 %635, %625
  %638 = shl i64 %624, %625
  %639 = sub i64 %624, -8402515953855024497
  %640 = sub i64 %639, %625
  %641 = add i64 %640, -8402515953855024497
  %642 = sub i64 %624, %625
  %643 = mul i64 %641, %625
  %644 = shl i64 %624, %625
  %645 = sub i64 %624, -1076744714402540969
  %646 = sub i64 %645, %625
  %647 = add i64 %646, -1076744714402540969
  %648 = sub i64 %624, %625
  %649 = sdiv exact i64 %647, 8
  %650 = sub i64 0, %649
  %651 = add i64 0, %650
  %652 = sub i64 0, %649
  %653 = add i64 %651, -5008209488892701936
  %654 = add i64 %653, 1
  %655 = sub i64 %654, -5008209488892701936
  %656 = add i64 %651, 1
  %657 = shl i64 %649, 1
  %658 = sub i64 0, 8147762816891432687
  %659 = sub i64 %658, %649
  %660 = add i64 %659, 8147762816891432687
  %661 = sub i64 0, %649
  %662 = add i64 %660, -4369380834491482614
  %663 = add i64 %662, 1
  %664 = sub i64 %663, -4369380834491482614
  %665 = add i64 %660, 1
  %666 = sub i64 0, %649
  %667 = add i64 0, %666
  %668 = sub i64 0, %649
  %669 = sub i64 %667, 4899680748866580667
  %670 = add i64 %669, 1
  %671 = add i64 %670, 4899680748866580667
  %672 = add i64 %667, 1
  %673 = sub i64 0, %649
  %674 = add i64 0, %673
  %675 = sub i64 0, %649
  %676 = sub i64 %674, 182609157944640359
  %677 = add i64 %676, 1
  %678 = add i64 %677, 182609157944640359
  %679 = add i64 %674, 1
  %680 = add i64 0, -325101439138932028
  %681 = sub i64 %680, %649
  %682 = sub i64 %681, -325101439138932028
  %683 = sub i64 0, %649
  %684 = add i64 %682, -5768989289928052480
  %685 = add i64 %684, 1
  %686 = sub i64 %685, -5768989289928052480
  %687 = add i64 %682, 1
  %688 = shl i64 %649, 1
  %689 = sub i64 %649, 6175374769417577109
  %690 = sub i64 %689, 1
  %691 = add i64 %690, 6175374769417577109
  %692 = sub i64 %649, 1
  %693 = mul i64 %691, 1
  %694 = sub i64 0, 1
  %695 = sub i64 %649, %694
  %696 = add nsw i64 %649, 1
  store i64 %695, i64* %607, align 8
  %697 = load i64, i64* %607, align 8
  %698 = load i64, i64* %605, align 8
  %699 = shl i64 %697, %698
  %700 = add i64 0, 3313226193258138589
  %701 = sub i64 %700, %697
  %702 = sub i64 %701, 3313226193258138589
  %703 = sub i64 0, %697
  %704 = add i64 %702, -7170870557556117221
  %705 = add i64 %704, %698
  %706 = sub i64 %705, -7170870557556117221
  %707 = add i64 %702, %698
  %708 = add i64 %697, 2873456974849023443
  %709 = add i64 %708, %698
  %710 = sub i64 %709, 2873456974849023443
  %711 = add i64 %697, %698
  store i64 %710, i64* %608, align 8
  %712 = bitcast %"class.std::deque"* %613 to %"class.std::_Deque_base"*
  %713 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %712, i32 0, i32 0
  %714 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %713, i32 0, i32 1
  %715 = load i64, i64* %714, align 8
  %716 = load i64, i64* %608, align 8
  %717 = sub i64 0, 6574837756946098240
  %718 = sub i64 %717, 2
  %719 = add i64 %718, 6574837756946098240
  %720 = sub i64 0, 2
  %721 = sub i64 0, %716
  %722 = sub i64 %719, %721
  %723 = add i64 %719, %716
  %724 = shl i64 2, %716
  %725 = shl i64 2, %716
  %726 = mul i64 2, %716
  %727 = icmp ugt i64 %715, %726
  store i32 38304539, i32* %29
  br label %911

; <label>:728:                                    ; preds = %32
  %729 = load volatile %"class.std::deque"*, %"class.std::deque"** %9
  %730 = bitcast %"class.std::deque"* %729 to %"class.std::_Deque_base"*
  %731 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %730, i32 0, i32 0
  %732 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %731, i32 0, i32 0
  %733 = load %"struct.std::pair"**, %"struct.std::pair"*** %732, align 8
  %734 = load volatile %"class.std::deque"*, %"class.std::deque"** %9
  %735 = bitcast %"class.std::deque"* %734 to %"class.std::_Deque_base"*
  %736 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %735, i32 0, i32 0
  %737 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %736, i32 0, i32 1
  %738 = load i64, i64* %737, align 8
  %739 = load volatile i64*, i64** %13
  %740 = load i64, i64* %739, align 8
  %741 = shl i64 %738, %740
  %742 = shl i64 %738, %740
  %743 = add i64 %738, 2433054789631402683
  %744 = sub i64 %743, %740
  %745 = sub i64 %744, 2433054789631402683
  %746 = sub i64 %738, %740
  %747 = shl i64 %745, 2
  %748 = sub i64 0, -6403596440461989776
  %749 = sub i64 %748, %745
  %750 = add i64 %749, -6403596440461989776
  %751 = sub i64 0, %745
  %752 = sub i64 %750, -8629187114073799764
  %753 = add i64 %752, 2
  %754 = add i64 %753, -8629187114073799764
  %755 = add i64 %750, 2
  %756 = sub i64 0, 2
  %757 = add i64 %745, %756
  %758 = sub i64 %745, 2
  %759 = mul i64 %757, 2
  %760 = shl i64 %745, 2
  %761 = shl i64 %745, 2
  %762 = shl i64 %745, 2
  %763 = udiv i64 %745, 2
  %764 = getelementptr inbounds %"struct.std::pair"*, %"struct.std::pair"** %733, i64 %763
  %765 = load volatile i8*, i8** %15
  %766 = load i8, i8* %765, align 1
  %767 = trunc i8 %766 to i1
  store i32 981286110, i32* %29
  br label %911

; <label>:768:                                    ; preds = %32
  store i32 219076959, i32* %29
  br label %911

; <label>:769:                                    ; preds = %32
  store i32 -1489940647, i32* %29
  br label %911

; <label>:770:                                    ; preds = %32
  %771 = load volatile %"class.std::deque"*, %"class.std::deque"** %9
  %772 = bitcast %"class.std::deque"* %771 to %"class.std::_Deque_base"*
  %773 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %772, i32 0, i32 0
  %774 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %773, i32 0, i32 1
  %775 = load i64, i64* %774, align 8
  %776 = load volatile %"class.std::deque"*, %"class.std::deque"** %9
  %777 = bitcast %"class.std::deque"* %776 to %"class.std::_Deque_base"*
  %778 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %777, i32 0, i32 0
  %779 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %778, i32 0, i32 1
  %780 = load volatile i64*, i64** %16
  %781 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %779, i64* dereferenceable(8) %780)
  %782 = load i64, i64* %781, align 8
  %783 = add i64 %775, -6842051757257849786
  %784 = sub i64 %783, %782
  %785 = sub i64 %784, -6842051757257849786
  %786 = sub i64 %775, %782
  %787 = mul i64 %785, %782
  %788 = add i64 0, 3929078231578254915
  %789 = sub i64 %788, %775
  %790 = sub i64 %789, 3929078231578254915
  %791 = sub i64 0, %775
  %792 = sub i64 0, %782
  %793 = sub i64 %790, %792
  %794 = add i64 %790, %782
  %795 = sub i64 %775, -8575838241869606475
  %796 = sub i64 %795, %782
  %797 = add i64 %796, -8575838241869606475
  %798 = sub i64 %775, %782
  %799 = mul i64 %797, %782
  %800 = shl i64 %775, %782
  %801 = add i64 %775, 1135018799764381970
  %802 = sub i64 %801, %782
  %803 = sub i64 %802, 1135018799764381970
  %804 = sub i64 %775, %782
  %805 = mul i64 %803, %782
  %806 = shl i64 %775, %782
  %807 = add i64 %775, -4477640750995754037
  %808 = sub i64 %807, %782
  %809 = sub i64 %808, -4477640750995754037
  %810 = sub i64 %775, %782
  %811 = mul i64 %809, %782
  %812 = sub i64 %775, 6154771985523327473
  %813 = sub i64 %812, %782
  %814 = add i64 %813, 6154771985523327473
  %815 = sub i64 %775, %782
  %816 = mul i64 %814, %782
  %817 = sub i64 %775, 2390495944430094545
  %818 = add i64 %817, %782
  %819 = add i64 %818, 2390495944430094545
  %820 = add i64 %775, %782
  %821 = shl i64 %819, 2
  %822 = sub i64 %819, 2276837754057741870
  %823 = add i64 %822, 2
  %824 = add i64 %823, 2276837754057741870
  %825 = add i64 %819, 2
  %826 = load volatile i64*, i64** %11
  store i64 %824, i64* %826, align 8
  %827 = load volatile %"class.std::deque"*, %"class.std::deque"** %9
  %828 = bitcast %"class.std::deque"* %827 to %"class.std::_Deque_base"*
  %829 = load volatile i64*, i64** %11
  %830 = load i64, i64* %829, align 8
  %831 = call %"struct.std::pair"** @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE15_M_allocate_mapEm(%"class.std::_Deque_base"* %828, i64 %830)
  %832 = load volatile %"struct.std::pair"***, %"struct.std::pair"**** %10
  store %"struct.std::pair"** %831, %"struct.std::pair"*** %832, align 8
  %833 = load volatile %"struct.std::pair"***, %"struct.std::pair"**** %10
  %834 = load %"struct.std::pair"**, %"struct.std::pair"*** %833, align 8
  %835 = load volatile i64*, i64** %11
  %836 = load i64, i64* %835, align 8
  %837 = load volatile i64*, i64** %13
  %838 = load i64, i64* %837, align 8
  %839 = sub i64 0, %838
  %840 = add i64 %836, %839
  %841 = sub i64 %836, %838
  %842 = mul i64 %840, %838
  %843 = shl i64 %836, %838
  %844 = sub i64 0, -3793517127031503136
  %845 = sub i64 %844, %836
  %846 = add i64 %845, -3793517127031503136
  %847 = sub i64 0, %836
  %848 = sub i64 0, %846
  %849 = sub i64 0, %838
  %850 = add i64 %848, %849
  %851 = sub i64 0, %850
  %852 = add i64 %846, %838
  %853 = sub i64 0, %836
  %854 = add i64 0, %853
  %855 = sub i64 0, %836
  %856 = sub i64 %854, -5894228606184450145
  %857 = add i64 %856, %838
  %858 = add i64 %857, -5894228606184450145
  %859 = add i64 %854, %838
  %860 = add i64 %836, 5502099852397295608
  %861 = sub i64 %860, %838
  %862 = sub i64 %861, 5502099852397295608
  %863 = sub i64 %836, %838
  %864 = add i64 0, -3628465880196910746
  %865 = sub i64 %864, %862
  %866 = sub i64 %865, -3628465880196910746
  %867 = sub i64 0, %862
  %868 = sub i64 0, %866
  %869 = sub i64 0, 2
  %870 = add i64 %868, %869
  %871 = sub i64 0, %870
  %872 = add i64 %866, 2
  %873 = add i64 0, 5815693114964870161
  %874 = sub i64 %873, %862
  %875 = sub i64 %874, 5815693114964870161
  %876 = sub i64 0, %862
  %877 = sub i64 0, 2
  %878 = sub i64 %875, %877
  %879 = add i64 %875, 2
  %880 = sub i64 0, 2
  %881 = add i64 %862, %880
  %882 = sub i64 %862, 2
  %883 = mul i64 %881, 2
  %884 = sub i64 0, 2
  %885 = add i64 %862, %884
  %886 = sub i64 %862, 2
  %887 = mul i64 %885, 2
  %888 = udiv i64 %862, 2
  %889 = getelementptr inbounds %"struct.std::pair"*, %"struct.std::pair"** %834, i64 %888
  %890 = load volatile i8*, i8** %15
  %891 = load i8, i8* %890, align 1
  %892 = trunc i8 %891 to i1
  store i32 2038187586, i32* %29
  br label %911

; <label>:893:                                    ; preds = %32
  store i32 -1734101892, i32* %29
  br label %911

; <label>:894:                                    ; preds = %32
  %895 = load volatile %"class.std::deque"*, %"class.std::deque"** %9
  %896 = bitcast %"class.std::deque"* %895 to %"class.std::_Deque_base"*
  %897 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %896, i32 0, i32 0
  %898 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %897, i32 0, i32 2
  %899 = load volatile %"struct.std::pair"***, %"struct.std::pair"**** %12
  %900 = load %"struct.std::pair"**, %"struct.std::pair"*** %899, align 8
  call void @_ZNSt15_Deque_iteratorISt4pairIiiERS1_PS1_E11_M_set_nodeEPS3_(%"struct.std::_Deque_iterator"* %898, %"struct.std::pair"** %900) #3
  %901 = load volatile %"class.std::deque"*, %"class.std::deque"** %9
  %902 = bitcast %"class.std::deque"* %901 to %"class.std::_Deque_base"*
  %903 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %902, i32 0, i32 0
  %904 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %903, i32 0, i32 3
  %905 = load volatile %"struct.std::pair"***, %"struct.std::pair"**** %12
  %906 = load %"struct.std::pair"**, %"struct.std::pair"*** %905, align 8
  %907 = load volatile i64*, i64** %14
  %908 = load i64, i64* %907, align 8
  %909 = getelementptr inbounds %"struct.std::pair"*, %"struct.std::pair"** %906, i64 %908
  %910 = getelementptr inbounds %"struct.std::pair"*, %"struct.std::pair"** %909, i64 -1
  call void @_ZNSt15_Deque_iteratorISt4pairIiiERS1_PS1_E11_M_set_nodeEPS3_(%"struct.std::_Deque_iterator"* %904, %"struct.std::pair"** %910) #3
  store i32 1880076005, i32* %29
  br label %911

; <label>:911:                                    ; preds = %894, %893, %770, %769, %768, %728, %603, %570, %554, %509, %508, %493, %465, %462, %459, %388, %360, %359, %331, %315, %295, %278, %263, %262, %235, %219, %216, %213, %165, %138, %135, %55, %35, %34
  br label %32
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"** @_ZSt4copyIPPSt4pairIiiES3_ET0_T_S5_S4_(%"struct.std::pair"**, %"struct.std::pair"**, %"struct.std::pair"**) #0 comdat {
  %4 = alloca %"struct.std::pair"**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.597
  %8 = load i32, i32* @y.598
  %9 = sub i32 %7, 1815304432
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 1815304432
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1128345837, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %90
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1128345837, label %21
    i32 1237705465, label %41
    i32 829730073, label %78
    i32 -1624837927, label %80
  ]

; <label>:20:                                     ; preds = %18
  br label %90

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1237705465, i32 -1624837927
  store i32 %40, i32* %17
  br label %90

; <label>:41:                                     ; preds = %18
  %42 = alloca %"struct.std::pair"**, align 8
  %43 = alloca %"struct.std::pair"**, align 8
  %44 = alloca %"struct.std::pair"**, align 8
  store %"struct.std::pair"** %0, %"struct.std::pair"*** %42, align 8
  store %"struct.std::pair"** %1, %"struct.std::pair"*** %43, align 8
  store %"struct.std::pair"** %2, %"struct.std::pair"*** %44, align 8
  %45 = load %"struct.std::pair"**, %"struct.std::pair"*** %42, align 8
  %46 = call %"struct.std::pair"** @_ZSt12__miter_baseIPPSt4pairIiiEENSt11_Miter_baseIT_E13iterator_typeES5_(%"struct.std::pair"** %45)
  %47 = load %"struct.std::pair"**, %"struct.std::pair"*** %43, align 8
  %48 = call %"struct.std::pair"** @_ZSt12__miter_baseIPPSt4pairIiiEENSt11_Miter_baseIT_E13iterator_typeES5_(%"struct.std::pair"** %47)
  %49 = load %"struct.std::pair"**, %"struct.std::pair"*** %44, align 8
  %50 = call %"struct.std::pair"** @_ZSt14__copy_move_a2ILb0EPPSt4pairIiiES3_ET1_T0_S5_S4_(%"struct.std::pair"** %46, %"struct.std::pair"** %48, %"struct.std::pair"** %49)
  store %"struct.std::pair"** %50, %"struct.std::pair"*** %4
  %51 = load i32, i32* @x.597
  %52 = load i32, i32* @y.598
  %53 = sub i32 %51, 2035500811
  %54 = sub i32 %53, 1
  %55 = add i32 %54, 2035500811
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 829730073, i32 -1624837927
  store i32 %77, i32* %17
  br label %90

; <label>:78:                                     ; preds = %18
  %79 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %4
  ret %"struct.std::pair"** %79

; <label>:80:                                     ; preds = %18
  %81 = alloca %"struct.std::pair"**, align 8
  %82 = alloca %"struct.std::pair"**, align 8
  %83 = alloca %"struct.std::pair"**, align 8
  store %"struct.std::pair"** %0, %"struct.std::pair"*** %81, align 8
  store %"struct.std::pair"** %1, %"struct.std::pair"*** %82, align 8
  store %"struct.std::pair"** %2, %"struct.std::pair"*** %83, align 8
  %84 = load %"struct.std::pair"**, %"struct.std::pair"*** %81, align 8
  %85 = call %"struct.std::pair"** @_ZSt12__miter_baseIPPSt4pairIiiEENSt11_Miter_baseIT_E13iterator_typeES5_(%"struct.std::pair"** %84)
  %86 = load %"struct.std::pair"**, %"struct.std::pair"*** %82, align 8
  %87 = call %"struct.std::pair"** @_ZSt12__miter_baseIPPSt4pairIiiEENSt11_Miter_baseIT_E13iterator_typeES5_(%"struct.std::pair"** %86)
  %88 = load %"struct.std::pair"**, %"struct.std::pair"*** %83, align 8
  %89 = call %"struct.std::pair"** @_ZSt14__copy_move_a2ILb0EPPSt4pairIiiES3_ET1_T0_S5_S4_(%"struct.std::pair"** %85, %"struct.std::pair"** %87, %"struct.std::pair"** %88)
  store i32 1237705465, i32* %17
  br label %90

; <label>:90:                                     ; preds = %80, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"** @_ZSt13copy_backwardIPPSt4pairIiiES3_ET0_T_S5_S4_(%"struct.std::pair"**, %"struct.std::pair"**, %"struct.std::pair"**) #0 comdat {
  %4 = alloca %"struct.std::pair"**, align 8
  %5 = alloca %"struct.std::pair"**, align 8
  %6 = alloca %"struct.std::pair"**, align 8
  store %"struct.std::pair"** %0, %"struct.std::pair"*** %4, align 8
  store %"struct.std::pair"** %1, %"struct.std::pair"*** %5, align 8
  store %"struct.std::pair"** %2, %"struct.std::pair"*** %6, align 8
  %7 = load %"struct.std::pair"**, %"struct.std::pair"*** %4, align 8
  %8 = call %"struct.std::pair"** @_ZSt12__miter_baseIPPSt4pairIiiEENSt11_Miter_baseIT_E13iterator_typeES5_(%"struct.std::pair"** %7)
  %9 = load %"struct.std::pair"**, %"struct.std::pair"*** %5, align 8
  %10 = call %"struct.std::pair"** @_ZSt12__miter_baseIPPSt4pairIiiEENSt11_Miter_baseIT_E13iterator_typeES5_(%"struct.std::pair"** %9)
  %11 = load %"struct.std::pair"**, %"struct.std::pair"*** %6, align 8
  %12 = call %"struct.std::pair"** @_ZSt23__copy_move_backward_a2ILb0EPPSt4pairIiiES3_ET1_T0_S5_S4_(%"struct.std::pair"** %8, %"struct.std::pair"** %10, %"struct.std::pair"** %11)
  ret %"struct.std::pair"** %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"** @_ZSt14__copy_move_a2ILb0EPPSt4pairIiiES3_ET1_T0_S5_S4_(%"struct.std::pair"**, %"struct.std::pair"**, %"struct.std::pair"**) #0 comdat {
  %4 = alloca %"struct.std::pair"**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.601
  %8 = load i32, i32* @y.602
  %9 = add i32 %7, 914121843
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 914121843
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1072498392, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %67
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1072498392, label %21
    i32 -32745214, label %29
    i32 505539781, label %54
    i32 205143555, label %56
  ]

; <label>:20:                                     ; preds = %18
  br label %67

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -32745214, i32 205143555
  store i32 %28, i32* %17
  br label %67

; <label>:29:                                     ; preds = %18
  %30 = alloca %"struct.std::pair"**, align 8
  %31 = alloca %"struct.std::pair"**, align 8
  %32 = alloca %"struct.std::pair"**, align 8
  store %"struct.std::pair"** %0, %"struct.std::pair"*** %30, align 8
  store %"struct.std::pair"** %1, %"struct.std::pair"*** %31, align 8
  store %"struct.std::pair"** %2, %"struct.std::pair"*** %32, align 8
  %33 = load %"struct.std::pair"**, %"struct.std::pair"*** %30, align 8
  %34 = call %"struct.std::pair"** @_ZSt12__niter_baseIPPSt4pairIiiEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.std::pair"** %33)
  %35 = load %"struct.std::pair"**, %"struct.std::pair"*** %31, align 8
  %36 = call %"struct.std::pair"** @_ZSt12__niter_baseIPPSt4pairIiiEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.std::pair"** %35)
  %37 = load %"struct.std::pair"**, %"struct.std::pair"*** %32, align 8
  %38 = call %"struct.std::pair"** @_ZSt12__niter_baseIPPSt4pairIiiEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.std::pair"** %37)
  %39 = call %"struct.std::pair"** @_ZSt13__copy_move_aILb0EPPSt4pairIiiES3_ET1_T0_S5_S4_(%"struct.std::pair"** %34, %"struct.std::pair"** %36, %"struct.std::pair"** %38)
  store %"struct.std::pair"** %39, %"struct.std::pair"*** %4
  %40 = load i32, i32* @x.601
  %41 = load i32, i32* @y.602
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 505539781, i32 205143555
  store i32 %53, i32* %17
  br label %67

; <label>:54:                                     ; preds = %18
  %55 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %4
  ret %"struct.std::pair"** %55

; <label>:56:                                     ; preds = %18
  %57 = alloca %"struct.std::pair"**, align 8
  %58 = alloca %"struct.std::pair"**, align 8
  %59 = alloca %"struct.std::pair"**, align 8
  store %"struct.std::pair"** %0, %"struct.std::pair"*** %57, align 8
  store %"struct.std::pair"** %1, %"struct.std::pair"*** %58, align 8
  store %"struct.std::pair"** %2, %"struct.std::pair"*** %59, align 8
  %60 = load %"struct.std::pair"**, %"struct.std::pair"*** %57, align 8
  %61 = call %"struct.std::pair"** @_ZSt12__niter_baseIPPSt4pairIiiEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.std::pair"** %60)
  %62 = load %"struct.std::pair"**, %"struct.std::pair"*** %58, align 8
  %63 = call %"struct.std::pair"** @_ZSt12__niter_baseIPPSt4pairIiiEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.std::pair"** %62)
  %64 = load %"struct.std::pair"**, %"struct.std::pair"*** %59, align 8
  %65 = call %"struct.std::pair"** @_ZSt12__niter_baseIPPSt4pairIiiEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.std::pair"** %64)
  %66 = call %"struct.std::pair"** @_ZSt13__copy_move_aILb0EPPSt4pairIiiES3_ET1_T0_S5_S4_(%"struct.std::pair"** %61, %"struct.std::pair"** %63, %"struct.std::pair"** %65)
  store i32 -32745214, i32* %17
  br label %67

; <label>:67:                                     ; preds = %56, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"** @_ZSt12__miter_baseIPPSt4pairIiiEENSt11_Miter_baseIT_E13iterator_typeES5_(%"struct.std::pair"**) #4 comdat {
  %2 = alloca %"struct.std::pair"**, align 8
  store %"struct.std::pair"** %0, %"struct.std::pair"*** %2, align 8
  %3 = load %"struct.std::pair"**, %"struct.std::pair"*** %2, align 8
  %4 = call %"struct.std::pair"** @_ZNSt10_Iter_baseIPPSt4pairIiiELb0EE7_S_baseES3_(%"struct.std::pair"** %3)
  ret %"struct.std::pair"** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"** @_ZSt13__copy_move_aILb0EPPSt4pairIiiES3_ET1_T0_S5_S4_(%"struct.std::pair"**, %"struct.std::pair"**, %"struct.std::pair"**) #0 comdat {
  %4 = alloca %"struct.std::pair"**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.605
  %8 = load i32, i32* @y.606
  %9 = sub i32 %7, 642393620
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 642393620
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1398314613, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %88
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1398314613, label %21
    i32 999686026, label %41
    i32 -456671800, label %77
    i32 -342149375, label %79
  ]

; <label>:20:                                     ; preds = %18
  br label %88

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 999686026, i32 -342149375
  store i32 %40, i32* %17
  br label %88

; <label>:41:                                     ; preds = %18
  %42 = alloca %"struct.std::pair"**, align 8
  %43 = alloca %"struct.std::pair"**, align 8
  %44 = alloca %"struct.std::pair"**, align 8
  %45 = alloca i8, align 1
  store %"struct.std::pair"** %0, %"struct.std::pair"*** %42, align 8
  store %"struct.std::pair"** %1, %"struct.std::pair"*** %43, align 8
  store %"struct.std::pair"** %2, %"struct.std::pair"*** %44, align 8
  store i8 1, i8* %45, align 1
  %46 = load %"struct.std::pair"**, %"struct.std::pair"*** %42, align 8
  %47 = load %"struct.std::pair"**, %"struct.std::pair"*** %43, align 8
  %48 = load %"struct.std::pair"**, %"struct.std::pair"*** %44, align 8
  %49 = call %"struct.std::pair"** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPSt4pairIiiEEEPT_PKS6_S9_S7_(%"struct.std::pair"** %46, %"struct.std::pair"** %47, %"struct.std::pair"** %48)
  store %"struct.std::pair"** %49, %"struct.std::pair"*** %4
  %50 = load i32, i32* @x.605
  %51 = load i32, i32* @y.606
  %52 = add i32 %50, 216028952
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 216028952
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -456671800, i32 -342149375
  store i32 %76, i32* %17
  br label %88

; <label>:77:                                     ; preds = %18
  %78 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %4
  ret %"struct.std::pair"** %78

; <label>:79:                                     ; preds = %18
  %80 = alloca %"struct.std::pair"**, align 8
  %81 = alloca %"struct.std::pair"**, align 8
  %82 = alloca %"struct.std::pair"**, align 8
  %83 = alloca i8, align 1
  store %"struct.std::pair"** %0, %"struct.std::pair"*** %80, align 8
  store %"struct.std::pair"** %1, %"struct.std::pair"*** %81, align 8
  store %"struct.std::pair"** %2, %"struct.std::pair"*** %82, align 8
  store i8 1, i8* %83, align 1
  %84 = load %"struct.std::pair"**, %"struct.std::pair"*** %80, align 8
  %85 = load %"struct.std::pair"**, %"struct.std::pair"*** %81, align 8
  %86 = load %"struct.std::pair"**, %"struct.std::pair"*** %82, align 8
  %87 = call %"struct.std::pair"** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPSt4pairIiiEEEPT_PKS6_S9_S7_(%"struct.std::pair"** %84, %"struct.std::pair"** %85, %"struct.std::pair"** %86)
  store i32 999686026, i32* %17
  br label %88

; <label>:88:                                     ; preds = %79, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"** @_ZSt12__niter_baseIPPSt4pairIiiEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.std::pair"**) #0 comdat {
  %2 = alloca %"struct.std::pair"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.607
  %6 = load i32, i32* @y.608
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 597711880, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 597711880, label %18
    i32 -1955118517, label %38
    i32 1154665641, label %56
    i32 1784570797, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1955118517, i32 1784570797
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::pair"**, align 8
  store %"struct.std::pair"** %0, %"struct.std::pair"*** %39, align 8
  %40 = load %"struct.std::pair"**, %"struct.std::pair"*** %39, align 8
  %41 = call %"struct.std::pair"** @_ZNSt10_Iter_baseIPPSt4pairIiiELb0EE7_S_baseES3_(%"struct.std::pair"** %40)
  store %"struct.std::pair"** %41, %"struct.std::pair"*** %2
  %42 = load i32, i32* @x.607
  %43 = load i32, i32* @y.608
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 1154665641, i32 1784570797
  store i32 %55, i32* %14
  br label %62

; <label>:56:                                     ; preds = %15
  %57 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %2
  ret %"struct.std::pair"** %57

; <label>:58:                                     ; preds = %15
  %59 = alloca %"struct.std::pair"**, align 8
  store %"struct.std::pair"** %0, %"struct.std::pair"*** %59, align 8
  %60 = load %"struct.std::pair"**, %"struct.std::pair"*** %59, align 8
  %61 = call %"struct.std::pair"** @_ZNSt10_Iter_baseIPPSt4pairIiiELb0EE7_S_baseES3_(%"struct.std::pair"** %60)
  store i32 -1955118517, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPSt4pairIiiEEEPT_PKS6_S9_S7_(%"struct.std::pair"**, %"struct.std::pair"**, %"struct.std::pair"**) #4 comdat align 2 {
  %4 = alloca i64
  %5 = alloca %"struct.std::pair"**, align 8
  %6 = alloca %"struct.std::pair"**, align 8
  %7 = alloca %"struct.std::pair"**, align 8
  %8 = alloca i64, align 8
  store %"struct.std::pair"** %0, %"struct.std::pair"*** %5, align 8
  store %"struct.std::pair"** %1, %"struct.std::pair"*** %6, align 8
  store %"struct.std::pair"** %2, %"struct.std::pair"*** %7, align 8
  %9 = load %"struct.std::pair"**, %"struct.std::pair"*** %6, align 8
  %10 = load %"struct.std::pair"**, %"struct.std::pair"*** %5, align 8
  %11 = ptrtoint %"struct.std::pair"** %9 to i64
  %12 = ptrtoint %"struct.std::pair"** %10 to i64
  %13 = sub i64 0, %12
  %14 = add i64 %11, %13
  %15 = sub i64 %11, %12
  %16 = sdiv exact i64 %14, 8
  store i64 %16, i64* %8, align 8
  %17 = load i64, i64* %8, align 8
  store i64 %17, i64* %4
  %18 = alloca i32
  store i32 2035445984, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %110
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 2035445984, label %22
    i32 1443256232, label %26
    i32 -867236149, label %41
    i32 -1444001710, label %75
    i32 -1312637570, label %76
    i32 1984043168, label %80
  ]

; <label>:21:                                     ; preds = %19
  br label %110

; <label>:22:                                     ; preds = %19
  %23 = load volatile i64, i64* %4
  %24 = icmp ne i64 %23, 0
  %25 = select i1 %24, i32 1443256232, i32 -1312637570
  store i32 %25, i32* %18
  br label %110

; <label>:26:                                     ; preds = %19
  %27 = load i32, i32* @x.609
  %28 = load i32, i32* @y.610
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  %40 = select i1 %38, i32 -867236149, i32 1984043168
  store i32 %40, i32* %18
  br label %110

; <label>:41:                                     ; preds = %19
  %42 = load %"struct.std::pair"**, %"struct.std::pair"*** %7, align 8
  %43 = bitcast %"struct.std::pair"** %42 to i8*
  %44 = load %"struct.std::pair"**, %"struct.std::pair"*** %5, align 8
  %45 = bitcast %"struct.std::pair"** %44 to i8*
  %46 = load i64, i64* %8, align 8
  %47 = mul i64 8, %46
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %43, i8* %45, i64 %47, i32 8, i1 false)
  %48 = load i32, i32* @x.609
  %49 = load i32, i32* @y.610
  %50 = add i32 %48, 720702013
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, 720702013
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 -1444001710, i32 1984043168
  store i32 %74, i32* %18
  br label %110

; <label>:75:                                     ; preds = %19
  store i32 -1312637570, i32* %18
  br label %110

; <label>:76:                                     ; preds = %19
  %77 = load %"struct.std::pair"**, %"struct.std::pair"*** %7, align 8
  %78 = load i64, i64* %8, align 8
  %79 = getelementptr inbounds %"struct.std::pair"*, %"struct.std::pair"** %77, i64 %78
  ret %"struct.std::pair"** %79

; <label>:80:                                     ; preds = %19
  %81 = load %"struct.std::pair"**, %"struct.std::pair"*** %7, align 8
  %82 = bitcast %"struct.std::pair"** %81 to i8*
  %83 = load %"struct.std::pair"**, %"struct.std::pair"*** %5, align 8
  %84 = bitcast %"struct.std::pair"** %83 to i8*
  %85 = load i64, i64* %8, align 8
  %86 = add i64 8, 9055630610453874189
  %87 = sub i64 %86, %85
  %88 = sub i64 %87, 9055630610453874189
  %89 = sub i64 8, %85
  %90 = mul i64 %88, %85
  %91 = shl i64 8, %85
  %92 = shl i64 8, %85
  %93 = shl i64 8, %85
  %94 = add i64 0, -7676808548505488305
  %95 = sub i64 %94, 8
  %96 = sub i64 %95, -7676808548505488305
  %97 = sub i64 0, 8
  %98 = sub i64 0, %85
  %99 = sub i64 %96, %98
  %100 = add i64 %96, %85
  %101 = add i64 0, 5295371457941555903
  %102 = sub i64 %101, 8
  %103 = sub i64 %102, 5295371457941555903
  %104 = sub i64 0, 8
  %105 = sub i64 %103, -7601163720554778978
  %106 = add i64 %105, %85
  %107 = add i64 %106, -7601163720554778978
  %108 = add i64 %103, %85
  %109 = mul i64 8, %85
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %82, i8* %84, i64 %109, i32 8, i1 false)
  store i32 -867236149, i32* %18
  br label %110

; <label>:110:                                    ; preds = %80, %75, %41, %26, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"** @_ZNSt10_Iter_baseIPPSt4pairIiiELb0EE7_S_baseES3_(%"struct.std::pair"**) #4 comdat align 2 {
  %2 = alloca %"struct.std::pair"**, align 8
  store %"struct.std::pair"** %0, %"struct.std::pair"*** %2, align 8
  %3 = load %"struct.std::pair"**, %"struct.std::pair"*** %2, align 8
  ret %"struct.std::pair"** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"** @_ZSt23__copy_move_backward_a2ILb0EPPSt4pairIiiES3_ET1_T0_S5_S4_(%"struct.std::pair"**, %"struct.std::pair"**, %"struct.std::pair"**) #0 comdat {
  %4 = alloca %"struct.std::pair"**, align 8
  %5 = alloca %"struct.std::pair"**, align 8
  %6 = alloca %"struct.std::pair"**, align 8
  store %"struct.std::pair"** %0, %"struct.std::pair"*** %4, align 8
  store %"struct.std::pair"** %1, %"struct.std::pair"*** %5, align 8
  store %"struct.std::pair"** %2, %"struct.std::pair"*** %6, align 8
  %7 = load %"struct.std::pair"**, %"struct.std::pair"*** %4, align 8
  %8 = call %"struct.std::pair"** @_ZSt12__niter_baseIPPSt4pairIiiEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.std::pair"** %7)
  %9 = load %"struct.std::pair"**, %"struct.std::pair"*** %5, align 8
  %10 = call %"struct.std::pair"** @_ZSt12__niter_baseIPPSt4pairIiiEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.std::pair"** %9)
  %11 = load %"struct.std::pair"**, %"struct.std::pair"*** %6, align 8
  %12 = call %"struct.std::pair"** @_ZSt12__niter_baseIPPSt4pairIiiEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.std::pair"** %11)
  %13 = call %"struct.std::pair"** @_ZSt22__copy_move_backward_aILb0EPPSt4pairIiiES3_ET1_T0_S5_S4_(%"struct.std::pair"** %8, %"struct.std::pair"** %10, %"struct.std::pair"** %12)
  ret %"struct.std::pair"** %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"** @_ZSt22__copy_move_backward_aILb0EPPSt4pairIiiES3_ET1_T0_S5_S4_(%"struct.std::pair"**, %"struct.std::pair"**, %"struct.std::pair"**) #0 comdat {
  %4 = alloca %"struct.std::pair"**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.615
  %8 = load i32, i32* @y.616
  %9 = add i32 %7, -2145792124
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -2145792124
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1222154238, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %75
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1222154238, label %21
    i32 -167612575, label %29
    i32 1058300207, label %64
    i32 2041487427, label %66
  ]

; <label>:20:                                     ; preds = %18
  br label %75

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -167612575, i32 2041487427
  store i32 %28, i32* %17
  br label %75

; <label>:29:                                     ; preds = %18
  %30 = alloca %"struct.std::pair"**, align 8
  %31 = alloca %"struct.std::pair"**, align 8
  %32 = alloca %"struct.std::pair"**, align 8
  %33 = alloca i8, align 1
  store %"struct.std::pair"** %0, %"struct.std::pair"*** %30, align 8
  store %"struct.std::pair"** %1, %"struct.std::pair"*** %31, align 8
  store %"struct.std::pair"** %2, %"struct.std::pair"*** %32, align 8
  store i8 1, i8* %33, align 1
  %34 = load %"struct.std::pair"**, %"struct.std::pair"*** %30, align 8
  %35 = load %"struct.std::pair"**, %"struct.std::pair"*** %31, align 8
  %36 = load %"struct.std::pair"**, %"struct.std::pair"*** %32, align 8
  %37 = call %"struct.std::pair"** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPSt4pairIiiEEEPT_PKS6_S9_S7_(%"struct.std::pair"** %34, %"struct.std::pair"** %35, %"struct.std::pair"** %36)
  store %"struct.std::pair"** %37, %"struct.std::pair"*** %4
  %38 = load i32, i32* @x.615
  %39 = load i32, i32* @y.616
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 1058300207, i32 2041487427
  store i32 %63, i32* %17
  br label %75

; <label>:64:                                     ; preds = %18
  %65 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %4
  ret %"struct.std::pair"** %65

; <label>:66:                                     ; preds = %18
  %67 = alloca %"struct.std::pair"**, align 8
  %68 = alloca %"struct.std::pair"**, align 8
  %69 = alloca %"struct.std::pair"**, align 8
  %70 = alloca i8, align 1
  store %"struct.std::pair"** %0, %"struct.std::pair"*** %67, align 8
  store %"struct.std::pair"** %1, %"struct.std::pair"*** %68, align 8
  store %"struct.std::pair"** %2, %"struct.std::pair"*** %69, align 8
  store i8 1, i8* %70, align 1
  %71 = load %"struct.std::pair"**, %"struct.std::pair"*** %67, align 8
  %72 = load %"struct.std::pair"**, %"struct.std::pair"*** %68, align 8
  %73 = load %"struct.std::pair"**, %"struct.std::pair"*** %69, align 8
  %74 = call %"struct.std::pair"** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPSt4pairIiiEEEPT_PKS6_S9_S7_(%"struct.std::pair"** %71, %"struct.std::pair"** %72, %"struct.std::pair"** %73)
  store i32 -167612575, i32* %17
  br label %75

; <label>:75:                                     ; preds = %66, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPSt4pairIiiEEEPT_PKS6_S9_S7_(%"struct.std::pair"**, %"struct.std::pair"**, %"struct.std::pair"**) #4 comdat align 2 {
  %4 = alloca i64
  %5 = alloca %"struct.std::pair"**, align 8
  %6 = alloca %"struct.std::pair"**, align 8
  %7 = alloca %"struct.std::pair"**, align 8
  %8 = alloca i64, align 8
  store %"struct.std::pair"** %0, %"struct.std::pair"*** %5, align 8
  store %"struct.std::pair"** %1, %"struct.std::pair"*** %6, align 8
  store %"struct.std::pair"** %2, %"struct.std::pair"*** %7, align 8
  %9 = load %"struct.std::pair"**, %"struct.std::pair"*** %6, align 8
  %10 = load %"struct.std::pair"**, %"struct.std::pair"*** %5, align 8
  %11 = ptrtoint %"struct.std::pair"** %9 to i64
  %12 = ptrtoint %"struct.std::pair"** %10 to i64
  %13 = sub i64 0, %12
  %14 = add i64 %11, %13
  %15 = sub i64 %11, %12
  %16 = sdiv exact i64 %14, 8
  store i64 %16, i64* %8, align 8
  %17 = load i64, i64* %8, align 8
  store i64 %17, i64* %4
  %18 = alloca i32
  store i32 260135466, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %47
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 260135466, label %22
    i32 640510467, label %26
    i32 1924272895, label %39
  ]

; <label>:21:                                     ; preds = %19
  br label %47

; <label>:22:                                     ; preds = %19
  %23 = load volatile i64, i64* %4
  %24 = icmp ne i64 %23, 0
  %25 = select i1 %24, i32 640510467, i32 1924272895
  store i32 %25, i32* %18
  br label %47

; <label>:26:                                     ; preds = %19
  %27 = load %"struct.std::pair"**, %"struct.std::pair"*** %7, align 8
  %28 = load i64, i64* %8, align 8
  %29 = add i64 0, -1893210685874949439
  %30 = sub i64 %29, %28
  %31 = sub i64 %30, -1893210685874949439
  %32 = sub i64 0, %28
  %33 = getelementptr inbounds %"struct.std::pair"*, %"struct.std::pair"** %27, i64 %31
  %34 = bitcast %"struct.std::pair"** %33 to i8*
  %35 = load %"struct.std::pair"**, %"struct.std::pair"*** %5, align 8
  %36 = bitcast %"struct.std::pair"** %35 to i8*
  %37 = load i64, i64* %8, align 8
  %38 = mul i64 8, %37
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %34, i8* %36, i64 %38, i32 8, i1 false)
  store i32 1924272895, i32* %18
  br label %47

; <label>:39:                                     ; preds = %19
  %40 = load %"struct.std::pair"**, %"struct.std::pair"*** %7, align 8
  %41 = load i64, i64* %8, align 8
  %42 = sub i64 0, 3471729498372834868
  %43 = sub i64 %42, %41
  %44 = add i64 %43, 3471729498372834868
  %45 = sub i64 0, %41
  %46 = getelementptr inbounds %"struct.std::pair"*, %"struct.std::pair"** %40, i64 %44
  ret %"struct.std::pair"** %46

; <label>:47:                                     ; preds = %26, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt5dequeISt4pairIiiESaIS1_EE4sizeEv(%"class.std::deque"*) #4 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %5 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %5, i32 0, i32 3
  %7 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %8 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %8, i32 0, i32 2
  %10 = call i64 @_ZStmiISt4pairIiiERS1_PS1_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS8_SB_(%"struct.std::_Deque_iterator"* dereferenceable(32) %6, %"struct.std::_Deque_iterator"* dereferenceable(32) %9) #3
  ret i64 %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZStmiISt4pairIiiERS1_PS1_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS8_SB_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #4 comdat {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.621
  %7 = load i32, i32* @y.622
  %8 = add i32 %6, 957926698
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 957926698
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 302842274, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %357
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 302842274, label %20
    i32 -2146183425, label %28
    i32 1025865127, label %110
    i32 904126642, label %112
  ]

; <label>:19:                                     ; preds = %17
  br label %357

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -2146183425, i32 904126642
  store i32 %27, i32* %16
  br label %357

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::_Deque_iterator"*, align 8
  %30 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %29, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %30, align 8
  %31 = call i64 @_ZNSt15_Deque_iteratorISt4pairIiiERS1_PS1_E14_S_buffer_sizeEv() #3
  %32 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %29, align 8
  %33 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %32, i32 0, i32 3
  %34 = load %"struct.std::pair"**, %"struct.std::pair"*** %33, align 8
  %35 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %30, align 8
  %36 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %35, i32 0, i32 3
  %37 = load %"struct.std::pair"**, %"struct.std::pair"*** %36, align 8
  %38 = ptrtoint %"struct.std::pair"** %34 to i64
  %39 = ptrtoint %"struct.std::pair"** %37 to i64
  %40 = sub i64 %38, 6567049872112515145
  %41 = sub i64 %40, %39
  %42 = add i64 %41, 6567049872112515145
  %43 = sub i64 %38, %39
  %44 = sdiv exact i64 %42, 8
  %45 = sub i64 %44, 9159165001467636332
  %46 = sub i64 %45, 1
  %47 = add i64 %46, 9159165001467636332
  %48 = sub nsw i64 %44, 1
  %49 = mul nsw i64 %31, %47
  %50 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %29, align 8
  %51 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %50, i32 0, i32 0
  %52 = load %"struct.std::pair"*, %"struct.std::pair"** %51, align 8
  %53 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %29, align 8
  %54 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %53, i32 0, i32 1
  %55 = load %"struct.std::pair"*, %"struct.std::pair"** %54, align 8
  %56 = ptrtoint %"struct.std::pair"* %52 to i64
  %57 = ptrtoint %"struct.std::pair"* %55 to i64
  %58 = add i64 %56, -8183949584250526584
  %59 = sub i64 %58, %57
  %60 = sub i64 %59, -8183949584250526584
  %61 = sub i64 %56, %57
  %62 = sdiv exact i64 %60, 8
  %63 = sub i64 0, %62
  %64 = sub i64 %49, %63
  %65 = add nsw i64 %49, %62
  %66 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %30, align 8
  %67 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %66, i32 0, i32 2
  %68 = load %"struct.std::pair"*, %"struct.std::pair"** %67, align 8
  %69 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %30, align 8
  %70 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %69, i32 0, i32 0
  %71 = load %"struct.std::pair"*, %"struct.std::pair"** %70, align 8
  %72 = ptrtoint %"struct.std::pair"* %68 to i64
  %73 = ptrtoint %"struct.std::pair"* %71 to i64
  %74 = add i64 %72, 7190811318421743736
  %75 = sub i64 %74, %73
  %76 = sub i64 %75, 7190811318421743736
  %77 = sub i64 %72, %73
  %78 = sdiv exact i64 %76, 8
  %79 = sub i64 %64, 6008465820632041611
  %80 = add i64 %79, %78
  %81 = add i64 %80, 6008465820632041611
  %82 = add nsw i64 %64, %78
  store i64 %81, i64* %3
  %83 = load i32, i32* @x.621
  %84 = load i32, i32* @y.622
  %85 = add i32 %83, 1855149105
  %86 = sub i32 %85, 1
  %87 = sub i32 %86, 1855149105
  %88 = sub i32 %83, 1
  %89 = mul i32 %83, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %84, 10
  %93 = xor i1 %91, true
  %94 = xor i1 %92, true
  %95 = xor i1 false, true
  %96 = and i1 %93, false
  %97 = and i1 %91, %95
  %98 = and i1 %94, false
  %99 = and i1 %92, %95
  %100 = or i1 %96, %97
  %101 = or i1 %98, %99
  %102 = xor i1 %100, %101
  %103 = or i1 %93, %94
  %104 = xor i1 %103, true
  %105 = or i1 false, %95
  %106 = and i1 %104, %105
  %107 = or i1 %102, %106
  %108 = or i1 %91, %92
  %109 = select i1 %107, i32 1025865127, i32 904126642
  store i32 %109, i32* %16
  br label %357

; <label>:110:                                    ; preds = %17
  %111 = load volatile i64, i64* %3
  ret i64 %111

; <label>:112:                                    ; preds = %17
  %113 = alloca %"struct.std::_Deque_iterator"*, align 8
  %114 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %113, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %114, align 8
  %115 = call i64 @_ZNSt15_Deque_iteratorISt4pairIiiERS1_PS1_E14_S_buffer_sizeEv() #3
  %116 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %113, align 8
  %117 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %116, i32 0, i32 3
  %118 = load %"struct.std::pair"**, %"struct.std::pair"*** %117, align 8
  %119 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %114, align 8
  %120 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %119, i32 0, i32 3
  %121 = load %"struct.std::pair"**, %"struct.std::pair"*** %120, align 8
  %122 = ptrtoint %"struct.std::pair"** %118 to i64
  %123 = ptrtoint %"struct.std::pair"** %121 to i64
  %124 = shl i64 %122, %123
  %125 = add i64 0, -6589305159676009842
  %126 = sub i64 %125, %122
  %127 = sub i64 %126, -6589305159676009842
  %128 = sub i64 0, %122
  %129 = add i64 %127, -9038211497548615614
  %130 = add i64 %129, %123
  %131 = sub i64 %130, -9038211497548615614
  %132 = add i64 %127, %123
  %133 = shl i64 %122, %123
  %134 = add i64 %122, 428871671303668293
  %135 = sub i64 %134, %123
  %136 = sub i64 %135, 428871671303668293
  %137 = sub i64 %122, %123
  %138 = sub i64 0, %136
  %139 = add i64 0, %138
  %140 = sub i64 0, %136
  %141 = sub i64 %139, 1540844893842844842
  %142 = add i64 %141, 8
  %143 = add i64 %142, 1540844893842844842
  %144 = add i64 %139, 8
  %145 = sub i64 0, %136
  %146 = add i64 0, %145
  %147 = sub i64 0, %136
  %148 = add i64 %146, -888788412701605158
  %149 = add i64 %148, 8
  %150 = sub i64 %149, -888788412701605158
  %151 = add i64 %146, 8
  %152 = sub i64 0, -288634282179088517
  %153 = sub i64 %152, %136
  %154 = add i64 %153, -288634282179088517
  %155 = sub i64 0, %136
  %156 = sub i64 0, %154
  %157 = sub i64 0, 8
  %158 = add i64 %156, %157
  %159 = sub i64 0, %158
  %160 = add i64 %154, 8
  %161 = sub i64 %136, 1329425954730617800
  %162 = sub i64 %161, 8
  %163 = add i64 %162, 1329425954730617800
  %164 = sub i64 %136, 8
  %165 = mul i64 %163, 8
  %166 = shl i64 %136, 8
  %167 = shl i64 %136, 8
  %168 = shl i64 %136, 8
  %169 = sdiv exact i64 %136, 8
  %170 = add i64 %169, 1089990803852571126
  %171 = sub i64 %170, 1
  %172 = sub i64 %171, 1089990803852571126
  %173 = sub i64 %169, 1
  %174 = mul i64 %172, 1
  %175 = sub i64 0, 1
  %176 = add i64 %169, %175
  %177 = sub i64 %169, 1
  %178 = mul i64 %176, 1
  %179 = sub i64 %169, -6903127019005669150
  %180 = sub i64 %179, 1
  %181 = add i64 %180, -6903127019005669150
  %182 = sub nsw i64 %169, 1
  %183 = sub i64 0, -4103569775584369940
  %184 = sub i64 %183, %115
  %185 = add i64 %184, -4103569775584369940
  %186 = sub i64 0, %115
  %187 = add i64 %185, -6306727182956441956
  %188 = add i64 %187, %181
  %189 = sub i64 %188, -6306727182956441956
  %190 = add i64 %185, %181
  %191 = add i64 0, -3940901514870136705
  %192 = sub i64 %191, %115
  %193 = sub i64 %192, -3940901514870136705
  %194 = sub i64 0, %115
  %195 = add i64 %193, 7130230882622473510
  %196 = add i64 %195, %181
  %197 = sub i64 %196, 7130230882622473510
  %198 = add i64 %193, %181
  %199 = sub i64 %115, -1353684356119855079
  %200 = sub i64 %199, %181
  %201 = add i64 %200, -1353684356119855079
  %202 = sub i64 %115, %181
  %203 = mul i64 %201, %181
  %204 = sub i64 0, -9045985537679455998
  %205 = sub i64 %204, %115
  %206 = add i64 %205, -9045985537679455998
  %207 = sub i64 0, %115
  %208 = sub i64 0, %206
  %209 = sub i64 0, %181
  %210 = add i64 %208, %209
  %211 = sub i64 0, %210
  %212 = add i64 %206, %181
  %213 = sub i64 0, %181
  %214 = add i64 %115, %213
  %215 = sub i64 %115, %181
  %216 = mul i64 %214, %181
  %217 = sub i64 %115, -3417184472012280632
  %218 = sub i64 %217, %181
  %219 = add i64 %218, -3417184472012280632
  %220 = sub i64 %115, %181
  %221 = mul i64 %219, %181
  %222 = mul nsw i64 %115, %181
  %223 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %113, align 8
  %224 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %223, i32 0, i32 0
  %225 = load %"struct.std::pair"*, %"struct.std::pair"** %224, align 8
  %226 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %113, align 8
  %227 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %226, i32 0, i32 1
  %228 = load %"struct.std::pair"*, %"struct.std::pair"** %227, align 8
  %229 = ptrtoint %"struct.std::pair"* %225 to i64
  %230 = ptrtoint %"struct.std::pair"* %228 to i64
  %231 = add i64 %229, -6197432601006718895
  %232 = sub i64 %231, %230
  %233 = sub i64 %232, -6197432601006718895
  %234 = sub i64 %229, %230
  %235 = mul i64 %233, %230
  %236 = sub i64 0, %229
  %237 = add i64 0, %236
  %238 = sub i64 0, %229
  %239 = sub i64 0, %230
  %240 = sub i64 %237, %239
  %241 = add i64 %237, %230
  %242 = sub i64 0, %229
  %243 = add i64 0, %242
  %244 = sub i64 0, %229
  %245 = sub i64 %243, -8118148397868292641
  %246 = add i64 %245, %230
  %247 = add i64 %246, -8118148397868292641
  %248 = add i64 %243, %230
  %249 = sub i64 %229, -8623598072210935844
  %250 = sub i64 %249, %230
  %251 = add i64 %250, -8623598072210935844
  %252 = sub i64 %229, %230
  %253 = sub i64 %251, 1759747354416728606
  %254 = sub i64 %253, 8
  %255 = add i64 %254, 1759747354416728606
  %256 = sub i64 %251, 8
  %257 = mul i64 %255, 8
  %258 = sub i64 %251, -8168085050505770148
  %259 = sub i64 %258, 8
  %260 = add i64 %259, -8168085050505770148
  %261 = sub i64 %251, 8
  %262 = mul i64 %260, 8
  %263 = shl i64 %251, 8
  %264 = sdiv exact i64 %251, 8
  %265 = sub i64 %222, -8788245599343615641
  %266 = sub i64 %265, %264
  %267 = add i64 %266, -8788245599343615641
  %268 = sub i64 %222, %264
  %269 = mul i64 %267, %264
  %270 = shl i64 %222, %264
  %271 = shl i64 %222, %264
  %272 = shl i64 %222, %264
  %273 = add i64 0, -8087453293235925452
  %274 = sub i64 %273, %222
  %275 = sub i64 %274, -8087453293235925452
  %276 = sub i64 0, %222
  %277 = sub i64 0, %275
  %278 = sub i64 0, %264
  %279 = add i64 %277, %278
  %280 = sub i64 0, %279
  %281 = add i64 %275, %264
  %282 = shl i64 %222, %264
  %283 = sub i64 0, %264
  %284 = sub i64 %222, %283
  %285 = add nsw i64 %222, %264
  %286 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %114, align 8
  %287 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %286, i32 0, i32 2
  %288 = load %"struct.std::pair"*, %"struct.std::pair"** %287, align 8
  %289 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %114, align 8
  %290 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %289, i32 0, i32 0
  %291 = load %"struct.std::pair"*, %"struct.std::pair"** %290, align 8
  %292 = ptrtoint %"struct.std::pair"* %288 to i64
  %293 = ptrtoint %"struct.std::pair"* %291 to i64
  %294 = shl i64 %292, %293
  %295 = shl i64 %292, %293
  %296 = sub i64 %292, 4490687538588932488
  %297 = sub i64 %296, %293
  %298 = add i64 %297, 4490687538588932488
  %299 = sub i64 %292, %293
  %300 = shl i64 %298, 8
  %301 = add i64 0, -3507812901464133816
  %302 = sub i64 %301, %298
  %303 = sub i64 %302, -3507812901464133816
  %304 = sub i64 0, %298
  %305 = sub i64 %303, -6500375337064442059
  %306 = add i64 %305, 8
  %307 = add i64 %306, -6500375337064442059
  %308 = add i64 %303, 8
  %309 = sub i64 0, %298
  %310 = add i64 0, %309
  %311 = sub i64 0, %298
  %312 = add i64 %310, -2094031320807598878
  %313 = add i64 %312, 8
  %314 = sub i64 %313, -2094031320807598878
  %315 = add i64 %310, 8
  %316 = shl i64 %298, 8
  %317 = sdiv exact i64 %298, 8
  %318 = add i64 0, -144710092431290533
  %319 = sub i64 %318, %284
  %320 = sub i64 %319, -144710092431290533
  %321 = sub i64 0, %284
  %322 = add i64 %320, -1329143266613640106
  %323 = add i64 %322, %317
  %324 = sub i64 %323, -1329143266613640106
  %325 = add i64 %320, %317
  %326 = shl i64 %284, %317
  %327 = sub i64 0, %284
  %328 = add i64 0, %327
  %329 = sub i64 0, %284
  %330 = sub i64 %328, -2530453391114993399
  %331 = add i64 %330, %317
  %332 = add i64 %331, -2530453391114993399
  %333 = add i64 %328, %317
  %334 = add i64 0, 1830595349778398180
  %335 = sub i64 %334, %284
  %336 = sub i64 %335, 1830595349778398180
  %337 = sub i64 0, %284
  %338 = sub i64 0, %336
  %339 = sub i64 0, %317
  %340 = add i64 %338, %339
  %341 = sub i64 0, %340
  %342 = add i64 %336, %317
  %343 = add i64 0, 7568880025207712928
  %344 = sub i64 %343, %284
  %345 = sub i64 %344, 7568880025207712928
  %346 = sub i64 0, %284
  %347 = add i64 %345, 4736606844736824285
  %348 = add i64 %347, %317
  %349 = sub i64 %348, 4736606844736824285
  %350 = add i64 %345, %317
  %351 = shl i64 %284, %317
  %352 = sub i64 0, %284
  %353 = sub i64 0, %317
  %354 = add i64 %352, %353
  %355 = sub i64 0, %354
  %356 = add nsw i64 %284, %317
  store i32 -2146183425, i32* %16
  br label %357

; <label>:357:                                    ; preds = %112, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::pair"* @_ZNSt5dequeISt4pairIiiESaIS1_EE5frontEv(%"class.std::deque"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::pair"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.623
  %6 = load i32, i32* @y.624
  %7 = add i32 %5, -1951504231
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1951504231
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -760101966, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -760101966, label %19
    i32 1126902993, label %27
    i32 -1487289586, label %47
    i32 695007343, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1126902993, i32 695007343
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::deque"*, align 8
  %29 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %28, align 8
  %30 = load %"class.std::deque"*, %"class.std::deque"** %28, align 8
  call void @_ZNSt5dequeISt4pairIiiESaIS1_EE5beginEv(%"struct.std::_Deque_iterator"* sret %29, %"class.std::deque"* %30) #3
  %31 = call dereferenceable(8) %"struct.std::pair"* @_ZNKSt15_Deque_iteratorISt4pairIiiERS1_PS1_EdeEv(%"struct.std::_Deque_iterator"* %29) #3
  store %"struct.std::pair"* %31, %"struct.std::pair"** %2
  %32 = load i32, i32* @x.623
  %33 = load i32, i32* @y.624
  %34 = sub i32 %32, 411149492
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 411149492
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -1487289586, i32 695007343
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %2
  ret %"struct.std::pair"* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::deque"*, align 8
  %51 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %50, align 8
  %52 = load %"class.std::deque"*, %"class.std::deque"** %50, align 8
  call void @_ZNSt5dequeISt4pairIiiESaIS1_EE5beginEv(%"struct.std::_Deque_iterator"* sret %51, %"class.std::deque"* %52) #3
  %53 = call dereferenceable(8) %"struct.std::pair"* @_ZNKSt15_Deque_iteratorISt4pairIiiERS1_PS1_EdeEv(%"struct.std::_Deque_iterator"* %51) #3
  store i32 1126902993, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::pair"* @_ZNKSt15_Deque_iteratorISt4pairIiiERS1_PS1_EdeEv(%"struct.std::_Deque_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  ret %"struct.std::pair"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeISt4pairIiiESaIS1_EE9pop_frontEv(%"class.std::deque"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %5 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %5, i32 0, i32 2
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %6, i32 0, i32 0
  %8 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %9 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %10 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %9, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %10, i32 0, i32 2
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %11, i32 0, i32 2
  %13 = load %"struct.std::pair"*, %"struct.std::pair"** %12, align 8
  %14 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %13, i64 -1
  %15 = icmp ne %"struct.std::pair"* %8, %14
  br i1 %15, label %16, label %115

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.627
  %18 = load i32, i32* @y.628
  %19 = sub i32 %17, -77520680
  %20 = sub i32 %19, 1
  %21 = add i32 %20, -77520680
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  br i1 %41, label %43, label %121

; <label>:43:                                     ; preds = %16, %121
  %44 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %45 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %44, i32 0, i32 0
  %46 = bitcast %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %45 to %"class.std::allocator.15"*
  %47 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %48 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %47, i32 0, i32 0
  %49 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %48, i32 0, i32 2
  %50 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %49, i32 0, i32 0
  %51 = load %"struct.std::pair"*, %"struct.std::pair"** %50, align 8
  %52 = load i32, i32* @x.627
  %53 = load i32, i32* @y.628
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  br i1 %63, label %65, label %121

; <label>:65:                                     ; preds = %43
  invoke void @_ZNSt16allocator_traitsISaISt4pairIiiEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.15"* dereferenceable(1) %46, %"struct.std::pair"* %51)
          to label %66 unwind label %118

; <label>:66:                                     ; preds = %65
  %67 = load i32, i32* @x.627
  %68 = load i32, i32* @y.628
  %69 = add i32 %67, -1628185416
  %70 = sub i32 %69, 1
  %71 = sub i32 %70, -1628185416
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  br i1 %79, label %81, label %130

; <label>:81:                                     ; preds = %66, %130
  %82 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %83 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %82, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %83, i32 0, i32 2
  %85 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %84, i32 0, i32 0
  %86 = load %"struct.std::pair"*, %"struct.std::pair"** %85, align 8
  %87 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %86, i32 1
  store %"struct.std::pair"* %87, %"struct.std::pair"** %85, align 8
  %88 = load i32, i32* @x.627
  %89 = load i32, i32* @y.628
  %90 = sub i32 %88, 327160773
  %91 = sub i32 %90, 1
  %92 = add i32 %91, 327160773
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = xor i1 %96, true
  %99 = xor i1 %97, true
  %100 = xor i1 true, true
  %101 = and i1 %98, true
  %102 = and i1 %96, %100
  %103 = and i1 %99, true
  %104 = and i1 %97, %100
  %105 = or i1 %101, %102
  %106 = or i1 %103, %104
  %107 = xor i1 %105, %106
  %108 = or i1 %98, %99
  %109 = xor i1 %108, true
  %110 = or i1 true, %100
  %111 = and i1 %109, %110
  %112 = or i1 %107, %111
  %113 = or i1 %96, %97
  br i1 %112, label %114, label %130

; <label>:114:                                    ; preds = %81
  br label %117

; <label>:115:                                    ; preds = %1
  invoke void @_ZNSt5dequeISt4pairIiiESaIS1_EE16_M_pop_front_auxEv(%"class.std::deque"* %3)
          to label %116 unwind label %118

; <label>:116:                                    ; preds = %115
  br label %117

; <label>:117:                                    ; preds = %116, %114
  ret void

; <label>:118:                                    ; preds = %115, %65
  %119 = landingpad { i8*, i32 }
          catch i8* null
  %120 = extractvalue { i8*, i32 } %119, 0
  call void @__clang_call_terminate(i8* %120) #12
  unreachable

; <label>:121:                                    ; preds = %43, %16
  %122 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %123 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %122, i32 0, i32 0
  %124 = bitcast %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %123 to %"class.std::allocator.15"*
  %125 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %126 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %125, i32 0, i32 0
  %127 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %126, i32 0, i32 2
  %128 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %127, i32 0, i32 0
  %129 = load %"struct.std::pair"*, %"struct.std::pair"** %128, align 8
  br label %43

; <label>:130:                                    ; preds = %81, %66
  %131 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %132 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %131, i32 0, i32 0
  %133 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %132, i32 0, i32 2
  %134 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %133, i32 0, i32 0
  %135 = load %"struct.std::pair"*, %"struct.std::pair"** %134, align 8
  %136 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %135, i32 1
  store %"struct.std::pair"* %136, %"struct.std::pair"** %134, align 8
  br label %81
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIiiEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.15"* dereferenceable(1), %"struct.std::pair"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.15"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %3, align 8
  %6 = bitcast %"class.std::allocator.15"* %5 to %"class.__gnu_cxx::new_allocator.16"*
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.16"* %6, %"struct.std::pair"* %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeISt4pairIiiESaIS1_EE16_M_pop_front_auxEv(%"class.std::deque"*) #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.631
  %5 = load i32, i32* @y.632
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1220023176, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %121
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1220023176, label %17
    i32 -140523575, label %37
    i32 1409506092, label %86
    i32 -1288883970, label %87
  ]

; <label>:16:                                     ; preds = %14
  br label %121

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -140523575, i32 -1288883970
  store i32 %36, i32* %13
  br label %121

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %38, align 8
  %39 = load %"class.std::deque"*, %"class.std::deque"** %38, align 8
  %40 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %41 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %40) #3
  %42 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %43 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %43, i32 0, i32 2
  %45 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %44, i32 0, i32 0
  %46 = load %"struct.std::pair"*, %"struct.std::pair"** %45, align 8
  call void @_ZNSt16allocator_traitsISaISt4pairIiiEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.15"* dereferenceable(1) %41, %"struct.std::pair"* %46)
  %47 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %48 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %49 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %48, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %49, i32 0, i32 2
  %51 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %50, i32 0, i32 1
  %52 = load %"struct.std::pair"*, %"struct.std::pair"** %51, align 8
  call void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE18_M_deallocate_nodeEPS1_(%"class.std::_Deque_base"* %47, %"struct.std::pair"* %52) #3
  %53 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %54 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %54, i32 0, i32 2
  %56 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %57 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %56, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %57, i32 0, i32 2
  %59 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %58, i32 0, i32 3
  %60 = load %"struct.std::pair"**, %"struct.std::pair"*** %59, align 8
  %61 = getelementptr inbounds %"struct.std::pair"*, %"struct.std::pair"** %60, i64 1
  call void @_ZNSt15_Deque_iteratorISt4pairIiiERS1_PS1_E11_M_set_nodeEPS3_(%"struct.std::_Deque_iterator"* %55, %"struct.std::pair"** %61) #3
  %62 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %63 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %62, i32 0, i32 0
  %64 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %63, i32 0, i32 2
  %65 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %64, i32 0, i32 1
  %66 = load %"struct.std::pair"*, %"struct.std::pair"** %65, align 8
  %67 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %68 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %67, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %68, i32 0, i32 2
  %70 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %69, i32 0, i32 0
  store %"struct.std::pair"* %66, %"struct.std::pair"** %70, align 8
  %71 = load i32, i32* @x.631
  %72 = load i32, i32* @y.632
  %73 = sub i32 %71, -890072489
  %74 = sub i32 %73, 1
  %75 = add i32 %74, -890072489
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  %85 = select i1 %83, i32 1409506092, i32 -1288883970
  store i32 %85, i32* %13
  br label %121

; <label>:86:                                     ; preds = %14
  ret void

; <label>:87:                                     ; preds = %14
  %88 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %88, align 8
  %89 = load %"class.std::deque"*, %"class.std::deque"** %88, align 8
  %90 = bitcast %"class.std::deque"* %89 to %"class.std::_Deque_base"*
  %91 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %90) #3
  %92 = bitcast %"class.std::deque"* %89 to %"class.std::_Deque_base"*
  %93 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %92, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %93, i32 0, i32 2
  %95 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %94, i32 0, i32 0
  %96 = load %"struct.std::pair"*, %"struct.std::pair"** %95, align 8
  call void @_ZNSt16allocator_traitsISaISt4pairIiiEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.15"* dereferenceable(1) %91, %"struct.std::pair"* %96)
  %97 = bitcast %"class.std::deque"* %89 to %"class.std::_Deque_base"*
  %98 = bitcast %"class.std::deque"* %89 to %"class.std::_Deque_base"*
  %99 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %98, i32 0, i32 0
  %100 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %99, i32 0, i32 2
  %101 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %100, i32 0, i32 1
  %102 = load %"struct.std::pair"*, %"struct.std::pair"** %101, align 8
  call void @_ZNSt11_Deque_baseISt4pairIiiESaIS1_EE18_M_deallocate_nodeEPS1_(%"class.std::_Deque_base"* %97, %"struct.std::pair"* %102) #3
  %103 = bitcast %"class.std::deque"* %89 to %"class.std::_Deque_base"*
  %104 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %103, i32 0, i32 0
  %105 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %104, i32 0, i32 2
  %106 = bitcast %"class.std::deque"* %89 to %"class.std::_Deque_base"*
  %107 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %106, i32 0, i32 0
  %108 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %107, i32 0, i32 2
  %109 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %108, i32 0, i32 3
  %110 = load %"struct.std::pair"**, %"struct.std::pair"*** %109, align 8
  %111 = getelementptr inbounds %"struct.std::pair"*, %"struct.std::pair"** %110, i64 1
  call void @_ZNSt15_Deque_iteratorISt4pairIiiERS1_PS1_E11_M_set_nodeEPS3_(%"struct.std::_Deque_iterator"* %105, %"struct.std::pair"** %111) #3
  %112 = bitcast %"class.std::deque"* %89 to %"class.std::_Deque_base"*
  %113 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %112, i32 0, i32 0
  %114 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %113, i32 0, i32 2
  %115 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %114, i32 0, i32 1
  %116 = load %"struct.std::pair"*, %"struct.std::pair"** %115, align 8
  %117 = bitcast %"class.std::deque"* %89 to %"class.std::_Deque_base"*
  %118 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %117, i32 0, i32 0
  %119 = getelementptr inbounds %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl", %"struct.std::_Deque_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Deque_impl"* %118, i32 0, i32 2
  %120 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %119, i32 0, i32 0
  store %"struct.std::pair"* %116, %"struct.std::pair"** %120, align 8
  store i32 -140523575, i32* %13
  br label %121

; <label>:121:                                    ; preds = %87, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.16"*, %"struct.std::pair"*) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.633
  %6 = load i32, i32* @y.634
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 390958947, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %64
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 390958947, label %18
    i32 1210540578, label %38
    i32 -1491976927, label %58
    i32 -725099316, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %64

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1210540578, i32 -725099316
  store i32 %37, i32* %14
  br label %64

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %40 = alloca %"struct.std::pair"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %39, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %40, align 8
  %41 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %39, align 8
  %42 = load %"struct.std::pair"*, %"struct.std::pair"** %40, align 8
  %43 = load i32, i32* @x.633
  %44 = load i32, i32* @y.634
  %45 = add i32 %43, 1719456496
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 1719456496
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -1491976927, i32 -725099316
  store i32 %57, i32* %14
  br label %64

; <label>:58:                                     ; preds = %15
  ret void

; <label>:59:                                     ; preds = %15
  %60 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %61 = alloca %"struct.std::pair"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %60, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %61, align 8
  %62 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %60, align 8
  %63 = load %"struct.std::pair"*, %"struct.std::pair"** %61, align 8
  store i32 1210540578, i32* %14
  br label %64

; <label>:64:                                     ; preds = %59, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EEC2Ev(%"class.std::_Rb_tree"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EEC2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EEC2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"** %2, align 8
  %5 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"** %2, align 8
  %6 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %5 to %"class.std::allocator.18"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxxEEEC2Ev(%"class.std::allocator.18"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %5, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %5, i32 0, i32 1
  %9 = bitcast %"struct.std::_Rb_tree_node_base"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* %9, i8 0, i64 32, i32 8, i1 false)
  %10 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %5, i32 0, i32 2
  store i64 0, i64* %10, align 8
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %5)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %1
  ret void

; <label>:12:                                     ; preds = %1
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  store i8* %14, i8** %3, align 8
  %15 = extractvalue { i8*, i32 } %13, 1
  store i32 %15, i32* %4, align 4
  %16 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %5 to %"class.std::allocator.18"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxxEEED2Ev(%"class.std::allocator.18"* %16) #3
  br label %17

; <label>:17:                                     ; preds = %12
  %18 = load i8*, i8** %3, align 8
  %19 = load i32, i32* %4, align 4
  %20 = insertvalue { i8*, i32 } undef, i8* %18, 0
  %21 = insertvalue { i8*, i32 } %20, i32 %19, 1
  resume { i8*, i32 } %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxxEEEC2Ev(%"class.std::allocator.18"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.18"*, align 8
  store %"class.std::allocator.18"* %0, %"class.std::allocator.18"** %2, align 8
  %3 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %2, align 8
  %4 = bitcast %"class.std::allocator.18"* %3 to %"class.__gnu_cxx::new_allocator.19"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEEC2Ev(%"class.__gnu_cxx::new_allocator.19"* %4) #3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #5

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE13_Rb_tree_implIS6_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"** %2, align 8
  %3 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %4, i32 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %6, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %9 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %9, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %8, %"struct.std::_Rb_tree_node_base"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %12 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %12, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %13, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEEC2Ev(%"class.__gnu_cxx::new_allocator.19"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.643
  %5 = load i32, i32* @y.644
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1605861581, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %47
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1605861581, label %17
    i32 -467562726, label %25
    i32 -718600200, label %43
    i32 -379647710, label %44
  ]

; <label>:16:                                     ; preds = %14
  br label %47

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -467562726, i32 -379647710
  store i32 %24, i32* %13
  br label %47

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator.19"*, align 8
  store %"class.__gnu_cxx::new_allocator.19"* %0, %"class.__gnu_cxx::new_allocator.19"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator.19"*, %"class.__gnu_cxx::new_allocator.19"** %26, align 8
  %28 = load i32, i32* @x.643
  %29 = load i32, i32* @y.644
  %30 = add i32 %28, -98963874
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, -98963874
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 -718600200, i32 -379647710
  store i32 %42, i32* %13
  br label %47

; <label>:43:                                     ; preds = %14
  ret void

; <label>:44:                                     ; preds = %14
  %45 = alloca %"class.__gnu_cxx::new_allocator.19"*, align 8
  store %"class.__gnu_cxx::new_allocator.19"* %0, %"class.__gnu_cxx::new_allocator.19"** %45, align 8
  %46 = load %"class.__gnu_cxx::new_allocator.19"*, %"class.__gnu_cxx::new_allocator.19"** %45, align 8
  store i32 -467562726, i32* %13
  br label %47

; <label>:47:                                     ; preds = %44, %25, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEE11lower_boundERS3_(%"class.std::map"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node_base"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.645
  %7 = load i32, i32* @y.646
  %8 = sub i32 %6, -908811486
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -908811486
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 225925787, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %91
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 225925787, label %20
    i32 -2085449547, label %40
    i32 217654977, label %78
    i32 -297279598, label %80
  ]

; <label>:19:                                     ; preds = %17
  br label %91

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -2085449547, i32 -297279598
  store i32 %39, i32* %16
  br label %91

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %42 = alloca %"class.std::map"*, align 8
  %43 = alloca i64*, align 8
  store %"class.std::map"* %0, %"class.std::map"** %42, align 8
  store i64* %1, i64** %43, align 8
  %44 = load %"class.std::map"*, %"class.std::map"** %42, align 8
  %45 = getelementptr inbounds %"class.std::map", %"class.std::map"* %44, i32 0, i32 0
  %46 = load i64*, i64** %43, align 8
  %47 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11lower_boundERS1_(%"class.std::_Rb_tree"* %45, i64* dereferenceable(8) %46)
  %48 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %41, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %47, %"struct.std::_Rb_tree_node_base"** %48, align 8
  %49 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %41, i32 0, i32 0
  %50 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %49, align 8
  store %"struct.std::_Rb_tree_node_base"* %50, %"struct.std::_Rb_tree_node_base"** %3
  %51 = load i32, i32* @x.645
  %52 = load i32, i32* @y.646
  %53 = add i32 %51, 1744488324
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, 1744488324
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 217654977, i32 -297279598
  store i32 %77, i32* %16
  br label %91

; <label>:78:                                     ; preds = %17
  %79 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %3
  ret %"struct.std::_Rb_tree_node_base"* %79

; <label>:80:                                     ; preds = %17
  %81 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %82 = alloca %"class.std::map"*, align 8
  %83 = alloca i64*, align 8
  store %"class.std::map"* %0, %"class.std::map"** %82, align 8
  store i64* %1, i64** %83, align 8
  %84 = load %"class.std::map"*, %"class.std::map"** %82, align 8
  %85 = getelementptr inbounds %"class.std::map", %"class.std::map"* %84, i32 0, i32 0
  %86 = load i64*, i64** %83, align 8
  %87 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11lower_boundERS1_(%"class.std::_Rb_tree"* %85, i64* dereferenceable(8) %86)
  %88 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %81, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %87, %"struct.std::_Rb_tree_node_base"** %88, align 8
  %89 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %81, i32 0, i32 0
  %90 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %89, align 8
  store i32 -2085449547, i32* %16
  br label %91

; <label>:91:                                     ; preds = %80, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEeqERKS3_(%"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"* dereferenceable(8)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %8, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %11 = icmp eq %"struct.std::_Rb_tree_node_base"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxxSt4lessIxESaISt4pairIKxxEEE3endEv(%"class.std::map"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %3 = alloca %"class.std::map"*, align 8
  store %"class.std::map"* %0, %"class.std::map"** %3, align 8
  %4 = load %"class.std::map"*, %"class.std::map"** %3, align 8
  %5 = getelementptr inbounds %"class.std::map", %"class.std::map"* %4, i32 0, i32 0
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE3endEv(%"class.std::_Rb_tree"* %5) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %2, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %2, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  ret %"struct.std::_Rb_tree_node_base"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNKSt3mapIxxSt4lessIxESaISt4pairIKxxEEE8key_compEv(%"class.std::map"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::less", align 1
  %3 = alloca %"class.std::map"*, align 8
  %4 = alloca %"struct.std::less", align 1
  store %"class.std::map"* %0, %"class.std::map"** %3, align 8
  %5 = load %"class.std::map"*, %"class.std::map"** %3, align 8
  %6 = getelementptr inbounds %"class.std::map", %"class.std::map"* %5, i32 0, i32 0
  call void @_ZNKSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8key_compEv(%"class.std::_Rb_tree"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"*, i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.653
  %8 = load i32, i32* @y.654
  %9 = add i32 %7, 702855090
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 702855090
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -410347566, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %78
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -410347566, label %21
    i32 1954765799, label %41
    i32 1095570831, label %66
    i32 1748506547, label %68
  ]

; <label>:20:                                     ; preds = %18
  br label %78

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1954765799, i32 1748506547
  store i32 %40, i32* %17
  br label %78

; <label>:41:                                     ; preds = %18
  %42 = alloca %"struct.std::less"*, align 8
  %43 = alloca i64*, align 8
  %44 = alloca i64*, align 8
  store %"struct.std::less"* %0, %"struct.std::less"** %42, align 8
  store i64* %1, i64** %43, align 8
  store i64* %2, i64** %44, align 8
  %45 = load %"struct.std::less"*, %"struct.std::less"** %42, align 8
  %46 = load i64*, i64** %43, align 8
  %47 = load i64, i64* %46, align 8
  %48 = load i64*, i64** %44, align 8
  %49 = load i64, i64* %48, align 8
  %50 = icmp slt i64 %47, %49
  store i1 %50, i1* %4
  %51 = load i32, i32* @x.653
  %52 = load i32, i32* @y.654
  %53 = add i32 %51, -929932017
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, -929932017
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 1095570831, i32 1748506547
  store i32 %65, i32* %17
  br label %78

; <label>:66:                                     ; preds = %18
  %67 = load volatile i1, i1* %4
  ret i1 %67

; <label>:68:                                     ; preds = %18
  %69 = alloca %"struct.std::less"*, align 8
  %70 = alloca i64*, align 8
  %71 = alloca i64*, align 8
  store %"struct.std::less"* %0, %"struct.std::less"** %69, align 8
  store i64* %1, i64** %70, align 8
  store i64* %2, i64** %71, align 8
  %72 = load %"struct.std::less"*, %"struct.std::less"** %69, align 8
  %73 = load i64*, i64** %70, align 8
  %74 = load i64, i64* %73, align 8
  %75 = load i64*, i64** %71, align 8
  %76 = load i64, i64* %75, align 8
  %77 = icmp slt i64 %74, %76
  store i32 1954765799, i32* %17
  br label %78

; <label>:78:                                     ; preds = %68, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair.44"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEdeEv(%"struct.std::_Rb_tree_iterator"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node"*
  %7 = invoke %"struct.std::pair.44"* @_ZNSt13_Rb_tree_nodeISt4pairIKxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %6)
          to label %8 unwind label %38

; <label>:8:                                      ; preds = %1
  %9 = load i32, i32* @x.655
  %10 = load i32, i32* @y.656
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %10, 10
  %18 = and i1 %16, %17
  %19 = xor i1 %16, %17
  %20 = or i1 %18, %19
  %21 = or i1 %16, %17
  br i1 %20, label %22, label %82

; <label>:22:                                     ; preds = %8, %82
  %23 = load i32, i32* @x.655
  %24 = load i32, i32* @y.656
  %25 = sub i32 %23, -1808675889
  %26 = sub i32 %25, 1
  %27 = add i32 %26, -1808675889
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  br i1 %35, label %37, label %82

; <label>:37:                                     ; preds = %22
  ret %"struct.std::pair.44"* %7

; <label>:38:                                     ; preds = %1
  %39 = load i32, i32* @x.655
  %40 = load i32, i32* @y.656
  %41 = sub i32 %39, -109618532
  %42 = sub i32 %41, 1
  %43 = add i32 %42, -109618532
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  br i1 %51, label %53, label %83

; <label>:53:                                     ; preds = %38, %83
  %54 = landingpad { i8*, i32 }
          catch i8* null
  %55 = extractvalue { i8*, i32 } %54, 0
  call void @__clang_call_terminate(i8* %55) #12
  %56 = load i32, i32* @x.655
  %57 = load i32, i32* @y.656
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 true, true
  %68 = and i1 %65, true
  %69 = and i1 %63, %67
  %70 = and i1 %66, true
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 true, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  br i1 %79, label %81, label %83

; <label>:81:                                     ; preds = %53
  unreachable

; <label>:82:                                     ; preds = %22, %8
  br label %22

; <label>:83:                                     ; preds = %53, %38
  %84 = landingpad { i8*, i32 }
          catch i8* null
  %85 = extractvalue { i8*, i32 } %84, 0
  call void @__clang_call_terminate(i8* %85) #12
  br label %53
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EDpOT_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.50"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = load i32, i32* @x.657
  %7 = load i32, i32* @y.658
  %8 = sub i32 %6, 1358277549
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1358277549
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %7, 10
  %16 = and i1 %14, %15
  %17 = xor i1 %14, %15
  %18 = or i1 %16, %17
  %19 = or i1 %14, %15
  br i1 %18, label %20, label %458

; <label>:20:                                     ; preds = %5, %458
  %21 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %22 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %23 = alloca %"class.std::_Rb_tree"*, align 8
  %24 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %25 = alloca %"class.std::tuple"*, align 8
  %26 = alloca %"class.std::tuple.50"*, align 8
  %27 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %28 = alloca %"struct.std::pair.51", align 8
  %29 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %30 = alloca i8*
  %31 = alloca i32
  %32 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %22, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %32, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %23, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %24, align 8
  store %"class.std::tuple"* %3, %"class.std::tuple"** %25, align 8
  store %"class.std::tuple.50"* %4, %"class.std::tuple.50"** %26, align 8
  %33 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %23, align 8
  %34 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %24, align 8
  %35 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %34) #3
  %36 = load %"class.std::tuple"*, %"class.std::tuple"** %25, align 8
  %37 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple"* dereferenceable(8) %36) #3
  %38 = load %"class.std::tuple.50"*, %"class.std::tuple.50"** %26, align 8
  %39 = call dereferenceable(1) %"class.std::tuple.50"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.50"* dereferenceable(1) %38) #3
  %40 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree"* %33, %"struct.std::piecewise_construct_t"* dereferenceable(1) %35, %"class.std::tuple"* dereferenceable(8) %37, %"class.std::tuple.50"* dereferenceable(1) %39)
  store %"struct.std::_Rb_tree_node"* %40, %"struct.std::_Rb_tree_node"** %27, align 8
  %41 = bitcast %"struct.std::_Rb_tree_const_iterator"* %29 to i8*
  %42 = bitcast %"struct.std::_Rb_tree_const_iterator"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %27, align 8
  %44 = load i32, i32* @x.657
  %45 = load i32, i32* @y.658
  %46 = sub i32 %44, 2096013789
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 2096013789
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  br i1 %68, label %70, label %458

; <label>:70:                                     ; preds = %20
  %71 = invoke dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E(%"struct.std::_Rb_tree_node"* %43)
          to label %72 unwind label %218

; <label>:72:                                     ; preds = %70
  %73 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %29, i32 0, i32 0
  %74 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %73, align 8
  %75 = invoke { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_(%"class.std::_Rb_tree"* %33, %"struct.std::_Rb_tree_node_base"* %74, i64* dereferenceable(8) %71)
          to label %76 unwind label %218

; <label>:76:                                     ; preds = %72
  %77 = load i32, i32* @x.657
  %78 = load i32, i32* @y.658
  %79 = sub i32 0, 1
  %80 = add i32 %77, %79
  %81 = sub i32 %77, 1
  %82 = mul i32 %77, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %78, 10
  %86 = and i1 %84, %85
  %87 = xor i1 %84, %85
  %88 = or i1 %86, %87
  %89 = or i1 %84, %85
  br i1 %88, label %90, label %482

; <label>:90:                                     ; preds = %76, %482
  %91 = bitcast %"struct.std::pair.51"* %28 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %92 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %91, i32 0, i32 0
  %93 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %75, 0
  store %"struct.std::_Rb_tree_node_base"* %93, %"struct.std::_Rb_tree_node_base"** %92, align 8
  %94 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %91, i32 0, i32 1
  %95 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %75, 1
  store %"struct.std::_Rb_tree_node_base"* %95, %"struct.std::_Rb_tree_node_base"** %94, align 8
  %96 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %28, i32 0, i32 1
  %97 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %96, align 8
  %98 = icmp ne %"struct.std::_Rb_tree_node_base"* %97, null
  %99 = load i32, i32* @x.657
  %100 = load i32, i32* @y.658
  %101 = sub i32 0, 1
  %102 = add i32 %99, %101
  %103 = sub i32 %99, 1
  %104 = mul i32 %99, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %100, 10
  %108 = xor i1 %106, true
  %109 = xor i1 %107, true
  %110 = xor i1 false, true
  %111 = and i1 %108, false
  %112 = and i1 %106, %110
  %113 = and i1 %109, false
  %114 = and i1 %107, %110
  %115 = or i1 %111, %112
  %116 = or i1 %113, %114
  %117 = xor i1 %115, %116
  %118 = or i1 %108, %109
  %119 = xor i1 %118, true
  %120 = or i1 false, %110
  %121 = and i1 %119, %120
  %122 = or i1 %117, %121
  %123 = or i1 %106, %107
  br i1 %122, label %124, label %482

; <label>:124:                                    ; preds = %90
  br i1 %98, label %125, label %256

; <label>:125:                                    ; preds = %124
  %126 = load i32, i32* @x.657
  %127 = load i32, i32* @y.658
  %128 = add i32 %126, 1157545603
  %129 = sub i32 %128, 1
  %130 = sub i32 %129, 1157545603
  %131 = sub i32 %126, 1
  %132 = mul i32 %126, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %127, 10
  %136 = xor i1 %134, true
  %137 = xor i1 %135, true
  %138 = xor i1 true, true
  %139 = and i1 %136, true
  %140 = and i1 %134, %138
  %141 = and i1 %137, true
  %142 = and i1 %135, %138
  %143 = or i1 %139, %140
  %144 = or i1 %141, %142
  %145 = xor i1 %143, %144
  %146 = or i1 %136, %137
  %147 = xor i1 %146, true
  %148 = or i1 true, %138
  %149 = and i1 %147, %148
  %150 = or i1 %145, %149
  %151 = or i1 %134, %135
  br i1 %150, label %152, label %491

; <label>:152:                                    ; preds = %125, %491
  %153 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %28, i32 0, i32 0
  %154 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %153, align 8
  %155 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %28, i32 0, i32 1
  %156 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %155, align 8
  %157 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %27, align 8
  %158 = load i32, i32* @x.657
  %159 = load i32, i32* @y.658
  %160 = add i32 %158, 298621575
  %161 = sub i32 %160, 1
  %162 = sub i32 %161, 298621575
  %163 = sub i32 %158, 1
  %164 = mul i32 %158, %162
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %159, 10
  %168 = and i1 %166, %167
  %169 = xor i1 %166, %167
  %170 = or i1 %168, %169
  %171 = or i1 %166, %167
  br i1 %170, label %172, label %491

; <label>:172:                                    ; preds = %152
  %173 = invoke %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSA_PSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* %33, %"struct.std::_Rb_tree_node_base"* %154, %"struct.std::_Rb_tree_node_base"* %156, %"struct.std::_Rb_tree_node"* %157)
          to label %174 unwind label %218

; <label>:174:                                    ; preds = %172
  %175 = load i32, i32* @x.657
  %176 = load i32, i32* @y.658
  %177 = sub i32 %175, 1317747726
  %178 = sub i32 %177, 1
  %179 = add i32 %178, 1317747726
  %180 = sub i32 %175, 1
  %181 = mul i32 %175, %179
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %176, 10
  %185 = and i1 %183, %184
  %186 = xor i1 %183, %184
  %187 = or i1 %185, %186
  %188 = or i1 %183, %184
  br i1 %187, label %189, label %497

; <label>:189:                                    ; preds = %174, %497
  %190 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %21, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %173, %"struct.std::_Rb_tree_node_base"** %190, align 8
  %191 = load i32, i32* @x.657
  %192 = load i32, i32* @y.658
  %193 = sub i32 %191, -1560677082
  %194 = sub i32 %193, 1
  %195 = add i32 %194, -1560677082
  %196 = sub i32 %191, 1
  %197 = mul i32 %191, %195
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %192, 10
  %201 = xor i1 %199, true
  %202 = xor i1 %200, true
  %203 = xor i1 false, true
  %204 = and i1 %201, false
  %205 = and i1 %199, %203
  %206 = and i1 %202, false
  %207 = and i1 %200, %203
  %208 = or i1 %204, %205
  %209 = or i1 %206, %207
  %210 = xor i1 %208, %209
  %211 = or i1 %201, %202
  %212 = xor i1 %211, true
  %213 = or i1 false, %203
  %214 = and i1 %212, %213
  %215 = or i1 %210, %214
  %216 = or i1 %199, %200
  br i1 %215, label %217, label %497

; <label>:217:                                    ; preds = %189
  br label %322

; <label>:218:                                    ; preds = %172, %72, %70
  %219 = landingpad { i8*, i32 }
          catch i8* null
  %220 = extractvalue { i8*, i32 } %219, 0
  store i8* %220, i8** %30, align 8
  %221 = extractvalue { i8*, i32 } %219, 1
  store i32 %221, i32* %31, align 4
  br label %222

; <label>:222:                                    ; preds = %218
  %223 = load i32, i32* @x.657
  %224 = load i32, i32* @y.658
  %225 = add i32 %223, 1141153389
  %226 = sub i32 %225, 1
  %227 = sub i32 %226, 1141153389
  %228 = sub i32 %223, 1
  %229 = mul i32 %223, %227
  %230 = urem i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %224, 10
  %233 = and i1 %231, %232
  %234 = xor i1 %231, %232
  %235 = or i1 %233, %234
  %236 = or i1 %231, %232
  br i1 %235, label %237, label %499

; <label>:237:                                    ; preds = %222, %499
  %238 = load i8*, i8** %30, align 8
  %239 = call i8* @__cxa_begin_catch(i8* %238) #3
  %240 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %27, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* %33, %"struct.std::_Rb_tree_node"* %240) #3
  %241 = load i32, i32* @x.657
  %242 = load i32, i32* @y.658
  %243 = sub i32 %241, 149885525
  %244 = sub i32 %243, 1
  %245 = add i32 %244, 149885525
  %246 = sub i32 %241, 1
  %247 = mul i32 %241, %245
  %248 = urem i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = icmp slt i32 %242, 10
  %251 = and i1 %249, %250
  %252 = xor i1 %249, %250
  %253 = or i1 %251, %252
  %254 = or i1 %249, %250
  br i1 %253, label %255, label %499

; <label>:255:                                    ; preds = %237
  invoke void @__cxa_rethrow() #15
          to label %427 unwind label %316

; <label>:256:                                    ; preds = %124
  %257 = load i32, i32* @x.657
  %258 = load i32, i32* @y.658
  %259 = sub i32 %257, 784798098
  %260 = sub i32 %259, 1
  %261 = add i32 %260, 784798098
  %262 = sub i32 %257, 1
  %263 = mul i32 %257, %261
  %264 = urem i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %258, 10
  %267 = xor i1 %265, true
  %268 = xor i1 %266, true
  %269 = xor i1 true, true
  %270 = and i1 %267, true
  %271 = and i1 %265, %269
  %272 = and i1 %268, true
  %273 = and i1 %266, %269
  %274 = or i1 %270, %271
  %275 = or i1 %272, %273
  %276 = xor i1 %274, %275
  %277 = or i1 %267, %268
  %278 = xor i1 %277, true
  %279 = or i1 true, %269
  %280 = and i1 %278, %279
  %281 = or i1 %276, %280
  %282 = or i1 %265, %266
  br i1 %281, label %283, label %503

; <label>:283:                                    ; preds = %256, %503
  %284 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %27, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* %33, %"struct.std::_Rb_tree_node"* %284) #3
  %285 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %28, i32 0, i32 0
  %286 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %285, align 8
  %287 = bitcast %"struct.std::_Rb_tree_node_base"* %286 to %"struct.std::_Rb_tree_node"*
  %288 = bitcast %"struct.std::_Rb_tree_node"* %287 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %21, %"struct.std::_Rb_tree_node_base"* %288) #3
  %289 = load i32, i32* @x.657
  %290 = load i32, i32* @y.658
  %291 = add i32 %289, 73528757
  %292 = sub i32 %291, 1
  %293 = sub i32 %292, 73528757
  %294 = sub i32 %289, 1
  %295 = mul i32 %289, %293
  %296 = urem i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = icmp slt i32 %290, 10
  %299 = xor i1 %297, true
  %300 = xor i1 %298, true
  %301 = xor i1 false, true
  %302 = and i1 %299, false
  %303 = and i1 %297, %301
  %304 = and i1 %300, false
  %305 = and i1 %298, %301
  %306 = or i1 %302, %303
  %307 = or i1 %304, %305
  %308 = xor i1 %306, %307
  %309 = or i1 %299, %300
  %310 = xor i1 %309, true
  %311 = or i1 false, %301
  %312 = and i1 %310, %311
  %313 = or i1 %308, %312
  %314 = or i1 %297, %298
  br i1 %313, label %315, label %503

; <label>:315:                                    ; preds = %283
  br label %322

; <label>:316:                                    ; preds = %255
  %317 = landingpad { i8*, i32 }
          cleanup
  %318 = extractvalue { i8*, i32 } %317, 0
  store i8* %318, i8** %30, align 8
  %319 = extractvalue { i8*, i32 } %317, 1
  store i32 %319, i32* %31, align 4
  invoke void @__cxa_end_catch()
          to label %320 unwind label %424

; <label>:320:                                    ; preds = %316
  br label %377
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:322:                                    ; preds = %315, %217
  %323 = load i32, i32* @x.657
  %324 = load i32, i32* @y.658
  %325 = sub i32 0, 1
  %326 = add i32 %323, %325
  %327 = sub i32 %323, 1
  %328 = mul i32 %323, %326
  %329 = urem i32 %328, 2
  %330 = icmp eq i32 %329, 0
  %331 = icmp slt i32 %324, 10
  %332 = xor i1 %330, true
  %333 = xor i1 %331, true
  %334 = xor i1 true, true
  %335 = and i1 %332, true
  %336 = and i1 %330, %334
  %337 = and i1 %333, true
  %338 = and i1 %331, %334
  %339 = or i1 %335, %336
  %340 = or i1 %337, %338
  %341 = xor i1 %339, %340
  %342 = or i1 %332, %333
  %343 = xor i1 %342, true
  %344 = or i1 true, %334
  %345 = and i1 %343, %344
  %346 = or i1 %341, %345
  %347 = or i1 %330, %331
  br i1 %346, label %348, label %509

; <label>:348:                                    ; preds = %322, %509
  %349 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %21, i32 0, i32 0
  %350 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %349, align 8
  %351 = load i32, i32* @x.657
  %352 = load i32, i32* @y.658
  %353 = sub i32 0, 1
  %354 = add i32 %351, %353
  %355 = sub i32 %351, 1
  %356 = mul i32 %351, %354
  %357 = urem i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %352, 10
  %360 = xor i1 %358, true
  %361 = xor i1 %359, true
  %362 = xor i1 false, true
  %363 = and i1 %360, false
  %364 = and i1 %358, %362
  %365 = and i1 %361, false
  %366 = and i1 %359, %362
  %367 = or i1 %363, %364
  %368 = or i1 %365, %366
  %369 = xor i1 %367, %368
  %370 = or i1 %360, %361
  %371 = xor i1 %370, true
  %372 = or i1 false, %362
  %373 = and i1 %371, %372
  %374 = or i1 %369, %373
  %375 = or i1 %358, %359
  br i1 %374, label %376, label %509

; <label>:376:                                    ; preds = %348
  ret %"struct.std::_Rb_tree_node_base"* %350

; <label>:377:                                    ; preds = %320
  %378 = load i32, i32* @x.657
  %379 = load i32, i32* @y.658
  %380 = add i32 %378, 1635165736
  %381 = sub i32 %380, 1
  %382 = sub i32 %381, 1635165736
  %383 = sub i32 %378, 1
  %384 = mul i32 %378, %382
  %385 = urem i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = icmp slt i32 %379, 10
  %388 = xor i1 %386, true
  %389 = xor i1 %387, true
  %390 = xor i1 true, true
  %391 = and i1 %388, true
  %392 = and i1 %386, %390
  %393 = and i1 %389, true
  %394 = and i1 %387, %390
  %395 = or i1 %391, %392
  %396 = or i1 %393, %394
  %397 = xor i1 %395, %396
  %398 = or i1 %388, %389
  %399 = xor i1 %398, true
  %400 = or i1 true, %390
  %401 = and i1 %399, %400
  %402 = or i1 %397, %401
  %403 = or i1 %386, %387
  br i1 %402, label %404, label %512

; <label>:404:                                    ; preds = %377, %512
  %405 = load i8*, i8** %30, align 8
  %406 = load i32, i32* %31, align 4
  %407 = insertvalue { i8*, i32 } undef, i8* %405, 0
  %408 = insertvalue { i8*, i32 } %407, i32 %406, 1
  %409 = load i32, i32* @x.657
  %410 = load i32, i32* @y.658
  %411 = add i32 %409, 1941354862
  %412 = sub i32 %411, 1
  %413 = sub i32 %412, 1941354862
  %414 = sub i32 %409, 1
  %415 = mul i32 %409, %413
  %416 = urem i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = icmp slt i32 %410, 10
  %419 = and i1 %417, %418
  %420 = xor i1 %417, %418
  %421 = or i1 %419, %420
  %422 = or i1 %417, %418
  br i1 %421, label %423, label %512

; <label>:423:                                    ; preds = %404
  resume { i8*, i32 } %408

; <label>:424:                                    ; preds = %316
  %425 = landingpad { i8*, i32 }
          catch i8* null
  %426 = extractvalue { i8*, i32 } %425, 0
  call void @__clang_call_terminate(i8* %426) #12
  unreachable

; <label>:427:                                    ; preds = %255
  %428 = load i32, i32* @x.657
  %429 = load i32, i32* @y.658
  %430 = add i32 %428, 546000468
  %431 = sub i32 %430, 1
  %432 = sub i32 %431, 546000468
  %433 = sub i32 %428, 1
  %434 = mul i32 %428, %432
  %435 = urem i32 %434, 2
  %436 = icmp eq i32 %435, 0
  %437 = icmp slt i32 %429, 10
  %438 = and i1 %436, %437
  %439 = xor i1 %436, %437
  %440 = or i1 %438, %439
  %441 = or i1 %436, %437
  br i1 %440, label %442, label %517

; <label>:442:                                    ; preds = %427, %517
  %443 = load i32, i32* @x.657
  %444 = load i32, i32* @y.658
  %445 = add i32 %443, 2078548344
  %446 = sub i32 %445, 1
  %447 = sub i32 %446, 2078548344
  %448 = sub i32 %443, 1
  %449 = mul i32 %443, %447
  %450 = urem i32 %449, 2
  %451 = icmp eq i32 %450, 0
  %452 = icmp slt i32 %444, 10
  %453 = and i1 %451, %452
  %454 = xor i1 %451, %452
  %455 = or i1 %453, %454
  %456 = or i1 %451, %452
  br i1 %455, label %457, label %517

; <label>:457:                                    ; preds = %442
  unreachable

; <label>:458:                                    ; preds = %20, %5
  %459 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %460 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %461 = alloca %"class.std::_Rb_tree"*, align 8
  %462 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %463 = alloca %"class.std::tuple"*, align 8
  %464 = alloca %"class.std::tuple.50"*, align 8
  %465 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %466 = alloca %"struct.std::pair.51", align 8
  %467 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %468 = alloca i8*
  %469 = alloca i32
  %470 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %460, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %470, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %461, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %462, align 8
  store %"class.std::tuple"* %3, %"class.std::tuple"** %463, align 8
  store %"class.std::tuple.50"* %4, %"class.std::tuple.50"** %464, align 8
  %471 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %461, align 8
  %472 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %462, align 8
  %473 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %472) #3
  %474 = load %"class.std::tuple"*, %"class.std::tuple"** %463, align 8
  %475 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple"* dereferenceable(8) %474) #3
  %476 = load %"class.std::tuple.50"*, %"class.std::tuple.50"** %464, align 8
  %477 = call dereferenceable(1) %"class.std::tuple.50"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.50"* dereferenceable(1) %476) #3
  %478 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree"* %471, %"struct.std::piecewise_construct_t"* dereferenceable(1) %473, %"class.std::tuple"* dereferenceable(8) %475, %"class.std::tuple.50"* dereferenceable(1) %477)
  store %"struct.std::_Rb_tree_node"* %478, %"struct.std::_Rb_tree_node"** %465, align 8
  %479 = bitcast %"struct.std::_Rb_tree_const_iterator"* %467 to i8*
  %480 = bitcast %"struct.std::_Rb_tree_const_iterator"* %460 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %479, i8* %480, i64 8, i32 8, i1 false)
  %481 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %465, align 8
  br label %20

; <label>:482:                                    ; preds = %90, %76
  %483 = bitcast %"struct.std::pair.51"* %28 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %484 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %483, i32 0, i32 0
  %485 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %75, 0
  store %"struct.std::_Rb_tree_node_base"* %485, %"struct.std::_Rb_tree_node_base"** %484, align 8
  %486 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %483, i32 0, i32 1
  %487 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %75, 1
  store %"struct.std::_Rb_tree_node_base"* %487, %"struct.std::_Rb_tree_node_base"** %486, align 8
  %488 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %28, i32 0, i32 1
  %489 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %488, align 8
  %490 = icmp ne %"struct.std::_Rb_tree_node_base"* %489, null
  br label %90

; <label>:491:                                    ; preds = %152, %125
  %492 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %28, i32 0, i32 0
  %493 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %492, align 8
  %494 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %28, i32 0, i32 1
  %495 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %494, align 8
  %496 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %27, align 8
  br label %152

; <label>:497:                                    ; preds = %189, %174
  %498 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %21, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %173, %"struct.std::_Rb_tree_node_base"** %498, align 8
  br label %189

; <label>:499:                                    ; preds = %237, %222
  %500 = load i8*, i8** %30, align 8
  %501 = call i8* @__cxa_begin_catch(i8* %500) #3
  %502 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %27, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* %33, %"struct.std::_Rb_tree_node"* %502) #3
  br label %237

; <label>:503:                                    ; preds = %283, %256
  %504 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %27, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* %33, %"struct.std::_Rb_tree_node"* %504) #3
  %505 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %28, i32 0, i32 0
  %506 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %505, align 8
  %507 = bitcast %"struct.std::_Rb_tree_node_base"* %506 to %"struct.std::_Rb_tree_node"*
  %508 = bitcast %"struct.std::_Rb_tree_node"* %507 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %21, %"struct.std::_Rb_tree_node_base"* %508) #3
  br label %283

; <label>:509:                                    ; preds = %348, %322
  %510 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %21, i32 0, i32 0
  %511 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %510, align 8
  br label %348

; <label>:512:                                    ; preds = %404, %377
  %513 = load i8*, i8** %30, align 8
  %514 = load i32, i32* %31, align 4
  %515 = insertvalue { i8*, i32 } undef, i8* %513, 0
  %516 = insertvalue { i8*, i32 } %515, i32 %514, 1
  br label %404

; <label>:517:                                    ; preds = %442, %427
  br label %442
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt23_Rb_tree_const_iteratorISt4pairIKxxEEC2ERKSt17_Rb_tree_iteratorIS2_E(%"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_iterator"* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  store %"struct.std::_Rb_tree_node_base"* %9, %"struct.std::_Rb_tree_node_base"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5tupleIJRKxEEC2ES1_(%"class.std::tuple"*, i64* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::tuple"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.std::tuple"*, %"class.std::tuple"** %3, align 8
  %6 = bitcast %"class.std::tuple"* %5 to %"struct.std::_Tuple_impl"*
  %7 = load i64*, i64** %4, align 8
  call void @_ZNSt11_Tuple_implILm0EJRKxEEC2ES1_(%"struct.std::_Tuple_impl"* %6, i64* dereferenceable(8) %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11lower_boundERS1_(%"class.std::_Rb_tree"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node_base"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.663
  %7 = load i32, i32* @y.664
  %8 = sub i32 %6, 1274364558
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1274364558
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1833307644, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %68
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1833307644, label %20
    i32 -1199288077, label %28
    i32 -1915077447, label %54
    i32 -416334202, label %56
  ]

; <label>:19:                                     ; preds = %17
  br label %68

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1199288077, i32 -416334202
  store i32 %27, i32* %16
  br label %68

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %30 = alloca %"class.std::_Rb_tree"*, align 8
  %31 = alloca i64*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %30, align 8
  store i64* %1, i64** %31, align 8
  %32 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %30, align 8
  %33 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_beginEv(%"class.std::_Rb_tree"* %32) #3
  %34 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_M_endEv(%"class.std::_Rb_tree"* %32) #3
  %35 = load i64*, i64** %31, align 8
  %36 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_(%"class.std::_Rb_tree"* %32, %"struct.std::_Rb_tree_node"* %33, %"struct.std::_Rb_tree_node"* %34, i64* dereferenceable(8) %35)
  %37 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %29, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %36, %"struct.std::_Rb_tree_node_base"** %37, align 8
  %38 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %29, i32 0, i32 0
  %39 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %38, align 8
  store %"struct.std::_Rb_tree_node_base"* %39, %"struct.std::_Rb_tree_node_base"** %3
  %40 = load i32, i32* @x.663
  %41 = load i32, i32* @y.664
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -1915077447, i32 -416334202
  store i32 %53, i32* %16
  br label %68

; <label>:54:                                     ; preds = %17
  %55 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %3
  ret %"struct.std::_Rb_tree_node_base"* %55

; <label>:56:                                     ; preds = %17
  %57 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %58 = alloca %"class.std::_Rb_tree"*, align 8
  %59 = alloca i64*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %58, align 8
  store i64* %1, i64** %59, align 8
  %60 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %58, align 8
  %61 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_beginEv(%"class.std::_Rb_tree"* %60) #3
  %62 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_M_endEv(%"class.std::_Rb_tree"* %60) #3
  %63 = load i64*, i64** %59, align 8
  %64 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_(%"class.std::_Rb_tree"* %60, %"struct.std::_Rb_tree_node"* %61, %"struct.std::_Rb_tree_node"* %62, i64* dereferenceable(8) %63)
  %65 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %57, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %64, %"struct.std::_Rb_tree_node_base"** %65, align 8
  %66 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %57, i32 0, i32 0
  %67 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %66, align 8
  store i32 -1199288077, i32* %16
  br label %68

; <label>:68:                                     ; preds = %56, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS2_ESB_RS1_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %5 = alloca %"struct.std::_Rb_tree_node_base"*
  %6 = alloca i1
  %7 = alloca %"class.std::_Rb_tree"*
  %8 = alloca i64**
  %9 = alloca %"struct.std::_Rb_tree_node"**
  %10 = alloca %"struct.std::_Rb_tree_node"**
  %11 = alloca %"struct.std::_Rb_tree_iterator"*
  %12 = alloca i1
  %13 = alloca i1
  %14 = load i32, i32* @x.665
  %15 = load i32, i32* @y.666
  %16 = sub i32 %14, 1700125905
  %17 = sub i32 %16, 1
  %18 = add i32 %17, 1700125905
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  store i1 %22, i1* %13
  %23 = icmp slt i32 %15, 10
  store i1 %23, i1* %12
  %24 = alloca i32
  store i32 599744128, i32* %24
  br label %25

; <label>:25:                                     ; preds = %4, %319
  %26 = load i32, i32* %24
  switch i32 %26, label %27 [
    i32 599744128, label %28
    i32 -352862878, label %48
    i32 -1440548192, label %72
    i32 2096495174, label %73
    i32 942667587, label %78
    i32 2002918850, label %93
    i32 -1967843305, label %117
    i32 -682421092, label %120
    i32 -1615221089, label %129
    i32 -1814046669, label %156
    i32 963654586, label %189
    i32 -1468784095, label %190
    i32 -761151812, label %205
    i32 1474936237, label %233
    i32 677358911, label %234
    i32 523366586, label %262
    i32 196337767, label %285
    i32 -34166938, label %287
    i32 -829976433, label %294
    i32 1525597731, label %304
    i32 1196682672, label %310
    i32 -390216810, label %311
  ]

; <label>:27:                                     ; preds = %25
  br label %319

; <label>:28:                                     ; preds = %25
  %29 = load volatile i1, i1* %13
  %30 = load volatile i1, i1* %12
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 false, true
  %34 = and i1 %31, false
  %35 = and i1 %29, %33
  %36 = and i1 %32, false
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 false, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  %47 = select i1 %45, i32 -352862878, i32 -34166938
  store i32 %47, i32* %24
  br label %319

; <label>:48:                                     ; preds = %25
  %49 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"struct.std::_Rb_tree_iterator"* %49, %"struct.std::_Rb_tree_iterator"** %11
  %50 = alloca %"class.std::_Rb_tree"*, align 8
  %51 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"** %51, %"struct.std::_Rb_tree_node"*** %10
  %52 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"** %52, %"struct.std::_Rb_tree_node"*** %9
  %53 = alloca i64*, align 8
  store i64** %53, i64*** %8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %50, align 8
  %54 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %10
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %54, align 8
  %55 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %9
  store %"struct.std::_Rb_tree_node"* %2, %"struct.std::_Rb_tree_node"** %55, align 8
  %56 = load volatile i64**, i64*** %8
  store i64* %3, i64** %56, align 8
  %57 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %50, align 8
  store %"class.std::_Rb_tree"* %57, %"class.std::_Rb_tree"** %7
  %58 = load i32, i32* @x.665
  %59 = load i32, i32* @y.666
  %60 = sub i32 0, 1
  %61 = add i32 %58, %60
  %62 = sub i32 %58, 1
  %63 = mul i32 %58, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %59, 10
  %67 = and i1 %65, %66
  %68 = xor i1 %65, %66
  %69 = or i1 %67, %68
  %70 = or i1 %65, %66
  %71 = select i1 %69, i32 -1440548192, i32 -34166938
  store i32 %71, i32* %24
  br label %319

; <label>:72:                                     ; preds = %25
  store i32 2096495174, i32* %24
  br label %319

; <label>:73:                                     ; preds = %25
  %74 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %10
  %75 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %74, align 8
  %76 = icmp ne %"struct.std::_Rb_tree_node"* %75, null
  %77 = select i1 %76, i32 942667587, i32 677358911
  store i32 %77, i32* %24
  br label %319

; <label>:78:                                     ; preds = %25
  %79 = load i32, i32* @x.665
  %80 = load i32, i32* @y.666
  %81 = sub i32 0, 1
  %82 = add i32 %79, %81
  %83 = sub i32 %79, 1
  %84 = mul i32 %79, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %80, 10
  %88 = and i1 %86, %87
  %89 = xor i1 %86, %87
  %90 = or i1 %88, %89
  %91 = or i1 %86, %87
  %92 = select i1 %90, i32 2002918850, i32 -829976433
  store i32 %92, i32* %24
  br label %319

; <label>:93:                                     ; preds = %25
  %94 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %95 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %94, i32 0, i32 0
  %96 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %95, i32 0, i32 0
  %97 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %10
  %98 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %97, align 8
  %99 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E(%"struct.std::_Rb_tree_node"* %98)
  %100 = load volatile i64**, i64*** %8
  %101 = load i64*, i64** %100, align 8
  %102 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %96, i64* dereferenceable(8) %99, i64* dereferenceable(8) %101)
  store i1 %102, i1* %6
  %103 = load i32, i32* @x.665
  %104 = load i32, i32* @y.666
  %105 = sub i32 0, 1
  %106 = add i32 %103, %105
  %107 = sub i32 %103, 1
  %108 = mul i32 %103, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %104, 10
  %112 = and i1 %110, %111
  %113 = xor i1 %110, %111
  %114 = or i1 %112, %113
  %115 = or i1 %110, %111
  %116 = select i1 %114, i32 -1967843305, i32 -829976433
  store i32 %116, i32* %24
  br label %319

; <label>:117:                                    ; preds = %25
  %118 = load volatile i1, i1* %6
  %119 = select i1 %118, i32 -1615221089, i32 -682421092
  store i32 %119, i32* %24
  br label %319

; <label>:120:                                    ; preds = %25
  %121 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %10
  %122 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %121, align 8
  %123 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %9
  store %"struct.std::_Rb_tree_node"* %122, %"struct.std::_Rb_tree_node"** %123, align 8
  %124 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %10
  %125 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %124, align 8
  %126 = bitcast %"struct.std::_Rb_tree_node"* %125 to %"struct.std::_Rb_tree_node_base"*
  %127 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %126) #3
  %128 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %10
  store %"struct.std::_Rb_tree_node"* %127, %"struct.std::_Rb_tree_node"** %128, align 8
  store i32 -1468784095, i32* %24
  br label %319

; <label>:129:                                    ; preds = %25
  %130 = load i32, i32* @x.665
  %131 = load i32, i32* @y.666
  %132 = sub i32 0, 1
  %133 = add i32 %130, %132
  %134 = sub i32 %130, 1
  %135 = mul i32 %130, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %131, 10
  %139 = xor i1 %137, true
  %140 = xor i1 %138, true
  %141 = xor i1 true, true
  %142 = and i1 %139, true
  %143 = and i1 %137, %141
  %144 = and i1 %140, true
  %145 = and i1 %138, %141
  %146 = or i1 %142, %143
  %147 = or i1 %144, %145
  %148 = xor i1 %146, %147
  %149 = or i1 %139, %140
  %150 = xor i1 %149, true
  %151 = or i1 true, %141
  %152 = and i1 %150, %151
  %153 = or i1 %148, %152
  %154 = or i1 %137, %138
  %155 = select i1 %153, i32 -1814046669, i32 1525597731
  store i32 %155, i32* %24
  br label %319

; <label>:156:                                    ; preds = %25
  %157 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %10
  %158 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %157, align 8
  %159 = bitcast %"struct.std::_Rb_tree_node"* %158 to %"struct.std::_Rb_tree_node_base"*
  %160 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %159) #3
  %161 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %10
  store %"struct.std::_Rb_tree_node"* %160, %"struct.std::_Rb_tree_node"** %161, align 8
  %162 = load i32, i32* @x.665
  %163 = load i32, i32* @y.666
  %164 = add i32 %162, 1172932488
  %165 = sub i32 %164, 1
  %166 = sub i32 %165, 1172932488
  %167 = sub i32 %162, 1
  %168 = mul i32 %162, %166
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %163, 10
  %172 = xor i1 %170, true
  %173 = xor i1 %171, true
  %174 = xor i1 false, true
  %175 = and i1 %172, false
  %176 = and i1 %170, %174
  %177 = and i1 %173, false
  %178 = and i1 %171, %174
  %179 = or i1 %175, %176
  %180 = or i1 %177, %178
  %181 = xor i1 %179, %180
  %182 = or i1 %172, %173
  %183 = xor i1 %182, true
  %184 = or i1 false, %174
  %185 = and i1 %183, %184
  %186 = or i1 %181, %185
  %187 = or i1 %170, %171
  %188 = select i1 %186, i32 963654586, i32 1525597731
  store i32 %188, i32* %24
  br label %319

; <label>:189:                                    ; preds = %25
  store i32 -1468784095, i32* %24
  br label %319

; <label>:190:                                    ; preds = %25
  %191 = load i32, i32* @x.665
  %192 = load i32, i32* @y.666
  %193 = sub i32 0, 1
  %194 = add i32 %191, %193
  %195 = sub i32 %191, 1
  %196 = mul i32 %191, %194
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %192, 10
  %200 = and i1 %198, %199
  %201 = xor i1 %198, %199
  %202 = or i1 %200, %201
  %203 = or i1 %198, %199
  %204 = select i1 %202, i32 -761151812, i32 1196682672
  store i32 %204, i32* %24
  br label %319

; <label>:205:                                    ; preds = %25
  %206 = load i32, i32* @x.665
  %207 = load i32, i32* @y.666
  %208 = sub i32 %206, -635169948
  %209 = sub i32 %208, 1
  %210 = add i32 %209, -635169948
  %211 = sub i32 %206, 1
  %212 = mul i32 %206, %210
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %207, 10
  %216 = xor i1 %214, true
  %217 = xor i1 %215, true
  %218 = xor i1 true, true
  %219 = and i1 %216, true
  %220 = and i1 %214, %218
  %221 = and i1 %217, true
  %222 = and i1 %215, %218
  %223 = or i1 %219, %220
  %224 = or i1 %221, %222
  %225 = xor i1 %223, %224
  %226 = or i1 %216, %217
  %227 = xor i1 %226, true
  %228 = or i1 true, %218
  %229 = and i1 %227, %228
  %230 = or i1 %225, %229
  %231 = or i1 %214, %215
  %232 = select i1 %230, i32 1474936237, i32 1196682672
  store i32 %232, i32* %24
  br label %319

; <label>:233:                                    ; preds = %25
  store i32 2096495174, i32* %24
  br label %319

; <label>:234:                                    ; preds = %25
  %235 = load i32, i32* @x.665
  %236 = load i32, i32* @y.666
  %237 = sub i32 %235, -1817057064
  %238 = sub i32 %237, 1
  %239 = add i32 %238, -1817057064
  %240 = sub i32 %235, 1
  %241 = mul i32 %235, %239
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %236, 10
  %245 = xor i1 %243, true
  %246 = xor i1 %244, true
  %247 = xor i1 false, true
  %248 = and i1 %245, false
  %249 = and i1 %243, %247
  %250 = and i1 %246, false
  %251 = and i1 %244, %247
  %252 = or i1 %248, %249
  %253 = or i1 %250, %251
  %254 = xor i1 %252, %253
  %255 = or i1 %245, %246
  %256 = xor i1 %255, true
  %257 = or i1 false, %247
  %258 = and i1 %256, %257
  %259 = or i1 %254, %258
  %260 = or i1 %243, %244
  %261 = select i1 %259, i32 523366586, i32 -390216810
  store i32 %261, i32* %24
  br label %319

; <label>:262:                                    ; preds = %25
  %263 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %9
  %264 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %263, align 8
  %265 = bitcast %"struct.std::_Rb_tree_node"* %264 to %"struct.std::_Rb_tree_node_base"*
  %266 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %11
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %266, %"struct.std::_Rb_tree_node_base"* %265) #3
  %267 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %11
  %268 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %267, i32 0, i32 0
  %269 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %268, align 8
  store %"struct.std::_Rb_tree_node_base"* %269, %"struct.std::_Rb_tree_node_base"** %5
  %270 = load i32, i32* @x.665
  %271 = load i32, i32* @y.666
  %272 = add i32 %270, -1452565280
  %273 = sub i32 %272, 1
  %274 = sub i32 %273, -1452565280
  %275 = sub i32 %270, 1
  %276 = mul i32 %270, %274
  %277 = urem i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %271, 10
  %280 = and i1 %278, %279
  %281 = xor i1 %278, %279
  %282 = or i1 %280, %281
  %283 = or i1 %278, %279
  %284 = select i1 %282, i32 196337767, i32 -390216810
  store i32 %284, i32* %24
  br label %319

; <label>:285:                                    ; preds = %25
  %286 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %5
  ret %"struct.std::_Rb_tree_node_base"* %286

; <label>:287:                                    ; preds = %25
  %288 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %289 = alloca %"class.std::_Rb_tree"*, align 8
  %290 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %291 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %292 = alloca i64*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %289, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %290, align 8
  store %"struct.std::_Rb_tree_node"* %2, %"struct.std::_Rb_tree_node"** %291, align 8
  store i64* %3, i64** %292, align 8
  %293 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %289, align 8
  store i32 -352862878, i32* %24
  br label %319

; <label>:294:                                    ; preds = %25
  %295 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %296 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %295, i32 0, i32 0
  %297 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %296, i32 0, i32 0
  %298 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %10
  %299 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %298, align 8
  %300 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E(%"struct.std::_Rb_tree_node"* %299)
  %301 = load volatile i64**, i64*** %8
  %302 = load i64*, i64** %301, align 8
  %303 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %297, i64* dereferenceable(8) %300, i64* dereferenceable(8) %302)
  store i32 2002918850, i32* %24
  br label %319

; <label>:304:                                    ; preds = %25
  %305 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %10
  %306 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %305, align 8
  %307 = bitcast %"struct.std::_Rb_tree_node"* %306 to %"struct.std::_Rb_tree_node_base"*
  %308 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %307) #3
  %309 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %10
  store %"struct.std::_Rb_tree_node"* %308, %"struct.std::_Rb_tree_node"** %309, align 8
  store i32 -1814046669, i32* %24
  br label %319

; <label>:310:                                    ; preds = %25
  store i32 -761151812, i32* %24
  br label %319

; <label>:311:                                    ; preds = %25
  %312 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %9
  %313 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %312, align 8
  %314 = bitcast %"struct.std::_Rb_tree_node"* %313 to %"struct.std::_Rb_tree_node_base"*
  %315 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %11
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %315, %"struct.std::_Rb_tree_node_base"* %314) #3
  %316 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %11
  %317 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %316, i32 0, i32 0
  %318 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %317, align 8
  store i32 523366586, i32* %24
  br label %319

; <label>:319:                                    ; preds = %311, %310, %304, %294, %287, %262, %234, %233, %205, %190, %189, %156, %129, %120, %117, %93, %78, %73, %72, %48, %28, %27
  br label %25
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_M_endEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E(%"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %3 = alloca %"struct.std::_Select1st", align 1
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
  %4 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
  %5 = call dereferenceable(16) %"struct.std::pair.44"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E(%"struct.std::_Rb_tree_node"* %4)
  %6 = call dereferenceable(8) i64* @_ZNKSt10_Select1stISt4pairIKxxEEclERKS2_(%"struct.std::_Select1st"* %3, %"struct.std::pair.44"* dereferenceable(16) %5)
  ret i64* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_node_base"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.671
  %6 = load i32, i32* @y.672
  %7 = sub i32 %5, 1372687565
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1372687565
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 562647638, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %79
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 562647638, label %19
    i32 -1786873003, label %39
    i32 -1187861508, label %72
    i32 2134531371, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %79

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1786873003, i32 2134531371
  store i32 %38, i32* %15
  br label %79

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %41 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %40, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %41, align 8
  %42 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %40, align 8
  %43 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %42, i32 0, i32 0
  %44 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %41, align 8
  store %"struct.std::_Rb_tree_node_base"* %44, %"struct.std::_Rb_tree_node_base"** %43, align 8
  %45 = load i32, i32* @x.671
  %46 = load i32, i32* @y.672
  %47 = sub i32 %45, -1578175501
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -1578175501
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -1187861508, i32 2134531371
  store i32 %71, i32* %15
  br label %79

; <label>:72:                                     ; preds = %16
  ret void

; <label>:73:                                     ; preds = %16
  %74 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %75 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %74, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %75, align 8
  %76 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %74, align 8
  %77 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %76, i32 0, i32 0
  %78 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %75, align 8
  store %"struct.std::_Rb_tree_node_base"* %78, %"struct.std::_Rb_tree_node_base"** %77, align 8
  store i32 -1786873003, i32* %15
  br label %79

; <label>:79:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNKSt10_Select1stISt4pairIKxxEEclERKS2_(%"struct.std::_Select1st"*, %"struct.std::pair.44"* dereferenceable(16)) #4 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.673
  %7 = load i32, i32* @y.674
  %8 = sub i32 %6, -1362374818
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1362374818
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 2145056035, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %69
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 2145056035, label %20
    i32 2072288696, label %40
    i32 47061250, label %61
    i32 1532671521, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %69

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 2072288696, i32 1532671521
  store i32 %39, i32* %16
  br label %69

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::_Select1st"*, align 8
  %42 = alloca %"struct.std::pair.44"*, align 8
  store %"struct.std::_Select1st"* %0, %"struct.std::_Select1st"** %41, align 8
  store %"struct.std::pair.44"* %1, %"struct.std::pair.44"** %42, align 8
  %43 = load %"struct.std::_Select1st"*, %"struct.std::_Select1st"** %41, align 8
  %44 = load %"struct.std::pair.44"*, %"struct.std::pair.44"** %42, align 8
  %45 = getelementptr inbounds %"struct.std::pair.44", %"struct.std::pair.44"* %44, i32 0, i32 0
  store i64* %45, i64** %3
  %46 = load i32, i32* @x.673
  %47 = load i32, i32* @y.674
  %48 = sub i32 %46, -1358342998
  %49 = sub i32 %48, 1
  %50 = add i32 %49, -1358342998
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 47061250, i32 1532671521
  store i32 %60, i32* %16
  br label %69

; <label>:61:                                     ; preds = %17
  %62 = load volatile i64*, i64** %3
  ret i64* %62

; <label>:63:                                     ; preds = %17
  %64 = alloca %"struct.std::_Select1st"*, align 8
  %65 = alloca %"struct.std::pair.44"*, align 8
  store %"struct.std::_Select1st"* %0, %"struct.std::_Select1st"** %64, align 8
  store %"struct.std::pair.44"* %1, %"struct.std::pair.44"** %65, align 8
  %66 = load %"struct.std::_Select1st"*, %"struct.std::_Select1st"** %64, align 8
  %67 = load %"struct.std::pair.44"*, %"struct.std::pair.44"** %65, align 8
  %68 = getelementptr inbounds %"struct.std::pair.44", %"struct.std::pair.44"* %67, i32 0, i32 0
  store i32 2072288696, i32* %16
  br label %69

; <label>:69:                                     ; preds = %63, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair.44"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E(%"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
  %4 = call %"struct.std::pair.44"* @_ZNKSt13_Rb_tree_nodeISt4pairIKxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %3)
  ret %"struct.std::pair.44"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.44"* @_ZNKSt13_Rb_tree_nodeISt4pairIKxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::pair.44"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.677
  %6 = load i32, i32* @y.678
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 541362702, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 541362702, label %18
    i32 1833373263, label %38
    i32 -1401536370, label %58
    i32 1770879700, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1833373263, i32 1770879700
  store i32 %37, i32* %14
  br label %65

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %39, align 8
  %40 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %40, i32 0, i32 1
  %42 = call %"struct.std::pair.44"* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxxEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* %41) #3
  store %"struct.std::pair.44"* %42, %"struct.std::pair.44"** %2
  %43 = load i32, i32* @x.677
  %44 = load i32, i32* @y.678
  %45 = add i32 %43, -1672565029
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -1672565029
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -1401536370, i32 1770879700
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile %"struct.std::pair.44"*, %"struct.std::pair.44"** %2
  ret %"struct.std::pair.44"* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %61, align 8
  %62 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %61, align 8
  %63 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %62, i32 0, i32 1
  %64 = call %"struct.std::pair.44"* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxxEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* %63) #3
  store i32 1833373263, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.44"* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxxEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %4 = call i8* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxxEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* %3) #3
  %5 = bitcast i8* %4 to %"struct.std::pair.44"*
  ret %"struct.std::pair.44"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxxEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf", %"struct.__gnu_cxx::__aligned_membuf"* %3, i32 0, i32 0
  %5 = bitcast [16 x i8]* %4 to i8*
  ret i8* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE3endEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  %4 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %5, i32 0, i32 1
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %2, %"struct.std::_Rb_tree_node_base"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %2, i32 0, i32 0
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_node_base"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8key_compEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.685
  %5 = load i32, i32* @y.686
  %6 = sub i32 %4, 520144081
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 520144081
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -2130429234, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %54
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2130429234, label %18
    i32 1644992685, label %26
    i32 -40991425, label %47
    i32 1006020474, label %48
  ]

; <label>:17:                                     ; preds = %15
  br label %54

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1644992685, i32 1006020474
  store i32 %25, i32* %14
  br label %54

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::less", align 1
  %28 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %28, align 8
  %29 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %28, align 8
  %30 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %30, i32 0, i32 0
  %32 = load i32, i32* @x.685
  %33 = load i32, i32* @y.686
  %34 = add i32 %32, -1356150166
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -1356150166
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -40991425, i32 1006020474
  store i32 %46, i32* %14
  br label %54

; <label>:47:                                     ; preds = %15
  ret void

; <label>:48:                                     ; preds = %15
  %49 = alloca %"struct.std::less", align 1
  %50 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %50, align 8
  %51 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %50, align 8
  %52 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %51, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %52, i32 0, i32 0
  store i32 1644992685, i32* %14
  br label %54

; <label>:54:                                     ; preds = %48, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.50"* dereferenceable(1)) #0 comdat align 2 {
  %5 = alloca %"class.std::_Rb_tree"*, align 8
  %6 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %7 = alloca %"class.std::tuple"*, align 8
  %8 = alloca %"class.std::tuple.50"*, align 8
  %9 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %5, align 8
  store %"struct.std::piecewise_construct_t"* %1, %"struct.std::piecewise_construct_t"** %6, align 8
  store %"class.std::tuple"* %2, %"class.std::tuple"** %7, align 8
  store %"class.std::tuple.50"* %3, %"class.std::tuple.50"** %8, align 8
  %10 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5, align 8
  %11 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_get_nodeEv(%"class.std::_Rb_tree"* %10)
  store %"struct.std::_Rb_tree_node"* %11, %"struct.std::_Rb_tree_node"** %9, align 8
  %12 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %13 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %6, align 8
  %14 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %13) #3
  %15 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  %16 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple"* dereferenceable(8) %15) #3
  %17 = load %"class.std::tuple.50"*, %"class.std::tuple.50"** %8, align 8
  %18 = call dereferenceable(1) %"class.std::tuple.50"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.50"* dereferenceable(1) %17) #3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEvPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree"* %10, %"struct.std::_Rb_tree_node"* %12, %"struct.std::piecewise_construct_t"* dereferenceable(1) %14, %"class.std::tuple"* dereferenceable(8) %16, %"class.std::tuple.50"* dereferenceable(1) %18)
  %19 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  ret %"struct.std::_Rb_tree_node"* %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1)) #4 comdat {
  %2 = alloca %"struct.std::piecewise_construct_t"*, align 8
  store %"struct.std::piecewise_construct_t"* %0, %"struct.std::piecewise_construct_t"** %2, align 8
  %3 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %2, align 8
  ret %"struct.std::piecewise_construct_t"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %2, align 8
  %3 = load %"class.std::tuple"*, %"class.std::tuple"** %2, align 8
  ret %"class.std::tuple"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::tuple.50"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.50"* dereferenceable(1)) #4 comdat {
  %2 = alloca %"class.std::tuple.50"*, align 8
  store %"class.std::tuple.50"* %0, %"class.std::tuple.50"** %2, align 8
  %3 = load %"class.std::tuple.50"*, %"class.std::tuple.50"** %2, align 8
  ret %"class.std::tuple.50"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node_base"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca %"struct.std::_Rb_tree_node_base"*
  %7 = alloca %"struct.std::_Rb_tree_node_base"*
  %8 = alloca %"class.std::_Rb_tree"*
  %9 = alloca %"struct.std::pair.51", align 8
  %10 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %11 = alloca %"class.std::_Rb_tree"*, align 8
  %12 = alloca i64*, align 8
  %13 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %14 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %15 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %16 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %17 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %18 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %19 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %20 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %21 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %10, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %21, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %11, align 8
  store i64* %2, i64** %12, align 8
  %22 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11, align 8
  store %"class.std::_Rb_tree"* %22, %"class.std::_Rb_tree"** %8
  %23 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKxxEE13_M_const_castEv(%"struct.std::_Rb_tree_const_iterator"* %10) #3
  %24 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %23, %"struct.std::_Rb_tree_node_base"** %24, align 8
  %25 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  %26 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %25, align 8
  store %"struct.std::_Rb_tree_node_base"* %26, %"struct.std::_Rb_tree_node_base"** %7
  %27 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %28 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_M_endEv(%"class.std::_Rb_tree"* %27) #3
  %29 = bitcast %"struct.std::_Rb_tree_node"* %28 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %29, %"struct.std::_Rb_tree_node_base"** %6
  %30 = alloca i32
  store i32 -985947685, i32* %30
  br label %31

; <label>:31:                                     ; preds = %3, %577
  %32 = load i32, i32* %30
  switch i32 %32, label %33 [
    i32 -985947685, label %34
    i32 109451930, label %39
    i32 2129427477, label %44
    i32 1854305794, label %60
    i32 539296259, label %96
    i32 -543389843, label %99
    i32 -1502105216, label %127
    i32 1899654890, label %156
    i32 1133716670, label %157
    i32 368445357, label %173
    i32 -651108586, label %208
    i32 -1638093595, label %209
    i32 -79583257, label %219
    i32 1221129801, label %229
    i32 105559320, label %234
    i32 -1170337966, label %245
    i32 -1878692340, label %251
    i32 -1079234155, label %253
    i32 -1298709014, label %269
    i32 -1720253809, label %286
    i32 819231469, label %287
    i32 -531551969, label %296
    i32 353157108, label %306
    i32 -433856526, label %316
    i32 774855298, label %344
    i32 357464574, label %361
    i32 2021596087, label %362
    i32 278239293, label %373
    i32 1570952136, label %400
    i32 5973386, label %431
    i32 -823951750, label %434
    i32 -1515012801, label %462
    i32 738378287, label %491
    i32 200458476, label %492
    i32 1071601535, label %495
    i32 1553418007, label %504
    i32 1013148095, label %520
    i32 1360683441, label %536
    i32 1785441272, label %537
    i32 -660680316, label %540
    i32 1233507730, label %550
    i32 -1787263074, label %553
    i32 -174887666, label %562
    i32 -211767445, label %565
    i32 79388043, label %568
    i32 -611565117, label %573
    i32 -1438794578, label %575
  ]

; <label>:33:                                     ; preds = %31
  br label %577

; <label>:34:                                     ; preds = %31
  %35 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7
  %36 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6
  %37 = icmp eq %"struct.std::_Rb_tree_node_base"* %35, %36
  %38 = select i1 %37, i32 109451930, i32 -1638093595
  store i32 %38, i32* %30
  br label %577

; <label>:39:                                     ; preds = %31
  %40 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %41 = call i64 @_ZNKSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE4sizeEv(%"class.std::_Rb_tree"* %40) #3
  %42 = icmp ugt i64 %41, 0
  %43 = select i1 %42, i32 2129427477, i32 1133716670
  store i32 %43, i32* %30
  br label %577

; <label>:44:                                     ; preds = %31
  %45 = load i32, i32* @x.695
  %46 = load i32, i32* @y.696
  %47 = sub i32 %45, 1251780427
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 1251780427
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 1854305794, i32 -660680316
  store i32 %59, i32* %30
  br label %577

; <label>:60:                                     ; preds = %31
  %61 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %62 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %61, i32 0, i32 0
  %63 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %62, i32 0, i32 0
  %64 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %65 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_rightmostEv(%"class.std::_Rb_tree"* %64) #3
  %66 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %65, align 8
  %67 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %66)
  %68 = load i64*, i64** %12, align 8
  %69 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %63, i64* dereferenceable(8) %67, i64* dereferenceable(8) %68)
  store i1 %69, i1* %5
  %70 = load i32, i32* @x.695
  %71 = load i32, i32* @y.696
  %72 = sub i32 0, 1
  %73 = add i32 %70, %72
  %74 = sub i32 %70, 1
  %75 = mul i32 %70, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %71, 10
  %79 = xor i1 %77, true
  %80 = xor i1 %78, true
  %81 = xor i1 true, true
  %82 = and i1 %79, true
  %83 = and i1 %77, %81
  %84 = and i1 %80, true
  %85 = and i1 %78, %81
  %86 = or i1 %82, %83
  %87 = or i1 %84, %85
  %88 = xor i1 %86, %87
  %89 = or i1 %79, %80
  %90 = xor i1 %89, true
  %91 = or i1 true, %81
  %92 = and i1 %90, %91
  %93 = or i1 %88, %92
  %94 = or i1 %77, %78
  %95 = select i1 %93, i32 539296259, i32 -660680316
  store i32 %95, i32* %30
  br label %577

; <label>:96:                                     ; preds = %31
  %97 = load volatile i1, i1* %5
  %98 = select i1 %97, i32 -543389843, i32 1133716670
  store i32 %98, i32* %30
  br label %577

; <label>:99:                                     ; preds = %31
  %100 = load i32, i32* @x.695
  %101 = load i32, i32* @y.696
  %102 = sub i32 %100, -179390781
  %103 = sub i32 %102, 1
  %104 = add i32 %103, -179390781
  %105 = sub i32 %100, 1
  %106 = mul i32 %100, %104
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %101, 10
  %110 = xor i1 %108, true
  %111 = xor i1 %109, true
  %112 = xor i1 true, true
  %113 = and i1 %110, true
  %114 = and i1 %108, %112
  %115 = and i1 %111, true
  %116 = and i1 %109, %112
  %117 = or i1 %113, %114
  %118 = or i1 %115, %116
  %119 = xor i1 %117, %118
  %120 = or i1 %110, %111
  %121 = xor i1 %120, true
  %122 = or i1 true, %112
  %123 = and i1 %121, %122
  %124 = or i1 %119, %123
  %125 = or i1 %108, %109
  %126 = select i1 %124, i32 -1502105216, i32 1233507730
  store i32 %126, i32* %30
  br label %577

; <label>:127:                                    ; preds = %31
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %14, align 8
  %128 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %129 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_rightmostEv(%"class.std::_Rb_tree"* %128) #3
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.51"* %9, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %14, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %129)
  %130 = load i32, i32* @x.695
  %131 = load i32, i32* @y.696
  %132 = sub i32 0, 1
  %133 = add i32 %130, %132
  %134 = sub i32 %130, 1
  %135 = mul i32 %130, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %131, 10
  %139 = xor i1 %137, true
  %140 = xor i1 %138, true
  %141 = xor i1 true, true
  %142 = and i1 %139, true
  %143 = and i1 %137, %141
  %144 = and i1 %140, true
  %145 = and i1 %138, %141
  %146 = or i1 %142, %143
  %147 = or i1 %144, %145
  %148 = xor i1 %146, %147
  %149 = or i1 %139, %140
  %150 = xor i1 %149, true
  %151 = or i1 true, %141
  %152 = and i1 %150, %151
  %153 = or i1 %148, %152
  %154 = or i1 %137, %138
  %155 = select i1 %153, i32 1899654890, i32 1233507730
  store i32 %155, i32* %30
  br label %577

; <label>:156:                                    ; preds = %31
  store i32 1785441272, i32* %30
  br label %577

; <label>:157:                                    ; preds = %31
  %158 = load i32, i32* @x.695
  %159 = load i32, i32* @y.696
  %160 = sub i32 %158, 1856169145
  %161 = sub i32 %160, 1
  %162 = add i32 %161, 1856169145
  %163 = sub i32 %158, 1
  %164 = mul i32 %158, %162
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %159, 10
  %168 = and i1 %166, %167
  %169 = xor i1 %166, %167
  %170 = or i1 %168, %169
  %171 = or i1 %166, %167
  %172 = select i1 %170, i32 368445357, i32 -1787263074
  store i32 %172, i32* %30
  br label %577

; <label>:173:                                    ; preds = %31
  %174 = load i64*, i64** %12, align 8
  %175 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %176 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree"* %175, i64* dereferenceable(8) %174)
  %177 = bitcast %"struct.std::pair.51"* %9 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %178 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %177, i32 0, i32 0
  %179 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %176, 0
  store %"struct.std::_Rb_tree_node_base"* %179, %"struct.std::_Rb_tree_node_base"** %178, align 8
  %180 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %177, i32 0, i32 1
  %181 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %176, 1
  store %"struct.std::_Rb_tree_node_base"* %181, %"struct.std::_Rb_tree_node_base"** %180, align 8
  %182 = load i32, i32* @x.695
  %183 = load i32, i32* @y.696
  %184 = sub i32 0, 1
  %185 = add i32 %182, %184
  %186 = sub i32 %182, 1
  %187 = mul i32 %182, %185
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %183, 10
  %191 = xor i1 %189, true
  %192 = xor i1 %190, true
  %193 = xor i1 false, true
  %194 = and i1 %191, false
  %195 = and i1 %189, %193
  %196 = and i1 %192, false
  %197 = and i1 %190, %193
  %198 = or i1 %194, %195
  %199 = or i1 %196, %197
  %200 = xor i1 %198, %199
  %201 = or i1 %191, %192
  %202 = xor i1 %201, true
  %203 = or i1 false, %193
  %204 = and i1 %202, %203
  %205 = or i1 %200, %204
  %206 = or i1 %189, %190
  %207 = select i1 %205, i32 -651108586, i32 -1787263074
  store i32 %207, i32* %30
  br label %577

; <label>:208:                                    ; preds = %31
  store i32 1785441272, i32* %30
  br label %577

; <label>:209:                                    ; preds = %31
  %210 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %211 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %210, i32 0, i32 0
  %212 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %211, i32 0, i32 0
  %213 = load i64*, i64** %12, align 8
  %214 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  %215 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %214, align 8
  %216 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %215)
  %217 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %212, i64* dereferenceable(8) %213, i64* dereferenceable(8) %216)
  %218 = select i1 %217, i32 -79583257, i32 -531551969
  store i32 %218, i32* %30
  br label %577

; <label>:219:                                    ; preds = %31
  %220 = bitcast %"struct.std::_Rb_tree_iterator"* %15 to i8*
  %221 = bitcast %"struct.std::_Rb_tree_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %220, i8* %221, i64 8, i32 8, i1 false)
  %222 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  %223 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %222, align 8
  %224 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %225 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_leftmostEv(%"class.std::_Rb_tree"* %224) #3
  %226 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %225, align 8
  %227 = icmp eq %"struct.std::_Rb_tree_node_base"* %223, %226
  %228 = select i1 %227, i32 1221129801, i32 105559320
  store i32 %228, i32* %30
  br label %577

; <label>:229:                                    ; preds = %31
  %230 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %231 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_leftmostEv(%"class.std::_Rb_tree"* %230) #3
  %232 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %233 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_leftmostEv(%"class.std::_Rb_tree"* %232) #3
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair.51"* %9, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %231, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %233)
  store i32 1785441272, i32* %30
  br label %577

; <label>:234:                                    ; preds = %31
  %235 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %236 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %235, i32 0, i32 0
  %237 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %236, i32 0, i32 0
  %238 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEmmEv(%"struct.std::_Rb_tree_iterator"* %15) #3
  %239 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %238, i32 0, i32 0
  %240 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %239, align 8
  %241 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %240)
  %242 = load i64*, i64** %12, align 8
  %243 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %237, i64* dereferenceable(8) %241, i64* dereferenceable(8) %242)
  %244 = select i1 %243, i32 -1170337966, i32 819231469
  store i32 %244, i32* %30
  br label %577

; <label>:245:                                    ; preds = %31
  %246 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %15, i32 0, i32 0
  %247 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %246, align 8
  %248 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %247) #3
  %249 = icmp eq %"struct.std::_Rb_tree_node"* %248, null
  %250 = select i1 %249, i32 -1878692340, i32 -1079234155
  store i32 %250, i32* %30
  br label %577

; <label>:251:                                    ; preds = %31
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %16, align 8
  %252 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %15, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.51"* %9, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %16, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %252)
  store i32 1785441272, i32* %30
  br label %577

; <label>:253:                                    ; preds = %31
  %254 = load i32, i32* @x.695
  %255 = load i32, i32* @y.696
  %256 = add i32 %254, -678263411
  %257 = sub i32 %256, 1
  %258 = sub i32 %257, -678263411
  %259 = sub i32 %254, 1
  %260 = mul i32 %254, %258
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %255, 10
  %264 = and i1 %262, %263
  %265 = xor i1 %262, %263
  %266 = or i1 %264, %265
  %267 = or i1 %262, %263
  %268 = select i1 %266, i32 -1298709014, i32 -174887666
  store i32 %268, i32* %30
  br label %577

; <label>:269:                                    ; preds = %31
  %270 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  %271 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair.51"* %9, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %270, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %271)
  %272 = load i32, i32* @x.695
  %273 = load i32, i32* @y.696
  %274 = sub i32 0, 1
  %275 = add i32 %272, %274
  %276 = sub i32 %272, 1
  %277 = mul i32 %272, %275
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %273, 10
  %281 = and i1 %279, %280
  %282 = xor i1 %279, %280
  %283 = or i1 %281, %282
  %284 = or i1 %279, %280
  %285 = select i1 %283, i32 -1720253809, i32 -174887666
  store i32 %285, i32* %30
  br label %577

; <label>:286:                                    ; preds = %31
  store i32 1785441272, i32* %30
  br label %577

; <label>:287:                                    ; preds = %31
  %288 = load i64*, i64** %12, align 8
  %289 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %290 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree"* %289, i64* dereferenceable(8) %288)
  %291 = bitcast %"struct.std::pair.51"* %9 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %292 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %291, i32 0, i32 0
  %293 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %290, 0
  store %"struct.std::_Rb_tree_node_base"* %293, %"struct.std::_Rb_tree_node_base"** %292, align 8
  %294 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %291, i32 0, i32 1
  %295 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %290, 1
  store %"struct.std::_Rb_tree_node_base"* %295, %"struct.std::_Rb_tree_node_base"** %294, align 8
  store i32 1785441272, i32* %30
  br label %577

; <label>:296:                                    ; preds = %31
  %297 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %298 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %297, i32 0, i32 0
  %299 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %298, i32 0, i32 0
  %300 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  %301 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %300, align 8
  %302 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %301)
  %303 = load i64*, i64** %12, align 8
  %304 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %299, i64* dereferenceable(8) %302, i64* dereferenceable(8) %303)
  %305 = select i1 %304, i32 353157108, i32 1553418007
  store i32 %305, i32* %30
  br label %577

; <label>:306:                                    ; preds = %31
  %307 = bitcast %"struct.std::_Rb_tree_iterator"* %17 to i8*
  %308 = bitcast %"struct.std::_Rb_tree_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %307, i8* %308, i64 8, i32 8, i1 false)
  %309 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  %310 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %309, align 8
  %311 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %312 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_rightmostEv(%"class.std::_Rb_tree"* %311) #3
  %313 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %312, align 8
  %314 = icmp eq %"struct.std::_Rb_tree_node_base"* %310, %313
  %315 = select i1 %314, i32 -433856526, i32 2021596087
  store i32 %315, i32* %30
  br label %577

; <label>:316:                                    ; preds = %31
  %317 = load i32, i32* @x.695
  %318 = load i32, i32* @y.696
  %319 = sub i32 %317, 1387670802
  %320 = sub i32 %319, 1
  %321 = add i32 %320, 1387670802
  %322 = sub i32 %317, 1
  %323 = mul i32 %317, %321
  %324 = urem i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %318, 10
  %327 = xor i1 %325, true
  %328 = xor i1 %326, true
  %329 = xor i1 true, true
  %330 = and i1 %327, true
  %331 = and i1 %325, %329
  %332 = and i1 %328, true
  %333 = and i1 %326, %329
  %334 = or i1 %330, %331
  %335 = or i1 %332, %333
  %336 = xor i1 %334, %335
  %337 = or i1 %327, %328
  %338 = xor i1 %337, true
  %339 = or i1 true, %329
  %340 = and i1 %338, %339
  %341 = or i1 %336, %340
  %342 = or i1 %325, %326
  %343 = select i1 %341, i32 774855298, i32 -211767445
  store i32 %343, i32* %30
  br label %577

; <label>:344:                                    ; preds = %31
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %18, align 8
  %345 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %346 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_rightmostEv(%"class.std::_Rb_tree"* %345) #3
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.51"* %9, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %18, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %346)
  %347 = load i32, i32* @x.695
  %348 = load i32, i32* @y.696
  %349 = sub i32 0, 1
  %350 = add i32 %347, %349
  %351 = sub i32 %347, 1
  %352 = mul i32 %347, %350
  %353 = urem i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %348, 10
  %356 = and i1 %354, %355
  %357 = xor i1 %354, %355
  %358 = or i1 %356, %357
  %359 = or i1 %354, %355
  %360 = select i1 %358, i32 357464574, i32 -211767445
  store i32 %360, i32* %30
  br label %577

; <label>:361:                                    ; preds = %31
  store i32 1785441272, i32* %30
  br label %577

; <label>:362:                                    ; preds = %31
  %363 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %364 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %363, i32 0, i32 0
  %365 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %364, i32 0, i32 0
  %366 = load i64*, i64** %12, align 8
  %367 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEppEv(%"struct.std::_Rb_tree_iterator"* %17) #3
  %368 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %367, i32 0, i32 0
  %369 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %368, align 8
  %370 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %369)
  %371 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %365, i64* dereferenceable(8) %366, i64* dereferenceable(8) %370)
  %372 = select i1 %371, i32 278239293, i32 1071601535
  store i32 %372, i32* %30
  br label %577

; <label>:373:                                    ; preds = %31
  %374 = load i32, i32* @x.695
  %375 = load i32, i32* @y.696
  %376 = sub i32 0, 1
  %377 = add i32 %374, %376
  %378 = sub i32 %374, 1
  %379 = mul i32 %374, %377
  %380 = urem i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %375, 10
  %383 = xor i1 %381, true
  %384 = xor i1 %382, true
  %385 = xor i1 false, true
  %386 = and i1 %383, false
  %387 = and i1 %381, %385
  %388 = and i1 %384, false
  %389 = and i1 %382, %385
  %390 = or i1 %386, %387
  %391 = or i1 %388, %389
  %392 = xor i1 %390, %391
  %393 = or i1 %383, %384
  %394 = xor i1 %393, true
  %395 = or i1 false, %385
  %396 = and i1 %394, %395
  %397 = or i1 %392, %396
  %398 = or i1 %381, %382
  %399 = select i1 %397, i32 1570952136, i32 79388043
  store i32 %399, i32* %30
  br label %577

; <label>:400:                                    ; preds = %31
  %401 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  %402 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %401, align 8
  %403 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %402) #3
  %404 = icmp eq %"struct.std::_Rb_tree_node"* %403, null
  store i1 %404, i1* %4
  %405 = load i32, i32* @x.695
  %406 = load i32, i32* @y.696
  %407 = sub i32 0, 1
  %408 = add i32 %405, %407
  %409 = sub i32 %405, 1
  %410 = mul i32 %405, %408
  %411 = urem i32 %410, 2
  %412 = icmp eq i32 %411, 0
  %413 = icmp slt i32 %406, 10
  %414 = xor i1 %412, true
  %415 = xor i1 %413, true
  %416 = xor i1 false, true
  %417 = and i1 %414, false
  %418 = and i1 %412, %416
  %419 = and i1 %415, false
  %420 = and i1 %413, %416
  %421 = or i1 %417, %418
  %422 = or i1 %419, %420
  %423 = xor i1 %421, %422
  %424 = or i1 %414, %415
  %425 = xor i1 %424, true
  %426 = or i1 false, %416
  %427 = and i1 %425, %426
  %428 = or i1 %423, %427
  %429 = or i1 %412, %413
  %430 = select i1 %428, i32 5973386, i32 79388043
  store i32 %430, i32* %30
  br label %577

; <label>:431:                                    ; preds = %31
  %432 = load volatile i1, i1* %4
  %433 = select i1 %432, i32 -823951750, i32 200458476
  store i32 %433, i32* %30
  br label %577

; <label>:434:                                    ; preds = %31
  %435 = load i32, i32* @x.695
  %436 = load i32, i32* @y.696
  %437 = sub i32 %435, 18163593
  %438 = sub i32 %437, 1
  %439 = add i32 %438, 18163593
  %440 = sub i32 %435, 1
  %441 = mul i32 %435, %439
  %442 = urem i32 %441, 2
  %443 = icmp eq i32 %442, 0
  %444 = icmp slt i32 %436, 10
  %445 = xor i1 %443, true
  %446 = xor i1 %444, true
  %447 = xor i1 false, true
  %448 = and i1 %445, false
  %449 = and i1 %443, %447
  %450 = and i1 %446, false
  %451 = and i1 %444, %447
  %452 = or i1 %448, %449
  %453 = or i1 %450, %451
  %454 = xor i1 %452, %453
  %455 = or i1 %445, %446
  %456 = xor i1 %455, true
  %457 = or i1 false, %447
  %458 = and i1 %456, %457
  %459 = or i1 %454, %458
  %460 = or i1 %443, %444
  %461 = select i1 %459, i32 -1515012801, i32 -611565117
  store i32 %461, i32* %30
  br label %577

; <label>:462:                                    ; preds = %31
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %19, align 8
  %463 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.51"* %9, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %19, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %463)
  %464 = load i32, i32* @x.695
  %465 = load i32, i32* @y.696
  %466 = sub i32 %464, 437573800
  %467 = sub i32 %466, 1
  %468 = add i32 %467, 437573800
  %469 = sub i32 %464, 1
  %470 = mul i32 %464, %468
  %471 = urem i32 %470, 2
  %472 = icmp eq i32 %471, 0
  %473 = icmp slt i32 %465, 10
  %474 = xor i1 %472, true
  %475 = xor i1 %473, true
  %476 = xor i1 true, true
  %477 = and i1 %474, true
  %478 = and i1 %472, %476
  %479 = and i1 %475, true
  %480 = and i1 %473, %476
  %481 = or i1 %477, %478
  %482 = or i1 %479, %480
  %483 = xor i1 %481, %482
  %484 = or i1 %474, %475
  %485 = xor i1 %484, true
  %486 = or i1 true, %476
  %487 = and i1 %485, %486
  %488 = or i1 %483, %487
  %489 = or i1 %472, %473
  %490 = select i1 %488, i32 738378287, i32 -611565117
  store i32 %490, i32* %30
  br label %577

; <label>:491:                                    ; preds = %31
  store i32 1785441272, i32* %30
  br label %577

; <label>:492:                                    ; preds = %31
  %493 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %17, i32 0, i32 0
  %494 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %17, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair.51"* %9, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %493, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %494)
  store i32 1785441272, i32* %30
  br label %577

; <label>:495:                                    ; preds = %31
  %496 = load i64*, i64** %12, align 8
  %497 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %498 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree"* %497, i64* dereferenceable(8) %496)
  %499 = bitcast %"struct.std::pair.51"* %9 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %500 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %499, i32 0, i32 0
  %501 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %498, 0
  store %"struct.std::_Rb_tree_node_base"* %501, %"struct.std::_Rb_tree_node_base"** %500, align 8
  %502 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %499, i32 0, i32 1
  %503 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %498, 1
  store %"struct.std::_Rb_tree_node_base"* %503, %"struct.std::_Rb_tree_node_base"** %502, align 8
  store i32 1785441272, i32* %30
  br label %577

; <label>:504:                                    ; preds = %31
  %505 = load i32, i32* @x.695
  %506 = load i32, i32* @y.696
  %507 = sub i32 %505, -329414579
  %508 = sub i32 %507, 1
  %509 = add i32 %508, -329414579
  %510 = sub i32 %505, 1
  %511 = mul i32 %505, %509
  %512 = urem i32 %511, 2
  %513 = icmp eq i32 %512, 0
  %514 = icmp slt i32 %506, 10
  %515 = and i1 %513, %514
  %516 = xor i1 %513, %514
  %517 = or i1 %515, %516
  %518 = or i1 %513, %514
  %519 = select i1 %517, i32 1013148095, i32 -1438794578
  store i32 %519, i32* %30
  br label %577

; <label>:520:                                    ; preds = %31
  %521 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %20, align 8
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.51"* %9, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %521, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %20)
  %522 = load i32, i32* @x.695
  %523 = load i32, i32* @y.696
  %524 = sub i32 0, 1
  %525 = add i32 %522, %524
  %526 = sub i32 %522, 1
  %527 = mul i32 %522, %525
  %528 = urem i32 %527, 2
  %529 = icmp eq i32 %528, 0
  %530 = icmp slt i32 %523, 10
  %531 = and i1 %529, %530
  %532 = xor i1 %529, %530
  %533 = or i1 %531, %532
  %534 = or i1 %529, %530
  %535 = select i1 %533, i32 1360683441, i32 -1438794578
  store i32 %535, i32* %30
  br label %577

; <label>:536:                                    ; preds = %31
  store i32 1785441272, i32* %30
  br label %577

; <label>:537:                                    ; preds = %31
  %538 = bitcast %"struct.std::pair.51"* %9 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %539 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %538, align 8
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %539

; <label>:540:                                    ; preds = %31
  %541 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %542 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %541, i32 0, i32 0
  %543 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %542, i32 0, i32 0
  %544 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %545 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_rightmostEv(%"class.std::_Rb_tree"* %544) #3
  %546 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %545, align 8
  %547 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %546)
  %548 = load i64*, i64** %12, align 8
  %549 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %543, i64* dereferenceable(8) %547, i64* dereferenceable(8) %548)
  store i32 1854305794, i32* %30
  br label %577

; <label>:550:                                    ; preds = %31
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %14, align 8
  %551 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %552 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_rightmostEv(%"class.std::_Rb_tree"* %551) #3
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.51"* %9, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %14, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %552)
  store i32 -1502105216, i32* %30
  br label %577

; <label>:553:                                    ; preds = %31
  %554 = load i64*, i64** %12, align 8
  %555 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %556 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree"* %555, i64* dereferenceable(8) %554)
  %557 = bitcast %"struct.std::pair.51"* %9 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %558 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %557, i32 0, i32 0
  %559 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %556, 0
  store %"struct.std::_Rb_tree_node_base"* %559, %"struct.std::_Rb_tree_node_base"** %558, align 8
  %560 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %557, i32 0, i32 1
  %561 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %556, 1
  store %"struct.std::_Rb_tree_node_base"* %561, %"struct.std::_Rb_tree_node_base"** %560, align 8
  store i32 368445357, i32* %30
  br label %577

; <label>:562:                                    ; preds = %31
  %563 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  %564 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair.51"* %9, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %563, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %564)
  store i32 -1298709014, i32* %30
  br label %577

; <label>:565:                                    ; preds = %31
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %18, align 8
  %566 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %567 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_rightmostEv(%"class.std::_Rb_tree"* %566) #3
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.51"* %9, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %18, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %567)
  store i32 774855298, i32* %30
  br label %577

; <label>:568:                                    ; preds = %31
  %569 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  %570 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %569, align 8
  %571 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %570) #3
  %572 = icmp eq %"struct.std::_Rb_tree_node"* %571, null
  store i32 1570952136, i32* %30
  br label %577

; <label>:573:                                    ; preds = %31
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %19, align 8
  %574 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.51"* %9, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %19, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %574)
  store i32 -1515012801, i32* %30
  br label %577

; <label>:575:                                    ; preds = %31
  %576 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %20, align 8
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.51"* %9, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %576, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %20)
  store i32 1013148095, i32* %30
  br label %577

; <label>:577:                                    ; preds = %575, %573, %568, %565, %562, %553, %550, %540, %536, %520, %504, %495, %492, %491, %462, %434, %431, %400, %373, %362, %361, %344, %316, %306, %296, %287, %286, %269, %253, %251, %245, %234, %229, %219, %209, %208, %173, %157, %156, %127, %99, %96, %60, %44, %39, %34, %33
  br label %31
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSA_PSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca %"struct.std::_Rb_tree_node_base"*
  %7 = alloca %"struct.std::_Rb_tree_node_base"*
  %8 = alloca %"class.std::_Rb_tree"*
  %9 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %10 = alloca %"class.std::_Rb_tree"*, align 8
  %11 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %12 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %13 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %14 = alloca i8, align 1
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %10, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %11, align 8
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %12, align 8
  store %"struct.std::_Rb_tree_node"* %3, %"struct.std::_Rb_tree_node"** %13, align 8
  %15 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %10, align 8
  store %"class.std::_Rb_tree"* %15, %"class.std::_Rb_tree"** %8
  %16 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  store %"struct.std::_Rb_tree_node_base"* %16, %"struct.std::_Rb_tree_node_base"** %7
  %17 = alloca i32
  store i32 -776650634, i32* %17
  %18 = alloca i1
  br label %19

; <label>:19:                                     ; preds = %4, %142
  %20 = load i32, i32* %17
  switch i32 %20, label %21 [
    i32 -776650634, label %22
    i32 -1498334237, label %26
    i32 -1251657466, label %33
    i32 -1459798920, label %42
    i32 -1354632816, label %59
    i32 2049376504, label %97
    i32 -198273518, label %99
  ]

; <label>:21:                                     ; preds = %19
  br label %142

; <label>:22:                                     ; preds = %19
  %23 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7
  %24 = icmp ne %"struct.std::_Rb_tree_node_base"* %23, null
  %25 = select i1 %24, i32 -1459798920, i32 -1498334237
  store i32 %25, i32* %17
  store i1 true, i1* %18
  br label %142

; <label>:26:                                     ; preds = %19
  %27 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %12, align 8
  %28 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %29 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_M_endEv(%"class.std::_Rb_tree"* %28) #3
  %30 = bitcast %"struct.std::_Rb_tree_node"* %29 to %"struct.std::_Rb_tree_node_base"*
  %31 = icmp eq %"struct.std::_Rb_tree_node_base"* %27, %30
  %32 = select i1 %31, i32 -1459798920, i32 -1251657466
  store i32 %32, i32* %17
  store i1 true, i1* %18
  br label %142

; <label>:33:                                     ; preds = %19
  %34 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %35 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %35, i32 0, i32 0
  %37 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %13, align 8
  %38 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E(%"struct.std::_Rb_tree_node"* %37)
  %39 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %12, align 8
  %40 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %39)
  %41 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %36, i64* dereferenceable(8) %38, i64* dereferenceable(8) %40)
  store i32 -1459798920, i32* %17
  store i1 %41, i1* %18
  br label %142

; <label>:42:                                     ; preds = %19
  %43 = load i1, i1* %18
  store i1 %43, i1* %5
  %44 = load i32, i32* @x.697
  %45 = load i32, i32* @y.698
  %46 = add i32 %44, -596781404
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -596781404
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -1354632816, i32 -198273518
  store i32 %58, i32* %17
  br label %142

; <label>:59:                                     ; preds = %19
  %60 = load volatile i1, i1* %5
  %61 = zext i1 %60 to i8
  store i8 %61, i8* %14, align 1
  %62 = load i8, i8* %14, align 1
  %63 = trunc i8 %62 to i1
  %64 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %13, align 8
  %65 = bitcast %"struct.std::_Rb_tree_node"* %64 to %"struct.std::_Rb_tree_node_base"*
  %66 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %12, align 8
  %67 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %68 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %67, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %68, i32 0, i32 1
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %63, %"struct.std::_Rb_tree_node_base"* %65, %"struct.std::_Rb_tree_node_base"* %66, %"struct.std::_Rb_tree_node_base"* dereferenceable(32) %69) #3
  %70 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %71 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %70, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %71, i32 0, i32 2
  %73 = load i64, i64* %72, align 8
  %74 = sub i64 %73, -483013246265615268
  %75 = add i64 %74, 1
  %76 = add i64 %75, -483013246265615268
  %77 = add i64 %73, 1
  store i64 %76, i64* %72, align 8
  %78 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %13, align 8
  %79 = bitcast %"struct.std::_Rb_tree_node"* %78 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %9, %"struct.std::_Rb_tree_node_base"* %79) #3
  %80 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %9, i32 0, i32 0
  %81 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %80, align 8
  store %"struct.std::_Rb_tree_node_base"* %81, %"struct.std::_Rb_tree_node_base"** %6
  %82 = load i32, i32* @x.697
  %83 = load i32, i32* @y.698
  %84 = add i32 %82, 581974319
  %85 = sub i32 %84, 1
  %86 = sub i32 %85, 581974319
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  %96 = select i1 %94, i32 2049376504, i32 -198273518
  store i32 %96, i32* %17
  br label %142

; <label>:97:                                     ; preds = %19
  %98 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6
  ret %"struct.std::_Rb_tree_node_base"* %98

; <label>:99:                                     ; preds = %19
  %100 = load volatile i1, i1* %5
  %101 = zext i1 %100 to i8
  store i8 %101, i8* %14, align 1
  %102 = load i8, i8* %14, align 1
  %103 = trunc i8 %102 to i1
  %104 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %13, align 8
  %105 = bitcast %"struct.std::_Rb_tree_node"* %104 to %"struct.std::_Rb_tree_node_base"*
  %106 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %12, align 8
  %107 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %108 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %107, i32 0, i32 0
  %109 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %108, i32 0, i32 1
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %103, %"struct.std::_Rb_tree_node_base"* %105, %"struct.std::_Rb_tree_node_base"* %106, %"struct.std::_Rb_tree_node_base"* dereferenceable(32) %109) #3
  %110 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %111 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %110, i32 0, i32 0
  %112 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %111, i32 0, i32 2
  %113 = load i64, i64* %112, align 8
  %114 = sub i64 0, %113
  %115 = add i64 0, %114
  %116 = sub i64 0, %113
  %117 = sub i64 0, %115
  %118 = sub i64 0, 1
  %119 = add i64 %117, %118
  %120 = sub i64 0, %119
  %121 = add i64 %115, 1
  %122 = shl i64 %113, 1
  %123 = sub i64 %113, -1234580106565719315
  %124 = sub i64 %123, 1
  %125 = add i64 %124, -1234580106565719315
  %126 = sub i64 %113, 1
  %127 = mul i64 %125, 1
  %128 = shl i64 %113, 1
  %129 = sub i64 %113, 4970420803106002872
  %130 = sub i64 %129, 1
  %131 = add i64 %130, 4970420803106002872
  %132 = sub i64 %113, 1
  %133 = mul i64 %131, 1
  %134 = shl i64 %113, 1
  %135 = sub i64 0, 1
  %136 = sub i64 %113, %135
  %137 = add i64 %113, 1
  store i64 %136, i64* %112, align 8
  %138 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %13, align 8
  %139 = bitcast %"struct.std::_Rb_tree_node"* %138 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %9, %"struct.std::_Rb_tree_node_base"* %139) #3
  %140 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %9, i32 0, i32 0
  %141 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %140, align 8
  store i32 -1354632816, i32* %17
  br label %142

; <label>:142:                                    ; preds = %99, %59, %42, %33, %26, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_get_nodeEv(%"class.std::_Rb_tree"*) #0 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = call dereferenceable(1) %"class.std::allocator.18"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %3) #3
  %5 = call %"struct.std::_Rb_tree_node"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE8allocateERS5_m(%"class.std::allocator.18"* dereferenceable(1) %4, i64 1)
  ret %"struct.std::_Rb_tree_node"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESD_IJEEEEEvPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.50"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %"class.std::_Rb_tree"*, align 8
  %7 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple"*, align 8
  %10 = alloca %"class.std::tuple.50"*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %6, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple"* %3, %"class.std::tuple"** %9, align 8
  store %"class.std::tuple.50"* %4, %"class.std::tuple.50"** %10, align 8
  %13 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
  %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  %15 = bitcast %"struct.std::_Rb_tree_node"* %14 to i8*
  %16 = bitcast i8* %15 to %"struct.std::_Rb_tree_node"*
  %17 = call dereferenceable(1) %"class.std::allocator.18"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %13) #3
  %18 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  %19 = invoke %"struct.std::pair.44"* @_ZNSt13_Rb_tree_nodeISt4pairIKxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %18)
          to label %20 unwind label %28

; <label>:20:                                     ; preds = %5
  %21 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %22 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %21) #3
  %23 = load %"class.std::tuple"*, %"class.std::tuple"** %9, align 8
  %24 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple"* dereferenceable(8) %23) #3
  %25 = load %"class.std::tuple.50"*, %"class.std::tuple.50"** %10, align 8
  %26 = call dereferenceable(1) %"class.std::tuple.50"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.50"* dereferenceable(1) %25) #3
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESB_IJEEEEEvRS5_PT_DpOT0_(%"class.std::allocator.18"* dereferenceable(1) %17, %"struct.std::pair.44"* %19, %"struct.std::piecewise_construct_t"* dereferenceable(1) %22, %"class.std::tuple"* dereferenceable(8) %24, %"class.std::tuple.50"* dereferenceable(1) %26)
          to label %27 unwind label %28

; <label>:27:                                     ; preds = %20
  br label %42

; <label>:28:                                     ; preds = %20, %5
  %29 = landingpad { i8*, i32 }
          catch i8* null
  %30 = extractvalue { i8*, i32 } %29, 0
  store i8* %30, i8** %11, align 8
  %31 = extractvalue { i8*, i32 } %29, 1
  store i32 %31, i32* %12, align 4
  br label %32

; <label>:32:                                     ; preds = %28
  %33 = load i8*, i8** %11, align 8
  %34 = call i8* @__cxa_begin_catch(i8* %33) #3
  %35 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  %36 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree"* %13, %"struct.std::_Rb_tree_node"* %36) #3
  invoke void @__cxa_rethrow() #15
          to label %92 unwind label %37

; <label>:37:                                     ; preds = %32
  %38 = landingpad { i8*, i32 }
          cleanup
  %39 = extractvalue { i8*, i32 } %38, 0
  store i8* %39, i8** %11, align 8
  %40 = extractvalue { i8*, i32 } %38, 1
  store i32 %40, i32* %12, align 4
  invoke void @__cxa_end_catch()
          to label %41 unwind label %89

; <label>:41:                                     ; preds = %37
  br label %43

; <label>:42:                                     ; preds = %27
  ret void

; <label>:43:                                     ; preds = %41
  %44 = load i32, i32* @x.701
  %45 = load i32, i32* @y.702
  %46 = add i32 %44, 383476330
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 383476330
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  br i1 %68, label %70, label %93

; <label>:70:                                     ; preds = %43, %93
  %71 = load i8*, i8** %11, align 8
  %72 = load i32, i32* %12, align 4
  %73 = insertvalue { i8*, i32 } undef, i8* %71, 0
  %74 = insertvalue { i8*, i32 } %73, i32 %72, 1
  %75 = load i32, i32* @x.701
  %76 = load i32, i32* @y.702
  %77 = sub i32 0, 1
  %78 = add i32 %75, %77
  %79 = sub i32 %75, 1
  %80 = mul i32 %75, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %76, 10
  %84 = and i1 %82, %83
  %85 = xor i1 %82, %83
  %86 = or i1 %84, %85
  %87 = or i1 %82, %83
  br i1 %86, label %88, label %93

; <label>:88:                                     ; preds = %70
  resume { i8*, i32 } %74

; <label>:89:                                     ; preds = %37
  %90 = landingpad { i8*, i32 }
          catch i8* null
  %91 = extractvalue { i8*, i32 } %90, 0
  call void @__clang_call_terminate(i8* %91) #12
  unreachable

; <label>:92:                                     ; preds = %32
  unreachable

; <label>:93:                                     ; preds = %70, %43
  %94 = load i8*, i8** %11, align 8
  %95 = load i32, i32* %12, align 4
  %96 = insertvalue { i8*, i32 } undef, i8* %94, 0
  %97 = insertvalue { i8*, i32 } %96, i32 %95, 1
  br label %70
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE8allocateERS5_m(%"class.std::allocator.18"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.18"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.18"* %0, %"class.std::allocator.18"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %3, align 8
  %6 = bitcast %"class.std::allocator.18"* %5 to %"class.__gnu_cxx::new_allocator.19"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.std::_Rb_tree_node"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.19"* %6, i64 %7, i8* null)
  ret %"struct.std::_Rb_tree_node"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.19"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.705
  %9 = load i32, i32* @y.706
  %10 = add i32 %8, 1913121535
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, 1913121535
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1090258324, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %84
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1090258324, label %22
    i32 -1503113870, label %42
    i32 -1234781674, label %66
    i32 357620458, label %69
    i32 -733097920, label %70
    i32 -680537255, label %76
  ]

; <label>:21:                                     ; preds = %19
  br label %84

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -1503113870, i32 -680537255
  store i32 %41, i32* %18
  br label %84

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.__gnu_cxx::new_allocator.19"*, align 8
  %44 = alloca i64, align 8
  store i64* %44, i64** %5
  %45 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.19"* %0, %"class.__gnu_cxx::new_allocator.19"** %43, align 8
  %46 = load volatile i64*, i64** %5
  store i64 %1, i64* %46, align 8
  store i8* %2, i8** %45, align 8
  %47 = load %"class.__gnu_cxx::new_allocator.19"*, %"class.__gnu_cxx::new_allocator.19"** %43, align 8
  %48 = load volatile i64*, i64** %5
  %49 = load i64, i64* %48, align 8
  %50 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.19"* %47) #3
  %51 = icmp ugt i64 %49, %50
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.705
  %53 = load i32, i32* @y.706
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 -1234781674, i32 -680537255
  store i32 %65, i32* %18
  br label %84

; <label>:66:                                     ; preds = %19
  %67 = load volatile i1, i1* %4
  %68 = select i1 %67, i32 357620458, i32 -733097920
  store i32 %68, i32* %18
  br label %84

; <label>:69:                                     ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #15
  unreachable

; <label>:70:                                     ; preds = %19
  %71 = load volatile i64*, i64** %5
  %72 = load i64, i64* %71, align 8
  %73 = mul i64 %72, 48
  %74 = call i8* @_Znwm(i64 %73)
  %75 = bitcast i8* %74 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %75

; <label>:76:                                     ; preds = %19
  %77 = alloca %"class.__gnu_cxx::new_allocator.19"*, align 8
  %78 = alloca i64, align 8
  %79 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.19"* %0, %"class.__gnu_cxx::new_allocator.19"** %77, align 8
  store i64 %1, i64* %78, align 8
  store i8* %2, i8** %79, align 8
  %80 = load %"class.__gnu_cxx::new_allocator.19"*, %"class.__gnu_cxx::new_allocator.19"** %77, align 8
  %81 = load i64, i64* %78, align 8
  %82 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.19"* %80) #3
  %83 = icmp ugt i64 %81, %82
  store i32 -1503113870, i32* %18
  br label %84

; <label>:84:                                     ; preds = %76, %66, %42, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.19"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.707
  %5 = load i32, i32* @y.708
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1592274435, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %47
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1592274435, label %17
    i32 -443446190, label %25
    i32 1134228520, label %43
    i32 -1210507991, label %44
  ]

; <label>:16:                                     ; preds = %14
  br label %47

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -443446190, i32 -1210507991
  store i32 %24, i32* %13
  br label %47

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator.19"*, align 8
  store %"class.__gnu_cxx::new_allocator.19"* %0, %"class.__gnu_cxx::new_allocator.19"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator.19"*, %"class.__gnu_cxx::new_allocator.19"** %26, align 8
  %28 = load i32, i32* @x.707
  %29 = load i32, i32* @y.708
  %30 = sub i32 %28, -239015537
  %31 = sub i32 %30, 1
  %32 = add i32 %31, -239015537
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 1134228520, i32 -1210507991
  store i32 %42, i32* %13
  br label %47

; <label>:43:                                     ; preds = %14
  ret i64 384307168202282325

; <label>:44:                                     ; preds = %14
  %45 = alloca %"class.__gnu_cxx::new_allocator.19"*, align 8
  store %"class.__gnu_cxx::new_allocator.19"* %0, %"class.__gnu_cxx::new_allocator.19"** %45, align 8
  %46 = load %"class.__gnu_cxx::new_allocator.19"*, %"class.__gnu_cxx::new_allocator.19"** %45, align 8
  store i32 -443446190, i32* %13
  br label %47

; <label>:47:                                     ; preds = %44, %25, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxxEEEE9constructIS3_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESB_IJEEEEEvRS5_PT_DpOT0_(%"class.std::allocator.18"* dereferenceable(1), %"struct.std::pair.44"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.50"* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca %"class.std::allocator.18"*, align 8
  %7 = alloca %"struct.std::pair.44"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple"*, align 8
  %10 = alloca %"class.std::tuple.50"*, align 8
  store %"class.std::allocator.18"* %0, %"class.std::allocator.18"** %6, align 8
  store %"struct.std::pair.44"* %1, %"struct.std::pair.44"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple"* %3, %"class.std::tuple"** %9, align 8
  store %"class.std::tuple.50"* %4, %"class.std::tuple.50"** %10, align 8
  %11 = load %"class.std::allocator.18"*, %"class.std::allocator.18"** %6, align 8
  %12 = bitcast %"class.std::allocator.18"* %11 to %"class.__gnu_cxx::new_allocator.19"*
  %13 = load %"struct.std::pair.44"*, %"struct.std::pair.44"** %7, align 8
  %14 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %15 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %14) #3
  %16 = load %"class.std::tuple"*, %"class.std::tuple"** %9, align 8
  %17 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple"* dereferenceable(8) %16) #3
  %18 = load %"class.std::tuple.50"*, %"class.std::tuple.50"** %10, align 8
  %19 = call dereferenceable(1) %"class.std::tuple.50"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.50"* dereferenceable(1) %18) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESB_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.19"* %12, %"struct.std::pair.44"* %13, %"struct.std::piecewise_construct_t"* dereferenceable(1) %15, %"class.std::tuple"* dereferenceable(8) %17, %"class.std::tuple.50"* dereferenceable(1) %19)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxxEEE9constructIS4_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESB_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.19"*, %"struct.std::pair.44"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.50"* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca %"class.__gnu_cxx::new_allocator.19"*, align 8
  %7 = alloca %"struct.std::pair.44"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple"*, align 8
  %10 = alloca %"class.std::tuple.50"*, align 8
  %11 = alloca %"struct.std::piecewise_construct_t", align 1
  %12 = alloca %"class.std::tuple", align 8
  %13 = alloca %"class.std::tuple.50", align 1
  store %"class.__gnu_cxx::new_allocator.19"* %0, %"class.__gnu_cxx::new_allocator.19"** %6, align 8
  store %"struct.std::pair.44"* %1, %"struct.std::pair.44"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple"* %3, %"class.std::tuple"** %9, align 8
  store %"class.std::tuple.50"* %4, %"class.std::tuple.50"** %10, align 8
  %14 = load %"class.__gnu_cxx::new_allocator.19"*, %"class.__gnu_cxx::new_allocator.19"** %6, align 8
  %15 = load %"struct.std::pair.44"*, %"struct.std::pair.44"** %7, align 8
  %16 = bitcast %"struct.std::pair.44"* %15 to i8*
  %17 = bitcast i8* %16 to %"struct.std::pair.44"*
  %18 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %19 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %18) #3
  %20 = load %"class.std::tuple"*, %"class.std::tuple"** %9, align 8
  %21 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple"* dereferenceable(8) %20) #3
  call void @_ZNSt5tupleIJRKxEEC2EOS2_(%"class.std::tuple"* %12, %"class.std::tuple"* dereferenceable(8) %21) #3
  %22 = load %"class.std::tuple.50"*, %"class.std::tuple.50"** %10, align 8
  %23 = call dereferenceable(1) %"class.std::tuple.50"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.50"* dereferenceable(1) %22) #3
  %24 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %12, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %25, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  call void @_ZNSt4pairIKxxEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE(%"struct.std::pair.44"* %17, i64* %27)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5tupleIJRKxEEC2EOS2_(%"class.std::tuple"*, %"class.std::tuple"* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::tuple"*, align 8
  %4 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %3, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %4, align 8
  %5 = load %"class.std::tuple"*, %"class.std::tuple"** %3, align 8
  %6 = bitcast %"class.std::tuple"* %5 to %"struct.std::_Tuple_impl"*
  %7 = load %"class.std::tuple"*, %"class.std::tuple"** %4, align 8
  %8 = bitcast %"class.std::tuple"* %7 to %"struct.std::_Tuple_impl"*
  call void @_ZNSt11_Tuple_implILm0EJRKxEEC2EOS2_(%"struct.std::_Tuple_impl"* %6, %"struct.std::_Tuple_impl"* dereferenceable(8) %8) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt4pairIKxxEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EES5_IJDpT0_EE(%"struct.std::pair.44"*, i64*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::piecewise_construct_t", align 1
  %4 = alloca %"class.std::tuple", align 8
  %5 = alloca %"class.std::tuple.50", align 1
  %6 = alloca %"struct.std::pair.44"*, align 8
  %7 = alloca %"struct.std::_Index_tuple", align 1
  %8 = alloca %"struct.std::_Index_tuple.52", align 1
  %9 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %4, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %9, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %10, i32 0, i32 0
  store i64* %1, i64** %11, align 8
  store %"struct.std::pair.44"* %0, %"struct.std::pair.44"** %6, align 8
  %12 = load %"struct.std::pair.44"*, %"struct.std::pair.44"** %6, align 8
  call void @_ZNSt4pairIKxxEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE(%"struct.std::pair.44"* %12, %"class.std::tuple"* dereferenceable(8) %4, %"class.std::tuple.50"* dereferenceable(1) %5)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJRKxEEC2EOS2_(%"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"* dereferenceable(8)) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.717
  %4 = load i32, i32* @y.718
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %54

; <label>:28:                                     ; preds = %2, %54
  %29 = alloca %"struct.std::_Tuple_impl"*, align 8
  %30 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %29, align 8
  store %"struct.std::_Tuple_impl"* %1, %"struct.std::_Tuple_impl"** %30, align 8
  %31 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %29, align 8
  %32 = bitcast %"struct.std::_Tuple_impl"* %31 to %"struct.std::_Head_base"*
  %33 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %30, align 8
  %34 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJRKxEE7_M_headERS2_(%"struct.std::_Tuple_impl"* dereferenceable(8) %33) #3
  %35 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %34) #3
  %36 = load i32, i32* @x.717
  %37 = load i32, i32* @y.718
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  br i1 %47, label %49, label %54

; <label>:49:                                     ; preds = %28
  invoke void @_ZNSt10_Head_baseILm0ERKxLb0EEC2ES1_(%"struct.std::_Head_base"* %32, i64* dereferenceable(8) %35)
          to label %50 unwind label %51

; <label>:50:                                     ; preds = %49
  ret void

; <label>:51:                                     ; preds = %49
  %52 = landingpad { i8*, i32 }
          catch i8* null
  %53 = extractvalue { i8*, i32 } %52, 0
  call void @__clang_call_terminate(i8* %53) #12
  unreachable

; <label>:54:                                     ; preds = %28, %2
  %55 = alloca %"struct.std::_Tuple_impl"*, align 8
  %56 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %55, align 8
  store %"struct.std::_Tuple_impl"* %1, %"struct.std::_Tuple_impl"** %56, align 8
  %57 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %55, align 8
  %58 = bitcast %"struct.std::_Tuple_impl"* %57 to %"struct.std::_Head_base"*
  %59 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %56, align 8
  %60 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJRKxEE7_M_headERS2_(%"struct.std::_Tuple_impl"* dereferenceable(8) %59) #3
  %61 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %60) #3
  br label %28
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJRKxEE7_M_headERS2_(%"struct.std::_Tuple_impl"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl"* %3 to %"struct.std::_Head_base"*
  %5 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm0ERKxLb0EE7_M_headERS2_(%"struct.std::_Head_base"* dereferenceable(8) %4) #3
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm0ERKxLb0EEC2ES1_(%"struct.std::_Head_base"*, i64* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Head_base"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Head_base"* %0, %"struct.std::_Head_base"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Head_base"*, %"struct.std::_Head_base"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %5, i32 0, i32 0
  %7 = load i64*, i64** %4, align 8
  store i64* %7, i64** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt10_Head_baseILm0ERKxLb0EE7_M_headERS2_(%"struct.std::_Head_base"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Head_base"*, align 8
  store %"struct.std::_Head_base"* %0, %"struct.std::_Head_base"** %2, align 8
  %3 = load %"struct.std::_Head_base"*, %"struct.std::_Head_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIKxxEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERS4_IJDpT1_EESt12_Index_tupleIJXspT0_EEESD_IJXspT2_EEE(%"struct.std::pair.44"*, %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.50"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::_Index_tuple", align 1
  %5 = alloca %"struct.std::_Index_tuple.52", align 1
  %6 = alloca %"struct.std::pair.44"*, align 8
  %7 = alloca %"class.std::tuple"*, align 8
  %8 = alloca %"class.std::tuple.50"*, align 8
  store %"struct.std::pair.44"* %0, %"struct.std::pair.44"** %6, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %7, align 8
  store %"class.std::tuple.50"* %2, %"class.std::tuple.50"** %8, align 8
  %9 = load %"struct.std::pair.44"*, %"struct.std::pair.44"** %6, align 8
  %10 = getelementptr inbounds %"struct.std::pair.44", %"struct.std::pair.44"* %9, i32 0, i32 0
  %11 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  %12 = call dereferenceable(8) i64* @_ZSt3getILm0EJRKxEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_(%"class.std::tuple"* dereferenceable(8) %11) #3
  %13 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %12) #3
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %10, align 8
  %15 = getelementptr inbounds %"struct.std::pair.44", %"struct.std::pair.44"* %9, i32 0, i32 1
  store i64 0, i64* %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3getILm0EJRKxEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_(%"class.std::tuple"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %2, align 8
  %3 = load %"class.std::tuple"*, %"class.std::tuple"** %2, align 8
  %4 = bitcast %"class.std::tuple"* %3 to %"struct.std::_Tuple_impl"*
  %5 = call dereferenceable(8) i64* @_ZSt12__get_helperILm0ERKxJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE(%"struct.std::_Tuple_impl"* dereferenceable(8) %4) #3
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt12__get_helperILm0ERKxJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE(%"struct.std::_Tuple_impl"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %2, align 8
  %4 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJRKxEE7_M_headERS2_(%"struct.std::_Tuple_impl"* dereferenceable(8) %3) #3
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKxxEE13_M_const_castEv(%"struct.std::_Rb_tree_const_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %3 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  %4 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %4, i32 0, i32 0
  %6 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %5, align 8
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %2, %"struct.std::_Rb_tree_node_base"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %2, i32 0, i32 0
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_node_base"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE4sizeEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.733
  %6 = load i32, i32* @y.734
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1139013485, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %67
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1139013485, label %18
    i32 -1993947742, label %38
    i32 615544893, label %59
    i32 1259186231, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %67

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1993947742, i32 1259186231
  store i32 %37, i32* %14
  br label %67

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %39, align 8
  %40 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %39, align 8
  %41 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %40, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %41, i32 0, i32 2
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %2
  %44 = load i32, i32* @x.733
  %45 = load i32, i32* @y.734
  %46 = sub i32 %44, 160291407
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 160291407
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 615544893, i32 1259186231
  store i32 %58, i32* %14
  br label %67

; <label>:59:                                     ; preds = %15
  %60 = load volatile i64, i64* %2
  ret i64 %60

; <label>:61:                                     ; preds = %15
  %62 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %62, align 8
  %63 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %62, align 8
  %64 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %64, i32 0, i32 2
  %66 = load i64, i64* %65, align 8
  store i32 -1993947742, i32* %14
  br label %67

; <label>:67:                                     ; preds = %61, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %3 = alloca %"struct.std::_Select1st", align 1
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %5 = call dereferenceable(16) %"struct.std::pair.44"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %4)
  %6 = call dereferenceable(8) i64* @_ZNKSt10_Select1stISt4pairIKxxEEclERKS2_(%"struct.std::_Select1st"* %3, %"struct.std::pair.44"* dereferenceable(16) %5)
  ret i64* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE12_M_rightmostEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %5, i32 0, i32 3
  ret %"struct.std::_Rb_tree_node_base"** %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.51"*, %"struct.std::_Rb_tree_node_base"** dereferenceable(8), %"struct.std::_Rb_tree_node_base"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::pair.51"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  %6 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::pair.51"* %0, %"struct.std::pair.51"** %4, align 8
  store %"struct.std::_Rb_tree_node_base"** %1, %"struct.std::_Rb_tree_node_base"*** %5, align 8
  store %"struct.std::_Rb_tree_node_base"** %2, %"struct.std::_Rb_tree_node_base"*** %6, align 8
  %7 = load %"struct.std::pair.51"*, %"struct.std::pair.51"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %5, align 8
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  store %"struct.std::_Rb_tree_node_base"* %10, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %11 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %7, i32 0, i32 1
  %12 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %6, align 8
  %13 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %12) #3
  %14 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %13, align 8
  store %"struct.std::_Rb_tree_node_base"* %14, %"struct.std::_Rb_tree_node_base"** %11, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node"*
  %4 = alloca { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
  %5 = alloca i1
  %6 = alloca %"class.std::_Rb_tree"*
  %7 = alloca %"struct.std::pair.51", align 8
  %8 = alloca %"class.std::_Rb_tree"*, align 8
  %9 = alloca i64*, align 8
  %10 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %11 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %12 = alloca i8, align 1
  %13 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %14 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %15 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %8, align 8
  store i64* %1, i64** %9, align 8
  %16 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8, align 8
  store %"class.std::_Rb_tree"* %16, %"class.std::_Rb_tree"** %6
  %17 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %18 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_M_beginEv(%"class.std::_Rb_tree"* %17) #3
  store %"struct.std::_Rb_tree_node"* %18, %"struct.std::_Rb_tree_node"** %10, align 8
  %19 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %20 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_M_endEv(%"class.std::_Rb_tree"* %19) #3
  store %"struct.std::_Rb_tree_node"* %20, %"struct.std::_Rb_tree_node"** %11, align 8
  store i8 1, i8* %12, align 1
  %21 = alloca i32
  store i32 1123203231, i32* %21
  %22 = alloca %"struct.std::_Rb_tree_node"*
  br label %23

; <label>:23:                                     ; preds = %2, %224
  %24 = load i32, i32* %21
  switch i32 %24, label %25 [
    i32 1123203231, label %26
    i32 1037234488, label %30
    i32 152066229, label %46
    i32 -1739759810, label %85
    i32 -458247343, label %88
    i32 -908048571, label %92
    i32 708415719, label %96
    i32 294889306, label %113
    i32 -1143656775, label %142
    i32 1341358708, label %143
    i32 35399039, label %149
    i32 -1207229014, label %155
    i32 779267148, label %156
    i32 -45174888, label %158
    i32 2051545444, label %159
    i32 -997452104, label %169
    i32 54152062, label %170
    i32 164351906, label %172
    i32 -1796318805, label %188
    i32 998265157, label %205
    i32 1314706545, label %207
    i32 1843378872, label %219
    i32 -1377991470, label %221
  ]

; <label>:25:                                     ; preds = %23
  br label %224

; <label>:26:                                     ; preds = %23
  %27 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  %28 = icmp ne %"struct.std::_Rb_tree_node"* %27, null
  %29 = select i1 %28, i32 1037234488, i32 1341358708
  store i32 %29, i32* %21
  br label %224

; <label>:30:                                     ; preds = %23
  %31 = load i32, i32* @x.741
  %32 = load i32, i32* @y.742
  %33 = sub i32 %31, -1770420113
  %34 = sub i32 %33, 1
  %35 = add i32 %34, -1770420113
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 152066229, i32 1314706545
  store i32 %45, i32* %21
  br label %224

; <label>:46:                                     ; preds = %23
  %47 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  store %"struct.std::_Rb_tree_node"* %47, %"struct.std::_Rb_tree_node"** %11, align 8
  %48 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %49 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %48, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %49, i32 0, i32 0
  %51 = load i64*, i64** %9, align 8
  %52 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  %53 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E(%"struct.std::_Rb_tree_node"* %52)
  %54 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %50, i64* dereferenceable(8) %51, i64* dereferenceable(8) %53)
  %55 = zext i1 %54 to i8
  store i8 %55, i8* %12, align 1
  %56 = load i8, i8* %12, align 1
  %57 = trunc i8 %56 to i1
  store i1 %57, i1* %5
  %58 = load i32, i32* @x.741
  %59 = load i32, i32* @y.742
  %60 = sub i32 %58, -1982871745
  %61 = sub i32 %60, 1
  %62 = add i32 %61, -1982871745
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 true, true
  %71 = and i1 %68, true
  %72 = and i1 %66, %70
  %73 = and i1 %69, true
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 true, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 -1739759810, i32 1314706545
  store i32 %84, i32* %21
  br label %224

; <label>:85:                                     ; preds = %23
  %86 = load volatile i1, i1* %5
  %87 = select i1 %86, i32 -458247343, i32 -908048571
  store i32 %87, i32* %21
  br label %224

; <label>:88:                                     ; preds = %23
  %89 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  %90 = bitcast %"struct.std::_Rb_tree_node"* %89 to %"struct.std::_Rb_tree_node_base"*
  %91 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %90) #3
  store i32 708415719, i32* %21
  store %"struct.std::_Rb_tree_node"* %91, %"struct.std::_Rb_tree_node"** %22
  br label %224

; <label>:92:                                     ; preds = %23
  %93 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  %94 = bitcast %"struct.std::_Rb_tree_node"* %93 to %"struct.std::_Rb_tree_node_base"*
  %95 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %94) #3
  store i32 708415719, i32* %21
  store %"struct.std::_Rb_tree_node"* %95, %"struct.std::_Rb_tree_node"** %22
  br label %224

; <label>:96:                                     ; preds = %23
  %97 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %22
  store %"struct.std::_Rb_tree_node"* %97, %"struct.std::_Rb_tree_node"** %3
  %98 = load i32, i32* @x.741
  %99 = load i32, i32* @y.742
  %100 = add i32 %98, 57731260
  %101 = sub i32 %100, 1
  %102 = sub i32 %101, 57731260
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = and i1 %106, %107
  %109 = xor i1 %106, %107
  %110 = or i1 %108, %109
  %111 = or i1 %106, %107
  %112 = select i1 %110, i32 294889306, i32 1843378872
  store i32 %112, i32* %21
  br label %224

; <label>:113:                                    ; preds = %23
  %114 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %3
  store %"struct.std::_Rb_tree_node"* %114, %"struct.std::_Rb_tree_node"** %10, align 8
  %115 = load i32, i32* @x.741
  %116 = load i32, i32* @y.742
  %117 = sub i32 %115, 65664407
  %118 = sub i32 %117, 1
  %119 = add i32 %118, 65664407
  %120 = sub i32 %115, 1
  %121 = mul i32 %115, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %116, 10
  %125 = xor i1 %123, true
  %126 = xor i1 %124, true
  %127 = xor i1 true, true
  %128 = and i1 %125, true
  %129 = and i1 %123, %127
  %130 = and i1 %126, true
  %131 = and i1 %124, %127
  %132 = or i1 %128, %129
  %133 = or i1 %130, %131
  %134 = xor i1 %132, %133
  %135 = or i1 %125, %126
  %136 = xor i1 %135, true
  %137 = or i1 true, %127
  %138 = and i1 %136, %137
  %139 = or i1 %134, %138
  %140 = or i1 %123, %124
  %141 = select i1 %139, i32 -1143656775, i32 1843378872
  store i32 %141, i32* %21
  br label %224

; <label>:142:                                    ; preds = %23
  store i32 1123203231, i32* %21
  br label %224

; <label>:143:                                    ; preds = %23
  %144 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %11, align 8
  %145 = bitcast %"struct.std::_Rb_tree_node"* %144 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %13, %"struct.std::_Rb_tree_node_base"* %145) #3
  %146 = load i8, i8* %12, align 1
  %147 = trunc i8 %146 to i1
  %148 = select i1 %147, i32 35399039, i32 2051545444
  store i32 %148, i32* %21
  br label %224

; <label>:149:                                    ; preds = %23
  %150 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %151 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE5beginEv(%"class.std::_Rb_tree"* %150) #3
  %152 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %14, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %151, %"struct.std::_Rb_tree_node_base"** %152, align 8
  %153 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxxEEeqERKS3_(%"struct.std::_Rb_tree_iterator"* %13, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %14) #3
  %154 = select i1 %153, i32 -1207229014, i32 779267148
  store i32 %154, i32* %21
  br label %224

; <label>:155:                                    ; preds = %23
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxxEES9_vEEOT_OT0_(%"struct.std::pair.51"* %7, %"struct.std::_Rb_tree_node"** dereferenceable(8) %10, %"struct.std::_Rb_tree_node"** dereferenceable(8) %11)
  store i32 164351906, i32* %21
  br label %224

; <label>:156:                                    ; preds = %23
  %157 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEmmEv(%"struct.std::_Rb_tree_iterator"* %13) #3
  store i32 -45174888, i32* %21
  br label %224

; <label>:158:                                    ; preds = %23
  store i32 2051545444, i32* %21
  br label %224

; <label>:159:                                    ; preds = %23
  %160 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %161 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %160, i32 0, i32 0
  %162 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %161, i32 0, i32 0
  %163 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  %164 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %163, align 8
  %165 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %164)
  %166 = load i64*, i64** %9, align 8
  %167 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %162, i64* dereferenceable(8) %165, i64* dereferenceable(8) %166)
  %168 = select i1 %167, i32 -997452104, i32 54152062
  store i32 %168, i32* %21
  br label %224

; <label>:169:                                    ; preds = %23
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxxEES9_vEEOT_OT0_(%"struct.std::pair.51"* %7, %"struct.std::_Rb_tree_node"** dereferenceable(8) %10, %"struct.std::_Rb_tree_node"** dereferenceable(8) %11)
  store i32 164351906, i32* %21
  br label %224

; <label>:170:                                    ; preds = %23
  %171 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %15, align 8
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.51"* %7, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %171, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %15)
  store i32 164351906, i32* %21
  br label %224

; <label>:172:                                    ; preds = %23
  %173 = load i32, i32* @x.741
  %174 = load i32, i32* @y.742
  %175 = add i32 %173, -1311861412
  %176 = sub i32 %175, 1
  %177 = sub i32 %176, -1311861412
  %178 = sub i32 %173, 1
  %179 = mul i32 %173, %177
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %174, 10
  %183 = and i1 %181, %182
  %184 = xor i1 %181, %182
  %185 = or i1 %183, %184
  %186 = or i1 %181, %182
  %187 = select i1 %185, i32 -1796318805, i32 -1377991470
  store i32 %187, i32* %21
  br label %224

; <label>:188:                                    ; preds = %23
  %189 = bitcast %"struct.std::pair.51"* %7 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %190 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %189, align 8
  store { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %190, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %4
  %191 = load i32, i32* @x.741
  %192 = load i32, i32* @y.742
  %193 = sub i32 0, 1
  %194 = add i32 %191, %193
  %195 = sub i32 %191, 1
  %196 = mul i32 %191, %194
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %192, 10
  %200 = and i1 %198, %199
  %201 = xor i1 %198, %199
  %202 = or i1 %200, %201
  %203 = or i1 %198, %199
  %204 = select i1 %202, i32 998265157, i32 -1377991470
  store i32 %204, i32* %21
  br label %224

; <label>:205:                                    ; preds = %23
  %206 = load volatile { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %4
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %206

; <label>:207:                                    ; preds = %23
  %208 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  store %"struct.std::_Rb_tree_node"* %208, %"struct.std::_Rb_tree_node"** %11, align 8
  %209 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %210 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %209, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %210, i32 0, i32 0
  %212 = load i64*, i64** %9, align 8
  %213 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  %214 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E(%"struct.std::_Rb_tree_node"* %213)
  %215 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %211, i64* dereferenceable(8) %212, i64* dereferenceable(8) %214)
  %216 = zext i1 %215 to i8
  store i8 %216, i8* %12, align 1
  %217 = load i8, i8* %12, align 1
  %218 = trunc i8 %217 to i1
  store i32 152066229, i32* %21
  br label %224

; <label>:219:                                    ; preds = %23
  %220 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %3
  store %"struct.std::_Rb_tree_node"* %220, %"struct.std::_Rb_tree_node"** %10, align 8
  store i32 294889306, i32* %21
  br label %224

; <label>:221:                                    ; preds = %23
  %222 = bitcast %"struct.std::pair.51"* %7 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %223 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %222, align 8
  store i32 -1796318805, i32* %21
  br label %224

; <label>:224:                                    ; preds = %221, %219, %207, %188, %172, %170, %169, %159, %158, %156, %155, %149, %143, %142, %113, %96, %92, %88, %85, %46, %30, %26, %25
  br label %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE11_M_leftmostEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.743
  %6 = load i32, i32* @y.744
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -545551951, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %79
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -545551951, label %18
    i32 -326053206, label %38
    i32 542968942, label %71
    i32 -1031846359, label %73
  ]

; <label>:17:                                     ; preds = %15
  br label %79

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -326053206, i32 -1031846359
  store i32 %37, i32* %14
  br label %79

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %39, align 8
  %40 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %39, align 8
  %41 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %40, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %41, i32 0, i32 1
  %43 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %42, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"** %43, %"struct.std::_Rb_tree_node_base"*** %2
  %44 = load i32, i32* @x.743
  %45 = load i32, i32* @y.744
  %46 = sub i32 %44, -1150413652
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -1150413652
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 542968942, i32 -1031846359
  store i32 %70, i32* %14
  br label %79

; <label>:71:                                     ; preds = %15
  %72 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %2
  ret %"struct.std::_Rb_tree_node_base"** %72

; <label>:73:                                     ; preds = %15
  %74 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %74, align 8
  %75 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %74, align 8
  %76 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %75, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %76, i32 0, i32 1
  %78 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %77, i32 0, i32 2
  store i32 -326053206, i32* %14
  br label %79

; <label>:79:                                     ; preds = %73, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair.51"*, %"struct.std::_Rb_tree_node_base"** dereferenceable(8), %"struct.std::_Rb_tree_node_base"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::pair.51"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  %6 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::pair.51"* %0, %"struct.std::pair.51"** %4, align 8
  store %"struct.std::_Rb_tree_node_base"** %1, %"struct.std::_Rb_tree_node_base"*** %5, align 8
  store %"struct.std::_Rb_tree_node_base"** %2, %"struct.std::_Rb_tree_node_base"*** %6, align 8
  %7 = load %"struct.std::pair.51"*, %"struct.std::pair.51"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %5, align 8
  %10 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %9) #3
  %11 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
  store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %12 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %7, i32 0, i32 1
  %13 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %6, align 8
  %14 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %13) #3
  %15 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %14, align 8
  store %"struct.std::_Rb_tree_node_base"* %15, %"struct.std::_Rb_tree_node_base"** %12, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEmmEv(%"struct.std::_Rb_tree_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.747
  %6 = load i32, i32* @y.748
  %7 = add i32 %5, 156150019
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 156150019
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1624798961, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %84
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1624798961, label %19
    i32 -1144074997, label %39
    i32 75451415, label %75
    i32 -1086768841, label %77
  ]

; <label>:18:                                     ; preds = %16
  br label %84

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1144074997, i32 -1086768841
  store i32 %38, i32* %15
  br label %84

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %40, align 8
  %41 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %40, align 8
  store %"struct.std::_Rb_tree_iterator"* %41, %"struct.std::_Rb_tree_iterator"** %2
  %42 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2
  %43 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %42, i32 0, i32 0
  %44 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %43, align 8
  %45 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %44) #16
  %46 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2
  %47 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %46, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %45, %"struct.std::_Rb_tree_node_base"** %47, align 8
  %48 = load i32, i32* @x.747
  %49 = load i32, i32* @y.748
  %50 = sub i32 %48, -600467029
  %51 = sub i32 %50, 1
  %52 = add i32 %51, -600467029
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 75451415, i32 -1086768841
  store i32 %74, i32* %15
  br label %84

; <label>:75:                                     ; preds = %16
  %76 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2
  ret %"struct.std::_Rb_tree_iterator"* %76

; <label>:77:                                     ; preds = %16
  %78 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %78, align 8
  %79 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %78, align 8
  %80 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %79, i32 0, i32 0
  %81 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %80, align 8
  %82 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %81) #16
  %83 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %79, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %82, %"struct.std::_Rb_tree_node_base"** %83, align 8
  store i32 -1144074997, i32* %15
  br label %84

; <label>:84:                                     ; preds = %77, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEppEv(%"struct.std::_Rb_tree_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %5) #16
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.51"*, %"struct.std::_Rb_tree_node_base"** dereferenceable(8), %"struct.std::_Rb_tree_node_base"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::pair.51"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  %6 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::pair.51"* %0, %"struct.std::pair.51"** %4, align 8
  store %"struct.std::_Rb_tree_node_base"** %1, %"struct.std::_Rb_tree_node_base"*** %5, align 8
  store %"struct.std::_Rb_tree_node_base"** %2, %"struct.std::_Rb_tree_node_base"*** %6, align 8
  %7 = load %"struct.std::pair.51"*, %"struct.std::pair.51"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %5, align 8
  %10 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %9) #3
  %11 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
  store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %12 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %7, i32 0, i32 1
  %13 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %6, align 8
  %14 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %13, align 8
  store %"struct.std::_Rb_tree_node_base"* %14, %"struct.std::_Rb_tree_node_base"** %12, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair.44"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = bitcast %"struct.std::_Rb_tree_node_base"* %3 to %"struct.std::_Rb_tree_node"*
  %5 = call %"struct.std::pair.44"* @_ZNKSt13_Rb_tree_nodeISt4pairIKxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %4)
  ret %"struct.std::pair.44"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::_Rb_tree_node_base"** %0, %"struct.std::_Rb_tree_node_base"*** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %2, align 8
  ret %"struct.std::_Rb_tree_node_base"** %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxxESt10_Select1stIS2_ESt4lessIxESaIS2_EE5beginEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  %4 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, long long>, std::_Select1st<std::pair<const long long, long long> >, std::less<long long>, std::allocator<std::pair<const long long, long long> > >::_Rb_tree_impl"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %6, i32 0, i32 2
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %2, %"struct.std::_Rb_tree_node_base"* %8) #3
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %2, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  ret %"struct.std::_Rb_tree_node_base"* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxxEES9_vEEOT_OT0_(%"struct.std::pair.51"*, %"struct.std::_Rb_tree_node"** dereferenceable(8), %"struct.std::_Rb_tree_node"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.759
  %7 = load i32, i32* @y.760
  %8 = sub i32 %6, -1651188825
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1651188825
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1751748905, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %98
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1751748905, label %20
    i32 -1830104709, label %40
    i32 -1268952665, label %82
    i32 -1698570264, label %83
  ]

; <label>:19:                                     ; preds = %17
  br label %98

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1830104709, i32 -1698570264
  store i32 %39, i32* %16
  br label %98

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::pair.51"*, align 8
  %42 = alloca %"struct.std::_Rb_tree_node"**, align 8
  %43 = alloca %"struct.std::_Rb_tree_node"**, align 8
  store %"struct.std::pair.51"* %0, %"struct.std::pair.51"** %41, align 8
  store %"struct.std::_Rb_tree_node"** %1, %"struct.std::_Rb_tree_node"*** %42, align 8
  store %"struct.std::_Rb_tree_node"** %2, %"struct.std::_Rb_tree_node"*** %43, align 8
  %44 = load %"struct.std::pair.51"*, %"struct.std::pair.51"** %41, align 8
  %45 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %44, i32 0, i32 0
  %46 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %42, align 8
  %47 = call dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxxEEEOT_RNSt16remove_referenceIS7_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8) %46) #3
  %48 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %47, align 8
  %49 = bitcast %"struct.std::_Rb_tree_node"* %48 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %49, %"struct.std::_Rb_tree_node_base"** %45, align 8
  %50 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %44, i32 0, i32 1
  %51 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %43, align 8
  %52 = call dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxxEEEOT_RNSt16remove_referenceIS7_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8) %51) #3
  %53 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %52, align 8
  %54 = bitcast %"struct.std::_Rb_tree_node"* %53 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %54, %"struct.std::_Rb_tree_node_base"** %50, align 8
  %55 = load i32, i32* @x.759
  %56 = load i32, i32* @y.760
  %57 = sub i32 %55, -944095016
  %58 = sub i32 %57, 1
  %59 = add i32 %58, -944095016
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 false, true
  %68 = and i1 %65, false
  %69 = and i1 %63, %67
  %70 = and i1 %66, false
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 false, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  %81 = select i1 %79, i32 -1268952665, i32 -1698570264
  store i32 %81, i32* %16
  br label %98

; <label>:82:                                     ; preds = %17
  ret void

; <label>:83:                                     ; preds = %17
  %84 = alloca %"struct.std::pair.51"*, align 8
  %85 = alloca %"struct.std::_Rb_tree_node"**, align 8
  %86 = alloca %"struct.std::_Rb_tree_node"**, align 8
  store %"struct.std::pair.51"* %0, %"struct.std::pair.51"** %84, align 8
  store %"struct.std::_Rb_tree_node"** %1, %"struct.std::_Rb_tree_node"*** %85, align 8
  store %"struct.std::_Rb_tree_node"** %2, %"struct.std::_Rb_tree_node"*** %86, align 8
  %87 = load %"struct.std::pair.51"*, %"struct.std::pair.51"** %84, align 8
  %88 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %87, i32 0, i32 0
  %89 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %85, align 8
  %90 = call dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxxEEEOT_RNSt16remove_referenceIS7_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8) %89) #3
  %91 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %90, align 8
  %92 = bitcast %"struct.std::_Rb_tree_node"* %91 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %92, %"struct.std::_Rb_tree_node_base"** %88, align 8
  %93 = getelementptr inbounds %"struct.std::pair.51", %"struct.std::pair.51"* %87, i32 0, i32 1
  %94 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %86, align 8
  %95 = call dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxxEEEOT_RNSt16remove_referenceIS7_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8) %94) #3
  %96 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %95, align 8
  %97 = bitcast %"struct.std::_Rb_tree_node"* %96 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %97, %"struct.std::_Rb_tree_node_base"** %93, align 8
  store i32 -1830104709, i32* %16
  br label %98

; <label>:98:                                     ; preds = %83, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxxEEEOT_RNSt16remove_referenceIS7_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Rb_tree_node"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.761
  %6 = load i32, i32* @y.762
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1774973759, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1774973759, label %18
    i32 -544561269, label %26
    i32 1923877852, label %56
    i32 -720898035, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -544561269, i32 -720898035
  store i32 %25, i32* %14
  br label %61

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Rb_tree_node"**, align 8
  store %"struct.std::_Rb_tree_node"** %0, %"struct.std::_Rb_tree_node"*** %27, align 8
  %28 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %27, align 8
  store %"struct.std::_Rb_tree_node"** %28, %"struct.std::_Rb_tree_node"*** %2
  %29 = load i32, i32* @x.761
  %30 = load i32, i32* @y.762
  %31 = add i32 %29, 576076448
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, 576076448
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 1923877852, i32 -720898035
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  %57 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %2
  ret %"struct.std::_Rb_tree_node"** %57

; <label>:58:                                     ; preds = %15
  %59 = alloca %"struct.std::_Rb_tree_node"**, align 8
  store %"struct.std::_Rb_tree_node"** %0, %"struct.std::_Rb_tree_node"*** %59, align 8
  %60 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %59, align 8
  store i32 -544561269, i32* %14
  br label %61

; <label>:61:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: nounwind readonly
declare %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #13

; Function Attrs: nounwind readonly
declare %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #13

; Function Attrs: nounwind
declare void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* dereferenceable(32)) #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJRKxEEC2ES1_(%"struct.std::_Tuple_impl"*, i64* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.763
  %6 = load i32, i32* @y.764
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 276407676, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %77
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 276407676, label %18
    i32 -2144962478, label %38
    i32 55051940, label %70
    i32 932577319, label %71
  ]

; <label>:17:                                     ; preds = %15
  br label %77

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -2144962478, i32 932577319
  store i32 %37, i32* %14
  br label %77

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Tuple_impl"*, align 8
  %40 = alloca i64*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %39, align 8
  store i64* %1, i64** %40, align 8
  %41 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %39, align 8
  %42 = bitcast %"struct.std::_Tuple_impl"* %41 to %"struct.std::_Head_base"*
  %43 = load i64*, i64** %40, align 8
  call void @_ZNSt10_Head_baseILm0ERKxLb0EEC2ES1_(%"struct.std::_Head_base"* %42, i64* dereferenceable(8) %43)
  %44 = load i32, i32* @x.763
  %45 = load i32, i32* @y.764
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 55051940, i32 932577319
  store i32 %69, i32* %14
  br label %77

; <label>:70:                                     ; preds = %15
  ret void

; <label>:71:                                     ; preds = %15
  %72 = alloca %"struct.std::_Tuple_impl"*, align 8
  %73 = alloca i64*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %72, align 8
  store i64* %1, i64** %73, align 8
  %74 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %72, align 8
  %75 = bitcast %"struct.std::_Tuple_impl"* %74 to %"struct.std::_Head_base"*
  %76 = load i64*, i64** %73, align 8
  call void @_ZNSt10_Head_baseILm0ERKxLb0EEC2ES1_(%"struct.std::_Head_base"* %75, i64* dereferenceable(8) %76)
  store i32 -2144962478, i32* %14
  br label %77

; <label>:77:                                     ; preds = %71, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt6vectorIxSaIxEE6insertEN9__gnu_cxx17__normal_iteratorIPKxS1_EEmRS4_(%"class.std::vector.0"*, i64*, i64, i64* dereferenceable(8)) #0 comdat align 2 {
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.765
  %9 = load i32, i32* @y.766
  %10 = add i32 %8, 2095154006
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, 2095154006
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1185865987, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %135
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1185865987, label %22
    i32 -1381325509, label %42
    i32 -1046587337, label %101
    i32 2140048514, label %103
  ]

; <label>:21:                                     ; preds = %19
  br label %135

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -1381325509, i32 2140048514
  store i32 %41, i32* %18
  br label %135

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %45 = alloca %"class.std::vector.0"*, align 8
  %46 = alloca i64, align 8
  %47 = alloca i64*, align 8
  %48 = alloca i64, align 8
  %49 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %50 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %51 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %52 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %44, i32 0, i32 0
  store i64* %1, i64** %53, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %45, align 8
  store i64 %2, i64* %46, align 8
  store i64* %3, i64** %47, align 8
  %54 = load %"class.std::vector.0"*, %"class.std::vector.0"** %45, align 8
  %55 = call i64* @_ZNKSt6vectorIxSaIxEE6cbeginEv(%"class.std::vector.0"* %54) #3
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %49, i32 0, i32 0
  store i64* %55, i64** %56, align 8
  %57 = call i64 @_ZN9__gnu_cxxmiIPKxSt6vectorIxSaIxEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator.46"* dereferenceable(8) %44, %"class.__gnu_cxx::__normal_iterator.46"* dereferenceable(8) %49) #3
  store i64 %57, i64* %48, align 8
  %58 = call i64* @_ZNSt6vectorIxSaIxEE5beginEv(%"class.std::vector.0"* %54) #3
  %59 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %51, i32 0, i32 0
  store i64* %58, i64** %59, align 8
  %60 = load i64, i64* %48, align 8
  %61 = call i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl(%"class.__gnu_cxx::__normal_iterator.38"* %51, i64 %60) #3
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %50, i32 0, i32 0
  store i64* %61, i64** %62, align 8
  %63 = load i64, i64* %46, align 8
  %64 = load i64*, i64** %47, align 8
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %50, i32 0, i32 0
  %66 = load i64*, i64** %65, align 8
  call void @_ZNSt6vectorIxSaIxEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPxS1_EEmRKx(%"class.std::vector.0"* %54, i64* %66, i64 %63, i64* dereferenceable(8) %64)
  %67 = call i64* @_ZNSt6vectorIxSaIxEE5beginEv(%"class.std::vector.0"* %54) #3
  %68 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %52, i32 0, i32 0
  store i64* %67, i64** %68, align 8
  %69 = load i64, i64* %48, align 8
  %70 = call i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl(%"class.__gnu_cxx::__normal_iterator.38"* %52, i64 %69) #3
  %71 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %43, i32 0, i32 0
  store i64* %70, i64** %71, align 8
  %72 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %43, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  store i64* %73, i64** %5
  %74 = load i32, i32* @x.765
  %75 = load i32, i32* @y.766
  %76 = sub i32 %74, -750873615
  %77 = sub i32 %76, 1
  %78 = add i32 %77, -750873615
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = xor i1 %82, true
  %85 = xor i1 %83, true
  %86 = xor i1 true, true
  %87 = and i1 %84, true
  %88 = and i1 %82, %86
  %89 = and i1 %85, true
  %90 = and i1 %83, %86
  %91 = or i1 %87, %88
  %92 = or i1 %89, %90
  %93 = xor i1 %91, %92
  %94 = or i1 %84, %85
  %95 = xor i1 %94, true
  %96 = or i1 true, %86
  %97 = and i1 %95, %96
  %98 = or i1 %93, %97
  %99 = or i1 %82, %83
  %100 = select i1 %98, i32 -1046587337, i32 2140048514
  store i32 %100, i32* %18
  br label %135

; <label>:101:                                    ; preds = %19
  %102 = load volatile i64*, i64** %5
  ret i64* %102

; <label>:103:                                    ; preds = %19
  %104 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %105 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %106 = alloca %"class.std::vector.0"*, align 8
  %107 = alloca i64, align 8
  %108 = alloca i64*, align 8
  %109 = alloca i64, align 8
  %110 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %111 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %112 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %113 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %114 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %105, i32 0, i32 0
  store i64* %1, i64** %114, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %106, align 8
  store i64 %2, i64* %107, align 8
  store i64* %3, i64** %108, align 8
  %115 = load %"class.std::vector.0"*, %"class.std::vector.0"** %106, align 8
  %116 = call i64* @_ZNKSt6vectorIxSaIxEE6cbeginEv(%"class.std::vector.0"* %115) #3
  %117 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %110, i32 0, i32 0
  store i64* %116, i64** %117, align 8
  %118 = call i64 @_ZN9__gnu_cxxmiIPKxSt6vectorIxSaIxEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator.46"* dereferenceable(8) %105, %"class.__gnu_cxx::__normal_iterator.46"* dereferenceable(8) %110) #3
  store i64 %118, i64* %109, align 8
  %119 = call i64* @_ZNSt6vectorIxSaIxEE5beginEv(%"class.std::vector.0"* %115) #3
  %120 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %112, i32 0, i32 0
  store i64* %119, i64** %120, align 8
  %121 = load i64, i64* %109, align 8
  %122 = call i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl(%"class.__gnu_cxx::__normal_iterator.38"* %112, i64 %121) #3
  %123 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %111, i32 0, i32 0
  store i64* %122, i64** %123, align 8
  %124 = load i64, i64* %107, align 8
  %125 = load i64*, i64** %108, align 8
  %126 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %111, i32 0, i32 0
  %127 = load i64*, i64** %126, align 8
  call void @_ZNSt6vectorIxSaIxEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPxS1_EEmRKx(%"class.std::vector.0"* %115, i64* %127, i64 %124, i64* dereferenceable(8) %125)
  %128 = call i64* @_ZNSt6vectorIxSaIxEE5beginEv(%"class.std::vector.0"* %115) #3
  %129 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %113, i32 0, i32 0
  store i64* %128, i64** %129, align 8
  %130 = load i64, i64* %109, align 8
  %131 = call i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl(%"class.__gnu_cxx::__normal_iterator.38"* %113, i64 %130) #3
  %132 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %104, i32 0, i32 0
  store i64* %131, i64** %132, align 8
  %133 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %104, i32 0, i32 0
  %134 = load i64*, i64** %133, align 8
  store i32 -1381325509, i32* %18
  br label %135

; <label>:135:                                    ; preds = %103, %42, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2IPxEERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameIS9_S8_EE7__valueES5_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.46"*, %"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.46"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.38"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.46"* %0, %"class.__gnu_cxx::__normal_iterator.46"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %1, %"class.__gnu_cxx::__normal_iterator.38"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.46"*, %"class.__gnu_cxx::__normal_iterator.46"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %5, i32 0, i32 0
  %7 = load %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %4, align 8
  %8 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.38"* %7) #3
  %9 = load i64*, i64** %8, align 8
  store i64* %9, i64** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE15_M_erase_at_endEPx(%"class.std::vector.0"*, i64*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = load i64*, i64** %4, align 8
  %7 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %8, i32 0, i32 1
  %10 = load i64*, i64** %9, align 8
  %11 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %12 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %11) #3
  invoke void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %6, i64* %10, %"class.std::allocator.2"* dereferenceable(1) %12)
          to label %13 unwind label %60

; <label>:13:                                     ; preds = %2
  %14 = load i32, i32* @x.769
  %15 = load i32, i32* @y.770
  %16 = add i32 %14, 1024184738
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, 1024184738
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  br i1 %26, label %28, label %63

; <label>:28:                                     ; preds = %13, %63
  %29 = load i64*, i64** %4, align 8
  %30 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %31, i32 0, i32 1
  store i64* %29, i64** %32, align 8
  %33 = load i32, i32* @x.769
  %34 = load i32, i32* @y.770
  %35 = sub i32 %33, -1311465895
  %36 = sub i32 %35, 1
  %37 = add i32 %36, -1311465895
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %63

; <label>:59:                                     ; preds = %28
  ret void

; <label>:60:                                     ; preds = %2
  %61 = landingpad { i8*, i32 }
          catch i8* null
  %62 = extractvalue { i8*, i32 } %61, 0
  call void @__clang_call_terminate(i8* %62) #12
  unreachable

; <label>:63:                                     ; preds = %28, %13
  %64 = load i64*, i64** %4, align 8
  %65 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %66 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %65, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %66, i32 0, i32 1
  store i64* %64, i64** %67, align 8
  br label %28
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPKxSt6vectorIxSaIxEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator.46"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.46"* dereferenceable(8)) #4 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.46"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.46"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.46"* %0, %"class.__gnu_cxx::__normal_iterator.46"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.46"* %1, %"class.__gnu_cxx::__normal_iterator.46"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.46"*, %"class.__gnu_cxx::__normal_iterator.46"** %3, align 8
  %6 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.46"* %5) #3
  %7 = load i64*, i64** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.46"*, %"class.__gnu_cxx::__normal_iterator.46"** %4, align 8
  %9 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.46"* %8) #3
  %10 = load i64*, i64** %9, align 8
  %11 = ptrtoint i64* %7 to i64
  %12 = ptrtoint i64* %10 to i64
  %13 = add i64 %11, -6228007351862154356
  %14 = sub i64 %13, %12
  %15 = sub i64 %14, -6228007351862154356
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 8
  ret i64 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt6vectorIxSaIxEE6cbeginEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.46", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  store i64* %9, i64** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.46"* %2, i64** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.46", %"class.__gnu_cxx::__normal_iterator.46"* %2, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  ret i64* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPxS1_EEmRKx(%"class.std::vector.0"*, i64*, i64, i64* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.775
  %6 = load i32, i32* @y.776
  %7 = sub i32 %5, -1721655284
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1721655284
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %6, 10
  %15 = and i1 %13, %14
  %16 = xor i1 %13, %14
  %17 = or i1 %15, %16
  %18 = or i1 %13, %14
  br i1 %17, label %19, label %739

; <label>:19:                                     ; preds = %4, %739
  %20 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %21 = alloca %"class.std::vector.0"*, align 8
  %22 = alloca i64, align 8
  %23 = alloca i64*, align 8
  %24 = alloca i64, align 8
  %25 = alloca i64, align 8
  %26 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %27 = alloca i64*, align 8
  %28 = alloca i64, align 8
  %29 = alloca i64, align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %31 = alloca i64*, align 8
  %32 = alloca i64*, align 8
  %33 = alloca i8*
  %34 = alloca i32
  %35 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %20, i32 0, i32 0
  store i64* %1, i64** %35, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %21, align 8
  store i64 %2, i64* %22, align 8
  store i64* %3, i64** %23, align 8
  %36 = load %"class.std::vector.0"*, %"class.std::vector.0"** %21, align 8
  %37 = load i64, i64* %22, align 8
  %38 = icmp ne i64 %37, 0
  %39 = load i32, i32* @x.775
  %40 = load i32, i32* @y.776
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %739

; <label>:52:                                     ; preds = %19
  br i1 %38, label %53, label %647

; <label>:53:                                     ; preds = %52
  %54 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %55 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %54, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %55, i32 0, i32 2
  %57 = load i64*, i64** %56, align 8
  %58 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %59 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %58, i32 0, i32 0
  %60 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %59, i32 0, i32 1
  %61 = load i64*, i64** %60, align 8
  %62 = ptrtoint i64* %57 to i64
  %63 = ptrtoint i64* %61 to i64
  %64 = sub i64 0, %63
  %65 = add i64 %62, %64
  %66 = sub i64 %62, %63
  %67 = sdiv exact i64 %65, 8
  %68 = load i64, i64* %22, align 8
  %69 = icmp uge i64 %67, %68
  br i1 %69, label %70, label %301

; <label>:70:                                     ; preds = %53
  %71 = load i32, i32* @x.775
  %72 = load i32, i32* @y.776
  %73 = add i32 %71, -1419223604
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, -1419223604
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  br i1 %83, label %85, label %759

; <label>:85:                                     ; preds = %70, %759
  %86 = load i64*, i64** %23, align 8
  %87 = load i64, i64* %86, align 8
  store i64 %87, i64* %24, align 8
  %88 = call i64* @_ZNSt6vectorIxSaIxEE3endEv(%"class.std::vector.0"* %36) #3
  %89 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %26, i32 0, i32 0
  store i64* %88, i64** %89, align 8
  %90 = call i64 @_ZN9__gnu_cxxmiIPxSt6vectorIxSaIxEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %26, %"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %20) #3
  store i64 %90, i64* %25, align 8
  %91 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %92 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %91, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %92, i32 0, i32 1
  %94 = load i64*, i64** %93, align 8
  store i64* %94, i64** %27, align 8
  %95 = load i64, i64* %25, align 8
  %96 = load i64, i64* %22, align 8
  %97 = icmp ugt i64 %95, %96
  %98 = load i32, i32* @x.775
  %99 = load i32, i32* @y.776
  %100 = add i32 %98, 386447692
  %101 = sub i32 %100, 1
  %102 = sub i32 %101, 386447692
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = xor i1 %106, true
  %109 = xor i1 %107, true
  %110 = xor i1 true, true
  %111 = and i1 %108, true
  %112 = and i1 %106, %110
  %113 = and i1 %109, true
  %114 = and i1 %107, %110
  %115 = or i1 %111, %112
  %116 = or i1 %113, %114
  %117 = xor i1 %115, %116
  %118 = or i1 %108, %109
  %119 = xor i1 %118, true
  %120 = or i1 true, %110
  %121 = and i1 %119, %120
  %122 = or i1 %117, %121
  %123 = or i1 %106, %107
  br i1 %122, label %124, label %759

; <label>:124:                                    ; preds = %85
  br i1 %97, label %125, label %223

; <label>:125:                                    ; preds = %124
  %126 = load i32, i32* @x.775
  %127 = load i32, i32* @y.776
  %128 = sub i32 %126, 1834784307
  %129 = sub i32 %128, 1
  %130 = add i32 %129, 1834784307
  %131 = sub i32 %126, 1
  %132 = mul i32 %126, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %127, 10
  %136 = xor i1 %134, true
  %137 = xor i1 %135, true
  %138 = xor i1 false, true
  %139 = and i1 %136, false
  %140 = and i1 %134, %138
  %141 = and i1 %137, false
  %142 = and i1 %135, %138
  %143 = or i1 %139, %140
  %144 = or i1 %141, %142
  %145 = xor i1 %143, %144
  %146 = or i1 %136, %137
  %147 = xor i1 %146, true
  %148 = or i1 false, %138
  %149 = and i1 %147, %148
  %150 = or i1 %145, %149
  %151 = or i1 %134, %135
  br i1 %150, label %152, label %772

; <label>:152:                                    ; preds = %125, %772
  %153 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %154 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %153, i32 0, i32 0
  %155 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %154, i32 0, i32 1
  %156 = load i64*, i64** %155, align 8
  %157 = load i64, i64* %22, align 8
  %158 = sub i64 0, %157
  %159 = add i64 0, %158
  %160 = sub i64 0, %157
  %161 = getelementptr inbounds i64, i64* %156, i64 %159
  %162 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %163 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %162, i32 0, i32 0
  %164 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %163, i32 0, i32 1
  %165 = load i64*, i64** %164, align 8
  %166 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %167 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %166, i32 0, i32 0
  %168 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %167, i32 0, i32 1
  %169 = load i64*, i64** %168, align 8
  %170 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %171 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %170) #3
  %172 = call i64* @_ZSt22__uninitialized_move_aIPxS0_SaIxEET0_T_S3_S2_RT1_(i64* %161, i64* %165, i64* %169, %"class.std::allocator.2"* dereferenceable(1) %171)
  %173 = load i64, i64* %22, align 8
  %174 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %175 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %174, i32 0, i32 0
  %176 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %175, i32 0, i32 1
  %177 = load i64*, i64** %176, align 8
  %178 = getelementptr inbounds i64, i64* %177, i64 %173
  store i64* %178, i64** %176, align 8
  %179 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.38"* %20) #3
  %180 = load i64*, i64** %179, align 8
  %181 = load i64*, i64** %27, align 8
  %182 = load i64, i64* %22, align 8
  %183 = sub i64 0, -9046561367755968998
  %184 = sub i64 %183, %182
  %185 = add i64 %184, -9046561367755968998
  %186 = sub i64 0, %182
  %187 = getelementptr inbounds i64, i64* %181, i64 %185
  %188 = load i64*, i64** %27, align 8
  %189 = call i64* @_ZSt13move_backwardIPxS0_ET0_T_S2_S1_(i64* %180, i64* %187, i64* %188)
  %190 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.38"* %20) #3
  %191 = load i64*, i64** %190, align 8
  %192 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.38"* %20) #3
  %193 = load i64*, i64** %192, align 8
  %194 = load i64, i64* %22, align 8
  %195 = getelementptr inbounds i64, i64* %193, i64 %194
  call void @_ZSt4fillIPxxEvT_S1_RKT0_(i64* %191, i64* %195, i64* dereferenceable(8) %24)
  %196 = load i32, i32* @x.775
  %197 = load i32, i32* @y.776
  %198 = add i32 %196, -1569656066
  %199 = sub i32 %198, 1
  %200 = sub i32 %199, -1569656066
  %201 = sub i32 %196, 1
  %202 = mul i32 %196, %200
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %197, 10
  %206 = xor i1 %204, true
  %207 = xor i1 %205, true
  %208 = xor i1 false, true
  %209 = and i1 %206, false
  %210 = and i1 %204, %208
  %211 = and i1 %207, false
  %212 = and i1 %205, %208
  %213 = or i1 %209, %210
  %214 = or i1 %211, %212
  %215 = xor i1 %213, %214
  %216 = or i1 %206, %207
  %217 = xor i1 %216, true
  %218 = or i1 false, %208
  %219 = and i1 %217, %218
  %220 = or i1 %215, %219
  %221 = or i1 %204, %205
  br i1 %220, label %222, label %772

; <label>:222:                                    ; preds = %152
  br label %300

; <label>:223:                                    ; preds = %124
  %224 = load i32, i32* @x.775
  %225 = load i32, i32* @y.776
  %226 = sub i32 %224, -1685220
  %227 = sub i32 %226, 1
  %228 = add i32 %227, -1685220
  %229 = sub i32 %224, 1
  %230 = mul i32 %224, %228
  %231 = urem i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %225, 10
  %234 = and i1 %232, %233
  %235 = xor i1 %232, %233
  %236 = or i1 %234, %235
  %237 = or i1 %232, %233
  br i1 %236, label %238, label %875

; <label>:238:                                    ; preds = %223, %875
  %239 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %240 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %239, i32 0, i32 0
  %241 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %240, i32 0, i32 1
  %242 = load i64*, i64** %241, align 8
  %243 = load i64, i64* %22, align 8
  %244 = load i64, i64* %25, align 8
  %245 = sub i64 0, %244
  %246 = add i64 %243, %245
  %247 = sub i64 %243, %244
  %248 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %249 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %248) #3
  %250 = call i64* @_ZSt24__uninitialized_fill_n_aIPxmxxET_S1_T0_RKT1_RSaIT2_E(i64* %242, i64 %246, i64* dereferenceable(8) %24, %"class.std::allocator.2"* dereferenceable(1) %249)
  %251 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %252 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %251, i32 0, i32 0
  %253 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %252, i32 0, i32 1
  store i64* %250, i64** %253, align 8
  %254 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.38"* %20) #3
  %255 = load i64*, i64** %254, align 8
  %256 = load i64*, i64** %27, align 8
  %257 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %258 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %257, i32 0, i32 0
  %259 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %258, i32 0, i32 1
  %260 = load i64*, i64** %259, align 8
  %261 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %262 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %261) #3
  %263 = call i64* @_ZSt22__uninitialized_move_aIPxS0_SaIxEET0_T_S3_S2_RT1_(i64* %255, i64* %256, i64* %260, %"class.std::allocator.2"* dereferenceable(1) %262)
  %264 = load i64, i64* %25, align 8
  %265 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %266 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %265, i32 0, i32 0
  %267 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %266, i32 0, i32 1
  %268 = load i64*, i64** %267, align 8
  %269 = getelementptr inbounds i64, i64* %268, i64 %264
  store i64* %269, i64** %267, align 8
  %270 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.38"* %20) #3
  %271 = load i64*, i64** %270, align 8
  %272 = load i64*, i64** %27, align 8
  call void @_ZSt4fillIPxxEvT_S1_RKT0_(i64* %271, i64* %272, i64* dereferenceable(8) %24)
  %273 = load i32, i32* @x.775
  %274 = load i32, i32* @y.776
  %275 = add i32 %273, -130669033
  %276 = sub i32 %275, 1
  %277 = sub i32 %276, -130669033
  %278 = sub i32 %273, 1
  %279 = mul i32 %273, %277
  %280 = urem i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %274, 10
  %283 = xor i1 %281, true
  %284 = xor i1 %282, true
  %285 = xor i1 true, true
  %286 = and i1 %283, true
  %287 = and i1 %281, %285
  %288 = and i1 %284, true
  %289 = and i1 %282, %285
  %290 = or i1 %286, %287
  %291 = or i1 %288, %289
  %292 = xor i1 %290, %291
  %293 = or i1 %283, %284
  %294 = xor i1 %293, true
  %295 = or i1 true, %285
  %296 = and i1 %294, %295
  %297 = or i1 %292, %296
  %298 = or i1 %281, %282
  br i1 %297, label %299, label %875

; <label>:299:                                    ; preds = %238
  br label %300

; <label>:300:                                    ; preds = %299, %222
  br label %592

; <label>:301:                                    ; preds = %53
  %302 = load i64, i64* %22, align 8
  %303 = call i64 @_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc(%"class.std::vector.0"* %36, i64 %302, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i32 0, i32 0))
  store i64 %303, i64* %28, align 8
  %304 = call i64* @_ZNSt6vectorIxSaIxEE5beginEv(%"class.std::vector.0"* %36) #3
  %305 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %30, i32 0, i32 0
  store i64* %304, i64** %305, align 8
  %306 = call i64 @_ZN9__gnu_cxxmiIPxSt6vectorIxSaIxEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %20, %"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %30) #3
  store i64 %306, i64* %29, align 8
  %307 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %308 = load i64, i64* %28, align 8
  %309 = call i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base.1"* %307, i64 %308)
  store i64* %309, i64** %31, align 8
  %310 = load i64*, i64** %31, align 8
  store i64* %310, i64** %32, align 8
  %311 = load i64*, i64** %31, align 8
  %312 = load i64, i64* %29, align 8
  %313 = getelementptr inbounds i64, i64* %311, i64 %312
  %314 = load i64, i64* %22, align 8
  %315 = load i64*, i64** %23, align 8
  %316 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %317 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %316) #3
  %318 = invoke i64* @_ZSt24__uninitialized_fill_n_aIPxmxxET_S1_T0_RKT1_RSaIT2_E(i64* %313, i64 %314, i64* dereferenceable(8) %315, %"class.std::allocator.2"* dereferenceable(1) %317)
          to label %319 unwind label %373

; <label>:319:                                    ; preds = %301
  %320 = load i32, i32* @x.775
  %321 = load i32, i32* @y.776
  %322 = sub i32 0, 1
  %323 = add i32 %320, %322
  %324 = sub i32 %320, 1
  %325 = mul i32 %320, %323
  %326 = urem i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %321, 10
  %329 = and i1 %327, %328
  %330 = xor i1 %327, %328
  %331 = or i1 %329, %330
  %332 = or i1 %327, %328
  br i1 %331, label %333, label %933

; <label>:333:                                    ; preds = %319, %933
  store i64* null, i64** %32, align 8
  %334 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %335 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %334, i32 0, i32 0
  %336 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %335, i32 0, i32 0
  %337 = load i64*, i64** %336, align 8
  %338 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.38"* %20) #3
  %339 = load i64*, i64** %338, align 8
  %340 = load i64*, i64** %31, align 8
  %341 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %342 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %341) #3
  %343 = load i32, i32* @x.775
  %344 = load i32, i32* @y.776
  %345 = sub i32 0, 1
  %346 = add i32 %343, %345
  %347 = sub i32 %343, 1
  %348 = mul i32 %343, %346
  %349 = urem i32 %348, 2
  %350 = icmp eq i32 %349, 0
  %351 = icmp slt i32 %344, 10
  %352 = and i1 %350, %351
  %353 = xor i1 %350, %351
  %354 = or i1 %352, %353
  %355 = or i1 %350, %351
  br i1 %354, label %356, label %933

; <label>:356:                                    ; preds = %333
  %357 = invoke i64* @_ZSt34__uninitialized_move_if_noexcept_aIPxS0_SaIxEET0_T_S3_S2_RT1_(i64* %337, i64* %339, i64* %340, %"class.std::allocator.2"* dereferenceable(1) %342)
          to label %358 unwind label %373

; <label>:358:                                    ; preds = %356
  store i64* %357, i64** %32, align 8
  %359 = load i64, i64* %22, align 8
  %360 = load i64*, i64** %32, align 8
  %361 = getelementptr inbounds i64, i64* %360, i64 %359
  store i64* %361, i64** %32, align 8
  %362 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.38"* %20) #3
  %363 = load i64*, i64** %362, align 8
  %364 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %365 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %364, i32 0, i32 0
  %366 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %365, i32 0, i32 1
  %367 = load i64*, i64** %366, align 8
  %368 = load i64*, i64** %32, align 8
  %369 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %370 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %369) #3
  %371 = invoke i64* @_ZSt34__uninitialized_move_if_noexcept_aIPxS0_SaIxEET0_T_S3_S2_RT1_(i64* %363, i64* %367, i64* %368, %"class.std::allocator.2"* dereferenceable(1) %370)
          to label %372 unwind label %373

; <label>:372:                                    ; preds = %358
  store i64* %371, i64** %32, align 8
  br label %505

; <label>:373:                                    ; preds = %358, %356, %301
  %374 = landingpad { i8*, i32 }
          catch i8* null
  %375 = extractvalue { i8*, i32 } %374, 0
  store i8* %375, i8** %33, align 8
  %376 = extractvalue { i8*, i32 } %374, 1
  store i32 %376, i32* %34, align 4
  br label %377

; <label>:377:                                    ; preds = %373
  %378 = load i8*, i8** %33, align 8
  %379 = call i8* @__cxa_begin_catch(i8* %378) #3
  %380 = load i64*, i64** %32, align 8
  %381 = icmp ne i64* %380, null
  br i1 %381, label %452, label %382

; <label>:382:                                    ; preds = %377
  %383 = load i32, i32* @x.775
  %384 = load i32, i32* @y.776
  %385 = add i32 %383, 163722152
  %386 = sub i32 %385, 1
  %387 = sub i32 %386, 163722152
  %388 = sub i32 %383, 1
  %389 = mul i32 %383, %387
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %384, 10
  %393 = xor i1 %391, true
  %394 = xor i1 %392, true
  %395 = xor i1 true, true
  %396 = and i1 %393, true
  %397 = and i1 %391, %395
  %398 = and i1 %394, true
  %399 = and i1 %392, %395
  %400 = or i1 %396, %397
  %401 = or i1 %398, %399
  %402 = xor i1 %400, %401
  %403 = or i1 %393, %394
  %404 = xor i1 %403, true
  %405 = or i1 true, %395
  %406 = and i1 %404, %405
  %407 = or i1 %402, %406
  %408 = or i1 %391, %392
  br i1 %407, label %409, label %943

; <label>:409:                                    ; preds = %382, %943
  %410 = load i64*, i64** %31, align 8
  %411 = load i64, i64* %29, align 8
  %412 = getelementptr inbounds i64, i64* %410, i64 %411
  %413 = load i64*, i64** %31, align 8
  %414 = load i64, i64* %29, align 8
  %415 = getelementptr inbounds i64, i64* %413, i64 %414
  %416 = load i64, i64* %22, align 8
  %417 = getelementptr inbounds i64, i64* %415, i64 %416
  %418 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %419 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %418) #3
  %420 = load i32, i32* @x.775
  %421 = load i32, i32* @y.776
  %422 = add i32 %420, 668776090
  %423 = sub i32 %422, 1
  %424 = sub i32 %423, 668776090
  %425 = sub i32 %420, 1
  %426 = mul i32 %420, %424
  %427 = urem i32 %426, 2
  %428 = icmp eq i32 %427, 0
  %429 = icmp slt i32 %421, 10
  %430 = xor i1 %428, true
  %431 = xor i1 %429, true
  %432 = xor i1 false, true
  %433 = and i1 %430, false
  %434 = and i1 %428, %432
  %435 = and i1 %431, false
  %436 = and i1 %429, %432
  %437 = or i1 %433, %434
  %438 = or i1 %435, %436
  %439 = xor i1 %437, %438
  %440 = or i1 %430, %431
  %441 = xor i1 %440, true
  %442 = or i1 false, %432
  %443 = and i1 %441, %442
  %444 = or i1 %439, %443
  %445 = or i1 %428, %429
  br i1 %444, label %446, label %943

; <label>:446:                                    ; preds = %409
  invoke void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %412, i64* %417, %"class.std::allocator.2"* dereferenceable(1) %419)
          to label %447 unwind label %448

; <label>:447:                                    ; preds = %446
  br label %458

; <label>:448:                                    ; preds = %503, %458, %452, %446
  %449 = landingpad { i8*, i32 }
          cleanup
  %450 = extractvalue { i8*, i32 } %449, 0
  store i8* %450, i8** %33, align 8
  %451 = extractvalue { i8*, i32 } %449, 1
  store i32 %451, i32* %34, align 4
  invoke void @__cxa_end_catch()
          to label %504 unwind label %694

; <label>:452:                                    ; preds = %377
  %453 = load i64*, i64** %31, align 8
  %454 = load i64*, i64** %32, align 8
  %455 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %456 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %455) #3
  invoke void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %453, i64* %454, %"class.std::allocator.2"* dereferenceable(1) %456)
          to label %457 unwind label %448

; <label>:457:                                    ; preds = %452
  br label %458

; <label>:458:                                    ; preds = %457, %447
  %459 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %460 = load i64*, i64** %31, align 8
  %461 = load i64, i64* %28, align 8
  invoke void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.1"* %459, i64* %460, i64 %461)
          to label %462 unwind label %448

; <label>:462:                                    ; preds = %458
  %463 = load i32, i32* @x.775
  %464 = load i32, i32* @y.776
  %465 = add i32 %463, 333437511
  %466 = sub i32 %465, 1
  %467 = sub i32 %466, 333437511
  %468 = sub i32 %463, 1
  %469 = mul i32 %463, %467
  %470 = urem i32 %469, 2
  %471 = icmp eq i32 %470, 0
  %472 = icmp slt i32 %464, 10
  %473 = xor i1 %471, true
  %474 = xor i1 %472, true
  %475 = xor i1 true, true
  %476 = and i1 %473, true
  %477 = and i1 %471, %475
  %478 = and i1 %474, true
  %479 = and i1 %472, %475
  %480 = or i1 %476, %477
  %481 = or i1 %478, %479
  %482 = xor i1 %480, %481
  %483 = or i1 %473, %474
  %484 = xor i1 %483, true
  %485 = or i1 true, %475
  %486 = and i1 %484, %485
  %487 = or i1 %482, %486
  %488 = or i1 %471, %472
  br i1 %487, label %489, label %954

; <label>:489:                                    ; preds = %462, %954
  %490 = load i32, i32* @x.775
  %491 = load i32, i32* @y.776
  %492 = sub i32 0, 1
  %493 = add i32 %490, %492
  %494 = sub i32 %490, 1
  %495 = mul i32 %490, %493
  %496 = urem i32 %495, 2
  %497 = icmp eq i32 %496, 0
  %498 = icmp slt i32 %491, 10
  %499 = and i1 %497, %498
  %500 = xor i1 %497, %498
  %501 = or i1 %499, %500
  %502 = or i1 %497, %498
  br i1 %501, label %503, label %954

; <label>:503:                                    ; preds = %489
  invoke void @__cxa_rethrow() #15
          to label %697 unwind label %448

; <label>:504:                                    ; preds = %448
  br label %648

; <label>:505:                                    ; preds = %372
  %506 = load i32, i32* @x.775
  %507 = load i32, i32* @y.776
  %508 = add i32 %506, 42153195
  %509 = sub i32 %508, 1
  %510 = sub i32 %509, 42153195
  %511 = sub i32 %506, 1
  %512 = mul i32 %506, %510
  %513 = urem i32 %512, 2
  %514 = icmp eq i32 %513, 0
  %515 = icmp slt i32 %507, 10
  %516 = and i1 %514, %515
  %517 = xor i1 %514, %515
  %518 = or i1 %516, %517
  %519 = or i1 %514, %515
  br i1 %518, label %520, label %955

; <label>:520:                                    ; preds = %505, %955
  %521 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %522 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %521, i32 0, i32 0
  %523 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %522, i32 0, i32 0
  %524 = load i64*, i64** %523, align 8
  %525 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %526 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %525, i32 0, i32 0
  %527 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %526, i32 0, i32 1
  %528 = load i64*, i64** %527, align 8
  %529 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %530 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %529) #3
  call void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %524, i64* %528, %"class.std::allocator.2"* dereferenceable(1) %530)
  %531 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %532 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %533 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %532, i32 0, i32 0
  %534 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %533, i32 0, i32 0
  %535 = load i64*, i64** %534, align 8
  %536 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %537 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %536, i32 0, i32 0
  %538 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %537, i32 0, i32 2
  %539 = load i64*, i64** %538, align 8
  %540 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %541 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %540, i32 0, i32 0
  %542 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %541, i32 0, i32 0
  %543 = load i64*, i64** %542, align 8
  %544 = ptrtoint i64* %539 to i64
  %545 = ptrtoint i64* %543 to i64
  %546 = sub i64 %544, -8166586385342312114
  %547 = sub i64 %546, %545
  %548 = add i64 %547, -8166586385342312114
  %549 = sub i64 %544, %545
  %550 = sdiv exact i64 %548, 8
  call void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.1"* %531, i64* %535, i64 %550)
  %551 = load i64*, i64** %31, align 8
  %552 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %553 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %552, i32 0, i32 0
  %554 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %553, i32 0, i32 0
  store i64* %551, i64** %554, align 8
  %555 = load i64*, i64** %32, align 8
  %556 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %557 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %556, i32 0, i32 0
  %558 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %557, i32 0, i32 1
  store i64* %555, i64** %558, align 8
  %559 = load i64*, i64** %31, align 8
  %560 = load i64, i64* %28, align 8
  %561 = getelementptr inbounds i64, i64* %559, i64 %560
  %562 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %563 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %562, i32 0, i32 0
  %564 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %563, i32 0, i32 2
  store i64* %561, i64** %564, align 8
  %565 = load i32, i32* @x.775
  %566 = load i32, i32* @y.776
  %567 = add i32 %565, -1630655676
  %568 = sub i32 %567, 1
  %569 = sub i32 %568, -1630655676
  %570 = sub i32 %565, 1
  %571 = mul i32 %565, %569
  %572 = urem i32 %571, 2
  %573 = icmp eq i32 %572, 0
  %574 = icmp slt i32 %566, 10
  %575 = xor i1 %573, true
  %576 = xor i1 %574, true
  %577 = xor i1 true, true
  %578 = and i1 %575, true
  %579 = and i1 %573, %577
  %580 = and i1 %576, true
  %581 = and i1 %574, %577
  %582 = or i1 %578, %579
  %583 = or i1 %580, %581
  %584 = xor i1 %582, %583
  %585 = or i1 %575, %576
  %586 = xor i1 %585, true
  %587 = or i1 true, %577
  %588 = and i1 %586, %587
  %589 = or i1 %584, %588
  %590 = or i1 %573, %574
  br i1 %589, label %591, label %955

; <label>:591:                                    ; preds = %520
  br label %592

; <label>:592:                                    ; preds = %591, %300
  %593 = load i32, i32* @x.775
  %594 = load i32, i32* @y.776
  %595 = add i32 %593, 213078182
  %596 = sub i32 %595, 1
  %597 = sub i32 %596, 213078182
  %598 = sub i32 %593, 1
  %599 = mul i32 %593, %597
  %600 = urem i32 %599, 2
  %601 = icmp eq i32 %600, 0
  %602 = icmp slt i32 %594, 10
  %603 = xor i1 %601, true
  %604 = xor i1 %602, true
  %605 = xor i1 true, true
  %606 = and i1 %603, true
  %607 = and i1 %601, %605
  %608 = and i1 %604, true
  %609 = and i1 %602, %605
  %610 = or i1 %606, %607
  %611 = or i1 %608, %609
  %612 = xor i1 %610, %611
  %613 = or i1 %603, %604
  %614 = xor i1 %613, true
  %615 = or i1 true, %605
  %616 = and i1 %614, %615
  %617 = or i1 %612, %616
  %618 = or i1 %601, %602
  br i1 %617, label %619, label %1028

; <label>:619:                                    ; preds = %592, %1028
  %620 = load i32, i32* @x.775
  %621 = load i32, i32* @y.776
  %622 = sub i32 %620, 585584937
  %623 = sub i32 %622, 1
  %624 = add i32 %623, 585584937
  %625 = sub i32 %620, 1
  %626 = mul i32 %620, %624
  %627 = urem i32 %626, 2
  %628 = icmp eq i32 %627, 0
  %629 = icmp slt i32 %621, 10
  %630 = xor i1 %628, true
  %631 = xor i1 %629, true
  %632 = xor i1 true, true
  %633 = and i1 %630, true
  %634 = and i1 %628, %632
  %635 = and i1 %631, true
  %636 = and i1 %629, %632
  %637 = or i1 %633, %634
  %638 = or i1 %635, %636
  %639 = xor i1 %637, %638
  %640 = or i1 %630, %631
  %641 = xor i1 %640, true
  %642 = or i1 true, %632
  %643 = and i1 %641, %642
  %644 = or i1 %639, %643
  %645 = or i1 %628, %629
  br i1 %644, label %646, label %1028

; <label>:646:                                    ; preds = %619
  br label %647

; <label>:647:                                    ; preds = %646, %52
  ret void

; <label>:648:                                    ; preds = %504
  %649 = load i32, i32* @x.775
  %650 = load i32, i32* @y.776
  %651 = add i32 %649, -518818991
  %652 = sub i32 %651, 1
  %653 = sub i32 %652, -518818991
  %654 = sub i32 %649, 1
  %655 = mul i32 %649, %653
  %656 = urem i32 %655, 2
  %657 = icmp eq i32 %656, 0
  %658 = icmp slt i32 %650, 10
  %659 = xor i1 %657, true
  %660 = xor i1 %658, true
  %661 = xor i1 false, true
  %662 = and i1 %659, false
  %663 = and i1 %657, %661
  %664 = and i1 %660, false
  %665 = and i1 %658, %661
  %666 = or i1 %662, %663
  %667 = or i1 %664, %665
  %668 = xor i1 %666, %667
  %669 = or i1 %659, %660
  %670 = xor i1 %669, true
  %671 = or i1 false, %661
  %672 = and i1 %670, %671
  %673 = or i1 %668, %672
  %674 = or i1 %657, %658
  br i1 %673, label %675, label %1029

; <label>:675:                                    ; preds = %648, %1029
  %676 = load i8*, i8** %33, align 8
  %677 = load i32, i32* %34, align 4
  %678 = insertvalue { i8*, i32 } undef, i8* %676, 0
  %679 = insertvalue { i8*, i32 } %678, i32 %677, 1
  %680 = load i32, i32* @x.775
  %681 = load i32, i32* @y.776
  %682 = sub i32 0, 1
  %683 = add i32 %680, %682
  %684 = sub i32 %680, 1
  %685 = mul i32 %680, %683
  %686 = urem i32 %685, 2
  %687 = icmp eq i32 %686, 0
  %688 = icmp slt i32 %681, 10
  %689 = and i1 %687, %688
  %690 = xor i1 %687, %688
  %691 = or i1 %689, %690
  %692 = or i1 %687, %688
  br i1 %691, label %693, label %1029

; <label>:693:                                    ; preds = %675
  resume { i8*, i32 } %679

; <label>:694:                                    ; preds = %448
  %695 = landingpad { i8*, i32 }
          catch i8* null
  %696 = extractvalue { i8*, i32 } %695, 0
  call void @__clang_call_terminate(i8* %696) #12
  unreachable

; <label>:697:                                    ; preds = %503
  %698 = load i32, i32* @x.775
  %699 = load i32, i32* @y.776
  %700 = add i32 %698, 2036860599
  %701 = sub i32 %700, 1
  %702 = sub i32 %701, 2036860599
  %703 = sub i32 %698, 1
  %704 = mul i32 %698, %702
  %705 = urem i32 %704, 2
  %706 = icmp eq i32 %705, 0
  %707 = icmp slt i32 %699, 10
  %708 = and i1 %706, %707
  %709 = xor i1 %706, %707
  %710 = or i1 %708, %709
  %711 = or i1 %706, %707
  br i1 %710, label %712, label %1034

; <label>:712:                                    ; preds = %697, %1034
  %713 = load i32, i32* @x.775
  %714 = load i32, i32* @y.776
  %715 = sub i32 0, 1
  %716 = add i32 %713, %715
  %717 = sub i32 %713, 1
  %718 = mul i32 %713, %716
  %719 = urem i32 %718, 2
  %720 = icmp eq i32 %719, 0
  %721 = icmp slt i32 %714, 10
  %722 = xor i1 %720, true
  %723 = xor i1 %721, true
  %724 = xor i1 false, true
  %725 = and i1 %722, false
  %726 = and i1 %720, %724
  %727 = and i1 %723, false
  %728 = and i1 %721, %724
  %729 = or i1 %725, %726
  %730 = or i1 %727, %728
  %731 = xor i1 %729, %730
  %732 = or i1 %722, %723
  %733 = xor i1 %732, true
  %734 = or i1 false, %724
  %735 = and i1 %733, %734
  %736 = or i1 %731, %735
  %737 = or i1 %720, %721
  br i1 %736, label %738, label %1034

; <label>:738:                                    ; preds = %712
  unreachable

; <label>:739:                                    ; preds = %19, %4
  %740 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %741 = alloca %"class.std::vector.0"*, align 8
  %742 = alloca i64, align 8
  %743 = alloca i64*, align 8
  %744 = alloca i64, align 8
  %745 = alloca i64, align 8
  %746 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %747 = alloca i64*, align 8
  %748 = alloca i64, align 8
  %749 = alloca i64, align 8
  %750 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %751 = alloca i64*, align 8
  %752 = alloca i64*, align 8
  %753 = alloca i8*
  %754 = alloca i32
  %755 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %740, i32 0, i32 0
  store i64* %1, i64** %755, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %741, align 8
  store i64 %2, i64* %742, align 8
  store i64* %3, i64** %743, align 8
  %756 = load %"class.std::vector.0"*, %"class.std::vector.0"** %741, align 8
  %757 = load i64, i64* %742, align 8
  %758 = icmp ne i64 %757, 0
  br label %19

; <label>:759:                                    ; preds = %85, %70
  %760 = load i64*, i64** %23, align 8
  %761 = load i64, i64* %760, align 8
  store i64 %761, i64* %24, align 8
  %762 = call i64* @_ZNSt6vectorIxSaIxEE3endEv(%"class.std::vector.0"* %36) #3
  %763 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %26, i32 0, i32 0
  store i64* %762, i64** %763, align 8
  %764 = call i64 @_ZN9__gnu_cxxmiIPxSt6vectorIxSaIxEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %26, %"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %20) #3
  store i64 %764, i64* %25, align 8
  %765 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %766 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %765, i32 0, i32 0
  %767 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %766, i32 0, i32 1
  %768 = load i64*, i64** %767, align 8
  store i64* %768, i64** %27, align 8
  %769 = load i64, i64* %25, align 8
  %770 = load i64, i64* %22, align 8
  %771 = icmp ugt i64 %769, %770
  br label %85

; <label>:772:                                    ; preds = %152, %125
  %773 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %774 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %773, i32 0, i32 0
  %775 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %774, i32 0, i32 1
  %776 = load i64*, i64** %775, align 8
  %777 = load i64, i64* %22, align 8
  %778 = shl i64 0, %777
  %779 = shl i64 0, %777
  %780 = sub i64 0, 7882412604671626733
  %781 = sub i64 %780, 0
  %782 = add i64 %781, 7882412604671626733
  %783 = sub i64 0, 0
  %784 = sub i64 0, %782
  %785 = sub i64 0, %777
  %786 = add i64 %784, %785
  %787 = sub i64 0, %786
  %788 = add i64 %782, %777
  %789 = add i64 0, 1104872819279488613
  %790 = sub i64 %789, 0
  %791 = sub i64 %790, 1104872819279488613
  %792 = sub i64 0, 0
  %793 = sub i64 %791, 1907079855955245776
  %794 = add i64 %793, %777
  %795 = add i64 %794, 1907079855955245776
  %796 = add i64 %791, %777
  %797 = sub i64 0, 0
  %798 = add i64 0, %797
  %799 = sub i64 0, 0
  %800 = sub i64 %798, -7806370877290120263
  %801 = add i64 %800, %777
  %802 = add i64 %801, -7806370877290120263
  %803 = add i64 %798, %777
  %804 = add i64 0, -5272241640121765965
  %805 = sub i64 %804, %777
  %806 = sub i64 %805, -5272241640121765965
  %807 = sub i64 0, %777
  %808 = mul i64 %806, %777
  %809 = add i64 0, -8140293486772336806
  %810 = sub i64 %809, 0
  %811 = sub i64 %810, -8140293486772336806
  %812 = sub i64 0, 0
  %813 = add i64 %811, -6374978078075463612
  %814 = add i64 %813, %777
  %815 = sub i64 %814, -6374978078075463612
  %816 = add i64 %811, %777
  %817 = add i64 0, -7214304378428454897
  %818 = sub i64 %817, %777
  %819 = sub i64 %818, -7214304378428454897
  %820 = sub i64 0, %777
  %821 = getelementptr inbounds i64, i64* %776, i64 %819
  %822 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %823 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %822, i32 0, i32 0
  %824 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %823, i32 0, i32 1
  %825 = load i64*, i64** %824, align 8
  %826 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %827 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %826, i32 0, i32 0
  %828 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %827, i32 0, i32 1
  %829 = load i64*, i64** %828, align 8
  %830 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %831 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %830) #3
  %832 = call i64* @_ZSt22__uninitialized_move_aIPxS0_SaIxEET0_T_S3_S2_RT1_(i64* %821, i64* %825, i64* %829, %"class.std::allocator.2"* dereferenceable(1) %831)
  %833 = load i64, i64* %22, align 8
  %834 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %835 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %834, i32 0, i32 0
  %836 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %835, i32 0, i32 1
  %837 = load i64*, i64** %836, align 8
  %838 = getelementptr inbounds i64, i64* %837, i64 %833
  store i64* %838, i64** %836, align 8
  %839 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.38"* %20) #3
  %840 = load i64*, i64** %839, align 8
  %841 = load i64*, i64** %27, align 8
  %842 = load i64, i64* %22, align 8
  %843 = sub i64 0, 9093515724073485300
  %844 = sub i64 %843, %842
  %845 = add i64 %844, 9093515724073485300
  %846 = sub i64 0, %842
  %847 = mul i64 %845, %842
  %848 = sub i64 0, %842
  %849 = add i64 0, %848
  %850 = sub i64 0, %842
  %851 = mul i64 %849, %842
  %852 = shl i64 0, %842
  %853 = shl i64 0, %842
  %854 = add i64 0, -8534848013863341533
  %855 = sub i64 %854, 0
  %856 = sub i64 %855, -8534848013863341533
  %857 = sub i64 0, 0
  %858 = sub i64 %856, -7098949923478563459
  %859 = add i64 %858, %842
  %860 = add i64 %859, -7098949923478563459
  %861 = add i64 %856, %842
  %862 = sub i64 0, 6815792350517844425
  %863 = sub i64 %862, %842
  %864 = add i64 %863, 6815792350517844425
  %865 = sub i64 0, %842
  %866 = getelementptr inbounds i64, i64* %841, i64 %864
  %867 = load i64*, i64** %27, align 8
  %868 = call i64* @_ZSt13move_backwardIPxS0_ET0_T_S2_S1_(i64* %840, i64* %866, i64* %867)
  %869 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.38"* %20) #3
  %870 = load i64*, i64** %869, align 8
  %871 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.38"* %20) #3
  %872 = load i64*, i64** %871, align 8
  %873 = load i64, i64* %22, align 8
  %874 = getelementptr inbounds i64, i64* %872, i64 %873
  call void @_ZSt4fillIPxxEvT_S1_RKT0_(i64* %870, i64* %874, i64* dereferenceable(8) %24)
  br label %152

; <label>:875:                                    ; preds = %238, %223
  %876 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %877 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %876, i32 0, i32 0
  %878 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %877, i32 0, i32 1
  %879 = load i64*, i64** %878, align 8
  %880 = load i64, i64* %22, align 8
  %881 = load i64, i64* %25, align 8
  %882 = add i64 %880, -4950723451413213880
  %883 = sub i64 %882, %881
  %884 = sub i64 %883, -4950723451413213880
  %885 = sub i64 %880, %881
  %886 = mul i64 %884, %881
  %887 = sub i64 0, %881
  %888 = add i64 %880, %887
  %889 = sub i64 %880, %881
  %890 = mul i64 %888, %881
  %891 = sub i64 0, %881
  %892 = add i64 %880, %891
  %893 = sub i64 %880, %881
  %894 = mul i64 %892, %881
  %895 = sub i64 0, %881
  %896 = add i64 %880, %895
  %897 = sub i64 %880, %881
  %898 = mul i64 %896, %881
  %899 = sub i64 %880, -8586640606563496328
  %900 = sub i64 %899, %881
  %901 = add i64 %900, -8586640606563496328
  %902 = sub i64 %880, %881
  %903 = mul i64 %901, %881
  %904 = add i64 %880, -9177253515409018720
  %905 = sub i64 %904, %881
  %906 = sub i64 %905, -9177253515409018720
  %907 = sub i64 %880, %881
  %908 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %909 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %908) #3
  %910 = call i64* @_ZSt24__uninitialized_fill_n_aIPxmxxET_S1_T0_RKT1_RSaIT2_E(i64* %879, i64 %906, i64* dereferenceable(8) %24, %"class.std::allocator.2"* dereferenceable(1) %909)
  %911 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %912 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %911, i32 0, i32 0
  %913 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %912, i32 0, i32 1
  store i64* %910, i64** %913, align 8
  %914 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.38"* %20) #3
  %915 = load i64*, i64** %914, align 8
  %916 = load i64*, i64** %27, align 8
  %917 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %918 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %917, i32 0, i32 0
  %919 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %918, i32 0, i32 1
  %920 = load i64*, i64** %919, align 8
  %921 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %922 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %921) #3
  %923 = call i64* @_ZSt22__uninitialized_move_aIPxS0_SaIxEET0_T_S3_S2_RT1_(i64* %915, i64* %916, i64* %920, %"class.std::allocator.2"* dereferenceable(1) %922)
  %924 = load i64, i64* %25, align 8
  %925 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %926 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %925, i32 0, i32 0
  %927 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %926, i32 0, i32 1
  %928 = load i64*, i64** %927, align 8
  %929 = getelementptr inbounds i64, i64* %928, i64 %924
  store i64* %929, i64** %927, align 8
  %930 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.38"* %20) #3
  %931 = load i64*, i64** %930, align 8
  %932 = load i64*, i64** %27, align 8
  call void @_ZSt4fillIPxxEvT_S1_RKT0_(i64* %931, i64* %932, i64* dereferenceable(8) %24)
  br label %238

; <label>:933:                                    ; preds = %333, %319
  store i64* null, i64** %32, align 8
  %934 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %935 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %934, i32 0, i32 0
  %936 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %935, i32 0, i32 0
  %937 = load i64*, i64** %936, align 8
  %938 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.38"* %20) #3
  %939 = load i64*, i64** %938, align 8
  %940 = load i64*, i64** %31, align 8
  %941 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %942 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %941) #3
  br label %333

; <label>:943:                                    ; preds = %409, %382
  %944 = load i64*, i64** %31, align 8
  %945 = load i64, i64* %29, align 8
  %946 = getelementptr inbounds i64, i64* %944, i64 %945
  %947 = load i64*, i64** %31, align 8
  %948 = load i64, i64* %29, align 8
  %949 = getelementptr inbounds i64, i64* %947, i64 %948
  %950 = load i64, i64* %22, align 8
  %951 = getelementptr inbounds i64, i64* %949, i64 %950
  %952 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %953 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %952) #3
  br label %409

; <label>:954:                                    ; preds = %489, %462
  br label %489

; <label>:955:                                    ; preds = %520, %505
  %956 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %957 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %956, i32 0, i32 0
  %958 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %957, i32 0, i32 0
  %959 = load i64*, i64** %958, align 8
  %960 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %961 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %960, i32 0, i32 0
  %962 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %961, i32 0, i32 1
  %963 = load i64*, i64** %962, align 8
  %964 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %965 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %964) #3
  call void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %959, i64* %963, %"class.std::allocator.2"* dereferenceable(1) %965)
  %966 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %967 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %968 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %967, i32 0, i32 0
  %969 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %968, i32 0, i32 0
  %970 = load i64*, i64** %969, align 8
  %971 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %972 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %971, i32 0, i32 0
  %973 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %972, i32 0, i32 2
  %974 = load i64*, i64** %973, align 8
  %975 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %976 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %975, i32 0, i32 0
  %977 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %976, i32 0, i32 0
  %978 = load i64*, i64** %977, align 8
  %979 = ptrtoint i64* %974 to i64
  %980 = ptrtoint i64* %978 to i64
  %981 = sub i64 0, %980
  %982 = add i64 %979, %981
  %983 = sub i64 %979, %980
  %984 = mul i64 %982, %980
  %985 = sub i64 0, %979
  %986 = add i64 0, %985
  %987 = sub i64 0, %979
  %988 = sub i64 0, %980
  %989 = sub i64 %986, %988
  %990 = add i64 %986, %980
  %991 = sub i64 %979, -257866427364513249
  %992 = sub i64 %991, %980
  %993 = add i64 %992, -257866427364513249
  %994 = sub i64 %979, %980
  %995 = sub i64 0, 8
  %996 = add i64 %993, %995
  %997 = sub i64 %993, 8
  %998 = mul i64 %996, 8
  %999 = add i64 0, 8787618807726342655
  %1000 = sub i64 %999, %993
  %1001 = sub i64 %1000, 8787618807726342655
  %1002 = sub i64 0, %993
  %1003 = sub i64 %1001, -2979497887541322899
  %1004 = add i64 %1003, 8
  %1005 = add i64 %1004, -2979497887541322899
  %1006 = add i64 %1001, 8
  %1007 = shl i64 %993, 8
  %1008 = sub i64 0, 8
  %1009 = add i64 %993, %1008
  %1010 = sub i64 %993, 8
  %1011 = mul i64 %1009, 8
  %1012 = shl i64 %993, 8
  %1013 = sdiv exact i64 %993, 8
  call void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.1"* %966, i64* %970, i64 %1013)
  %1014 = load i64*, i64** %31, align 8
  %1015 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %1016 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %1015, i32 0, i32 0
  %1017 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %1016, i32 0, i32 0
  store i64* %1014, i64** %1017, align 8
  %1018 = load i64*, i64** %32, align 8
  %1019 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %1020 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %1019, i32 0, i32 0
  %1021 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %1020, i32 0, i32 1
  store i64* %1018, i64** %1021, align 8
  %1022 = load i64*, i64** %31, align 8
  %1023 = load i64, i64* %28, align 8
  %1024 = getelementptr inbounds i64, i64* %1022, i64 %1023
  %1025 = bitcast %"class.std::vector.0"* %36 to %"struct.std::_Vector_base.1"*
  %1026 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %1025, i32 0, i32 0
  %1027 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %1026, i32 0, i32 2
  store i64* %1024, i64** %1027, align 8
  br label %520

; <label>:1028:                                   ; preds = %619, %592
  br label %619

; <label>:1029:                                   ; preds = %675, %648
  %1030 = load i8*, i8** %33, align 8
  %1031 = load i32, i32* %34, align 4
  %1032 = insertvalue { i8*, i32 } undef, i8* %1030, 0
  %1033 = insertvalue { i8*, i32 } %1032, i32 %1031, 1
  br label %675

; <label>:1034:                                   ; preds = %712, %697
  br label %712
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl(%"class.__gnu_cxx::__normal_iterator.38"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.38"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %0, %"class.__gnu_cxx::__normal_iterator.38"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %4, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = load i64, i64* %5, align 8
  %11 = getelementptr inbounds i64, i64* %9, i64 %10
  store i64* %11, i64** %6, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.38"* %3, i64** dereferenceable(8) %6) #3
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %3, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  ret i64* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPxSt6vectorIxSaIxEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8)) #4 comdat {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.779
  %7 = load i32, i32* @y.780
  %8 = add i32 %6, -2029042190
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -2029042190
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 802891572, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %127
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 802891572, label %20
    i32 1349084447, label %28
    i32 1109967594, label %59
    i32 2001002806, label %61
  ]

; <label>:19:                                     ; preds = %17
  br label %127

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1349084447, i32 2001002806
  store i32 %27, i32* %16
  br label %127

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.38"*, align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.38"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %0, %"class.__gnu_cxx::__normal_iterator.38"** %29, align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %1, %"class.__gnu_cxx::__normal_iterator.38"** %30, align 8
  %31 = load %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %29, align 8
  %32 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.38"* %31) #3
  %33 = load i64*, i64** %32, align 8
  %34 = load %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %30, align 8
  %35 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.38"* %34) #3
  %36 = load i64*, i64** %35, align 8
  %37 = ptrtoint i64* %33 to i64
  %38 = ptrtoint i64* %36 to i64
  %39 = add i64 %37, 504089747886889095
  %40 = sub i64 %39, %38
  %41 = sub i64 %40, 504089747886889095
  %42 = sub i64 %37, %38
  %43 = sdiv exact i64 %41, 8
  store i64 %43, i64* %3
  %44 = load i32, i32* @x.779
  %45 = load i32, i32* @y.780
  %46 = sub i32 %44, 1604268162
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 1604268162
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1109967594, i32 2001002806
  store i32 %58, i32* %16
  br label %127

; <label>:59:                                     ; preds = %17
  %60 = load volatile i64, i64* %3
  ret i64 %60

; <label>:61:                                     ; preds = %17
  %62 = alloca %"class.__gnu_cxx::__normal_iterator.38"*, align 8
  %63 = alloca %"class.__gnu_cxx::__normal_iterator.38"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %0, %"class.__gnu_cxx::__normal_iterator.38"** %62, align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %1, %"class.__gnu_cxx::__normal_iterator.38"** %63, align 8
  %64 = load %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %62, align 8
  %65 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.38"* %64) #3
  %66 = load i64*, i64** %65, align 8
  %67 = load %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %63, align 8
  %68 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.38"* %67) #3
  %69 = load i64*, i64** %68, align 8
  %70 = ptrtoint i64* %66 to i64
  %71 = ptrtoint i64* %69 to i64
  %72 = sub i64 %70, 2192675389358920709
  %73 = sub i64 %72, %71
  %74 = add i64 %73, 2192675389358920709
  %75 = sub i64 %70, %71
  %76 = mul i64 %74, %71
  %77 = add i64 %70, -2877273929549297615
  %78 = sub i64 %77, %71
  %79 = sub i64 %78, -2877273929549297615
  %80 = sub i64 %70, %71
  %81 = add i64 0, -7526210654832937433
  %82 = sub i64 %81, %79
  %83 = sub i64 %82, -7526210654832937433
  %84 = sub i64 0, %79
  %85 = sub i64 0, 8
  %86 = sub i64 %83, %85
  %87 = add i64 %83, 8
  %88 = add i64 0, 152399617422488980
  %89 = sub i64 %88, %79
  %90 = sub i64 %89, 152399617422488980
  %91 = sub i64 0, %79
  %92 = sub i64 0, 8
  %93 = sub i64 %90, %92
  %94 = add i64 %90, 8
  %95 = sub i64 0, %79
  %96 = add i64 0, %95
  %97 = sub i64 0, %79
  %98 = sub i64 0, %96
  %99 = sub i64 0, 8
  %100 = add i64 %98, %99
  %101 = sub i64 0, %100
  %102 = add i64 %96, 8
  %103 = add i64 0, -7067491910353950055
  %104 = sub i64 %103, %79
  %105 = sub i64 %104, -7067491910353950055
  %106 = sub i64 0, %79
  %107 = sub i64 0, %105
  %108 = sub i64 0, 8
  %109 = add i64 %107, %108
  %110 = sub i64 0, %109
  %111 = add i64 %105, 8
  %112 = shl i64 %79, 8
  %113 = shl i64 %79, 8
  %114 = add i64 %79, 4631830857428240484
  %115 = sub i64 %114, 8
  %116 = sub i64 %115, 4631830857428240484
  %117 = sub i64 %79, 8
  %118 = mul i64 %116, 8
  %119 = sub i64 0, %79
  %120 = add i64 0, %119
  %121 = sub i64 0, %79
  %122 = sub i64 %120, -4696019636204561154
  %123 = add i64 %122, 8
  %124 = add i64 %123, -4696019636204561154
  %125 = add i64 %120, 8
  %126 = sdiv exact i64 %79, 8
  store i32 1349084447, i32* %16
  br label %127

; <label>:127:                                    ; preds = %61, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt22__uninitialized_move_aIPxS0_SaIxEET0_T_S3_S2_RT1_(i64*, i64*, i64*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  %9 = alloca %"class.std::move_iterator.45", align 8
  %10 = alloca %"class.std::move_iterator.45", align 8
  store i64* %0, i64** %5, align 8
  store i64* %1, i64** %6, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %11 = load i64*, i64** %5, align 8
  %12 = call i64* @_ZSt18make_move_iteratorIPxESt13move_iteratorIT_ES2_(i64* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %9, i32 0, i32 0
  store i64* %12, i64** %13, align 8
  %14 = load i64*, i64** %6, align 8
  %15 = call i64* @_ZSt18make_move_iteratorIPxESt13move_iteratorIT_ES2_(i64* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %10, i32 0, i32 0
  store i64* %15, i64** %16, align 8
  %17 = load i64*, i64** %7, align 8
  %18 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %9, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %10, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = call i64* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPxES1_xET0_T_S4_S3_RSaIT1_E(i64* %20, i64* %22, i64* %17, %"class.std::allocator.2"* dereferenceable(1) %18)
  ret i64* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt13move_backwardIPxS0_ET0_T_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.783
  %8 = load i32, i32* @y.784
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -642427018, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %65
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -642427018, label %20
    i32 775494741, label %28
    i32 1891289478, label %53
    i32 -1124946451, label %55
  ]

; <label>:19:                                     ; preds = %17
  br label %65

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 775494741, i32 -1124946451
  store i32 %27, i32* %16
  br label %65

; <label>:28:                                     ; preds = %17
  %29 = alloca i64*, align 8
  %30 = alloca i64*, align 8
  %31 = alloca i64*, align 8
  store i64* %0, i64** %29, align 8
  store i64* %1, i64** %30, align 8
  store i64* %2, i64** %31, align 8
  %32 = load i64*, i64** %29, align 8
  %33 = call i64* @_ZSt12__miter_baseIPxENSt11_Miter_baseIT_E13iterator_typeES2_(i64* %32)
  %34 = load i64*, i64** %30, align 8
  %35 = call i64* @_ZSt12__miter_baseIPxENSt11_Miter_baseIT_E13iterator_typeES2_(i64* %34)
  %36 = load i64*, i64** %31, align 8
  %37 = call i64* @_ZSt23__copy_move_backward_a2ILb1EPxS0_ET1_T0_S2_S1_(i64* %33, i64* %35, i64* %36)
  store i64* %37, i64** %4
  %38 = load i32, i32* @x.783
  %39 = load i32, i32* @y.784
  %40 = sub i32 %38, 126585516
  %41 = sub i32 %40, 1
  %42 = add i32 %41, 126585516
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 1891289478, i32 -1124946451
  store i32 %52, i32* %16
  br label %65

; <label>:53:                                     ; preds = %17
  %54 = load volatile i64*, i64** %4
  ret i64* %54

; <label>:55:                                     ; preds = %17
  %56 = alloca i64*, align 8
  %57 = alloca i64*, align 8
  %58 = alloca i64*, align 8
  store i64* %0, i64** %56, align 8
  store i64* %1, i64** %57, align 8
  store i64* %2, i64** %58, align 8
  %59 = load i64*, i64** %56, align 8
  %60 = call i64* @_ZSt12__miter_baseIPxENSt11_Miter_baseIT_E13iterator_typeES2_(i64* %59)
  %61 = load i64*, i64** %57, align 8
  %62 = call i64* @_ZSt12__miter_baseIPxENSt11_Miter_baseIT_E13iterator_typeES2_(i64* %61)
  %63 = load i64*, i64** %58, align 8
  %64 = call i64* @_ZSt23__copy_move_backward_a2ILb1EPxS0_ET1_T0_S2_S1_(i64* %60, i64* %62, i64* %63)
  store i32 775494741, i32* %16
  br label %65

; <label>:65:                                     ; preds = %55, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.38"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.38"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %0, %"class.__gnu_cxx::__normal_iterator.38"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %3, i32 0, i32 0
  ret i64** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIPxxEvT_S1_RKT0_(i64*, i64*, i64* dereferenceable(8)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %7)
  %9 = load i64*, i64** %5, align 8
  %10 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %9)
  %11 = load i64*, i64** %6, align 8
  call void @_ZSt8__fill_aIPxxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i64* %8, i64* %10, i64* dereferenceable(8) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt24__uninitialized_fill_n_aIPxmxxET_S1_T0_RKT1_RSaIT2_E(i64*, i64, i64* dereferenceable(8), %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  store i64* %0, i64** %5, align 8
  store i64 %1, i64* %6, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %9 = load i64*, i64** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load i64*, i64** %7, align 8
  %12 = call i64* @_ZSt20uninitialized_fill_nIPxmxET_S1_T0_RKT1_(i64* %9, i64 %10, i64* dereferenceable(8) %11)
  ret i64* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt18make_move_iteratorIPxESt13move_iteratorIT_ES2_(i64*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.45", align 8
  %3 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  %4 = load i64*, i64** %3, align 8
  call void @_ZNSt13move_iteratorIPxEC2ES0_(%"class.std::move_iterator.45"* %2, i64* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.45", %"class.std::move_iterator.45"* %2, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  ret i64* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt23__copy_move_backward_a2ILb1EPxS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.793
  %8 = load i32, i32* @y.794
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -753037826, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %78
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -753037826, label %20
    i32 -1076433821, label %40
    i32 -1032222706, label %65
    i32 -944589622, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %78

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1076433821, i32 -944589622
  store i32 %39, i32* %16
  br label %78

; <label>:40:                                     ; preds = %17
  %41 = alloca i64*, align 8
  %42 = alloca i64*, align 8
  %43 = alloca i64*, align 8
  store i64* %0, i64** %41, align 8
  store i64* %1, i64** %42, align 8
  store i64* %2, i64** %43, align 8
  %44 = load i64*, i64** %41, align 8
  %45 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %44)
  %46 = load i64*, i64** %42, align 8
  %47 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %46)
  %48 = load i64*, i64** %43, align 8
  %49 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %48)
  %50 = call i64* @_ZSt22__copy_move_backward_aILb1EPxS0_ET1_T0_S2_S1_(i64* %45, i64* %47, i64* %49)
  store i64* %50, i64** %4
  %51 = load i32, i32* @x.793
  %52 = load i32, i32* @y.794
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -1032222706, i32 -944589622
  store i32 %64, i32* %16
  br label %78

; <label>:65:                                     ; preds = %17
  %66 = load volatile i64*, i64** %4
  ret i64* %66

; <label>:67:                                     ; preds = %17
  %68 = alloca i64*, align 8
  %69 = alloca i64*, align 8
  %70 = alloca i64*, align 8
  store i64* %0, i64** %68, align 8
  store i64* %1, i64** %69, align 8
  store i64* %2, i64** %70, align 8
  %71 = load i64*, i64** %68, align 8
  %72 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %71)
  %73 = load i64*, i64** %69, align 8
  %74 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %73)
  %75 = load i64*, i64** %70, align 8
  %76 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %75)
  %77 = call i64* @_ZSt22__copy_move_backward_aILb1EPxS0_ET1_T0_S2_S1_(i64* %72, i64* %74, i64* %76)
  store i32 -1076433821, i32* %16
  br label %78

; <label>:78:                                     ; preds = %67, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt12__miter_baseIPxENSt11_Miter_baseIT_E13iterator_typeES2_(i64*) #4 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.795
  %6 = load i32, i32* @y.796
  %7 = add i32 %5, 1985575455
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1985575455
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1104520725, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1104520725, label %19
    i32 -293173013, label %27
    i32 70186753, label %57
    i32 -500867695, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -293173013, i32 -500867695
  store i32 %26, i32* %15
  br label %63

; <label>:27:                                     ; preds = %16
  %28 = alloca i64*, align 8
  store i64* %0, i64** %28, align 8
  %29 = load i64*, i64** %28, align 8
  %30 = call i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64* %29)
  store i64* %30, i64** %2
  %31 = load i32, i32* @x.795
  %32 = load i32, i32* @y.796
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 70186753, i32 -500867695
  store i32 %56, i32* %15
  br label %63

; <label>:57:                                     ; preds = %16
  %58 = load volatile i64*, i64** %2
  ret i64* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca i64*, align 8
  store i64* %0, i64** %60, align 8
  %61 = load i64*, i64** %60, align 8
  %62 = call i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64* %61)
  store i32 -293173013, i32* %15
  br label %63

; <label>:63:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt22__copy_move_backward_aILb1EPxS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i64*, i64** %4, align 8
  %9 = load i64*, i64** %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIxEEPT_PKS3_S6_S4_(i64* %8, i64* %9, i64* %10)
  ret i64* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt20__copy_move_backwardILb1ELb1ESt26random_access_iterator_tagE13__copy_move_bIxEEPT_PKS3_S6_S4_(i64*, i64*, i64*) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i64**
  %7 = alloca i64**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.799
  %11 = load i32, i32* @y.800
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 -1533650475, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %286
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1533650475, label %23
    i32 1801960995, label %31
    i32 -1352317096, label %77
    i32 -1332350353, label %80
    i32 -1189489547, label %108
    i32 23346514, label %150
    i32 1425474931, label %151
    i32 -727716425, label %161
    i32 -579548528, label %237
  ]

; <label>:22:                                     ; preds = %20
  br label %286

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 1801960995, i32 -727716425
  store i32 %30, i32* %19
  br label %286

; <label>:31:                                     ; preds = %20
  %32 = alloca i64*, align 8
  store i64** %32, i64*** %7
  %33 = alloca i64*, align 8
  %34 = alloca i64*, align 8
  store i64** %34, i64*** %6
  %35 = alloca i64, align 8
  store i64* %35, i64** %5
  %36 = load volatile i64**, i64*** %7
  store i64* %0, i64** %36, align 8
  store i64* %1, i64** %33, align 8
  %37 = load volatile i64**, i64*** %6
  store i64* %2, i64** %37, align 8
  %38 = load i64*, i64** %33, align 8
  %39 = load volatile i64**, i64*** %7
  %40 = load i64*, i64** %39, align 8
  %41 = ptrtoint i64* %38 to i64
  %42 = ptrtoint i64* %40 to i64
  %43 = sub i64 0, %42
  %44 = add i64 %41, %43
  %45 = sub i64 %41, %42
  %46 = sdiv exact i64 %44, 8
  %47 = load volatile i64*, i64** %5
  store i64 %46, i64* %47, align 8
  %48 = load volatile i64*, i64** %5
  %49 = load i64, i64* %48, align 8
  %50 = icmp ne i64 %49, 0
  store i1 %50, i1* %4
  %51 = load i32, i32* @x.799
  %52 = load i32, i32* @y.800
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -1352317096, i32 -727716425
  store i32 %76, i32* %19
  br label %286

; <label>:77:                                     ; preds = %20
  %78 = load volatile i1, i1* %4
  %79 = select i1 %78, i32 -1332350353, i32 1425474931
  store i32 %79, i32* %19
  br label %286

; <label>:80:                                     ; preds = %20
  %81 = load i32, i32* @x.799
  %82 = load i32, i32* @y.800
  %83 = add i32 %81, -805535992
  %84 = sub i32 %83, 1
  %85 = sub i32 %84, -805535992
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = xor i1 %89, true
  %92 = xor i1 %90, true
  %93 = xor i1 false, true
  %94 = and i1 %91, false
  %95 = and i1 %89, %93
  %96 = and i1 %92, false
  %97 = and i1 %90, %93
  %98 = or i1 %94, %95
  %99 = or i1 %96, %97
  %100 = xor i1 %98, %99
  %101 = or i1 %91, %92
  %102 = xor i1 %101, true
  %103 = or i1 false, %93
  %104 = and i1 %102, %103
  %105 = or i1 %100, %104
  %106 = or i1 %89, %90
  %107 = select i1 %105, i32 -1189489547, i32 -579548528
  store i32 %107, i32* %19
  br label %286

; <label>:108:                                    ; preds = %20
  %109 = load volatile i64**, i64*** %6
  %110 = load i64*, i64** %109, align 8
  %111 = load volatile i64*, i64** %5
  %112 = load i64, i64* %111, align 8
  %113 = sub i64 0, %112
  %114 = add i64 0, %113
  %115 = sub i64 0, %112
  %116 = getelementptr inbounds i64, i64* %110, i64 %114
  %117 = bitcast i64* %116 to i8*
  %118 = load volatile i64**, i64*** %7
  %119 = load i64*, i64** %118, align 8
  %120 = bitcast i64* %119 to i8*
  %121 = load volatile i64*, i64** %5
  %122 = load i64, i64* %121, align 8
  %123 = mul i64 8, %122
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %117, i8* %120, i64 %123, i32 8, i1 false)
  %124 = load i32, i32* @x.799
  %125 = load i32, i32* @y.800
  %126 = sub i32 0, 1
  %127 = add i32 %124, %126
  %128 = sub i32 %124, 1
  %129 = mul i32 %124, %127
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %125, 10
  %133 = xor i1 %131, true
  %134 = xor i1 %132, true
  %135 = xor i1 true, true
  %136 = and i1 %133, true
  %137 = and i1 %131, %135
  %138 = and i1 %134, true
  %139 = and i1 %132, %135
  %140 = or i1 %136, %137
  %141 = or i1 %138, %139
  %142 = xor i1 %140, %141
  %143 = or i1 %133, %134
  %144 = xor i1 %143, true
  %145 = or i1 true, %135
  %146 = and i1 %144, %145
  %147 = or i1 %142, %146
  %148 = or i1 %131, %132
  %149 = select i1 %147, i32 23346514, i32 -579548528
  store i32 %149, i32* %19
  br label %286

; <label>:150:                                    ; preds = %20
  store i32 1425474931, i32* %19
  br label %286

; <label>:151:                                    ; preds = %20
  %152 = load volatile i64**, i64*** %6
  %153 = load i64*, i64** %152, align 8
  %154 = load volatile i64*, i64** %5
  %155 = load i64, i64* %154, align 8
  %156 = add i64 0, 8533987192738436575
  %157 = sub i64 %156, %155
  %158 = sub i64 %157, 8533987192738436575
  %159 = sub i64 0, %155
  %160 = getelementptr inbounds i64, i64* %153, i64 %158
  ret i64* %160

; <label>:161:                                    ; preds = %20
  %162 = alloca i64*, align 8
  %163 = alloca i64*, align 8
  %164 = alloca i64*, align 8
  %165 = alloca i64, align 8
  store i64* %0, i64** %162, align 8
  store i64* %1, i64** %163, align 8
  store i64* %2, i64** %164, align 8
  %166 = load i64*, i64** %163, align 8
  %167 = load i64*, i64** %162, align 8
  %168 = ptrtoint i64* %166 to i64
  %169 = ptrtoint i64* %167 to i64
  %170 = sub i64 %168, 3753131573970821558
  %171 = sub i64 %170, %169
  %172 = add i64 %171, 3753131573970821558
  %173 = sub i64 %168, %169
  %174 = mul i64 %172, %169
  %175 = shl i64 %168, %169
  %176 = sub i64 0, -7442520006288056594
  %177 = sub i64 %176, %168
  %178 = add i64 %177, -7442520006288056594
  %179 = sub i64 0, %168
  %180 = add i64 %178, -8574851891121930085
  %181 = add i64 %180, %169
  %182 = sub i64 %181, -8574851891121930085
  %183 = add i64 %178, %169
  %184 = shl i64 %168, %169
  %185 = sub i64 0, %169
  %186 = add i64 %168, %185
  %187 = sub i64 %168, %169
  %188 = mul i64 %186, %169
  %189 = sub i64 0, %168
  %190 = add i64 0, %189
  %191 = sub i64 0, %168
  %192 = sub i64 0, %169
  %193 = sub i64 %190, %192
  %194 = add i64 %190, %169
  %195 = sub i64 %168, -4028591701662086354
  %196 = sub i64 %195, %169
  %197 = add i64 %196, -4028591701662086354
  %198 = sub i64 %168, %169
  %199 = shl i64 %197, 8
  %200 = sub i64 %197, 6566512419067077589
  %201 = sub i64 %200, 8
  %202 = add i64 %201, 6566512419067077589
  %203 = sub i64 %197, 8
  %204 = mul i64 %202, 8
  %205 = shl i64 %197, 8
  %206 = sub i64 0, %197
  %207 = add i64 0, %206
  %208 = sub i64 0, %197
  %209 = add i64 %207, 5751428357262882799
  %210 = add i64 %209, 8
  %211 = sub i64 %210, 5751428357262882799
  %212 = add i64 %207, 8
  %213 = shl i64 %197, 8
  %214 = add i64 %197, -1611290895393860158
  %215 = sub i64 %214, 8
  %216 = sub i64 %215, -1611290895393860158
  %217 = sub i64 %197, 8
  %218 = mul i64 %216, 8
  %219 = add i64 %197, -3631575688674076589
  %220 = sub i64 %219, 8
  %221 = sub i64 %220, -3631575688674076589
  %222 = sub i64 %197, 8
  %223 = mul i64 %221, 8
  %224 = shl i64 %197, 8
  %225 = add i64 0, 8259969182177822984
  %226 = sub i64 %225, %197
  %227 = sub i64 %226, 8259969182177822984
  %228 = sub i64 0, %197
  %229 = sub i64 0, %227
  %230 = sub i64 0, 8
  %231 = add i64 %229, %230
  %232 = sub i64 0, %231
  %233 = add i64 %227, 8
  %234 = sdiv exact i64 %197, 8
  store i64 %234, i64* %165, align 8
  %235 = load i64, i64* %165, align 8
  %236 = icmp ne i64 %235, 0
  store i32 1801960995, i32* %19
  br label %286

; <label>:237:                                    ; preds = %20
  %238 = load volatile i64**, i64*** %6
  %239 = load i64*, i64** %238, align 8
  %240 = load volatile i64*, i64** %5
  %241 = load i64, i64* %240, align 8
  %242 = add i64 0, -8120856451621676271
  %243 = sub i64 %242, 0
  %244 = sub i64 %243, -8120856451621676271
  %245 = sub i64 0, 0
  %246 = sub i64 %244, 4141173871200652067
  %247 = add i64 %246, %241
  %248 = add i64 %247, 4141173871200652067
  %249 = add i64 %244, %241
  %250 = shl i64 0, %241
  %251 = shl i64 0, %241
  %252 = sub i64 0, -5316036824802701080
  %253 = sub i64 %252, %241
  %254 = add i64 %253, -5316036824802701080
  %255 = sub i64 0, %241
  %256 = getelementptr inbounds i64, i64* %239, i64 %254
  %257 = bitcast i64* %256 to i8*
  %258 = load volatile i64**, i64*** %7
  %259 = load i64*, i64** %258, align 8
  %260 = bitcast i64* %259 to i8*
  %261 = load volatile i64*, i64** %5
  %262 = load i64, i64* %261, align 8
  %263 = shl i64 8, %262
  %264 = sub i64 0, %262
  %265 = add i64 8, %264
  %266 = sub i64 8, %262
  %267 = mul i64 %265, %262
  %268 = sub i64 8, 5943197356547295531
  %269 = sub i64 %268, %262
  %270 = add i64 %269, 5943197356547295531
  %271 = sub i64 8, %262
  %272 = mul i64 %270, %262
  %273 = sub i64 0, %262
  %274 = add i64 8, %273
  %275 = sub i64 8, %262
  %276 = mul i64 %274, %262
  %277 = sub i64 0, -273905922221021448
  %278 = sub i64 %277, 8
  %279 = add i64 %278, -273905922221021448
  %280 = sub i64 0, 8
  %281 = sub i64 0, %262
  %282 = sub i64 %279, %281
  %283 = add i64 %279, %262
  %284 = shl i64 8, %262
  %285 = mul i64 8, %262
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %257, i8* %260, i64 %285, i32 8, i1 false)
  store i32 -1189489547, i32* %19
  br label %286

; <label>:286:                                    ; preds = %237, %161, %150, %108, %80, %77, %31, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPxxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i64*, i64*, i64* dereferenceable(8)) #4 comdat {
  %4 = alloca i1
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64, align 8
  store i64* %0, i64** %5, align 8
  store i64* %1, i64** %6, align 8
  store i64* %2, i64** %7, align 8
  %9 = load i64*, i64** %7, align 8
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %8, align 8
  %11 = alloca i32
  store i32 1650357369, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %76
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1650357369, label %15
    i32 82154515, label %31
    i32 -1841896608, label %62
    i32 1441159659, label %65
    i32 -1904065187, label %68
    i32 206191919, label %71
    i32 702086145, label %72
  ]

; <label>:14:                                     ; preds = %12
  br label %76

; <label>:15:                                     ; preds = %12
  %16 = load i32, i32* @x.801
  %17 = load i32, i32* @y.802
  %18 = sub i32 %16, -1246011502
  %19 = sub i32 %18, 1
  %20 = add i32 %19, -1246011502
  %21 = sub i32 %16, 1
  %22 = mul i32 %16, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %17, 10
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 82154515, i32 702086145
  store i32 %30, i32* %11
  br label %76

; <label>:31:                                     ; preds = %12
  %32 = load i64*, i64** %5, align 8
  %33 = load i64*, i64** %6, align 8
  %34 = icmp ne i64* %32, %33
  store i1 %34, i1* %4
  %35 = load i32, i32* @x.801
  %36 = load i32, i32* @y.802
  %37 = sub i32 %35, 1450832120
  %38 = sub i32 %37, 1
  %39 = add i32 %38, 1450832120
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 -1841896608, i32 702086145
  store i32 %61, i32* %11
  br label %76

; <label>:62:                                     ; preds = %12
  %63 = load volatile i1, i1* %4
  %64 = select i1 %63, i32 1441159659, i32 206191919
  store i32 %64, i32* %11
  br label %76

; <label>:65:                                     ; preds = %12
  %66 = load i64, i64* %8, align 8
  %67 = load i64*, i64** %5, align 8
  store i64 %66, i64* %67, align 8
  store i32 -1904065187, i32* %11
  br label %76

; <label>:68:                                     ; preds = %12
  %69 = load i64*, i64** %5, align 8
  %70 = getelementptr inbounds i64, i64* %69, i32 1
  store i64* %70, i64** %5, align 8
  store i32 1650357369, i32* %11
  br label %76

; <label>:71:                                     ; preds = %12
  ret void

; <label>:72:                                     ; preds = %12
  %73 = load i64*, i64** %5, align 8
  %74 = load i64*, i64** %6, align 8
  %75 = icmp ne i64* %73, %74
  store i32 82154515, i32* %11
  br label %76

; <label>:76:                                     ; preds = %72, %68, %65, %62, %31, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt20uninitialized_fill_nIPxmxET_S1_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i64*, i64** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPxmxEET_S3_T0_RKT1_(i64* %8, i64 %9, i64* dereferenceable(8) %10)
  ret i64* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPxmxEET_S3_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = call i64* @_ZSt6fill_nIPxmxET_S1_T0_RKT1_(i64* %7, i64 %8, i64* dereferenceable(8) %9)
  ret i64* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.38"*, i64** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.38"*, align 8
  %4 = alloca i64**, align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %0, %"class.__gnu_cxx::__normal_iterator.38"** %3, align 8
  store i64** %1, i64*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %5, i32 0, i32 0
  %7 = load i64**, i64*** %4, align 8
  %8 = load i64*, i64** %7, align 8
  store i64* %8, i64** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EEC2Ev(%"struct.std::_Vector_base.32"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.32"*, align 8
  store %"struct.std::_Vector_base.32"* %0, %"struct.std::_Vector_base.32"** %2, align 8
  %3 = load %"struct.std::_Vector_base.32"*, %"struct.std::_Vector_base.32"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.811
  %5 = load i32, i32* @y.812
  %6 = add i32 %4, -2083103783
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -2083103783
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -896132961, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %68
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -896132961, label %18
    i32 -1339653320, label %38
    i32 -382299532, label %60
    i32 764579497, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %68

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1339653320, i32 764579497
  store i32 %37, i32* %14
  br label %68

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %39, align 8
  %40 = load %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %39, align 8
  %41 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %40 to %"class.std::allocator.33"*
  call void @_ZNSaISt4pairIxxEEC2Ev(%"class.std::allocator.33"* %41) #3
  %42 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %40, i32 0, i32 0
  store %"struct.std::pair.36"* null, %"struct.std::pair.36"** %42, align 8
  %43 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %40, i32 0, i32 1
  store %"struct.std::pair.36"* null, %"struct.std::pair.36"** %43, align 8
  %44 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %40, i32 0, i32 2
  store %"struct.std::pair.36"* null, %"struct.std::pair.36"** %44, align 8
  %45 = load i32, i32* @x.811
  %46 = load i32, i32* @y.812
  %47 = add i32 %45, 1645561870
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, 1645561870
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -382299532, i32 764579497
  store i32 %59, i32* %14
  br label %68

; <label>:60:                                     ; preds = %15
  ret void

; <label>:61:                                     ; preds = %15
  %62 = alloca %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %62, align 8
  %63 = load %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %62, align 8
  %64 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %63 to %"class.std::allocator.33"*
  call void @_ZNSaISt4pairIxxEEC2Ev(%"class.std::allocator.33"* %64) #3
  %65 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %63, i32 0, i32 0
  store %"struct.std::pair.36"* null, %"struct.std::pair.36"** %65, align 8
  %66 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %63, i32 0, i32 1
  store %"struct.std::pair.36"* null, %"struct.std::pair.36"** %66, align 8
  %67 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %63, i32 0, i32 2
  store %"struct.std::pair.36"* null, %"struct.std::pair.36"** %67, align 8
  store i32 -1339653320, i32* %14
  br label %68

; <label>:68:                                     ; preds = %61, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt4pairIxxEEC2Ev(%"class.std::allocator.33"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.33"*, align 8
  store %"class.std::allocator.33"* %0, %"class.std::allocator.33"** %2, align 8
  %3 = load %"class.std::allocator.33"*, %"class.std::allocator.33"** %2, align 8
  %4 = bitcast %"class.std::allocator.33"* %3 to %"class.__gnu_cxx::new_allocator.34"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEEC2Ev(%"class.__gnu_cxx::new_allocator.34"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEEC2Ev(%"class.__gnu_cxx::new_allocator.34"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.34"*, align 8
  store %"class.__gnu_cxx::new_allocator.34"* %0, %"class.__gnu_cxx::new_allocator.34"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.34"*, %"class.__gnu_cxx::new_allocator.34"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt4pairIxxES1_EvT_S3_RSaIT0_E(%"struct.std::pair.36"*, %"struct.std::pair.36"*, %"class.std::allocator.33"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"struct.std::pair.36"*, align 8
  %5 = alloca %"struct.std::pair.36"*, align 8
  %6 = alloca %"class.std::allocator.33"*, align 8
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %4, align 8
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %5, align 8
  store %"class.std::allocator.33"* %2, %"class.std::allocator.33"** %6, align 8
  %7 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %4, align 8
  %8 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %5, align 8
  call void @_ZSt8_DestroyIPSt4pairIxxEEvT_S3_(%"struct.std::pair.36"* %7, %"struct.std::pair.36"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.33"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.32"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.32"*, align 8
  store %"struct.std::_Vector_base.32"* %0, %"struct.std::_Vector_base.32"** %2, align 8
  %3 = load %"struct.std::_Vector_base.32"*, %"struct.std::_Vector_base.32"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %4 to %"class.std::allocator.33"*
  ret %"class.std::allocator.33"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EED2Ev(%"struct.std::_Vector_base.32"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.32"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.32"* %0, %"struct.std::_Vector_base.32"** %2, align 8
  %5 = load %"struct.std::_Vector_base.32"*, %"struct.std::_Vector_base.32"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %13, align 8
  %15 = ptrtoint %"struct.std::pair.36"* %11 to i64
  %16 = ptrtoint %"struct.std::pair.36"* %14 to i64
  %17 = add i64 %15, 8705167621031840149
  %18 = sub i64 %17, %16
  %19 = sub i64 %18, 8705167621031840149
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 16
  invoke void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.32"* %5, %"struct.std::pair.36"* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %28) #3
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %30) #12
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt4pairIxxEEvT_S3_(%"struct.std::pair.36"*, %"struct.std::pair.36"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.823
  %6 = load i32, i32* @y.824
  %7 = add i32 %5, 566756933
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 566756933
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -67223904, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -67223904, label %19
    i32 903928791, label %39
    i32 -1405107907, label %59
    i32 -650328922, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 903928791, i32 -650328922
  store i32 %38, i32* %15
  br label %65

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::pair.36"*, align 8
  %41 = alloca %"struct.std::pair.36"*, align 8
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %40, align 8
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %41, align 8
  %42 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %40, align 8
  %43 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %41, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPSt4pairIxxEEEvT_S5_(%"struct.std::pair.36"* %42, %"struct.std::pair.36"* %43)
  %44 = load i32, i32* @x.823
  %45 = load i32, i32* @y.824
  %46 = add i32 %44, -595329902
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -595329902
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -1405107907, i32 -650328922
  store i32 %58, i32* %15
  br label %65

; <label>:59:                                     ; preds = %16
  ret void

; <label>:60:                                     ; preds = %16
  %61 = alloca %"struct.std::pair.36"*, align 8
  %62 = alloca %"struct.std::pair.36"*, align 8
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %61, align 8
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %62, align 8
  %63 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %61, align 8
  %64 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %62, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPSt4pairIxxEEEvT_S5_(%"struct.std::pair.36"* %63, %"struct.std::pair.36"* %64)
  store i32 903928791, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPSt4pairIxxEEEvT_S5_(%"struct.std::pair.36"*, %"struct.std::pair.36"*) #4 comdat align 2 {
  %3 = alloca %"struct.std::pair.36"*, align 8
  %4 = alloca %"struct.std::pair.36"*, align 8
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %3, align 8
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.32"*, %"struct.std::pair.36"*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.std::pair.36"*
  %5 = alloca %"struct.std::_Vector_base.32"*
  %6 = alloca %"struct.std::_Vector_base.32"*, align 8
  %7 = alloca %"struct.std::pair.36"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.32"* %0, %"struct.std::_Vector_base.32"** %6, align 8
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.32"*, %"struct.std::_Vector_base.32"** %6, align 8
  store %"struct.std::_Vector_base.32"* %9, %"struct.std::_Vector_base.32"** %5
  %10 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %7, align 8
  store %"struct.std::pair.36"* %10, %"struct.std::pair.36"** %4
  %11 = alloca i32
  store i32 958503370, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %70
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 958503370, label %15
    i32 -254446742, label %19
    i32 -1602772454, label %25
    i32 469250762, label %52
    i32 -324182181, label %68
    i32 1264337770, label %69
  ]

; <label>:14:                                     ; preds = %12
  br label %70

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"struct.std::pair.36"*, %"struct.std::pair.36"** %4
  %17 = icmp ne %"struct.std::pair.36"* %16, null
  %18 = select i1 %17, i32 -254446742, i32 -1602772454
  store i32 %18, i32* %11
  br label %70

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.32"*, %"struct.std::_Vector_base.32"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %21 to %"class.std::allocator.33"*
  %23 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt4pairIxxEEE10deallocateERS2_PS1_m(%"class.std::allocator.33"* dereferenceable(1) %22, %"struct.std::pair.36"* %23, i64 %24)
  store i32 -1602772454, i32* %11
  br label %70

; <label>:25:                                     ; preds = %12
  %26 = load i32, i32* @x.827
  %27 = load i32, i32* @y.828
  %28 = sub i32 0, 1
  %29 = add i32 %26, %28
  %30 = sub i32 %26, 1
  %31 = mul i32 %26, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %27, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 false, true
  %38 = and i1 %35, false
  %39 = and i1 %33, %37
  %40 = and i1 %36, false
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 false, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  %51 = select i1 %49, i32 469250762, i32 1264337770
  store i32 %51, i32* %11
  br label %70

; <label>:52:                                     ; preds = %12
  %53 = load i32, i32* @x.827
  %54 = load i32, i32* @y.828
  %55 = add i32 %53, 1411319079
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, 1411319079
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 -324182181, i32 1264337770
  store i32 %67, i32* %11
  br label %70

; <label>:68:                                     ; preds = %12
  ret void

; <label>:69:                                     ; preds = %12
  store i32 469250762, i32* %11
  br label %70

; <label>:70:                                     ; preds = %69, %52, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %3 to %"class.std::allocator.33"*
  call void @_ZNSaISt4pairIxxEED2Ev(%"class.std::allocator.33"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIxxEEE10deallocateERS2_PS1_m(%"class.std::allocator.33"* dereferenceable(1), %"struct.std::pair.36"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.831
  %7 = load i32, i32* @y.832
  %8 = add i32 %6, 2056794502
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 2056794502
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1627309842, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %84
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1627309842, label %20
    i32 1986028279, label %40
    i32 1499686180, label %75
    i32 1674547378, label %76
  ]

; <label>:19:                                     ; preds = %17
  br label %84

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1986028279, i32 1674547378
  store i32 %39, i32* %16
  br label %84

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.33"*, align 8
  %42 = alloca %"struct.std::pair.36"*, align 8
  %43 = alloca i64, align 8
  store %"class.std::allocator.33"* %0, %"class.std::allocator.33"** %41, align 8
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.std::allocator.33"*, %"class.std::allocator.33"** %41, align 8
  %45 = bitcast %"class.std::allocator.33"* %44 to %"class.__gnu_cxx::new_allocator.34"*
  %46 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %42, align 8
  %47 = load i64, i64* %43, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.34"* %45, %"struct.std::pair.36"* %46, i64 %47)
  %48 = load i32, i32* @x.831
  %49 = load i32, i32* @y.832
  %50 = sub i32 %48, 2014796175
  %51 = sub i32 %50, 1
  %52 = add i32 %51, 2014796175
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 1499686180, i32 1674547378
  store i32 %74, i32* %16
  br label %84

; <label>:75:                                     ; preds = %17
  ret void

; <label>:76:                                     ; preds = %17
  %77 = alloca %"class.std::allocator.33"*, align 8
  %78 = alloca %"struct.std::pair.36"*, align 8
  %79 = alloca i64, align 8
  store %"class.std::allocator.33"* %0, %"class.std::allocator.33"** %77, align 8
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %78, align 8
  store i64 %2, i64* %79, align 8
  %80 = load %"class.std::allocator.33"*, %"class.std::allocator.33"** %77, align 8
  %81 = bitcast %"class.std::allocator.33"* %80 to %"class.__gnu_cxx::new_allocator.34"*
  %82 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %78, align 8
  %83 = load i64, i64* %79, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.34"* %81, %"struct.std::pair.36"* %82, i64 %83)
  store i32 1986028279, i32* %16
  br label %84

; <label>:84:                                     ; preds = %76, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.34"*, %"struct.std::pair.36"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.34"*, align 8
  %5 = alloca %"struct.std::pair.36"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.34"* %0, %"class.__gnu_cxx::new_allocator.34"** %4, align 8
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.34"*, %"class.__gnu_cxx::new_allocator.34"** %4, align 8
  %8 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %5, align 8
  %9 = bitcast %"struct.std::pair.36"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt4pairIxxEED2Ev(%"class.std::allocator.33"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.33"*, align 8
  store %"class.std::allocator.33"* %0, %"class.std::allocator.33"** %2, align 8
  %3 = load %"class.std::allocator.33"*, %"class.std::allocator.33"** %2, align 8
  %4 = bitcast %"class.std::allocator.33"* %3 to %"class.__gnu_cxx::new_allocator.34"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEED2Ev(%"class.__gnu_cxx::new_allocator.34"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEED2Ev(%"class.__gnu_cxx::new_allocator.34"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.34"*, align 8
  store %"class.__gnu_cxx::new_allocator.34"* %0, %"class.__gnu_cxx::new_allocator.34"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.34"*, %"class.__gnu_cxx::new_allocator.34"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.31"* @_ZSt4moveIRSt6vectorISt4pairIxxESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.31"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector.31"*, align 8
  store %"class.std::vector.31"* %0, %"class.std::vector.31"** %2, align 8
  %3 = load %"class.std::vector.31"*, %"class.std::vector.31"** %2, align 8
  ret %"class.std::vector.31"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIxxESaIS1_EEC2EOS3_(%"class.std::vector.31"*, %"class.std::vector.31"* dereferenceable(24)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::vector.31"*, align 8
  %4 = alloca %"class.std::vector.31"*, align 8
  store %"class.std::vector.31"* %0, %"class.std::vector.31"** %3, align 8
  store %"class.std::vector.31"* %1, %"class.std::vector.31"** %4, align 8
  %5 = load %"class.std::vector.31"*, %"class.std::vector.31"** %3, align 8
  %6 = bitcast %"class.std::vector.31"* %5 to %"struct.std::_Vector_base.32"*
  %7 = load %"class.std::vector.31"*, %"class.std::vector.31"** %4, align 8
  %8 = call dereferenceable(24) %"class.std::vector.31"* @_ZSt4moveIRSt6vectorISt4pairIxxESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.31"* dereferenceable(24) %7) #3
  %9 = bitcast %"class.std::vector.31"* %8 to %"struct.std::_Vector_base.32"*
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EEC2EOS3_(%"struct.std::_Vector_base.32"* %6, %"struct.std::_Vector_base.32"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt9make_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEESt7greaterIS3_EEvT_SB_T0_(%"struct.std::pair.36"*, %"struct.std::pair.36"*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %5 = alloca %"struct.std::greater", align 1
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %8 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %9 = alloca %"struct.std::greater", align 1
  %10 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %3, i32 0, i32 0
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %4, i32 0, i32 0
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %12, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.53"* %6 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.53"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.53"* %7 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.53"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt7greaterISt4pairIxxEEEENS0_15_Iter_comp_iterIT_EES7_()
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %6, i32 0, i32 0
  %18 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %7, i32 0, i32 0
  %20 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %19, align 8
  call void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_SE_T0_(%"struct.std::pair.36"* %18, %"struct.std::pair.36"* %20)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.36"* @_ZNSt6vectorISt4pairIxxESaIS1_EE5beginEv(%"class.std::vector.31"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %3 = alloca %"class.std::vector.31"*, align 8
  store %"class.std::vector.31"* %0, %"class.std::vector.31"** %3, align 8
  %4 = load %"class.std::vector.31"*, %"class.std::vector.31"** %3, align 8
  %5 = bitcast %"class.std::vector.31"* %4 to %"struct.std::_Vector_base.32"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.53"* %2, %"struct.std::pair.36"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %2, i32 0, i32 0
  %9 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %8, align 8
  ret %"struct.std::pair.36"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.36"* @_ZNSt6vectorISt4pairIxxESaIS1_EE3endEv(%"class.std::vector.31"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %3 = alloca %"class.std::vector.31"*, align 8
  store %"class.std::vector.31"* %0, %"class.std::vector.31"** %3, align 8
  %4 = load %"class.std::vector.31"*, %"class.std::vector.31"** %3, align 8
  %5 = bitcast %"class.std::vector.31"* %4 to %"struct.std::_Vector_base.32"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.53"* %2, %"struct.std::pair.36"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %2, i32 0, i32 0
  %9 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %8, align 8
  ret %"struct.std::pair.36"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EEC2EOS3_(%"struct.std::_Vector_base.32"*, %"struct.std::_Vector_base.32"* dereferenceable(24)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.32"*, align 8
  %4 = alloca %"struct.std::_Vector_base.32"*, align 8
  store %"struct.std::_Vector_base.32"* %0, %"struct.std::_Vector_base.32"** %3, align 8
  store %"struct.std::_Vector_base.32"* %1, %"struct.std::_Vector_base.32"** %4, align 8
  %5 = load %"struct.std::_Vector_base.32"*, %"struct.std::_Vector_base.32"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base.32"*, %"struct.std::_Vector_base.32"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.33"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.32"* %7) #3
  %9 = call dereferenceable(1) %"class.std::allocator.33"* @_ZSt4moveIRSaISt4pairIxxEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.33"* dereferenceable(1) %8) #3
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implC2EOS2_(%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %6, %"class.std::allocator.33"* dereferenceable(1) %9) #3
  %10 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %5, i32 0, i32 0
  %11 = load %"struct.std::_Vector_base.32"*, %"struct.std::_Vector_base.32"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %11, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %10, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* dereferenceable(24) %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.33"* @_ZSt4moveIRSaISt4pairIxxEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.33"* dereferenceable(1)) #4 comdat {
  %2 = alloca %"class.std::allocator.33"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.851
  %6 = load i32, i32* @y.852
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1235584411, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %49
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1235584411, label %18
    i32 -1650076059, label %26
    i32 932905102, label %44
    i32 -134968030, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %49

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1650076059, i32 -134968030
  store i32 %25, i32* %14
  br label %49

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.33"*, align 8
  store %"class.std::allocator.33"* %0, %"class.std::allocator.33"** %27, align 8
  %28 = load %"class.std::allocator.33"*, %"class.std::allocator.33"** %27, align 8
  store %"class.std::allocator.33"* %28, %"class.std::allocator.33"** %2
  %29 = load i32, i32* @x.851
  %30 = load i32, i32* @y.852
  %31 = sub i32 %29, -258190005
  %32 = sub i32 %31, 1
  %33 = add i32 %32, -258190005
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 932905102, i32 -134968030
  store i32 %43, i32* %14
  br label %49

; <label>:44:                                     ; preds = %15
  %45 = load volatile %"class.std::allocator.33"*, %"class.std::allocator.33"** %2
  ret %"class.std::allocator.33"* %45

; <label>:46:                                     ; preds = %15
  %47 = alloca %"class.std::allocator.33"*, align 8
  store %"class.std::allocator.33"* %0, %"class.std::allocator.33"** %47, align 8
  %48 = load %"class.std::allocator.33"*, %"class.std::allocator.33"** %47, align 8
  store i32 -1650076059, i32* %14
  br label %49

; <label>:49:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implC2EOS2_(%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, %"class.std::allocator.33"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.853
  %6 = load i32, i32* @y.854
  %7 = sub i32 %5, 1285957083
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1285957083
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 837103305, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %86
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 837103305, label %19
    i32 -1525994936, label %39
    i32 -1269872152, label %75
    i32 1184896444, label %76
  ]

; <label>:18:                                     ; preds = %16
  br label %86

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1525994936, i32 1184896444
  store i32 %38, i32* %15
  br label %86

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, align 8
  %41 = alloca %"class.std::allocator.33"*, align 8
  store %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %40, align 8
  store %"class.std::allocator.33"* %1, %"class.std::allocator.33"** %41, align 8
  %42 = load %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %40, align 8
  %43 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %42 to %"class.std::allocator.33"*
  %44 = load %"class.std::allocator.33"*, %"class.std::allocator.33"** %41, align 8
  %45 = call dereferenceable(1) %"class.std::allocator.33"* @_ZSt4moveIRSaISt4pairIxxEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.33"* dereferenceable(1) %44) #3
  call void @_ZNSaISt4pairIxxEEC2ERKS1_(%"class.std::allocator.33"* %43, %"class.std::allocator.33"* dereferenceable(1) %45) #3
  %46 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %42, i32 0, i32 0
  store %"struct.std::pair.36"* null, %"struct.std::pair.36"** %46, align 8
  %47 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %42, i32 0, i32 1
  store %"struct.std::pair.36"* null, %"struct.std::pair.36"** %47, align 8
  %48 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %42, i32 0, i32 2
  store %"struct.std::pair.36"* null, %"struct.std::pair.36"** %48, align 8
  %49 = load i32, i32* @x.853
  %50 = load i32, i32* @y.854
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 -1269872152, i32 1184896444
  store i32 %74, i32* %15
  br label %86

; <label>:75:                                     ; preds = %16
  ret void

; <label>:76:                                     ; preds = %16
  %77 = alloca %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, align 8
  %78 = alloca %"class.std::allocator.33"*, align 8
  store %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %77, align 8
  store %"class.std::allocator.33"* %1, %"class.std::allocator.33"** %78, align 8
  %79 = load %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %77, align 8
  %80 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %79 to %"class.std::allocator.33"*
  %81 = load %"class.std::allocator.33"*, %"class.std::allocator.33"** %78, align 8
  %82 = call dereferenceable(1) %"class.std::allocator.33"* @_ZSt4moveIRSaISt4pairIxxEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.33"* dereferenceable(1) %81) #3
  call void @_ZNSaISt4pairIxxEEC2ERKS1_(%"class.std::allocator.33"* %80, %"class.std::allocator.33"* dereferenceable(1) %82) #3
  %83 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %79, i32 0, i32 0
  store %"struct.std::pair.36"* null, %"struct.std::pair.36"** %83, align 8
  %84 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %79, i32 0, i32 1
  store %"struct.std::pair.36"* null, %"struct.std::pair.36"** %84, align 8
  %85 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %79, i32 0, i32 2
  store %"struct.std::pair.36"* null, %"struct.std::pair.36"** %85, align 8
  store i32 -1525994936, i32* %15
  br label %86

; <label>:86:                                     ; preds = %76, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* dereferenceable(24)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %1, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPSt4pairIxxEEvRT_S4_(%"struct.std::pair.36"** dereferenceable(8) %6, %"struct.std::pair.36"** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPSt4pairIxxEEvRT_S4_(%"struct.std::pair.36"** dereferenceable(8) %9, %"struct.std::pair.36"** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPSt4pairIxxEEvRT_S4_(%"struct.std::pair.36"** dereferenceable(8) %12, %"struct.std::pair.36"** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt4pairIxxEEC2ERKS1_(%"class.std::allocator.33"*, %"class.std::allocator.33"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.33"*, align 8
  %4 = alloca %"class.std::allocator.33"*, align 8
  store %"class.std::allocator.33"* %0, %"class.std::allocator.33"** %3, align 8
  store %"class.std::allocator.33"* %1, %"class.std::allocator.33"** %4, align 8
  %5 = load %"class.std::allocator.33"*, %"class.std::allocator.33"** %3, align 8
  %6 = bitcast %"class.std::allocator.33"* %5 to %"class.__gnu_cxx::new_allocator.34"*
  %7 = load %"class.std::allocator.33"*, %"class.std::allocator.33"** %4, align 8
  %8 = bitcast %"class.std::allocator.33"* %7 to %"class.__gnu_cxx::new_allocator.34"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.34"* %6, %"class.__gnu_cxx::new_allocator.34"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.34"*, %"class.__gnu_cxx::new_allocator.34"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.859
  %6 = load i32, i32* @y.860
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -63048246, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %50
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -63048246, label %18
    i32 -1774716204, label %26
    i32 375818633, label %45
    i32 361591857, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %50

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1774716204, i32 361591857
  store i32 %25, i32* %14
  br label %50

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.34"*, align 8
  %28 = alloca %"class.__gnu_cxx::new_allocator.34"*, align 8
  store %"class.__gnu_cxx::new_allocator.34"* %0, %"class.__gnu_cxx::new_allocator.34"** %27, align 8
  store %"class.__gnu_cxx::new_allocator.34"* %1, %"class.__gnu_cxx::new_allocator.34"** %28, align 8
  %29 = load %"class.__gnu_cxx::new_allocator.34"*, %"class.__gnu_cxx::new_allocator.34"** %27, align 8
  %30 = load i32, i32* @x.859
  %31 = load i32, i32* @y.860
  %32 = sub i32 %30, -1558404365
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -1558404365
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 375818633, i32 361591857
  store i32 %44, i32* %14
  br label %50

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca %"class.__gnu_cxx::new_allocator.34"*, align 8
  %48 = alloca %"class.__gnu_cxx::new_allocator.34"*, align 8
  store %"class.__gnu_cxx::new_allocator.34"* %0, %"class.__gnu_cxx::new_allocator.34"** %47, align 8
  store %"class.__gnu_cxx::new_allocator.34"* %1, %"class.__gnu_cxx::new_allocator.34"** %48, align 8
  %49 = load %"class.__gnu_cxx::new_allocator.34"*, %"class.__gnu_cxx::new_allocator.34"** %47, align 8
  store i32 -1774716204, i32* %14
  br label %50

; <label>:50:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPSt4pairIxxEEvRT_S4_(%"struct.std::pair.36"** dereferenceable(8), %"struct.std::pair.36"** dereferenceable(8)) #4 comdat {
  %3 = alloca %"struct.std::pair.36"**, align 8
  %4 = alloca %"struct.std::pair.36"**, align 8
  %5 = alloca %"struct.std::pair.36"*, align 8
  store %"struct.std::pair.36"** %0, %"struct.std::pair.36"*** %3, align 8
  store %"struct.std::pair.36"** %1, %"struct.std::pair.36"*** %4, align 8
  %6 = load %"struct.std::pair.36"**, %"struct.std::pair.36"*** %3, align 8
  %7 = call dereferenceable(8) %"struct.std::pair.36"** @_ZSt4moveIRPSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.std::pair.36"** dereferenceable(8) %6) #3
  %8 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %7, align 8
  store %"struct.std::pair.36"* %8, %"struct.std::pair.36"** %5, align 8
  %9 = load %"struct.std::pair.36"**, %"struct.std::pair.36"*** %4, align 8
  %10 = call dereferenceable(8) %"struct.std::pair.36"** @_ZSt4moveIRPSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.std::pair.36"** dereferenceable(8) %9) #3
  %11 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %10, align 8
  %12 = load %"struct.std::pair.36"**, %"struct.std::pair.36"*** %3, align 8
  store %"struct.std::pair.36"* %11, %"struct.std::pair.36"** %12, align 8
  %13 = call dereferenceable(8) %"struct.std::pair.36"** @_ZSt4moveIRPSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.std::pair.36"** dereferenceable(8) %5) #3
  %14 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %13, align 8
  %15 = load %"struct.std::pair.36"**, %"struct.std::pair.36"*** %4, align 8
  store %"struct.std::pair.36"* %14, %"struct.std::pair.36"** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::pair.36"** @_ZSt4moveIRPSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.std::pair.36"** dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::pair.36"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.863
  %6 = load i32, i32* @y.864
  %7 = add i32 %5, 1965304564
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1965304564
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1105547576, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1105547576, label %19
    i32 -1671730047, label %39
    i32 -1649754709, label %69
    i32 -35735085, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1671730047, i32 -35735085
  store i32 %38, i32* %15
  br label %74

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::pair.36"**, align 8
  store %"struct.std::pair.36"** %0, %"struct.std::pair.36"*** %40, align 8
  %41 = load %"struct.std::pair.36"**, %"struct.std::pair.36"*** %40, align 8
  store %"struct.std::pair.36"** %41, %"struct.std::pair.36"*** %2
  %42 = load i32, i32* @x.863
  %43 = load i32, i32* @y.864
  %44 = add i32 %42, 862781462
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 862781462
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -1649754709, i32 -35735085
  store i32 %68, i32* %15
  br label %74

; <label>:69:                                     ; preds = %16
  %70 = load volatile %"struct.std::pair.36"**, %"struct.std::pair.36"*** %2
  ret %"struct.std::pair.36"** %70

; <label>:71:                                     ; preds = %16
  %72 = alloca %"struct.std::pair.36"**, align 8
  store %"struct.std::pair.36"** %0, %"struct.std::pair.36"*** %72, align 8
  %73 = load %"struct.std::pair.36"**, %"struct.std::pair.36"*** %72, align 8
  store i32 -1671730047, i32* %15
  br label %74

; <label>:74:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_SE_T0_(%"struct.std::pair.36"*, %"struct.std::pair.36"*) #0 comdat {
  %3 = alloca i64
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"struct.std::pair.36", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %12 = alloca %"struct.std::pair.36", align 8
  %13 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %4, i32 0, i32 0
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %5, i32 0, i32 0
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %15, align 8
  %16 = call i64 @_ZN9__gnu_cxxmiIPSt4pairIxxESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.53"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.53"* dereferenceable(8) %4) #3
  store i64 %16, i64* %3
  %17 = alloca i32
  store i32 633949572, i32* %17
  br label %18

; <label>:18:                                     ; preds = %2, %242
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 633949572, label %21
    i32 1711819165, label %25
    i32 -429704034, label %26
    i32 -2109769148, label %41
    i32 3478919, label %75
    i32 -674372766, label %76
    i32 696775037, label %103
    i32 -518655537, label %104
    i32 1941987810, label %120
    i32 -2048259019, label %140
    i32 546185853, label %141
    i32 -1350819376, label %142
    i32 270869005, label %203
  ]

; <label>:20:                                     ; preds = %18
  br label %242

; <label>:21:                                     ; preds = %18
  %22 = load volatile i64, i64* %3
  %23 = icmp slt i64 %22, 2
  %24 = select i1 %23, i32 1711819165, i32 -429704034
  store i32 %24, i32* %17
  br label %242

; <label>:25:                                     ; preds = %18
  store i32 546185853, i32* %17
  br label %242

; <label>:26:                                     ; preds = %18
  %27 = load i32, i32* @x.865
  %28 = load i32, i32* @y.866
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  %40 = select i1 %38, i32 -2109769148, i32 -1350819376
  store i32 %40, i32* %17
  br label %242

; <label>:41:                                     ; preds = %18
  %42 = call i64 @_ZN9__gnu_cxxmiIPSt4pairIxxESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.53"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.53"* dereferenceable(8) %4) #3
  store i64 %42, i64* %7, align 8
  %43 = load i64, i64* %7, align 8
  %44 = add i64 %43, 4292144357993454580
  %45 = sub i64 %44, 2
  %46 = sub i64 %45, 4292144357993454580
  %47 = sub nsw i64 %43, 2
  %48 = sdiv i64 %46, 2
  store i64 %48, i64* %8, align 8
  %49 = load i32, i32* @x.865
  %50 = load i32, i32* @y.866
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 3478919, i32 -1350819376
  store i32 %74, i32* %17
  br label %242

; <label>:75:                                     ; preds = %18
  store i32 -674372766, i32* %17
  br label %242

; <label>:76:                                     ; preds = %18
  %77 = load i64, i64* %8, align 8
  %78 = call %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.53"* %4, i64 %77) #3
  %79 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %10, i32 0, i32 0
  store %"struct.std::pair.36"* %78, %"struct.std::pair.36"** %79, align 8
  %80 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.53"* %10) #3
  %81 = call dereferenceable(16) %"struct.std::pair.36"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.36"* dereferenceable(16) %80) #3
  %82 = bitcast %"struct.std::pair.36"* %9 to i8*
  %83 = bitcast %"struct.std::pair.36"* %81 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %82, i8* %83, i64 16, i32 8, i1 false)
  %84 = bitcast %"class.__gnu_cxx::__normal_iterator.53"* %11 to i8*
  %85 = bitcast %"class.__gnu_cxx::__normal_iterator.53"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %84, i8* %85, i64 8, i32 8, i1 false)
  %86 = load i64, i64* %8, align 8
  %87 = load i64, i64* %7, align 8
  %88 = call dereferenceable(16) %"struct.std::pair.36"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.36"* dereferenceable(16) %9) #3
  %89 = bitcast %"struct.std::pair.36"* %12 to i8*
  %90 = bitcast %"struct.std::pair.36"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %89, i8* %90, i64 16, i32 8, i1 false)
  %91 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %13 to i8*
  %92 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %91, i8* %92, i64 1, i32 1, i1 false)
  %93 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %11, i32 0, i32 0
  %94 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %93, align 8
  %95 = bitcast %"struct.std::pair.36"* %12 to { i64, i64 }*
  %96 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %95, i32 0, i32 0
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %95, i32 0, i32 1
  %99 = load i64, i64* %98, align 8
  call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_T0_SF_T1_T2_(%"struct.std::pair.36"* %94, i64 %86, i64 %87, i64 %97, i64 %99)
  %100 = load i64, i64* %8, align 8
  %101 = icmp eq i64 %100, 0
  %102 = select i1 %101, i32 696775037, i32 -518655537
  store i32 %102, i32* %17
  br label %242

; <label>:103:                                    ; preds = %18
  store i32 546185853, i32* %17
  br label %242

; <label>:104:                                    ; preds = %18
  %105 = load i32, i32* @x.865
  %106 = load i32, i32* @y.866
  %107 = sub i32 %105, 1060052414
  %108 = sub i32 %107, 1
  %109 = add i32 %108, 1060052414
  %110 = sub i32 %105, 1
  %111 = mul i32 %105, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %106, 10
  %115 = and i1 %113, %114
  %116 = xor i1 %113, %114
  %117 = or i1 %115, %116
  %118 = or i1 %113, %114
  %119 = select i1 %117, i32 1941987810, i32 270869005
  store i32 %119, i32* %17
  br label %242

; <label>:120:                                    ; preds = %18
  %121 = load i64, i64* %8, align 8
  %122 = sub i64 %121, 2543872921132692454
  %123 = add i64 %122, -1
  %124 = add i64 %123, 2543872921132692454
  %125 = add nsw i64 %121, -1
  store i64 %124, i64* %8, align 8
  %126 = load i32, i32* @x.865
  %127 = load i32, i32* @y.866
  %128 = sub i32 0, 1
  %129 = add i32 %126, %128
  %130 = sub i32 %126, 1
  %131 = mul i32 %126, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %127, 10
  %135 = and i1 %133, %134
  %136 = xor i1 %133, %134
  %137 = or i1 %135, %136
  %138 = or i1 %133, %134
  %139 = select i1 %137, i32 -2048259019, i32 270869005
  store i32 %139, i32* %17
  br label %242

; <label>:140:                                    ; preds = %18
  store i32 -674372766, i32* %17
  br label %242

; <label>:141:                                    ; preds = %18
  ret void

; <label>:142:                                    ; preds = %18
  %143 = call i64 @_ZN9__gnu_cxxmiIPSt4pairIxxESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.53"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.53"* dereferenceable(8) %4) #3
  store i64 %143, i64* %7, align 8
  %144 = load i64, i64* %7, align 8
  %145 = add i64 %144, 7977091237071497048
  %146 = sub i64 %145, 2
  %147 = sub i64 %146, 7977091237071497048
  %148 = sub i64 %144, 2
  %149 = mul i64 %147, 2
  %150 = shl i64 %144, 2
  %151 = sub i64 0, %144
  %152 = add i64 0, %151
  %153 = sub i64 0, %144
  %154 = sub i64 0, %152
  %155 = sub i64 0, 2
  %156 = add i64 %154, %155
  %157 = sub i64 0, %156
  %158 = add i64 %152, 2
  %159 = shl i64 %144, 2
  %160 = add i64 %144, 2772727644435729998
  %161 = sub i64 %160, 2
  %162 = sub i64 %161, 2772727644435729998
  %163 = sub i64 %144, 2
  %164 = mul i64 %162, 2
  %165 = add i64 %144, 4918635266320266330
  %166 = sub i64 %165, 2
  %167 = sub i64 %166, 4918635266320266330
  %168 = sub nsw i64 %144, 2
  %169 = sub i64 0, 2
  %170 = add i64 %167, %169
  %171 = sub i64 %167, 2
  %172 = mul i64 %170, 2
  %173 = sub i64 0, -2637910435218060763
  %174 = sub i64 %173, %167
  %175 = add i64 %174, -2637910435218060763
  %176 = sub i64 0, %167
  %177 = sub i64 0, 2
  %178 = sub i64 %175, %177
  %179 = add i64 %175, 2
  %180 = sub i64 %167, 1384116611729429434
  %181 = sub i64 %180, 2
  %182 = add i64 %181, 1384116611729429434
  %183 = sub i64 %167, 2
  %184 = mul i64 %182, 2
  %185 = add i64 0, 6339347548328524387
  %186 = sub i64 %185, %167
  %187 = sub i64 %186, 6339347548328524387
  %188 = sub i64 0, %167
  %189 = sub i64 0, %187
  %190 = sub i64 0, 2
  %191 = add i64 %189, %190
  %192 = sub i64 0, %191
  %193 = add i64 %187, 2
  %194 = sub i64 0, -416361512336895932
  %195 = sub i64 %194, %167
  %196 = add i64 %195, -416361512336895932
  %197 = sub i64 0, %167
  %198 = add i64 %196, -6183696900343415688
  %199 = add i64 %198, 2
  %200 = sub i64 %199, -6183696900343415688
  %201 = add i64 %196, 2
  %202 = sdiv i64 %167, 2
  store i64 %202, i64* %8, align 8
  store i32 -2109769148, i32* %17
  br label %242

; <label>:203:                                    ; preds = %18
  %204 = load i64, i64* %8, align 8
  %205 = shl i64 %204, -1
  %206 = shl i64 %204, -1
  %207 = add i64 0, -6231483704250833636
  %208 = sub i64 %207, %204
  %209 = sub i64 %208, -6231483704250833636
  %210 = sub i64 0, %204
  %211 = add i64 %209, 6059858380642724243
  %212 = add i64 %211, -1
  %213 = sub i64 %212, 6059858380642724243
  %214 = add i64 %209, -1
  %215 = add i64 0, 5767582304427235168
  %216 = sub i64 %215, %204
  %217 = sub i64 %216, 5767582304427235168
  %218 = sub i64 0, %204
  %219 = sub i64 0, %217
  %220 = sub i64 0, -1
  %221 = add i64 %219, %220
  %222 = sub i64 0, %221
  %223 = add i64 %217, -1
  %224 = shl i64 %204, -1
  %225 = shl i64 %204, -1
  %226 = sub i64 0, -3973507951923979869
  %227 = sub i64 %226, %204
  %228 = add i64 %227, -3973507951923979869
  %229 = sub i64 0, %204
  %230 = sub i64 %228, 5692064272390951839
  %231 = add i64 %230, -1
  %232 = add i64 %231, 5692064272390951839
  %233 = add i64 %228, -1
  %234 = sub i64 0, -1
  %235 = add i64 %204, %234
  %236 = sub i64 %204, -1
  %237 = mul i64 %235, -1
  %238 = sub i64 %204, -6687236909291044757
  %239 = add i64 %238, -1
  %240 = add i64 %239, -6687236909291044757
  %241 = add nsw i64 %204, -1
  store i64 %240, i64* %8, align 8
  store i32 1941987810, i32* %17
  br label %242

; <label>:242:                                    ; preds = %203, %142, %140, %120, %104, %103, %76, %75, %41, %26, %25, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt7greaterISt4pairIxxEEEENS0_15_Iter_comp_iterIT_EES7_() #0 comdat {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.867
  %4 = load i32, i32* @y.868
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %2
  %11 = icmp slt i32 %4, 10
  store i1 %11, i1* %1
  %12 = alloca i32
  store i32 1183153758, i32* %12
  br label %13

; <label>:13:                                     ; preds = %0, %71
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1183153758, label %16
    i32 -196687990, label %36
    i32 1512814164, label %66
    i32 407420963, label %67
  ]

; <label>:15:                                     ; preds = %13
  br label %71

; <label>:16:                                     ; preds = %13
  %17 = load volatile i1, i1* %2
  %18 = load volatile i1, i1* %1
  %19 = xor i1 %17, true
  %20 = xor i1 %18, true
  %21 = xor i1 true, true
  %22 = and i1 %19, true
  %23 = and i1 %17, %21
  %24 = and i1 %20, true
  %25 = and i1 %18, %21
  %26 = or i1 %22, %23
  %27 = or i1 %24, %25
  %28 = xor i1 %26, %27
  %29 = or i1 %19, %20
  %30 = xor i1 %29, true
  %31 = or i1 true, %21
  %32 = and i1 %30, %31
  %33 = or i1 %28, %32
  %34 = or i1 %17, %18
  %35 = select i1 %33, i32 -196687990, i32 407420963
  store i32 %35, i32* %12
  br label %71

; <label>:36:                                     ; preds = %13
  %37 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %38 = alloca %"struct.std::greater", align 1
  %39 = alloca %"struct.std::greater", align 1
  call void @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt7greaterISt4pairIxxEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %37)
  %40 = load i32, i32* @x.867
  %41 = load i32, i32* @y.868
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 1512814164, i32 407420963
  store i32 %65, i32* %12
  br label %71

; <label>:66:                                     ; preds = %13
  ret void

; <label>:67:                                     ; preds = %13
  %68 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %69 = alloca %"struct.std::greater", align 1
  %70 = alloca %"struct.std::greater", align 1
  call void @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt7greaterISt4pairIxxEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %68)
  store i32 -196687990, i32* %12
  br label %71

; <label>:71:                                     ; preds = %67, %36, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPSt4pairIxxESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.53"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.53"* dereferenceable(8)) #4 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.53"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.53"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.53"* %0, %"class.__gnu_cxx::__normal_iterator.53"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.53"* %1, %"class.__gnu_cxx::__normal_iterator.53"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %3, align 8
  %6 = call dereferenceable(8) %"struct.std::pair.36"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.53"* %5) #3
  %7 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %4, align 8
  %9 = call dereferenceable(8) %"struct.std::pair.36"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.53"* %8) #3
  %10 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %9, align 8
  %11 = ptrtoint %"struct.std::pair.36"* %7 to i64
  %12 = ptrtoint %"struct.std::pair.36"* %10 to i64
  %13 = add i64 %11, 5955281045026986942
  %14 = sub i64 %13, %12
  %15 = sub i64 %14, 5955281045026986942
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 16
  ret i64 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair.36"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.36"* dereferenceable(16)) #4 comdat {
  %2 = alloca %"struct.std::pair.36"*, align 8
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %2, align 8
  %3 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %2, align 8
  ret %"struct.std::pair.36"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.53"*, i64) #4 comdat align 2 {
  %3 = alloca %"struct.std::pair.36"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.873
  %7 = load i32, i32* @y.874
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1844602717, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %79
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1844602717, label %19
    i32 1506870404, label %39
    i32 1360170842, label %65
    i32 887303420, label %67
  ]

; <label>:18:                                     ; preds = %16
  br label %79

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1506870404, i32 887303420
  store i32 %38, i32* %15
  br label %79

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.53"*, align 8
  %42 = alloca i64, align 8
  %43 = alloca %"struct.std::pair.36"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.53"* %0, %"class.__gnu_cxx::__normal_iterator.53"** %41, align 8
  store i64 %1, i64* %42, align 8
  %44 = load %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %41, align 8
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %44, i32 0, i32 0
  %46 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %45, align 8
  %47 = load i64, i64* %42, align 8
  %48 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %46, i64 %47
  store %"struct.std::pair.36"* %48, %"struct.std::pair.36"** %43, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.53"* %40, %"struct.std::pair.36"** dereferenceable(8) %43) #3
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %40, i32 0, i32 0
  %50 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %49, align 8
  store %"struct.std::pair.36"* %50, %"struct.std::pair.36"** %3
  %51 = load i32, i32* @x.873
  %52 = load i32, i32* @y.874
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 1360170842, i32 887303420
  store i32 %64, i32* %15
  br label %79

; <label>:65:                                     ; preds = %16
  %66 = load volatile %"struct.std::pair.36"*, %"struct.std::pair.36"** %3
  ret %"struct.std::pair.36"* %66

; <label>:67:                                     ; preds = %16
  %68 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %69 = alloca %"class.__gnu_cxx::__normal_iterator.53"*, align 8
  %70 = alloca i64, align 8
  %71 = alloca %"struct.std::pair.36"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.53"* %0, %"class.__gnu_cxx::__normal_iterator.53"** %69, align 8
  store i64 %1, i64* %70, align 8
  %72 = load %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %69, align 8
  %73 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %72, i32 0, i32 0
  %74 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %73, align 8
  %75 = load i64, i64* %70, align 8
  %76 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %74, i64 %75
  store %"struct.std::pair.36"* %76, %"struct.std::pair.36"** %71, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.53"* %68, %"struct.std::pair.36"** dereferenceable(8) %71) #3
  %77 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %68, i32 0, i32 0
  %78 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %77, align 8
  store i32 1506870404, i32* %15
  br label %79

; <label>:79:                                     ; preds = %67, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.53"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.53"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.53"* %0, %"class.__gnu_cxx::__normal_iterator.53"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %3, i32 0, i32 0
  %5 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %4, align 8
  ret %"struct.std::pair.36"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_T0_SF_T1_T2_(%"struct.std::pair.36"*, i64, i64, i64, i64) #0 comdat {
  %6 = alloca i1
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*
  %8 = alloca %"struct.std::pair.36"*
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.53"*
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.53"*
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.53"*
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.53"*
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.53"*
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.53"*
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.53"*
  %16 = alloca i64*
  %17 = alloca i64*
  %18 = alloca i64*
  %19 = alloca i64*
  %20 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*
  %21 = alloca %"struct.std::pair.36"*
  %22 = alloca %"class.__gnu_cxx::__normal_iterator.53"*
  %23 = alloca i1
  %24 = alloca i1
  %25 = load i32, i32* @x.877
  %26 = load i32, i32* @y.878
  %27 = add i32 %25, 457474179
  %28 = sub i32 %27, 1
  %29 = sub i32 %28, 457474179
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  store i1 %33, i1* %24
  %34 = icmp slt i32 %26, 10
  store i1 %34, i1* %23
  %35 = alloca i32
  store i32 1805455437, i32* %35
  br label %36

; <label>:36:                                     ; preds = %5, %357
  %37 = load i32, i32* %35
  switch i32 %37, label %38 [
    i32 1805455437, label %39
    i32 891020419, label %47
    i32 1283696169, label %94
    i32 2049055456, label %95
    i32 402798115, label %122
    i32 1056677151, label %158
    i32 226686935, label %161
    i32 -819498086, label %194
    i32 1184711774, label %202
    i32 -1073569986, label %224
    i32 2033184229, label %233
    i32 -880101040, label %245
    i32 702080315, label %283
    i32 1853492485, label %310
    i32 1631701518, label %335
  ]

; <label>:38:                                     ; preds = %36
  br label %357

; <label>:39:                                     ; preds = %36
  %40 = load volatile i1, i1* %24
  %41 = load volatile i1, i1* %23
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 891020419, i32 1853492485
  store i32 %46, i32* %35
  br label %357

; <label>:47:                                     ; preds = %36
  %48 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  store %"class.__gnu_cxx::__normal_iterator.53"* %48, %"class.__gnu_cxx::__normal_iterator.53"** %22
  %49 = alloca %"struct.std::pair.36", align 8
  store %"struct.std::pair.36"* %49, %"struct.std::pair.36"** %21
  %50 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %50, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %20
  %51 = alloca i64, align 8
  store i64* %51, i64** %19
  %52 = alloca i64, align 8
  store i64* %52, i64** %18
  %53 = alloca i64, align 8
  store i64* %53, i64** %17
  %54 = alloca i64, align 8
  store i64* %54, i64** %16
  %55 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  store %"class.__gnu_cxx::__normal_iterator.53"* %55, %"class.__gnu_cxx::__normal_iterator.53"** %15
  %56 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  store %"class.__gnu_cxx::__normal_iterator.53"* %56, %"class.__gnu_cxx::__normal_iterator.53"** %14
  %57 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  store %"class.__gnu_cxx::__normal_iterator.53"* %57, %"class.__gnu_cxx::__normal_iterator.53"** %13
  %58 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  store %"class.__gnu_cxx::__normal_iterator.53"* %58, %"class.__gnu_cxx::__normal_iterator.53"** %12
  %59 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  store %"class.__gnu_cxx::__normal_iterator.53"* %59, %"class.__gnu_cxx::__normal_iterator.53"** %11
  %60 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  store %"class.__gnu_cxx::__normal_iterator.53"* %60, %"class.__gnu_cxx::__normal_iterator.53"** %10
  %61 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  store %"class.__gnu_cxx::__normal_iterator.53"* %61, %"class.__gnu_cxx::__normal_iterator.53"** %9
  %62 = alloca %"struct.std::pair.36", align 8
  store %"struct.std::pair.36"* %62, %"struct.std::pair.36"** %8
  %63 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %64 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %64, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %7
  %65 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %66 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %22
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %66, i32 0, i32 0
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %67, align 8
  %68 = load volatile %"struct.std::pair.36"*, %"struct.std::pair.36"** %21
  %69 = bitcast %"struct.std::pair.36"* %68 to { i64, i64 }*
  %70 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %69, i32 0, i32 0
  store i64 %3, i64* %70, align 8
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %69, i32 0, i32 1
  store i64 %4, i64* %71, align 8
  %72 = load volatile i64*, i64** %19
  store i64 %1, i64* %72, align 8
  %73 = load volatile i64*, i64** %18
  store i64 %2, i64* %73, align 8
  %74 = load volatile i64*, i64** %19
  %75 = load i64, i64* %74, align 8
  %76 = load volatile i64*, i64** %17
  store i64 %75, i64* %76, align 8
  %77 = load volatile i64*, i64** %19
  %78 = load i64, i64* %77, align 8
  %79 = load volatile i64*, i64** %16
  store i64 %78, i64* %79, align 8
  %80 = load i32, i32* @x.877
  %81 = load i32, i32* @y.878
  %82 = sub i32 0, 1
  %83 = add i32 %80, %82
  %84 = sub i32 %80, 1
  %85 = mul i32 %80, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %81, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  %93 = select i1 %91, i32 1283696169, i32 1853492485
  store i32 %93, i32* %35
  br label %357

; <label>:94:                                     ; preds = %36
  store i32 2049055456, i32* %35
  br label %357

; <label>:95:                                     ; preds = %36
  %96 = load i32, i32* @x.877
  %97 = load i32, i32* @y.878
  %98 = sub i32 0, 1
  %99 = add i32 %96, %98
  %100 = sub i32 %96, 1
  %101 = mul i32 %96, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %97, 10
  %105 = xor i1 %103, true
  %106 = xor i1 %104, true
  %107 = xor i1 false, true
  %108 = and i1 %105, false
  %109 = and i1 %103, %107
  %110 = and i1 %106, false
  %111 = and i1 %104, %107
  %112 = or i1 %108, %109
  %113 = or i1 %110, %111
  %114 = xor i1 %112, %113
  %115 = or i1 %105, %106
  %116 = xor i1 %115, true
  %117 = or i1 false, %107
  %118 = and i1 %116, %117
  %119 = or i1 %114, %118
  %120 = or i1 %103, %104
  %121 = select i1 %119, i32 402798115, i32 1631701518
  store i32 %121, i32* %35
  br label %357

; <label>:122:                                    ; preds = %36
  %123 = load volatile i64*, i64** %16
  %124 = load i64, i64* %123, align 8
  %125 = load volatile i64*, i64** %18
  %126 = load i64, i64* %125, align 8
  %127 = sub i64 0, 1
  %128 = add i64 %126, %127
  %129 = sub nsw i64 %126, 1
  %130 = sdiv i64 %128, 2
  %131 = icmp slt i64 %124, %130
  store i1 %131, i1* %6
  %132 = load i32, i32* @x.877
  %133 = load i32, i32* @y.878
  %134 = sub i32 0, 1
  %135 = add i32 %132, %134
  %136 = sub i32 %132, 1
  %137 = mul i32 %132, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %133, 10
  %141 = xor i1 %139, true
  %142 = xor i1 %140, true
  %143 = xor i1 false, true
  %144 = and i1 %141, false
  %145 = and i1 %139, %143
  %146 = and i1 %142, false
  %147 = and i1 %140, %143
  %148 = or i1 %144, %145
  %149 = or i1 %146, %147
  %150 = xor i1 %148, %149
  %151 = or i1 %141, %142
  %152 = xor i1 %151, true
  %153 = or i1 false, %143
  %154 = and i1 %152, %153
  %155 = or i1 %150, %154
  %156 = or i1 %139, %140
  %157 = select i1 %155, i32 1056677151, i32 1631701518
  store i32 %157, i32* %35
  br label %357

; <label>:158:                                    ; preds = %36
  %159 = load volatile i1, i1* %6
  %160 = select i1 %159, i32 226686935, i32 -1073569986
  store i32 %160, i32* %35
  br label %357

; <label>:161:                                    ; preds = %36
  %162 = load volatile i64*, i64** %16
  %163 = load i64, i64* %162, align 8
  %164 = sub i64 0, 1
  %165 = sub i64 %163, %164
  %166 = add nsw i64 %163, 1
  %167 = mul nsw i64 2, %165
  %168 = load volatile i64*, i64** %16
  store i64 %167, i64* %168, align 8
  %169 = load volatile i64*, i64** %16
  %170 = load i64, i64* %169, align 8
  %171 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %22
  %172 = call %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.53"* %171, i64 %170) #3
  %173 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %15
  %174 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %173, i32 0, i32 0
  store %"struct.std::pair.36"* %172, %"struct.std::pair.36"** %174, align 8
  %175 = load volatile i64*, i64** %16
  %176 = load i64, i64* %175, align 8
  %177 = add i64 %176, 7336070108304900098
  %178 = sub i64 %177, 1
  %179 = sub i64 %178, 7336070108304900098
  %180 = sub nsw i64 %176, 1
  %181 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %22
  %182 = call %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.53"* %181, i64 %179) #3
  %183 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %14
  %184 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %183, i32 0, i32 0
  store %"struct.std::pair.36"* %182, %"struct.std::pair.36"** %184, align 8
  %185 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %15
  %186 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %185, i32 0, i32 0
  %187 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %186, align 8
  %188 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %14
  %189 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %188, i32 0, i32 0
  %190 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %189, align 8
  %191 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %20
  %192 = call zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt7greaterISt4pairIxxEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEESD_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %191, %"struct.std::pair.36"* %187, %"struct.std::pair.36"* %190)
  %193 = select i1 %192, i32 -819498086, i32 1184711774
  store i32 %193, i32* %35
  br label %357

; <label>:194:                                    ; preds = %36
  %195 = load volatile i64*, i64** %16
  %196 = load i64, i64* %195, align 8
  %197 = add i64 %196, -6049806966000999671
  %198 = add i64 %197, -1
  %199 = sub i64 %198, -6049806966000999671
  %200 = add nsw i64 %196, -1
  %201 = load volatile i64*, i64** %16
  store i64 %199, i64* %201, align 8
  store i32 1184711774, i32* %35
  br label %357

; <label>:202:                                    ; preds = %36
  %203 = load volatile i64*, i64** %16
  %204 = load i64, i64* %203, align 8
  %205 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %22
  %206 = call %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.53"* %205, i64 %204) #3
  %207 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %13
  %208 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %207, i32 0, i32 0
  store %"struct.std::pair.36"* %206, %"struct.std::pair.36"** %208, align 8
  %209 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %13
  %210 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.53"* %209) #3
  %211 = call dereferenceable(16) %"struct.std::pair.36"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.36"* dereferenceable(16) %210) #3
  %212 = load volatile i64*, i64** %19
  %213 = load i64, i64* %212, align 8
  %214 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %22
  %215 = call %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.53"* %214, i64 %213) #3
  %216 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %12
  %217 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %216, i32 0, i32 0
  store %"struct.std::pair.36"* %215, %"struct.std::pair.36"** %217, align 8
  %218 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %12
  %219 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.53"* %218) #3
  %220 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNSt4pairIxxEaSEOS0_(%"struct.std::pair.36"* %219, %"struct.std::pair.36"* dereferenceable(16) %211) #3
  %221 = load volatile i64*, i64** %16
  %222 = load i64, i64* %221, align 8
  %223 = load volatile i64*, i64** %19
  store i64 %222, i64* %223, align 8
  store i32 2049055456, i32* %35
  br label %357

; <label>:224:                                    ; preds = %36
  %225 = load volatile i64*, i64** %18
  %226 = load i64, i64* %225, align 8
  %227 = xor i64 1, -1
  %228 = xor i64 %226, %227
  %229 = and i64 %228, %226
  %230 = and i64 %226, 1
  %231 = icmp eq i64 %229, 0
  %232 = select i1 %231, i32 2033184229, i32 702080315
  store i32 %232, i32* %35
  br label %357

; <label>:233:                                    ; preds = %36
  %234 = load volatile i64*, i64** %16
  %235 = load i64, i64* %234, align 8
  %236 = load volatile i64*, i64** %18
  %237 = load i64, i64* %236, align 8
  %238 = add i64 %237, 2448165096564417974
  %239 = sub i64 %238, 2
  %240 = sub i64 %239, 2448165096564417974
  %241 = sub nsw i64 %237, 2
  %242 = sdiv i64 %240, 2
  %243 = icmp eq i64 %235, %242
  %244 = select i1 %243, i32 -880101040, i32 702080315
  store i32 %244, i32* %35
  br label %357

; <label>:245:                                    ; preds = %36
  %246 = load volatile i64*, i64** %16
  %247 = load i64, i64* %246, align 8
  %248 = sub i64 %247, 2151539758043277090
  %249 = add i64 %248, 1
  %250 = add i64 %249, 2151539758043277090
  %251 = add nsw i64 %247, 1
  %252 = mul nsw i64 2, %250
  %253 = load volatile i64*, i64** %16
  store i64 %252, i64* %253, align 8
  %254 = load volatile i64*, i64** %16
  %255 = load i64, i64* %254, align 8
  %256 = add i64 %255, -2961324245751660838
  %257 = sub i64 %256, 1
  %258 = sub i64 %257, -2961324245751660838
  %259 = sub nsw i64 %255, 1
  %260 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %22
  %261 = call %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.53"* %260, i64 %258) #3
  %262 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %11
  %263 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %262, i32 0, i32 0
  store %"struct.std::pair.36"* %261, %"struct.std::pair.36"** %263, align 8
  %264 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %11
  %265 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.53"* %264) #3
  %266 = call dereferenceable(16) %"struct.std::pair.36"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.36"* dereferenceable(16) %265) #3
  %267 = load volatile i64*, i64** %19
  %268 = load i64, i64* %267, align 8
  %269 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %22
  %270 = call %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.53"* %269, i64 %268) #3
  %271 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %10
  %272 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %271, i32 0, i32 0
  store %"struct.std::pair.36"* %270, %"struct.std::pair.36"** %272, align 8
  %273 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %10
  %274 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.53"* %273) #3
  %275 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNSt4pairIxxEaSEOS0_(%"struct.std::pair.36"* %274, %"struct.std::pair.36"* dereferenceable(16) %266) #3
  %276 = load volatile i64*, i64** %16
  %277 = load i64, i64* %276, align 8
  %278 = add i64 %277, 1675656869144305185
  %279 = sub i64 %278, 1
  %280 = sub i64 %279, 1675656869144305185
  %281 = sub nsw i64 %277, 1
  %282 = load volatile i64*, i64** %19
  store i64 %280, i64* %282, align 8
  store i32 702080315, i32* %35
  br label %357

; <label>:283:                                    ; preds = %36
  %284 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %9
  %285 = bitcast %"class.__gnu_cxx::__normal_iterator.53"* %284 to i8*
  %286 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %22
  %287 = bitcast %"class.__gnu_cxx::__normal_iterator.53"* %286 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %285, i8* %287, i64 8, i32 8, i1 false)
  %288 = load volatile i64*, i64** %19
  %289 = load i64, i64* %288, align 8
  %290 = load volatile i64*, i64** %17
  %291 = load i64, i64* %290, align 8
  %292 = load volatile %"struct.std::pair.36"*, %"struct.std::pair.36"** %21
  %293 = call dereferenceable(16) %"struct.std::pair.36"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.36"* dereferenceable(16) %292) #3
  %294 = load volatile %"struct.std::pair.36"*, %"struct.std::pair.36"** %8
  %295 = bitcast %"struct.std::pair.36"* %294 to i8*
  %296 = bitcast %"struct.std::pair.36"* %293 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %295, i8* %296, i64 16, i32 8, i1 false)
  %297 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %7
  %298 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %297 to i8*
  %299 = load volatile %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %20
  %300 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %299 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %298, i8* %300, i64 1, i32 1, i1 false)
  call void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt7greaterISt4pairIxxEEEENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS7_EE()
  %301 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %9
  %302 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %301, i32 0, i32 0
  %303 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %302, align 8
  %304 = load volatile %"struct.std::pair.36"*, %"struct.std::pair.36"** %8
  %305 = bitcast %"struct.std::pair.36"* %304 to { i64, i64 }*
  %306 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %305, i32 0, i32 0
  %307 = load i64, i64* %306, align 8
  %308 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %305, i32 0, i32 1
  %309 = load i64, i64* %308, align 8
  call void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops14_Iter_comp_valISt7greaterIS3_EEEEvT_T0_SF_T1_T2_(%"struct.std::pair.36"* %303, i64 %289, i64 %291, i64 %307, i64 %309)
  ret void

; <label>:310:                                    ; preds = %36
  %311 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %312 = alloca %"struct.std::pair.36", align 8
  %313 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %314 = alloca i64, align 8
  %315 = alloca i64, align 8
  %316 = alloca i64, align 8
  %317 = alloca i64, align 8
  %318 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %319 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %320 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %321 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %322 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %323 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %324 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %325 = alloca %"struct.std::pair.36", align 8
  %326 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %327 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %328 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %329 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %311, i32 0, i32 0
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %329, align 8
  %330 = bitcast %"struct.std::pair.36"* %312 to { i64, i64 }*
  %331 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %330, i32 0, i32 0
  store i64 %3, i64* %331, align 8
  %332 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %330, i32 0, i32 1
  store i64 %4, i64* %332, align 8
  store i64 %1, i64* %314, align 8
  store i64 %2, i64* %315, align 8
  %333 = load i64, i64* %314, align 8
  store i64 %333, i64* %316, align 8
  %334 = load i64, i64* %314, align 8
  store i64 %334, i64* %317, align 8
  store i32 891020419, i32* %35
  br label %357

; <label>:335:                                    ; preds = %36
  %336 = load volatile i64*, i64** %16
  %337 = load i64, i64* %336, align 8
  %338 = load volatile i64*, i64** %18
  %339 = load i64, i64* %338, align 8
  %340 = shl i64 %339, 1
  %341 = shl i64 %339, 1
  %342 = add i64 0, 511470754473187123
  %343 = sub i64 %342, %339
  %344 = sub i64 %343, 511470754473187123
  %345 = sub i64 0, %339
  %346 = sub i64 %344, -6715072516617808811
  %347 = add i64 %346, 1
  %348 = add i64 %347, -6715072516617808811
  %349 = add i64 %344, 1
  %350 = sub i64 %339, -9175151094357132990
  %351 = sub i64 %350, 1
  %352 = add i64 %351, -9175151094357132990
  %353 = sub nsw i64 %339, 1
  %354 = shl i64 %352, 2
  %355 = sdiv i64 %352, 2
  %356 = icmp slt i64 %337, %355
  store i32 402798115, i32* %35
  br label %357

; <label>:357:                                    ; preds = %335, %310, %245, %233, %224, %202, %194, %161, %158, %122, %95, %94, %47, %39, %38
  br label %36
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::pair.36"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.53"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.53"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.53"* %0, %"class.__gnu_cxx::__normal_iterator.53"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %3, i32 0, i32 0
  ret %"struct.std::pair.36"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.53"*, %"struct.std::pair.36"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.53"*, align 8
  %4 = alloca %"struct.std::pair.36"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.53"* %0, %"class.__gnu_cxx::__normal_iterator.53"** %3, align 8
  store %"struct.std::pair.36"** %1, %"struct.std::pair.36"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %5, i32 0, i32 0
  %7 = load %"struct.std::pair.36"**, %"struct.std::pair.36"*** %4, align 8
  %8 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %7, align 8
  store %"struct.std::pair.36"* %8, %"struct.std::pair.36"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt7greaterISt4pairIxxEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEESD_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.std::pair.36"*, %"struct.std::pair.36"*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %4, i32 0, i32 0
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %7, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %5, i32 0, i32 0
  store %"struct.std::pair.36"* %2, %"struct.std::pair.36"** %8, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %6, align 8
  %9 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %6, align 8
  %10 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %9, i32 0, i32 0
  %11 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.53"* %4) #3
  %12 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.53"* %5) #3
  %13 = call zeroext i1 @_ZNKSt7greaterISt4pairIxxEEclERKS1_S4_(%"struct.std::greater"* %10, %"struct.std::pair.36"* dereferenceable(16) %11, %"struct.std::pair.36"* dereferenceable(16) %12)
  ret i1 %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair.36"* @_ZNSt4pairIxxEaSEOS0_(%"struct.std::pair.36"*, %"struct.std::pair.36"* dereferenceable(16)) #4 comdat align 2 {
  %3 = alloca %"struct.std::pair.36"*, align 8
  %4 = alloca %"struct.std::pair.36"*, align 8
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %3, align 8
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %4, align 8
  %5 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %3, align 8
  %6 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %4, align 8
  %7 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %6, i32 0, i32 0
  %8 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %7) #3
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %5, i32 0, i32 0
  store i64 %9, i64* %10, align 8
  %11 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %11, i32 0, i32 1
  %13 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %12) #3
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %5, i32 0, i32 1
  store i64 %14, i64* %15, align 8
  ret %"struct.std::pair.36"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops14_Iter_comp_valISt7greaterIS3_EEEEvT_T0_SF_T1_T2_(%"struct.std::pair.36"*, i64, i64, i64, i64) #0 comdat {
  %6 = alloca i1
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %8 = alloca %"struct.std::pair.36", align 8
  %9 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %7, i32 0, i32 0
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %17, align 8
  %18 = bitcast %"struct.std::pair.36"* %8 to { i64, i64 }*
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 0
  store i64 %3, i64* %19, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %18, i32 0, i32 1
  store i64 %4, i64* %20, align 8
  store i64 %1, i64* %10, align 8
  store i64 %2, i64* %11, align 8
  %21 = load i64, i64* %10, align 8
  %22 = add i64 %21, 785497386623668108
  %23 = sub i64 %22, 1
  %24 = sub i64 %23, 785497386623668108
  %25 = sub nsw i64 %21, 1
  %26 = sdiv i64 %24, 2
  store i64 %26, i64* %12, align 8
  %27 = alloca i32
  store i32 362473010, i32* %27
  %28 = alloca i1
  br label %29

; <label>:29:                                     ; preds = %5, %202
  %30 = load i32, i32* %27
  switch i32 %30, label %31 [
    i32 362473010, label %32
    i32 1646115727, label %59
    i32 -1014464563, label %78
    i32 148991668, label %81
    i32 -880676515, label %88
    i32 672459893, label %91
    i32 -2052838628, label %107
    i32 -316172835, label %151
    i32 1923833126, label %152
    i32 824912287, label %159
    i32 -111962085, label %163
  ]

; <label>:31:                                     ; preds = %29
  br label %202

; <label>:32:                                     ; preds = %29
  %33 = load i32, i32* @x.887
  %34 = load i32, i32* @y.888
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 1646115727, i32 824912287
  store i32 %58, i32* %27
  br label %202

; <label>:59:                                     ; preds = %29
  %60 = load i64, i64* %10, align 8
  %61 = load i64, i64* %11, align 8
  %62 = icmp sgt i64 %60, %61
  store i1 %62, i1* %6
  %63 = load i32, i32* @x.887
  %64 = load i32, i32* @y.888
  %65 = sub i32 %63, 1904372173
  %66 = sub i32 %65, 1
  %67 = add i32 %66, 1904372173
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = and i1 %71, %72
  %74 = xor i1 %71, %72
  %75 = or i1 %73, %74
  %76 = or i1 %71, %72
  %77 = select i1 %75, i32 -1014464563, i32 824912287
  store i32 %77, i32* %27
  br label %202

; <label>:78:                                     ; preds = %29
  %79 = load volatile i1, i1* %6
  %80 = select i1 %79, i32 148991668, i32 -880676515
  store i32 %80, i32* %27
  store i1 false, i1* %28
  br label %202

; <label>:81:                                     ; preds = %29
  %82 = load i64, i64* %12, align 8
  %83 = call %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.53"* %7, i64 %82) #3
  %84 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %13, i32 0, i32 0
  store %"struct.std::pair.36"* %83, %"struct.std::pair.36"** %84, align 8
  %85 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %13, i32 0, i32 0
  %86 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %85, align 8
  %87 = call zeroext i1 @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt7greaterISt4pairIxxEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEES4_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %9, %"struct.std::pair.36"* %86, %"struct.std::pair.36"* dereferenceable(16) %8)
  store i32 -880676515, i32* %27
  store i1 %87, i1* %28
  br label %202

; <label>:88:                                     ; preds = %29
  %89 = load i1, i1* %28
  %90 = select i1 %89, i32 672459893, i32 1923833126
  store i32 %90, i32* %27
  br label %202

; <label>:91:                                     ; preds = %29
  %92 = load i32, i32* @x.887
  %93 = load i32, i32* @y.888
  %94 = add i32 %92, 215121536
  %95 = sub i32 %94, 1
  %96 = sub i32 %95, 215121536
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  %106 = select i1 %104, i32 -2052838628, i32 -111962085
  store i32 %106, i32* %27
  br label %202

; <label>:107:                                    ; preds = %29
  %108 = load i64, i64* %12, align 8
  %109 = call %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.53"* %7, i64 %108) #3
  %110 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %14, i32 0, i32 0
  store %"struct.std::pair.36"* %109, %"struct.std::pair.36"** %110, align 8
  %111 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.53"* %14) #3
  %112 = call dereferenceable(16) %"struct.std::pair.36"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.36"* dereferenceable(16) %111) #3
  %113 = load i64, i64* %10, align 8
  %114 = call %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.53"* %7, i64 %113) #3
  %115 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %15, i32 0, i32 0
  store %"struct.std::pair.36"* %114, %"struct.std::pair.36"** %115, align 8
  %116 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.53"* %15) #3
  %117 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNSt4pairIxxEaSEOS0_(%"struct.std::pair.36"* %116, %"struct.std::pair.36"* dereferenceable(16) %112) #3
  %118 = load i64, i64* %12, align 8
  store i64 %118, i64* %10, align 8
  %119 = load i64, i64* %10, align 8
  %120 = sub i64 %119, -5218502671778367424
  %121 = sub i64 %120, 1
  %122 = add i64 %121, -5218502671778367424
  %123 = sub nsw i64 %119, 1
  %124 = sdiv i64 %122, 2
  store i64 %124, i64* %12, align 8
  %125 = load i32, i32* @x.887
  %126 = load i32, i32* @y.888
  %127 = sub i32 0, 1
  %128 = add i32 %125, %127
  %129 = sub i32 %125, 1
  %130 = mul i32 %125, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %126, 10
  %134 = xor i1 %132, true
  %135 = xor i1 %133, true
  %136 = xor i1 false, true
  %137 = and i1 %134, false
  %138 = and i1 %132, %136
  %139 = and i1 %135, false
  %140 = and i1 %133, %136
  %141 = or i1 %137, %138
  %142 = or i1 %139, %140
  %143 = xor i1 %141, %142
  %144 = or i1 %134, %135
  %145 = xor i1 %144, true
  %146 = or i1 false, %136
  %147 = and i1 %145, %146
  %148 = or i1 %143, %147
  %149 = or i1 %132, %133
  %150 = select i1 %148, i32 -316172835, i32 -111962085
  store i32 %150, i32* %27
  br label %202

; <label>:151:                                    ; preds = %29
  store i32 362473010, i32* %27
  br label %202

; <label>:152:                                    ; preds = %29
  %153 = call dereferenceable(16) %"struct.std::pair.36"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.36"* dereferenceable(16) %8) #3
  %154 = load i64, i64* %10, align 8
  %155 = call %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.53"* %7, i64 %154) #3
  %156 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %16, i32 0, i32 0
  store %"struct.std::pair.36"* %155, %"struct.std::pair.36"** %156, align 8
  %157 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.53"* %16) #3
  %158 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNSt4pairIxxEaSEOS0_(%"struct.std::pair.36"* %157, %"struct.std::pair.36"* dereferenceable(16) %153) #3
  ret void

; <label>:159:                                    ; preds = %29
  %160 = load i64, i64* %10, align 8
  %161 = load i64, i64* %11, align 8
  %162 = icmp sgt i64 %160, %161
  store i32 1646115727, i32* %27
  br label %202

; <label>:163:                                    ; preds = %29
  %164 = load i64, i64* %12, align 8
  %165 = call %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.53"* %7, i64 %164) #3
  %166 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %14, i32 0, i32 0
  store %"struct.std::pair.36"* %165, %"struct.std::pair.36"** %166, align 8
  %167 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.53"* %14) #3
  %168 = call dereferenceable(16) %"struct.std::pair.36"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.36"* dereferenceable(16) %167) #3
  %169 = load i64, i64* %10, align 8
  %170 = call %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEplEl(%"class.__gnu_cxx::__normal_iterator.53"* %7, i64 %169) #3
  %171 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %15, i32 0, i32 0
  store %"struct.std::pair.36"* %170, %"struct.std::pair.36"** %171, align 8
  %172 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.53"* %15) #3
  %173 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNSt4pairIxxEaSEOS0_(%"struct.std::pair.36"* %172, %"struct.std::pair.36"* dereferenceable(16) %168) #3
  %174 = load i64, i64* %12, align 8
  store i64 %174, i64* %10, align 8
  %175 = load i64, i64* %10, align 8
  %176 = shl i64 %175, 1
  %177 = shl i64 %175, 1
  %178 = sub i64 0, 1
  %179 = add i64 %175, %178
  %180 = sub i64 %175, 1
  %181 = mul i64 %179, 1
  %182 = add i64 %175, -2945508265000550815
  %183 = sub i64 %182, 1
  %184 = sub i64 %183, -2945508265000550815
  %185 = sub i64 %175, 1
  %186 = mul i64 %184, 1
  %187 = add i64 %175, 7134370469514165785
  %188 = sub i64 %187, 1
  %189 = sub i64 %188, 7134370469514165785
  %190 = sub i64 %175, 1
  %191 = mul i64 %189, 1
  %192 = add i64 %175, 435828019345336769
  %193 = sub i64 %192, 1
  %194 = sub i64 %193, 435828019345336769
  %195 = sub nsw i64 %175, 1
  %196 = add i64 %194, 7649792956375668740
  %197 = sub i64 %196, 2
  %198 = sub i64 %197, 7649792956375668740
  %199 = sub i64 %194, 2
  %200 = mul i64 %198, 2
  %201 = sdiv i64 %194, 2
  store i64 %201, i64* %12, align 8
  store i32 -2052838628, i32* %27
  br label %202

; <label>:202:                                    ; preds = %163, %159, %151, %107, %91, %88, %81, %78, %59, %32, %31
  br label %29
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt7greaterISt4pairIxxEEEENS0_14_Iter_comp_valIT_EENS0_15_Iter_comp_iterIS7_EE() #0 comdat {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %2 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %3 = alloca %"struct.std::greater", align 1
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %2, i32 0, i32 0
  call void @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt7greaterISt4pairIxxEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %1)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNKSt7greaterISt4pairIxxEEclERKS1_S4_(%"struct.std::greater"*, %"struct.std::pair.36"* dereferenceable(16), %"struct.std::pair.36"* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca %"struct.std::greater"*, align 8
  %5 = alloca %"struct.std::pair.36"*, align 8
  %6 = alloca %"struct.std::pair.36"*, align 8
  store %"struct.std::greater"* %0, %"struct.std::greater"** %4, align 8
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %5, align 8
  store %"struct.std::pair.36"* %2, %"struct.std::pair.36"** %6, align 8
  %7 = load %"struct.std::greater"*, %"struct.std::greater"** %4, align 8
  %8 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %5, align 8
  %9 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %6, align 8
  %10 = call zeroext i1 @_ZStgtIxxEbRKSt4pairIT_T0_ES5_(%"struct.std::pair.36"* dereferenceable(16) %8, %"struct.std::pair.36"* dereferenceable(16) %9)
  ret i1 %10
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStgtIxxEbRKSt4pairIT_T0_ES5_(%"struct.std::pair.36"* dereferenceable(16), %"struct.std::pair.36"* dereferenceable(16)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.893
  %7 = load i32, i32* @y.894
  %8 = add i32 %6, -19251757
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -19251757
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1950873333, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %81
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1950873333, label %20
    i32 -734818594, label %40
    i32 1414379713, label %73
    i32 1532575766, label %75
  ]

; <label>:19:                                     ; preds = %17
  br label %81

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -734818594, i32 1532575766
  store i32 %39, i32* %16
  br label %81

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::pair.36"*, align 8
  %42 = alloca %"struct.std::pair.36"*, align 8
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %41, align 8
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %42, align 8
  %43 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %42, align 8
  %44 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %41, align 8
  %45 = call zeroext i1 @_ZStltIxxEbRKSt4pairIT_T0_ES5_(%"struct.std::pair.36"* dereferenceable(16) %43, %"struct.std::pair.36"* dereferenceable(16) %44)
  store i1 %45, i1* %3
  %46 = load i32, i32* @x.893
  %47 = load i32, i32* @y.894
  %48 = sub i32 %46, 522386228
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 522386228
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 1414379713, i32 1532575766
  store i32 %72, i32* %16
  br label %81

; <label>:73:                                     ; preds = %17
  %74 = load volatile i1, i1* %3
  ret i1 %74

; <label>:75:                                     ; preds = %17
  %76 = alloca %"struct.std::pair.36"*, align 8
  %77 = alloca %"struct.std::pair.36"*, align 8
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %76, align 8
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %77, align 8
  %78 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %77, align 8
  %79 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %76, align 8
  %80 = call zeroext i1 @_ZStltIxxEbRKSt4pairIT_T0_ES5_(%"struct.std::pair.36"* dereferenceable(16) %78, %"struct.std::pair.36"* dereferenceable(16) %79)
  store i32 -734818594, i32* %16
  br label %81

; <label>:81:                                     ; preds = %75, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZStltIxxEbRKSt4pairIT_T0_ES5_(%"struct.std::pair.36"* dereferenceable(16), %"struct.std::pair.36"* dereferenceable(16)) #4 comdat {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca %"struct.std::pair.36"*, align 8
  %6 = alloca %"struct.std::pair.36"*, align 8
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %5, align 8
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %6, align 8
  %7 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %5, align 8
  %8 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %7, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %4
  %10 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %6, align 8
  %11 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %10, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %3
  %13 = alloca i32
  store i32 1471444250, i32* %13
  %14 = alloca i1
  %15 = alloca i1
  br label %16

; <label>:16:                                     ; preds = %2, %45
  %17 = load i32, i32* %13
  switch i32 %17, label %18 [
    i32 1471444250, label %19
    i32 527945518, label %24
    i32 -789808845, label %33
    i32 1091755675, label %41
    i32 1082700891, label %43
  ]

; <label>:18:                                     ; preds = %16
  br label %45

; <label>:19:                                     ; preds = %16
  %20 = load volatile i64, i64* %4
  %21 = load volatile i64, i64* %3
  %22 = icmp slt i64 %20, %21
  %23 = select i1 %22, i32 1082700891, i32 527945518
  store i32 %23, i32* %13
  store i1 true, i1* %15
  br label %45

; <label>:24:                                     ; preds = %16
  %25 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %6, align 8
  %26 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %25, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %5, align 8
  %29 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %28, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = icmp slt i64 %27, %30
  %32 = select i1 %31, i32 1091755675, i32 -789808845
  store i32 %32, i32* %13
  store i1 false, i1* %14
  br label %45

; <label>:33:                                     ; preds = %16
  %34 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %5, align 8
  %35 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %34, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %6, align 8
  %38 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %37, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = icmp slt i64 %36, %39
  store i32 1091755675, i32* %13
  store i1 %40, i1* %14
  br label %45

; <label>:41:                                     ; preds = %16
  %42 = load i1, i1* %14
  store i32 1082700891, i32* %13
  store i1 %42, i1* %15
  br label %45

; <label>:43:                                     ; preds = %16
  %44 = load i1, i1* %15
  ret i1 %44

; <label>:45:                                     ; preds = %41, %33, %24, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt7greaterISt4pairIxxEEEclINS_17__normal_iteratorIPS4_St6vectorIS4_SaIS4_EEEES4_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.std::pair.36"*, %"struct.std::pair.36"* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.899
  %8 = load i32, i32* @y.900
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 1234982529, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %64
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1234982529, label %20
    i32 989897287, label %28
    i32 -910942878, label %52
    i32 -533129027, label %54
  ]

; <label>:19:                                     ; preds = %17
  br label %64

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 989897287, i32 -533129027
  store i32 %27, i32* %16
  br label %64

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %30 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, align 8
  %31 = alloca %"struct.std::pair.36"*, align 8
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %29, i32 0, i32 0
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %32, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %30, align 8
  store %"struct.std::pair.36"* %2, %"struct.std::pair.36"** %31, align 8
  %33 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %30, align 8
  %34 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val", %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %33, i32 0, i32 0
  %35 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.53"* %29) #3
  %36 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %31, align 8
  %37 = call zeroext i1 @_ZNKSt7greaterISt4pairIxxEEclERKS1_S4_(%"struct.std::greater"* %34, %"struct.std::pair.36"* dereferenceable(16) %35, %"struct.std::pair.36"* dereferenceable(16) %36)
  store i1 %37, i1* %4
  %38 = load i32, i32* @x.899
  %39 = load i32, i32* @y.900
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 -910942878, i32 -533129027
  store i32 %51, i32* %16
  br label %64

; <label>:52:                                     ; preds = %17
  %53 = load volatile i1, i1* %4
  ret i1 %53

; <label>:54:                                     ; preds = %17
  %55 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %56 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, align 8
  %57 = alloca %"struct.std::pair.36"*, align 8
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %55, i32 0, i32 0
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %58, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %56, align 8
  store %"struct.std::pair.36"* %2, %"struct.std::pair.36"** %57, align 8
  %59 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %56, align 8
  %60 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val", %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %59, i32 0, i32 0
  %61 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.53"* %55) #3
  %62 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %57, align 8
  %63 = call zeroext i1 @_ZNKSt7greaterISt4pairIxxEEclERKS1_S4_(%"struct.std::greater"* %60, %"struct.std::pair.36"* dereferenceable(16) %61, %"struct.std::pair.36"* dereferenceable(16) %62)
  store i32 989897287, i32* %16
  br label %64

; <label>:64:                                     ; preds = %54, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt7greaterISt4pairIxxEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::greater", align 1
  %3 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %3, align 8
  %4 = load %"struct.__gnu_cxx::__ops::_Iter_comp_val"*, %"struct.__gnu_cxx::__ops::_Iter_comp_val"** %3, align 8
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_val", %"struct.__gnu_cxx::__ops::_Iter_comp_val"* %4, i32 0, i32 0
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15_Iter_comp_iterISt7greaterISt4pairIxxEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_iter"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::greater", align 1
  %3 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %3, align 8
  %4 = load %"struct.__gnu_cxx::__ops::_Iter_comp_iter"*, %"struct.__gnu_cxx::__ops::_Iter_comp_iter"** %3, align 8
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_comp_iter", %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %4, i32 0, i32 0
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIxxESaIS1_EE12emplace_backIJRxRiEEEvDpOT_(%"class.std::vector.31"*, i64* dereferenceable(8), i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca %"struct.std::pair.36"*
  %5 = alloca %"struct.std::pair.36"*
  %6 = alloca %"class.std::vector.31"*
  %7 = alloca %"class.std::vector.31"*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i32*, align 8
  store %"class.std::vector.31"* %0, %"class.std::vector.31"** %7, align 8
  store i64* %1, i64** %8, align 8
  store i32* %2, i32** %9, align 8
  %10 = load %"class.std::vector.31"*, %"class.std::vector.31"** %7, align 8
  store %"class.std::vector.31"* %10, %"class.std::vector.31"** %6
  %11 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %6
  %12 = bitcast %"class.std::vector.31"* %11 to %"struct.std::_Vector_base.32"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %12, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %13, i32 0, i32 1
  %15 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %14, align 8
  store %"struct.std::pair.36"* %15, %"struct.std::pair.36"** %5
  %16 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %6
  %17 = bitcast %"class.std::vector.31"* %16 to %"struct.std::_Vector_base.32"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %18, i32 0, i32 2
  %20 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %19, align 8
  store %"struct.std::pair.36"* %20, %"struct.std::pair.36"** %4
  %21 = alloca i32
  store i32 1013400266, i32* %21
  br label %22

; <label>:22:                                     ; preds = %3, %214
  %23 = load i32, i32* %21
  switch i32 %23, label %24 [
    i32 1013400266, label %25
    i32 2114004550, label %30
    i32 1232954342, label %46
    i32 984037805, label %81
    i32 -867371670, label %82
    i32 -1987646992, label %110
    i32 228874924, label %142
    i32 327462643, label %143
    i32 -1378674114, label %170
    i32 -2061015291, label %186
    i32 1253696769, label %187
    i32 1648208747, label %207
    i32 1017935856, label %213
  ]

; <label>:24:                                     ; preds = %22
  br label %214

; <label>:25:                                     ; preds = %22
  %26 = load volatile %"struct.std::pair.36"*, %"struct.std::pair.36"** %5
  %27 = load volatile %"struct.std::pair.36"*, %"struct.std::pair.36"** %4
  %28 = icmp ne %"struct.std::pair.36"* %26, %27
  %29 = select i1 %28, i32 2114004550, i32 -867371670
  store i32 %29, i32* %21
  br label %214

; <label>:30:                                     ; preds = %22
  %31 = load i32, i32* @x.905
  %32 = load i32, i32* @y.906
  %33 = add i32 %31, -302456729
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -302456729
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 1232954342, i32 1253696769
  store i32 %45, i32* %21
  br label %214

; <label>:46:                                     ; preds = %22
  %47 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %6
  %48 = bitcast %"class.std::vector.31"* %47 to %"struct.std::_Vector_base.32"*
  %49 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %48, i32 0, i32 0
  %50 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %49 to %"class.std::allocator.33"*
  %51 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %6
  %52 = bitcast %"class.std::vector.31"* %51 to %"struct.std::_Vector_base.32"*
  %53 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %52, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %53, i32 0, i32 1
  %55 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %54, align 8
  %56 = load i64*, i64** %8, align 8
  %57 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %56) #3
  %58 = load i32*, i32** %9, align 8
  %59 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %58) #3
  call void @_ZNSt16allocator_traitsISaISt4pairIxxEEE9constructIS1_JRxRiEEEvRS2_PT_DpOT0_(%"class.std::allocator.33"* dereferenceable(1) %50, %"struct.std::pair.36"* %55, i64* dereferenceable(8) %57, i32* dereferenceable(4) %59)
  %60 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %6
  %61 = bitcast %"class.std::vector.31"* %60 to %"struct.std::_Vector_base.32"*
  %62 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %61, i32 0, i32 0
  %63 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %62, i32 0, i32 1
  %64 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %63, align 8
  %65 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %64, i32 1
  store %"struct.std::pair.36"* %65, %"struct.std::pair.36"** %63, align 8
  %66 = load i32, i32* @x.905
  %67 = load i32, i32* @y.906
  %68 = sub i32 %66, 676813157
  %69 = sub i32 %68, 1
  %70 = add i32 %69, 676813157
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = and i1 %74, %75
  %77 = xor i1 %74, %75
  %78 = or i1 %76, %77
  %79 = or i1 %74, %75
  %80 = select i1 %78, i32 984037805, i32 1253696769
  store i32 %80, i32* %21
  br label %214

; <label>:81:                                     ; preds = %22
  store i32 327462643, i32* %21
  br label %214

; <label>:82:                                     ; preds = %22
  %83 = load i32, i32* @x.905
  %84 = load i32, i32* @y.906
  %85 = add i32 %83, -229138058
  %86 = sub i32 %85, 1
  %87 = sub i32 %86, -229138058
  %88 = sub i32 %83, 1
  %89 = mul i32 %83, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %84, 10
  %93 = xor i1 %91, true
  %94 = xor i1 %92, true
  %95 = xor i1 true, true
  %96 = and i1 %93, true
  %97 = and i1 %91, %95
  %98 = and i1 %94, true
  %99 = and i1 %92, %95
  %100 = or i1 %96, %97
  %101 = or i1 %98, %99
  %102 = xor i1 %100, %101
  %103 = or i1 %93, %94
  %104 = xor i1 %103, true
  %105 = or i1 true, %95
  %106 = and i1 %104, %105
  %107 = or i1 %102, %106
  %108 = or i1 %91, %92
  %109 = select i1 %107, i32 -1987646992, i32 1648208747
  store i32 %109, i32* %21
  br label %214

; <label>:110:                                    ; preds = %22
  %111 = load i64*, i64** %8, align 8
  %112 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %111) #3
  %113 = load i32*, i32** %9, align 8
  %114 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %113) #3
  %115 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %6
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EE19_M_emplace_back_auxIJRxRiEEEvDpOT_(%"class.std::vector.31"* %115, i64* dereferenceable(8) %112, i32* dereferenceable(4) %114)
  %116 = load i32, i32* @x.905
  %117 = load i32, i32* @y.906
  %118 = sub i32 0, 1
  %119 = add i32 %116, %118
  %120 = sub i32 %116, 1
  %121 = mul i32 %116, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %117, 10
  %125 = xor i1 %123, true
  %126 = xor i1 %124, true
  %127 = xor i1 true, true
  %128 = and i1 %125, true
  %129 = and i1 %123, %127
  %130 = and i1 %126, true
  %131 = and i1 %124, %127
  %132 = or i1 %128, %129
  %133 = or i1 %130, %131
  %134 = xor i1 %132, %133
  %135 = or i1 %125, %126
  %136 = xor i1 %135, true
  %137 = or i1 true, %127
  %138 = and i1 %136, %137
  %139 = or i1 %134, %138
  %140 = or i1 %123, %124
  %141 = select i1 %139, i32 228874924, i32 1648208747
  store i32 %141, i32* %21
  br label %214

; <label>:142:                                    ; preds = %22
  store i32 327462643, i32* %21
  br label %214

; <label>:143:                                    ; preds = %22
  %144 = load i32, i32* @x.905
  %145 = load i32, i32* @y.906
  %146 = sub i32 0, 1
  %147 = add i32 %144, %146
  %148 = sub i32 %144, 1
  %149 = mul i32 %144, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %145, 10
  %153 = xor i1 %151, true
  %154 = xor i1 %152, true
  %155 = xor i1 true, true
  %156 = and i1 %153, true
  %157 = and i1 %151, %155
  %158 = and i1 %154, true
  %159 = and i1 %152, %155
  %160 = or i1 %156, %157
  %161 = or i1 %158, %159
  %162 = xor i1 %160, %161
  %163 = or i1 %153, %154
  %164 = xor i1 %163, true
  %165 = or i1 true, %155
  %166 = and i1 %164, %165
  %167 = or i1 %162, %166
  %168 = or i1 %151, %152
  %169 = select i1 %167, i32 -1378674114, i32 1017935856
  store i32 %169, i32* %21
  br label %214

; <label>:170:                                    ; preds = %22
  %171 = load i32, i32* @x.905
  %172 = load i32, i32* @y.906
  %173 = sub i32 %171, 689395088
  %174 = sub i32 %173, 1
  %175 = add i32 %174, 689395088
  %176 = sub i32 %171, 1
  %177 = mul i32 %171, %175
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %172, 10
  %181 = and i1 %179, %180
  %182 = xor i1 %179, %180
  %183 = or i1 %181, %182
  %184 = or i1 %179, %180
  %185 = select i1 %183, i32 -2061015291, i32 1017935856
  store i32 %185, i32* %21
  br label %214

; <label>:186:                                    ; preds = %22
  ret void

; <label>:187:                                    ; preds = %22
  %188 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %6
  %189 = bitcast %"class.std::vector.31"* %188 to %"struct.std::_Vector_base.32"*
  %190 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %189, i32 0, i32 0
  %191 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %190 to %"class.std::allocator.33"*
  %192 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %6
  %193 = bitcast %"class.std::vector.31"* %192 to %"struct.std::_Vector_base.32"*
  %194 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %193, i32 0, i32 0
  %195 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %194, i32 0, i32 1
  %196 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %195, align 8
  %197 = load i64*, i64** %8, align 8
  %198 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %197) #3
  %199 = load i32*, i32** %9, align 8
  %200 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %199) #3
  call void @_ZNSt16allocator_traitsISaISt4pairIxxEEE9constructIS1_JRxRiEEEvRS2_PT_DpOT0_(%"class.std::allocator.33"* dereferenceable(1) %191, %"struct.std::pair.36"* %196, i64* dereferenceable(8) %198, i32* dereferenceable(4) %200)
  %201 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %6
  %202 = bitcast %"class.std::vector.31"* %201 to %"struct.std::_Vector_base.32"*
  %203 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %202, i32 0, i32 0
  %204 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %203, i32 0, i32 1
  %205 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %204, align 8
  %206 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %205, i32 1
  store %"struct.std::pair.36"* %206, %"struct.std::pair.36"** %204, align 8
  store i32 1232954342, i32* %21
  br label %214

; <label>:207:                                    ; preds = %22
  %208 = load i64*, i64** %8, align 8
  %209 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %208) #3
  %210 = load i32*, i32** %9, align 8
  %211 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %210) #3
  %212 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %6
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EE19_M_emplace_back_auxIJRxRiEEEvDpOT_(%"class.std::vector.31"* %212, i64* dereferenceable(8) %209, i32* dereferenceable(4) %211)
  store i32 -1987646992, i32* %21
  br label %214

; <label>:213:                                    ; preds = %22
  store i32 -1378674114, i32* %21
  br label %214

; <label>:214:                                    ; preds = %213, %207, %187, %170, %143, %142, %110, %82, %81, %46, %30, %25, %24
  br label %22
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt9push_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEESt7greaterIS3_EEvT_SB_T0_(%"struct.std::pair.36"*, %"struct.std::pair.36"*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %5 = alloca %"struct.std::greater", align 1
  %6 = alloca %"struct.std::pair.36", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %9 = alloca %"struct.std::pair.36", align 8
  %10 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %11 = alloca %"struct.std::greater", align 1
  %12 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %3, i32 0, i32 0
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %4, i32 0, i32 0
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %14, align 8
  %15 = call %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEmiEl(%"class.__gnu_cxx::__normal_iterator.53"* %4, i64 1) #3
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %7, i32 0, i32 0
  store %"struct.std::pair.36"* %15, %"struct.std::pair.36"** %16, align 8
  %17 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.53"* %7) #3
  %18 = call dereferenceable(16) %"struct.std::pair.36"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.36"* dereferenceable(16) %17) #3
  %19 = bitcast %"struct.std::pair.36"* %6 to i8*
  %20 = bitcast %"struct.std::pair.36"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 16, i32 8, i1 false)
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.53"* %8 to i8*
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.53"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  %23 = call i64 @_ZN9__gnu_cxxmiIPSt4pairIxxESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.53"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.53"* dereferenceable(8) %3) #3
  %24 = sub i64 0, 1
  %25 = add i64 %23, %24
  %26 = sub nsw i64 %23, 1
  %27 = call dereferenceable(16) %"struct.std::pair.36"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.36"* dereferenceable(16) %6) #3
  %28 = bitcast %"struct.std::pair.36"* %9 to i8*
  %29 = bitcast %"struct.std::pair.36"* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 16, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt7greaterISt4pairIxxEEEENS0_14_Iter_comp_valIT_EES7_()
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %8, i32 0, i32 0
  %31 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %30, align 8
  %32 = bitcast %"struct.std::pair.36"* %9 to { i64, i64 }*
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %32, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %32, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  call void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops14_Iter_comp_valISt7greaterIS3_EEEEvT_T0_SF_T1_T2_(%"struct.std::pair.36"* %31, i64 %25, i64 0, i64 %34, i64 %36)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIxxEEE9constructIS1_JRxRiEEEvRS2_PT_DpOT0_(%"class.std::allocator.33"* dereferenceable(1), %"struct.std::pair.36"*, i64* dereferenceable(8), i32* dereferenceable(4)) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.909
  %8 = load i32, i32* @y.910
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 378813187, i32* %16
  br label %17

; <label>:17:                                     ; preds = %4, %68
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 378813187, label %20
    i32 500185172, label %28
    i32 -336197657, label %55
    i32 -96056157, label %56
  ]

; <label>:19:                                     ; preds = %17
  br label %68

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 500185172, i32 -96056157
  store i32 %27, i32* %16
  br label %68

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.33"*, align 8
  %30 = alloca %"struct.std::pair.36"*, align 8
  %31 = alloca i64*, align 8
  %32 = alloca i32*, align 8
  store %"class.std::allocator.33"* %0, %"class.std::allocator.33"** %29, align 8
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %30, align 8
  store i64* %2, i64** %31, align 8
  store i32* %3, i32** %32, align 8
  %33 = load %"class.std::allocator.33"*, %"class.std::allocator.33"** %29, align 8
  %34 = bitcast %"class.std::allocator.33"* %33 to %"class.__gnu_cxx::new_allocator.34"*
  %35 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %30, align 8
  %36 = load i64*, i64** %31, align 8
  %37 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %36) #3
  %38 = load i32*, i32** %32, align 8
  %39 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %38) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE9constructIS2_JRxRiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.34"* %34, %"struct.std::pair.36"* %35, i64* dereferenceable(8) %37, i32* dereferenceable(4) %39)
  %40 = load i32, i32* @x.909
  %41 = load i32, i32* @y.910
  %42 = sub i32 %40, 1071665514
  %43 = sub i32 %42, 1
  %44 = add i32 %43, 1071665514
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -336197657, i32 -96056157
  store i32 %54, i32* %16
  br label %68

; <label>:55:                                     ; preds = %17
  ret void

; <label>:56:                                     ; preds = %17
  %57 = alloca %"class.std::allocator.33"*, align 8
  %58 = alloca %"struct.std::pair.36"*, align 8
  %59 = alloca i64*, align 8
  %60 = alloca i32*, align 8
  store %"class.std::allocator.33"* %0, %"class.std::allocator.33"** %57, align 8
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %58, align 8
  store i64* %2, i64** %59, align 8
  store i32* %3, i32** %60, align 8
  %61 = load %"class.std::allocator.33"*, %"class.std::allocator.33"** %57, align 8
  %62 = bitcast %"class.std::allocator.33"* %61 to %"class.__gnu_cxx::new_allocator.34"*
  %63 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %58, align 8
  %64 = load i64*, i64** %59, align 8
  %65 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %64) #3
  %66 = load i32*, i32** %60, align 8
  %67 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %66) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE9constructIS2_JRxRiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.34"* %62, %"struct.std::pair.36"* %63, i64* dereferenceable(8) %65, i32* dereferenceable(4) %67)
  store i32 500185172, i32* %16
  br label %68

; <label>:68:                                     ; preds = %56, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIxxESaIS1_EE19_M_emplace_back_auxIJRxRiEEEvDpOT_(%"class.std::vector.31"*, i64* dereferenceable(8), i32* dereferenceable(4)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.911
  %5 = load i32, i32* @y.912
  %6 = add i32 %4, 890088458
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 890088458
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 true, true
  %17 = and i1 %14, true
  %18 = and i1 %12, %16
  %19 = and i1 %15, true
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 true, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %254

; <label>:30:                                     ; preds = %3, %254
  %31 = alloca %"class.std::vector.31"*, align 8
  %32 = alloca i64*, align 8
  %33 = alloca i32*, align 8
  %34 = alloca i64, align 8
  %35 = alloca %"struct.std::pair.36"*, align 8
  %36 = alloca %"struct.std::pair.36"*, align 8
  %37 = alloca i8*
  %38 = alloca i32
  store %"class.std::vector.31"* %0, %"class.std::vector.31"** %31, align 8
  store i64* %1, i64** %32, align 8
  store i32* %2, i32** %33, align 8
  %39 = load %"class.std::vector.31"*, %"class.std::vector.31"** %31, align 8
  %40 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.31"* %39, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %40, i64* %34, align 8
  %41 = bitcast %"class.std::vector.31"* %39 to %"struct.std::_Vector_base.32"*
  %42 = load i64, i64* %34, align 8
  %43 = call %"struct.std::pair.36"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.32"* %41, i64 %42)
  store %"struct.std::pair.36"* %43, %"struct.std::pair.36"** %35, align 8
  %44 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %35, align 8
  store %"struct.std::pair.36"* %44, %"struct.std::pair.36"** %36, align 8
  %45 = bitcast %"class.std::vector.31"* %39 to %"struct.std::_Vector_base.32"*
  %46 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %45, i32 0, i32 0
  %47 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %46 to %"class.std::allocator.33"*
  %48 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %35, align 8
  %49 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector.31"* %39) #3
  %50 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %48, i64 %49
  %51 = load i64*, i64** %32, align 8
  %52 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %51) #3
  %53 = load i32*, i32** %33, align 8
  %54 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %53) #3
  %55 = load i32, i32* @x.911
  %56 = load i32, i32* @y.912
  %57 = add i32 %55, -1682968214
  %58 = sub i32 %57, 1
  %59 = sub i32 %58, -1682968214
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  br i1 %67, label %69, label %254

; <label>:69:                                     ; preds = %30
  invoke void @_ZNSt16allocator_traitsISaISt4pairIxxEEE9constructIS1_JRxRiEEEvRS2_PT_DpOT0_(%"class.std::allocator.33"* dereferenceable(1) %47, %"struct.std::pair.36"* %50, i64* dereferenceable(8) %52, i32* dereferenceable(4) %54)
          to label %70 unwind label %127

; <label>:70:                                     ; preds = %69
  store %"struct.std::pair.36"* null, %"struct.std::pair.36"** %36, align 8
  %71 = bitcast %"class.std::vector.31"* %39 to %"struct.std::_Vector_base.32"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %72, i32 0, i32 0
  %74 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %73, align 8
  %75 = bitcast %"class.std::vector.31"* %39 to %"struct.std::_Vector_base.32"*
  %76 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %75, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %76, i32 0, i32 1
  %78 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %77, align 8
  %79 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %35, align 8
  %80 = bitcast %"class.std::vector.31"* %39 to %"struct.std::_Vector_base.32"*
  %81 = call dereferenceable(1) %"class.std::allocator.33"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.32"* %80) #3
  %82 = invoke %"struct.std::pair.36"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt4pairIxxES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.std::pair.36"* %74, %"struct.std::pair.36"* %78, %"struct.std::pair.36"* %79, %"class.std::allocator.33"* dereferenceable(1) %81)
          to label %83 unwind label %127

; <label>:83:                                     ; preds = %70
  %84 = load i32, i32* @x.911
  %85 = load i32, i32* @y.912
  %86 = sub i32 0, 1
  %87 = add i32 %84, %86
  %88 = sub i32 %84, 1
  %89 = mul i32 %84, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %85, 10
  %93 = xor i1 %91, true
  %94 = xor i1 %92, true
  %95 = xor i1 false, true
  %96 = and i1 %93, false
  %97 = and i1 %91, %95
  %98 = and i1 %94, false
  %99 = and i1 %92, %95
  %100 = or i1 %96, %97
  %101 = or i1 %98, %99
  %102 = xor i1 %100, %101
  %103 = or i1 %93, %94
  %104 = xor i1 %103, true
  %105 = or i1 false, %95
  %106 = and i1 %104, %105
  %107 = or i1 %102, %106
  %108 = or i1 %91, %92
  br i1 %107, label %109, label %279

; <label>:109:                                    ; preds = %83, %279
  store %"struct.std::pair.36"* %82, %"struct.std::pair.36"** %36, align 8
  %110 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %36, align 8
  %111 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %110, i32 1
  store %"struct.std::pair.36"* %111, %"struct.std::pair.36"** %36, align 8
  %112 = load i32, i32* @x.911
  %113 = load i32, i32* @y.912
  %114 = sub i32 %112, -1106691004
  %115 = sub i32 %114, 1
  %116 = add i32 %115, -1106691004
  %117 = sub i32 %112, 1
  %118 = mul i32 %112, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %113, 10
  %122 = and i1 %120, %121
  %123 = xor i1 %120, %121
  %124 = or i1 %122, %123
  %125 = or i1 %120, %121
  br i1 %124, label %126, label %279

; <label>:126:                                    ; preds = %109
  br label %160

; <label>:127:                                    ; preds = %70, %69
  %128 = landingpad { i8*, i32 }
          catch i8* null
  %129 = extractvalue { i8*, i32 } %128, 0
  store i8* %129, i8** %37, align 8
  %130 = extractvalue { i8*, i32 } %128, 1
  store i32 %130, i32* %38, align 4
  br label %131

; <label>:131:                                    ; preds = %127
  %132 = load i8*, i8** %37, align 8
  %133 = call i8* @__cxa_begin_catch(i8* %132) #3
  %134 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %36, align 8
  %135 = icmp ne %"struct.std::pair.36"* %134, null
  br i1 %135, label %148, label %136

; <label>:136:                                    ; preds = %131
  %137 = bitcast %"class.std::vector.31"* %39 to %"struct.std::_Vector_base.32"*
  %138 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %137, i32 0, i32 0
  %139 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %138 to %"class.std::allocator.33"*
  %140 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %35, align 8
  %141 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector.31"* %39) #3
  %142 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %140, i64 %141
  invoke void @_ZNSt16allocator_traitsISaISt4pairIxxEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.33"* dereferenceable(1) %139, %"struct.std::pair.36"* %142)
          to label %143 unwind label %144

; <label>:143:                                    ; preds = %136
  br label %154

; <label>:144:                                    ; preds = %158, %154, %148, %136
  %145 = landingpad { i8*, i32 }
          cleanup
  %146 = extractvalue { i8*, i32 } %145, 0
  store i8* %146, i8** %37, align 8
  %147 = extractvalue { i8*, i32 } %145, 1
  store i32 %147, i32* %38, align 4
  invoke void @__cxa_end_catch()
          to label %159 unwind label %250

; <label>:148:                                    ; preds = %131
  %149 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %35, align 8
  %150 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %36, align 8
  %151 = bitcast %"class.std::vector.31"* %39 to %"struct.std::_Vector_base.32"*
  %152 = call dereferenceable(1) %"class.std::allocator.33"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.32"* %151) #3
  invoke void @_ZSt8_DestroyIPSt4pairIxxES1_EvT_S3_RSaIT0_E(%"struct.std::pair.36"* %149, %"struct.std::pair.36"* %150, %"class.std::allocator.33"* dereferenceable(1) %152)
          to label %153 unwind label %144

; <label>:153:                                    ; preds = %148
  br label %154

; <label>:154:                                    ; preds = %153, %143
  %155 = bitcast %"class.std::vector.31"* %39 to %"struct.std::_Vector_base.32"*
  %156 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %35, align 8
  %157 = load i64, i64* %34, align 8
  invoke void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.32"* %155, %"struct.std::pair.36"* %156, i64 %157)
          to label %158 unwind label %144

; <label>:158:                                    ; preds = %154
  invoke void @__cxa_rethrow() #15
          to label %253 unwind label %144

; <label>:159:                                    ; preds = %144
  br label %205

; <label>:160:                                    ; preds = %126
  %161 = bitcast %"class.std::vector.31"* %39 to %"struct.std::_Vector_base.32"*
  %162 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %161, i32 0, i32 0
  %163 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %162, i32 0, i32 0
  %164 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %163, align 8
  %165 = bitcast %"class.std::vector.31"* %39 to %"struct.std::_Vector_base.32"*
  %166 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %165, i32 0, i32 0
  %167 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %166, i32 0, i32 1
  %168 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %167, align 8
  %169 = bitcast %"class.std::vector.31"* %39 to %"struct.std::_Vector_base.32"*
  %170 = call dereferenceable(1) %"class.std::allocator.33"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.32"* %169) #3
  call void @_ZSt8_DestroyIPSt4pairIxxES1_EvT_S3_RSaIT0_E(%"struct.std::pair.36"* %164, %"struct.std::pair.36"* %168, %"class.std::allocator.33"* dereferenceable(1) %170)
  %171 = bitcast %"class.std::vector.31"* %39 to %"struct.std::_Vector_base.32"*
  %172 = bitcast %"class.std::vector.31"* %39 to %"struct.std::_Vector_base.32"*
  %173 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %172, i32 0, i32 0
  %174 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %173, i32 0, i32 0
  %175 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %174, align 8
  %176 = bitcast %"class.std::vector.31"* %39 to %"struct.std::_Vector_base.32"*
  %177 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %176, i32 0, i32 0
  %178 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %177, i32 0, i32 2
  %179 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %178, align 8
  %180 = bitcast %"class.std::vector.31"* %39 to %"struct.std::_Vector_base.32"*
  %181 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %180, i32 0, i32 0
  %182 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %181, i32 0, i32 0
  %183 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %182, align 8
  %184 = ptrtoint %"struct.std::pair.36"* %179 to i64
  %185 = ptrtoint %"struct.std::pair.36"* %183 to i64
  %186 = sub i64 %184, 1654446663176583357
  %187 = sub i64 %186, %185
  %188 = add i64 %187, 1654446663176583357
  %189 = sub i64 %184, %185
  %190 = sdiv exact i64 %188, 16
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.32"* %171, %"struct.std::pair.36"* %175, i64 %190)
  %191 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %35, align 8
  %192 = bitcast %"class.std::vector.31"* %39 to %"struct.std::_Vector_base.32"*
  %193 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %192, i32 0, i32 0
  %194 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %193, i32 0, i32 0
  store %"struct.std::pair.36"* %191, %"struct.std::pair.36"** %194, align 8
  %195 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %36, align 8
  %196 = bitcast %"class.std::vector.31"* %39 to %"struct.std::_Vector_base.32"*
  %197 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %196, i32 0, i32 0
  %198 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %197, i32 0, i32 1
  store %"struct.std::pair.36"* %195, %"struct.std::pair.36"** %198, align 8
  %199 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %35, align 8
  %200 = load i64, i64* %34, align 8
  %201 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %199, i64 %200
  %202 = bitcast %"class.std::vector.31"* %39 to %"struct.std::_Vector_base.32"*
  %203 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %202, i32 0, i32 0
  %204 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %203, i32 0, i32 2
  store %"struct.std::pair.36"* %201, %"struct.std::pair.36"** %204, align 8
  ret void

; <label>:205:                                    ; preds = %159
  %206 = load i32, i32* @x.911
  %207 = load i32, i32* @y.912
  %208 = sub i32 0, 1
  %209 = add i32 %206, %208
  %210 = sub i32 %206, 1
  %211 = mul i32 %206, %209
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %207, 10
  %215 = and i1 %213, %214
  %216 = xor i1 %213, %214
  %217 = or i1 %215, %216
  %218 = or i1 %213, %214
  br i1 %217, label %219, label %282

; <label>:219:                                    ; preds = %205, %282
  %220 = load i8*, i8** %37, align 8
  %221 = load i32, i32* %38, align 4
  %222 = insertvalue { i8*, i32 } undef, i8* %220, 0
  %223 = insertvalue { i8*, i32 } %222, i32 %221, 1
  %224 = load i32, i32* @x.911
  %225 = load i32, i32* @y.912
  %226 = sub i32 0, 1
  %227 = add i32 %224, %226
  %228 = sub i32 %224, 1
  %229 = mul i32 %224, %227
  %230 = urem i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %225, 10
  %233 = xor i1 %231, true
  %234 = xor i1 %232, true
  %235 = xor i1 true, true
  %236 = and i1 %233, true
  %237 = and i1 %231, %235
  %238 = and i1 %234, true
  %239 = and i1 %232, %235
  %240 = or i1 %236, %237
  %241 = or i1 %238, %239
  %242 = xor i1 %240, %241
  %243 = or i1 %233, %234
  %244 = xor i1 %243, true
  %245 = or i1 true, %235
  %246 = and i1 %244, %245
  %247 = or i1 %242, %246
  %248 = or i1 %231, %232
  br i1 %247, label %249, label %282

; <label>:249:                                    ; preds = %219
  resume { i8*, i32 } %223

; <label>:250:                                    ; preds = %144
  %251 = landingpad { i8*, i32 }
          catch i8* null
  %252 = extractvalue { i8*, i32 } %251, 0
  call void @__clang_call_terminate(i8* %252) #12
  unreachable

; <label>:253:                                    ; preds = %158
  unreachable

; <label>:254:                                    ; preds = %30, %3
  %255 = alloca %"class.std::vector.31"*, align 8
  %256 = alloca i64*, align 8
  %257 = alloca i32*, align 8
  %258 = alloca i64, align 8
  %259 = alloca %"struct.std::pair.36"*, align 8
  %260 = alloca %"struct.std::pair.36"*, align 8
  %261 = alloca i8*
  %262 = alloca i32
  store %"class.std::vector.31"* %0, %"class.std::vector.31"** %255, align 8
  store i64* %1, i64** %256, align 8
  store i32* %2, i32** %257, align 8
  %263 = load %"class.std::vector.31"*, %"class.std::vector.31"** %255, align 8
  %264 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.31"* %263, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %264, i64* %258, align 8
  %265 = bitcast %"class.std::vector.31"* %263 to %"struct.std::_Vector_base.32"*
  %266 = load i64, i64* %258, align 8
  %267 = call %"struct.std::pair.36"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.32"* %265, i64 %266)
  store %"struct.std::pair.36"* %267, %"struct.std::pair.36"** %259, align 8
  %268 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %259, align 8
  store %"struct.std::pair.36"* %268, %"struct.std::pair.36"** %260, align 8
  %269 = bitcast %"class.std::vector.31"* %263 to %"struct.std::_Vector_base.32"*
  %270 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %269, i32 0, i32 0
  %271 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %270 to %"class.std::allocator.33"*
  %272 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %259, align 8
  %273 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector.31"* %263) #3
  %274 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %272, i64 %273
  %275 = load i64*, i64** %256, align 8
  %276 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %275) #3
  %277 = load i32*, i32** %257, align 8
  %278 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %277) #3
  br label %30

; <label>:279:                                    ; preds = %109, %83
  store %"struct.std::pair.36"* %82, %"struct.std::pair.36"** %36, align 8
  %280 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %36, align 8
  %281 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %280, i32 1
  store %"struct.std::pair.36"* %281, %"struct.std::pair.36"** %36, align 8
  br label %109

; <label>:282:                                    ; preds = %219, %205
  %283 = load i8*, i8** %37, align 8
  %284 = load i32, i32* %38, align 4
  %285 = insertvalue { i8*, i32 } undef, i8* %283, 0
  %286 = insertvalue { i8*, i32 } %285, i32 %284, 1
  br label %219
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE9constructIS2_JRxRiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.34"*, %"struct.std::pair.36"*, i64* dereferenceable(8), i32* dereferenceable(4)) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.913
  %8 = load i32, i32* @y.914
  %9 = add i32 %7, -882916346
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -882916346
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 2026687637, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %82
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 2026687637, label %21
    i32 -1850879698, label %29
    i32 -857655250, label %68
    i32 961465603, label %69
  ]

; <label>:20:                                     ; preds = %18
  br label %82

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1850879698, i32 961465603
  store i32 %28, i32* %17
  br label %82

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.__gnu_cxx::new_allocator.34"*, align 8
  %31 = alloca %"struct.std::pair.36"*, align 8
  %32 = alloca i64*, align 8
  %33 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.34"* %0, %"class.__gnu_cxx::new_allocator.34"** %30, align 8
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %31, align 8
  store i64* %2, i64** %32, align 8
  store i32* %3, i32** %33, align 8
  %34 = load %"class.__gnu_cxx::new_allocator.34"*, %"class.__gnu_cxx::new_allocator.34"** %30, align 8
  %35 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %31, align 8
  %36 = bitcast %"struct.std::pair.36"* %35 to i8*
  %37 = bitcast i8* %36 to %"struct.std::pair.36"*
  %38 = load i64*, i64** %32, align 8
  %39 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %38) #3
  %40 = load i32*, i32** %33, align 8
  %41 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %40) #3
  call void @_ZNSt4pairIxxEC2IRxRivEEOT_OT0_(%"struct.std::pair.36"* %37, i64* dereferenceable(8) %39, i32* dereferenceable(4) %41)
  %42 = load i32, i32* @x.913
  %43 = load i32, i32* @y.914
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -857655250, i32 961465603
  store i32 %67, i32* %17
  br label %82

; <label>:68:                                     ; preds = %18
  ret void

; <label>:69:                                     ; preds = %18
  %70 = alloca %"class.__gnu_cxx::new_allocator.34"*, align 8
  %71 = alloca %"struct.std::pair.36"*, align 8
  %72 = alloca i64*, align 8
  %73 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.34"* %0, %"class.__gnu_cxx::new_allocator.34"** %70, align 8
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %71, align 8
  store i64* %2, i64** %72, align 8
  store i32* %3, i32** %73, align 8
  %74 = load %"class.__gnu_cxx::new_allocator.34"*, %"class.__gnu_cxx::new_allocator.34"** %70, align 8
  %75 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %71, align 8
  %76 = bitcast %"struct.std::pair.36"* %75 to i8*
  %77 = bitcast i8* %76 to %"struct.std::pair.36"*
  %78 = load i64*, i64** %72, align 8
  %79 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %78) #3
  %80 = load i32*, i32** %73, align 8
  %81 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %80) #3
  call void @_ZNSt4pairIxxEC2IRxRivEEOT_OT0_(%"struct.std::pair.36"* %77, i64* dereferenceable(8) %79, i32* dereferenceable(4) %81)
  store i32 -1850879698, i32* %17
  br label %82

; <label>:82:                                     ; preds = %69, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIxxEC2IRxRivEEOT_OT0_(%"struct.std::pair.36"*, i64* dereferenceable(8), i32* dereferenceable(4)) unnamed_addr #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.915
  %7 = load i32, i32* @y.916
  %8 = add i32 %6, 956386396
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 956386396
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1014409046, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %84
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1014409046, label %20
    i32 -2032961358, label %40
    i32 1949977779, label %69
    i32 668012782, label %70
  ]

; <label>:19:                                     ; preds = %17
  br label %84

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -2032961358, i32 668012782
  store i32 %39, i32* %16
  br label %84

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::pair.36"*, align 8
  %42 = alloca i64*, align 8
  %43 = alloca i32*, align 8
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %41, align 8
  store i64* %1, i64** %42, align 8
  store i32* %2, i32** %43, align 8
  %44 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %41, align 8
  %45 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %44, i32 0, i32 0
  %46 = load i64*, i64** %42, align 8
  %47 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %46) #3
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %45, align 8
  %49 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %44, i32 0, i32 1
  %50 = load i32*, i32** %43, align 8
  %51 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %50) #3
  %52 = load i32, i32* %51, align 4
  %53 = sext i32 %52 to i64
  store i64 %53, i64* %49, align 8
  %54 = load i32, i32* @x.915
  %55 = load i32, i32* @y.916
  %56 = sub i32 %54, 271727404
  %57 = sub i32 %56, 1
  %58 = add i32 %57, 271727404
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  %68 = select i1 %66, i32 1949977779, i32 668012782
  store i32 %68, i32* %16
  br label %84

; <label>:69:                                     ; preds = %17
  ret void

; <label>:70:                                     ; preds = %17
  %71 = alloca %"struct.std::pair.36"*, align 8
  %72 = alloca i64*, align 8
  %73 = alloca i32*, align 8
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %71, align 8
  store i64* %1, i64** %72, align 8
  store i32* %2, i32** %73, align 8
  %74 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %71, align 8
  %75 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %74, i32 0, i32 0
  %76 = load i64*, i64** %72, align 8
  %77 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %76) #3
  %78 = load i64, i64* %77, align 8
  store i64 %78, i64* %75, align 8
  %79 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %74, i32 0, i32 1
  %80 = load i32*, i32** %73, align 8
  %81 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %80) #3
  %82 = load i32, i32* %81, align 4
  %83 = sext i32 %82 to i64
  store i64 %83, i64* %79, align 8
  store i32 -2032961358, i32* %16
  br label %84

; <label>:84:                                     ; preds = %70, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.31"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.std::vector.31"*
  %8 = alloca %"class.std::vector.31"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.31"* %0, %"class.std::vector.31"** %8, align 8
  store i64 %1, i64* %9, align 8
  store i8* %2, i8** %10, align 8
  %13 = load %"class.std::vector.31"*, %"class.std::vector.31"** %8, align 8
  store %"class.std::vector.31"* %13, %"class.std::vector.31"** %7
  %14 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %7
  %15 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE8max_sizeEv(%"class.std::vector.31"* %14) #3
  %16 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %7
  %17 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector.31"* %16) #3
  %18 = sub i64 0, %17
  %19 = add i64 %15, %18
  %20 = sub i64 %15, %17
  store i64 %19, i64* %6
  %21 = load i64, i64* %9, align 8
  store i64 %21, i64* %5
  %22 = alloca i32
  store i32 -875475866, i32* %22
  %23 = alloca i64
  br label %24

; <label>:24:                                     ; preds = %3, %165
  %25 = load i32, i32* %22
  switch i32 %25, label %26 [
    i32 -875475866, label %27
    i32 -498948596, label %32
    i32 29937939, label %60
    i32 -1439413702, label %76
    i32 835590502, label %77
    i32 -144439076, label %92
    i32 -1626581479, label %98
    i32 -664243298, label %101
    i32 -1439386076, label %103
    i32 -560247024, label %132
    i32 1005900347, label %160
    i32 206013790, label %162
    i32 -289767313, label %164
  ]

; <label>:26:                                     ; preds = %24
  br label %165

; <label>:27:                                     ; preds = %24
  %28 = load volatile i64, i64* %6
  %29 = load volatile i64, i64* %5
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i32 -498948596, i32 835590502
  store i32 %31, i32* %22
  br label %165

; <label>:32:                                     ; preds = %24
  %33 = load i32, i32* @x.917
  %34 = load i32, i32* @y.918
  %35 = add i32 %33, 133525877
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 133525877
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 29937939, i32 206013790
  store i32 %59, i32* %22
  br label %165

; <label>:60:                                     ; preds = %24
  %61 = load i8*, i8** %10, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %61) #15
  %62 = load i32, i32* @x.917
  %63 = load i32, i32* @y.918
  %64 = sub i32 0, 1
  %65 = add i32 %62, %64
  %66 = sub i32 %62, 1
  %67 = mul i32 %62, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %63, 10
  %71 = and i1 %69, %70
  %72 = xor i1 %69, %70
  %73 = or i1 %71, %72
  %74 = or i1 %69, %70
  %75 = select i1 %73, i32 -1439413702, i32 206013790
  store i32 %75, i32* %22
  br label %165

; <label>:76:                                     ; preds = %24
  unreachable

; <label>:77:                                     ; preds = %24
  %78 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %7
  %79 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector.31"* %78) #3
  %80 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %7
  %81 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector.31"* %80) #3
  store i64 %81, i64* %12, align 8
  %82 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %12, i64* dereferenceable(8) %9)
  %83 = load i64, i64* %82, align 8
  %84 = sub i64 0, %83
  %85 = sub i64 %79, %84
  %86 = add i64 %79, %83
  store i64 %85, i64* %11, align 8
  %87 = load i64, i64* %11, align 8
  %88 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %7
  %89 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector.31"* %88) #3
  %90 = icmp ult i64 %87, %89
  %91 = select i1 %90, i32 -1626581479, i32 -144439076
  store i32 %91, i32* %22
  br label %165

; <label>:92:                                     ; preds = %24
  %93 = load i64, i64* %11, align 8
  %94 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %7
  %95 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE8max_sizeEv(%"class.std::vector.31"* %94) #3
  %96 = icmp ugt i64 %93, %95
  %97 = select i1 %96, i32 -1626581479, i32 -664243298
  store i32 %97, i32* %22
  br label %165

; <label>:98:                                     ; preds = %24
  %99 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %7
  %100 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE8max_sizeEv(%"class.std::vector.31"* %99) #3
  store i32 -1439386076, i32* %22
  store i64 %100, i64* %23
  br label %165

; <label>:101:                                    ; preds = %24
  %102 = load i64, i64* %11, align 8
  store i32 -1439386076, i32* %22
  store i64 %102, i64* %23
  br label %165

; <label>:103:                                    ; preds = %24
  %104 = load i64, i64* %23
  store i64 %104, i64* %4
  %105 = load i32, i32* @x.917
  %106 = load i32, i32* @y.918
  %107 = sub i32 %105, 242483066
  %108 = sub i32 %107, 1
  %109 = add i32 %108, 242483066
  %110 = sub i32 %105, 1
  %111 = mul i32 %105, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %106, 10
  %115 = xor i1 %113, true
  %116 = xor i1 %114, true
  %117 = xor i1 true, true
  %118 = and i1 %115, true
  %119 = and i1 %113, %117
  %120 = and i1 %116, true
  %121 = and i1 %114, %117
  %122 = or i1 %118, %119
  %123 = or i1 %120, %121
  %124 = xor i1 %122, %123
  %125 = or i1 %115, %116
  %126 = xor i1 %125, true
  %127 = or i1 true, %117
  %128 = and i1 %126, %127
  %129 = or i1 %124, %128
  %130 = or i1 %113, %114
  %131 = select i1 %129, i32 -560247024, i32 -289767313
  store i32 %131, i32* %22
  br label %165

; <label>:132:                                    ; preds = %24
  %133 = load i32, i32* @x.917
  %134 = load i32, i32* @y.918
  %135 = add i32 %133, -506059569
  %136 = sub i32 %135, 1
  %137 = sub i32 %136, -506059569
  %138 = sub i32 %133, 1
  %139 = mul i32 %133, %137
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %134, 10
  %143 = xor i1 %141, true
  %144 = xor i1 %142, true
  %145 = xor i1 false, true
  %146 = and i1 %143, false
  %147 = and i1 %141, %145
  %148 = and i1 %144, false
  %149 = and i1 %142, %145
  %150 = or i1 %146, %147
  %151 = or i1 %148, %149
  %152 = xor i1 %150, %151
  %153 = or i1 %143, %144
  %154 = xor i1 %153, true
  %155 = or i1 false, %145
  %156 = and i1 %154, %155
  %157 = or i1 %152, %156
  %158 = or i1 %141, %142
  %159 = select i1 %157, i32 1005900347, i32 -289767313
  store i32 %159, i32* %22
  br label %165

; <label>:160:                                    ; preds = %24
  %161 = load volatile i64, i64* %4
  ret i64 %161

; <label>:162:                                    ; preds = %24
  %163 = load i8*, i8** %10, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %163) #15
  store i32 29937939, i32* %22
  br label %165

; <label>:164:                                    ; preds = %24
  store i32 -560247024, i32* %22
  br label %165

; <label>:165:                                    ; preds = %164, %162, %132, %103, %101, %98, %92, %77, %60, %32, %27, %26
  br label %24
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair.36"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.32"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::pair.36"*
  %4 = alloca i64
  %5 = alloca %"struct.std::_Vector_base.32"*
  %6 = alloca %"struct.std::_Vector_base.32"*, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Vector_base.32"* %0, %"struct.std::_Vector_base.32"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"struct.std::_Vector_base.32"*, %"struct.std::_Vector_base.32"** %6, align 8
  store %"struct.std::_Vector_base.32"* %8, %"struct.std::_Vector_base.32"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = alloca i32
  store i32 1629784179, i32* %10
  %11 = alloca %"struct.std::pair.36"*
  br label %12

; <label>:12:                                     ; preds = %2, %78
  %13 = load i32, i32* %10
  switch i32 %13, label %14 [
    i32 1629784179, label %15
    i32 1804632984, label %19
    i32 -931980579, label %46
    i32 1403460768, label %67
    i32 113016021, label %69
    i32 160018755, label %70
    i32 -1175613555, label %72
  ]

; <label>:14:                                     ; preds = %12
  br label %78

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp ne i64 %16, 0
  %18 = select i1 %17, i32 1804632984, i32 113016021
  store i32 %18, i32* %10
  br label %78

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.919
  %21 = load i32, i32* @y.920
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 false, true
  %32 = and i1 %29, false
  %33 = and i1 %27, %31
  %34 = and i1 %30, false
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 false, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  %45 = select i1 %43, i32 -931980579, i32 -1175613555
  store i32 %45, i32* %10
  br label %78

; <label>:46:                                     ; preds = %12
  %47 = load volatile %"struct.std::_Vector_base.32"*, %"struct.std::_Vector_base.32"** %5
  %48 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %47, i32 0, i32 0
  %49 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %48 to %"class.std::allocator.33"*
  %50 = load i64, i64* %7, align 8
  %51 = call %"struct.std::pair.36"* @_ZNSt16allocator_traitsISaISt4pairIxxEEE8allocateERS2_m(%"class.std::allocator.33"* dereferenceable(1) %49, i64 %50)
  store %"struct.std::pair.36"* %51, %"struct.std::pair.36"** %3
  %52 = load i32, i32* @x.919
  %53 = load i32, i32* @y.920
  %54 = sub i32 %52, -1851497027
  %55 = sub i32 %54, 1
  %56 = add i32 %55, -1851497027
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 1403460768, i32 -1175613555
  store i32 %66, i32* %10
  br label %78

; <label>:67:                                     ; preds = %12
  store i32 160018755, i32* %10
  %68 = load volatile %"struct.std::pair.36"*, %"struct.std::pair.36"** %3
  store %"struct.std::pair.36"* %68, %"struct.std::pair.36"** %11
  br label %78

; <label>:69:                                     ; preds = %12
  store i32 160018755, i32* %10
  store %"struct.std::pair.36"* null, %"struct.std::pair.36"** %11
  br label %78

; <label>:70:                                     ; preds = %12
  %71 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %11
  ret %"struct.std::pair.36"* %71

; <label>:72:                                     ; preds = %12
  %73 = load volatile %"struct.std::_Vector_base.32"*, %"struct.std::_Vector_base.32"** %5
  %74 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %73, i32 0, i32 0
  %75 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %74 to %"class.std::allocator.33"*
  %76 = load i64, i64* %7, align 8
  %77 = call %"struct.std::pair.36"* @_ZNSt16allocator_traitsISaISt4pairIxxEEE8allocateERS2_m(%"class.std::allocator.33"* dereferenceable(1) %75, i64 %76)
  store i32 -931980579, i32* %10
  br label %78

; <label>:78:                                     ; preds = %72, %69, %67, %46, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector.31"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.31"*, align 8
  store %"class.std::vector.31"* %0, %"class.std::vector.31"** %2, align 8
  %3 = load %"class.std::vector.31"*, %"class.std::vector.31"** %2, align 8
  %4 = bitcast %"class.std::vector.31"* %3 to %"struct.std::_Vector_base.32"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %6, align 8
  %8 = bitcast %"class.std::vector.31"* %3 to %"struct.std::_Vector_base.32"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %10, align 8
  %12 = ptrtoint %"struct.std::pair.36"* %7 to i64
  %13 = ptrtoint %"struct.std::pair.36"* %11 to i64
  %14 = sub i64 %12, -713808133805023985
  %15 = sub i64 %14, %13
  %16 = add i64 %15, -713808133805023985
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 16
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair.36"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt4pairIxxES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.std::pair.36"*, %"struct.std::pair.36"*, %"struct.std::pair.36"*, %"class.std::allocator.33"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.std::pair.36"*, align 8
  %6 = alloca %"struct.std::pair.36"*, align 8
  %7 = alloca %"struct.std::pair.36"*, align 8
  %8 = alloca %"class.std::allocator.33"*, align 8
  %9 = alloca %"class.std::move_iterator.54", align 8
  %10 = alloca %"class.std::move_iterator.54", align 8
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %5, align 8
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %6, align 8
  store %"struct.std::pair.36"* %2, %"struct.std::pair.36"** %7, align 8
  store %"class.std::allocator.33"* %3, %"class.std::allocator.33"** %8, align 8
  %11 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %5, align 8
  %12 = call %"struct.std::pair.36"* @_ZSt32__make_move_if_noexcept_iteratorIPSt4pairIxxESt13move_iteratorIS2_EET0_T_(%"struct.std::pair.36"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.54", %"class.std::move_iterator.54"* %9, i32 0, i32 0
  store %"struct.std::pair.36"* %12, %"struct.std::pair.36"** %13, align 8
  %14 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %6, align 8
  %15 = call %"struct.std::pair.36"* @_ZSt32__make_move_if_noexcept_iteratorIPSt4pairIxxESt13move_iteratorIS2_EET0_T_(%"struct.std::pair.36"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.54", %"class.std::move_iterator.54"* %10, i32 0, i32 0
  store %"struct.std::pair.36"* %15, %"struct.std::pair.36"** %16, align 8
  %17 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %7, align 8
  %18 = load %"class.std::allocator.33"*, %"class.std::allocator.33"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.54", %"class.std::move_iterator.54"* %9, i32 0, i32 0
  %20 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.54", %"class.std::move_iterator.54"* %10, i32 0, i32 0
  %22 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %21, align 8
  %23 = call %"struct.std::pair.36"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt4pairIxxEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.std::pair.36"* %20, %"struct.std::pair.36"* %22, %"struct.std::pair.36"* %17, %"class.std::allocator.33"* dereferenceable(1) %18)
  ret %"struct.std::pair.36"* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIxxEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.33"* dereferenceable(1), %"struct.std::pair.36"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.33"*, align 8
  %4 = alloca %"struct.std::pair.36"*, align 8
  store %"class.std::allocator.33"* %0, %"class.std::allocator.33"** %3, align 8
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %4, align 8
  %5 = load %"class.std::allocator.33"*, %"class.std::allocator.33"** %3, align 8
  %6 = bitcast %"class.std::allocator.33"* %5 to %"class.__gnu_cxx::new_allocator.34"*
  %7 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.34"* %6, %"struct.std::pair.36"* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE8max_sizeEv(%"class.std::vector.31"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.31"*, align 8
  store %"class.std::vector.31"* %0, %"class.std::vector.31"** %2, align 8
  %3 = load %"class.std::vector.31"*, %"class.std::vector.31"** %2, align 8
  %4 = bitcast %"class.std::vector.31"* %3 to %"struct.std::_Vector_base.32"*
  %5 = call dereferenceable(1) %"class.std::allocator.33"* @_ZNKSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.32"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaISt4pairIxxEEE8max_sizeERKS2_(%"class.std::allocator.33"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaISt4pairIxxEEE8max_sizeERKS2_(%"class.std::allocator.33"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.33"*, align 8
  store %"class.std::allocator.33"* %0, %"class.std::allocator.33"** %2, align 8
  %3 = load %"class.std::allocator.33"*, %"class.std::allocator.33"** %2, align 8
  %4 = bitcast %"class.std::allocator.33"* %3 to %"class.__gnu_cxx::new_allocator.34"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt4pairIxxEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.34"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.33"* @_ZNKSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.32"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.32"*, align 8
  store %"struct.std::_Vector_base.32"* %0, %"struct.std::_Vector_base.32"** %2, align 8
  %3 = load %"struct.std::_Vector_base.32"*, %"struct.std::_Vector_base.32"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %4 to %"class.std::allocator.33"*
  ret %"class.std::allocator.33"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt4pairIxxEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.34"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.34"*, align 8
  store %"class.__gnu_cxx::new_allocator.34"* %0, %"class.__gnu_cxx::new_allocator.34"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.34"*, %"class.__gnu_cxx::new_allocator.34"** %2, align 8
  ret i64 1152921504606846975
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair.36"* @_ZNSt16allocator_traitsISaISt4pairIxxEEE8allocateERS2_m(%"class.std::allocator.33"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.33"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.33"* %0, %"class.std::allocator.33"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.33"*, %"class.std::allocator.33"** %3, align 8
  %6 = bitcast %"class.std::allocator.33"* %5 to %"class.__gnu_cxx::new_allocator.34"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.std::pair.36"* @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.34"* %6, i64 %7, i8* null)
  ret %"struct.std::pair.36"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair.36"* @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.34"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.34"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.34"* %0, %"class.__gnu_cxx::new_allocator.34"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.34"*, %"class.__gnu_cxx::new_allocator.34"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt4pairIxxEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.34"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 33167389, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 33167389, label %16
    i32 -18953465, label %21
    i32 158090195, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -18953465, i32 158090195
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #15
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 16
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"struct.std::pair.36"*
  ret %"struct.std::pair.36"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair.36"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt4pairIxxEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.std::pair.36"*, %"struct.std::pair.36"*, %"struct.std::pair.36"*, %"class.std::allocator.33"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.54", align 8
  %6 = alloca %"class.std::move_iterator.54", align 8
  %7 = alloca %"struct.std::pair.36"*, align 8
  %8 = alloca %"class.std::allocator.33"*, align 8
  %9 = alloca %"class.std::move_iterator.54", align 8
  %10 = alloca %"class.std::move_iterator.54", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.54", %"class.std::move_iterator.54"* %5, i32 0, i32 0
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.54", %"class.std::move_iterator.54"* %6, i32 0, i32 0
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %12, align 8
  store %"struct.std::pair.36"* %2, %"struct.std::pair.36"** %7, align 8
  store %"class.std::allocator.33"* %3, %"class.std::allocator.33"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.54"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.54"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.54"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.54"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.54", %"class.std::move_iterator.54"* %9, i32 0, i32 0
  %19 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.54", %"class.std::move_iterator.54"* %10, i32 0, i32 0
  %21 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %20, align 8
  %22 = call %"struct.std::pair.36"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt4pairIxxEES3_ET0_T_S6_S5_(%"struct.std::pair.36"* %19, %"struct.std::pair.36"* %21, %"struct.std::pair.36"* %17)
  ret %"struct.std::pair.36"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair.36"* @_ZSt32__make_move_if_noexcept_iteratorIPSt4pairIxxESt13move_iteratorIS2_EET0_T_(%"struct.std::pair.36"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.54", align 8
  %3 = alloca %"struct.std::pair.36"*, align 8
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %3, align 8
  %4 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %3, align 8
  call void @_ZNSt13move_iteratorIPSt4pairIxxEEC2ES2_(%"class.std::move_iterator.54"* %2, %"struct.std::pair.36"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.54", %"class.std::move_iterator.54"* %2, i32 0, i32 0
  %6 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %5, align 8
  ret %"struct.std::pair.36"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair.36"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt4pairIxxEES3_ET0_T_S6_S5_(%"struct.std::pair.36"*, %"struct.std::pair.36"*, %"struct.std::pair.36"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.54", align 8
  %5 = alloca %"class.std::move_iterator.54", align 8
  %6 = alloca %"struct.std::pair.36"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.54", align 8
  %9 = alloca %"class.std::move_iterator.54", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.54", %"class.std::move_iterator.54"* %4, i32 0, i32 0
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.54", %"class.std::move_iterator.54"* %5, i32 0, i32 0
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %11, align 8
  store %"struct.std::pair.36"* %2, %"struct.std::pair.36"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.54"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.54"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.54"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.54"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.54", %"class.std::move_iterator.54"* %8, i32 0, i32 0
  %18 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.54", %"class.std::move_iterator.54"* %9, i32 0, i32 0
  %20 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %19, align 8
  %21 = call %"struct.std::pair.36"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt4pairIxxEES5_EET0_T_S8_S7_(%"struct.std::pair.36"* %18, %"struct.std::pair.36"* %20, %"struct.std::pair.36"* %16)
  ret %"struct.std::pair.36"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair.36"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt4pairIxxEES5_EET0_T_S8_S7_(%"struct.std::pair.36"*, %"struct.std::pair.36"*, %"struct.std::pair.36"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.945
  %5 = load i32, i32* @y.946
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %5, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %237

; <label>:29:                                     ; preds = %3, %237
  %30 = alloca %"class.std::move_iterator.54", align 8
  %31 = alloca %"class.std::move_iterator.54", align 8
  %32 = alloca %"struct.std::pair.36"*, align 8
  %33 = alloca %"struct.std::pair.36"*, align 8
  %34 = alloca i8*
  %35 = alloca i32
  %36 = getelementptr inbounds %"class.std::move_iterator.54", %"class.std::move_iterator.54"* %30, i32 0, i32 0
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %36, align 8
  %37 = getelementptr inbounds %"class.std::move_iterator.54", %"class.std::move_iterator.54"* %31, i32 0, i32 0
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %37, align 8
  store %"struct.std::pair.36"* %2, %"struct.std::pair.36"** %32, align 8
  %38 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %32, align 8
  store %"struct.std::pair.36"* %38, %"struct.std::pair.36"** %33, align 8
  %39 = load i32, i32* @x.945
  %40 = load i32, i32* @y.946
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %237

; <label>:52:                                     ; preds = %29
  br label %53

; <label>:53:                                     ; preds = %147, %52
  %54 = load i32, i32* @x.945
  %55 = load i32, i32* @y.946
  %56 = add i32 %54, -1785690321
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, -1785690321
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 true, true
  %67 = and i1 %64, true
  %68 = and i1 %62, %66
  %69 = and i1 %65, true
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 true, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  br i1 %78, label %80, label %247

; <label>:80:                                     ; preds = %53, %247
  %81 = load i32, i32* @x.945
  %82 = load i32, i32* @y.946
  %83 = sub i32 %81, 91903082
  %84 = sub i32 %83, 1
  %85 = add i32 %84, 91903082
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  br i1 %93, label %95, label %247

; <label>:95:                                     ; preds = %80
  %96 = invoke zeroext i1 @_ZStneIPSt4pairIxxEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.54"* dereferenceable(8) %30, %"class.std::move_iterator.54"* dereferenceable(8) %31)
          to label %97 unwind label %150

; <label>:97:                                     ; preds = %95
  br i1 %96, label %98, label %220

; <label>:98:                                     ; preds = %97
  %99 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %33, align 8
  %100 = call %"struct.std::pair.36"* @_ZSt11__addressofISt4pairIxxEEPT_RS2_(%"struct.std::pair.36"* dereferenceable(16) %99) #3
  %101 = invoke dereferenceable(16) %"struct.std::pair.36"* @_ZNKSt13move_iteratorIPSt4pairIxxEEdeEv(%"class.std::move_iterator.54"* %30)
          to label %102 unwind label %150

; <label>:102:                                    ; preds = %98
  invoke void @_ZSt10_ConstructISt4pairIxxEJS1_EEvPT_DpOT0_(%"struct.std::pair.36"* %100, %"struct.std::pair.36"* dereferenceable(16) %101)
          to label %103 unwind label %150

; <label>:103:                                    ; preds = %102
  %104 = load i32, i32* @x.945
  %105 = load i32, i32* @y.946
  %106 = sub i32 0, 1
  %107 = add i32 %104, %106
  %108 = sub i32 %104, 1
  %109 = mul i32 %104, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %105, 10
  %113 = xor i1 %111, true
  %114 = xor i1 %112, true
  %115 = xor i1 true, true
  %116 = and i1 %113, true
  %117 = and i1 %111, %115
  %118 = and i1 %114, true
  %119 = and i1 %112, %115
  %120 = or i1 %116, %117
  %121 = or i1 %118, %119
  %122 = xor i1 %120, %121
  %123 = or i1 %113, %114
  %124 = xor i1 %123, true
  %125 = or i1 true, %115
  %126 = and i1 %124, %125
  %127 = or i1 %122, %126
  %128 = or i1 %111, %112
  br i1 %127, label %129, label %248

; <label>:129:                                    ; preds = %103, %248
  %130 = load i32, i32* @x.945
  %131 = load i32, i32* @y.946
  %132 = sub i32 %130, 2044132593
  %133 = sub i32 %132, 1
  %134 = add i32 %133, 2044132593
  %135 = sub i32 %130, 1
  %136 = mul i32 %130, %134
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %131, 10
  %140 = and i1 %138, %139
  %141 = xor i1 %138, %139
  %142 = or i1 %140, %141
  %143 = or i1 %138, %139
  br i1 %142, label %144, label %248

; <label>:144:                                    ; preds = %129
  br label %145

; <label>:145:                                    ; preds = %144
  %146 = invoke dereferenceable(8) %"class.std::move_iterator.54"* @_ZNSt13move_iteratorIPSt4pairIxxEEppEv(%"class.std::move_iterator.54"* %30)
          to label %147 unwind label %150

; <label>:147:                                    ; preds = %145
  %148 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %33, align 8
  %149 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %148, i32 1
  store %"struct.std::pair.36"* %149, %"struct.std::pair.36"** %33, align 8
  br label %53

; <label>:150:                                    ; preds = %145, %102, %98, %95
  %151 = load i32, i32* @x.945
  %152 = load i32, i32* @y.946
  %153 = add i32 %151, 1217316680
  %154 = sub i32 %153, 1
  %155 = sub i32 %154, 1217316680
  %156 = sub i32 %151, 1
  %157 = mul i32 %151, %155
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %152, 10
  %161 = and i1 %159, %160
  %162 = xor i1 %159, %160
  %163 = or i1 %161, %162
  %164 = or i1 %159, %160
  br i1 %163, label %165, label %249

; <label>:165:                                    ; preds = %150, %249
  %166 = landingpad { i8*, i32 }
          catch i8* null
  %167 = extractvalue { i8*, i32 } %166, 0
  store i8* %167, i8** %34, align 8
  %168 = extractvalue { i8*, i32 } %166, 1
  store i32 %168, i32* %35, align 4
  %169 = load i32, i32* @x.945
  %170 = load i32, i32* @y.946
  %171 = add i32 %169, -1034199685
  %172 = sub i32 %171, 1
  %173 = sub i32 %172, -1034199685
  %174 = sub i32 %169, 1
  %175 = mul i32 %169, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %170, 10
  %179 = and i1 %177, %178
  %180 = xor i1 %177, %178
  %181 = or i1 %179, %180
  %182 = or i1 %177, %178
  br i1 %181, label %183, label %249

; <label>:183:                                    ; preds = %165
  br label %184

; <label>:184:                                    ; preds = %183
  %185 = load i32, i32* @x.945
  %186 = load i32, i32* @y.946
  %187 = add i32 %185, 1605424422
  %188 = sub i32 %187, 1
  %189 = sub i32 %188, 1605424422
  %190 = sub i32 %185, 1
  %191 = mul i32 %185, %189
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %186, 10
  %195 = and i1 %193, %194
  %196 = xor i1 %193, %194
  %197 = or i1 %195, %196
  %198 = or i1 %193, %194
  br i1 %197, label %199, label %253

; <label>:199:                                    ; preds = %184, %253
  %200 = load i8*, i8** %34, align 8
  %201 = call i8* @__cxa_begin_catch(i8* %200) #3
  %202 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %32, align 8
  %203 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %33, align 8
  %204 = load i32, i32* @x.945
  %205 = load i32, i32* @y.946
  %206 = sub i32 %204, -1358256990
  %207 = sub i32 %206, 1
  %208 = add i32 %207, -1358256990
  %209 = sub i32 %204, 1
  %210 = mul i32 %204, %208
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %205, 10
  %214 = and i1 %212, %213
  %215 = xor i1 %212, %213
  %216 = or i1 %214, %215
  %217 = or i1 %212, %213
  br i1 %216, label %218, label %253

; <label>:218:                                    ; preds = %199
  invoke void @_ZSt8_DestroyIPSt4pairIxxEEvT_S3_(%"struct.std::pair.36"* %202, %"struct.std::pair.36"* %203)
          to label %219 unwind label %222

; <label>:219:                                    ; preds = %218
  invoke void @__cxa_rethrow() #15
          to label %236 unwind label %222

; <label>:220:                                    ; preds = %97
  %221 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %33, align 8
  ret %"struct.std::pair.36"* %221

; <label>:222:                                    ; preds = %219, %218
  %223 = landingpad { i8*, i32 }
          cleanup
  %224 = extractvalue { i8*, i32 } %223, 0
  store i8* %224, i8** %34, align 8
  %225 = extractvalue { i8*, i32 } %223, 1
  store i32 %225, i32* %35, align 4
  invoke void @__cxa_end_catch()
          to label %226 unwind label %233

; <label>:226:                                    ; preds = %222
  br label %228
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:228:                                    ; preds = %226
  %229 = load i8*, i8** %34, align 8
  %230 = load i32, i32* %35, align 4
  %231 = insertvalue { i8*, i32 } undef, i8* %229, 0
  %232 = insertvalue { i8*, i32 } %231, i32 %230, 1
  resume { i8*, i32 } %232

; <label>:233:                                    ; preds = %222
  %234 = landingpad { i8*, i32 }
          catch i8* null
  %235 = extractvalue { i8*, i32 } %234, 0
  call void @__clang_call_terminate(i8* %235) #12
  unreachable

; <label>:236:                                    ; preds = %219
  unreachable

; <label>:237:                                    ; preds = %29, %3
  %238 = alloca %"class.std::move_iterator.54", align 8
  %239 = alloca %"class.std::move_iterator.54", align 8
  %240 = alloca %"struct.std::pair.36"*, align 8
  %241 = alloca %"struct.std::pair.36"*, align 8
  %242 = alloca i8*
  %243 = alloca i32
  %244 = getelementptr inbounds %"class.std::move_iterator.54", %"class.std::move_iterator.54"* %238, i32 0, i32 0
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %244, align 8
  %245 = getelementptr inbounds %"class.std::move_iterator.54", %"class.std::move_iterator.54"* %239, i32 0, i32 0
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %245, align 8
  store %"struct.std::pair.36"* %2, %"struct.std::pair.36"** %240, align 8
  %246 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %240, align 8
  store %"struct.std::pair.36"* %246, %"struct.std::pair.36"** %241, align 8
  br label %29

; <label>:247:                                    ; preds = %80, %53
  br label %80

; <label>:248:                                    ; preds = %129, %103
  br label %129

; <label>:249:                                    ; preds = %165, %150
  %250 = landingpad { i8*, i32 }
          catch i8* null
  %251 = extractvalue { i8*, i32 } %250, 0
  store i8* %251, i8** %34, align 8
  %252 = extractvalue { i8*, i32 } %250, 1
  store i32 %252, i32* %35, align 4
  br label %165

; <label>:253:                                    ; preds = %199, %184
  %254 = load i8*, i8** %34, align 8
  %255 = call i8* @__cxa_begin_catch(i8* %254) #3
  %256 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %32, align 8
  %257 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %33, align 8
  br label %199
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPSt4pairIxxEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.54"* dereferenceable(8), %"class.std::move_iterator.54"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.54"*, align 8
  %4 = alloca %"class.std::move_iterator.54"*, align 8
  store %"class.std::move_iterator.54"* %0, %"class.std::move_iterator.54"** %3, align 8
  store %"class.std::move_iterator.54"* %1, %"class.std::move_iterator.54"** %4, align 8
  %5 = load %"class.std::move_iterator.54"*, %"class.std::move_iterator.54"** %3, align 8
  %6 = load %"class.std::move_iterator.54"*, %"class.std::move_iterator.54"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPSt4pairIxxEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.54"* dereferenceable(8) %5, %"class.std::move_iterator.54"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = or i1 %9, %11
  %13 = xor i1 %7, true
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt4pairIxxEJS1_EEvPT_DpOT0_(%"struct.std::pair.36"*, %"struct.std::pair.36"* dereferenceable(16)) #4 comdat {
  %3 = alloca %"struct.std::pair.36"*, align 8
  %4 = alloca %"struct.std::pair.36"*, align 8
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %3, align 8
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %4, align 8
  %5 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %3, align 8
  %6 = bitcast %"struct.std::pair.36"* %5 to i8*
  %7 = bitcast i8* %6 to %"struct.std::pair.36"*
  %8 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %4, align 8
  %9 = call dereferenceable(16) %"struct.std::pair.36"* @_ZSt7forwardISt4pairIxxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair.36"* dereferenceable(16) %8) #3
  %10 = bitcast %"struct.std::pair.36"* %7 to i8*
  %11 = bitcast %"struct.std::pair.36"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 16, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.36"* @_ZSt11__addressofISt4pairIxxEEPT_RS2_(%"struct.std::pair.36"* dereferenceable(16)) #4 comdat {
  %2 = alloca %"struct.std::pair.36"*, align 8
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %2, align 8
  %3 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %2, align 8
  %4 = bitcast %"struct.std::pair.36"* %3 to i8*
  %5 = bitcast i8* %4 to %"struct.std::pair.36"*
  ret %"struct.std::pair.36"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair.36"* @_ZNKSt13move_iteratorIPSt4pairIxxEEdeEv(%"class.std::move_iterator.54"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::pair.36"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.953
  %6 = load i32, i32* @y.954
  %7 = add i32 %5, -1021578459
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1021578459
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -713372168, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -713372168, label %19
    i32 -1866039417, label %27
    i32 -150371262, label %47
    i32 -747528531, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1866039417, i32 -747528531
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.54"*, align 8
  store %"class.std::move_iterator.54"* %0, %"class.std::move_iterator.54"** %28, align 8
  %29 = load %"class.std::move_iterator.54"*, %"class.std::move_iterator.54"** %28, align 8
  %30 = getelementptr inbounds %"class.std::move_iterator.54", %"class.std::move_iterator.54"* %29, i32 0, i32 0
  %31 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %30, align 8
  store %"struct.std::pair.36"* %31, %"struct.std::pair.36"** %2
  %32 = load i32, i32* @x.953
  %33 = load i32, i32* @y.954
  %34 = sub i32 %32, -2138134833
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -2138134833
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -150371262, i32 -747528531
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile %"struct.std::pair.36"*, %"struct.std::pair.36"** %2
  ret %"struct.std::pair.36"* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::move_iterator.54"*, align 8
  store %"class.std::move_iterator.54"* %0, %"class.std::move_iterator.54"** %50, align 8
  %51 = load %"class.std::move_iterator.54"*, %"class.std::move_iterator.54"** %50, align 8
  %52 = getelementptr inbounds %"class.std::move_iterator.54", %"class.std::move_iterator.54"* %51, i32 0, i32 0
  %53 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %52, align 8
  store i32 -1866039417, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator.54"* @_ZNSt13move_iteratorIPSt4pairIxxEEppEv(%"class.std::move_iterator.54"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.54"*, align 8
  store %"class.std::move_iterator.54"* %0, %"class.std::move_iterator.54"** %2, align 8
  %3 = load %"class.std::move_iterator.54"*, %"class.std::move_iterator.54"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.54", %"class.std::move_iterator.54"* %3, i32 0, i32 0
  %5 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %5, i32 1
  store %"struct.std::pair.36"* %6, %"struct.std::pair.36"** %4, align 8
  ret %"class.std::move_iterator.54"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPSt4pairIxxEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.54"* dereferenceable(8), %"class.std::move_iterator.54"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.54"*, align 8
  %4 = alloca %"class.std::move_iterator.54"*, align 8
  store %"class.std::move_iterator.54"* %0, %"class.std::move_iterator.54"** %3, align 8
  store %"class.std::move_iterator.54"* %1, %"class.std::move_iterator.54"** %4, align 8
  %5 = load %"class.std::move_iterator.54"*, %"class.std::move_iterator.54"** %3, align 8
  %6 = call %"struct.std::pair.36"* @_ZNKSt13move_iteratorIPSt4pairIxxEE4baseEv(%"class.std::move_iterator.54"* %5)
  %7 = load %"class.std::move_iterator.54"*, %"class.std::move_iterator.54"** %4, align 8
  %8 = call %"struct.std::pair.36"* @_ZNKSt13move_iteratorIPSt4pairIxxEE4baseEv(%"class.std::move_iterator.54"* %7)
  %9 = icmp eq %"struct.std::pair.36"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.36"* @_ZNKSt13move_iteratorIPSt4pairIxxEE4baseEv(%"class.std::move_iterator.54"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::pair.36"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.959
  %6 = load i32, i32* @y.960
  %7 = add i32 %5, -1462667662
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1462667662
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 909397376, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 909397376, label %19
    i32 -298143918, label %27
    i32 1272061074, label %58
    i32 727715439, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -298143918, i32 727715439
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.54"*, align 8
  store %"class.std::move_iterator.54"* %0, %"class.std::move_iterator.54"** %28, align 8
  %29 = load %"class.std::move_iterator.54"*, %"class.std::move_iterator.54"** %28, align 8
  %30 = getelementptr inbounds %"class.std::move_iterator.54", %"class.std::move_iterator.54"* %29, i32 0, i32 0
  %31 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %30, align 8
  store %"struct.std::pair.36"* %31, %"struct.std::pair.36"** %2
  %32 = load i32, i32* @x.959
  %33 = load i32, i32* @y.960
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 1272061074, i32 727715439
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"struct.std::pair.36"*, %"struct.std::pair.36"** %2
  ret %"struct.std::pair.36"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::move_iterator.54"*, align 8
  store %"class.std::move_iterator.54"* %0, %"class.std::move_iterator.54"** %61, align 8
  %62 = load %"class.std::move_iterator.54"*, %"class.std::move_iterator.54"** %61, align 8
  %63 = getelementptr inbounds %"class.std::move_iterator.54", %"class.std::move_iterator.54"* %62, i32 0, i32 0
  %64 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %63, align 8
  store i32 -298143918, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair.36"* @_ZSt7forwardISt4pairIxxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair.36"* dereferenceable(16)) #4 comdat {
  %2 = alloca %"struct.std::pair.36"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.961
  %6 = load i32, i32* @y.962
  %7 = add i32 %5, 527504547
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 527504547
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1464837633, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1464837633, label %19
    i32 1832448634, label %39
    i32 915602716, label %56
    i32 1176638877, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1832448634, i32 1176638877
  store i32 %38, i32* %15
  br label %61

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::pair.36"*, align 8
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %40, align 8
  %41 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %40, align 8
  store %"struct.std::pair.36"* %41, %"struct.std::pair.36"** %2
  %42 = load i32, i32* @x.961
  %43 = load i32, i32* @y.962
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 915602716, i32 1176638877
  store i32 %55, i32* %15
  br label %61

; <label>:56:                                     ; preds = %16
  %57 = load volatile %"struct.std::pair.36"*, %"struct.std::pair.36"** %2
  ret %"struct.std::pair.36"* %57

; <label>:58:                                     ; preds = %16
  %59 = alloca %"struct.std::pair.36"*, align 8
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %59, align 8
  %60 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %59, align 8
  store i32 1832448634, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPSt4pairIxxEEC2ES2_(%"class.std::move_iterator.54"*, %"struct.std::pair.36"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.963
  %6 = load i32, i32* @y.964
  %7 = add i32 %5, -2100293890
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -2100293890
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -949890186, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -949890186, label %19
    i32 1648512168, label %27
    i32 1732157866, label %60
    i32 863673611, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1648512168, i32 863673611
  store i32 %26, i32* %15
  br label %67

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.54"*, align 8
  %29 = alloca %"struct.std::pair.36"*, align 8
  store %"class.std::move_iterator.54"* %0, %"class.std::move_iterator.54"** %28, align 8
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %29, align 8
  %30 = load %"class.std::move_iterator.54"*, %"class.std::move_iterator.54"** %28, align 8
  %31 = getelementptr inbounds %"class.std::move_iterator.54", %"class.std::move_iterator.54"* %30, i32 0, i32 0
  %32 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %29, align 8
  store %"struct.std::pair.36"* %32, %"struct.std::pair.36"** %31, align 8
  %33 = load i32, i32* @x.963
  %34 = load i32, i32* @y.964
  %35 = sub i32 %33, 204867132
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 204867132
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 1732157866, i32 863673611
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::move_iterator.54"*, align 8
  %63 = alloca %"struct.std::pair.36"*, align 8
  store %"class.std::move_iterator.54"* %0, %"class.std::move_iterator.54"** %62, align 8
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %63, align 8
  %64 = load %"class.std::move_iterator.54"*, %"class.std::move_iterator.54"** %62, align 8
  %65 = getelementptr inbounds %"class.std::move_iterator.54", %"class.std::move_iterator.54"* %64, i32 0, i32 0
  %66 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %63, align 8
  store %"struct.std::pair.36"* %66, %"struct.std::pair.36"** %65, align 8
  store i32 1648512168, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.34"*, %"struct.std::pair.36"*) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.34"*, align 8
  %4 = alloca %"struct.std::pair.36"*, align 8
  store %"class.__gnu_cxx::new_allocator.34"* %0, %"class.__gnu_cxx::new_allocator.34"** %3, align 8
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.34"*, %"class.__gnu_cxx::new_allocator.34"** %3, align 8
  %6 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEmiEl(%"class.__gnu_cxx::__normal_iterator.53"*, i64) #4 comdat align 2 {
  %3 = alloca %"struct.std::pair.36"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.967
  %7 = load i32, i32* @y.968
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 648350343, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %96
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 648350343, label %19
    i32 -212617550, label %27
    i32 -487040244, label %69
    i32 -961353474, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %96

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -212617550, i32 -961353474
  store i32 %26, i32* %15
  br label %96

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.53"*, align 8
  %30 = alloca i64, align 8
  %31 = alloca %"struct.std::pair.36"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.53"* %0, %"class.__gnu_cxx::__normal_iterator.53"** %29, align 8
  store i64 %1, i64* %30, align 8
  %32 = load %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %29, align 8
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %32, i32 0, i32 0
  %34 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %33, align 8
  %35 = load i64, i64* %30, align 8
  %36 = sub i64 0, 7400123217142532758
  %37 = sub i64 %36, %35
  %38 = add i64 %37, 7400123217142532758
  %39 = sub i64 0, %35
  %40 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %34, i64 %38
  store %"struct.std::pair.36"* %40, %"struct.std::pair.36"** %31, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.53"* %28, %"struct.std::pair.36"** dereferenceable(8) %31) #3
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %28, i32 0, i32 0
  %42 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %41, align 8
  store %"struct.std::pair.36"* %42, %"struct.std::pair.36"** %3
  %43 = load i32, i32* @x.967
  %44 = load i32, i32* @y.968
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -487040244, i32 -961353474
  store i32 %68, i32* %15
  br label %96

; <label>:69:                                     ; preds = %16
  %70 = load volatile %"struct.std::pair.36"*, %"struct.std::pair.36"** %3
  ret %"struct.std::pair.36"* %70

; <label>:71:                                     ; preds = %16
  %72 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %73 = alloca %"class.__gnu_cxx::__normal_iterator.53"*, align 8
  %74 = alloca i64, align 8
  %75 = alloca %"struct.std::pair.36"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.53"* %0, %"class.__gnu_cxx::__normal_iterator.53"** %73, align 8
  store i64 %1, i64* %74, align 8
  %76 = load %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %73, align 8
  %77 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %76, i32 0, i32 0
  %78 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %77, align 8
  %79 = load i64, i64* %74, align 8
  %80 = add i64 0, 1211670679710036607
  %81 = sub i64 %80, 0
  %82 = sub i64 %81, 1211670679710036607
  %83 = sub i64 0, 0
  %84 = add i64 %82, -5594020791972996549
  %85 = add i64 %84, %79
  %86 = sub i64 %85, -5594020791972996549
  %87 = add i64 %82, %79
  %88 = shl i64 0, %79
  %89 = shl i64 0, %79
  %90 = sub i64 0, %79
  %91 = add i64 0, %90
  %92 = sub i64 0, %79
  %93 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %78, i64 %91
  store %"struct.std::pair.36"* %93, %"struct.std::pair.36"** %75, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.53"* %72, %"struct.std::pair.36"** dereferenceable(8) %75) #3
  %94 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %72, i32 0, i32 0
  %95 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %94, align 8
  store i32 -212617550, i32* %15
  br label %96

; <label>:96:                                     ; preds = %71, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15__iter_comp_valISt7greaterISt4pairIxxEEEENS0_14_Iter_comp_valIT_EES7_() #0 comdat {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.969
  %4 = load i32, i32* @y.970
  %5 = add i32 %3, 777855532
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, 777855532
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %2
  %12 = icmp slt i32 %4, 10
  store i1 %12, i1* %1
  %13 = alloca i32
  store i32 -1241505943, i32* %13
  br label %14

; <label>:14:                                     ; preds = %0, %48
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1241505943, label %17
    i32 -941921064, label %25
    i32 -713393040, label %43
    i32 -302505751, label %44
  ]

; <label>:16:                                     ; preds = %14
  br label %48

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %2
  %19 = load volatile i1, i1* %1
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -941921064, i32 -302505751
  store i32 %24, i32* %13
  br label %48

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %27 = alloca %"struct.std::greater", align 1
  %28 = alloca %"struct.std::greater", align 1
  call void @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt7greaterISt4pairIxxEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %26)
  %29 = load i32, i32* @x.969
  %30 = load i32, i32* @y.970
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 -713393040, i32 -302505751
  store i32 %42, i32* %13
  br label %48

; <label>:43:                                     ; preds = %14
  ret void

; <label>:44:                                     ; preds = %14
  %45 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_val", align 1
  %46 = alloca %"struct.std::greater", align 1
  %47 = alloca %"struct.std::greater", align 1
  call void @_ZN9__gnu_cxx5__ops14_Iter_comp_valISt7greaterISt4pairIxxEEEC2ES5_(%"struct.__gnu_cxx::__ops::_Iter_comp_val"* %45)
  store i32 -941921064, i32* %13
  br label %48

; <label>:48:                                     ; preds = %44, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt6vectorISt4pairIxxESaIS1_EE5emptyEv(%"class.std::vector.31"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.31"*, align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.55", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.55", align 8
  store %"class.std::vector.31"* %0, %"class.std::vector.31"** %2, align 8
  %5 = load %"class.std::vector.31"*, %"class.std::vector.31"** %2, align 8
  %6 = call %"struct.std::pair.36"* @_ZNKSt6vectorISt4pairIxxESaIS1_EE5beginEv(%"class.std::vector.31"* %5) #3
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.55", %"class.__gnu_cxx::__normal_iterator.55"* %3, i32 0, i32 0
  store %"struct.std::pair.36"* %6, %"struct.std::pair.36"** %7, align 8
  %8 = call %"struct.std::pair.36"* @_ZNKSt6vectorISt4pairIxxESaIS1_EE3endEv(%"class.std::vector.31"* %5) #3
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.55", %"class.__gnu_cxx::__normal_iterator.55"* %4, i32 0, i32 0
  store %"struct.std::pair.36"* %8, %"struct.std::pair.36"** %9, align 8
  %10 = call zeroext i1 @_ZN9__gnu_cxxeqIPKSt4pairIxxESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.55"* dereferenceable(8) %3, %"class.__gnu_cxx::__normal_iterator.55"* dereferenceable(8) %4) #3
  ret i1 %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxeqIPKSt4pairIxxESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.55"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.55"* dereferenceable(8)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.973
  %7 = load i32, i32* @y.974
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 532615001, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %88
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 532615001, label %19
    i32 1916325973, label %39
    i32 -1048579521, label %76
    i32 -1304565970, label %78
  ]

; <label>:18:                                     ; preds = %16
  br label %88

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1916325973, i32 -1304565970
  store i32 %38, i32* %15
  br label %88

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.55"*, align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.55"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.55"* %0, %"class.__gnu_cxx::__normal_iterator.55"** %40, align 8
  store %"class.__gnu_cxx::__normal_iterator.55"* %1, %"class.__gnu_cxx::__normal_iterator.55"** %41, align 8
  %42 = load %"class.__gnu_cxx::__normal_iterator.55"*, %"class.__gnu_cxx::__normal_iterator.55"** %40, align 8
  %43 = call dereferenceable(8) %"struct.std::pair.36"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIxxESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.55"* %42) #3
  %44 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %43, align 8
  %45 = load %"class.__gnu_cxx::__normal_iterator.55"*, %"class.__gnu_cxx::__normal_iterator.55"** %41, align 8
  %46 = call dereferenceable(8) %"struct.std::pair.36"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIxxESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.55"* %45) #3
  %47 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %46, align 8
  %48 = icmp eq %"struct.std::pair.36"* %44, %47
  store i1 %48, i1* %3
  %49 = load i32, i32* @x.973
  %50 = load i32, i32* @y.974
  %51 = sub i32 %49, -1389601885
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -1389601885
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -1048579521, i32 -1304565970
  store i32 %75, i32* %15
  br label %88

; <label>:76:                                     ; preds = %16
  %77 = load volatile i1, i1* %3
  ret i1 %77

; <label>:78:                                     ; preds = %16
  %79 = alloca %"class.__gnu_cxx::__normal_iterator.55"*, align 8
  %80 = alloca %"class.__gnu_cxx::__normal_iterator.55"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.55"* %0, %"class.__gnu_cxx::__normal_iterator.55"** %79, align 8
  store %"class.__gnu_cxx::__normal_iterator.55"* %1, %"class.__gnu_cxx::__normal_iterator.55"** %80, align 8
  %81 = load %"class.__gnu_cxx::__normal_iterator.55"*, %"class.__gnu_cxx::__normal_iterator.55"** %79, align 8
  %82 = call dereferenceable(8) %"struct.std::pair.36"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIxxESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.55"* %81) #3
  %83 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %82, align 8
  %84 = load %"class.__gnu_cxx::__normal_iterator.55"*, %"class.__gnu_cxx::__normal_iterator.55"** %80, align 8
  %85 = call dereferenceable(8) %"struct.std::pair.36"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIxxESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.55"* %84) #3
  %86 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %85, align 8
  %87 = icmp eq %"struct.std::pair.36"* %83, %86
  store i32 1916325973, i32* %15
  br label %88

; <label>:88:                                     ; preds = %78, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.36"* @_ZNKSt6vectorISt4pairIxxESaIS1_EE5beginEv(%"class.std::vector.31"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.55", align 8
  %3 = alloca %"class.std::vector.31"*, align 8
  %4 = alloca %"struct.std::pair.36"*, align 8
  store %"class.std::vector.31"* %0, %"class.std::vector.31"** %3, align 8
  %5 = load %"class.std::vector.31"*, %"class.std::vector.31"** %3, align 8
  %6 = bitcast %"class.std::vector.31"* %5 to %"struct.std::_Vector_base.32"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %8, align 8
  store %"struct.std::pair.36"* %9, %"struct.std::pair.36"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIxxESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.55"* %2, %"struct.std::pair.36"** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.55", %"class.__gnu_cxx::__normal_iterator.55"* %2, i32 0, i32 0
  %11 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %10, align 8
  ret %"struct.std::pair.36"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.36"* @_ZNKSt6vectorISt4pairIxxESaIS1_EE3endEv(%"class.std::vector.31"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.55", align 8
  %3 = alloca %"class.std::vector.31"*, align 8
  %4 = alloca %"struct.std::pair.36"*, align 8
  store %"class.std::vector.31"* %0, %"class.std::vector.31"** %3, align 8
  %5 = load %"class.std::vector.31"*, %"class.std::vector.31"** %3, align 8
  %6 = bitcast %"class.std::vector.31"* %5 to %"struct.std::_Vector_base.32"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %7, i32 0, i32 1
  %9 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %8, align 8
  store %"struct.std::pair.36"* %9, %"struct.std::pair.36"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIxxESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.55"* %2, %"struct.std::pair.36"** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.55", %"class.__gnu_cxx::__normal_iterator.55"* %2, i32 0, i32 0
  %11 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %10, align 8
  ret %"struct.std::pair.36"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::pair.36"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIxxESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.55"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.55"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.55"* %0, %"class.__gnu_cxx::__normal_iterator.55"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.55"*, %"class.__gnu_cxx::__normal_iterator.55"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.55", %"class.__gnu_cxx::__normal_iterator.55"* %3, i32 0, i32 0
  ret %"struct.std::pair.36"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIxxESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.55"*, %"struct.std::pair.36"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.981
  %6 = load i32, i32* @y.982
  %7 = sub i32 %5, 467092228
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 467092228
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -710575349, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %57
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -710575349, label %19
    i32 -694559310, label %27
    i32 813214843, label %49
    i32 1135554476, label %50
  ]

; <label>:18:                                     ; preds = %16
  br label %57

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -694559310, i32 1135554476
  store i32 %26, i32* %15
  br label %57

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.55"*, align 8
  %29 = alloca %"struct.std::pair.36"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.55"* %0, %"class.__gnu_cxx::__normal_iterator.55"** %28, align 8
  store %"struct.std::pair.36"** %1, %"struct.std::pair.36"*** %29, align 8
  %30 = load %"class.__gnu_cxx::__normal_iterator.55"*, %"class.__gnu_cxx::__normal_iterator.55"** %28, align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.55", %"class.__gnu_cxx::__normal_iterator.55"* %30, i32 0, i32 0
  %32 = load %"struct.std::pair.36"**, %"struct.std::pair.36"*** %29, align 8
  %33 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %32, align 8
  store %"struct.std::pair.36"* %33, %"struct.std::pair.36"** %31, align 8
  %34 = load i32, i32* @x.981
  %35 = load i32, i32* @y.982
  %36 = add i32 %34, -813893279
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, -813893279
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 813214843, i32 1135554476
  store i32 %48, i32* %15
  br label %57

; <label>:49:                                     ; preds = %16
  ret void

; <label>:50:                                     ; preds = %16
  %51 = alloca %"class.__gnu_cxx::__normal_iterator.55"*, align 8
  %52 = alloca %"struct.std::pair.36"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.55"* %0, %"class.__gnu_cxx::__normal_iterator.55"** %51, align 8
  store %"struct.std::pair.36"** %1, %"struct.std::pair.36"*** %52, align 8
  %53 = load %"class.__gnu_cxx::__normal_iterator.55"*, %"class.__gnu_cxx::__normal_iterator.55"** %51, align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.55", %"class.__gnu_cxx::__normal_iterator.55"* %53, i32 0, i32 0
  %55 = load %"struct.std::pair.36"**, %"struct.std::pair.36"*** %52, align 8
  %56 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %55, align 8
  store %"struct.std::pair.36"* %56, %"struct.std::pair.36"** %54, align 8
  store i32 -694559310, i32* %15
  br label %57

; <label>:57:                                     ; preds = %50, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair.36"* @_ZNKSt6vectorISt4pairIxxESaIS1_EE5frontEv(%"class.std::vector.31"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.31"*, align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.55", align 8
  store %"class.std::vector.31"* %0, %"class.std::vector.31"** %2, align 8
  %4 = load %"class.std::vector.31"*, %"class.std::vector.31"** %2, align 8
  %5 = call %"struct.std::pair.36"* @_ZNKSt6vectorISt4pairIxxESaIS1_EE5beginEv(%"class.std::vector.31"* %4) #3
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.55", %"class.__gnu_cxx::__normal_iterator.55"* %3, i32 0, i32 0
  store %"struct.std::pair.36"* %5, %"struct.std::pair.36"** %6, align 8
  %7 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.55"* %3) #3
  ret %"struct.std::pair.36"* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.55"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.55"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.55"* %0, %"class.__gnu_cxx::__normal_iterator.55"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.55"*, %"class.__gnu_cxx::__normal_iterator.55"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.55", %"class.__gnu_cxx::__normal_iterator.55"* %3, i32 0, i32 0
  %5 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %4, align 8
  ret %"struct.std::pair.36"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8pop_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEESt7greaterIS3_EEvT_SB_T0_(%"struct.std::pair.36"*, %"struct.std::pair.36"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.53"*
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.53"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.53"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.53"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.53"*
  %9 = alloca i1
  %10 = alloca i1
  %11 = load i32, i32* @x.987
  %12 = load i32, i32* @y.988
  %13 = add i32 %11, 1297184099
  %14 = sub i32 %13, 1
  %15 = sub i32 %14, 1297184099
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  store i1 %19, i1* %10
  %20 = icmp slt i32 %12, 10
  store i1 %20, i1* %9
  %21 = alloca i32
  store i32 383929778, i32* %21
  br label %22

; <label>:22:                                     ; preds = %2, %151
  %23 = load i32, i32* %21
  switch i32 %23, label %24 [
    i32 383929778, label %25
    i32 24929847, label %33
    i32 372991796, label %78
    i32 -406567139, label %81
    i32 -148266553, label %105
    i32 -1819110229, label %120
    i32 -1799272766, label %135
    i32 751815309, label %136
    i32 -1210296539, label %150
  ]

; <label>:24:                                     ; preds = %22
  br label %151

; <label>:25:                                     ; preds = %22
  %26 = load volatile i1, i1* %10
  %27 = load volatile i1, i1* %9
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  %32 = select i1 %30, i32 24929847, i32 751815309
  store i32 %32, i32* %21
  br label %151

; <label>:33:                                     ; preds = %22
  %34 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  store %"class.__gnu_cxx::__normal_iterator.53"* %34, %"class.__gnu_cxx::__normal_iterator.53"** %8
  %35 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  store %"class.__gnu_cxx::__normal_iterator.53"* %35, %"class.__gnu_cxx::__normal_iterator.53"** %7
  %36 = alloca %"struct.std::greater", align 1
  %37 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  store %"class.__gnu_cxx::__normal_iterator.53"* %37, %"class.__gnu_cxx::__normal_iterator.53"** %6
  %38 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  store %"class.__gnu_cxx::__normal_iterator.53"* %38, %"class.__gnu_cxx::__normal_iterator.53"** %5
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  store %"class.__gnu_cxx::__normal_iterator.53"* %39, %"class.__gnu_cxx::__normal_iterator.53"** %4
  %40 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %41 = alloca %"struct.std::greater", align 1
  %42 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %43 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %8
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %43, i32 0, i32 0
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %44, align 8
  %45 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %7
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %45, i32 0, i32 0
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %46, align 8
  %47 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %8
  %48 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %7
  %49 = call i64 @_ZN9__gnu_cxxmiIPSt4pairIxxESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.53"* dereferenceable(8) %48, %"class.__gnu_cxx::__normal_iterator.53"* dereferenceable(8) %47) #3
  %50 = icmp sgt i64 %49, 1
  store i1 %50, i1* %3
  %51 = load i32, i32* @x.987
  %52 = load i32, i32* @y.988
  %53 = sub i32 %51, -1205757693
  %54 = sub i32 %53, 1
  %55 = add i32 %54, -1205757693
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 372991796, i32 751815309
  store i32 %77, i32* %21
  br label %151

; <label>:78:                                     ; preds = %22
  %79 = load volatile i1, i1* %3
  %80 = select i1 %79, i32 -406567139, i32 -148266553
  store i32 %80, i32* %21
  br label %151

; <label>:81:                                     ; preds = %22
  %82 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %7
  %83 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.53"* @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEmmEv(%"class.__gnu_cxx::__normal_iterator.53"* %82) #3
  %84 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %6
  %85 = bitcast %"class.__gnu_cxx::__normal_iterator.53"* %84 to i8*
  %86 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %8
  %87 = bitcast %"class.__gnu_cxx::__normal_iterator.53"* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %87, i64 8, i32 8, i1 false)
  %88 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %5
  %89 = bitcast %"class.__gnu_cxx::__normal_iterator.53"* %88 to i8*
  %90 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %7
  %91 = bitcast %"class.__gnu_cxx::__normal_iterator.53"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %89, i8* %91, i64 8, i32 8, i1 false)
  %92 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %4
  %93 = bitcast %"class.__gnu_cxx::__normal_iterator.53"* %92 to i8*
  %94 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %7
  %95 = bitcast %"class.__gnu_cxx::__normal_iterator.53"* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %93, i8* %95, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops16__iter_comp_iterISt7greaterISt4pairIxxEEEENS0_15_Iter_comp_iterIT_EES7_()
  %96 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %6
  %97 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %96, i32 0, i32 0
  %98 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %97, align 8
  %99 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %5
  %100 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %99, i32 0, i32 0
  %101 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %100, align 8
  %102 = load volatile %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %4
  %103 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %102, i32 0, i32 0
  %104 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %103, align 8
  call void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_SE_SE_T0_(%"struct.std::pair.36"* %98, %"struct.std::pair.36"* %101, %"struct.std::pair.36"* %104)
  store i32 -148266553, i32* %21
  br label %151

; <label>:105:                                    ; preds = %22
  %106 = load i32, i32* @x.987
  %107 = load i32, i32* @y.988
  %108 = sub i32 0, 1
  %109 = add i32 %106, %108
  %110 = sub i32 %106, 1
  %111 = mul i32 %106, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %107, 10
  %115 = and i1 %113, %114
  %116 = xor i1 %113, %114
  %117 = or i1 %115, %116
  %118 = or i1 %113, %114
  %119 = select i1 %117, i32 -1819110229, i32 -1210296539
  store i32 %119, i32* %21
  br label %151

; <label>:120:                                    ; preds = %22
  %121 = load i32, i32* @x.987
  %122 = load i32, i32* @y.988
  %123 = sub i32 0, 1
  %124 = add i32 %121, %123
  %125 = sub i32 %121, 1
  %126 = mul i32 %121, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %122, 10
  %130 = and i1 %128, %129
  %131 = xor i1 %128, %129
  %132 = or i1 %130, %131
  %133 = or i1 %128, %129
  %134 = select i1 %132, i32 -1799272766, i32 -1210296539
  store i32 %134, i32* %21
  br label %151

; <label>:135:                                    ; preds = %22
  ret void

; <label>:136:                                    ; preds = %22
  %137 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %138 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %139 = alloca %"struct.std::greater", align 1
  %140 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %141 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %142 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %143 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %144 = alloca %"struct.std::greater", align 1
  %145 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %146 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %137, i32 0, i32 0
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %146, align 8
  %147 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %138, i32 0, i32 0
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %147, align 8
  %148 = call i64 @_ZN9__gnu_cxxmiIPSt4pairIxxESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.53"* dereferenceable(8) %138, %"class.__gnu_cxx::__normal_iterator.53"* dereferenceable(8) %137) #3
  %149 = icmp sgt i64 %148, 1
  store i32 24929847, i32* %21
  br label %151

; <label>:150:                                    ; preds = %22
  store i32 -1819110229, i32* %21
  br label %151

; <label>:151:                                    ; preds = %150, %136, %120, %105, %81, %78, %33, %25, %24
  br label %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIxxESaIS1_EE8pop_backEv(%"class.std::vector.31"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.989
  %3 = load i32, i32* @y.990
  %4 = add i32 %2, -773326798
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -773326798
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %127

; <label>:28:                                     ; preds = %1, %127
  %29 = alloca %"class.std::vector.31"*, align 8
  store %"class.std::vector.31"* %0, %"class.std::vector.31"** %29, align 8
  %30 = load %"class.std::vector.31"*, %"class.std::vector.31"** %29, align 8
  %31 = bitcast %"class.std::vector.31"* %30 to %"struct.std::_Vector_base.32"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %32, i32 0, i32 1
  %34 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %33, align 8
  %35 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %34, i32 -1
  store %"struct.std::pair.36"* %35, %"struct.std::pair.36"** %33, align 8
  %36 = bitcast %"class.std::vector.31"* %30 to %"struct.std::_Vector_base.32"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %37 to %"class.std::allocator.33"*
  %39 = bitcast %"class.std::vector.31"* %30 to %"struct.std::_Vector_base.32"*
  %40 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %39, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %40, i32 0, i32 1
  %42 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %41, align 8
  %43 = load i32, i32* @x.989
  %44 = load i32, i32* @y.990
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  br i1 %66, label %68, label %127

; <label>:68:                                     ; preds = %28
  invoke void @_ZNSt16allocator_traitsISaISt4pairIxxEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.33"* dereferenceable(1) %38, %"struct.std::pair.36"* %42)
          to label %69 unwind label %124

; <label>:69:                                     ; preds = %68
  %70 = load i32, i32* @x.989
  %71 = load i32, i32* @y.990
  %72 = add i32 %70, -1879371675
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, -1879371675
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 false, true
  %83 = and i1 %80, false
  %84 = and i1 %78, %82
  %85 = and i1 %81, false
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 false, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  br i1 %94, label %96, label %142

; <label>:96:                                     ; preds = %69, %142
  %97 = load i32, i32* @x.989
  %98 = load i32, i32* @y.990
  %99 = sub i32 %97, -1652226471
  %100 = sub i32 %99, 1
  %101 = add i32 %100, -1652226471
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = xor i1 %105, true
  %108 = xor i1 %106, true
  %109 = xor i1 false, true
  %110 = and i1 %107, false
  %111 = and i1 %105, %109
  %112 = and i1 %108, false
  %113 = and i1 %106, %109
  %114 = or i1 %110, %111
  %115 = or i1 %112, %113
  %116 = xor i1 %114, %115
  %117 = or i1 %107, %108
  %118 = xor i1 %117, true
  %119 = or i1 false, %109
  %120 = and i1 %118, %119
  %121 = or i1 %116, %120
  %122 = or i1 %105, %106
  br i1 %121, label %123, label %142

; <label>:123:                                    ; preds = %96
  ret void

; <label>:124:                                    ; preds = %68
  %125 = landingpad { i8*, i32 }
          catch i8* null
  %126 = extractvalue { i8*, i32 } %125, 0
  call void @__clang_call_terminate(i8* %126) #12
  unreachable

; <label>:127:                                    ; preds = %28, %1
  %128 = alloca %"class.std::vector.31"*, align 8
  store %"class.std::vector.31"* %0, %"class.std::vector.31"** %128, align 8
  %129 = load %"class.std::vector.31"*, %"class.std::vector.31"** %128, align 8
  %130 = bitcast %"class.std::vector.31"* %129 to %"struct.std::_Vector_base.32"*
  %131 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %130, i32 0, i32 0
  %132 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %131, i32 0, i32 1
  %133 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %132, align 8
  %134 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %133, i32 -1
  store %"struct.std::pair.36"* %134, %"struct.std::pair.36"** %132, align 8
  %135 = bitcast %"class.std::vector.31"* %129 to %"struct.std::_Vector_base.32"*
  %136 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %135, i32 0, i32 0
  %137 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %136 to %"class.std::allocator.33"*
  %138 = bitcast %"class.std::vector.31"* %129 to %"struct.std::_Vector_base.32"*
  %139 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %138, i32 0, i32 0
  %140 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %139, i32 0, i32 1
  %141 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %140, align 8
  br label %28

; <label>:142:                                    ; preds = %96, %69
  br label %96
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.53"* @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEmmEv(%"class.__gnu_cxx::__normal_iterator.53"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.53"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.53"* %0, %"class.__gnu_cxx::__normal_iterator.53"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.53"*, %"class.__gnu_cxx::__normal_iterator.53"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %3, i32 0, i32 0
  %5 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %5, i32 -1
  store %"struct.std::pair.36"* %6, %"struct.std::pair.36"** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator.53"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEENS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_SE_SE_T0_(%"struct.std::pair.36"*, %"struct.std::pair.36"*, %"struct.std::pair.36"*) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.993
  %7 = load i32, i32* @y.994
  %8 = add i32 %6, 1140161733
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1140161733
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 504206282, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %113
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 504206282, label %20
    i32 -492461899, label %28
    i32 262164722, label %77
    i32 -574406968, label %78
  ]

; <label>:19:                                     ; preds = %17
  br label %113

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -492461899, i32 -574406968
  store i32 %27, i32* %16
  br label %113

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %32 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %33 = alloca %"struct.std::pair.36", align 8
  %34 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %35 = alloca %"struct.std::pair.36", align 8
  %36 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %29, i32 0, i32 0
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %37, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %30, i32 0, i32 0
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %38, align 8
  %39 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %31, i32 0, i32 0
  store %"struct.std::pair.36"* %2, %"struct.std::pair.36"** %39, align 8
  %40 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.53"* %31) #3
  %41 = call dereferenceable(16) %"struct.std::pair.36"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.36"* dereferenceable(16) %40) #3
  %42 = bitcast %"struct.std::pair.36"* %33 to i8*
  %43 = bitcast %"struct.std::pair.36"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 16, i32 8, i1 false)
  %44 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.53"* %29) #3
  %45 = call dereferenceable(16) %"struct.std::pair.36"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.36"* dereferenceable(16) %44) #3
  %46 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.53"* %31) #3
  %47 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNSt4pairIxxEaSEOS0_(%"struct.std::pair.36"* %46, %"struct.std::pair.36"* dereferenceable(16) %45) #3
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator.53"* %34 to i8*
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator.53"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 8, i1 false)
  %50 = call i64 @_ZN9__gnu_cxxmiIPSt4pairIxxESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.53"* dereferenceable(8) %30, %"class.__gnu_cxx::__normal_iterator.53"* dereferenceable(8) %29) #3
  %51 = call dereferenceable(16) %"struct.std::pair.36"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.36"* dereferenceable(16) %33) #3
  %52 = bitcast %"struct.std::pair.36"* %35 to i8*
  %53 = bitcast %"struct.std::pair.36"* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 16, i32 8, i1 false)
  %54 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %36 to i8*
  %55 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* %55, i64 1, i32 1, i1 false)
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %34, i32 0, i32 0
  %57 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %56, align 8
  %58 = bitcast %"struct.std::pair.36"* %35 to { i64, i64 }*
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %58, i32 0, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %58, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_T0_SF_T1_T2_(%"struct.std::pair.36"* %57, i64 0, i64 %50, i64 %60, i64 %62)
  %63 = load i32, i32* @x.993
  %64 = load i32, i32* @y.994
  %65 = sub i32 0, 1
  %66 = add i32 %63, %65
  %67 = sub i32 %63, 1
  %68 = mul i32 %63, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %64, 10
  %72 = and i1 %70, %71
  %73 = xor i1 %70, %71
  %74 = or i1 %72, %73
  %75 = or i1 %70, %71
  %76 = select i1 %74, i32 262164722, i32 -574406968
  store i32 %76, i32* %16
  br label %113

; <label>:77:                                     ; preds = %17
  ret void

; <label>:78:                                     ; preds = %17
  %79 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %80 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %81 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %82 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %83 = alloca %"struct.std::pair.36", align 8
  %84 = alloca %"class.__gnu_cxx::__normal_iterator.53", align 8
  %85 = alloca %"struct.std::pair.36", align 8
  %86 = alloca %"struct.__gnu_cxx::__ops::_Iter_comp_iter", align 1
  %87 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %79, i32 0, i32 0
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %87, align 8
  %88 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %80, i32 0, i32 0
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %88, align 8
  %89 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %81, i32 0, i32 0
  store %"struct.std::pair.36"* %2, %"struct.std::pair.36"** %89, align 8
  %90 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.53"* %81) #3
  %91 = call dereferenceable(16) %"struct.std::pair.36"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.36"* dereferenceable(16) %90) #3
  %92 = bitcast %"struct.std::pair.36"* %83 to i8*
  %93 = bitcast %"struct.std::pair.36"* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %92, i8* %93, i64 16, i32 8, i1 false)
  %94 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.53"* %79) #3
  %95 = call dereferenceable(16) %"struct.std::pair.36"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.36"* dereferenceable(16) %94) #3
  %96 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.53"* %81) #3
  %97 = call dereferenceable(16) %"struct.std::pair.36"* @_ZNSt4pairIxxEaSEOS0_(%"struct.std::pair.36"* %96, %"struct.std::pair.36"* dereferenceable(16) %95) #3
  %98 = bitcast %"class.__gnu_cxx::__normal_iterator.53"* %84 to i8*
  %99 = bitcast %"class.__gnu_cxx::__normal_iterator.53"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %98, i8* %99, i64 8, i32 8, i1 false)
  %100 = call i64 @_ZN9__gnu_cxxmiIPSt4pairIxxESt6vectorIS2_SaIS2_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSA_SD_(%"class.__gnu_cxx::__normal_iterator.53"* dereferenceable(8) %80, %"class.__gnu_cxx::__normal_iterator.53"* dereferenceable(8) %79) #3
  %101 = call dereferenceable(16) %"struct.std::pair.36"* @_ZSt4moveIRSt4pairIxxEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.std::pair.36"* dereferenceable(16) %83) #3
  %102 = bitcast %"struct.std::pair.36"* %85 to i8*
  %103 = bitcast %"struct.std::pair.36"* %101 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %102, i8* %103, i64 16, i32 8, i1 false)
  %104 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %86 to i8*
  %105 = bitcast %"struct.__gnu_cxx::__ops::_Iter_comp_iter"* %82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %104, i8* %105, i64 1, i32 1, i1 false)
  %106 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.53", %"class.__gnu_cxx::__normal_iterator.53"* %84, i32 0, i32 0
  %107 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %106, align 8
  %108 = bitcast %"struct.std::pair.36"* %85 to { i64, i64 }*
  %109 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %108, i32 0, i32 0
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %108, i32 0, i32 1
  %112 = load i64, i64* %111, align 8
  call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS3_SaIS3_EEEElS3_NS0_5__ops15_Iter_comp_iterISt7greaterIS3_EEEEvT_T0_SF_T1_T2_(%"struct.std::pair.36"* %107, i64 0, i64 %100, i64 %110, i64 %112)
  store i32 -492461899, i32* %16
  br label %113

; <label>:113:                                    ; preds = %78, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS1_SaIS1_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"*, %struct.Edge** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.995
  %6 = load i32, i32* @y.996
  %7 = sub i32 %5, 1501700722
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1501700722
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1284810005, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1284810005, label %19
    i32 -279829287, label %39
    i32 -690280940, label %60
    i32 -721886853, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -279829287, i32 -721886853
  store i32 %38, i32* %15
  br label %68

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %41 = alloca %struct.Edge**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %40, align 8
  store %struct.Edge** %1, %struct.Edge*** %41, align 8
  %42 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %40, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %42, i32 0, i32 0
  %44 = load %struct.Edge**, %struct.Edge*** %41, align 8
  %45 = load %struct.Edge*, %struct.Edge** %44, align 8
  store %struct.Edge* %45, %struct.Edge** %43, align 8
  %46 = load i32, i32* @x.995
  %47 = load i32, i32* @y.996
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -690280940, i32 -721886853
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %63 = alloca %struct.Edge**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %62, align 8
  store %struct.Edge** %1, %struct.Edge*** %63, align 8
  %64 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %62, align 8
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %64, i32 0, i32 0
  %66 = load %struct.Edge**, %struct.Edge*** %63, align 8
  %67 = load %struct.Edge*, %struct.Edge** %66, align 8
  store %struct.Edge* %67, %struct.Edge** %65, align 8
  store i32 -279829287, i32* %15
  br label %68

; <label>:68:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %struct.Edge** @_ZNK9__gnu_cxx17__normal_iteratorIPK4EdgeSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  ret %struct.Edge** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIxxESaIS1_EE12emplace_backIJRxRKxEEEvDpOT_(%"class.std::vector.31"*, i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"struct.std::pair.36"*
  %5 = alloca %"struct.std::pair.36"*
  %6 = alloca %"class.std::vector.31"*
  %7 = alloca %"class.std::vector.31"*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i64*, align 8
  store %"class.std::vector.31"* %0, %"class.std::vector.31"** %7, align 8
  store i64* %1, i64** %8, align 8
  store i64* %2, i64** %9, align 8
  %10 = load %"class.std::vector.31"*, %"class.std::vector.31"** %7, align 8
  store %"class.std::vector.31"* %10, %"class.std::vector.31"** %6
  %11 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %6
  %12 = bitcast %"class.std::vector.31"* %11 to %"struct.std::_Vector_base.32"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %12, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %13, i32 0, i32 1
  %15 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %14, align 8
  store %"struct.std::pair.36"* %15, %"struct.std::pair.36"** %5
  %16 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %6
  %17 = bitcast %"class.std::vector.31"* %16 to %"struct.std::_Vector_base.32"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %18, i32 0, i32 2
  %20 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %19, align 8
  store %"struct.std::pair.36"* %20, %"struct.std::pair.36"** %4
  %21 = alloca i32
  store i32 -37247915, i32* %21
  br label %22

; <label>:22:                                     ; preds = %3, %57
  %23 = load i32, i32* %21
  switch i32 %23, label %24 [
    i32 -37247915, label %25
    i32 -1232591515, label %30
    i32 -273177553, label %50
    i32 -118304870, label %56
  ]

; <label>:24:                                     ; preds = %22
  br label %57

; <label>:25:                                     ; preds = %22
  %26 = load volatile %"struct.std::pair.36"*, %"struct.std::pair.36"** %5
  %27 = load volatile %"struct.std::pair.36"*, %"struct.std::pair.36"** %4
  %28 = icmp ne %"struct.std::pair.36"* %26, %27
  %29 = select i1 %28, i32 -1232591515, i32 -273177553
  store i32 %29, i32* %21
  br label %57

; <label>:30:                                     ; preds = %22
  %31 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %6
  %32 = bitcast %"class.std::vector.31"* %31 to %"struct.std::_Vector_base.32"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %32, i32 0, i32 0
  %34 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %33 to %"class.std::allocator.33"*
  %35 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %6
  %36 = bitcast %"class.std::vector.31"* %35 to %"struct.std::_Vector_base.32"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %37, i32 0, i32 1
  %39 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %38, align 8
  %40 = load i64*, i64** %8, align 8
  %41 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %40) #3
  %42 = load i64*, i64** %9, align 8
  %43 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %42) #3
  call void @_ZNSt16allocator_traitsISaISt4pairIxxEEE9constructIS1_JRxRKxEEEvRS2_PT_DpOT0_(%"class.std::allocator.33"* dereferenceable(1) %34, %"struct.std::pair.36"* %39, i64* dereferenceable(8) %41, i64* dereferenceable(8) %43)
  %44 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %6
  %45 = bitcast %"class.std::vector.31"* %44 to %"struct.std::_Vector_base.32"*
  %46 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %46, i32 0, i32 1
  %48 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %47, align 8
  %49 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %48, i32 1
  store %"struct.std::pair.36"* %49, %"struct.std::pair.36"** %47, align 8
  store i32 -118304870, i32* %21
  br label %57

; <label>:50:                                     ; preds = %22
  %51 = load i64*, i64** %8, align 8
  %52 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %51) #3
  %53 = load i64*, i64** %9, align 8
  %54 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %53) #3
  %55 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %6
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EE19_M_emplace_back_auxIJRxRKxEEEvDpOT_(%"class.std::vector.31"* %55, i64* dereferenceable(8) %52, i64* dereferenceable(8) %54)
  store i32 -118304870, i32* %21
  br label %57

; <label>:56:                                     ; preds = %22
  ret void

; <label>:57:                                     ; preds = %50, %30, %25, %24
  br label %22
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIxxEEE9constructIS1_JRxRKxEEEvRS2_PT_DpOT0_(%"class.std::allocator.33"* dereferenceable(1), %"struct.std::pair.36"*, i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %5 = alloca %"class.std::allocator.33"*, align 8
  %6 = alloca %"struct.std::pair.36"*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  store %"class.std::allocator.33"* %0, %"class.std::allocator.33"** %5, align 8
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %6, align 8
  store i64* %2, i64** %7, align 8
  store i64* %3, i64** %8, align 8
  %9 = load %"class.std::allocator.33"*, %"class.std::allocator.33"** %5, align 8
  %10 = bitcast %"class.std::allocator.33"* %9 to %"class.__gnu_cxx::new_allocator.34"*
  %11 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %6, align 8
  %12 = load i64*, i64** %7, align 8
  %13 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %12) #3
  %14 = load i64*, i64** %8, align 8
  %15 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %14) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE9constructIS2_JRxRKxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.34"* %10, %"struct.std::pair.36"* %11, i64* dereferenceable(8) %13, i64* dereferenceable(8) %15)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIxxESaIS1_EE19_M_emplace_back_auxIJRxRKxEEEvDpOT_(%"class.std::vector.31"*, i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.31"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"struct.std::pair.36"*, align 8
  %9 = alloca %"struct.std::pair.36"*, align 8
  %10 = alloca i8*
  %11 = alloca i32
  store %"class.std::vector.31"* %0, %"class.std::vector.31"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %12 = load %"class.std::vector.31"*, %"class.std::vector.31"** %4, align 8
  %13 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.31"* %12, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %13, i64* %7, align 8
  %14 = bitcast %"class.std::vector.31"* %12 to %"struct.std::_Vector_base.32"*
  %15 = load i64, i64* %7, align 8
  %16 = call %"struct.std::pair.36"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.32"* %14, i64 %15)
  store %"struct.std::pair.36"* %16, %"struct.std::pair.36"** %8, align 8
  %17 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %8, align 8
  store %"struct.std::pair.36"* %17, %"struct.std::pair.36"** %9, align 8
  %18 = bitcast %"class.std::vector.31"* %12 to %"struct.std::_Vector_base.32"*
  %19 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %18, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %19 to %"class.std::allocator.33"*
  %21 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %8, align 8
  %22 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector.31"* %12) #3
  %23 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %21, i64 %22
  %24 = load i64*, i64** %5, align 8
  %25 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %24) #3
  %26 = load i64*, i64** %6, align 8
  %27 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %26) #3
  invoke void @_ZNSt16allocator_traitsISaISt4pairIxxEEE9constructIS1_JRxRKxEEEvRS2_PT_DpOT0_(%"class.std::allocator.33"* dereferenceable(1) %20, %"struct.std::pair.36"* %23, i64* dereferenceable(8) %25, i64* dereferenceable(8) %27)
          to label %28 unwind label %85

; <label>:28:                                     ; preds = %3
  store %"struct.std::pair.36"* null, %"struct.std::pair.36"** %9, align 8
  %29 = bitcast %"class.std::vector.31"* %12 to %"struct.std::_Vector_base.32"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %30, i32 0, i32 0
  %32 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %31, align 8
  %33 = bitcast %"class.std::vector.31"* %12 to %"struct.std::_Vector_base.32"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %34, i32 0, i32 1
  %36 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %35, align 8
  %37 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %8, align 8
  %38 = bitcast %"class.std::vector.31"* %12 to %"struct.std::_Vector_base.32"*
  %39 = call dereferenceable(1) %"class.std::allocator.33"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.32"* %38) #3
  %40 = invoke %"struct.std::pair.36"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt4pairIxxES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.std::pair.36"* %32, %"struct.std::pair.36"* %36, %"struct.std::pair.36"* %37, %"class.std::allocator.33"* dereferenceable(1) %39)
          to label %41 unwind label %85

; <label>:41:                                     ; preds = %28
  %42 = load i32, i32* @x.1003
  %43 = load i32, i32* @y.1004
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  br i1 %65, label %67, label %270

; <label>:67:                                     ; preds = %41, %270
  store %"struct.std::pair.36"* %40, %"struct.std::pair.36"** %9, align 8
  %68 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %9, align 8
  %69 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %68, i32 1
  store %"struct.std::pair.36"* %69, %"struct.std::pair.36"** %9, align 8
  %70 = load i32, i32* @x.1003
  %71 = load i32, i32* @y.1004
  %72 = add i32 %70, -1364576908
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, -1364576908
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  br i1 %82, label %84, label %270

; <label>:84:                                     ; preds = %67
  br label %175

; <label>:85:                                     ; preds = %28, %3
  %86 = load i32, i32* @x.1003
  %87 = load i32, i32* @y.1004
  %88 = sub i32 0, 1
  %89 = add i32 %86, %88
  %90 = sub i32 %86, 1
  %91 = mul i32 %86, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %87, 10
  %95 = and i1 %93, %94
  %96 = xor i1 %93, %94
  %97 = or i1 %95, %96
  %98 = or i1 %93, %94
  br i1 %97, label %99, label %273

; <label>:99:                                     ; preds = %85, %273
  %100 = landingpad { i8*, i32 }
          catch i8* null
  %101 = extractvalue { i8*, i32 } %100, 0
  store i8* %101, i8** %10, align 8
  %102 = extractvalue { i8*, i32 } %100, 1
  store i32 %102, i32* %11, align 4
  %103 = load i32, i32* @x.1003
  %104 = load i32, i32* @y.1004
  %105 = add i32 %103, -60288422
  %106 = sub i32 %105, 1
  %107 = sub i32 %106, -60288422
  %108 = sub i32 %103, 1
  %109 = mul i32 %103, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %104, 10
  %113 = and i1 %111, %112
  %114 = xor i1 %111, %112
  %115 = or i1 %113, %114
  %116 = or i1 %111, %112
  br i1 %115, label %117, label %273

; <label>:117:                                    ; preds = %99
  br label %118

; <label>:118:                                    ; preds = %117
  %119 = load i8*, i8** %10, align 8
  %120 = call i8* @__cxa_begin_catch(i8* %119) #3
  %121 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %9, align 8
  %122 = icmp ne %"struct.std::pair.36"* %121, null
  br i1 %122, label %163, label %123

; <label>:123:                                    ; preds = %118
  %124 = bitcast %"class.std::vector.31"* %12 to %"struct.std::_Vector_base.32"*
  %125 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %124, i32 0, i32 0
  %126 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %125 to %"class.std::allocator.33"*
  %127 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %8, align 8
  %128 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector.31"* %12) #3
  %129 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %127, i64 %128
  invoke void @_ZNSt16allocator_traitsISaISt4pairIxxEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.33"* dereferenceable(1) %126, %"struct.std::pair.36"* %129)
          to label %130 unwind label %159

; <label>:130:                                    ; preds = %123
  %131 = load i32, i32* @x.1003
  %132 = load i32, i32* @y.1004
  %133 = sub i32 0, 1
  %134 = add i32 %131, %133
  %135 = sub i32 %131, 1
  %136 = mul i32 %131, %134
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %132, 10
  %140 = and i1 %138, %139
  %141 = xor i1 %138, %139
  %142 = or i1 %140, %141
  %143 = or i1 %138, %139
  br i1 %142, label %144, label %277

; <label>:144:                                    ; preds = %130, %277
  %145 = load i32, i32* @x.1003
  %146 = load i32, i32* @y.1004
  %147 = sub i32 0, 1
  %148 = add i32 %145, %147
  %149 = sub i32 %145, 1
  %150 = mul i32 %145, %148
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %146, 10
  %154 = and i1 %152, %153
  %155 = xor i1 %152, %153
  %156 = or i1 %154, %155
  %157 = or i1 %152, %153
  br i1 %156, label %158, label %277

; <label>:158:                                    ; preds = %144
  br label %169

; <label>:159:                                    ; preds = %173, %169, %163, %123
  %160 = landingpad { i8*, i32 }
          cleanup
  %161 = extractvalue { i8*, i32 } %160, 0
  store i8* %161, i8** %10, align 8
  %162 = extractvalue { i8*, i32 } %160, 1
  store i32 %162, i32* %11, align 4
  invoke void @__cxa_end_catch()
          to label %174 unwind label %225

; <label>:163:                                    ; preds = %118
  %164 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %8, align 8
  %165 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %9, align 8
  %166 = bitcast %"class.std::vector.31"* %12 to %"struct.std::_Vector_base.32"*
  %167 = call dereferenceable(1) %"class.std::allocator.33"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.32"* %166) #3
  invoke void @_ZSt8_DestroyIPSt4pairIxxES1_EvT_S3_RSaIT0_E(%"struct.std::pair.36"* %164, %"struct.std::pair.36"* %165, %"class.std::allocator.33"* dereferenceable(1) %167)
          to label %168 unwind label %159

; <label>:168:                                    ; preds = %163
  br label %169

; <label>:169:                                    ; preds = %168, %158
  %170 = bitcast %"class.std::vector.31"* %12 to %"struct.std::_Vector_base.32"*
  %171 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %8, align 8
  %172 = load i64, i64* %7, align 8
  invoke void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.32"* %170, %"struct.std::pair.36"* %171, i64 %172)
          to label %173 unwind label %159

; <label>:173:                                    ; preds = %169
  invoke void @__cxa_rethrow() #15
          to label %228 unwind label %159

; <label>:174:                                    ; preds = %159
  br label %220

; <label>:175:                                    ; preds = %84
  %176 = bitcast %"class.std::vector.31"* %12 to %"struct.std::_Vector_base.32"*
  %177 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %176, i32 0, i32 0
  %178 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %177, i32 0, i32 0
  %179 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %178, align 8
  %180 = bitcast %"class.std::vector.31"* %12 to %"struct.std::_Vector_base.32"*
  %181 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %180, i32 0, i32 0
  %182 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %181, i32 0, i32 1
  %183 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %182, align 8
  %184 = bitcast %"class.std::vector.31"* %12 to %"struct.std::_Vector_base.32"*
  %185 = call dereferenceable(1) %"class.std::allocator.33"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.32"* %184) #3
  call void @_ZSt8_DestroyIPSt4pairIxxES1_EvT_S3_RSaIT0_E(%"struct.std::pair.36"* %179, %"struct.std::pair.36"* %183, %"class.std::allocator.33"* dereferenceable(1) %185)
  %186 = bitcast %"class.std::vector.31"* %12 to %"struct.std::_Vector_base.32"*
  %187 = bitcast %"class.std::vector.31"* %12 to %"struct.std::_Vector_base.32"*
  %188 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %187, i32 0, i32 0
  %189 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %188, i32 0, i32 0
  %190 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %189, align 8
  %191 = bitcast %"class.std::vector.31"* %12 to %"struct.std::_Vector_base.32"*
  %192 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %191, i32 0, i32 0
  %193 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %192, i32 0, i32 2
  %194 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %193, align 8
  %195 = bitcast %"class.std::vector.31"* %12 to %"struct.std::_Vector_base.32"*
  %196 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %195, i32 0, i32 0
  %197 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %196, i32 0, i32 0
  %198 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %197, align 8
  %199 = ptrtoint %"struct.std::pair.36"* %194 to i64
  %200 = ptrtoint %"struct.std::pair.36"* %198 to i64
  %201 = sub i64 %199, 4089526744487485411
  %202 = sub i64 %201, %200
  %203 = add i64 %202, 4089526744487485411
  %204 = sub i64 %199, %200
  %205 = sdiv exact i64 %203, 16
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.32"* %186, %"struct.std::pair.36"* %190, i64 %205)
  %206 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %8, align 8
  %207 = bitcast %"class.std::vector.31"* %12 to %"struct.std::_Vector_base.32"*
  %208 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %207, i32 0, i32 0
  %209 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %208, i32 0, i32 0
  store %"struct.std::pair.36"* %206, %"struct.std::pair.36"** %209, align 8
  %210 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %9, align 8
  %211 = bitcast %"class.std::vector.31"* %12 to %"struct.std::_Vector_base.32"*
  %212 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %211, i32 0, i32 0
  %213 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %212, i32 0, i32 1
  store %"struct.std::pair.36"* %210, %"struct.std::pair.36"** %213, align 8
  %214 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %8, align 8
  %215 = load i64, i64* %7, align 8
  %216 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %214, i64 %215
  %217 = bitcast %"class.std::vector.31"* %12 to %"struct.std::_Vector_base.32"*
  %218 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %217, i32 0, i32 0
  %219 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %218, i32 0, i32 2
  store %"struct.std::pair.36"* %216, %"struct.std::pair.36"** %219, align 8
  ret void

; <label>:220:                                    ; preds = %174
  %221 = load i8*, i8** %10, align 8
  %222 = load i32, i32* %11, align 4
  %223 = insertvalue { i8*, i32 } undef, i8* %221, 0
  %224 = insertvalue { i8*, i32 } %223, i32 %222, 1
  resume { i8*, i32 } %224

; <label>:225:                                    ; preds = %159
  %226 = landingpad { i8*, i32 }
          catch i8* null
  %227 = extractvalue { i8*, i32 } %226, 0
  call void @__clang_call_terminate(i8* %227) #12
  unreachable

; <label>:228:                                    ; preds = %173
  %229 = load i32, i32* @x.1003
  %230 = load i32, i32* @y.1004
  %231 = sub i32 0, 1
  %232 = add i32 %229, %231
  %233 = sub i32 %229, 1
  %234 = mul i32 %229, %232
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %230, 10
  %238 = and i1 %236, %237
  %239 = xor i1 %236, %237
  %240 = or i1 %238, %239
  %241 = or i1 %236, %237
  br i1 %240, label %242, label %278

; <label>:242:                                    ; preds = %228, %278
  %243 = load i32, i32* @x.1003
  %244 = load i32, i32* @y.1004
  %245 = add i32 %243, 446294100
  %246 = sub i32 %245, 1
  %247 = sub i32 %246, 446294100
  %248 = sub i32 %243, 1
  %249 = mul i32 %243, %247
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %244, 10
  %253 = xor i1 %251, true
  %254 = xor i1 %252, true
  %255 = xor i1 true, true
  %256 = and i1 %253, true
  %257 = and i1 %251, %255
  %258 = and i1 %254, true
  %259 = and i1 %252, %255
  %260 = or i1 %256, %257
  %261 = or i1 %258, %259
  %262 = xor i1 %260, %261
  %263 = or i1 %253, %254
  %264 = xor i1 %263, true
  %265 = or i1 true, %255
  %266 = and i1 %264, %265
  %267 = or i1 %262, %266
  %268 = or i1 %251, %252
  br i1 %267, label %269, label %278

; <label>:269:                                    ; preds = %242
  unreachable

; <label>:270:                                    ; preds = %67, %41
  store %"struct.std::pair.36"* %40, %"struct.std::pair.36"** %9, align 8
  %271 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %9, align 8
  %272 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %271, i32 1
  store %"struct.std::pair.36"* %272, %"struct.std::pair.36"** %9, align 8
  br label %67

; <label>:273:                                    ; preds = %99, %85
  %274 = landingpad { i8*, i32 }
          catch i8* null
  %275 = extractvalue { i8*, i32 } %274, 0
  store i8* %275, i8** %10, align 8
  %276 = extractvalue { i8*, i32 } %274, 1
  store i32 %276, i32* %11, align 4
  br label %99

; <label>:277:                                    ; preds = %144, %130
  br label %144

; <label>:278:                                    ; preds = %242, %228
  br label %242
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE9constructIS2_JRxRKxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.34"*, %"struct.std::pair.36"*, i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %5 = alloca %"class.__gnu_cxx::new_allocator.34"*, align 8
  %6 = alloca %"struct.std::pair.36"*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.34"* %0, %"class.__gnu_cxx::new_allocator.34"** %5, align 8
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %6, align 8
  store i64* %2, i64** %7, align 8
  store i64* %3, i64** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.34"*, %"class.__gnu_cxx::new_allocator.34"** %5, align 8
  %10 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %6, align 8
  %11 = bitcast %"struct.std::pair.36"* %10 to i8*
  %12 = bitcast i8* %11 to %"struct.std::pair.36"*
  %13 = load i64*, i64** %7, align 8
  %14 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %13) #3
  %15 = load i64*, i64** %8, align 8
  %16 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %15) #3
  call void @_ZNSt4pairIxxEC2IRxvEEOT_RKx(%"struct.std::pair.36"* %12, i64* dereferenceable(8) %14, i64* dereferenceable(8) %16)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIxxEC2IRxvEEOT_RKx(%"struct.std::pair.36"*, i64* dereferenceable(8), i64* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::pair.36"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %7, i32 0, i32 0
  %9 = load i64*, i64** %5, align 8
  %10 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %9) #3
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %8, align 8
  %12 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %7, i32 0, i32 1
  %13 = load i64*, i64** %6, align 8
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %12, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEEC2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.1009
  %5 = load i32, i32* @y.1010
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 888207268, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %48
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 888207268, label %17
    i32 64274745, label %25
    i32 1177731535, label %43
    i32 611017428, label %44
  ]

; <label>:16:                                     ; preds = %14
  br label %48

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 64274745, i32 611017428
  store i32 %24, i32* %13
  br label %48

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %26, align 8
  %27 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %26, align 8
  %28 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %27, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %28)
  %29 = load i32, i32* @x.1009
  %30 = load i32, i32* @y.1010
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 1177731535, i32 611017428
  store i32 %42, i32* %13
  br label %48

; <label>:43:                                     ; preds = %14
  ret void

; <label>:44:                                     ; preds = %14
  %45 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %45, align 8
  %46 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %45, align 8
  %47 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %46, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %47)
  store i32 64274745, i32* %13
  br label %48

; <label>:48:                                     ; preds = %44, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.1011
  %5 = load i32, i32* @y.1012
  %6 = add i32 %4, 1323706711
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1323706711
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 629924220, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %80
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 629924220, label %18
    i32 761759699, label %38
    i32 1324623926, label %72
    i32 -2051838573, label %73
  ]

; <label>:17:                                     ; preds = %15
  br label %80

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 761759699, i32 -2051838573
  store i32 %37, i32* %14
  br label %80

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %39, align 8
  %40 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %39, align 8
  %41 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %40 to %"class.std::allocator.2"*
  call void @_ZNSaIxEC2Ev(%"class.std::allocator.2"* %41) #3
  %42 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %40, i32 0, i32 0
  store i64* null, i64** %42, align 8
  %43 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %40, i32 0, i32 1
  store i64* null, i64** %43, align 8
  %44 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %40, i32 0, i32 2
  store i64* null, i64** %44, align 8
  %45 = load i32, i32* @x.1011
  %46 = load i32, i32* @y.1012
  %47 = add i32 %45, 1721860254
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, 1721860254
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 1324623926, i32 -2051838573
  store i32 %71, i32* %14
  br label %80

; <label>:72:                                     ; preds = %15
  ret void

; <label>:73:                                     ; preds = %15
  %74 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %74, align 8
  %75 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %74, align 8
  %76 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %75 to %"class.std::allocator.2"*
  call void @_ZNSaIxEC2Ev(%"class.std::allocator.2"* %76) #3
  %77 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %75, i32 0, i32 0
  store i64* null, i64** %77, align 8
  %78 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %75, i32 0, i32 1
  store i64* null, i64** %78, align 8
  %79 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %75, i32 0, i32 2
  store i64* null, i64** %79, align 8
  store i32 761759699, i32* %14
  br label %80

; <label>:80:                                     ; preds = %73, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt9__reverseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEEvT_S7_St26random_access_iterator_tag(i64*, i64*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %9 = alloca i1
  %10 = alloca i1
  %11 = load i32, i32* @x.1013
  %12 = load i32, i32* @y.1014
  %13 = sub i32 %11, -677668028
  %14 = sub i32 %13, 1
  %15 = add i32 %14, -677668028
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  store i1 %19, i1* %10
  %20 = icmp slt i32 %12, 10
  store i1 %20, i1* %9
  %21 = alloca i32
  store i32 -658171520, i32* %21
  br label %22

; <label>:22:                                     ; preds = %2, %186
  %23 = load i32, i32* %21
  switch i32 %23, label %24 [
    i32 -658171520, label %25
    i32 -1069640001, label %33
    i32 -1668353422, label %61
    i32 2122264168, label %64
    i32 -991506905, label %65
    i32 1413431648, label %81
    i32 2115911328, label %99
    i32 -265787520, label %100
    i32 9983789, label %128
    i32 -711527944, label %147
    i32 -1290822603, label %150
    i32 637623939, label %169
    i32 1139635620, label %170
    i32 -762008009, label %179
    i32 1955247068, label %182
  ]

; <label>:24:                                     ; preds = %22
  br label %186

; <label>:25:                                     ; preds = %22
  %26 = load volatile i1, i1* %10
  %27 = load volatile i1, i1* %9
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  %32 = select i1 %30, i32 -1069640001, i32 1139635620
  store i32 %32, i32* %21
  br label %186

; <label>:33:                                     ; preds = %22
  %34 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %34, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %35 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %35, %"class.__gnu_cxx::__normal_iterator.38"** %7
  %36 = alloca %"struct.std::random_access_iterator_tag", align 1
  %37 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %37, %"class.__gnu_cxx::__normal_iterator.38"** %6
  %38 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %38, %"class.__gnu_cxx::__normal_iterator.38"** %5
  %39 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %40 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %39, i32 0, i32 0
  store i64* %0, i64** %40, align 8
  %41 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %7
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %41, i32 0, i32 0
  store i64* %1, i64** %42, align 8
  %43 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %44 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %7
  %45 = call zeroext i1 @_ZN9__gnu_cxxeqIPxSt6vectorIxSaIxEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %43, %"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %44) #3
  store i1 %45, i1* %4
  %46 = load i32, i32* @x.1013
  %47 = load i32, i32* @y.1014
  %48 = sub i32 %46, 1723874951
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 1723874951
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -1668353422, i32 1139635620
  store i32 %60, i32* %21
  br label %186

; <label>:61:                                     ; preds = %22
  %62 = load volatile i1, i1* %4
  %63 = select i1 %62, i32 2122264168, i32 -991506905
  store i32 %63, i32* %21
  br label %186

; <label>:64:                                     ; preds = %22
  store i32 637623939, i32* %21
  br label %186

; <label>:65:                                     ; preds = %22
  %66 = load i32, i32* @x.1013
  %67 = load i32, i32* @y.1014
  %68 = add i32 %66, -667872101
  %69 = sub i32 %68, 1
  %70 = sub i32 %69, -667872101
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = and i1 %74, %75
  %77 = xor i1 %74, %75
  %78 = or i1 %76, %77
  %79 = or i1 %74, %75
  %80 = select i1 %78, i32 1413431648, i32 -762008009
  store i32 %80, i32* %21
  br label %186

; <label>:81:                                     ; preds = %22
  %82 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %7
  %83 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.38"* @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEmmEv(%"class.__gnu_cxx::__normal_iterator.38"* %82) #3
  %84 = load i32, i32* @x.1013
  %85 = load i32, i32* @y.1014
  %86 = sub i32 %84, -940989371
  %87 = sub i32 %86, 1
  %88 = add i32 %87, -940989371
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = and i1 %92, %93
  %95 = xor i1 %92, %93
  %96 = or i1 %94, %95
  %97 = or i1 %92, %93
  %98 = select i1 %96, i32 2115911328, i32 -762008009
  store i32 %98, i32* %21
  br label %186

; <label>:99:                                     ; preds = %22
  store i32 -265787520, i32* %21
  br label %186

; <label>:100:                                    ; preds = %22
  %101 = load i32, i32* @x.1013
  %102 = load i32, i32* @y.1014
  %103 = add i32 %101, -80677086
  %104 = sub i32 %103, 1
  %105 = sub i32 %104, -80677086
  %106 = sub i32 %101, 1
  %107 = mul i32 %101, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %102, 10
  %111 = xor i1 %109, true
  %112 = xor i1 %110, true
  %113 = xor i1 true, true
  %114 = and i1 %111, true
  %115 = and i1 %109, %113
  %116 = and i1 %112, true
  %117 = and i1 %110, %113
  %118 = or i1 %114, %115
  %119 = or i1 %116, %117
  %120 = xor i1 %118, %119
  %121 = or i1 %111, %112
  %122 = xor i1 %121, true
  %123 = or i1 true, %113
  %124 = and i1 %122, %123
  %125 = or i1 %120, %124
  %126 = or i1 %109, %110
  %127 = select i1 %125, i32 9983789, i32 1955247068
  store i32 %127, i32* %21
  br label %186

; <label>:128:                                    ; preds = %22
  %129 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %130 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %7
  %131 = call zeroext i1 @_ZN9__gnu_cxxltIPxSt6vectorIxSaIxEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %129, %"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %130) #3
  store i1 %131, i1* %3
  %132 = load i32, i32* @x.1013
  %133 = load i32, i32* @y.1014
  %134 = sub i32 %132, 1133965874
  %135 = sub i32 %134, 1
  %136 = add i32 %135, 1133965874
  %137 = sub i32 %132, 1
  %138 = mul i32 %132, %136
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %133, 10
  %142 = and i1 %140, %141
  %143 = xor i1 %140, %141
  %144 = or i1 %142, %143
  %145 = or i1 %140, %141
  %146 = select i1 %144, i32 -711527944, i32 1955247068
  store i32 %146, i32* %21
  br label %186

; <label>:147:                                    ; preds = %22
  %148 = load volatile i1, i1* %3
  %149 = select i1 %148, i32 -1290822603, i32 637623939
  store i32 %149, i32* %21
  br label %186

; <label>:150:                                    ; preds = %22
  %151 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %6
  %152 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %151 to i8*
  %153 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %154 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %153 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %152, i8* %154, i64 8, i32 8, i1 false)
  %155 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %5
  %156 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %155 to i8*
  %157 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %7
  %158 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %157 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %156, i8* %158, i64 8, i32 8, i1 false)
  %159 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %6
  %160 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %159, i32 0, i32 0
  %161 = load i64*, i64** %160, align 8
  %162 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %5
  %163 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %162, i32 0, i32 0
  %164 = load i64*, i64** %163, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES6_EvT_T0_(i64* %161, i64* %164)
  %165 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %166 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.38"* @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEppEv(%"class.__gnu_cxx::__normal_iterator.38"* %165) #3
  %167 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %7
  %168 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.38"* @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEmmEv(%"class.__gnu_cxx::__normal_iterator.38"* %167) #3
  store i32 -265787520, i32* %21
  br label %186

; <label>:169:                                    ; preds = %22
  ret void

; <label>:170:                                    ; preds = %22
  %171 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %172 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %173 = alloca %"struct.std::random_access_iterator_tag", align 1
  %174 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %175 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %176 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %171, i32 0, i32 0
  store i64* %0, i64** %176, align 8
  %177 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %172, i32 0, i32 0
  store i64* %1, i64** %177, align 8
  %178 = call zeroext i1 @_ZN9__gnu_cxxeqIPxSt6vectorIxSaIxEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %171, %"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %172) #3
  store i32 -1069640001, i32* %21
  br label %186

; <label>:179:                                    ; preds = %22
  %180 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %7
  %181 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.38"* @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEmmEv(%"class.__gnu_cxx::__normal_iterator.38"* %180) #3
  store i32 1413431648, i32* %21
  br label %186

; <label>:182:                                    ; preds = %22
  %183 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %184 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %7
  %185 = call zeroext i1 @_ZN9__gnu_cxxltIPxSt6vectorIxSaIxEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %183, %"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %184) #3
  store i32 9983789, i32* %21
  br label %186

; <label>:186:                                    ; preds = %182, %179, %170, %150, %147, %128, %100, %99, %81, %65, %64, %61, %33, %25, %24
  br label %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt15iterator_traitsIT_E17iterator_categoryERKS8_(%"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8)) #4 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.1015
  %5 = load i32, i32* @y.1016
  %6 = add i32 %4, -2068831142
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -2068831142
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1889672107, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %59
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1889672107, label %18
    i32 1823552555, label %26
    i32 1234989275, label %55
    i32 -1650295119, label %56
  ]

; <label>:17:                                     ; preds = %15
  br label %59

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1823552555, i32 -1650295119
  store i32 %25, i32* %14
  br label %59

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::random_access_iterator_tag", align 1
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.38"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %0, %"class.__gnu_cxx::__normal_iterator.38"** %28, align 8
  %29 = load i32, i32* @x.1015
  %30 = load i32, i32* @y.1016
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 1234989275, i32 -1650295119
  store i32 %54, i32* %14
  br label %59

; <label>:55:                                     ; preds = %15
  ret void

; <label>:56:                                     ; preds = %15
  %57 = alloca %"struct.std::random_access_iterator_tag", align 1
  %58 = alloca %"class.__gnu_cxx::__normal_iterator.38"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %0, %"class.__gnu_cxx::__normal_iterator.38"** %58, align 8
  store i32 1823552555, i32* %14
  br label %59

; <label>:59:                                     ; preds = %56, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxeqIPxSt6vectorIxSaIxEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8)) #4 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.38"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.38"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %0, %"class.__gnu_cxx::__normal_iterator.38"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %1, %"class.__gnu_cxx::__normal_iterator.38"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %3, align 8
  %6 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.38"* %5) #3
  %7 = load i64*, i64** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %4, align 8
  %9 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.38"* %8) #3
  %10 = load i64*, i64** %9, align 8
  %11 = icmp eq i64* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.38"* @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEmmEv(%"class.__gnu_cxx::__normal_iterator.38"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1019
  %6 = load i32, i32* @y.1020
  %7 = add i32 %5, -940913108
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -940913108
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1242165146, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1242165146, label %19
    i32 295966022, label %39
    i32 193371748, label %60
    i32 2062600223, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 295966022, i32 2062600223
  store i32 %38, i32* %15
  br label %68

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.38"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %0, %"class.__gnu_cxx::__normal_iterator.38"** %40, align 8
  %41 = load %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %40, align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %41, %"class.__gnu_cxx::__normal_iterator.38"** %2
  %42 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %2
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %42, i32 0, i32 0
  %44 = load i64*, i64** %43, align 8
  %45 = getelementptr inbounds i64, i64* %44, i32 -1
  store i64* %45, i64** %43, align 8
  %46 = load i32, i32* @x.1019
  %47 = load i32, i32* @y.1020
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 193371748, i32 2062600223
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %2
  ret %"class.__gnu_cxx::__normal_iterator.38"* %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.__gnu_cxx::__normal_iterator.38"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %0, %"class.__gnu_cxx::__normal_iterator.38"** %63, align 8
  %64 = load %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %63, align 8
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %64, i32 0, i32 0
  %66 = load i64*, i64** %65, align 8
  %67 = getelementptr inbounds i64, i64* %66, i32 -1
  store i64* %67, i64** %65, align 8
  store i32 295966022, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxltIPxSt6vectorIxSaIxEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8)) #4 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.38"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.38"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %0, %"class.__gnu_cxx::__normal_iterator.38"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %1, %"class.__gnu_cxx::__normal_iterator.38"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %3, align 8
  %6 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.38"* %5) #3
  %7 = load i64*, i64** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %4, align 8
  %9 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.38"* %8) #3
  %10 = load i64*, i64** %9, align 8
  %11 = icmp ult i64* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES6_EvT_T0_(i64*, i64*) #4 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %3, i32 0, i32 0
  store i64* %0, i64** %5, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %4, i32 0, i32 0
  store i64* %1, i64** %6, align 8
  %7 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %3) #3
  %8 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %4) #3
  call void @_ZSt4swapIxEvRT_S1_(i64* dereferenceable(8) %7, i64* dereferenceable(8) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.38"* @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEppEv(%"class.__gnu_cxx::__normal_iterator.38"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.38"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %0, %"class.__gnu_cxx::__normal_iterator.38"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i32 1
  store i64* %6, i64** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator.38"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIxEvRT_S1_(i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  %6 = load i64*, i64** %3, align 8
  %7 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %6) #3
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %5, align 8
  %9 = load i64*, i64** %4, align 8
  %10 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %9) #3
  %11 = load i64, i64* %10, align 8
  %12 = load i64*, i64** %3, align 8
  store i64 %11, i64* %12, align 8
  %13 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %5) #3
  %14 = load i64, i64* %13, align 8
  %15 = load i64*, i64** %4, align 8
  store i64 %14, i64* %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.38"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %0, %"class.__gnu_cxx::__normal_iterator.38"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev(%"struct.std::_Vector_base.40"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.40"*, align 8
  store %"struct.std::_Vector_base.40"* %0, %"struct.std::_Vector_base.40"** %2, align 8
  %3 = load %"struct.std::_Vector_base.40"*, %"struct.std::_Vector_base.40"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %3 to %"class.std::allocator.41"*
  call void @_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev(%"class.std::allocator.41"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %3, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* null, %"class.std::__cxx11::basic_string"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %3, i32 0, i32 1
  store %"class.std::__cxx11::basic_string"* null, %"class.std::__cxx11::basic_string"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %3, i32 0, i32 2
  store %"class.std::__cxx11::basic_string"* null, %"class.std::__cxx11::basic_string"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev(%"class.std::allocator.41"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.41"*, align 8
  store %"class.std::allocator.41"* %0, %"class.std::allocator.41"** %2, align 8
  %3 = load %"class.std::allocator.41"*, %"class.std::allocator.41"** %2, align 8
  %4 = bitcast %"class.std::allocator.41"* %3 to %"class.__gnu_cxx::new_allocator.42"*
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev(%"class.__gnu_cxx::new_allocator.42"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev(%"class.__gnu_cxx::new_allocator.42"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.1039
  %5 = load i32, i32* @y.1040
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 722753490, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %47
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 722753490, label %17
    i32 -1784413007, label %25
    i32 -1269907113, label %43
    i32 1141886803, label %44
  ]

; <label>:16:                                     ; preds = %14
  br label %47

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -1784413007, i32 1141886803
  store i32 %24, i32* %13
  br label %47

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator.42"*, align 8
  store %"class.__gnu_cxx::new_allocator.42"* %0, %"class.__gnu_cxx::new_allocator.42"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator.42"*, %"class.__gnu_cxx::new_allocator.42"** %26, align 8
  %28 = load i32, i32* @x.1039
  %29 = load i32, i32* @y.1040
  %30 = sub i32 %28, -1704412966
  %31 = sub i32 %30, 1
  %32 = add i32 %31, -1704412966
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 -1269907113, i32 1141886803
  store i32 %42, i32* %13
  br label %47

; <label>:43:                                     ; preds = %14
  ret void

; <label>:44:                                     ; preds = %14
  %45 = alloca %"class.__gnu_cxx::new_allocator.42"*, align 8
  store %"class.__gnu_cxx::new_allocator.42"* %0, %"class.__gnu_cxx::new_allocator.42"** %45, align 8
  %46 = load %"class.__gnu_cxx::new_allocator.42"*, %"class.__gnu_cxx::new_allocator.42"** %45, align 8
  store i32 -1784413007, i32* %13
  br label %47

; <label>:47:                                     ; preds = %44, %25, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::allocator.41"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca %"class.std::allocator.41"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %4, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %5, align 8
  store %"class.std::allocator.41"* %2, %"class.std::allocator.41"** %6, align 8
  %7 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %8 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  call void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_(%"class.std::__cxx11::basic_string"* %7, %"class.std::__cxx11::basic_string"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.41"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.40"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.40"*, align 8
  store %"struct.std::_Vector_base.40"* %0, %"struct.std::_Vector_base.40"** %2, align 8
  %3 = load %"struct.std::_Vector_base.40"*, %"struct.std::_Vector_base.40"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %4 to %"class.std::allocator.41"*
  ret %"class.std::allocator.41"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"struct.std::_Vector_base.40"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.1045
  %3 = load i32, i32* @y.1046
  %4 = add i32 %2, 510150088
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 510150088
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %71

; <label>:28:                                     ; preds = %1, %71
  %29 = alloca %"struct.std::_Vector_base.40"*, align 8
  %30 = alloca i8*
  %31 = alloca i32
  store %"struct.std::_Vector_base.40"* %0, %"struct.std::_Vector_base.40"** %29, align 8
  %32 = load %"struct.std::_Vector_base.40"*, %"struct.std::_Vector_base.40"** %29, align 8
  %33 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %34, align 8
  %36 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %32, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %36, i32 0, i32 2
  %38 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %37, align 8
  %39 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %32, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %39, i32 0, i32 0
  %41 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %40, align 8
  %42 = ptrtoint %"class.std::__cxx11::basic_string"* %38 to i64
  %43 = ptrtoint %"class.std::__cxx11::basic_string"* %41 to i64
  %44 = sub i64 0, %43
  %45 = add i64 %42, %44
  %46 = sub i64 %42, %43
  %47 = sdiv exact i64 %45, 32
  %48 = load i32, i32* @x.1045
  %49 = load i32, i32* @y.1046
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  br i1 %59, label %61, label %71

; <label>:61:                                     ; preds = %28
  invoke void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base.40"* %32, %"class.std::__cxx11::basic_string"* %35, i64 %47)
          to label %62 unwind label %64

; <label>:62:                                     ; preds = %61
  %63 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %63) #3
  ret void

; <label>:64:                                     ; preds = %61
  %65 = landingpad { i8*, i32 }
          catch i8* null
  %66 = extractvalue { i8*, i32 } %65, 0
  store i8* %66, i8** %30, align 8
  %67 = extractvalue { i8*, i32 } %65, 1
  store i32 %67, i32* %31, align 4
  %68 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %68) #3
  br label %69

; <label>:69:                                     ; preds = %64
  %70 = load i8*, i8** %30, align 8
  call void @__clang_call_terminate(i8* %70) #12
  unreachable

; <label>:71:                                     ; preds = %28, %1
  %72 = alloca %"struct.std::_Vector_base.40"*, align 8
  %73 = alloca i8*
  %74 = alloca i32
  store %"struct.std::_Vector_base.40"* %0, %"struct.std::_Vector_base.40"** %72, align 8
  %75 = load %"struct.std::_Vector_base.40"*, %"struct.std::_Vector_base.40"** %72, align 8
  %76 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %75, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %76, i32 0, i32 0
  %78 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %77, align 8
  %79 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %75, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %79, i32 0, i32 2
  %81 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %80, align 8
  %82 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %75, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %82, i32 0, i32 0
  %84 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %83, align 8
  %85 = ptrtoint %"class.std::__cxx11::basic_string"* %81 to i64
  %86 = ptrtoint %"class.std::__cxx11::basic_string"* %84 to i64
  %87 = add i64 %85, -1574671096978050332
  %88 = sub i64 %87, %86
  %89 = sub i64 %88, -1574671096978050332
  %90 = sub i64 %85, %86
  %91 = mul i64 %89, %86
  %92 = shl i64 %85, %86
  %93 = shl i64 %85, %86
  %94 = shl i64 %85, %86
  %95 = shl i64 %85, %86
  %96 = sub i64 0, %86
  %97 = add i64 %85, %96
  %98 = sub i64 %85, %86
  %99 = sub i64 %97, 8619108541968708113
  %100 = sub i64 %99, 32
  %101 = add i64 %100, 8619108541968708113
  %102 = sub i64 %97, 32
  %103 = mul i64 %101, 32
  %104 = sub i64 0, 32
  %105 = add i64 %97, %104
  %106 = sub i64 %97, 32
  %107 = mul i64 %105, 32
  %108 = shl i64 %97, 32
  %109 = add i64 0, 5385318342505765015
  %110 = sub i64 %109, %97
  %111 = sub i64 %110, 5385318342505765015
  %112 = sub i64 0, %97
  %113 = sub i64 %111, -6249156142060596179
  %114 = add i64 %113, 32
  %115 = add i64 %114, -6249156142060596179
  %116 = add i64 %111, 32
  %117 = sdiv exact i64 %97, 32
  br label %28
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*) #0 comdat {
  %3 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %3, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %4, align 8
  %5 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3, align 8
  %6 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_(%"class.std::__cxx11::basic_string"* %5, %"class.std::__cxx11::basic_string"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %4, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %5, align 8
  %6 = alloca i32
  store i32 911190384, i32* %6
  br label %7

; <label>:7:                                      ; preds = %2, %105
  %8 = load i32, i32* %6
  switch i32 %8, label %9 [
    i32 911190384, label %10
    i32 -513936819, label %26
    i32 -920742889, label %44
    i32 837511867, label %47
    i32 -513409932, label %63
    i32 -548448422, label %93
    i32 1145092441, label %94
    i32 1498843161, label %97
    i32 -167790118, label %98
    i32 -553587916, label %102
  ]

; <label>:9:                                      ; preds = %7
  br label %105

; <label>:10:                                     ; preds = %7
  %11 = load i32, i32* @x.1049
  %12 = load i32, i32* @y.1050
  %13 = add i32 %11, 1596935470
  %14 = sub i32 %13, 1
  %15 = sub i32 %14, 1596935470
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %12, 10
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -513936819, i32 -167790118
  store i32 %25, i32* %6
  br label %105

; <label>:26:                                     ; preds = %7
  %27 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %28 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %29 = icmp ne %"class.std::__cxx11::basic_string"* %27, %28
  store i1 %29, i1* %3
  %30 = load i32, i32* @x.1049
  %31 = load i32, i32* @y.1050
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -920742889, i32 -167790118
  store i32 %43, i32* %6
  br label %105

; <label>:44:                                     ; preds = %7
  %45 = load volatile i1, i1* %3
  %46 = select i1 %45, i32 837511867, i32 1498843161
  store i32 %46, i32* %6
  br label %105

; <label>:47:                                     ; preds = %7
  %48 = load i32, i32* @x.1049
  %49 = load i32, i32* @y.1050
  %50 = add i32 %48, 825970795
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, 825970795
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -513409932, i32 -553587916
  store i32 %62, i32* %6
  br label %105

; <label>:63:                                     ; preds = %7
  %64 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %65 = call %"class.std::__cxx11::basic_string"* @_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_(%"class.std::__cxx11::basic_string"* dereferenceable(32) %64) #3
  call void @_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_(%"class.std::__cxx11::basic_string"* %65)
  %66 = load i32, i32* @x.1049
  %67 = load i32, i32* @y.1050
  %68 = sub i32 %66, 932261879
  %69 = sub i32 %68, 1
  %70 = add i32 %69, 932261879
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 true, true
  %79 = and i1 %76, true
  %80 = and i1 %74, %78
  %81 = and i1 %77, true
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 true, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  %92 = select i1 %90, i32 -548448422, i32 -553587916
  store i32 %92, i32* %6
  br label %105

; <label>:93:                                     ; preds = %7
  store i32 1145092441, i32* %6
  br label %105

; <label>:94:                                     ; preds = %7
  %95 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %96 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %95, i32 1
  store %"class.std::__cxx11::basic_string"* %96, %"class.std::__cxx11::basic_string"** %4, align 8
  store i32 911190384, i32* %6
  br label %105

; <label>:97:                                     ; preds = %7
  ret void

; <label>:98:                                     ; preds = %7
  %99 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %100 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %101 = icmp ne %"class.std::__cxx11::basic_string"* %99, %100
  store i32 -513936819, i32* %6
  br label %105

; <label>:102:                                    ; preds = %7
  %103 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %104 = call %"class.std::__cxx11::basic_string"* @_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_(%"class.std::__cxx11::basic_string"* dereferenceable(32) %103) #3
  call void @_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_(%"class.std::__cxx11::basic_string"* %104)
  store i32 -513409932, i32* %6
  br label %105

; <label>:105:                                    ; preds = %102, %98, %94, %93, %63, %47, %44, %26, %10, %9
  br label %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_(%"class.std::__cxx11::basic_string"*) #4 comdat {
  %2 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %2, align 8
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2, align 8
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_(%"class.std::__cxx11::basic_string"* dereferenceable(32)) #4 comdat {
  %2 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %2, align 8
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2, align 8
  %4 = bitcast %"class.std::__cxx11::basic_string"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::__cxx11::basic_string"*
  ret %"class.std::__cxx11::basic_string"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base.40"*, %"class.std::__cxx11::basic_string"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.40"*
  %6 = alloca i64*
  %7 = alloca %"class.std::__cxx11::basic_string"**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.1055
  %11 = load i32, i32* @y.1056
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 -1078443682, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %124
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1078443682, label %23
    i32 -817462660, label %31
    i32 -1613809920, label %55
    i32 2002653288, label %58
    i32 1321675944, label %85
    i32 1733454961, label %107
    i32 911234746, label %108
    i32 -532022577, label %109
    i32 -1417478104, label %116
  ]

; <label>:22:                                     ; preds = %20
  br label %124

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 -817462660, i32 -532022577
  store i32 %30, i32* %19
  br label %124

; <label>:31:                                     ; preds = %20
  %32 = alloca %"struct.std::_Vector_base.40"*, align 8
  %33 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"** %33, %"class.std::__cxx11::basic_string"*** %7
  %34 = alloca i64, align 8
  store i64* %34, i64** %6
  store %"struct.std::_Vector_base.40"* %0, %"struct.std::_Vector_base.40"** %32, align 8
  %35 = load volatile %"class.std::__cxx11::basic_string"**, %"class.std::__cxx11::basic_string"*** %7
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %35, align 8
  %36 = load volatile i64*, i64** %6
  store i64 %2, i64* %36, align 8
  %37 = load %"struct.std::_Vector_base.40"*, %"struct.std::_Vector_base.40"** %32, align 8
  store %"struct.std::_Vector_base.40"* %37, %"struct.std::_Vector_base.40"** %5
  %38 = load volatile %"class.std::__cxx11::basic_string"**, %"class.std::__cxx11::basic_string"*** %7
  %39 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %38, align 8
  %40 = icmp ne %"class.std::__cxx11::basic_string"* %39, null
  store i1 %40, i1* %4
  %41 = load i32, i32* @x.1055
  %42 = load i32, i32* @y.1056
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -1613809920, i32 -532022577
  store i32 %54, i32* %19
  br label %124

; <label>:55:                                     ; preds = %20
  %56 = load volatile i1, i1* %4
  %57 = select i1 %56, i32 2002653288, i32 911234746
  store i32 %57, i32* %19
  br label %124

; <label>:58:                                     ; preds = %20
  %59 = load i32, i32* @x.1055
  %60 = load i32, i32* @y.1056
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 1321675944, i32 -1417478104
  store i32 %84, i32* %19
  br label %124

; <label>:85:                                     ; preds = %20
  %86 = load volatile %"struct.std::_Vector_base.40"*, %"struct.std::_Vector_base.40"** %5
  %87 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %86, i32 0, i32 0
  %88 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %87 to %"class.std::allocator.41"*
  %89 = load volatile %"class.std::__cxx11::basic_string"**, %"class.std::__cxx11::basic_string"*** %7
  %90 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %89, align 8
  %91 = load volatile i64*, i64** %6
  %92 = load i64, i64* %91, align 8
  call void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m(%"class.std::allocator.41"* dereferenceable(1) %88, %"class.std::__cxx11::basic_string"* %90, i64 %92)
  %93 = load i32, i32* @x.1055
  %94 = load i32, i32* @y.1056
  %95 = sub i32 0, 1
  %96 = add i32 %93, %95
  %97 = sub i32 %93, 1
  %98 = mul i32 %93, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %94, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  %106 = select i1 %104, i32 1733454961, i32 -1417478104
  store i32 %106, i32* %19
  br label %124

; <label>:107:                                    ; preds = %20
  store i32 911234746, i32* %19
  br label %124

; <label>:108:                                    ; preds = %20
  ret void

; <label>:109:                                    ; preds = %20
  %110 = alloca %"struct.std::_Vector_base.40"*, align 8
  %111 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %112 = alloca i64, align 8
  store %"struct.std::_Vector_base.40"* %0, %"struct.std::_Vector_base.40"** %110, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %111, align 8
  store i64 %2, i64* %112, align 8
  %113 = load %"struct.std::_Vector_base.40"*, %"struct.std::_Vector_base.40"** %110, align 8
  %114 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %111, align 8
  %115 = icmp ne %"class.std::__cxx11::basic_string"* %114, null
  store i32 -817462660, i32* %19
  br label %124

; <label>:116:                                    ; preds = %20
  %117 = load volatile %"struct.std::_Vector_base.40"*, %"struct.std::_Vector_base.40"** %5
  %118 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %117, i32 0, i32 0
  %119 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %118 to %"class.std::allocator.41"*
  %120 = load volatile %"class.std::__cxx11::basic_string"**, %"class.std::__cxx11::basic_string"*** %7
  %121 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %120, align 8
  %122 = load volatile i64*, i64** %6
  %123 = load i64, i64* %122, align 8
  call void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m(%"class.std::allocator.41"* dereferenceable(1) %119, %"class.std::__cxx11::basic_string"* %121, i64 %123)
  store i32 1321675944, i32* %19
  br label %124

; <label>:124:                                    ; preds = %116, %109, %107, %85, %58, %55, %31, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.1057
  %5 = load i32, i32* @y.1058
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1085330892, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %60
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1085330892, label %17
    i32 -630050405, label %25
    i32 1581514281, label %55
    i32 777911851, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %60

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -630050405, i32 777911851
  store i32 %24, i32* %13
  br label %60

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"** %26, align 8
  %27 = load %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"** %26, align 8
  %28 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %27 to %"class.std::allocator.41"*
  call void @_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev(%"class.std::allocator.41"* %28) #3
  %29 = load i32, i32* @x.1057
  %30 = load i32, i32* @y.1058
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 1581514281, i32 777911851
  store i32 %54, i32* %13
  br label %60

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"** %57, align 8
  %58 = load %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"** %57, align 8
  %59 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %58 to %"class.std::allocator.41"*
  call void @_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev(%"class.std::allocator.41"* %59) #3
  store i32 -630050405, i32* %13
  br label %60

; <label>:60:                                     ; preds = %56, %25, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m(%"class.std::allocator.41"* dereferenceable(1), %"class.std::__cxx11::basic_string"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.1059
  %7 = load i32, i32* @y.1060
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1075605297, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %83
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1075605297, label %19
    i32 -1364355957, label %39
    i32 58310287, label %74
    i32 2084672961, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %83

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1364355957, i32 2084672961
  store i32 %38, i32* %15
  br label %83

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.41"*, align 8
  %41 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %42 = alloca i64, align 8
  store %"class.std::allocator.41"* %0, %"class.std::allocator.41"** %40, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %41, align 8
  store i64 %2, i64* %42, align 8
  %43 = load %"class.std::allocator.41"*, %"class.std::allocator.41"** %40, align 8
  %44 = bitcast %"class.std::allocator.41"* %43 to %"class.__gnu_cxx::new_allocator.42"*
  %45 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %41, align 8
  %46 = load i64, i64* %42, align 8
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator.42"* %44, %"class.std::__cxx11::basic_string"* %45, i64 %46)
  %47 = load i32, i32* @x.1059
  %48 = load i32, i32* @y.1060
  %49 = add i32 %47, 2073409225
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, 2073409225
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 58310287, i32 2084672961
  store i32 %73, i32* %15
  br label %83

; <label>:74:                                     ; preds = %16
  ret void

; <label>:75:                                     ; preds = %16
  %76 = alloca %"class.std::allocator.41"*, align 8
  %77 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %78 = alloca i64, align 8
  store %"class.std::allocator.41"* %0, %"class.std::allocator.41"** %76, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %77, align 8
  store i64 %2, i64* %78, align 8
  %79 = load %"class.std::allocator.41"*, %"class.std::allocator.41"** %76, align 8
  %80 = bitcast %"class.std::allocator.41"* %79 to %"class.__gnu_cxx::new_allocator.42"*
  %81 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %77, align 8
  %82 = load i64, i64* %78, align 8
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator.42"* %80, %"class.std::__cxx11::basic_string"* %81, i64 %82)
  store i32 -1364355957, i32* %15
  br label %83

; <label>:83:                                     ; preds = %75, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator.42"*, %"class.std::__cxx11::basic_string"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.42"*, align 8
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.42"* %0, %"class.__gnu_cxx::new_allocator.42"** %4, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.42"*, %"class.__gnu_cxx::new_allocator.42"** %4, align 8
  %8 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %9 = bitcast %"class.std::__cxx11::basic_string"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev(%"class.std::allocator.41"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.41"*, align 8
  store %"class.std::allocator.41"* %0, %"class.std::allocator.41"** %2, align 8
  %3 = load %"class.std::allocator.41"*, %"class.std::allocator.41"** %2, align 8
  %4 = bitcast %"class.std::allocator.41"* %3 to %"class.__gnu_cxx::new_allocator.42"*
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev(%"class.__gnu_cxx::new_allocator.42"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev(%"class.__gnu_cxx::new_allocator.42"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.42"*, align 8
  store %"class.__gnu_cxx::new_allocator.42"* %0, %"class.__gnu_cxx::new_allocator.42"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.42"*, %"class.__gnu_cxx::new_allocator.42"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JRKS5_EEEvRS6_PT_DpOT0_(%"class.std::allocator.41"* dereferenceable(1), %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.41"*, align 8
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::allocator.41"* %0, %"class.std::allocator.41"** %4, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %5, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %6, align 8
  %7 = load %"class.std::allocator.41"*, %"class.std::allocator.41"** %4, align 8
  %8 = bitcast %"class.std::allocator.41"* %7 to %"class.__gnu_cxx::new_allocator.42"*
  %9 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %10 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %11 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JRKS6_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.42"* %8, %"class.std::__cxx11::basic_string"* %9, %"class.std::__cxx11::basic_string"* dereferenceable(32) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_emplace_back_auxIJRKS5_EEEvDpOT_(%"class.std::vector.39"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.39"*, align 8
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %7 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.39"* %0, %"class.std::vector.39"** %3, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %4, align 8
  %10 = load %"class.std::vector.39"*, %"class.std::vector.39"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc(%"class.std::vector.39"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.39"* %10 to %"struct.std::_Vector_base.40"*
  %13 = load i64, i64* %5, align 8
  %14 = call %"class.std::__cxx11::basic_string"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm(%"struct.std::_Vector_base.40"* %12, i64 %13)
  store %"class.std::__cxx11::basic_string"* %14, %"class.std::__cxx11::basic_string"** %6, align 8
  %15 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  store %"class.std::__cxx11::basic_string"* %15, %"class.std::__cxx11::basic_string"** %7, align 8
  %16 = bitcast %"class.std::vector.39"* %10 to %"struct.std::_Vector_base.40"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %17 to %"class.std::allocator.41"*
  %19 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %20 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector.39"* %10) #3
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %19, i64 %20
  %22 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %23 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32) %22) #3
  invoke void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JRKS5_EEEvRS6_PT_DpOT0_(%"class.std::allocator.41"* dereferenceable(1) %18, %"class.std::__cxx11::basic_string"* %21, %"class.std::__cxx11::basic_string"* dereferenceable(32) %23)
          to label %24 unwind label %68

; <label>:24:                                     ; preds = %2
  %25 = load i32, i32* @x.1069
  %26 = load i32, i32* @y.1070
  %27 = sub i32 0, 1
  %28 = add i32 %25, %27
  %29 = sub i32 %25, 1
  %30 = mul i32 %25, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %26, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  br i1 %36, label %38, label %280

; <label>:38:                                     ; preds = %24, %280
  store %"class.std::__cxx11::basic_string"* null, %"class.std::__cxx11::basic_string"** %7, align 8
  %39 = bitcast %"class.std::vector.39"* %10 to %"struct.std::_Vector_base.40"*
  %40 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %39, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %40, i32 0, i32 0
  %42 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %41, align 8
  %43 = bitcast %"class.std::vector.39"* %10 to %"struct.std::_Vector_base.40"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %44, i32 0, i32 1
  %46 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %45, align 8
  %47 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %48 = bitcast %"class.std::vector.39"* %10 to %"struct.std::_Vector_base.40"*
  %49 = call dereferenceable(1) %"class.std::allocator.41"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.40"* %48) #3
  %50 = load i32, i32* @x.1069
  %51 = load i32, i32* @y.1070
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  br i1 %61, label %63, label %280

; <label>:63:                                     ; preds = %38
  %64 = invoke %"class.std::__cxx11::basic_string"* @_ZSt34__uninitialized_move_if_noexcept_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_(%"class.std::__cxx11::basic_string"* %42, %"class.std::__cxx11::basic_string"* %46, %"class.std::__cxx11::basic_string"* %47, %"class.std::allocator.41"* dereferenceable(1) %49)
          to label %65 unwind label %68

; <label>:65:                                     ; preds = %63
  store %"class.std::__cxx11::basic_string"* %64, %"class.std::__cxx11::basic_string"** %7, align 8
  %66 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %67 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %66, i32 1
  store %"class.std::__cxx11::basic_string"* %67, %"class.std::__cxx11::basic_string"** %7, align 8
  br label %143

; <label>:68:                                     ; preds = %63, %2
  %69 = landingpad { i8*, i32 }
          catch i8* null
  %70 = extractvalue { i8*, i32 } %69, 0
  store i8* %70, i8** %8, align 8
  %71 = extractvalue { i8*, i32 } %69, 1
  store i32 %71, i32* %9, align 4
  br label %72

; <label>:72:                                     ; preds = %68
  %73 = load i32, i32* @x.1069
  %74 = load i32, i32* @y.1070
  %75 = add i32 %73, 1575426821
  %76 = sub i32 %75, 1
  %77 = sub i32 %76, 1575426821
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = and i1 %81, %82
  %84 = xor i1 %81, %82
  %85 = or i1 %83, %84
  %86 = or i1 %81, %82
  br i1 %85, label %87, label %292

; <label>:87:                                     ; preds = %72, %292
  %88 = load i8*, i8** %8, align 8
  %89 = call i8* @__cxa_begin_catch(i8* %88) #3
  %90 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %91 = icmp ne %"class.std::__cxx11::basic_string"* %90, null
  %92 = load i32, i32* @x.1069
  %93 = load i32, i32* @y.1070
  %94 = add i32 %92, -1871157588
  %95 = sub i32 %94, 1
  %96 = sub i32 %95, -1871157588
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 true, true
  %105 = and i1 %102, true
  %106 = and i1 %100, %104
  %107 = and i1 %103, true
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 true, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  br i1 %116, label %118, label %292

; <label>:118:                                    ; preds = %87
  br i1 %91, label %131, label %119

; <label>:119:                                    ; preds = %118
  %120 = bitcast %"class.std::vector.39"* %10 to %"struct.std::_Vector_base.40"*
  %121 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %120, i32 0, i32 0
  %122 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %121 to %"class.std::allocator.41"*
  %123 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %124 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector.39"* %10) #3
  %125 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %123, i64 %124
  invoke void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS5_EEvRS6_PT_(%"class.std::allocator.41"* dereferenceable(1) %122, %"class.std::__cxx11::basic_string"* %125)
          to label %126 unwind label %127

; <label>:126:                                    ; preds = %119
  br label %137

; <label>:127:                                    ; preds = %141, %137, %131, %119
  %128 = landingpad { i8*, i32 }
          cleanup
  %129 = extractvalue { i8*, i32 } %128, 0
  store i8* %129, i8** %8, align 8
  %130 = extractvalue { i8*, i32 } %128, 1
  store i32 %130, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %142 unwind label %193

; <label>:131:                                    ; preds = %118
  %132 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %133 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %134 = bitcast %"class.std::vector.39"* %10 to %"struct.std::_Vector_base.40"*
  %135 = call dereferenceable(1) %"class.std::allocator.41"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.40"* %134) #3
  invoke void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E(%"class.std::__cxx11::basic_string"* %132, %"class.std::__cxx11::basic_string"* %133, %"class.std::allocator.41"* dereferenceable(1) %135)
          to label %136 unwind label %127

; <label>:136:                                    ; preds = %131
  br label %137

; <label>:137:                                    ; preds = %136, %126
  %138 = bitcast %"class.std::vector.39"* %10 to %"struct.std::_Vector_base.40"*
  %139 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %140 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base.40"* %138, %"class.std::__cxx11::basic_string"* %139, i64 %140)
          to label %141 unwind label %127

; <label>:141:                                    ; preds = %137
  invoke void @__cxa_rethrow() #15
          to label %238 unwind label %127

; <label>:142:                                    ; preds = %127
  br label %188

; <label>:143:                                    ; preds = %65
  %144 = bitcast %"class.std::vector.39"* %10 to %"struct.std::_Vector_base.40"*
  %145 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %144, i32 0, i32 0
  %146 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %145, i32 0, i32 0
  %147 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %146, align 8
  %148 = bitcast %"class.std::vector.39"* %10 to %"struct.std::_Vector_base.40"*
  %149 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %148, i32 0, i32 0
  %150 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %149, i32 0, i32 1
  %151 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %150, align 8
  %152 = bitcast %"class.std::vector.39"* %10 to %"struct.std::_Vector_base.40"*
  %153 = call dereferenceable(1) %"class.std::allocator.41"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.40"* %152) #3
  call void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E(%"class.std::__cxx11::basic_string"* %147, %"class.std::__cxx11::basic_string"* %151, %"class.std::allocator.41"* dereferenceable(1) %153)
  %154 = bitcast %"class.std::vector.39"* %10 to %"struct.std::_Vector_base.40"*
  %155 = bitcast %"class.std::vector.39"* %10 to %"struct.std::_Vector_base.40"*
  %156 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %155, i32 0, i32 0
  %157 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %156, i32 0, i32 0
  %158 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %157, align 8
  %159 = bitcast %"class.std::vector.39"* %10 to %"struct.std::_Vector_base.40"*
  %160 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %159, i32 0, i32 0
  %161 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %160, i32 0, i32 2
  %162 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %161, align 8
  %163 = bitcast %"class.std::vector.39"* %10 to %"struct.std::_Vector_base.40"*
  %164 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %163, i32 0, i32 0
  %165 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %164, i32 0, i32 0
  %166 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %165, align 8
  %167 = ptrtoint %"class.std::__cxx11::basic_string"* %162 to i64
  %168 = ptrtoint %"class.std::__cxx11::basic_string"* %166 to i64
  %169 = add i64 %167, -301337805599776757
  %170 = sub i64 %169, %168
  %171 = sub i64 %170, -301337805599776757
  %172 = sub i64 %167, %168
  %173 = sdiv exact i64 %171, 32
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base.40"* %154, %"class.std::__cxx11::basic_string"* %158, i64 %173)
  %174 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %175 = bitcast %"class.std::vector.39"* %10 to %"struct.std::_Vector_base.40"*
  %176 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %175, i32 0, i32 0
  %177 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %176, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %174, %"class.std::__cxx11::basic_string"** %177, align 8
  %178 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %179 = bitcast %"class.std::vector.39"* %10 to %"struct.std::_Vector_base.40"*
  %180 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %179, i32 0, i32 0
  %181 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %180, i32 0, i32 1
  store %"class.std::__cxx11::basic_string"* %178, %"class.std::__cxx11::basic_string"** %181, align 8
  %182 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %183 = load i64, i64* %5, align 8
  %184 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %182, i64 %183
  %185 = bitcast %"class.std::vector.39"* %10 to %"struct.std::_Vector_base.40"*
  %186 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %185, i32 0, i32 0
  %187 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %186, i32 0, i32 2
  store %"class.std::__cxx11::basic_string"* %184, %"class.std::__cxx11::basic_string"** %187, align 8
  ret void

; <label>:188:                                    ; preds = %142
  %189 = load i8*, i8** %8, align 8
  %190 = load i32, i32* %9, align 4
  %191 = insertvalue { i8*, i32 } undef, i8* %189, 0
  %192 = insertvalue { i8*, i32 } %191, i32 %190, 1
  resume { i8*, i32 } %192

; <label>:193:                                    ; preds = %127
  %194 = load i32, i32* @x.1069
  %195 = load i32, i32* @y.1070
  %196 = add i32 %194, -829315485
  %197 = sub i32 %196, 1
  %198 = sub i32 %197, -829315485
  %199 = sub i32 %194, 1
  %200 = mul i32 %194, %198
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %195, 10
  %204 = xor i1 %202, true
  %205 = xor i1 %203, true
  %206 = xor i1 false, true
  %207 = and i1 %204, false
  %208 = and i1 %202, %206
  %209 = and i1 %205, false
  %210 = and i1 %203, %206
  %211 = or i1 %207, %208
  %212 = or i1 %209, %210
  %213 = xor i1 %211, %212
  %214 = or i1 %204, %205
  %215 = xor i1 %214, true
  %216 = or i1 false, %206
  %217 = and i1 %215, %216
  %218 = or i1 %213, %217
  %219 = or i1 %202, %203
  br i1 %218, label %220, label %297

; <label>:220:                                    ; preds = %193, %297
  %221 = landingpad { i8*, i32 }
          catch i8* null
  %222 = extractvalue { i8*, i32 } %221, 0
  call void @__clang_call_terminate(i8* %222) #12
  %223 = load i32, i32* @x.1069
  %224 = load i32, i32* @y.1070
  %225 = add i32 %223, 1355761739
  %226 = sub i32 %225, 1
  %227 = sub i32 %226, 1355761739
  %228 = sub i32 %223, 1
  %229 = mul i32 %223, %227
  %230 = urem i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %224, 10
  %233 = and i1 %231, %232
  %234 = xor i1 %231, %232
  %235 = or i1 %233, %234
  %236 = or i1 %231, %232
  br i1 %235, label %237, label %297

; <label>:237:                                    ; preds = %220
  unreachable

; <label>:238:                                    ; preds = %141
  %239 = load i32, i32* @x.1069
  %240 = load i32, i32* @y.1070
  %241 = add i32 %239, -1499002371
  %242 = sub i32 %241, 1
  %243 = sub i32 %242, -1499002371
  %244 = sub i32 %239, 1
  %245 = mul i32 %239, %243
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %240, 10
  %249 = xor i1 %247, true
  %250 = xor i1 %248, true
  %251 = xor i1 false, true
  %252 = and i1 %249, false
  %253 = and i1 %247, %251
  %254 = and i1 %250, false
  %255 = and i1 %248, %251
  %256 = or i1 %252, %253
  %257 = or i1 %254, %255
  %258 = xor i1 %256, %257
  %259 = or i1 %249, %250
  %260 = xor i1 %259, true
  %261 = or i1 false, %251
  %262 = and i1 %260, %261
  %263 = or i1 %258, %262
  %264 = or i1 %247, %248
  br i1 %263, label %265, label %300

; <label>:265:                                    ; preds = %238, %300
  %266 = load i32, i32* @x.1069
  %267 = load i32, i32* @y.1070
  %268 = sub i32 0, 1
  %269 = add i32 %266, %268
  %270 = sub i32 %266, 1
  %271 = mul i32 %266, %269
  %272 = urem i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %267, 10
  %275 = and i1 %273, %274
  %276 = xor i1 %273, %274
  %277 = or i1 %275, %276
  %278 = or i1 %273, %274
  br i1 %277, label %279, label %300

; <label>:279:                                    ; preds = %265
  unreachable

; <label>:280:                                    ; preds = %38, %24
  store %"class.std::__cxx11::basic_string"* null, %"class.std::__cxx11::basic_string"** %7, align 8
  %281 = bitcast %"class.std::vector.39"* %10 to %"struct.std::_Vector_base.40"*
  %282 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %281, i32 0, i32 0
  %283 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %282, i32 0, i32 0
  %284 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %283, align 8
  %285 = bitcast %"class.std::vector.39"* %10 to %"struct.std::_Vector_base.40"*
  %286 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %285, i32 0, i32 0
  %287 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %286, i32 0, i32 1
  %288 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %287, align 8
  %289 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %290 = bitcast %"class.std::vector.39"* %10 to %"struct.std::_Vector_base.40"*
  %291 = call dereferenceable(1) %"class.std::allocator.41"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.40"* %290) #3
  br label %38

; <label>:292:                                    ; preds = %87, %72
  %293 = load i8*, i8** %8, align 8
  %294 = call i8* @__cxa_begin_catch(i8* %293) #3
  %295 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %296 = icmp ne %"class.std::__cxx11::basic_string"* %295, null
  br label %87

; <label>:297:                                    ; preds = %220, %193
  %298 = landingpad { i8*, i32 }
          catch i8* null
  %299 = extractvalue { i8*, i32 } %298, 0
  call void @__clang_call_terminate(i8* %299) #12
  br label %220

; <label>:300:                                    ; preds = %265, %238
  br label %265
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JRKS6_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.42"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.1071
  %7 = load i32, i32* @y.1072
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 264547967, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 264547967, label %19
    i32 -780894243, label %27
    i32 1947504619, label %63
    i32 -695387201, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -780894243, i32 -695387201
  store i32 %26, i32* %15
  br label %74

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator.42"*, align 8
  %29 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %30 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.__gnu_cxx::new_allocator.42"* %0, %"class.__gnu_cxx::new_allocator.42"** %28, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %29, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %30, align 8
  %31 = load %"class.__gnu_cxx::new_allocator.42"*, %"class.__gnu_cxx::new_allocator.42"** %28, align 8
  %32 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %29, align 8
  %33 = bitcast %"class.std::__cxx11::basic_string"* %32 to i8*
  %34 = bitcast i8* %33 to %"class.std::__cxx11::basic_string"*
  %35 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %30, align 8
  %36 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32) %35) #3
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_(%"class.std::__cxx11::basic_string"* %34, %"class.std::__cxx11::basic_string"* dereferenceable(32) %36)
  %37 = load i32, i32* @x.1071
  %38 = load i32, i32* @y.1072
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 1947504619, i32 -695387201
  store i32 %62, i32* %15
  br label %74

; <label>:63:                                     ; preds = %16
  ret void

; <label>:64:                                     ; preds = %16
  %65 = alloca %"class.__gnu_cxx::new_allocator.42"*, align 8
  %66 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %67 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.__gnu_cxx::new_allocator.42"* %0, %"class.__gnu_cxx::new_allocator.42"** %65, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %66, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %67, align 8
  %68 = load %"class.__gnu_cxx::new_allocator.42"*, %"class.__gnu_cxx::new_allocator.42"** %65, align 8
  %69 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %66, align 8
  %70 = bitcast %"class.std::__cxx11::basic_string"* %69 to i8*
  %71 = bitcast i8* %70 to %"class.std::__cxx11::basic_string"*
  %72 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %67, align 8
  %73 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32) %72) #3
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_(%"class.std::__cxx11::basic_string"* %71, %"class.std::__cxx11::basic_string"* dereferenceable(32) %73)
  store i32 -780894243, i32* %15
  br label %74

; <label>:74:                                     ; preds = %64, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardIRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS8_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32)) #4 comdat {
  %2 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %2, align 8
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2, align 8
  ret %"class.std::__cxx11::basic_string"* %3
}

declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1ERKS4_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc(%"class.std::vector.39"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i1
  %7 = alloca i1
  %8 = alloca %"class.std::vector.39"*
  %9 = alloca i64*
  %10 = alloca i64*
  %11 = alloca i8**
  %12 = alloca i64*
  %13 = alloca i1
  %14 = alloca i1
  %15 = load i32, i32* @x.1075
  %16 = load i32, i32* @y.1076
  %17 = sub i32 0, 1
  %18 = add i32 %15, %17
  %19 = sub i32 %15, 1
  %20 = mul i32 %15, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  store i1 %22, i1* %14
  %23 = icmp slt i32 %16, 10
  store i1 %23, i1* %13
  %24 = alloca i32
  store i32 -2066435192, i32* %24
  %25 = alloca i64
  br label %26

; <label>:26:                                     ; preds = %3, %294
  %27 = load i32, i32* %24
  switch i32 %27, label %28 [
    i32 -2066435192, label %29
    i32 -827776509, label %49
    i32 -107642781, label %83
    i32 2140769861, label %86
    i32 143929692, label %89
    i32 -1399180927, label %111
    i32 76433848, label %139
    i32 227431480, label %172
    i32 1502428046, label %175
    i32 -1831585023, label %178
    i32 -997417890, label %205
    i32 131601325, label %222
    i32 28980000, label %224
    i32 93866210, label %241
    i32 -135941669, label %257
    i32 700735032, label %259
    i32 1507979484, label %284
    i32 -690227364, label %290
    i32 -1934974579, label %293
  ]

; <label>:28:                                     ; preds = %26
  br label %294

; <label>:29:                                     ; preds = %26
  %30 = load volatile i1, i1* %14
  %31 = load volatile i1, i1* %13
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 true, true
  %35 = and i1 %32, true
  %36 = and i1 %30, %34
  %37 = and i1 %33, true
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 true, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 -827776509, i32 700735032
  store i32 %48, i32* %24
  br label %294

; <label>:49:                                     ; preds = %26
  %50 = alloca %"class.std::vector.39"*, align 8
  %51 = alloca i64, align 8
  store i64* %51, i64** %12
  %52 = alloca i8*, align 8
  store i8** %52, i8*** %11
  %53 = alloca i64, align 8
  store i64* %53, i64** %10
  %54 = alloca i64, align 8
  store i64* %54, i64** %9
  store %"class.std::vector.39"* %0, %"class.std::vector.39"** %50, align 8
  %55 = load volatile i64*, i64** %12
  store i64 %1, i64* %55, align 8
  %56 = load volatile i8**, i8*** %11
  store i8* %2, i8** %56, align 8
  %57 = load %"class.std::vector.39"*, %"class.std::vector.39"** %50, align 8
  store %"class.std::vector.39"* %57, %"class.std::vector.39"** %8
  %58 = load volatile %"class.std::vector.39"*, %"class.std::vector.39"** %8
  %59 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv(%"class.std::vector.39"* %58) #3
  %60 = load volatile %"class.std::vector.39"*, %"class.std::vector.39"** %8
  %61 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector.39"* %60) #3
  %62 = sub i64 0, %61
  %63 = add i64 %59, %62
  %64 = sub i64 %59, %61
  %65 = load volatile i64*, i64** %12
  %66 = load i64, i64* %65, align 8
  %67 = icmp ult i64 %63, %66
  store i1 %67, i1* %7
  %68 = load i32, i32* @x.1075
  %69 = load i32, i32* @y.1076
  %70 = sub i32 %68, 57523954
  %71 = sub i32 %70, 1
  %72 = add i32 %71, 57523954
  %73 = sub i32 %68, 1
  %74 = mul i32 %68, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %69, 10
  %78 = and i1 %76, %77
  %79 = xor i1 %76, %77
  %80 = or i1 %78, %79
  %81 = or i1 %76, %77
  %82 = select i1 %80, i32 -107642781, i32 700735032
  store i32 %82, i32* %24
  br label %294

; <label>:83:                                     ; preds = %26
  %84 = load volatile i1, i1* %7
  %85 = select i1 %84, i32 2140769861, i32 143929692
  store i32 %85, i32* %24
  br label %294

; <label>:86:                                     ; preds = %26
  %87 = load volatile i8**, i8*** %11
  %88 = load i8*, i8** %87, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %88) #15
  unreachable

; <label>:89:                                     ; preds = %26
  %90 = load volatile %"class.std::vector.39"*, %"class.std::vector.39"** %8
  %91 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector.39"* %90) #3
  %92 = load volatile %"class.std::vector.39"*, %"class.std::vector.39"** %8
  %93 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector.39"* %92) #3
  %94 = load volatile i64*, i64** %9
  store i64 %93, i64* %94, align 8
  %95 = load volatile i64*, i64** %12
  %96 = load volatile i64*, i64** %9
  %97 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %96, i64* dereferenceable(8) %95)
  %98 = load i64, i64* %97, align 8
  %99 = sub i64 0, %91
  %100 = sub i64 0, %98
  %101 = add i64 %99, %100
  %102 = sub i64 0, %101
  %103 = add i64 %91, %98
  %104 = load volatile i64*, i64** %10
  store i64 %102, i64* %104, align 8
  %105 = load volatile i64*, i64** %10
  %106 = load i64, i64* %105, align 8
  %107 = load volatile %"class.std::vector.39"*, %"class.std::vector.39"** %8
  %108 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector.39"* %107) #3
  %109 = icmp ult i64 %106, %108
  %110 = select i1 %109, i32 1502428046, i32 -1399180927
  store i32 %110, i32* %24
  br label %294

; <label>:111:                                    ; preds = %26
  %112 = load i32, i32* @x.1075
  %113 = load i32, i32* @y.1076
  %114 = sub i32 %112, 254365892
  %115 = sub i32 %114, 1
  %116 = add i32 %115, 254365892
  %117 = sub i32 %112, 1
  %118 = mul i32 %112, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %113, 10
  %122 = xor i1 %120, true
  %123 = xor i1 %121, true
  %124 = xor i1 true, true
  %125 = and i1 %122, true
  %126 = and i1 %120, %124
  %127 = and i1 %123, true
  %128 = and i1 %121, %124
  %129 = or i1 %125, %126
  %130 = or i1 %127, %128
  %131 = xor i1 %129, %130
  %132 = or i1 %122, %123
  %133 = xor i1 %132, true
  %134 = or i1 true, %124
  %135 = and i1 %133, %134
  %136 = or i1 %131, %135
  %137 = or i1 %120, %121
  %138 = select i1 %136, i32 76433848, i32 1507979484
  store i32 %138, i32* %24
  br label %294

; <label>:139:                                    ; preds = %26
  %140 = load volatile i64*, i64** %10
  %141 = load i64, i64* %140, align 8
  %142 = load volatile %"class.std::vector.39"*, %"class.std::vector.39"** %8
  %143 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv(%"class.std::vector.39"* %142) #3
  %144 = icmp ugt i64 %141, %143
  store i1 %144, i1* %6
  %145 = load i32, i32* @x.1075
  %146 = load i32, i32* @y.1076
  %147 = add i32 %145, 658868244
  %148 = sub i32 %147, 1
  %149 = sub i32 %148, 658868244
  %150 = sub i32 %145, 1
  %151 = mul i32 %145, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %146, 10
  %155 = xor i1 %153, true
  %156 = xor i1 %154, true
  %157 = xor i1 false, true
  %158 = and i1 %155, false
  %159 = and i1 %153, %157
  %160 = and i1 %156, false
  %161 = and i1 %154, %157
  %162 = or i1 %158, %159
  %163 = or i1 %160, %161
  %164 = xor i1 %162, %163
  %165 = or i1 %155, %156
  %166 = xor i1 %165, true
  %167 = or i1 false, %157
  %168 = and i1 %166, %167
  %169 = or i1 %164, %168
  %170 = or i1 %153, %154
  %171 = select i1 %169, i32 227431480, i32 1507979484
  store i32 %171, i32* %24
  br label %294

; <label>:172:                                    ; preds = %26
  %173 = load volatile i1, i1* %6
  %174 = select i1 %173, i32 1502428046, i32 -1831585023
  store i32 %174, i32* %24
  br label %294

; <label>:175:                                    ; preds = %26
  %176 = load volatile %"class.std::vector.39"*, %"class.std::vector.39"** %8
  %177 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv(%"class.std::vector.39"* %176) #3
  store i32 28980000, i32* %24
  store i64 %177, i64* %25
  br label %294

; <label>:178:                                    ; preds = %26
  %179 = load i32, i32* @x.1075
  %180 = load i32, i32* @y.1076
  %181 = sub i32 0, 1
  %182 = add i32 %179, %181
  %183 = sub i32 %179, 1
  %184 = mul i32 %179, %182
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %180, 10
  %188 = xor i1 %186, true
  %189 = xor i1 %187, true
  %190 = xor i1 false, true
  %191 = and i1 %188, false
  %192 = and i1 %186, %190
  %193 = and i1 %189, false
  %194 = and i1 %187, %190
  %195 = or i1 %191, %192
  %196 = or i1 %193, %194
  %197 = xor i1 %195, %196
  %198 = or i1 %188, %189
  %199 = xor i1 %198, true
  %200 = or i1 false, %190
  %201 = and i1 %199, %200
  %202 = or i1 %197, %201
  %203 = or i1 %186, %187
  %204 = select i1 %202, i32 -997417890, i32 -690227364
  store i32 %204, i32* %24
  br label %294

; <label>:205:                                    ; preds = %26
  %206 = load volatile i64*, i64** %10
  %207 = load i64, i64* %206, align 8
  store i64 %207, i64* %5
  %208 = load i32, i32* @x.1075
  %209 = load i32, i32* @y.1076
  %210 = sub i32 0, 1
  %211 = add i32 %208, %210
  %212 = sub i32 %208, 1
  %213 = mul i32 %208, %211
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %209, 10
  %217 = and i1 %215, %216
  %218 = xor i1 %215, %216
  %219 = or i1 %217, %218
  %220 = or i1 %215, %216
  %221 = select i1 %219, i32 131601325, i32 -690227364
  store i32 %221, i32* %24
  br label %294

; <label>:222:                                    ; preds = %26
  store i32 28980000, i32* %24
  %223 = load volatile i64, i64* %5
  store i64 %223, i64* %25
  br label %294

; <label>:224:                                    ; preds = %26
  %225 = load i64, i64* %25
  store i64 %225, i64* %4
  %226 = load i32, i32* @x.1075
  %227 = load i32, i32* @y.1076
  %228 = sub i32 %226, -2108257544
  %229 = sub i32 %228, 1
  %230 = add i32 %229, -2108257544
  %231 = sub i32 %226, 1
  %232 = mul i32 %226, %230
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %227, 10
  %236 = and i1 %234, %235
  %237 = xor i1 %234, %235
  %238 = or i1 %236, %237
  %239 = or i1 %234, %235
  %240 = select i1 %238, i32 93866210, i32 -1934974579
  store i32 %240, i32* %24
  br label %294

; <label>:241:                                    ; preds = %26
  %242 = load i32, i32* @x.1075
  %243 = load i32, i32* @y.1076
  %244 = sub i32 %242, 951389370
  %245 = sub i32 %244, 1
  %246 = add i32 %245, 951389370
  %247 = sub i32 %242, 1
  %248 = mul i32 %242, %246
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %243, 10
  %252 = and i1 %250, %251
  %253 = xor i1 %250, %251
  %254 = or i1 %252, %253
  %255 = or i1 %250, %251
  %256 = select i1 %254, i32 -135941669, i32 -1934974579
  store i32 %256, i32* %24
  br label %294

; <label>:257:                                    ; preds = %26
  %258 = load volatile i64, i64* %4
  ret i64 %258

; <label>:259:                                    ; preds = %26
  %260 = alloca %"class.std::vector.39"*, align 8
  %261 = alloca i64, align 8
  %262 = alloca i8*, align 8
  %263 = alloca i64, align 8
  %264 = alloca i64, align 8
  store %"class.std::vector.39"* %0, %"class.std::vector.39"** %260, align 8
  store i64 %1, i64* %261, align 8
  store i8* %2, i8** %262, align 8
  %265 = load %"class.std::vector.39"*, %"class.std::vector.39"** %260, align 8
  %266 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv(%"class.std::vector.39"* %265) #3
  %267 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector.39"* %265) #3
  %268 = sub i64 0, %267
  %269 = add i64 %266, %268
  %270 = sub i64 %266, %267
  %271 = mul i64 %269, %267
  %272 = shl i64 %266, %267
  %273 = add i64 %266, 195809605208147032
  %274 = sub i64 %273, %267
  %275 = sub i64 %274, 195809605208147032
  %276 = sub i64 %266, %267
  %277 = mul i64 %275, %267
  %278 = sub i64 %266, -8194400491814111770
  %279 = sub i64 %278, %267
  %280 = add i64 %279, -8194400491814111770
  %281 = sub i64 %266, %267
  %282 = load i64, i64* %261, align 8
  %283 = icmp ult i64 %280, %282
  store i32 -827776509, i32* %24
  br label %294

; <label>:284:                                    ; preds = %26
  %285 = load volatile i64*, i64** %10
  %286 = load i64, i64* %285, align 8
  %287 = load volatile %"class.std::vector.39"*, %"class.std::vector.39"** %8
  %288 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv(%"class.std::vector.39"* %287) #3
  %289 = icmp ugt i64 %286, %288
  store i32 76433848, i32* %24
  br label %294

; <label>:290:                                    ; preds = %26
  %291 = load volatile i64*, i64** %10
  %292 = load i64, i64* %291, align 8
  store i32 -997417890, i32* %24
  br label %294

; <label>:293:                                    ; preds = %26
  store i32 93866210, i32* %24
  br label %294

; <label>:294:                                    ; preds = %293, %290, %284, %259, %241, %224, %222, %205, %178, %175, %172, %139, %111, %89, %83, %49, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm(%"struct.std::_Vector_base.40"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base.40"*
  %5 = alloca %"struct.std::_Vector_base.40"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.40"* %0, %"struct.std::_Vector_base.40"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.40"*, %"struct.std::_Vector_base.40"** %5, align 8
  store %"struct.std::_Vector_base.40"* %7, %"struct.std::_Vector_base.40"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 -249686292, i32* %9
  %10 = alloca %"class.std::__cxx11::basic_string"*
  br label %11

; <label>:11:                                     ; preds = %2, %59
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 -249686292, label %14
    i32 23199030, label %18
    i32 1131821480, label %24
    i32 1902287472, label %40
    i32 -1684619981, label %55
    i32 -351801742, label %56
    i32 -1737529709, label %58
  ]

; <label>:13:                                     ; preds = %11
  br label %59

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 23199030, i32 1131821480
  store i32 %17, i32* %9
  br label %59

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base.40"*, %"struct.std::_Vector_base.40"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %20 to %"class.std::allocator.41"*
  %22 = load i64, i64* %6, align 8
  %23 = call %"class.std::__cxx11::basic_string"* @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m(%"class.std::allocator.41"* dereferenceable(1) %21, i64 %22)
  store i32 -351801742, i32* %9
  store %"class.std::__cxx11::basic_string"* %23, %"class.std::__cxx11::basic_string"** %10
  br label %59

; <label>:24:                                     ; preds = %11
  %25 = load i32, i32* @x.1077
  %26 = load i32, i32* @y.1078
  %27 = add i32 %25, -1479072600
  %28 = sub i32 %27, 1
  %29 = sub i32 %28, -1479072600
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  %39 = select i1 %37, i32 1902287472, i32 -1737529709
  store i32 %39, i32* %9
  br label %59

; <label>:40:                                     ; preds = %11
  %41 = load i32, i32* @x.1077
  %42 = load i32, i32* @y.1078
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -1684619981, i32 -1737529709
  store i32 %54, i32* %9
  br label %59

; <label>:55:                                     ; preds = %11
  store i32 -351801742, i32* %9
  store %"class.std::__cxx11::basic_string"* null, %"class.std::__cxx11::basic_string"** %10
  br label %59

; <label>:56:                                     ; preds = %11
  %57 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %10
  ret %"class.std::__cxx11::basic_string"* %57

; <label>:58:                                     ; preds = %11
  store i32 1902287472, i32* %9
  br label %59

; <label>:59:                                     ; preds = %58, %55, %40, %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector.39"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.39"*, align 8
  store %"class.std::vector.39"* %0, %"class.std::vector.39"** %2, align 8
  %3 = load %"class.std::vector.39"*, %"class.std::vector.39"** %2, align 8
  %4 = bitcast %"class.std::vector.39"* %3 to %"struct.std::_Vector_base.40"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %8 = bitcast %"class.std::vector.39"* %3 to %"struct.std::_Vector_base.40"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %10, align 8
  %12 = ptrtoint %"class.std::__cxx11::basic_string"* %7 to i64
  %13 = ptrtoint %"class.std::__cxx11::basic_string"* %11 to i64
  %14 = sub i64 %12, 4066357268467866428
  %15 = sub i64 %14, %13
  %16 = add i64 %15, 4066357268467866428
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 32
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZSt34__uninitialized_move_if_noexcept_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::allocator.41"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %7 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %8 = alloca %"class.std::allocator.41"*, align 8
  %9 = alloca %"class.std::move_iterator.56", align 8
  %10 = alloca %"class.std::move_iterator.56", align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %5, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %6, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %7, align 8
  store %"class.std::allocator.41"* %3, %"class.std::allocator.41"** %8, align 8
  %11 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %12 = call %"class.std::__cxx11::basic_string"* @_ZSt32__make_move_if_noexcept_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt13move_iteratorIS6_EET0_T_(%"class.std::__cxx11::basic_string"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %9, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %12, %"class.std::__cxx11::basic_string"** %13, align 8
  %14 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %15 = call %"class.std::__cxx11::basic_string"* @_ZSt32__make_move_if_noexcept_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt13move_iteratorIS6_EET0_T_(%"class.std::__cxx11::basic_string"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %10, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %15, %"class.std::__cxx11::basic_string"** %16, align 8
  %17 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %18 = load %"class.std::allocator.41"*, %"class.std::allocator.41"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %9, i32 0, i32 0
  %20 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %10, i32 0, i32 0
  %22 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %21, align 8
  %23 = call %"class.std::__cxx11::basic_string"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_S6_ET0_T_SA_S9_RSaIT1_E(%"class.std::__cxx11::basic_string"* %20, %"class.std::__cxx11::basic_string"* %22, %"class.std::__cxx11::basic_string"* %17, %"class.std::allocator.41"* dereferenceable(1) %18)
  ret %"class.std::__cxx11::basic_string"* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS5_EEvRS6_PT_(%"class.std::allocator.41"* dereferenceable(1), %"class.std::__cxx11::basic_string"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1083
  %6 = load i32, i32* @y.1084
  %7 = sub i32 %5, -1440068664
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1440068664
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1475847793, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1475847793, label %19
    i32 1914762064, label %39
    i32 -804452077, label %59
    i32 740347982, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1914762064, i32 740347982
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.41"*, align 8
  %41 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::allocator.41"* %0, %"class.std::allocator.41"** %40, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %41, align 8
  %42 = load %"class.std::allocator.41"*, %"class.std::allocator.41"** %40, align 8
  %43 = bitcast %"class.std::allocator.41"* %42 to %"class.__gnu_cxx::new_allocator.42"*
  %44 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %41, align 8
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7destroyIS6_EEvPT_(%"class.__gnu_cxx::new_allocator.42"* %43, %"class.std::__cxx11::basic_string"* %44)
  %45 = load i32, i32* @x.1083
  %46 = load i32, i32* @y.1084
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -804452077, i32 740347982
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  ret void

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::allocator.41"*, align 8
  %62 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::allocator.41"* %0, %"class.std::allocator.41"** %61, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %62, align 8
  %63 = load %"class.std::allocator.41"*, %"class.std::allocator.41"** %61, align 8
  %64 = bitcast %"class.std::allocator.41"* %63 to %"class.__gnu_cxx::new_allocator.42"*
  %65 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %62, align 8
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7destroyIS6_EEvPT_(%"class.__gnu_cxx::new_allocator.42"* %64, %"class.std::__cxx11::basic_string"* %65)
  store i32 1914762064, i32* %15
  br label %66

; <label>:66:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv(%"class.std::vector.39"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1085
  %6 = load i32, i32* @y.1086
  %7 = add i32 %5, 508434560
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 508434560
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 432715370, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %56
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 432715370, label %19
    i32 2142903214, label %27
    i32 499814948, label %48
    i32 -167927950, label %50
  ]

; <label>:18:                                     ; preds = %16
  br label %56

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 2142903214, i32 -167927950
  store i32 %26, i32* %15
  br label %56

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.39"*, align 8
  store %"class.std::vector.39"* %0, %"class.std::vector.39"** %28, align 8
  %29 = load %"class.std::vector.39"*, %"class.std::vector.39"** %28, align 8
  %30 = bitcast %"class.std::vector.39"* %29 to %"struct.std::_Vector_base.40"*
  %31 = call dereferenceable(1) %"class.std::allocator.41"* @_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.40"* %30) #3
  %32 = call i64 @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeERKS6_(%"class.std::allocator.41"* dereferenceable(1) %31) #3
  store i64 %32, i64* %2
  %33 = load i32, i32* @x.1085
  %34 = load i32, i32* @y.1086
  %35 = add i32 %33, 461859228
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 461859228
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 499814948, i32 -167927950
  store i32 %47, i32* %15
  br label %56

; <label>:48:                                     ; preds = %16
  %49 = load volatile i64, i64* %2
  ret i64 %49

; <label>:50:                                     ; preds = %16
  %51 = alloca %"class.std::vector.39"*, align 8
  store %"class.std::vector.39"* %0, %"class.std::vector.39"** %51, align 8
  %52 = load %"class.std::vector.39"*, %"class.std::vector.39"** %51, align 8
  %53 = bitcast %"class.std::vector.39"* %52 to %"struct.std::_Vector_base.40"*
  %54 = call dereferenceable(1) %"class.std::allocator.41"* @_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.40"* %53) #3
  %55 = call i64 @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeERKS6_(%"class.std::allocator.41"* dereferenceable(1) %54) #3
  store i32 2142903214, i32* %15
  br label %56

; <label>:56:                                     ; preds = %50, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeERKS6_(%"class.std::allocator.41"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.41"*, align 8
  store %"class.std::allocator.41"* %0, %"class.std::allocator.41"** %2, align 8
  %3 = load %"class.std::allocator.41"*, %"class.std::allocator.41"** %2, align 8
  %4 = bitcast %"class.std::allocator.41"* %3 to %"class.__gnu_cxx::new_allocator.42"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.42"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.41"* @_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.40"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.40"*, align 8
  store %"struct.std::_Vector_base.40"* %0, %"struct.std::_Vector_base.40"** %2, align 8
  %3 = load %"struct.std::_Vector_base.40"*, %"struct.std::_Vector_base.40"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.40", %"struct.std::_Vector_base.40"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %4 to %"class.std::allocator.41"*
  ret %"class.std::allocator.41"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.42"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.1091
  %5 = load i32, i32* @y.1092
  %6 = add i32 %4, -2023922938
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -2023922938
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1484022835, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %59
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1484022835, label %18
    i32 516460933, label %26
    i32 -162854679, label %55
    i32 1910909255, label %56
  ]

; <label>:17:                                     ; preds = %15
  br label %59

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 516460933, i32 1910909255
  store i32 %25, i32* %14
  br label %59

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.42"*, align 8
  store %"class.__gnu_cxx::new_allocator.42"* %0, %"class.__gnu_cxx::new_allocator.42"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.42"*, %"class.__gnu_cxx::new_allocator.42"** %27, align 8
  %29 = load i32, i32* @x.1091
  %30 = load i32, i32* @y.1092
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 -162854679, i32 1910909255
  store i32 %54, i32* %14
  br label %59

; <label>:55:                                     ; preds = %15
  ret i64 576460752303423487

; <label>:56:                                     ; preds = %15
  %57 = alloca %"class.__gnu_cxx::new_allocator.42"*, align 8
  store %"class.__gnu_cxx::new_allocator.42"* %0, %"class.__gnu_cxx::new_allocator.42"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.42"*, %"class.__gnu_cxx::new_allocator.42"** %57, align 8
  store i32 516460933, i32* %14
  br label %59

; <label>:59:                                     ; preds = %56, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m(%"class.std::allocator.41"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.41"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.41"* %0, %"class.std::allocator.41"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.41"*, %"class.std::allocator.41"** %3, align 8
  %6 = bitcast %"class.std::allocator.41"* %5 to %"class.__gnu_cxx::new_allocator.42"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::__cxx11::basic_string"* @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.42"* %6, i64 %7, i8* null)
  ret %"class.std::__cxx11::basic_string"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.42"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.1095
  %9 = load i32, i32* @y.1096
  %10 = add i32 %8, -1104655611
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -1104655611
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1872345112, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %84
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1872345112, label %22
    i32 1456301292, label %42
    i32 -1214187121, label %66
    i32 -256302199, label %69
    i32 600378146, label %70
    i32 459094698, label %76
  ]

; <label>:21:                                     ; preds = %19
  br label %84

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 1456301292, i32 459094698
  store i32 %41, i32* %18
  br label %84

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.__gnu_cxx::new_allocator.42"*, align 8
  %44 = alloca i64, align 8
  store i64* %44, i64** %5
  %45 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.42"* %0, %"class.__gnu_cxx::new_allocator.42"** %43, align 8
  %46 = load volatile i64*, i64** %5
  store i64 %1, i64* %46, align 8
  store i8* %2, i8** %45, align 8
  %47 = load %"class.__gnu_cxx::new_allocator.42"*, %"class.__gnu_cxx::new_allocator.42"** %43, align 8
  %48 = load volatile i64*, i64** %5
  %49 = load i64, i64* %48, align 8
  %50 = call i64 @_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.42"* %47) #3
  %51 = icmp ugt i64 %49, %50
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.1095
  %53 = load i32, i32* @y.1096
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 -1214187121, i32 459094698
  store i32 %65, i32* %18
  br label %84

; <label>:66:                                     ; preds = %19
  %67 = load volatile i1, i1* %4
  %68 = select i1 %67, i32 -256302199, i32 600378146
  store i32 %68, i32* %18
  br label %84

; <label>:69:                                     ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #15
  unreachable

; <label>:70:                                     ; preds = %19
  %71 = load volatile i64*, i64** %5
  %72 = load i64, i64* %71, align 8
  %73 = mul i64 %72, 32
  %74 = call i8* @_Znwm(i64 %73)
  %75 = bitcast i8* %74 to %"class.std::__cxx11::basic_string"*
  ret %"class.std::__cxx11::basic_string"* %75

; <label>:76:                                     ; preds = %19
  %77 = alloca %"class.__gnu_cxx::new_allocator.42"*, align 8
  %78 = alloca i64, align 8
  %79 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.42"* %0, %"class.__gnu_cxx::new_allocator.42"** %77, align 8
  store i64 %1, i64* %78, align 8
  store i8* %2, i8** %79, align 8
  %80 = load %"class.__gnu_cxx::new_allocator.42"*, %"class.__gnu_cxx::new_allocator.42"** %77, align 8
  %81 = load i64, i64* %78, align 8
  %82 = call i64 @_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.42"* %80) #3
  %83 = icmp ugt i64 %81, %82
  store i32 1456301292, i32* %18
  br label %84

; <label>:84:                                     ; preds = %76, %66, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_S6_ET0_T_SA_S9_RSaIT1_E(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::allocator.41"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::__cxx11::basic_string"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.1097
  %9 = load i32, i32* @y.1098
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -411740030, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %96
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -411740030, label %21
    i32 849923920, label %41
    i32 -1162749065, label %75
    i32 -1395616975, label %77
  ]

; <label>:20:                                     ; preds = %18
  br label %96

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 849923920, i32 -1395616975
  store i32 %40, i32* %17
  br label %96

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::move_iterator.56", align 8
  %43 = alloca %"class.std::move_iterator.56", align 8
  %44 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %45 = alloca %"class.std::allocator.41"*, align 8
  %46 = alloca %"class.std::move_iterator.56", align 8
  %47 = alloca %"class.std::move_iterator.56", align 8
  %48 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %42, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %48, align 8
  %49 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %43, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %49, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %44, align 8
  store %"class.std::allocator.41"* %3, %"class.std::allocator.41"** %45, align 8
  %50 = bitcast %"class.std::move_iterator.56"* %46 to i8*
  %51 = bitcast %"class.std::move_iterator.56"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = bitcast %"class.std::move_iterator.56"* %47 to i8*
  %53 = bitcast %"class.std::move_iterator.56"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %44, align 8
  %55 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %46, i32 0, i32 0
  %56 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %55, align 8
  %57 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %47, i32 0, i32 0
  %58 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %57, align 8
  %59 = call %"class.std::__cxx11::basic_string"* @_ZSt18uninitialized_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_ET0_T_SA_S9_(%"class.std::__cxx11::basic_string"* %56, %"class.std::__cxx11::basic_string"* %58, %"class.std::__cxx11::basic_string"* %54)
  store %"class.std::__cxx11::basic_string"* %59, %"class.std::__cxx11::basic_string"** %5
  %60 = load i32, i32* @x.1097
  %61 = load i32, i32* @y.1098
  %62 = sub i32 %60, -98221783
  %63 = sub i32 %62, 1
  %64 = add i32 %63, -98221783
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  %74 = select i1 %72, i32 -1162749065, i32 -1395616975
  store i32 %74, i32* %17
  br label %96

; <label>:75:                                     ; preds = %18
  %76 = load volatile %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5
  ret %"class.std::__cxx11::basic_string"* %76

; <label>:77:                                     ; preds = %18
  %78 = alloca %"class.std::move_iterator.56", align 8
  %79 = alloca %"class.std::move_iterator.56", align 8
  %80 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %81 = alloca %"class.std::allocator.41"*, align 8
  %82 = alloca %"class.std::move_iterator.56", align 8
  %83 = alloca %"class.std::move_iterator.56", align 8
  %84 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %78, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %84, align 8
  %85 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %79, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %85, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %80, align 8
  store %"class.std::allocator.41"* %3, %"class.std::allocator.41"** %81, align 8
  %86 = bitcast %"class.std::move_iterator.56"* %82 to i8*
  %87 = bitcast %"class.std::move_iterator.56"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 8, i32 8, i1 false)
  %88 = bitcast %"class.std::move_iterator.56"* %83 to i8*
  %89 = bitcast %"class.std::move_iterator.56"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %89, i64 8, i32 8, i1 false)
  %90 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %80, align 8
  %91 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %82, i32 0, i32 0
  %92 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %91, align 8
  %93 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %83, i32 0, i32 0
  %94 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %93, align 8
  %95 = call %"class.std::__cxx11::basic_string"* @_ZSt18uninitialized_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_ET0_T_SA_S9_(%"class.std::__cxx11::basic_string"* %92, %"class.std::__cxx11::basic_string"* %94, %"class.std::__cxx11::basic_string"* %90)
  store i32 849923920, i32* %17
  br label %96

; <label>:96:                                     ; preds = %77, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZSt32__make_move_if_noexcept_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt13move_iteratorIS6_EET0_T_(%"class.std::__cxx11::basic_string"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.56", align 8
  %3 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %3, align 8
  %4 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3, align 8
  call void @_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ES6_(%"class.std::move_iterator.56"* %2, %"class.std::__cxx11::basic_string"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %2, i32 0, i32 0
  %6 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  ret %"class.std::__cxx11::basic_string"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZSt18uninitialized_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES7_ET0_T_SA_S9_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*) #0 comdat {
  %4 = alloca %"class.std::__cxx11::basic_string"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.1101
  %8 = load i32, i32* @y.1102
  %9 = add i32 %7, 605082448
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 605082448
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 845460348, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %95
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 845460348, label %21
    i32 1122528532, label %41
    i32 984444932, label %74
    i32 1209783092, label %76
  ]

; <label>:20:                                     ; preds = %18
  br label %95

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1122528532, i32 1209783092
  store i32 %40, i32* %17
  br label %95

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::move_iterator.56", align 8
  %43 = alloca %"class.std::move_iterator.56", align 8
  %44 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %45 = alloca i8, align 1
  %46 = alloca %"class.std::move_iterator.56", align 8
  %47 = alloca %"class.std::move_iterator.56", align 8
  %48 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %42, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %48, align 8
  %49 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %43, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %49, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %44, align 8
  store i8 1, i8* %45, align 1
  %50 = bitcast %"class.std::move_iterator.56"* %46 to i8*
  %51 = bitcast %"class.std::move_iterator.56"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = bitcast %"class.std::move_iterator.56"* %47 to i8*
  %53 = bitcast %"class.std::move_iterator.56"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %44, align 8
  %55 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %46, i32 0, i32 0
  %56 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %55, align 8
  %57 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %47, i32 0, i32 0
  %58 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %57, align 8
  %59 = call %"class.std::__cxx11::basic_string"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES9_EET0_T_SC_SB_(%"class.std::__cxx11::basic_string"* %56, %"class.std::__cxx11::basic_string"* %58, %"class.std::__cxx11::basic_string"* %54)
  store %"class.std::__cxx11::basic_string"* %59, %"class.std::__cxx11::basic_string"** %4
  %60 = load i32, i32* @x.1101
  %61 = load i32, i32* @y.1102
  %62 = sub i32 0, 1
  %63 = add i32 %60, %62
  %64 = sub i32 %60, 1
  %65 = mul i32 %60, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %61, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  %73 = select i1 %71, i32 984444932, i32 1209783092
  store i32 %73, i32* %17
  br label %95

; <label>:74:                                     ; preds = %18
  %75 = load volatile %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4
  ret %"class.std::__cxx11::basic_string"* %75

; <label>:76:                                     ; preds = %18
  %77 = alloca %"class.std::move_iterator.56", align 8
  %78 = alloca %"class.std::move_iterator.56", align 8
  %79 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %80 = alloca i8, align 1
  %81 = alloca %"class.std::move_iterator.56", align 8
  %82 = alloca %"class.std::move_iterator.56", align 8
  %83 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %77, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %83, align 8
  %84 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %78, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %84, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %79, align 8
  store i8 1, i8* %80, align 1
  %85 = bitcast %"class.std::move_iterator.56"* %81 to i8*
  %86 = bitcast %"class.std::move_iterator.56"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 8, i32 8, i1 false)
  %87 = bitcast %"class.std::move_iterator.56"* %82 to i8*
  %88 = bitcast %"class.std::move_iterator.56"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %87, i8* %88, i64 8, i32 8, i1 false)
  %89 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %79, align 8
  %90 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %81, i32 0, i32 0
  %91 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %90, align 8
  %92 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %82, i32 0, i32 0
  %93 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %92, align 8
  %94 = call %"class.std::__cxx11::basic_string"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES9_EET0_T_SC_SB_(%"class.std::__cxx11::basic_string"* %91, %"class.std::__cxx11::basic_string"* %93, %"class.std::__cxx11::basic_string"* %89)
  store i32 1122528532, i32* %17
  br label %95

; <label>:95:                                     ; preds = %76, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEES9_EET0_T_SC_SB_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::move_iterator.56", align 8
  %5 = alloca %"class.std::move_iterator.56", align 8
  %6 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %7 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %4, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %5, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %11, align 8
  store %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"** %6, align 8
  %12 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  store %"class.std::__cxx11::basic_string"* %12, %"class.std::__cxx11::basic_string"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %95, %3
  %14 = load i32, i32* @x.1103
  %15 = load i32, i32* @y.1104
  %16 = sub i32 %14, 1603296752
  %17 = sub i32 %16, 1
  %18 = add i32 %17, 1603296752
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  br i1 %26, label %28, label %262

; <label>:28:                                     ; preds = %13, %262
  %29 = load i32, i32* @x.1103
  %30 = load i32, i32* @y.1104
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  br i1 %40, label %42, label %262

; <label>:42:                                     ; preds = %28
  %43 = invoke zeroext i1 @_ZStneIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator.56"* dereferenceable(8) %4, %"class.std::move_iterator.56"* dereferenceable(8) %5)
          to label %44 unwind label %98

; <label>:44:                                     ; preds = %42
  br i1 %43, label %45, label %150

; <label>:45:                                     ; preds = %44
  %46 = load i32, i32* @x.1103
  %47 = load i32, i32* @y.1104
  %48 = sub i32 %46, 177942518
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 177942518
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  br i1 %70, label %72, label %263

; <label>:72:                                     ; preds = %45, %263
  %73 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %74 = call %"class.std::__cxx11::basic_string"* @_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_(%"class.std::__cxx11::basic_string"* dereferenceable(32) %73) #3
  %75 = load i32, i32* @x.1103
  %76 = load i32, i32* @y.1104
  %77 = add i32 %75, 50700621
  %78 = sub i32 %77, 1
  %79 = sub i32 %78, 50700621
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = and i1 %83, %84
  %86 = xor i1 %83, %84
  %87 = or i1 %85, %86
  %88 = or i1 %83, %84
  br i1 %87, label %89, label %263

; <label>:89:                                     ; preds = %72
  %90 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv(%"class.std::move_iterator.56"* %4)
          to label %91 unwind label %98

; <label>:91:                                     ; preds = %89
  invoke void @_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_(%"class.std::__cxx11::basic_string"* %74, %"class.std::__cxx11::basic_string"* dereferenceable(32) %90)
          to label %92 unwind label %98

; <label>:92:                                     ; preds = %91
  br label %93

; <label>:93:                                     ; preds = %92
  %94 = invoke dereferenceable(8) %"class.std::move_iterator.56"* @_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv(%"class.std::move_iterator.56"* %4)
          to label %95 unwind label %98

; <label>:95:                                     ; preds = %93
  %96 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %97 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %96, i32 1
  store %"class.std::__cxx11::basic_string"* %97, %"class.std::__cxx11::basic_string"** %7, align 8
  br label %13

; <label>:98:                                     ; preds = %93, %91, %89, %42
  %99 = load i32, i32* @x.1103
  %100 = load i32, i32* @y.1104
  %101 = sub i32 %99, -1286144345
  %102 = sub i32 %101, 1
  %103 = add i32 %102, -1286144345
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = xor i1 %107, true
  %110 = xor i1 %108, true
  %111 = xor i1 true, true
  %112 = and i1 %109, true
  %113 = and i1 %107, %111
  %114 = and i1 %110, true
  %115 = and i1 %108, %111
  %116 = or i1 %112, %113
  %117 = or i1 %114, %115
  %118 = xor i1 %116, %117
  %119 = or i1 %109, %110
  %120 = xor i1 %119, true
  %121 = or i1 true, %111
  %122 = and i1 %120, %121
  %123 = or i1 %118, %122
  %124 = or i1 %107, %108
  br i1 %123, label %125, label %266

; <label>:125:                                    ; preds = %98, %266
  %126 = landingpad { i8*, i32 }
          catch i8* null
  %127 = extractvalue { i8*, i32 } %126, 0
  store i8* %127, i8** %8, align 8
  %128 = extractvalue { i8*, i32 } %126, 1
  store i32 %128, i32* %9, align 4
  %129 = load i32, i32* @x.1103
  %130 = load i32, i32* @y.1104
  %131 = sub i32 %129, -601959145
  %132 = sub i32 %131, 1
  %133 = add i32 %132, -601959145
  %134 = sub i32 %129, 1
  %135 = mul i32 %129, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %130, 10
  %139 = and i1 %137, %138
  %140 = xor i1 %137, %138
  %141 = or i1 %139, %140
  %142 = or i1 %137, %138
  br i1 %141, label %143, label %266

; <label>:143:                                    ; preds = %125
  br label %144

; <label>:144:                                    ; preds = %143
  %145 = load i8*, i8** %8, align 8
  %146 = call i8* @__cxa_begin_catch(i8* %145) #3
  %147 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %6, align 8
  %148 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  invoke void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_(%"class.std::__cxx11::basic_string"* %147, %"class.std::__cxx11::basic_string"* %148)
          to label %149 unwind label %152

; <label>:149:                                    ; preds = %144
  invoke void @__cxa_rethrow() #15
          to label %261 unwind label %152

; <label>:150:                                    ; preds = %44
  %151 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  ret %"class.std::__cxx11::basic_string"* %151

; <label>:152:                                    ; preds = %149, %144
  %153 = landingpad { i8*, i32 }
          cleanup
  %154 = extractvalue { i8*, i32 } %153, 0
  store i8* %154, i8** %8, align 8
  %155 = extractvalue { i8*, i32 } %153, 1
  store i32 %155, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %156 unwind label %258

; <label>:156:                                    ; preds = %152
  br label %212
                                                  ; No predecessors!
  %158 = load i32, i32* @x.1103
  %159 = load i32, i32* @y.1104
  %160 = sub i32 %158, 1871665926
  %161 = sub i32 %160, 1
  %162 = add i32 %161, 1871665926
  %163 = sub i32 %158, 1
  %164 = mul i32 %158, %162
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %159, 10
  %168 = xor i1 %166, true
  %169 = xor i1 %167, true
  %170 = xor i1 false, true
  %171 = and i1 %168, false
  %172 = and i1 %166, %170
  %173 = and i1 %169, false
  %174 = and i1 %167, %170
  %175 = or i1 %171, %172
  %176 = or i1 %173, %174
  %177 = xor i1 %175, %176
  %178 = or i1 %168, %169
  %179 = xor i1 %178, true
  %180 = or i1 false, %170
  %181 = and i1 %179, %180
  %182 = or i1 %177, %181
  %183 = or i1 %166, %167
  br i1 %182, label %184, label %270

; <label>:184:                                    ; preds = %157, %270
  call void @llvm.trap()
  %185 = load i32, i32* @x.1103
  %186 = load i32, i32* @y.1104
  %187 = add i32 %185, -538670652
  %188 = sub i32 %187, 1
  %189 = sub i32 %188, -538670652
  %190 = sub i32 %185, 1
  %191 = mul i32 %185, %189
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %186, 10
  %195 = xor i1 %193, true
  %196 = xor i1 %194, true
  %197 = xor i1 true, true
  %198 = and i1 %195, true
  %199 = and i1 %193, %197
  %200 = and i1 %196, true
  %201 = and i1 %194, %197
  %202 = or i1 %198, %199
  %203 = or i1 %200, %201
  %204 = xor i1 %202, %203
  %205 = or i1 %195, %196
  %206 = xor i1 %205, true
  %207 = or i1 true, %197
  %208 = and i1 %206, %207
  %209 = or i1 %204, %208
  %210 = or i1 %193, %194
  br i1 %209, label %211, label %270

; <label>:211:                                    ; preds = %184
  unreachable

; <label>:212:                                    ; preds = %156
  %213 = load i32, i32* @x.1103
  %214 = load i32, i32* @y.1104
  %215 = add i32 %213, 1904925734
  %216 = sub i32 %215, 1
  %217 = sub i32 %216, 1904925734
  %218 = sub i32 %213, 1
  %219 = mul i32 %213, %217
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %214, 10
  %223 = xor i1 %221, true
  %224 = xor i1 %222, true
  %225 = xor i1 true, true
  %226 = and i1 %223, true
  %227 = and i1 %221, %225
  %228 = and i1 %224, true
  %229 = and i1 %222, %225
  %230 = or i1 %226, %227
  %231 = or i1 %228, %229
  %232 = xor i1 %230, %231
  %233 = or i1 %223, %224
  %234 = xor i1 %233, true
  %235 = or i1 true, %225
  %236 = and i1 %234, %235
  %237 = or i1 %232, %236
  %238 = or i1 %221, %222
  br i1 %237, label %239, label %271

; <label>:239:                                    ; preds = %212, %271
  %240 = load i8*, i8** %8, align 8
  %241 = load i32, i32* %9, align 4
  %242 = insertvalue { i8*, i32 } undef, i8* %240, 0
  %243 = insertvalue { i8*, i32 } %242, i32 %241, 1
  %244 = load i32, i32* @x.1103
  %245 = load i32, i32* @y.1104
  %246 = sub i32 0, 1
  %247 = add i32 %244, %246
  %248 = sub i32 %244, 1
  %249 = mul i32 %244, %247
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %245, 10
  %253 = and i1 %251, %252
  %254 = xor i1 %251, %252
  %255 = or i1 %253, %254
  %256 = or i1 %251, %252
  br i1 %255, label %257, label %271

; <label>:257:                                    ; preds = %239
  resume { i8*, i32 } %243

; <label>:258:                                    ; preds = %152
  %259 = landingpad { i8*, i32 }
          catch i8* null
  %260 = extractvalue { i8*, i32 } %259, 0
  call void @__clang_call_terminate(i8* %260) #12
  unreachable

; <label>:261:                                    ; preds = %149
  unreachable

; <label>:262:                                    ; preds = %28, %13
  br label %28

; <label>:263:                                    ; preds = %72, %45
  %264 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %265 = call %"class.std::__cxx11::basic_string"* @_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_(%"class.std::__cxx11::basic_string"* dereferenceable(32) %264) #3
  br label %72

; <label>:266:                                    ; preds = %125, %98
  %267 = landingpad { i8*, i32 }
          catch i8* null
  %268 = extractvalue { i8*, i32 } %267, 0
  store i8* %268, i8** %8, align 8
  %269 = extractvalue { i8*, i32 } %267, 1
  store i32 %269, i32* %9, align 4
  br label %125

; <label>:270:                                    ; preds = %184, %157
  call void @llvm.trap()
  br label %184

; <label>:271:                                    ; preds = %239, %212
  %272 = load i8*, i8** %8, align 8
  %273 = load i32, i32* %9, align 4
  %274 = insertvalue { i8*, i32 } undef, i8* %272, 0
  %275 = insertvalue { i8*, i32 } %274, i32 %273, 1
  br label %239
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator.56"* dereferenceable(8), %"class.std::move_iterator.56"* dereferenceable(8)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.1105
  %7 = load i32, i32* @y.1106
  %8 = sub i32 %6, 999285343
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 999285343
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1394432886, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %117
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1394432886, label %20
    i32 -1974097356, label %40
    i32 372787110, label %66
    i32 -1195314191, label %68
  ]

; <label>:19:                                     ; preds = %17
  br label %117

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1974097356, i32 -1195314191
  store i32 %39, i32* %16
  br label %117

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::move_iterator.56"*, align 8
  %42 = alloca %"class.std::move_iterator.56"*, align 8
  store %"class.std::move_iterator.56"* %0, %"class.std::move_iterator.56"** %41, align 8
  store %"class.std::move_iterator.56"* %1, %"class.std::move_iterator.56"** %42, align 8
  %43 = load %"class.std::move_iterator.56"*, %"class.std::move_iterator.56"** %41, align 8
  %44 = load %"class.std::move_iterator.56"*, %"class.std::move_iterator.56"** %42, align 8
  %45 = call zeroext i1 @_ZSteqIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator.56"* dereferenceable(8) %43, %"class.std::move_iterator.56"* dereferenceable(8) %44)
  %46 = xor i1 %45, true
  %47 = and i1 true, %46
  %48 = xor i1 true, true
  %49 = and i1 %45, %48
  %50 = or i1 %47, %49
  %51 = xor i1 %45, true
  store i1 %50, i1* %3
  %52 = load i32, i32* @x.1105
  %53 = load i32, i32* @y.1106
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 372787110, i32 -1195314191
  store i32 %65, i32* %16
  br label %117

; <label>:66:                                     ; preds = %17
  %67 = load volatile i1, i1* %3
  ret i1 %67

; <label>:68:                                     ; preds = %17
  %69 = alloca %"class.std::move_iterator.56"*, align 8
  %70 = alloca %"class.std::move_iterator.56"*, align 8
  store %"class.std::move_iterator.56"* %0, %"class.std::move_iterator.56"** %69, align 8
  store %"class.std::move_iterator.56"* %1, %"class.std::move_iterator.56"** %70, align 8
  %71 = load %"class.std::move_iterator.56"*, %"class.std::move_iterator.56"** %69, align 8
  %72 = load %"class.std::move_iterator.56"*, %"class.std::move_iterator.56"** %70, align 8
  %73 = call zeroext i1 @_ZSteqIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator.56"* dereferenceable(8) %71, %"class.std::move_iterator.56"* dereferenceable(8) %72)
  %74 = sub i1 false, %73
  %75 = add i1 false, %74
  %76 = sub i1 false, %73
  %77 = sub i1 %75, false
  %78 = add i1 %77, true
  %79 = add i1 %78, false
  %80 = add i1 %75, true
  %81 = sub i1 false, %73
  %82 = add i1 false, %81
  %83 = sub i1 false, %73
  %84 = add i1 %82, true
  %85 = add i1 %84, true
  %86 = sub i1 %85, true
  %87 = add i1 %82, true
  %88 = sub i1 %73, false
  %89 = sub i1 %88, true
  %90 = add i1 %89, false
  %91 = sub i1 %73, true
  %92 = mul i1 %90, true
  %93 = sub i1 false, %73
  %94 = add i1 false, %93
  %95 = sub i1 false, %73
  %96 = sub i1 false, true
  %97 = sub i1 %94, %96
  %98 = add i1 %94, true
  %99 = shl i1 %73, true
  %100 = shl i1 %73, true
  %101 = add i1 %73, false
  %102 = sub i1 %101, true
  %103 = sub i1 %102, false
  %104 = sub i1 %73, true
  %105 = mul i1 %103, true
  %106 = sub i1 %73, true
  %107 = sub i1 %106, true
  %108 = add i1 %107, true
  %109 = sub i1 %73, true
  %110 = mul i1 %108, true
  %111 = xor i1 %73, true
  %112 = and i1 true, %111
  %113 = xor i1 true, true
  %114 = and i1 %73, %113
  %115 = or i1 %112, %114
  %116 = xor i1 %73, true
  store i32 -1974097356, i32* %16
  br label %117

; <label>:117:                                    ; preds = %68, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJS5_EEvPT_DpOT0_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) #4 comdat {
  %3 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %3, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %4, align 8
  %5 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3, align 8
  %6 = bitcast %"class.std::__cxx11::basic_string"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::__cxx11::basic_string"*
  %8 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %9 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32) %8) #3
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_(%"class.std::__cxx11::basic_string"* %7, %"class.std::__cxx11::basic_string"* dereferenceable(32) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv(%"class.std::move_iterator.56"*) #4 comdat align 2 {
  %2 = alloca %"class.std::__cxx11::basic_string"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1109
  %6 = load i32, i32* @y.1110
  %7 = add i32 %5, 8506608
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 8506608
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -45007471, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -45007471, label %19
    i32 -1597019812, label %27
    i32 1373192459, label %59
    i32 -1716712397, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1597019812, i32 -1716712397
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.56"*, align 8
  store %"class.std::move_iterator.56"* %0, %"class.std::move_iterator.56"** %28, align 8
  %29 = load %"class.std::move_iterator.56"*, %"class.std::move_iterator.56"** %28, align 8
  %30 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %29, i32 0, i32 0
  %31 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %30, align 8
  store %"class.std::__cxx11::basic_string"* %31, %"class.std::__cxx11::basic_string"** %2
  %32 = load i32, i32* @x.1109
  %33 = load i32, i32* @y.1110
  %34 = sub i32 %32, 2123219694
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 2123219694
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 1373192459, i32 -1716712397
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2
  ret %"class.std::__cxx11::basic_string"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::move_iterator.56"*, align 8
  store %"class.std::move_iterator.56"* %0, %"class.std::move_iterator.56"** %62, align 8
  %63 = load %"class.std::move_iterator.56"*, %"class.std::move_iterator.56"** %62, align 8
  %64 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %63, i32 0, i32 0
  %65 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %64, align 8
  store i32 -1597019812, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator.56"* @_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv(%"class.std::move_iterator.56"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.56"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1111
  %6 = load i32, i32* @y.1112
  %7 = add i32 %5, 1398625189
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1398625189
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1393200806, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1393200806, label %19
    i32 -1938770348, label %27
    i32 -1162621358, label %60
    i32 -1053834835, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1938770348, i32 -1053834835
  store i32 %26, i32* %15
  br label %68

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.56"*, align 8
  store %"class.std::move_iterator.56"* %0, %"class.std::move_iterator.56"** %28, align 8
  %29 = load %"class.std::move_iterator.56"*, %"class.std::move_iterator.56"** %28, align 8
  store %"class.std::move_iterator.56"* %29, %"class.std::move_iterator.56"** %2
  %30 = load volatile %"class.std::move_iterator.56"*, %"class.std::move_iterator.56"** %2
  %31 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %30, i32 0, i32 0
  %32 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %31, align 8
  %33 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %32, i32 1
  store %"class.std::__cxx11::basic_string"* %33, %"class.std::__cxx11::basic_string"** %31, align 8
  %34 = load i32, i32* @x.1111
  %35 = load i32, i32* @y.1112
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -1162621358, i32 -1053834835
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile %"class.std::move_iterator.56"*, %"class.std::move_iterator.56"** %2
  ret %"class.std::move_iterator.56"* %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::move_iterator.56"*, align 8
  store %"class.std::move_iterator.56"* %0, %"class.std::move_iterator.56"** %63, align 8
  %64 = load %"class.std::move_iterator.56"*, %"class.std::move_iterator.56"** %63, align 8
  %65 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %64, i32 0, i32 0
  %66 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %65, align 8
  %67 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %66, i32 1
  store %"class.std::__cxx11::basic_string"* %67, %"class.std::__cxx11::basic_string"** %65, align 8
  store i32 -1938770348, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator.56"* dereferenceable(8), %"class.std::move_iterator.56"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.56"*, align 8
  %4 = alloca %"class.std::move_iterator.56"*, align 8
  store %"class.std::move_iterator.56"* %0, %"class.std::move_iterator.56"** %3, align 8
  store %"class.std::move_iterator.56"* %1, %"class.std::move_iterator.56"** %4, align 8
  %5 = load %"class.std::move_iterator.56"*, %"class.std::move_iterator.56"** %3, align 8
  %6 = call %"class.std::__cxx11::basic_string"* @_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv(%"class.std::move_iterator.56"* %5)
  %7 = load %"class.std::move_iterator.56"*, %"class.std::move_iterator.56"** %4, align 8
  %8 = call %"class.std::__cxx11::basic_string"* @_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv(%"class.std::move_iterator.56"* %7)
  %9 = icmp eq %"class.std::__cxx11::basic_string"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZNKSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv(%"class.std::move_iterator.56"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.56"*, align 8
  store %"class.std::move_iterator.56"* %0, %"class.std::move_iterator.56"** %2, align 8
  %3 = load %"class.std::move_iterator.56"*, %"class.std::move_iterator.56"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %3, i32 0, i32 0
  %5 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  ret %"class.std::__cxx11::basic_string"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* dereferenceable(32)) #4 comdat {
  %2 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %2, align 8
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2, align 8
  ret %"class.std::__cxx11::basic_string"* %3
}

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EOS4_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ES6_(%"class.std::move_iterator.56"*, %"class.std::__cxx11::basic_string"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.56"*, align 8
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::move_iterator.56"* %0, %"class.std::move_iterator.56"** %3, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %4, align 8
  %5 = load %"class.std::move_iterator.56"*, %"class.std::move_iterator.56"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.56", %"class.std::move_iterator.56"* %5, i32 0, i32 0
  %7 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  store %"class.std::__cxx11::basic_string"* %7, %"class.std::__cxx11::basic_string"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7destroyIS6_EEvPT_(%"class.__gnu_cxx::new_allocator.42"*, %"class.std::__cxx11::basic_string"*) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.42"*, align 8
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.__gnu_cxx::new_allocator.42"* %0, %"class.__gnu_cxx::new_allocator.42"** %3, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.42"*, %"class.__gnu_cxx::new_allocator.42"** %3, align 8
  %6 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %6) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE12emplace_backIJxEEEvDpOT_(%"class.std::vector.0"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i64*
  %5 = alloca %"class.std::vector.0"*
  %6 = alloca %"class.std::vector.0"*, align 8
  %7 = alloca i64*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %6, align 8
  store i64* %1, i64** %7, align 8
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  store %"class.std::vector.0"* %8, %"class.std::vector.0"** %5
  %9 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  %10 = bitcast %"class.std::vector.0"* %9 to %"struct.std::_Vector_base.1"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  store i64* %13, i64** %4
  %14 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  %15 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load i64*, i64** %17, align 8
  store i64* %18, i64** %3
  %19 = alloca i32
  store i32 58554577, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %155
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 58554577, label %23
    i32 -550151539, label %28
    i32 -624885936, label %46
    i32 2099616405, label %62
    i32 -831622124, label %93
    i32 -1147770941, label %94
    i32 1835792876, label %121
    i32 -757944602, label %149
    i32 -214370477, label %150
    i32 -820909109, label %154
  ]

; <label>:22:                                     ; preds = %20
  br label %155

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64*, i64** %4
  %25 = load volatile i64*, i64** %3
  %26 = icmp ne i64* %24, %25
  %27 = select i1 %26, i32 -550151539, i32 -624885936
  store i32 %27, i32* %19
  br label %155

; <label>:28:                                     ; preds = %20
  %29 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  %30 = bitcast %"class.std::vector.0"* %29 to %"struct.std::_Vector_base.1"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %31 to %"class.std::allocator.2"*
  %33 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  %34 = bitcast %"class.std::vector.0"* %33 to %"struct.std::_Vector_base.1"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %35, i32 0, i32 1
  %37 = load i64*, i64** %36, align 8
  %38 = load i64*, i64** %7, align 8
  %39 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %38) #3
  call void @_ZNSt16allocator_traitsISaIxEE9constructIxJxEEEvRS0_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1) %32, i64* %37, i64* dereferenceable(8) %39)
  %40 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  %41 = bitcast %"class.std::vector.0"* %40 to %"struct.std::_Vector_base.1"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %42, i32 0, i32 1
  %44 = load i64*, i64** %43, align 8
  %45 = getelementptr inbounds i64, i64* %44, i32 1
  store i64* %45, i64** %43, align 8
  store i32 -1147770941, i32* %19
  br label %155

; <label>:46:                                     ; preds = %20
  %47 = load i32, i32* @x.1123
  %48 = load i32, i32* @y.1124
  %49 = sub i32 %47, -112010863
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -112010863
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 2099616405, i32 -214370477
  store i32 %61, i32* %19
  br label %155

; <label>:62:                                     ; preds = %20
  %63 = load i64*, i64** %7, align 8
  %64 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %63) #3
  %65 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  call void @_ZNSt6vectorIxSaIxEE19_M_emplace_back_auxIJxEEEvDpOT_(%"class.std::vector.0"* %65, i64* dereferenceable(8) %64)
  %66 = load i32, i32* @x.1123
  %67 = load i32, i32* @y.1124
  %68 = sub i32 %66, 2031432600
  %69 = sub i32 %68, 1
  %70 = add i32 %69, 2031432600
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 false, true
  %79 = and i1 %76, false
  %80 = and i1 %74, %78
  %81 = and i1 %77, false
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 false, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  %92 = select i1 %90, i32 -831622124, i32 -214370477
  store i32 %92, i32* %19
  br label %155

; <label>:93:                                     ; preds = %20
  store i32 -1147770941, i32* %19
  br label %155

; <label>:94:                                     ; preds = %20
  %95 = load i32, i32* @x.1123
  %96 = load i32, i32* @y.1124
  %97 = sub i32 0, 1
  %98 = add i32 %95, %97
  %99 = sub i32 %95, 1
  %100 = mul i32 %95, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %96, 10
  %104 = xor i1 %102, true
  %105 = xor i1 %103, true
  %106 = xor i1 true, true
  %107 = and i1 %104, true
  %108 = and i1 %102, %106
  %109 = and i1 %105, true
  %110 = and i1 %103, %106
  %111 = or i1 %107, %108
  %112 = or i1 %109, %110
  %113 = xor i1 %111, %112
  %114 = or i1 %104, %105
  %115 = xor i1 %114, true
  %116 = or i1 true, %106
  %117 = and i1 %115, %116
  %118 = or i1 %113, %117
  %119 = or i1 %102, %103
  %120 = select i1 %118, i32 1835792876, i32 -820909109
  store i32 %120, i32* %19
  br label %155

; <label>:121:                                    ; preds = %20
  %122 = load i32, i32* @x.1123
  %123 = load i32, i32* @y.1124
  %124 = sub i32 %122, -1113023552
  %125 = sub i32 %124, 1
  %126 = add i32 %125, -1113023552
  %127 = sub i32 %122, 1
  %128 = mul i32 %122, %126
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %123, 10
  %132 = xor i1 %130, true
  %133 = xor i1 %131, true
  %134 = xor i1 false, true
  %135 = and i1 %132, false
  %136 = and i1 %130, %134
  %137 = and i1 %133, false
  %138 = and i1 %131, %134
  %139 = or i1 %135, %136
  %140 = or i1 %137, %138
  %141 = xor i1 %139, %140
  %142 = or i1 %132, %133
  %143 = xor i1 %142, true
  %144 = or i1 false, %134
  %145 = and i1 %143, %144
  %146 = or i1 %141, %145
  %147 = or i1 %130, %131
  %148 = select i1 %146, i32 -757944602, i32 -820909109
  store i32 %148, i32* %19
  br label %155

; <label>:149:                                    ; preds = %20
  ret void

; <label>:150:                                    ; preds = %20
  %151 = load i64*, i64** %7, align 8
  %152 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %151) #3
  %153 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  call void @_ZNSt6vectorIxSaIxEE19_M_emplace_back_auxIJxEEEvDpOT_(%"class.std::vector.0"* %153, i64* dereferenceable(8) %152)
  store i32 2099616405, i32* %19
  br label %155

; <label>:154:                                    ; preds = %20
  store i32 1835792876, i32* %19
  br label %155

; <label>:155:                                    ; preds = %154, %150, %121, %94, %93, %62, %46, %28, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE9constructIxJxEEEvRS0_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1), i64*, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.2"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = bitcast %"class.std::allocator.2"* %7 to %"class.__gnu_cxx::new_allocator.3"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIxE9constructIxJxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.3"* %8, i64* %9, i64* dereferenceable(8) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE19_M_emplace_back_auxIJxEEEvDpOT_(%"class.std::vector.0"*, i64* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store i64* %1, i64** %4, align 8
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc(%"class.std::vector.0"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %13 = load i64, i64* %5, align 8
  %14 = call i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base.1"* %12, i64 %13)
  store i64* %14, i64** %6, align 8
  %15 = load i64*, i64** %6, align 8
  store i64* %15, i64** %7, align 8
  %16 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %17 to %"class.std::allocator.2"*
  %19 = load i64*, i64** %6, align 8
  %20 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.0"* %10) #3
  %21 = getelementptr inbounds i64, i64* %19, i64 %20
  %22 = load i64*, i64** %4, align 8
  %23 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %22) #3
  invoke void @_ZNSt16allocator_traitsISaIxEE9constructIxJxEEEvRS0_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1) %18, i64* %21, i64* dereferenceable(8) %23)
          to label %24 unwind label %40

; <label>:24:                                     ; preds = %2
  store i64* null, i64** %7, align 8
  %25 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %26, i32 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %30, i32 0, i32 1
  %32 = load i64*, i64** %31, align 8
  %33 = load i64*, i64** %6, align 8
  %34 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %35 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %34) #3
  %36 = invoke i64* @_ZSt34__uninitialized_move_if_noexcept_aIPxS0_SaIxEET0_T_S3_S2_RT1_(i64* %28, i64* %32, i64* %33, %"class.std::allocator.2"* dereferenceable(1) %35)
          to label %37 unwind label %40

; <label>:37:                                     ; preds = %24
  store i64* %36, i64** %7, align 8
  %38 = load i64*, i64** %7, align 8
  %39 = getelementptr inbounds i64, i64* %38, i32 1
  store i64* %39, i64** %7, align 8
  br label %161

; <label>:40:                                     ; preds = %24, %2
  %41 = landingpad { i8*, i32 }
          catch i8* null
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %8, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %9, align 4
  br label %44

; <label>:44:                                     ; preds = %40
  %45 = load i32, i32* @x.1127
  %46 = load i32, i32* @y.1128
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  br i1 %56, label %58, label %214

; <label>:58:                                     ; preds = %44, %214
  %59 = load i8*, i8** %8, align 8
  %60 = call i8* @__cxa_begin_catch(i8* %59) #3
  %61 = load i64*, i64** %7, align 8
  %62 = icmp ne i64* %61, null
  %63 = load i32, i32* @x.1127
  %64 = load i32, i32* @y.1128
  %65 = sub i32 %63, 1896281956
  %66 = sub i32 %65, 1
  %67 = add i32 %66, 1896281956
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = and i1 %71, %72
  %74 = xor i1 %71, %72
  %75 = or i1 %73, %74
  %76 = or i1 %71, %72
  br i1 %75, label %77, label %214

; <label>:77:                                     ; preds = %58
  br i1 %62, label %119, label %78

; <label>:78:                                     ; preds = %77
  %79 = load i32, i32* @x.1127
  %80 = load i32, i32* @y.1128
  %81 = sub i32 0, 1
  %82 = add i32 %79, %81
  %83 = sub i32 %79, 1
  %84 = mul i32 %79, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %80, 10
  %88 = and i1 %86, %87
  %89 = xor i1 %86, %87
  %90 = or i1 %88, %89
  %91 = or i1 %86, %87
  br i1 %90, label %92, label %219

; <label>:92:                                     ; preds = %78, %219
  %93 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %94 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %93, i32 0, i32 0
  %95 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %94 to %"class.std::allocator.2"*
  %96 = load i64*, i64** %6, align 8
  %97 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.0"* %10) #3
  %98 = getelementptr inbounds i64, i64* %96, i64 %97
  %99 = load i32, i32* @x.1127
  %100 = load i32, i32* @y.1128
  %101 = sub i32 %99, 1676287979
  %102 = sub i32 %101, 1
  %103 = add i32 %102, 1676287979
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = and i1 %107, %108
  %110 = xor i1 %107, %108
  %111 = or i1 %109, %110
  %112 = or i1 %107, %108
  br i1 %111, label %113, label %219

; <label>:113:                                    ; preds = %92
  invoke void @_ZNSt16allocator_traitsISaIxEE7destroyIxEEvRS0_PT_(%"class.std::allocator.2"* dereferenceable(1) %95, i64* %98)
          to label %114 unwind label %115

; <label>:114:                                    ; preds = %113
  br label %155

; <label>:115:                                    ; preds = %159, %155, %153, %113
  %116 = landingpad { i8*, i32 }
          cleanup
  %117 = extractvalue { i8*, i32 } %116, 0
  store i8* %117, i8** %8, align 8
  %118 = extractvalue { i8*, i32 } %116, 1
  store i32 %118, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %160 unwind label %210

; <label>:119:                                    ; preds = %77
  %120 = load i32, i32* @x.1127
  %121 = load i32, i32* @y.1128
  %122 = sub i32 %120, 1839654794
  %123 = sub i32 %122, 1
  %124 = add i32 %123, 1839654794
  %125 = sub i32 %120, 1
  %126 = mul i32 %120, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %121, 10
  %130 = and i1 %128, %129
  %131 = xor i1 %128, %129
  %132 = or i1 %130, %131
  %133 = or i1 %128, %129
  br i1 %132, label %134, label %226

; <label>:134:                                    ; preds = %119, %226
  %135 = load i64*, i64** %6, align 8
  %136 = load i64*, i64** %7, align 8
  %137 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %138 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %137) #3
  %139 = load i32, i32* @x.1127
  %140 = load i32, i32* @y.1128
  %141 = sub i32 %139, 2036888917
  %142 = sub i32 %141, 1
  %143 = add i32 %142, 2036888917
  %144 = sub i32 %139, 1
  %145 = mul i32 %139, %143
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %140, 10
  %149 = and i1 %147, %148
  %150 = xor i1 %147, %148
  %151 = or i1 %149, %150
  %152 = or i1 %147, %148
  br i1 %151, label %153, label %226

; <label>:153:                                    ; preds = %134
  invoke void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %135, i64* %136, %"class.std::allocator.2"* dereferenceable(1) %138)
          to label %154 unwind label %115

; <label>:154:                                    ; preds = %153
  br label %155

; <label>:155:                                    ; preds = %154, %114
  %156 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %157 = load i64*, i64** %6, align 8
  %158 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.1"* %156, i64* %157, i64 %158)
          to label %159 unwind label %115

; <label>:159:                                    ; preds = %155
  invoke void @__cxa_rethrow() #15
          to label %213 unwind label %115

; <label>:160:                                    ; preds = %115
  br label %205

; <label>:161:                                    ; preds = %37
  %162 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %163 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %162, i32 0, i32 0
  %164 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %163, i32 0, i32 0
  %165 = load i64*, i64** %164, align 8
  %166 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %167 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %166, i32 0, i32 0
  %168 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %167, i32 0, i32 1
  %169 = load i64*, i64** %168, align 8
  %170 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %171 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %170) #3
  call void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %165, i64* %169, %"class.std::allocator.2"* dereferenceable(1) %171)
  %172 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %173 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %174 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %173, i32 0, i32 0
  %175 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %174, i32 0, i32 0
  %176 = load i64*, i64** %175, align 8
  %177 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %178 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %177, i32 0, i32 0
  %179 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %178, i32 0, i32 2
  %180 = load i64*, i64** %179, align 8
  %181 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %182 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %181, i32 0, i32 0
  %183 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %182, i32 0, i32 0
  %184 = load i64*, i64** %183, align 8
  %185 = ptrtoint i64* %180 to i64
  %186 = ptrtoint i64* %184 to i64
  %187 = sub i64 0, %186
  %188 = add i64 %185, %187
  %189 = sub i64 %185, %186
  %190 = sdiv exact i64 %188, 8
  call void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.1"* %172, i64* %176, i64 %190)
  %191 = load i64*, i64** %6, align 8
  %192 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %193 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %192, i32 0, i32 0
  %194 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %193, i32 0, i32 0
  store i64* %191, i64** %194, align 8
  %195 = load i64*, i64** %7, align 8
  %196 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %197 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %196, i32 0, i32 0
  %198 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %197, i32 0, i32 1
  store i64* %195, i64** %198, align 8
  %199 = load i64*, i64** %6, align 8
  %200 = load i64, i64* %5, align 8
  %201 = getelementptr inbounds i64, i64* %199, i64 %200
  %202 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %203 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %202, i32 0, i32 0
  %204 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %203, i32 0, i32 2
  store i64* %201, i64** %204, align 8
  ret void

; <label>:205:                                    ; preds = %160
  %206 = load i8*, i8** %8, align 8
  %207 = load i32, i32* %9, align 4
  %208 = insertvalue { i8*, i32 } undef, i8* %206, 0
  %209 = insertvalue { i8*, i32 } %208, i32 %207, 1
  resume { i8*, i32 } %209

; <label>:210:                                    ; preds = %115
  %211 = landingpad { i8*, i32 }
          catch i8* null
  %212 = extractvalue { i8*, i32 } %211, 0
  call void @__clang_call_terminate(i8* %212) #12
  unreachable

; <label>:213:                                    ; preds = %159
  unreachable

; <label>:214:                                    ; preds = %58, %44
  %215 = load i8*, i8** %8, align 8
  %216 = call i8* @__cxa_begin_catch(i8* %215) #3
  %217 = load i64*, i64** %7, align 8
  %218 = icmp ne i64* %217, null
  br label %58

; <label>:219:                                    ; preds = %92, %78
  %220 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %221 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %220, i32 0, i32 0
  %222 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %221 to %"class.std::allocator.2"*
  %223 = load i64*, i64** %6, align 8
  %224 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.0"* %10) #3
  %225 = getelementptr inbounds i64, i64* %223, i64 %224
  br label %92

; <label>:226:                                    ; preds = %134, %119
  %227 = load i64*, i64** %6, align 8
  %228 = load i64*, i64** %7, align 8
  %229 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %230 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %229) #3
  br label %134
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxE9constructIxJxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.3"*, i64*, i64* dereferenceable(8)) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.1129
  %7 = load i32, i32* @y.1130
  %8 = add i32 %6, -1463748604
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1463748604
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1723025809, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %78
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1723025809, label %20
    i32 -1255864190, label %28
    i32 202960997, label %66
    i32 -803767441, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %78

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1255864190, i32 -803767441
  store i32 %27, i32* %16
  br label %78

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %30 = alloca i64*, align 8
  %31 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %29, align 8
  store i64* %1, i64** %30, align 8
  store i64* %2, i64** %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %29, align 8
  %33 = load i64*, i64** %30, align 8
  %34 = bitcast i64* %33 to i8*
  %35 = bitcast i8* %34 to i64*
  %36 = load i64*, i64** %31, align 8
  %37 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %36) #3
  %38 = load i64, i64* %37, align 8
  store i64 %38, i64* %35, align 8
  %39 = load i32, i32* @x.1129
  %40 = load i32, i32* @y.1130
  %41 = add i32 %39, -193829420
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, -193829420
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 202960997, i32 -803767441
  store i32 %65, i32* %16
  br label %78

; <label>:66:                                     ; preds = %17
  ret void

; <label>:67:                                     ; preds = %17
  %68 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %69 = alloca i64*, align 8
  %70 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %68, align 8
  store i64* %1, i64** %69, align 8
  store i64* %2, i64** %70, align 8
  %71 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %68, align 8
  %72 = load i64*, i64** %69, align 8
  %73 = bitcast i64* %72 to i8*
  %74 = bitcast i8* %73 to i64*
  %75 = load i64*, i64** %70, align 8
  %76 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %75) #3
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i32 -1255864190, i32* %16
  br label %78

; <label>:78:                                     ; preds = %67, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt6__sortIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i64*, i64*) #0 comdat {
  %3 = alloca i1
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %10 = alloca i1
  %11 = alloca i1
  %12 = load i32, i32* @x.1131
  %13 = load i32, i32* @y.1132
  %14 = sub i32 %12, 1923240098
  %15 = sub i32 %14, 1
  %16 = add i32 %15, 1923240098
  %17 = sub i32 %12, 1
  %18 = mul i32 %12, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  store i1 %20, i1* %11
  %21 = icmp slt i32 %13, 10
  store i1 %21, i1* %10
  %22 = alloca i32
  store i32 -610760392, i32* %22
  br label %23

; <label>:23:                                     ; preds = %2, %128
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 -610760392, label %26
    i32 299182802, label %34
    i32 1417217735, label %77
    i32 552523484, label %80
    i32 945177180, label %114
    i32 -1948274882, label %115
  ]

; <label>:25:                                     ; preds = %23
  br label %128

; <label>:26:                                     ; preds = %23
  %27 = load volatile i1, i1* %11
  %28 = load volatile i1, i1* %10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  %33 = select i1 %31, i32 299182802, i32 -1948274882
  store i32 %33, i32* %22
  br label %128

; <label>:34:                                     ; preds = %23
  %35 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %35, %"class.__gnu_cxx::__normal_iterator.38"** %9
  %36 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %36, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %37 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %38 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %38, %"class.__gnu_cxx::__normal_iterator.38"** %7
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %39, %"class.__gnu_cxx::__normal_iterator.38"** %6
  %40 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %41, %"class.__gnu_cxx::__normal_iterator.38"** %5
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %42, %"class.__gnu_cxx::__normal_iterator.38"** %4
  %43 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %44 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %9
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %44, i32 0, i32 0
  store i64* %0, i64** %45, align 8
  %46 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %46, i32 0, i32 0
  store i64* %1, i64** %47, align 8
  %48 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %9
  %49 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %50 = call zeroext i1 @_ZN9__gnu_cxxneIPxSt6vectorIxSaIxEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %48, %"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %49) #3
  store i1 %50, i1* %3
  %51 = load i32, i32* @x.1131
  %52 = load i32, i32* @y.1132
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 1417217735, i32 -1948274882
  store i32 %76, i32* %22
  br label %128

; <label>:77:                                     ; preds = %23
  %78 = load volatile i1, i1* %3
  %79 = select i1 %78, i32 552523484, i32 945177180
  store i32 %79, i32* %22
  br label %128

; <label>:80:                                     ; preds = %23
  %81 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %7
  %82 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %81 to i8*
  %83 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %9
  %84 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %82, i8* %84, i64 8, i32 8, i1 false)
  %85 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %6
  %86 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %85 to i8*
  %87 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %88 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %88, i64 8, i32 8, i1 false)
  %89 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %9
  %90 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %91 = call i64 @_ZN9__gnu_cxxmiIPxSt6vectorIxSaIxEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %90, %"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %89) #3
  %92 = call i64 @_ZSt4__lgl(i64 %91)
  %93 = mul nsw i64 %92, 2
  %94 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %7
  %95 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %94, i32 0, i32 0
  %96 = load i64*, i64** %95, align 8
  %97 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %6
  %98 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %97, i32 0, i32 0
  %99 = load i64*, i64** %98, align 8
  call void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(i64* %96, i64* %99, i64 %93)
  %100 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %5
  %101 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %100 to i8*
  %102 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %9
  %103 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %101, i8* %103, i64 8, i32 8, i1 false)
  %104 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %4
  %105 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %104 to i8*
  %106 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %107 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %105, i8* %107, i64 8, i32 8, i1 false)
  %108 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %5
  %109 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %108, i32 0, i32 0
  %110 = load i64*, i64** %109, align 8
  %111 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %4
  %112 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %111, i32 0, i32 0
  %113 = load i64*, i64** %112, align 8
  call void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i64* %110, i64* %113)
  store i32 945177180, i32* %22
  br label %128

; <label>:114:                                    ; preds = %23
  ret void

; <label>:115:                                    ; preds = %23
  %116 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %117 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %118 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %119 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %120 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %121 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %122 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %123 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %124 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %125 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %116, i32 0, i32 0
  store i64* %0, i64** %125, align 8
  %126 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %117, i32 0, i32 0
  store i64* %1, i64** %126, align 8
  %127 = call zeroext i1 @_ZN9__gnu_cxxneIPxSt6vectorIxSaIxEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %116, %"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %117) #3
  store i32 299182802, i32* %22
  br label %128

; <label>:128:                                    ; preds = %115, %80, %77, %34, %26, %25
  br label %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops16__iter_less_iterEv() #4 comdat {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.1133
  %4 = load i32, i32* @y.1134
  %5 = sub i32 %3, 1314222289
  %6 = sub i32 %5, 1
  %7 = add i32 %6, 1314222289
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %2
  %12 = icmp slt i32 %4, 10
  store i1 %12, i1* %1
  %13 = alloca i32
  store i32 921439923, i32* %13
  br label %14

; <label>:14:                                     ; preds = %0, %57
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 921439923, label %17
    i32 603642196, label %37
    i32 -1603652771, label %54
    i32 1854346681, label %55
  ]

; <label>:16:                                     ; preds = %14
  br label %57

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %2
  %19 = load volatile i1, i1* %1
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 603642196, i32 1854346681
  store i32 %36, i32* %13
  br label %57

; <label>:37:                                     ; preds = %14
  %38 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %39 = load i32, i32* @x.1133
  %40 = load i32, i32* @y.1134
  %41 = sub i32 %39, 312095426
  %42 = sub i32 %41, 1
  %43 = add i32 %42, 312095426
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -1603652771, i32 1854346681
  store i32 %53, i32* %13
  br label %57

; <label>:54:                                     ; preds = %14
  ret void

; <label>:55:                                     ; preds = %14
  %56 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  store i32 603642196, i32* %13
  br label %57

; <label>:57:                                     ; preds = %55, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPxSt6vectorIxSaIxEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8)) #4 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.38"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.38"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %0, %"class.__gnu_cxx::__normal_iterator.38"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %1, %"class.__gnu_cxx::__normal_iterator.38"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %3, align 8
  %6 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.38"* %5) #3
  %7 = load i64*, i64** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %4, align 8
  %9 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.38"* %8) #3
  %10 = load i64*, i64** %9, align 8
  %11 = icmp ne i64* %7, %10
  ret i1 %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(i64*, i64*, i64) #0 comdat {
  %4 = alloca i1
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %8 = alloca i64, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %12 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %16 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %17 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %18 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %19 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %5, i32 0, i32 0
  store i64* %0, i64** %20, align 8
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %6, i32 0, i32 0
  store i64* %1, i64** %21, align 8
  store i64 %2, i64* %8, align 8
  %22 = alloca i32
  store i32 996928507, i32* %22
  br label %23

; <label>:23:                                     ; preds = %3, %248
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 996928507, label %26
    i32 113337542, label %53
    i32 1075291903, label %83
    i32 115141380, label %86
    i32 2067829906, label %90
    i32 -1778876865, label %118
    i32 -219398746, label %146
    i32 836626126, label %147
    i32 -1732593392, label %175
    i32 373060470, label %203
    i32 -351119584, label %230
    i32 -2102210443, label %231
    i32 -948876553, label %234
    i32 1430217139, label %247
  ]

; <label>:25:                                     ; preds = %23
  br label %248

; <label>:26:                                     ; preds = %23
  %27 = load i32, i32* @x.1137
  %28 = load i32, i32* @y.1138
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 false, true
  %39 = and i1 %36, false
  %40 = and i1 %34, %38
  %41 = and i1 %37, false
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 false, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  %52 = select i1 %50, i32 113337542, i32 -2102210443
  store i32 %52, i32* %22
  br label %248

; <label>:53:                                     ; preds = %23
  %54 = call i64 @_ZN9__gnu_cxxmiIPxSt6vectorIxSaIxEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %6, %"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %5) #3
  %55 = icmp sgt i64 %54, 16
  store i1 %55, i1* %4
  %56 = load i32, i32* @x.1137
  %57 = load i32, i32* @y.1138
  %58 = sub i32 %56, 549208276
  %59 = sub i32 %58, 1
  %60 = add i32 %59, 549208276
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 true, true
  %69 = and i1 %66, true
  %70 = and i1 %64, %68
  %71 = and i1 %67, true
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 true, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  %82 = select i1 %80, i32 1075291903, i32 -2102210443
  store i32 %82, i32* %22
  br label %248

; <label>:83:                                     ; preds = %23
  %84 = load volatile i1, i1* %4
  %85 = select i1 %84, i32 115141380, i32 -1732593392
  store i32 %85, i32* %22
  br label %248

; <label>:86:                                     ; preds = %23
  %87 = load i64, i64* %8, align 8
  %88 = icmp eq i64 %87, 0
  %89 = select i1 %88, i32 2067829906, i32 836626126
  store i32 %89, i32* %22
  br label %248

; <label>:90:                                     ; preds = %23
  %91 = load i32, i32* @x.1137
  %92 = load i32, i32* @y.1138
  %93 = sub i32 %91, 718920091
  %94 = sub i32 %93, 1
  %95 = add i32 %94, 718920091
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = xor i1 %99, true
  %102 = xor i1 %100, true
  %103 = xor i1 true, true
  %104 = and i1 %101, true
  %105 = and i1 %99, %103
  %106 = and i1 %102, true
  %107 = and i1 %100, %103
  %108 = or i1 %104, %105
  %109 = or i1 %106, %107
  %110 = xor i1 %108, %109
  %111 = or i1 %101, %102
  %112 = xor i1 %111, true
  %113 = or i1 true, %103
  %114 = and i1 %112, %113
  %115 = or i1 %110, %114
  %116 = or i1 %99, %100
  %117 = select i1 %115, i32 -1778876865, i32 -948876553
  store i32 %117, i32* %22
  br label %248

; <label>:118:                                    ; preds = %23
  %119 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %9 to i8*
  %120 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %119, i8* %120, i64 8, i32 8, i1 false)
  %121 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %10 to i8*
  %122 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %121, i8* %122, i64 8, i32 8, i1 false)
  %123 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %11 to i8*
  %124 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %123, i8* %124, i64 8, i32 8, i1 false)
  %125 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %9, i32 0, i32 0
  %126 = load i64*, i64** %125, align 8
  %127 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %10, i32 0, i32 0
  %128 = load i64*, i64** %127, align 8
  %129 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %11, i32 0, i32 0
  %130 = load i64*, i64** %129, align 8
  call void @_ZSt14__partial_sortIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_(i64* %126, i64* %128, i64* %130)
  %131 = load i32, i32* @x.1137
  %132 = load i32, i32* @y.1138
  %133 = add i32 %131, -1335274725
  %134 = sub i32 %133, 1
  %135 = sub i32 %134, -1335274725
  %136 = sub i32 %131, 1
  %137 = mul i32 %131, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %132, 10
  %141 = and i1 %139, %140
  %142 = xor i1 %139, %140
  %143 = or i1 %141, %142
  %144 = or i1 %139, %140
  %145 = select i1 %143, i32 -219398746, i32 -948876553
  store i32 %145, i32* %22
  br label %248

; <label>:146:                                    ; preds = %23
  store i32 -1732593392, i32* %22
  br label %248

; <label>:147:                                    ; preds = %23
  %148 = load i64, i64* %8, align 8
  %149 = sub i64 0, %148
  %150 = sub i64 0, -1
  %151 = add i64 %149, %150
  %152 = sub i64 0, %151
  %153 = add nsw i64 %148, -1
  store i64 %152, i64* %8, align 8
  %154 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %14 to i8*
  %155 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %154, i8* %155, i64 8, i32 8, i1 false)
  %156 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %15 to i8*
  %157 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %156, i8* %157, i64 8, i32 8, i1 false)
  %158 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %14, i32 0, i32 0
  %159 = load i64*, i64** %158, align 8
  %160 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %15, i32 0, i32 0
  %161 = load i64*, i64** %160, align 8
  %162 = call i64* @_ZSt27__unguarded_partition_pivotIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEET_S9_S9_T0_(i64* %159, i64* %161)
  %163 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %13, i32 0, i32 0
  store i64* %162, i64** %163, align 8
  %164 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %17 to i8*
  %165 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %164, i8* %165, i64 8, i32 8, i1 false)
  %166 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %18 to i8*
  %167 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %166, i8* %167, i64 8, i32 8, i1 false)
  %168 = load i64, i64* %8, align 8
  %169 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %17, i32 0, i32 0
  %170 = load i64*, i64** %169, align 8
  %171 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %18, i32 0, i32 0
  %172 = load i64*, i64** %171, align 8
  call void @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEElNS0_5__ops15_Iter_less_iterEEvT_S9_T0_T1_(i64* %170, i64* %172, i64 %168)
  %173 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %6 to i8*
  %174 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %173, i8* %174, i64 8, i32 8, i1 false)
  store i32 996928507, i32* %22
  br label %248

; <label>:175:                                    ; preds = %23
  %176 = load i32, i32* @x.1137
  %177 = load i32, i32* @y.1138
  %178 = sub i32 %176, -1998347015
  %179 = sub i32 %178, 1
  %180 = add i32 %179, -1998347015
  %181 = sub i32 %176, 1
  %182 = mul i32 %176, %180
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %177, 10
  %186 = xor i1 %184, true
  %187 = xor i1 %185, true
  %188 = xor i1 true, true
  %189 = and i1 %186, true
  %190 = and i1 %184, %188
  %191 = and i1 %187, true
  %192 = and i1 %185, %188
  %193 = or i1 %189, %190
  %194 = or i1 %191, %192
  %195 = xor i1 %193, %194
  %196 = or i1 %186, %187
  %197 = xor i1 %196, true
  %198 = or i1 true, %188
  %199 = and i1 %197, %198
  %200 = or i1 %195, %199
  %201 = or i1 %184, %185
  %202 = select i1 %200, i32 373060470, i32 1430217139
  store i32 %202, i32* %22
  br label %248

; <label>:203:                                    ; preds = %23
  %204 = load i32, i32* @x.1137
  %205 = load i32, i32* @y.1138
  %206 = sub i32 0, 1
  %207 = add i32 %204, %206
  %208 = sub i32 %204, 1
  %209 = mul i32 %204, %207
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %205, 10
  %213 = xor i1 %211, true
  %214 = xor i1 %212, true
  %215 = xor i1 true, true
  %216 = and i1 %213, true
  %217 = and i1 %211, %215
  %218 = and i1 %214, true
  %219 = and i1 %212, %215
  %220 = or i1 %216, %217
  %221 = or i1 %218, %219
  %222 = xor i1 %220, %221
  %223 = or i1 %213, %214
  %224 = xor i1 %223, true
  %225 = or i1 true, %215
  %226 = and i1 %224, %225
  %227 = or i1 %222, %226
  %228 = or i1 %211, %212
  %229 = select i1 %227, i32 -351119584, i32 1430217139
  store i32 %229, i32* %22
  br label %248

; <label>:230:                                    ; preds = %23
  ret void

; <label>:231:                                    ; preds = %23
  %232 = call i64 @_ZN9__gnu_cxxmiIPxSt6vectorIxSaIxEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %6, %"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %5) #3
  %233 = icmp sgt i64 %232, 16
  store i32 113337542, i32* %22
  br label %248

; <label>:234:                                    ; preds = %23
  %235 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %9 to i8*
  %236 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %235, i8* %236, i64 8, i32 8, i1 false)
  %237 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %10 to i8*
  %238 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %237, i8* %238, i64 8, i32 8, i1 false)
  %239 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %11 to i8*
  %240 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %239, i8* %240, i64 8, i32 8, i1 false)
  %241 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %9, i32 0, i32 0
  %242 = load i64*, i64** %241, align 8
  %243 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %10, i32 0, i32 0
  %244 = load i64*, i64** %243, align 8
  %245 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %11, i32 0, i32 0
  %246 = load i64*, i64** %245, align 8
  call void @_ZSt14__partial_sortIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_(i64* %242, i64* %244, i64* %246)
  store i32 -1778876865, i32* %22
  br label %248

; <label>:247:                                    ; preds = %23
  store i32 373060470, i32* %22
  br label %248

; <label>:248:                                    ; preds = %247, %234, %231, %203, %175, %147, %146, %118, %90, %86, %83, %53, %26, %25
  br label %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt4__lgl(i64) #4 comdat {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %3 = load i64, i64* %2, align 8
  %4 = call i64 @llvm.ctlz.i64(i64 %3, i1 true)
  %5 = trunc i64 %4 to i32
  %6 = sext i32 %5 to i64
  %7 = add i64 63, -1320172862568716293
  %8 = sub i64 %7, %6
  %9 = sub i64 %8, -1320172862568716293
  %10 = sub i64 63, %6
  ret i64 %9
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt22__final_insertion_sortIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i64*, i64*) #0 comdat {
  %3 = alloca i1
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %12 = alloca i1
  %13 = alloca i1
  %14 = load i32, i32* @x.1141
  %15 = load i32, i32* @y.1142
  %16 = add i32 %14, 1050406644
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, 1050406644
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  store i1 %22, i1* %13
  %23 = icmp slt i32 %15, 10
  store i1 %23, i1* %12
  %24 = alloca i32
  store i32 521409515, i32* %24
  br label %25

; <label>:25:                                     ; preds = %2, %205
  %26 = load i32, i32* %24
  switch i32 %26, label %27 [
    i32 521409515, label %28
    i32 1022075127, label %36
    i32 -1284310222, label %83
    i32 -1557171881, label %86
    i32 1994489599, label %115
    i32 466352263, label %130
    i32 -891880324, label %158
    i32 -1015633073, label %186
    i32 -558596263, label %187
    i32 299176345, label %204
  ]

; <label>:27:                                     ; preds = %25
  br label %205

; <label>:28:                                     ; preds = %25
  %29 = load volatile i1, i1* %13
  %30 = load volatile i1, i1* %12
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  %35 = select i1 %33, i32 1022075127, i32 -558596263
  store i32 %35, i32* %24
  br label %205

; <label>:36:                                     ; preds = %25
  %37 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %37, %"class.__gnu_cxx::__normal_iterator.38"** %11
  %38 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %38, %"class.__gnu_cxx::__normal_iterator.38"** %10
  %39 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %40, %"class.__gnu_cxx::__normal_iterator.38"** %9
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %41, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %42 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %43, %"class.__gnu_cxx::__normal_iterator.38"** %7
  %44 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %44, %"class.__gnu_cxx::__normal_iterator.38"** %6
  %45 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %46, %"class.__gnu_cxx::__normal_iterator.38"** %5
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %47, %"class.__gnu_cxx::__normal_iterator.38"** %4
  %48 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %49 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %11
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %49, i32 0, i32 0
  store i64* %0, i64** %50, align 8
  %51 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %10
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %51, i32 0, i32 0
  store i64* %1, i64** %52, align 8
  %53 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %11
  %54 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %10
  %55 = call i64 @_ZN9__gnu_cxxmiIPxSt6vectorIxSaIxEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %54, %"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %53) #3
  %56 = icmp sgt i64 %55, 16
  store i1 %56, i1* %3
  %57 = load i32, i32* @x.1141
  %58 = load i32, i32* @y.1142
  %59 = sub i32 0, 1
  %60 = add i32 %57, %59
  %61 = sub i32 %57, 1
  %62 = mul i32 %57, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %58, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 false, true
  %69 = and i1 %66, false
  %70 = and i1 %64, %68
  %71 = and i1 %67, false
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 false, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  %82 = select i1 %80, i32 -1284310222, i32 -558596263
  store i32 %82, i32* %24
  br label %205

; <label>:83:                                     ; preds = %25
  %84 = load volatile i1, i1* %3
  %85 = select i1 %84, i32 -1557171881, i32 1994489599
  store i32 %85, i32* %24
  br label %205

; <label>:86:                                     ; preds = %25
  %87 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %9
  %88 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %87 to i8*
  %89 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %11
  %90 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %90, i64 8, i32 8, i1 false)
  %91 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %11
  %92 = call i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl(%"class.__gnu_cxx::__normal_iterator.38"* %91, i64 16) #3
  %93 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %94 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %93, i32 0, i32 0
  store i64* %92, i64** %94, align 8
  %95 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %9
  %96 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %95, i32 0, i32 0
  %97 = load i64*, i64** %96, align 8
  %98 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %99 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %98, i32 0, i32 0
  %100 = load i64*, i64** %99, align 8
  call void @_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i64* %97, i64* %100)
  %101 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %11
  %102 = call i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl(%"class.__gnu_cxx::__normal_iterator.38"* %101, i64 16) #3
  %103 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %7
  %104 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %103, i32 0, i32 0
  store i64* %102, i64** %104, align 8
  %105 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %6
  %106 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %105 to i8*
  %107 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %10
  %108 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %107 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %106, i8* %108, i64 8, i32 8, i1 false)
  %109 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %7
  %110 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %109, i32 0, i32 0
  %111 = load i64*, i64** %110, align 8
  %112 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %6
  %113 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %112, i32 0, i32 0
  %114 = load i64*, i64** %113, align 8
  call void @_ZSt26__unguarded_insertion_sortIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i64* %111, i64* %114)
  store i32 466352263, i32* %24
  br label %205

; <label>:115:                                    ; preds = %25
  %116 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %5
  %117 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %116 to i8*
  %118 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %11
  %119 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %118 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %117, i8* %119, i64 8, i32 8, i1 false)
  %120 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %4
  %121 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %120 to i8*
  %122 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %10
  %123 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %122 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %121, i8* %123, i64 8, i32 8, i1 false)
  %124 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %5
  %125 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %124, i32 0, i32 0
  %126 = load i64*, i64** %125, align 8
  %127 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %4
  %128 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %127, i32 0, i32 0
  %129 = load i64*, i64** %128, align 8
  call void @_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i64* %126, i64* %129)
  store i32 466352263, i32* %24
  br label %205

; <label>:130:                                    ; preds = %25
  %131 = load i32, i32* @x.1141
  %132 = load i32, i32* @y.1142
  %133 = add i32 %131, 965064701
  %134 = sub i32 %133, 1
  %135 = sub i32 %134, 965064701
  %136 = sub i32 %131, 1
  %137 = mul i32 %131, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %132, 10
  %141 = xor i1 %139, true
  %142 = xor i1 %140, true
  %143 = xor i1 false, true
  %144 = and i1 %141, false
  %145 = and i1 %139, %143
  %146 = and i1 %142, false
  %147 = and i1 %140, %143
  %148 = or i1 %144, %145
  %149 = or i1 %146, %147
  %150 = xor i1 %148, %149
  %151 = or i1 %141, %142
  %152 = xor i1 %151, true
  %153 = or i1 false, %143
  %154 = and i1 %152, %153
  %155 = or i1 %150, %154
  %156 = or i1 %139, %140
  %157 = select i1 %155, i32 -891880324, i32 299176345
  store i32 %157, i32* %24
  br label %205

; <label>:158:                                    ; preds = %25
  %159 = load i32, i32* @x.1141
  %160 = load i32, i32* @y.1142
  %161 = sub i32 %159, 1898569505
  %162 = sub i32 %161, 1
  %163 = add i32 %162, 1898569505
  %164 = sub i32 %159, 1
  %165 = mul i32 %159, %163
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %160, 10
  %169 = xor i1 %167, true
  %170 = xor i1 %168, true
  %171 = xor i1 true, true
  %172 = and i1 %169, true
  %173 = and i1 %167, %171
  %174 = and i1 %170, true
  %175 = and i1 %168, %171
  %176 = or i1 %172, %173
  %177 = or i1 %174, %175
  %178 = xor i1 %176, %177
  %179 = or i1 %169, %170
  %180 = xor i1 %179, true
  %181 = or i1 true, %171
  %182 = and i1 %180, %181
  %183 = or i1 %178, %182
  %184 = or i1 %167, %168
  %185 = select i1 %183, i32 -1015633073, i32 299176345
  store i32 %185, i32* %24
  br label %205

; <label>:186:                                    ; preds = %25
  ret void

; <label>:187:                                    ; preds = %25
  %188 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %189 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %190 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %191 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %192 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %193 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %194 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %195 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %196 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %197 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %198 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %199 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %200 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %188, i32 0, i32 0
  store i64* %0, i64** %200, align 8
  %201 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %189, i32 0, i32 0
  store i64* %1, i64** %201, align 8
  %202 = call i64 @_ZN9__gnu_cxxmiIPxSt6vectorIxSaIxEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %189, %"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %188) #3
  %203 = icmp sgt i64 %202, 16
  store i32 1022075127, i32* %24
  br label %205

; <label>:204:                                    ; preds = %25
  store i32 -891880324, i32* %24
  br label %205

; <label>:205:                                    ; preds = %204, %187, %158, %130, %115, %86, %83, %36, %28, %27
  br label %25
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt14__partial_sortIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %11 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %14 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %4, i32 0, i32 0
  store i64* %0, i64** %15, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %5, i32 0, i32 0
  store i64* %1, i64** %16, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %6, i32 0, i32 0
  store i64* %2, i64** %17, align 8
  %18 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %8 to i8*
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 8, i32 8, i1 false)
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %9 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %10 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %8, i32 0, i32 0
  %25 = load i64*, i64** %24, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %9, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %10, i32 0, i32 0
  %29 = load i64*, i64** %28, align 8
  call void @_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_(i64* %25, i64* %27, i64* %29)
  %30 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %12 to i8*
  %31 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 8, i32 8, i1 false)
  %32 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %13 to i8*
  %33 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 8, i32 8, i1 false)
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %12, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %13, i32 0, i32 0
  %37 = load i64*, i64** %36, align 8
  call void @_ZSt11__sort_heapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i64* %35, i64* %37)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt27__unguarded_partition_pivotIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEET_S9_S9_T0_(i64*, i64*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %12 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %16 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %4, i32 0, i32 0
  store i64* %0, i64** %17, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %5, i32 0, i32 0
  store i64* %1, i64** %18, align 8
  %19 = call i64 @_ZN9__gnu_cxxmiIPxSt6vectorIxSaIxEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %4) #3
  %20 = sdiv i64 %19, 2
  %21 = call i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl(%"class.__gnu_cxx::__normal_iterator.38"* %4, i64 %20) #3
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %7, i32 0, i32 0
  store i64* %21, i64** %22, align 8
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %8 to i8*
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 8, i32 8, i1 false)
  %25 = call i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl(%"class.__gnu_cxx::__normal_iterator.38"* %4, i64 1) #3
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %9, i32 0, i32 0
  store i64* %25, i64** %26, align 8
  %27 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %10 to i8*
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 8, i32 8, i1 false)
  %29 = call i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEmiEl(%"class.__gnu_cxx::__normal_iterator.38"* %5, i64 1) #3
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %11, i32 0, i32 0
  store i64* %29, i64** %30, align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %8, i32 0, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %9, i32 0, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %10, i32 0, i32 0
  %36 = load i64*, i64** %35, align 8
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %11, i32 0, i32 0
  %38 = load i64*, i64** %37, align 8
  call void @_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_S9_T0_(i64* %32, i64* %34, i64* %36, i64* %38)
  %39 = call i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl(%"class.__gnu_cxx::__normal_iterator.38"* %4, i64 1) #3
  %40 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %13, i32 0, i32 0
  store i64* %39, i64** %40, align 8
  %41 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %14 to i8*
  %42 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %15 to i8*
  %44 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 8, i32 8, i1 false)
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %13, i32 0, i32 0
  %46 = load i64*, i64** %45, align 8
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %14, i32 0, i32 0
  %48 = load i64*, i64** %47, align 8
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %15, i32 0, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = call i64* @_ZSt21__unguarded_partitionIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEET_S9_S9_S9_T0_(i64* %46, i64* %48, i64* %50)
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %3, i32 0, i32 0
  store i64* %51, i64** %52, align 8
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %3, i32 0, i32 0
  %54 = load i64*, i64** %53, align 8
  ret i64* %54
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %10 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %17 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %4, i32 0, i32 0
  store i64* %0, i64** %18, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %5, i32 0, i32 0
  store i64* %1, i64** %19, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %6, i32 0, i32 0
  store i64* %2, i64** %20, align 8
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %8 to i8*
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %9 to i8*
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 8, i32 8, i1 false)
  %25 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %8, i32 0, i32 0
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %9, i32 0, i32 0
  %28 = load i64*, i64** %27, align 8
  call void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i64* %26, i64* %28)
  %29 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %11 to i8*
  %30 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 8, i32 8, i1 false)
  %31 = alloca i32
  store i32 1720592603, i32* %31
  br label %32

; <label>:32:                                     ; preds = %3, %123
  %33 = load i32, i32* %31
  switch i32 %33, label %34 [
    i32 1720592603, label %35
    i32 877641482, label %38
    i32 -1191507536, label %49
    i32 -315300643, label %65
    i32 396321942, label %105
    i32 1993911981, label %106
    i32 291027331, label %107
    i32 1780391485, label %109
    i32 280391538, label %110
  ]

; <label>:34:                                     ; preds = %32
  br label %123

; <label>:35:                                     ; preds = %32
  %36 = call zeroext i1 @_ZN9__gnu_cxxltIPxSt6vectorIxSaIxEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %11, %"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %6) #3
  %37 = select i1 %36, i32 877641482, i32 1780391485
  store i32 %37, i32* %31
  br label %123

; <label>:38:                                     ; preds = %32
  %39 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %12 to i8*
  %40 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 8, i1 false)
  %41 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %13 to i8*
  %42 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %12, i32 0, i32 0
  %44 = load i64*, i64** %43, align 8
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %13, i32 0, i32 0
  %46 = load i64*, i64** %45, align 8
  %47 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclINS_17__normal_iteratorIPxSt6vectorIxSaIxEEEES8_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %7, i64* %44, i64* %46)
  %48 = select i1 %47, i32 -1191507536, i32 1993911981
  store i32 %48, i32* %31
  br label %123

; <label>:49:                                     ; preds = %32
  %50 = load i32, i32* @x.1147
  %51 = load i32, i32* @y.1148
  %52 = add i32 %50, -679779861
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -679779861
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -315300643, i32 280391538
  store i32 %64, i32* %31
  br label %123

; <label>:65:                                     ; preds = %32
  %66 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %14 to i8*
  %67 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %66, i8* %67, i64 8, i32 8, i1 false)
  %68 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %15 to i8*
  %69 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %68, i8* %69, i64 8, i32 8, i1 false)
  %70 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %16 to i8*
  %71 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %70, i8* %71, i64 8, i32 8, i1 false)
  %72 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %14, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %15, i32 0, i32 0
  %75 = load i64*, i64** %74, align 8
  %76 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %16, i32 0, i32 0
  %77 = load i64*, i64** %76, align 8
  call void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_(i64* %73, i64* %75, i64* %77)
  %78 = load i32, i32* @x.1147
  %79 = load i32, i32* @y.1148
  %80 = add i32 %78, -711944266
  %81 = sub i32 %80, 1
  %82 = sub i32 %81, -711944266
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 false, true
  %91 = and i1 %88, false
  %92 = and i1 %86, %90
  %93 = and i1 %89, false
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 false, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  %104 = select i1 %102, i32 396321942, i32 280391538
  store i32 %104, i32* %31
  br label %123

; <label>:105:                                    ; preds = %32
  store i32 1993911981, i32* %31
  br label %123

; <label>:106:                                    ; preds = %32
  store i32 291027331, i32* %31
  br label %123

; <label>:107:                                    ; preds = %32
  %108 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.38"* @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEppEv(%"class.__gnu_cxx::__normal_iterator.38"* %11) #3
  store i32 1720592603, i32* %31
  br label %123

; <label>:109:                                    ; preds = %32
  ret void

; <label>:110:                                    ; preds = %32
  %111 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %14 to i8*
  %112 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %111, i8* %112, i64 8, i32 8, i1 false)
  %113 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %15 to i8*
  %114 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %113, i8* %114, i64 8, i32 8, i1 false)
  %115 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %16 to i8*
  %116 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %115, i8* %116, i64 8, i32 8, i1 false)
  %117 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %14, i32 0, i32 0
  %118 = load i64*, i64** %117, align 8
  %119 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %15, i32 0, i32 0
  %120 = load i64*, i64** %119, align 8
  %121 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %16, i32 0, i32 0
  %122 = load i64*, i64** %121, align 8
  call void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_(i64* %118, i64* %120, i64* %122)
  store i32 -315300643, i32* %31
  br label %123

; <label>:123:                                    ; preds = %110, %107, %106, %105, %65, %49, %38, %35, %34
  br label %32
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt11__sort_heapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i64*, i64*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %9 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %3, i32 0, i32 0
  store i64* %0, i64** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %4, i32 0, i32 0
  store i64* %1, i64** %11, align 8
  %12 = alloca i32
  store i32 1847873031, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %35
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1847873031, label %16
    i32 -708686869, label %20
    i32 -31887262, label %34
  ]

; <label>:15:                                     ; preds = %13
  br label %35

; <label>:16:                                     ; preds = %13
  %17 = call i64 @_ZN9__gnu_cxxmiIPxSt6vectorIxSaIxEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %3) #3
  %18 = icmp sgt i64 %17, 1
  %19 = select i1 %18, i32 -708686869, i32 -31887262
  store i32 %19, i32* %12
  br label %35

; <label>:20:                                     ; preds = %13
  %21 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.38"* @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEmmEv(%"class.__gnu_cxx::__normal_iterator.38"* %4) #3
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %6 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %7 to i8*
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 8, i32 8, i1 false)
  %26 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %8 to i8*
  %27 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 8, i32 8, i1 false)
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %6, i32 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %7, i32 0, i32 0
  %31 = load i64*, i64** %30, align 8
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %8, i32 0, i32 0
  %33 = load i64*, i64** %32, align 8
  call void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_(i64* %29, i64* %31, i64* %33)
  store i32 1847873031, i32* %12
  br label %35

; <label>:34:                                     ; preds = %13
  ret void

; <label>:35:                                     ; preds = %20, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i64*, i64*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i64
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %13 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %5, i32 0, i32 0
  store i64* %0, i64** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %6, i32 0, i32 0
  store i64* %1, i64** %15, align 8
  %16 = call i64 @_ZN9__gnu_cxxmiIPxSt6vectorIxSaIxEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %6, %"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %5) #3
  store i64 %16, i64* %4
  %17 = alloca i32
  store i32 -1354014574, i32* %17
  br label %18

; <label>:18:                                     ; preds = %2, %199
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1354014574, label %21
    i32 1329466435, label %25
    i32 -757642003, label %53
    i32 574459600, label %68
    i32 1541887367, label %69
    i32 -1650364489, label %77
    i32 -132766596, label %93
    i32 811353982, label %124
    i32 -804307595, label %127
    i32 2006509633, label %128
    i32 -1957149951, label %135
    i32 582457485, label %151
    i32 -472917685, label %179
    i32 -1295004358, label %180
    i32 860085898, label %181
    i32 1152445657, label %198
  ]

; <label>:20:                                     ; preds = %18
  br label %199

; <label>:21:                                     ; preds = %18
  %22 = load volatile i64, i64* %4
  %23 = icmp slt i64 %22, 2
  %24 = select i1 %23, i32 1329466435, i32 1541887367
  store i32 %24, i32* %17
  br label %199

; <label>:25:                                     ; preds = %18
  %26 = load i32, i32* @x.1151
  %27 = load i32, i32* @y.1152
  %28 = add i32 %26, -31628154
  %29 = sub i32 %28, 1
  %30 = sub i32 %29, -31628154
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 false, true
  %39 = and i1 %36, false
  %40 = and i1 %34, %38
  %41 = and i1 %37, false
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 false, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  %52 = select i1 %50, i32 -757642003, i32 -1295004358
  store i32 %52, i32* %17
  br label %199

; <label>:53:                                     ; preds = %18
  %54 = load i32, i32* @x.1151
  %55 = load i32, i32* @y.1152
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 574459600, i32 -1295004358
  store i32 %67, i32* %17
  br label %199

; <label>:68:                                     ; preds = %18
  store i32 -1957149951, i32* %17
  br label %199

; <label>:69:                                     ; preds = %18
  %70 = call i64 @_ZN9__gnu_cxxmiIPxSt6vectorIxSaIxEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %6, %"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %5) #3
  store i64 %70, i64* %8, align 8
  %71 = load i64, i64* %8, align 8
  %72 = add i64 %71, 1881446498304194644
  %73 = sub i64 %72, 2
  %74 = sub i64 %73, 1881446498304194644
  %75 = sub nsw i64 %71, 2
  %76 = sdiv i64 %74, 2
  store i64 %76, i64* %9, align 8
  store i32 -1650364489, i32* %17
  br label %199

; <label>:77:                                     ; preds = %18
  %78 = load i32, i32* @x.1151
  %79 = load i32, i32* @y.1152
  %80 = sub i32 %78, -86863383
  %81 = sub i32 %80, 1
  %82 = add i32 %81, -86863383
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = and i1 %86, %87
  %89 = xor i1 %86, %87
  %90 = or i1 %88, %89
  %91 = or i1 %86, %87
  %92 = select i1 %90, i32 -132766596, i32 860085898
  store i32 %92, i32* %17
  br label %199

; <label>:93:                                     ; preds = %18
  %94 = load i64, i64* %9, align 8
  %95 = call i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl(%"class.__gnu_cxx::__normal_iterator.38"* %5, i64 %94) #3
  %96 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %11, i32 0, i32 0
  store i64* %95, i64** %96, align 8
  %97 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %11) #3
  %98 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %97) #3
  %99 = load i64, i64* %98, align 8
  store i64 %99, i64* %10, align 8
  %100 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %12 to i8*
  %101 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %100, i8* %101, i64 8, i32 8, i1 false)
  %102 = load i64, i64* %9, align 8
  %103 = load i64, i64* %8, align 8
  %104 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %10) #3
  %105 = load i64, i64* %104, align 8
  %106 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %12, i32 0, i32 0
  %107 = load i64*, i64** %106, align 8
  call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEElxNS0_5__ops15_Iter_less_iterEEvT_T0_SA_T1_T2_(i64* %107, i64 %102, i64 %103, i64 %105)
  %108 = load i64, i64* %9, align 8
  %109 = icmp eq i64 %108, 0
  store i1 %109, i1* %3
  %110 = load i32, i32* @x.1151
  %111 = load i32, i32* @y.1152
  %112 = sub i32 0, 1
  %113 = add i32 %110, %112
  %114 = sub i32 %110, 1
  %115 = mul i32 %110, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %111, 10
  %119 = and i1 %117, %118
  %120 = xor i1 %117, %118
  %121 = or i1 %119, %120
  %122 = or i1 %117, %118
  %123 = select i1 %121, i32 811353982, i32 860085898
  store i32 %123, i32* %17
  br label %199

; <label>:124:                                    ; preds = %18
  %125 = load volatile i1, i1* %3
  %126 = select i1 %125, i32 -804307595, i32 2006509633
  store i32 %126, i32* %17
  br label %199

; <label>:127:                                    ; preds = %18
  store i32 -1957149951, i32* %17
  br label %199

; <label>:128:                                    ; preds = %18
  %129 = load i64, i64* %9, align 8
  %130 = sub i64 0, %129
  %131 = sub i64 0, -1
  %132 = add i64 %130, %131
  %133 = sub i64 0, %132
  %134 = add nsw i64 %129, -1
  store i64 %133, i64* %9, align 8
  store i32 -1650364489, i32* %17
  br label %199

; <label>:135:                                    ; preds = %18
  %136 = load i32, i32* @x.1151
  %137 = load i32, i32* @y.1152
  %138 = sub i32 %136, 336678273
  %139 = sub i32 %138, 1
  %140 = add i32 %139, 336678273
  %141 = sub i32 %136, 1
  %142 = mul i32 %136, %140
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %137, 10
  %146 = and i1 %144, %145
  %147 = xor i1 %144, %145
  %148 = or i1 %146, %147
  %149 = or i1 %144, %145
  %150 = select i1 %148, i32 582457485, i32 1152445657
  store i32 %150, i32* %17
  br label %199

; <label>:151:                                    ; preds = %18
  %152 = load i32, i32* @x.1151
  %153 = load i32, i32* @y.1152
  %154 = add i32 %152, -937302493
  %155 = sub i32 %154, 1
  %156 = sub i32 %155, -937302493
  %157 = sub i32 %152, 1
  %158 = mul i32 %152, %156
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %153, 10
  %162 = xor i1 %160, true
  %163 = xor i1 %161, true
  %164 = xor i1 true, true
  %165 = and i1 %162, true
  %166 = and i1 %160, %164
  %167 = and i1 %163, true
  %168 = and i1 %161, %164
  %169 = or i1 %165, %166
  %170 = or i1 %167, %168
  %171 = xor i1 %169, %170
  %172 = or i1 %162, %163
  %173 = xor i1 %172, true
  %174 = or i1 true, %164
  %175 = and i1 %173, %174
  %176 = or i1 %171, %175
  %177 = or i1 %160, %161
  %178 = select i1 %176, i32 -472917685, i32 1152445657
  store i32 %178, i32* %17
  br label %199

; <label>:179:                                    ; preds = %18
  ret void

; <label>:180:                                    ; preds = %18
  store i32 -757642003, i32* %17
  br label %199

; <label>:181:                                    ; preds = %18
  %182 = load i64, i64* %9, align 8
  %183 = call i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl(%"class.__gnu_cxx::__normal_iterator.38"* %5, i64 %182) #3
  %184 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %11, i32 0, i32 0
  store i64* %183, i64** %184, align 8
  %185 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %11) #3
  %186 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %185) #3
  %187 = load i64, i64* %186, align 8
  store i64 %187, i64* %10, align 8
  %188 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %12 to i8*
  %189 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %188, i8* %189, i64 8, i32 8, i1 false)
  %190 = load i64, i64* %9, align 8
  %191 = load i64, i64* %8, align 8
  %192 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %10) #3
  %193 = load i64, i64* %192, align 8
  %194 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %12, i32 0, i32 0
  %195 = load i64*, i64** %194, align 8
  call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEElxNS0_5__ops15_Iter_less_iterEEvT_T0_SA_T1_T2_(i64* %195, i64 %190, i64 %191, i64 %193)
  %196 = load i64, i64* %9, align 8
  %197 = icmp eq i64 %196, 0
  store i32 -132766596, i32* %17
  br label %199

; <label>:198:                                    ; preds = %18
  store i32 582457485, i32* %17
  br label %199

; <label>:199:                                    ; preds = %198, %181, %180, %151, %135, %128, %127, %124, %93, %77, %69, %68, %53, %25, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclINS_17__normal_iteratorIPxSt6vectorIxSaIxEEEES8_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"*, i64*, i64*) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.1153
  %8 = load i32, i32* @y.1154
  %9 = sub i32 %7, -579370790
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -579370790
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1274285290, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %81
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1274285290, label %21
    i32 -1445663480, label %29
    i32 1536961286, label %67
    i32 1821063505, label %69
  ]

; <label>:20:                                     ; preds = %18
  br label %81

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1445663480, i32 1821063505
  store i32 %28, i32* %17
  br label %81

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %32 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter"*, align 8
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %30, i32 0, i32 0
  store i64* %1, i64** %33, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %31, i32 0, i32 0
  store i64* %2, i64** %34, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_less_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %32, align 8
  %35 = load %"struct.__gnu_cxx::__ops::_Iter_less_iter"*, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %32, align 8
  %36 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %30) #3
  %37 = load i64, i64* %36, align 8
  %38 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %31) #3
  %39 = load i64, i64* %38, align 8
  %40 = icmp slt i64 %37, %39
  store i1 %40, i1* %4
  %41 = load i32, i32* @x.1153
  %42 = load i32, i32* @y.1154
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 1536961286, i32 1821063505
  store i32 %66, i32* %17
  br label %81

; <label>:67:                                     ; preds = %18
  %68 = load volatile i1, i1* %4
  ret i1 %68

; <label>:69:                                     ; preds = %18
  %70 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %71 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %72 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter"*, align 8
  %73 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %70, i32 0, i32 0
  store i64* %1, i64** %73, align 8
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %71, i32 0, i32 0
  store i64* %2, i64** %74, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_less_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %72, align 8
  %75 = load %"struct.__gnu_cxx::__ops::_Iter_less_iter"*, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %72, align 8
  %76 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %70) #3
  %77 = load i64, i64* %76, align 8
  %78 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %71) #3
  %79 = load i64, i64* %78, align 8
  %80 = icmp slt i64 %77, %79
  store i32 -1445663480, i32* %17
  br label %81

; <label>:81:                                     ; preds = %69, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_T0_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %8 = alloca i64, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %10 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %4, i32 0, i32 0
  store i64* %0, i64** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %5, i32 0, i32 0
  store i64* %1, i64** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %6, i32 0, i32 0
  store i64* %2, i64** %13, align 8
  %14 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %6) #3
  %15 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %14) #3
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %8, align 8
  %17 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %4) #3
  %18 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %17) #3
  %19 = load i64, i64* %18, align 8
  %20 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %6) #3
  store i64 %19, i64* %20, align 8
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %9 to i8*
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  %23 = call i64 @_ZN9__gnu_cxxmiIPxSt6vectorIxSaIxEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS8_SB_(%"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %4) #3
  %24 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %8) #3
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %9, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  call void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEElxNS0_5__ops15_Iter_less_iterEEvT_T0_SA_T1_T2_(i64* %27, i64 0, i64 %23, i64 %25)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEElxNS0_5__ops15_Iter_less_iterEEvT_T0_SA_T1_T2_(i64*, i64, i64, i64) #0 comdat {
  %5 = alloca i1
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %18 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %19 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %20 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_val", align 1
  %21 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %22 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_val", align 1
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %6, i32 0, i32 0
  store i64* %0, i64** %23, align 8
  store i64 %1, i64* %8, align 8
  store i64 %2, i64* %9, align 8
  store i64 %3, i64* %10, align 8
  %24 = load i64, i64* %8, align 8
  store i64 %24, i64* %11, align 8
  %25 = load i64, i64* %8, align 8
  store i64 %25, i64* %12, align 8
  %26 = alloca i32
  store i32 -141859609, i32* %26
  br label %27

; <label>:27:                                     ; preds = %4, %233
  %28 = load i32, i32* %26
  switch i32 %28, label %29 [
    i32 -141859609, label %30
    i32 -1276589181, label %40
    i32 662461041, label %68
    i32 840521016, label %106
    i32 -1072407605, label %109
    i32 1439318724, label %115
    i32 -383522884, label %127
    i32 2137128954, label %135
    i32 1251567553, label %144
    i32 181957639, label %170
    i32 -793842488, label %179
  ]

; <label>:29:                                     ; preds = %27
  br label %233

; <label>:30:                                     ; preds = %27
  %31 = load i64, i64* %12, align 8
  %32 = load i64, i64* %9, align 8
  %33 = add i64 %32, -4232497747878086594
  %34 = sub i64 %33, 1
  %35 = sub i64 %34, -4232497747878086594
  %36 = sub nsw i64 %32, 1
  %37 = sdiv i64 %35, 2
  %38 = icmp slt i64 %31, %37
  %39 = select i1 %38, i32 -1276589181, i32 -383522884
  store i32 %39, i32* %26
  br label %233

; <label>:40:                                     ; preds = %27
  %41 = load i32, i32* @x.1157
  %42 = load i32, i32* @y.1158
  %43 = sub i32 %41, 412136003
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 412136003
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 662461041, i32 -793842488
  store i32 %67, i32* %26
  br label %233

; <label>:68:                                     ; preds = %27
  %69 = load i64, i64* %12, align 8
  %70 = sub i64 0, %69
  %71 = sub i64 0, 1
  %72 = add i64 %70, %71
  %73 = sub i64 0, %72
  %74 = add nsw i64 %69, 1
  %75 = mul nsw i64 2, %73
  store i64 %75, i64* %12, align 8
  %76 = load i64, i64* %12, align 8
  %77 = call i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl(%"class.__gnu_cxx::__normal_iterator.38"* %6, i64 %76) #3
  %78 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %13, i32 0, i32 0
  store i64* %77, i64** %78, align 8
  %79 = load i64, i64* %12, align 8
  %80 = sub i64 %79, -8489259343643710433
  %81 = sub i64 %80, 1
  %82 = add i64 %81, -8489259343643710433
  %83 = sub nsw i64 %79, 1
  %84 = call i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl(%"class.__gnu_cxx::__normal_iterator.38"* %6, i64 %82) #3
  %85 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %14, i32 0, i32 0
  store i64* %84, i64** %85, align 8
  %86 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %13, i32 0, i32 0
  %87 = load i64*, i64** %86, align 8
  %88 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %14, i32 0, i32 0
  %89 = load i64*, i64** %88, align 8
  %90 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclINS_17__normal_iteratorIPxSt6vectorIxSaIxEEEES8_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %7, i64* %87, i64* %89)
  store i1 %90, i1* %5
  %91 = load i32, i32* @x.1157
  %92 = load i32, i32* @y.1158
  %93 = add i32 %91, 1265894780
  %94 = sub i32 %93, 1
  %95 = sub i32 %94, 1265894780
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = and i1 %99, %100
  %102 = xor i1 %99, %100
  %103 = or i1 %101, %102
  %104 = or i1 %99, %100
  %105 = select i1 %103, i32 840521016, i32 -793842488
  store i32 %105, i32* %26
  br label %233

; <label>:106:                                    ; preds = %27
  %107 = load volatile i1, i1* %5
  %108 = select i1 %107, i32 -1072407605, i32 1439318724
  store i32 %108, i32* %26
  br label %233

; <label>:109:                                    ; preds = %27
  %110 = load i64, i64* %12, align 8
  %111 = add i64 %110, -6248802034303682015
  %112 = add i64 %111, -1
  %113 = sub i64 %112, -6248802034303682015
  %114 = add nsw i64 %110, -1
  store i64 %113, i64* %12, align 8
  store i32 1439318724, i32* %26
  br label %233

; <label>:115:                                    ; preds = %27
  %116 = load i64, i64* %12, align 8
  %117 = call i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl(%"class.__gnu_cxx::__normal_iterator.38"* %6, i64 %116) #3
  %118 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %15, i32 0, i32 0
  store i64* %117, i64** %118, align 8
  %119 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %15) #3
  %120 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %119) #3
  %121 = load i64, i64* %120, align 8
  %122 = load i64, i64* %8, align 8
  %123 = call i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl(%"class.__gnu_cxx::__normal_iterator.38"* %6, i64 %122) #3
  %124 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %16, i32 0, i32 0
  store i64* %123, i64** %124, align 8
  %125 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %16) #3
  store i64 %121, i64* %125, align 8
  %126 = load i64, i64* %12, align 8
  store i64 %126, i64* %8, align 8
  store i32 -141859609, i32* %26
  br label %233

; <label>:127:                                    ; preds = %27
  %128 = load i64, i64* %9, align 8
  %129 = xor i64 1, -1
  %130 = xor i64 %128, %129
  %131 = and i64 %130, %128
  %132 = and i64 %128, 1
  %133 = icmp eq i64 %131, 0
  %134 = select i1 %133, i32 2137128954, i32 181957639
  store i32 %134, i32* %26
  br label %233

; <label>:135:                                    ; preds = %27
  %136 = load i64, i64* %12, align 8
  %137 = load i64, i64* %9, align 8
  %138 = sub i64 0, 2
  %139 = add i64 %137, %138
  %140 = sub nsw i64 %137, 2
  %141 = sdiv i64 %139, 2
  %142 = icmp eq i64 %136, %141
  %143 = select i1 %142, i32 1251567553, i32 181957639
  store i32 %143, i32* %26
  br label %233

; <label>:144:                                    ; preds = %27
  %145 = load i64, i64* %12, align 8
  %146 = sub i64 0, %145
  %147 = sub i64 0, 1
  %148 = add i64 %146, %147
  %149 = sub i64 0, %148
  %150 = add nsw i64 %145, 1
  %151 = mul nsw i64 2, %149
  store i64 %151, i64* %12, align 8
  %152 = load i64, i64* %12, align 8
  %153 = add i64 %152, -4030349160501242293
  %154 = sub i64 %153, 1
  %155 = sub i64 %154, -4030349160501242293
  %156 = sub nsw i64 %152, 1
  %157 = call i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl(%"class.__gnu_cxx::__normal_iterator.38"* %6, i64 %155) #3
  %158 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %17, i32 0, i32 0
  store i64* %157, i64** %158, align 8
  %159 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %17) #3
  %160 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %159) #3
  %161 = load i64, i64* %160, align 8
  %162 = load i64, i64* %8, align 8
  %163 = call i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl(%"class.__gnu_cxx::__normal_iterator.38"* %6, i64 %162) #3
  %164 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %18, i32 0, i32 0
  store i64* %163, i64** %164, align 8
  %165 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %18) #3
  store i64 %161, i64* %165, align 8
  %166 = load i64, i64* %12, align 8
  %167 = sub i64 0, 1
  %168 = add i64 %166, %167
  %169 = sub nsw i64 %166, 1
  store i64 %168, i64* %8, align 8
  store i32 181957639, i32* %26
  br label %233

; <label>:170:                                    ; preds = %27
  %171 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %19 to i8*
  %172 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %171, i8* %172, i64 8, i32 8, i1 false)
  %173 = load i64, i64* %8, align 8
  %174 = load i64, i64* %11, align 8
  %175 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %10) #3
  %176 = load i64, i64* %175, align 8
  call void @_ZN9__gnu_cxx5__ops15__iter_comp_valENS0_15_Iter_less_iterE()
  %177 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %19, i32 0, i32 0
  %178 = load i64*, i64** %177, align 8
  call void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEElxNS0_5__ops14_Iter_less_valEEvT_T0_SA_T1_T2_(i64* %178, i64 %173, i64 %174, i64 %176)
  ret void

; <label>:179:                                    ; preds = %27
  %180 = load i64, i64* %12, align 8
  %181 = sub i64 0, %180
  %182 = add i64 0, %181
  %183 = sub i64 0, %180
  %184 = sub i64 %182, 4603301370144447792
  %185 = add i64 %184, 1
  %186 = add i64 %185, 4603301370144447792
  %187 = add i64 %182, 1
  %188 = add i64 %180, 603193442351887887
  %189 = sub i64 %188, 1
  %190 = sub i64 %189, 603193442351887887
  %191 = sub i64 %180, 1
  %192 = mul i64 %190, 1
  %193 = sub i64 0, %180
  %194 = sub i64 0, 1
  %195 = add i64 %193, %194
  %196 = sub i64 0, %195
  %197 = add nsw i64 %180, 1
  %198 = sub i64 2, 6921525477301252611
  %199 = sub i64 %198, %196
  %200 = add i64 %199, 6921525477301252611
  %201 = sub i64 2, %196
  %202 = mul i64 %200, %196
  %203 = add i64 2, -3984207942510892659
  %204 = sub i64 %203, %196
  %205 = sub i64 %204, -3984207942510892659
  %206 = sub i64 2, %196
  %207 = mul i64 %205, %196
  %208 = shl i64 2, %196
  %209 = shl i64 2, %196
  %210 = mul nsw i64 2, %196
  store i64 %210, i64* %12, align 8
  %211 = load i64, i64* %12, align 8
  %212 = call i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl(%"class.__gnu_cxx::__normal_iterator.38"* %6, i64 %211) #3
  %213 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %13, i32 0, i32 0
  store i64* %212, i64** %213, align 8
  %214 = load i64, i64* %12, align 8
  %215 = sub i64 0, %214
  %216 = add i64 0, %215
  %217 = sub i64 0, %214
  %218 = add i64 %216, -3099216747828119438
  %219 = add i64 %218, 1
  %220 = sub i64 %219, -3099216747828119438
  %221 = add i64 %216, 1
  %222 = add i64 %214, 3225261127729876021
  %223 = sub i64 %222, 1
  %224 = sub i64 %223, 3225261127729876021
  %225 = sub nsw i64 %214, 1
  %226 = call i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl(%"class.__gnu_cxx::__normal_iterator.38"* %6, i64 %224) #3
  %227 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %14, i32 0, i32 0
  store i64* %226, i64** %227, align 8
  %228 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %13, i32 0, i32 0
  %229 = load i64*, i64** %228, align 8
  %230 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %14, i32 0, i32 0
  %231 = load i64*, i64** %230, align 8
  %232 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclINS_17__normal_iteratorIPxSt6vectorIxSaIxEEEES8_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %7, i64* %229, i64* %231)
  store i32 662461041, i32* %26
  br label %233

; <label>:233:                                    ; preds = %179, %144, %135, %127, %115, %109, %106, %68, %40, %30, %29
  br label %27
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEElxNS0_5__ops14_Iter_less_valEEvT_T0_SA_T1_T2_(i64*, i64, i64, i64) #0 comdat {
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %11 = alloca i64*
  %12 = alloca i64*
  %13 = alloca i64*
  %14 = alloca i64*
  %15 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_val"*
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %17 = alloca i1
  %18 = alloca i1
  %19 = load i32, i32* @x.1159
  %20 = load i32, i32* @y.1160
  %21 = sub i32 0, 1
  %22 = add i32 %19, %21
  %23 = sub i32 %19, 1
  %24 = mul i32 %19, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  store i1 %26, i1* %18
  %27 = icmp slt i32 %20, 10
  store i1 %27, i1* %17
  %28 = alloca i32
  store i32 1107408135, i32* %28
  %29 = alloca i1
  br label %30

; <label>:30:                                     ; preds = %4, %357
  %31 = load i32, i32* %28
  switch i32 %31, label %32 [
    i32 1107408135, label %33
    i32 1049512971, label %41
    i32 -441050344, label %92
    i32 1151594520, label %93
    i32 892967662, label %109
    i32 987426978, label %141
    i32 -148524263, label %144
    i32 -637414239, label %159
    i32 -951268135, label %187
    i32 -256443355, label %189
    i32 88790461, label %192
    i32 1200308968, label %208
    i32 925154501, label %253
    i32 -803341458, label %254
    i32 -1344086938, label %266
    i32 -1598791146, label %284
    i32 1579291114, label %290
    i32 -321630162, label %303
  ]

; <label>:32:                                     ; preds = %30
  br label %357

; <label>:33:                                     ; preds = %30
  %34 = load volatile i1, i1* %18
  %35 = load volatile i1, i1* %17
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  %40 = select i1 %38, i32 1049512971, i32 -1344086938
  store i32 %40, i32* %28
  br label %357

; <label>:41:                                     ; preds = %30
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %42, %"class.__gnu_cxx::__normal_iterator.38"** %16
  %43 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_val", align 1
  store %"struct.__gnu_cxx::__ops::_Iter_less_val"* %43, %"struct.__gnu_cxx::__ops::_Iter_less_val"** %15
  %44 = alloca i64, align 8
  store i64* %44, i64** %14
  %45 = alloca i64, align 8
  store i64* %45, i64** %13
  %46 = alloca i64, align 8
  store i64* %46, i64** %12
  %47 = alloca i64, align 8
  store i64* %47, i64** %11
  %48 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %48, %"class.__gnu_cxx::__normal_iterator.38"** %10
  %49 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %49, %"class.__gnu_cxx::__normal_iterator.38"** %9
  %50 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %50, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %51 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %51, %"class.__gnu_cxx::__normal_iterator.38"** %7
  %52 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %16
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %52, i32 0, i32 0
  store i64* %0, i64** %53, align 8
  %54 = load volatile i64*, i64** %14
  store i64 %1, i64* %54, align 8
  %55 = load volatile i64*, i64** %13
  store i64 %2, i64* %55, align 8
  %56 = load volatile i64*, i64** %12
  store i64 %3, i64* %56, align 8
  %57 = load volatile i64*, i64** %14
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %58, -2425484833042560357
  %60 = sub i64 %59, 1
  %61 = sub i64 %60, -2425484833042560357
  %62 = sub nsw i64 %58, 1
  %63 = sdiv i64 %61, 2
  %64 = load volatile i64*, i64** %11
  store i64 %63, i64* %64, align 8
  %65 = load i32, i32* @x.1159
  %66 = load i32, i32* @y.1160
  %67 = add i32 %65, -379445173
  %68 = sub i32 %67, 1
  %69 = sub i32 %68, -379445173
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = xor i1 %73, true
  %76 = xor i1 %74, true
  %77 = xor i1 false, true
  %78 = and i1 %75, false
  %79 = and i1 %73, %77
  %80 = and i1 %76, false
  %81 = and i1 %74, %77
  %82 = or i1 %78, %79
  %83 = or i1 %80, %81
  %84 = xor i1 %82, %83
  %85 = or i1 %75, %76
  %86 = xor i1 %85, true
  %87 = or i1 false, %77
  %88 = and i1 %86, %87
  %89 = or i1 %84, %88
  %90 = or i1 %73, %74
  %91 = select i1 %89, i32 -441050344, i32 -1344086938
  store i32 %91, i32* %28
  br label %357

; <label>:92:                                     ; preds = %30
  store i32 1151594520, i32* %28
  br label %357

; <label>:93:                                     ; preds = %30
  %94 = load i32, i32* @x.1159
  %95 = load i32, i32* @y.1160
  %96 = add i32 %94, 490010571
  %97 = sub i32 %96, 1
  %98 = sub i32 %97, 490010571
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = and i1 %102, %103
  %105 = xor i1 %102, %103
  %106 = or i1 %104, %105
  %107 = or i1 %102, %103
  %108 = select i1 %106, i32 892967662, i32 -1598791146
  store i32 %108, i32* %28
  br label %357

; <label>:109:                                    ; preds = %30
  %110 = load volatile i64*, i64** %14
  %111 = load i64, i64* %110, align 8
  %112 = load volatile i64*, i64** %13
  %113 = load i64, i64* %112, align 8
  %114 = icmp sgt i64 %111, %113
  store i1 %114, i1* %6
  %115 = load i32, i32* @x.1159
  %116 = load i32, i32* @y.1160
  %117 = sub i32 0, 1
  %118 = add i32 %115, %117
  %119 = sub i32 %115, 1
  %120 = mul i32 %115, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %116, 10
  %124 = xor i1 %122, true
  %125 = xor i1 %123, true
  %126 = xor i1 true, true
  %127 = and i1 %124, true
  %128 = and i1 %122, %126
  %129 = and i1 %125, true
  %130 = and i1 %123, %126
  %131 = or i1 %127, %128
  %132 = or i1 %129, %130
  %133 = xor i1 %131, %132
  %134 = or i1 %124, %125
  %135 = xor i1 %134, true
  %136 = or i1 true, %126
  %137 = and i1 %135, %136
  %138 = or i1 %133, %137
  %139 = or i1 %122, %123
  %140 = select i1 %138, i32 987426978, i32 -1598791146
  store i32 %140, i32* %28
  br label %357

; <label>:141:                                    ; preds = %30
  %142 = load volatile i1, i1* %6
  %143 = select i1 %142, i32 -148524263, i32 -256443355
  store i32 %143, i32* %28
  store i1 false, i1* %29
  br label %357

; <label>:144:                                    ; preds = %30
  %145 = load i32, i32* @x.1159
  %146 = load i32, i32* @y.1160
  %147 = sub i32 0, 1
  %148 = add i32 %145, %147
  %149 = sub i32 %145, 1
  %150 = mul i32 %145, %148
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %146, 10
  %154 = and i1 %152, %153
  %155 = xor i1 %152, %153
  %156 = or i1 %154, %155
  %157 = or i1 %152, %153
  %158 = select i1 %156, i32 -637414239, i32 1579291114
  store i32 %158, i32* %28
  br label %357

; <label>:159:                                    ; preds = %30
  %160 = load volatile i64*, i64** %11
  %161 = load i64, i64* %160, align 8
  %162 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %16
  %163 = call i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl(%"class.__gnu_cxx::__normal_iterator.38"* %162, i64 %161) #3
  %164 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %10
  %165 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %164, i32 0, i32 0
  store i64* %163, i64** %165, align 8
  %166 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %10
  %167 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %166, i32 0, i32 0
  %168 = load i64*, i64** %167, align 8
  %169 = load volatile %"struct.__gnu_cxx::__ops::_Iter_less_val"*, %"struct.__gnu_cxx::__ops::_Iter_less_val"** %15
  %170 = load volatile i64*, i64** %12
  %171 = call zeroext i1 @_ZNK9__gnu_cxx5__ops14_Iter_less_valclINS_17__normal_iteratorIPxSt6vectorIxSaIxEEEExEEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_less_val"* %169, i64* %168, i64* dereferenceable(8) %170)
  store i1 %171, i1* %5
  %172 = load i32, i32* @x.1159
  %173 = load i32, i32* @y.1160
  %174 = sub i32 %172, 1125268082
  %175 = sub i32 %174, 1
  %176 = add i32 %175, 1125268082
  %177 = sub i32 %172, 1
  %178 = mul i32 %172, %176
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %173, 10
  %182 = and i1 %180, %181
  %183 = xor i1 %180, %181
  %184 = or i1 %182, %183
  %185 = or i1 %180, %181
  %186 = select i1 %184, i32 -951268135, i32 1579291114
  store i32 %186, i32* %28
  br label %357

; <label>:187:                                    ; preds = %30
  store i32 -256443355, i32* %28
  %188 = load volatile i1, i1* %5
  store i1 %188, i1* %29
  br label %357

; <label>:189:                                    ; preds = %30
  %190 = load i1, i1* %29
  %191 = select i1 %190, i32 88790461, i32 -803341458
  store i32 %191, i32* %28
  br label %357

; <label>:192:                                    ; preds = %30
  %193 = load i32, i32* @x.1159
  %194 = load i32, i32* @y.1160
  %195 = sub i32 %193, -1566832067
  %196 = sub i32 %195, 1
  %197 = add i32 %196, -1566832067
  %198 = sub i32 %193, 1
  %199 = mul i32 %193, %197
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %194, 10
  %203 = and i1 %201, %202
  %204 = xor i1 %201, %202
  %205 = or i1 %203, %204
  %206 = or i1 %201, %202
  %207 = select i1 %205, i32 1200308968, i32 -321630162
  store i32 %207, i32* %28
  br label %357

; <label>:208:                                    ; preds = %30
  %209 = load volatile i64*, i64** %11
  %210 = load i64, i64* %209, align 8
  %211 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %16
  %212 = call i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl(%"class.__gnu_cxx::__normal_iterator.38"* %211, i64 %210) #3
  %213 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %9
  %214 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %213, i32 0, i32 0
  store i64* %212, i64** %214, align 8
  %215 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %9
  %216 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %215) #3
  %217 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %216) #3
  %218 = load i64, i64* %217, align 8
  %219 = load volatile i64*, i64** %14
  %220 = load i64, i64* %219, align 8
  %221 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %16
  %222 = call i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl(%"class.__gnu_cxx::__normal_iterator.38"* %221, i64 %220) #3
  %223 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %224 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %223, i32 0, i32 0
  store i64* %222, i64** %224, align 8
  %225 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %226 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %225) #3
  store i64 %218, i64* %226, align 8
  %227 = load volatile i64*, i64** %11
  %228 = load i64, i64* %227, align 8
  %229 = load volatile i64*, i64** %14
  store i64 %228, i64* %229, align 8
  %230 = load volatile i64*, i64** %14
  %231 = load i64, i64* %230, align 8
  %232 = sub i64 %231, 4826238451806563705
  %233 = sub i64 %232, 1
  %234 = add i64 %233, 4826238451806563705
  %235 = sub nsw i64 %231, 1
  %236 = sdiv i64 %234, 2
  %237 = load volatile i64*, i64** %11
  store i64 %236, i64* %237, align 8
  %238 = load i32, i32* @x.1159
  %239 = load i32, i32* @y.1160
  %240 = add i32 %238, 894313597
  %241 = sub i32 %240, 1
  %242 = sub i32 %241, 894313597
  %243 = sub i32 %238, 1
  %244 = mul i32 %238, %242
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %239, 10
  %248 = and i1 %246, %247
  %249 = xor i1 %246, %247
  %250 = or i1 %248, %249
  %251 = or i1 %246, %247
  %252 = select i1 %250, i32 925154501, i32 -321630162
  store i32 %252, i32* %28
  br label %357

; <label>:253:                                    ; preds = %30
  store i32 1151594520, i32* %28
  br label %357

; <label>:254:                                    ; preds = %30
  %255 = load volatile i64*, i64** %12
  %256 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %255) #3
  %257 = load i64, i64* %256, align 8
  %258 = load volatile i64*, i64** %14
  %259 = load i64, i64* %258, align 8
  %260 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %16
  %261 = call i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl(%"class.__gnu_cxx::__normal_iterator.38"* %260, i64 %259) #3
  %262 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %7
  %263 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %262, i32 0, i32 0
  store i64* %261, i64** %263, align 8
  %264 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %7
  %265 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %264) #3
  store i64 %257, i64* %265, align 8
  ret void

; <label>:266:                                    ; preds = %30
  %267 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %268 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_val", align 1
  %269 = alloca i64, align 8
  %270 = alloca i64, align 8
  %271 = alloca i64, align 8
  %272 = alloca i64, align 8
  %273 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %274 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %275 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %276 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %277 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %267, i32 0, i32 0
  store i64* %0, i64** %277, align 8
  store i64 %1, i64* %269, align 8
  store i64 %2, i64* %270, align 8
  store i64 %3, i64* %271, align 8
  %278 = load i64, i64* %269, align 8
  %279 = sub i64 0, 1
  %280 = add i64 %278, %279
  %281 = sub nsw i64 %278, 1
  %282 = shl i64 %280, 2
  %283 = sdiv i64 %280, 2
  store i64 %283, i64* %272, align 8
  store i32 1049512971, i32* %28
  br label %357

; <label>:284:                                    ; preds = %30
  %285 = load volatile i64*, i64** %14
  %286 = load i64, i64* %285, align 8
  %287 = load volatile i64*, i64** %13
  %288 = load i64, i64* %287, align 8
  %289 = icmp sgt i64 %286, %288
  store i32 892967662, i32* %28
  br label %357

; <label>:290:                                    ; preds = %30
  %291 = load volatile i64*, i64** %11
  %292 = load i64, i64* %291, align 8
  %293 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %16
  %294 = call i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl(%"class.__gnu_cxx::__normal_iterator.38"* %293, i64 %292) #3
  %295 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %10
  %296 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %295, i32 0, i32 0
  store i64* %294, i64** %296, align 8
  %297 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %10
  %298 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %297, i32 0, i32 0
  %299 = load i64*, i64** %298, align 8
  %300 = load volatile %"struct.__gnu_cxx::__ops::_Iter_less_val"*, %"struct.__gnu_cxx::__ops::_Iter_less_val"** %15
  %301 = load volatile i64*, i64** %12
  %302 = call zeroext i1 @_ZNK9__gnu_cxx5__ops14_Iter_less_valclINS_17__normal_iteratorIPxSt6vectorIxSaIxEEEExEEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_less_val"* %300, i64* %299, i64* dereferenceable(8) %301)
  store i32 -637414239, i32* %28
  br label %357

; <label>:303:                                    ; preds = %30
  %304 = load volatile i64*, i64** %11
  %305 = load i64, i64* %304, align 8
  %306 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %16
  %307 = call i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl(%"class.__gnu_cxx::__normal_iterator.38"* %306, i64 %305) #3
  %308 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %9
  %309 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %308, i32 0, i32 0
  store i64* %307, i64** %309, align 8
  %310 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %9
  %311 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %310) #3
  %312 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %311) #3
  %313 = load i64, i64* %312, align 8
  %314 = load volatile i64*, i64** %14
  %315 = load i64, i64* %314, align 8
  %316 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %16
  %317 = call i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl(%"class.__gnu_cxx::__normal_iterator.38"* %316, i64 %315) #3
  %318 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %319 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %318, i32 0, i32 0
  store i64* %317, i64** %319, align 8
  %320 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %321 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %320) #3
  store i64 %313, i64* %321, align 8
  %322 = load volatile i64*, i64** %11
  %323 = load i64, i64* %322, align 8
  %324 = load volatile i64*, i64** %14
  store i64 %323, i64* %324, align 8
  %325 = load volatile i64*, i64** %14
  %326 = load i64, i64* %325, align 8
  %327 = shl i64 %326, 1
  %328 = add i64 0, 1100161300470675134
  %329 = sub i64 %328, %326
  %330 = sub i64 %329, 1100161300470675134
  %331 = sub i64 0, %326
  %332 = sub i64 %330, 6291178371322418436
  %333 = add i64 %332, 1
  %334 = add i64 %333, 6291178371322418436
  %335 = add i64 %330, 1
  %336 = shl i64 %326, 1
  %337 = sub i64 %326, 5286414779238262449
  %338 = sub i64 %337, 1
  %339 = add i64 %338, 5286414779238262449
  %340 = sub nsw i64 %326, 1
  %341 = add i64 0, 4218507876778203913
  %342 = sub i64 %341, %339
  %343 = sub i64 %342, 4218507876778203913
  %344 = sub i64 0, %339
  %345 = add i64 %343, -2164343170860441178
  %346 = add i64 %345, 2
  %347 = sub i64 %346, -2164343170860441178
  %348 = add i64 %343, 2
  %349 = sub i64 0, %339
  %350 = add i64 0, %349
  %351 = sub i64 0, %339
  %352 = sub i64 0, 2
  %353 = sub i64 %350, %352
  %354 = add i64 %350, 2
  %355 = sdiv i64 %339, 2
  %356 = load volatile i64*, i64** %11
  store i64 %355, i64* %356, align 8
  store i32 1200308968, i32* %28
  br label %357

; <label>:357:                                    ; preds = %303, %290, %284, %266, %253, %208, %192, %189, %187, %159, %144, %141, %109, %93, %92, %41, %33, %32
  br label %30
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15__iter_comp_valENS0_15_Iter_less_iterE() #4 comdat {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.1161
  %4 = load i32, i32* @y.1162
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %2
  %11 = icmp slt i32 %4, 10
  store i1 %11, i1* %1
  %12 = alloca i32
  store i32 546516698, i32* %12
  br label %13

; <label>:13:                                     ; preds = %0, %58
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 546516698, label %16
    i32 -143961858, label %24
    i32 -1312047902, label %54
    i32 -1915382077, label %55
  ]

; <label>:15:                                     ; preds = %13
  br label %58

; <label>:16:                                     ; preds = %13
  %17 = load volatile i1, i1* %2
  %18 = load volatile i1, i1* %1
  %19 = and i1 %17, %18
  %20 = xor i1 %17, %18
  %21 = or i1 %19, %20
  %22 = or i1 %17, %18
  %23 = select i1 %21, i32 -143961858, i32 -1915382077
  store i32 %23, i32* %12
  br label %58

; <label>:24:                                     ; preds = %13
  %25 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_val", align 1
  %26 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %27 = load i32, i32* @x.1161
  %28 = load i32, i32* @y.1162
  %29 = add i32 %27, -683354660
  %30 = sub i32 %29, 1
  %31 = sub i32 %30, -683354660
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 false, true
  %40 = and i1 %37, false
  %41 = and i1 %35, %39
  %42 = and i1 %38, false
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 false, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  %53 = select i1 %51, i32 -1312047902, i32 -1915382077
  store i32 %53, i32* %12
  br label %58

; <label>:54:                                     ; preds = %13
  ret void

; <label>:55:                                     ; preds = %13
  %56 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_val", align 1
  %57 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  store i32 -143961858, i32* %12
  br label %58

; <label>:58:                                     ; preds = %55, %24, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK9__gnu_cxx5__ops14_Iter_less_valclINS_17__normal_iteratorIPxSt6vectorIxSaIxEEEExEEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_less_val"*, i64*, i64* dereferenceable(8)) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_val"*, align 8
  %6 = alloca i64*, align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %4, i32 0, i32 0
  store i64* %1, i64** %7, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_less_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_less_val"** %5, align 8
  store i64* %2, i64** %6, align 8
  %8 = load %"struct.__gnu_cxx::__ops::_Iter_less_val"*, %"struct.__gnu_cxx::__ops::_Iter_less_val"** %5, align 8
  %9 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %4) #3
  %10 = load i64, i64* %9, align 8
  %11 = load i64*, i64** %6, align 8
  %12 = load i64, i64* %11, align 8
  %13 = icmp slt i64 %10, %12
  ret i1 %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_S9_S9_T0_(i64*, i64*, i64*, i64*) #4 comdat {
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %17 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %18 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %19 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %20 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %21 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %22 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %23 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %24 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %25 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %26 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %27 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter"*
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %32 = alloca i1
  %33 = alloca i1
  %34 = load i32, i32* @x.1165
  %35 = load i32, i32* @y.1166
  %36 = add i32 %34, 267478595
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, 267478595
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  store i1 %42, i1* %33
  %43 = icmp slt i32 %35, 10
  store i1 %43, i1* %32
  %44 = alloca i32
  store i32 -1844169589, i32* %44
  br label %45

; <label>:45:                                     ; preds = %4, %622
  %46 = load i32, i32* %44
  switch i32 %46, label %47 [
    i32 -1844169589, label %48
    i32 -1527455386, label %68
    i32 1535977685, label %130
    i32 460677707, label %133
    i32 1489479246, label %151
    i32 -1971338454, label %179
    i32 988782826, label %209
    i32 1205049743, label %210
    i32 -2079281110, label %226
    i32 877649257, label %270
    i32 -2061221188, label %273
    i32 -1321280836, label %288
    i32 -642364413, label %330
    i32 -1430250793, label %331
    i32 -1390523665, label %346
    i32 -907563763, label %373
    i32 1016222746, label %400
    i32 -1507702952, label %401
    i32 -1434458510, label %402
    i32 1561800450, label %420
    i32 1564997079, label %435
    i32 -1955229160, label %453
    i32 972386188, label %469
    i32 1454402782, label %499
    i32 1278616694, label %500
    i32 -1381925313, label %515
    i32 1320990688, label %516
    i32 1603142636, label %517
    i32 -18096791, label %518
    i32 -519689416, label %559
    i32 -1408119832, label %574
    i32 -1138028179, label %591
    i32 1228195774, label %606
    i32 1552612055, label %607
  ]

; <label>:47:                                     ; preds = %45
  br label %622

; <label>:48:                                     ; preds = %45
  %49 = load volatile i1, i1* %33
  %50 = load volatile i1, i1* %32
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -1527455386, i32 -18096791
  store i32 %67, i32* %44
  br label %622

; <label>:68:                                     ; preds = %45
  %69 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %69, %"class.__gnu_cxx::__normal_iterator.38"** %31
  %70 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %70, %"class.__gnu_cxx::__normal_iterator.38"** %30
  %71 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %71, %"class.__gnu_cxx::__normal_iterator.38"** %29
  %72 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %72, %"class.__gnu_cxx::__normal_iterator.38"** %28
  %73 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  store %"struct.__gnu_cxx::__ops::_Iter_less_iter"* %73, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %27
  %74 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %75 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %76 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %76, %"class.__gnu_cxx::__normal_iterator.38"** %26
  %77 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %77, %"class.__gnu_cxx::__normal_iterator.38"** %25
  %78 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %78, %"class.__gnu_cxx::__normal_iterator.38"** %24
  %79 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %79, %"class.__gnu_cxx::__normal_iterator.38"** %23
  %80 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %80, %"class.__gnu_cxx::__normal_iterator.38"** %22
  %81 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %81, %"class.__gnu_cxx::__normal_iterator.38"** %21
  %82 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %82, %"class.__gnu_cxx::__normal_iterator.38"** %20
  %83 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %83, %"class.__gnu_cxx::__normal_iterator.38"** %19
  %84 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %84, %"class.__gnu_cxx::__normal_iterator.38"** %18
  %85 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %85, %"class.__gnu_cxx::__normal_iterator.38"** %17
  %86 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %86, %"class.__gnu_cxx::__normal_iterator.38"** %16
  %87 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %87, %"class.__gnu_cxx::__normal_iterator.38"** %15
  %88 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %88, %"class.__gnu_cxx::__normal_iterator.38"** %14
  %89 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %89, %"class.__gnu_cxx::__normal_iterator.38"** %13
  %90 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %90, %"class.__gnu_cxx::__normal_iterator.38"** %12
  %91 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %91, %"class.__gnu_cxx::__normal_iterator.38"** %11
  %92 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %92, %"class.__gnu_cxx::__normal_iterator.38"** %10
  %93 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %93, %"class.__gnu_cxx::__normal_iterator.38"** %9
  %94 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %94, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %95 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %95, %"class.__gnu_cxx::__normal_iterator.38"** %7
  %96 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %31
  %97 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %96, i32 0, i32 0
  store i64* %0, i64** %97, align 8
  %98 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %30
  %99 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %98, i32 0, i32 0
  store i64* %1, i64** %99, align 8
  %100 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %29
  %101 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %100, i32 0, i32 0
  store i64* %2, i64** %101, align 8
  %102 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %28
  %103 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %102, i32 0, i32 0
  store i64* %3, i64** %103, align 8
  %104 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %74 to i8*
  %105 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %30
  %106 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %104, i8* %106, i64 8, i32 8, i1 false)
  %107 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %75 to i8*
  %108 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %29
  %109 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %108 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %107, i8* %109, i64 8, i32 8, i1 false)
  %110 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %74, i32 0, i32 0
  %111 = load i64*, i64** %110, align 8
  %112 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %75, i32 0, i32 0
  %113 = load i64*, i64** %112, align 8
  %114 = load volatile %"struct.__gnu_cxx::__ops::_Iter_less_iter"*, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %27
  %115 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclINS_17__normal_iteratorIPxSt6vectorIxSaIxEEEES8_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %114, i64* %111, i64* %113)
  store i1 %115, i1* %6
  %116 = load i32, i32* @x.1165
  %117 = load i32, i32* @y.1166
  %118 = sub i32 0, 1
  %119 = add i32 %116, %118
  %120 = sub i32 %116, 1
  %121 = mul i32 %116, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %117, 10
  %125 = and i1 %123, %124
  %126 = xor i1 %123, %124
  %127 = or i1 %125, %126
  %128 = or i1 %123, %124
  %129 = select i1 %127, i32 1535977685, i32 -18096791
  store i32 %129, i32* %44
  br label %622

; <label>:130:                                    ; preds = %45
  %131 = load volatile i1, i1* %6
  %132 = select i1 %131, i32 460677707, i32 -1434458510
  store i32 %132, i32* %44
  br label %622

; <label>:133:                                    ; preds = %45
  %134 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %26
  %135 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %134 to i8*
  %136 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %29
  %137 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %136 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %135, i8* %137, i64 8, i32 8, i1 false)
  %138 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %25
  %139 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %138 to i8*
  %140 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %28
  %141 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %140 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %139, i8* %141, i64 8, i32 8, i1 false)
  %142 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %26
  %143 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %142, i32 0, i32 0
  %144 = load i64*, i64** %143, align 8
  %145 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %25
  %146 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %145, i32 0, i32 0
  %147 = load i64*, i64** %146, align 8
  %148 = load volatile %"struct.__gnu_cxx::__ops::_Iter_less_iter"*, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %27
  %149 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclINS_17__normal_iteratorIPxSt6vectorIxSaIxEEEES8_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %148, i64* %144, i64* %147)
  %150 = select i1 %149, i32 1489479246, i32 1205049743
  store i32 %150, i32* %44
  br label %622

; <label>:151:                                    ; preds = %45
  %152 = load i32, i32* @x.1165
  %153 = load i32, i32* @y.1166
  %154 = sub i32 %152, -413590405
  %155 = sub i32 %154, 1
  %156 = add i32 %155, -413590405
  %157 = sub i32 %152, 1
  %158 = mul i32 %152, %156
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %153, 10
  %162 = xor i1 %160, true
  %163 = xor i1 %161, true
  %164 = xor i1 false, true
  %165 = and i1 %162, false
  %166 = and i1 %160, %164
  %167 = and i1 %163, false
  %168 = and i1 %161, %164
  %169 = or i1 %165, %166
  %170 = or i1 %167, %168
  %171 = xor i1 %169, %170
  %172 = or i1 %162, %163
  %173 = xor i1 %172, true
  %174 = or i1 false, %164
  %175 = and i1 %173, %174
  %176 = or i1 %171, %175
  %177 = or i1 %160, %161
  %178 = select i1 %176, i32 -1971338454, i32 -519689416
  store i32 %178, i32* %44
  br label %622

; <label>:179:                                    ; preds = %45
  %180 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %24
  %181 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %180 to i8*
  %182 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %31
  %183 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %182 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %181, i8* %183, i64 8, i32 8, i1 false)
  %184 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %23
  %185 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %184 to i8*
  %186 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %29
  %187 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %186 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %185, i8* %187, i64 8, i32 8, i1 false)
  %188 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %24
  %189 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %188, i32 0, i32 0
  %190 = load i64*, i64** %189, align 8
  %191 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %23
  %192 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %191, i32 0, i32 0
  %193 = load i64*, i64** %192, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES6_EvT_T0_(i64* %190, i64* %193)
  %194 = load i32, i32* @x.1165
  %195 = load i32, i32* @y.1166
  %196 = sub i32 %194, -914213829
  %197 = sub i32 %196, 1
  %198 = add i32 %197, -914213829
  %199 = sub i32 %194, 1
  %200 = mul i32 %194, %198
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %195, 10
  %204 = and i1 %202, %203
  %205 = xor i1 %202, %203
  %206 = or i1 %204, %205
  %207 = or i1 %202, %203
  %208 = select i1 %206, i32 988782826, i32 -519689416
  store i32 %208, i32* %44
  br label %622

; <label>:209:                                    ; preds = %45
  store i32 -1507702952, i32* %44
  br label %622

; <label>:210:                                    ; preds = %45
  %211 = load i32, i32* @x.1165
  %212 = load i32, i32* @y.1166
  %213 = sub i32 %211, -845865403
  %214 = sub i32 %213, 1
  %215 = add i32 %214, -845865403
  %216 = sub i32 %211, 1
  %217 = mul i32 %211, %215
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %212, 10
  %221 = and i1 %219, %220
  %222 = xor i1 %219, %220
  %223 = or i1 %221, %222
  %224 = or i1 %219, %220
  %225 = select i1 %223, i32 -2079281110, i32 -1408119832
  store i32 %225, i32* %44
  br label %622

; <label>:226:                                    ; preds = %45
  %227 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %22
  %228 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %227 to i8*
  %229 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %30
  %230 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %229 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %228, i8* %230, i64 8, i32 8, i1 false)
  %231 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %21
  %232 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %231 to i8*
  %233 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %28
  %234 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %233 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %232, i8* %234, i64 8, i32 8, i1 false)
  %235 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %22
  %236 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %235, i32 0, i32 0
  %237 = load i64*, i64** %236, align 8
  %238 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %21
  %239 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %238, i32 0, i32 0
  %240 = load i64*, i64** %239, align 8
  %241 = load volatile %"struct.__gnu_cxx::__ops::_Iter_less_iter"*, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %27
  %242 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclINS_17__normal_iteratorIPxSt6vectorIxSaIxEEEES8_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %241, i64* %237, i64* %240)
  store i1 %242, i1* %5
  %243 = load i32, i32* @x.1165
  %244 = load i32, i32* @y.1166
  %245 = add i32 %243, 181120551
  %246 = sub i32 %245, 1
  %247 = sub i32 %246, 181120551
  %248 = sub i32 %243, 1
  %249 = mul i32 %243, %247
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %244, 10
  %253 = xor i1 %251, true
  %254 = xor i1 %252, true
  %255 = xor i1 true, true
  %256 = and i1 %253, true
  %257 = and i1 %251, %255
  %258 = and i1 %254, true
  %259 = and i1 %252, %255
  %260 = or i1 %256, %257
  %261 = or i1 %258, %259
  %262 = xor i1 %260, %261
  %263 = or i1 %253, %254
  %264 = xor i1 %263, true
  %265 = or i1 true, %255
  %266 = and i1 %264, %265
  %267 = or i1 %262, %266
  %268 = or i1 %251, %252
  %269 = select i1 %267, i32 877649257, i32 -1408119832
  store i32 %269, i32* %44
  br label %622

; <label>:270:                                    ; preds = %45
  %271 = load volatile i1, i1* %5
  %272 = select i1 %271, i32 -2061221188, i32 -1430250793
  store i32 %272, i32* %44
  br label %622

; <label>:273:                                    ; preds = %45
  %274 = load i32, i32* @x.1165
  %275 = load i32, i32* @y.1166
  %276 = sub i32 0, 1
  %277 = add i32 %274, %276
  %278 = sub i32 %274, 1
  %279 = mul i32 %274, %277
  %280 = urem i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %275, 10
  %283 = and i1 %281, %282
  %284 = xor i1 %281, %282
  %285 = or i1 %283, %284
  %286 = or i1 %281, %282
  %287 = select i1 %285, i32 -1321280836, i32 -1138028179
  store i32 %287, i32* %44
  br label %622

; <label>:288:                                    ; preds = %45
  %289 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %20
  %290 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %289 to i8*
  %291 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %31
  %292 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %291 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %290, i8* %292, i64 8, i32 8, i1 false)
  %293 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %19
  %294 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %293 to i8*
  %295 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %28
  %296 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %295 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %294, i8* %296, i64 8, i32 8, i1 false)
  %297 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %20
  %298 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %297, i32 0, i32 0
  %299 = load i64*, i64** %298, align 8
  %300 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %19
  %301 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %300, i32 0, i32 0
  %302 = load i64*, i64** %301, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES6_EvT_T0_(i64* %299, i64* %302)
  %303 = load i32, i32* @x.1165
  %304 = load i32, i32* @y.1166
  %305 = sub i32 %303, 115759243
  %306 = sub i32 %305, 1
  %307 = add i32 %306, 115759243
  %308 = sub i32 %303, 1
  %309 = mul i32 %303, %307
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %304, 10
  %313 = xor i1 %311, true
  %314 = xor i1 %312, true
  %315 = xor i1 true, true
  %316 = and i1 %313, true
  %317 = and i1 %311, %315
  %318 = and i1 %314, true
  %319 = and i1 %312, %315
  %320 = or i1 %316, %317
  %321 = or i1 %318, %319
  %322 = xor i1 %320, %321
  %323 = or i1 %313, %314
  %324 = xor i1 %323, true
  %325 = or i1 true, %315
  %326 = and i1 %324, %325
  %327 = or i1 %322, %326
  %328 = or i1 %311, %312
  %329 = select i1 %327, i32 -642364413, i32 -1138028179
  store i32 %329, i32* %44
  br label %622

; <label>:330:                                    ; preds = %45
  store i32 -1390523665, i32* %44
  br label %622

; <label>:331:                                    ; preds = %45
  %332 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %18
  %333 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %332 to i8*
  %334 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %31
  %335 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %334 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %333, i8* %335, i64 8, i32 8, i1 false)
  %336 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %17
  %337 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %336 to i8*
  %338 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %30
  %339 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %338 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %337, i8* %339, i64 8, i32 8, i1 false)
  %340 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %18
  %341 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %340, i32 0, i32 0
  %342 = load i64*, i64** %341, align 8
  %343 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %17
  %344 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %343, i32 0, i32 0
  %345 = load i64*, i64** %344, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES6_EvT_T0_(i64* %342, i64* %345)
  store i32 -1390523665, i32* %44
  br label %622

; <label>:346:                                    ; preds = %45
  %347 = load i32, i32* @x.1165
  %348 = load i32, i32* @y.1166
  %349 = sub i32 0, 1
  %350 = add i32 %347, %349
  %351 = sub i32 %347, 1
  %352 = mul i32 %347, %350
  %353 = urem i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %348, 10
  %356 = xor i1 %354, true
  %357 = xor i1 %355, true
  %358 = xor i1 false, true
  %359 = and i1 %356, false
  %360 = and i1 %354, %358
  %361 = and i1 %357, false
  %362 = and i1 %355, %358
  %363 = or i1 %359, %360
  %364 = or i1 %361, %362
  %365 = xor i1 %363, %364
  %366 = or i1 %356, %357
  %367 = xor i1 %366, true
  %368 = or i1 false, %358
  %369 = and i1 %367, %368
  %370 = or i1 %365, %369
  %371 = or i1 %354, %355
  %372 = select i1 %370, i32 -907563763, i32 1228195774
  store i32 %372, i32* %44
  br label %622

; <label>:373:                                    ; preds = %45
  %374 = load i32, i32* @x.1165
  %375 = load i32, i32* @y.1166
  %376 = sub i32 0, 1
  %377 = add i32 %374, %376
  %378 = sub i32 %374, 1
  %379 = mul i32 %374, %377
  %380 = urem i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %375, 10
  %383 = xor i1 %381, true
  %384 = xor i1 %382, true
  %385 = xor i1 true, true
  %386 = and i1 %383, true
  %387 = and i1 %381, %385
  %388 = and i1 %384, true
  %389 = and i1 %382, %385
  %390 = or i1 %386, %387
  %391 = or i1 %388, %389
  %392 = xor i1 %390, %391
  %393 = or i1 %383, %384
  %394 = xor i1 %393, true
  %395 = or i1 true, %385
  %396 = and i1 %394, %395
  %397 = or i1 %392, %396
  %398 = or i1 %381, %382
  %399 = select i1 %397, i32 1016222746, i32 1228195774
  store i32 %399, i32* %44
  br label %622

; <label>:400:                                    ; preds = %45
  store i32 -1507702952, i32* %44
  br label %622

; <label>:401:                                    ; preds = %45
  store i32 1603142636, i32* %44
  br label %622

; <label>:402:                                    ; preds = %45
  %403 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %16
  %404 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %403 to i8*
  %405 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %30
  %406 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %405 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %404, i8* %406, i64 8, i32 8, i1 false)
  %407 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %15
  %408 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %407 to i8*
  %409 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %28
  %410 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %409 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %408, i8* %410, i64 8, i32 8, i1 false)
  %411 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %16
  %412 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %411, i32 0, i32 0
  %413 = load i64*, i64** %412, align 8
  %414 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %15
  %415 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %414, i32 0, i32 0
  %416 = load i64*, i64** %415, align 8
  %417 = load volatile %"struct.__gnu_cxx::__ops::_Iter_less_iter"*, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %27
  %418 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclINS_17__normal_iteratorIPxSt6vectorIxSaIxEEEES8_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %417, i64* %413, i64* %416)
  %419 = select i1 %418, i32 1561800450, i32 1564997079
  store i32 %419, i32* %44
  br label %622

; <label>:420:                                    ; preds = %45
  %421 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %14
  %422 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %421 to i8*
  %423 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %31
  %424 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %423 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %422, i8* %424, i64 8, i32 8, i1 false)
  %425 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %13
  %426 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %425 to i8*
  %427 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %30
  %428 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %427 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %426, i8* %428, i64 8, i32 8, i1 false)
  %429 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %14
  %430 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %429, i32 0, i32 0
  %431 = load i64*, i64** %430, align 8
  %432 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %13
  %433 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %432, i32 0, i32 0
  %434 = load i64*, i64** %433, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES6_EvT_T0_(i64* %431, i64* %434)
  store i32 1320990688, i32* %44
  br label %622

; <label>:435:                                    ; preds = %45
  %436 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %12
  %437 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %436 to i8*
  %438 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %29
  %439 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %438 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %437, i8* %439, i64 8, i32 8, i1 false)
  %440 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %11
  %441 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %440 to i8*
  %442 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %28
  %443 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %442 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %441, i8* %443, i64 8, i32 8, i1 false)
  %444 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %12
  %445 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %444, i32 0, i32 0
  %446 = load i64*, i64** %445, align 8
  %447 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %11
  %448 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %447, i32 0, i32 0
  %449 = load i64*, i64** %448, align 8
  %450 = load volatile %"struct.__gnu_cxx::__ops::_Iter_less_iter"*, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %27
  %451 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclINS_17__normal_iteratorIPxSt6vectorIxSaIxEEEES8_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %450, i64* %446, i64* %449)
  %452 = select i1 %451, i32 -1955229160, i32 1278616694
  store i32 %452, i32* %44
  br label %622

; <label>:453:                                    ; preds = %45
  %454 = load i32, i32* @x.1165
  %455 = load i32, i32* @y.1166
  %456 = sub i32 %454, -514578487
  %457 = sub i32 %456, 1
  %458 = add i32 %457, -514578487
  %459 = sub i32 %454, 1
  %460 = mul i32 %454, %458
  %461 = urem i32 %460, 2
  %462 = icmp eq i32 %461, 0
  %463 = icmp slt i32 %455, 10
  %464 = and i1 %462, %463
  %465 = xor i1 %462, %463
  %466 = or i1 %464, %465
  %467 = or i1 %462, %463
  %468 = select i1 %466, i32 972386188, i32 1552612055
  store i32 %468, i32* %44
  br label %622

; <label>:469:                                    ; preds = %45
  %470 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %10
  %471 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %470 to i8*
  %472 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %31
  %473 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %472 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %471, i8* %473, i64 8, i32 8, i1 false)
  %474 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %9
  %475 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %474 to i8*
  %476 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %28
  %477 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %476 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %475, i8* %477, i64 8, i32 8, i1 false)
  %478 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %10
  %479 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %478, i32 0, i32 0
  %480 = load i64*, i64** %479, align 8
  %481 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %9
  %482 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %481, i32 0, i32 0
  %483 = load i64*, i64** %482, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES6_EvT_T0_(i64* %480, i64* %483)
  %484 = load i32, i32* @x.1165
  %485 = load i32, i32* @y.1166
  %486 = add i32 %484, -834898723
  %487 = sub i32 %486, 1
  %488 = sub i32 %487, -834898723
  %489 = sub i32 %484, 1
  %490 = mul i32 %484, %488
  %491 = urem i32 %490, 2
  %492 = icmp eq i32 %491, 0
  %493 = icmp slt i32 %485, 10
  %494 = and i1 %492, %493
  %495 = xor i1 %492, %493
  %496 = or i1 %494, %495
  %497 = or i1 %492, %493
  %498 = select i1 %496, i32 1454402782, i32 1552612055
  store i32 %498, i32* %44
  br label %622

; <label>:499:                                    ; preds = %45
  store i32 -1381925313, i32* %44
  br label %622

; <label>:500:                                    ; preds = %45
  %501 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %502 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %501 to i8*
  %503 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %31
  %504 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %503 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %502, i8* %504, i64 8, i32 8, i1 false)
  %505 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %7
  %506 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %505 to i8*
  %507 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %29
  %508 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %507 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %506, i8* %508, i64 8, i32 8, i1 false)
  %509 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %510 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %509, i32 0, i32 0
  %511 = load i64*, i64** %510, align 8
  %512 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %7
  %513 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %512, i32 0, i32 0
  %514 = load i64*, i64** %513, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES6_EvT_T0_(i64* %511, i64* %514)
  store i32 -1381925313, i32* %44
  br label %622

; <label>:515:                                    ; preds = %45
  store i32 1320990688, i32* %44
  br label %622

; <label>:516:                                    ; preds = %45
  store i32 1603142636, i32* %44
  br label %622

; <label>:517:                                    ; preds = %45
  ret void

; <label>:518:                                    ; preds = %45
  %519 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %520 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %521 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %522 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %523 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %524 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %525 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %526 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %527 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %528 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %529 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %530 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %531 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %532 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %533 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %534 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %535 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %536 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %537 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %538 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %539 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %540 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %541 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %542 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %543 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %544 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %545 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %546 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %519, i32 0, i32 0
  store i64* %0, i64** %546, align 8
  %547 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %520, i32 0, i32 0
  store i64* %1, i64** %547, align 8
  %548 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %521, i32 0, i32 0
  store i64* %2, i64** %548, align 8
  %549 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %522, i32 0, i32 0
  store i64* %3, i64** %549, align 8
  %550 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %524 to i8*
  %551 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %520 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %550, i8* %551, i64 8, i32 8, i1 false)
  %552 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %525 to i8*
  %553 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %521 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %552, i8* %553, i64 8, i32 8, i1 false)
  %554 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %524, i32 0, i32 0
  %555 = load i64*, i64** %554, align 8
  %556 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %525, i32 0, i32 0
  %557 = load i64*, i64** %556, align 8
  %558 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclINS_17__normal_iteratorIPxSt6vectorIxSaIxEEEES8_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %523, i64* %555, i64* %557)
  store i32 -1527455386, i32* %44
  br label %622

; <label>:559:                                    ; preds = %45
  %560 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %24
  %561 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %560 to i8*
  %562 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %31
  %563 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %562 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %561, i8* %563, i64 8, i32 8, i1 false)
  %564 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %23
  %565 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %564 to i8*
  %566 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %29
  %567 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %566 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %565, i8* %567, i64 8, i32 8, i1 false)
  %568 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %24
  %569 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %568, i32 0, i32 0
  %570 = load i64*, i64** %569, align 8
  %571 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %23
  %572 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %571, i32 0, i32 0
  %573 = load i64*, i64** %572, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES6_EvT_T0_(i64* %570, i64* %573)
  store i32 -1971338454, i32* %44
  br label %622

; <label>:574:                                    ; preds = %45
  %575 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %22
  %576 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %575 to i8*
  %577 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %30
  %578 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %577 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %576, i8* %578, i64 8, i32 8, i1 false)
  %579 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %21
  %580 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %579 to i8*
  %581 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %28
  %582 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %581 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %580, i8* %582, i64 8, i32 8, i1 false)
  %583 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %22
  %584 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %583, i32 0, i32 0
  %585 = load i64*, i64** %584, align 8
  %586 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %21
  %587 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %586, i32 0, i32 0
  %588 = load i64*, i64** %587, align 8
  %589 = load volatile %"struct.__gnu_cxx::__ops::_Iter_less_iter"*, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %27
  %590 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclINS_17__normal_iteratorIPxSt6vectorIxSaIxEEEES8_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %589, i64* %585, i64* %588)
  store i32 -2079281110, i32* %44
  br label %622

; <label>:591:                                    ; preds = %45
  %592 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %20
  %593 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %592 to i8*
  %594 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %31
  %595 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %594 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %593, i8* %595, i64 8, i32 8, i1 false)
  %596 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %19
  %597 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %596 to i8*
  %598 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %28
  %599 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %598 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %597, i8* %599, i64 8, i32 8, i1 false)
  %600 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %20
  %601 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %600, i32 0, i32 0
  %602 = load i64*, i64** %601, align 8
  %603 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %19
  %604 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %603, i32 0, i32 0
  %605 = load i64*, i64** %604, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES6_EvT_T0_(i64* %602, i64* %605)
  store i32 -1321280836, i32* %44
  br label %622

; <label>:606:                                    ; preds = %45
  store i32 -907563763, i32* %44
  br label %622

; <label>:607:                                    ; preds = %45
  %608 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %10
  %609 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %608 to i8*
  %610 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %31
  %611 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %610 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %609, i8* %611, i64 8, i32 8, i1 false)
  %612 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %9
  %613 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %612 to i8*
  %614 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %28
  %615 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %614 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %613, i8* %615, i64 8, i32 8, i1 false)
  %616 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %10
  %617 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %616, i32 0, i32 0
  %618 = load i64*, i64** %617, align 8
  %619 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %9
  %620 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %619, i32 0, i32 0
  %621 = load i64*, i64** %620, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES6_EvT_T0_(i64* %618, i64* %621)
  store i32 972386188, i32* %44
  br label %622

; <label>:622:                                    ; preds = %607, %606, %591, %574, %559, %518, %516, %515, %500, %499, %469, %453, %435, %420, %402, %401, %400, %373, %346, %331, %330, %288, %273, %270, %226, %210, %209, %179, %151, %133, %130, %68, %48, %47
  br label %45
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEmiEl(%"class.__gnu_cxx::__normal_iterator.38"*, i64) #4 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.1167
  %7 = load i32, i32* @y.1168
  %8 = sub i32 %6, 534045582
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 534045582
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1112767493, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %105
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1112767493, label %20
    i32 -1347040758, label %40
    i32 -1212293204, label %69
    i32 1606648342, label %71
  ]

; <label>:19:                                     ; preds = %17
  br label %105

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1347040758, i32 1606648342
  store i32 %39, i32* %16
  br label %105

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.38"*, align 8
  %43 = alloca i64, align 8
  %44 = alloca i64*, align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %0, %"class.__gnu_cxx::__normal_iterator.38"** %42, align 8
  store i64 %1, i64* %43, align 8
  %45 = load %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %42, align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %45, i32 0, i32 0
  %47 = load i64*, i64** %46, align 8
  %48 = load i64, i64* %43, align 8
  %49 = sub i64 0, %48
  %50 = add i64 0, %49
  %51 = sub i64 0, %48
  %52 = getelementptr inbounds i64, i64* %47, i64 %50
  store i64* %52, i64** %44, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.38"* %41, i64** dereferenceable(8) %44) #3
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %41, i32 0, i32 0
  %54 = load i64*, i64** %53, align 8
  store i64* %54, i64** %3
  %55 = load i32, i32* @x.1167
  %56 = load i32, i32* @y.1168
  %57 = sub i32 0, 1
  %58 = add i32 %55, %57
  %59 = sub i32 %55, 1
  %60 = mul i32 %55, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %56, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  %68 = select i1 %66, i32 -1212293204, i32 1606648342
  store i32 %68, i32* %16
  br label %105

; <label>:69:                                     ; preds = %17
  %70 = load volatile i64*, i64** %3
  ret i64* %70

; <label>:71:                                     ; preds = %17
  %72 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %73 = alloca %"class.__gnu_cxx::__normal_iterator.38"*, align 8
  %74 = alloca i64, align 8
  %75 = alloca i64*, align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %0, %"class.__gnu_cxx::__normal_iterator.38"** %73, align 8
  store i64 %1, i64* %74, align 8
  %76 = load %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %73, align 8
  %77 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %76, i32 0, i32 0
  %78 = load i64*, i64** %77, align 8
  %79 = load i64, i64* %74, align 8
  %80 = sub i64 0, 0
  %81 = add i64 0, %80
  %82 = sub i64 0, 0
  %83 = sub i64 0, %81
  %84 = sub i64 0, %79
  %85 = add i64 %83, %84
  %86 = sub i64 0, %85
  %87 = add i64 %81, %79
  %88 = sub i64 0, 6399812667522959869
  %89 = sub i64 %88, %79
  %90 = add i64 %89, 6399812667522959869
  %91 = sub i64 0, %79
  %92 = mul i64 %90, %79
  %93 = sub i64 0, -7100578863422731192
  %94 = sub i64 %93, %79
  %95 = add i64 %94, -7100578863422731192
  %96 = sub i64 0, %79
  %97 = mul i64 %95, %79
  %98 = sub i64 0, 2141123951516741060
  %99 = sub i64 %98, %79
  %100 = add i64 %99, 2141123951516741060
  %101 = sub i64 0, %79
  %102 = getelementptr inbounds i64, i64* %78, i64 %100
  store i64* %102, i64** %75, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.38"* %72, i64** dereferenceable(8) %75) #3
  %103 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %72, i32 0, i32 0
  %104 = load i64*, i64** %103, align 8
  store i32 -1347040758, i32* %16
  br label %105

; <label>:105:                                    ; preds = %71, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt21__unguarded_partitionIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEET_S9_S9_S9_T0_(i64*, i64*, i64*) #4 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %10 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter"*
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %15 = alloca i1
  %16 = alloca i1
  %17 = load i32, i32* @x.1169
  %18 = load i32, i32* @y.1170
  %19 = sub i32 0, 1
  %20 = add i32 %17, %19
  %21 = sub i32 %17, 1
  %22 = mul i32 %17, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  store i1 %24, i1* %16
  %25 = icmp slt i32 %18, 10
  store i1 %25, i1* %15
  %26 = alloca i32
  store i32 1528813426, i32* %26
  br label %27

; <label>:27:                                     ; preds = %3, %245
  %28 = load i32, i32* %26
  switch i32 %28, label %29 [
    i32 1528813426, label %30
    i32 2048031570, label %38
    i32 583576238, label %71
    i32 -1318524746, label %72
    i32 1725198545, label %73
    i32 660736083, label %91
    i32 -24855969, label %107
    i32 -1337183283, label %125
    i32 -1899438621, label %126
    i32 -257289431, label %129
    i32 -1083349219, label %147
    i32 1503909955, label %163
    i32 1234027607, label %193
    i32 -2001907449, label %194
    i32 487785134, label %199
    i32 372064660, label %207
    i32 553046057, label %224
    i32 923376306, label %239
    i32 -1340856442, label %242
  ]

; <label>:29:                                     ; preds = %27
  br label %245

; <label>:30:                                     ; preds = %27
  %31 = load volatile i1, i1* %16
  %32 = load volatile i1, i1* %15
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  %37 = select i1 %35, i32 2048031570, i32 553046057
  store i32 %37, i32* %26
  br label %245

; <label>:38:                                     ; preds = %27
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %39, %"class.__gnu_cxx::__normal_iterator.38"** %14
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %40, %"class.__gnu_cxx::__normal_iterator.38"** %13
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %41, %"class.__gnu_cxx::__normal_iterator.38"** %12
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %42, %"class.__gnu_cxx::__normal_iterator.38"** %11
  %43 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  store %"struct.__gnu_cxx::__ops::_Iter_less_iter"* %43, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %10
  %44 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %44, %"class.__gnu_cxx::__normal_iterator.38"** %9
  %45 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %45, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %46, %"class.__gnu_cxx::__normal_iterator.38"** %7
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %47, %"class.__gnu_cxx::__normal_iterator.38"** %6
  %48 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %48, %"class.__gnu_cxx::__normal_iterator.38"** %5
  %49 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %49, %"class.__gnu_cxx::__normal_iterator.38"** %4
  %50 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %13
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %50, i32 0, i32 0
  store i64* %0, i64** %51, align 8
  %52 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %12
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %52, i32 0, i32 0
  store i64* %1, i64** %53, align 8
  %54 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %11
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %54, i32 0, i32 0
  store i64* %2, i64** %55, align 8
  %56 = load i32, i32* @x.1169
  %57 = load i32, i32* @y.1170
  %58 = sub i32 %56, -1635575941
  %59 = sub i32 %58, 1
  %60 = add i32 %59, -1635575941
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 583576238, i32 553046057
  store i32 %70, i32* %26
  br label %245

; <label>:71:                                     ; preds = %27
  store i32 -1318524746, i32* %26
  br label %245

; <label>:72:                                     ; preds = %27
  store i32 1725198545, i32* %26
  br label %245

; <label>:73:                                     ; preds = %27
  %74 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %9
  %75 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %74 to i8*
  %76 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %13
  %77 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %75, i8* %77, i64 8, i32 8, i1 false)
  %78 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %79 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %78 to i8*
  %80 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %11
  %81 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %79, i8* %81, i64 8, i32 8, i1 false)
  %82 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %9
  %83 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %82, i32 0, i32 0
  %84 = load i64*, i64** %83, align 8
  %85 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %86 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %85, i32 0, i32 0
  %87 = load i64*, i64** %86, align 8
  %88 = load volatile %"struct.__gnu_cxx::__ops::_Iter_less_iter"*, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %10
  %89 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclINS_17__normal_iteratorIPxSt6vectorIxSaIxEEEES8_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %88, i64* %84, i64* %87)
  %90 = select i1 %89, i32 660736083, i32 -1899438621
  store i32 %90, i32* %26
  br label %245

; <label>:91:                                     ; preds = %27
  %92 = load i32, i32* @x.1169
  %93 = load i32, i32* @y.1170
  %94 = add i32 %92, -437751268
  %95 = sub i32 %94, 1
  %96 = sub i32 %95, -437751268
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  %106 = select i1 %104, i32 -24855969, i32 923376306
  store i32 %106, i32* %26
  br label %245

; <label>:107:                                    ; preds = %27
  %108 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %13
  %109 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.38"* @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEppEv(%"class.__gnu_cxx::__normal_iterator.38"* %108) #3
  %110 = load i32, i32* @x.1169
  %111 = load i32, i32* @y.1170
  %112 = add i32 %110, -1862473963
  %113 = sub i32 %112, 1
  %114 = sub i32 %113, -1862473963
  %115 = sub i32 %110, 1
  %116 = mul i32 %110, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %111, 10
  %120 = and i1 %118, %119
  %121 = xor i1 %118, %119
  %122 = or i1 %120, %121
  %123 = or i1 %118, %119
  %124 = select i1 %122, i32 -1337183283, i32 923376306
  store i32 %124, i32* %26
  br label %245

; <label>:125:                                    ; preds = %27
  store i32 1725198545, i32* %26
  br label %245

; <label>:126:                                    ; preds = %27
  %127 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %12
  %128 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.38"* @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEmmEv(%"class.__gnu_cxx::__normal_iterator.38"* %127) #3
  store i32 -257289431, i32* %26
  br label %245

; <label>:129:                                    ; preds = %27
  %130 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %7
  %131 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %130 to i8*
  %132 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %11
  %133 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %132 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %131, i8* %133, i64 8, i32 8, i1 false)
  %134 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %6
  %135 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %134 to i8*
  %136 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %12
  %137 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %136 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %135, i8* %137, i64 8, i32 8, i1 false)
  %138 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %7
  %139 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %138, i32 0, i32 0
  %140 = load i64*, i64** %139, align 8
  %141 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %6
  %142 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %141, i32 0, i32 0
  %143 = load i64*, i64** %142, align 8
  %144 = load volatile %"struct.__gnu_cxx::__ops::_Iter_less_iter"*, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %10
  %145 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclINS_17__normal_iteratorIPxSt6vectorIxSaIxEEEES8_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %144, i64* %140, i64* %143)
  %146 = select i1 %145, i32 -1083349219, i32 -2001907449
  store i32 %146, i32* %26
  br label %245

; <label>:147:                                    ; preds = %27
  %148 = load i32, i32* @x.1169
  %149 = load i32, i32* @y.1170
  %150 = add i32 %148, -321173624
  %151 = sub i32 %150, 1
  %152 = sub i32 %151, -321173624
  %153 = sub i32 %148, 1
  %154 = mul i32 %148, %152
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %149, 10
  %158 = and i1 %156, %157
  %159 = xor i1 %156, %157
  %160 = or i1 %158, %159
  %161 = or i1 %156, %157
  %162 = select i1 %160, i32 1503909955, i32 -1340856442
  store i32 %162, i32* %26
  br label %245

; <label>:163:                                    ; preds = %27
  %164 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %12
  %165 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.38"* @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEmmEv(%"class.__gnu_cxx::__normal_iterator.38"* %164) #3
  %166 = load i32, i32* @x.1169
  %167 = load i32, i32* @y.1170
  %168 = add i32 %166, 485813776
  %169 = sub i32 %168, 1
  %170 = sub i32 %169, 485813776
  %171 = sub i32 %166, 1
  %172 = mul i32 %166, %170
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %167, 10
  %176 = xor i1 %174, true
  %177 = xor i1 %175, true
  %178 = xor i1 true, true
  %179 = and i1 %176, true
  %180 = and i1 %174, %178
  %181 = and i1 %177, true
  %182 = and i1 %175, %178
  %183 = or i1 %179, %180
  %184 = or i1 %181, %182
  %185 = xor i1 %183, %184
  %186 = or i1 %176, %177
  %187 = xor i1 %186, true
  %188 = or i1 true, %178
  %189 = and i1 %187, %188
  %190 = or i1 %185, %189
  %191 = or i1 %174, %175
  %192 = select i1 %190, i32 1234027607, i32 -1340856442
  store i32 %192, i32* %26
  br label %245

; <label>:193:                                    ; preds = %27
  store i32 -257289431, i32* %26
  br label %245

; <label>:194:                                    ; preds = %27
  %195 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %13
  %196 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %12
  %197 = call zeroext i1 @_ZN9__gnu_cxxltIPxSt6vectorIxSaIxEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %195, %"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %196) #3
  %198 = select i1 %197, i32 372064660, i32 487785134
  store i32 %198, i32* %26
  br label %245

; <label>:199:                                    ; preds = %27
  %200 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %14
  %201 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %200 to i8*
  %202 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %13
  %203 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %202 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %201, i8* %203, i64 8, i32 8, i1 false)
  %204 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %14
  %205 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %204, i32 0, i32 0
  %206 = load i64*, i64** %205, align 8
  ret i64* %206

; <label>:207:                                    ; preds = %27
  %208 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %5
  %209 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %208 to i8*
  %210 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %13
  %211 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %210 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %209, i8* %211, i64 8, i32 8, i1 false)
  %212 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %4
  %213 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %212 to i8*
  %214 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %12
  %215 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %214 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %213, i8* %215, i64 8, i32 8, i1 false)
  %216 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %5
  %217 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %216, i32 0, i32 0
  %218 = load i64*, i64** %217, align 8
  %219 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %4
  %220 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %219, i32 0, i32 0
  %221 = load i64*, i64** %220, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES6_EvT_T0_(i64* %218, i64* %221)
  %222 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %13
  %223 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.38"* @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEppEv(%"class.__gnu_cxx::__normal_iterator.38"* %222) #3
  store i32 -1318524746, i32* %26
  br label %245

; <label>:224:                                    ; preds = %27
  %225 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %226 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %227 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %228 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %229 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %230 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %231 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %232 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %233 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %234 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %235 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %236 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %226, i32 0, i32 0
  store i64* %0, i64** %236, align 8
  %237 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %227, i32 0, i32 0
  store i64* %1, i64** %237, align 8
  %238 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %228, i32 0, i32 0
  store i64* %2, i64** %238, align 8
  store i32 2048031570, i32* %26
  br label %245

; <label>:239:                                    ; preds = %27
  %240 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %13
  %241 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.38"* @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEppEv(%"class.__gnu_cxx::__normal_iterator.38"* %240) #3
  store i32 -24855969, i32* %26
  br label %245

; <label>:242:                                    ; preds = %27
  %243 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %12
  %244 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.38"* @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEmmEv(%"class.__gnu_cxx::__normal_iterator.38"* %243) #3
  store i32 1503909955, i32* %26
  br label %245

; <label>:245:                                    ; preds = %242, %239, %224, %207, %194, %193, %163, %147, %129, %126, %125, %107, %91, %73, %72, %71, %38, %30, %29
  br label %27
}

; Function Attrs: nounwind readnone
declare i64 @llvm.ctlz.i64(i64, i1) #14

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i64*, i64*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %10 = alloca i64*
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %14 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter"*
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %16 = alloca %"class.__gnu_cxx::__normal_iterator.38"*
  %17 = alloca i1
  %18 = alloca i1
  %19 = load i32, i32* @x.1171
  %20 = load i32, i32* @y.1172
  %21 = sub i32 %19, 472343562
  %22 = sub i32 %21, 1
  %23 = add i32 %22, 472343562
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  store i1 %27, i1* %18
  %28 = icmp slt i32 %20, 10
  store i1 %28, i1* %17
  %29 = alloca i32
  store i32 753295029, i32* %29
  br label %30

; <label>:30:                                     ; preds = %2, %456
  %31 = load i32, i32* %29
  switch i32 %31, label %32 [
    i32 753295029, label %33
    i32 -1401863210, label %41
    i32 -748838518, label %79
    i32 -799960203, label %82
    i32 1245510093, label %83
    i32 16759059, label %88
    i32 -1126624594, label %93
    i32 -1966629459, label %121
    i32 -1584162291, label %165
    i32 431242475, label %168
    i32 -516627222, label %196
    i32 100285840, label %258
    i32 -499380734, label %259
    i32 521983098, label %267
    i32 305048488, label %294
    i32 409923887, label %321
    i32 1286548790, label %322
    i32 -1567538507, label %350
    i32 -1479281959, label %379
    i32 1214538969, label %380
    i32 1777963370, label %381
    i32 -69510011, label %400
    i32 1229857805, label %417
    i32 -1280444951, label %452
    i32 -1146784944, label %453
  ]

; <label>:32:                                     ; preds = %30
  br label %456

; <label>:33:                                     ; preds = %30
  %34 = load volatile i1, i1* %18
  %35 = load volatile i1, i1* %17
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  %40 = select i1 %38, i32 -1401863210, i32 1777963370
  store i32 %40, i32* %29
  br label %456

; <label>:41:                                     ; preds = %30
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %42, %"class.__gnu_cxx::__normal_iterator.38"** %16
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %43, %"class.__gnu_cxx::__normal_iterator.38"** %15
  %44 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  store %"struct.__gnu_cxx::__ops::_Iter_less_iter"* %44, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %14
  %45 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %45, %"class.__gnu_cxx::__normal_iterator.38"** %13
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %46, %"class.__gnu_cxx::__normal_iterator.38"** %12
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %47, %"class.__gnu_cxx::__normal_iterator.38"** %11
  %48 = alloca i64, align 8
  store i64* %48, i64** %10
  %49 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %49, %"class.__gnu_cxx::__normal_iterator.38"** %9
  %50 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %50, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %51 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %51, %"class.__gnu_cxx::__normal_iterator.38"** %7
  %52 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %52, %"class.__gnu_cxx::__normal_iterator.38"** %6
  %53 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  store %"class.__gnu_cxx::__normal_iterator.38"* %53, %"class.__gnu_cxx::__normal_iterator.38"** %5
  %54 = alloca %"struct.__gnu_cxx::__ops::_Val_less_iter", align 1
  %55 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %56 = alloca %"struct.__gnu_cxx::__ops::_Val_less_iter", align 1
  %57 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %16
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %57, i32 0, i32 0
  store i64* %0, i64** %58, align 8
  %59 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %15
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %59, i32 0, i32 0
  store i64* %1, i64** %60, align 8
  %61 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %16
  %62 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %15
  %63 = call zeroext i1 @_ZN9__gnu_cxxeqIPxSt6vectorIxSaIxEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %61, %"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %62) #3
  store i1 %63, i1* %4
  %64 = load i32, i32* @x.1171
  %65 = load i32, i32* @y.1172
  %66 = sub i32 %64, -330435916
  %67 = sub i32 %66, 1
  %68 = add i32 %67, -330435916
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = and i1 %72, %73
  %75 = xor i1 %72, %73
  %76 = or i1 %74, %75
  %77 = or i1 %72, %73
  %78 = select i1 %76, i32 -748838518, i32 1777963370
  store i32 %78, i32* %29
  br label %456

; <label>:79:                                     ; preds = %30
  %80 = load volatile i1, i1* %4
  %81 = select i1 %80, i32 -799960203, i32 1245510093
  store i32 %81, i32* %29
  br label %456

; <label>:82:                                     ; preds = %30
  store i32 1214538969, i32* %29
  br label %456

; <label>:83:                                     ; preds = %30
  %84 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %16
  %85 = call i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl(%"class.__gnu_cxx::__normal_iterator.38"* %84, i64 1) #3
  %86 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %13
  %87 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %86, i32 0, i32 0
  store i64* %85, i64** %87, align 8
  store i32 16759059, i32* %29
  br label %456

; <label>:88:                                     ; preds = %30
  %89 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %15
  %90 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %13
  %91 = call zeroext i1 @_ZN9__gnu_cxxneIPxSt6vectorIxSaIxEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %90, %"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %89) #3
  %92 = select i1 %91, i32 -1126624594, i32 1214538969
  store i32 %92, i32* %29
  br label %456

; <label>:93:                                     ; preds = %30
  %94 = load i32, i32* @x.1171
  %95 = load i32, i32* @y.1172
  %96 = sub i32 %94, -1903782825
  %97 = sub i32 %96, 1
  %98 = add i32 %97, -1903782825
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = xor i1 %102, true
  %105 = xor i1 %103, true
  %106 = xor i1 false, true
  %107 = and i1 %104, false
  %108 = and i1 %102, %106
  %109 = and i1 %105, false
  %110 = and i1 %103, %106
  %111 = or i1 %107, %108
  %112 = or i1 %109, %110
  %113 = xor i1 %111, %112
  %114 = or i1 %104, %105
  %115 = xor i1 %114, true
  %116 = or i1 false, %106
  %117 = and i1 %115, %116
  %118 = or i1 %113, %117
  %119 = or i1 %102, %103
  %120 = select i1 %118, i32 -1966629459, i32 -69510011
  store i32 %120, i32* %29
  br label %456

; <label>:121:                                    ; preds = %30
  %122 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %12
  %123 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %122 to i8*
  %124 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %13
  %125 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %124 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %123, i8* %125, i64 8, i32 8, i1 false)
  %126 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %11
  %127 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %126 to i8*
  %128 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %16
  %129 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %128 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %127, i8* %129, i64 8, i32 8, i1 false)
  %130 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %12
  %131 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %130, i32 0, i32 0
  %132 = load i64*, i64** %131, align 8
  %133 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %11
  %134 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %133, i32 0, i32 0
  %135 = load i64*, i64** %134, align 8
  %136 = load volatile %"struct.__gnu_cxx::__ops::_Iter_less_iter"*, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %14
  %137 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclINS_17__normal_iteratorIPxSt6vectorIxSaIxEEEES8_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %136, i64* %132, i64* %135)
  store i1 %137, i1* %3
  %138 = load i32, i32* @x.1171
  %139 = load i32, i32* @y.1172
  %140 = add i32 %138, 1429361651
  %141 = sub i32 %140, 1
  %142 = sub i32 %141, 1429361651
  %143 = sub i32 %138, 1
  %144 = mul i32 %138, %142
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %139, 10
  %148 = xor i1 %146, true
  %149 = xor i1 %147, true
  %150 = xor i1 true, true
  %151 = and i1 %148, true
  %152 = and i1 %146, %150
  %153 = and i1 %149, true
  %154 = and i1 %147, %150
  %155 = or i1 %151, %152
  %156 = or i1 %153, %154
  %157 = xor i1 %155, %156
  %158 = or i1 %148, %149
  %159 = xor i1 %158, true
  %160 = or i1 true, %150
  %161 = and i1 %159, %160
  %162 = or i1 %157, %161
  %163 = or i1 %146, %147
  %164 = select i1 %162, i32 -1584162291, i32 -69510011
  store i32 %164, i32* %29
  br label %456

; <label>:165:                                    ; preds = %30
  %166 = load volatile i1, i1* %3
  %167 = select i1 %166, i32 431242475, i32 -499380734
  store i32 %167, i32* %29
  br label %456

; <label>:168:                                    ; preds = %30
  %169 = load i32, i32* @x.1171
  %170 = load i32, i32* @y.1172
  %171 = sub i32 %169, 375983747
  %172 = sub i32 %171, 1
  %173 = add i32 %172, 375983747
  %174 = sub i32 %169, 1
  %175 = mul i32 %169, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %170, 10
  %179 = xor i1 %177, true
  %180 = xor i1 %178, true
  %181 = xor i1 true, true
  %182 = and i1 %179, true
  %183 = and i1 %177, %181
  %184 = and i1 %180, true
  %185 = and i1 %178, %181
  %186 = or i1 %182, %183
  %187 = or i1 %184, %185
  %188 = xor i1 %186, %187
  %189 = or i1 %179, %180
  %190 = xor i1 %189, true
  %191 = or i1 true, %181
  %192 = and i1 %190, %191
  %193 = or i1 %188, %192
  %194 = or i1 %177, %178
  %195 = select i1 %193, i32 -516627222, i32 1229857805
  store i32 %195, i32* %29
  br label %456

; <label>:196:                                    ; preds = %30
  %197 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %13
  %198 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %197) #3
  %199 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %198) #3
  %200 = load i64, i64* %199, align 8
  %201 = load volatile i64*, i64** %10
  store i64 %200, i64* %201, align 8
  %202 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %9
  %203 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %202 to i8*
  %204 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %16
  %205 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %203, i8* %205, i64 8, i32 8, i1 false)
  %206 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %207 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %206 to i8*
  %208 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %13
  %209 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %208 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %207, i8* %209, i64 8, i32 8, i1 false)
  %210 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %13
  %211 = call i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl(%"class.__gnu_cxx::__normal_iterator.38"* %210, i64 1) #3
  %212 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %7
  %213 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %212, i32 0, i32 0
  store i64* %211, i64** %213, align 8
  %214 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %9
  %215 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %214, i32 0, i32 0
  %216 = load i64*, i64** %215, align 8
  %217 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %218 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %217, i32 0, i32 0
  %219 = load i64*, i64** %218, align 8
  %220 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %7
  %221 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %220, i32 0, i32 0
  %222 = load i64*, i64** %221, align 8
  %223 = call i64* @_ZSt13move_backwardIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES6_ET0_T_S8_S7_(i64* %216, i64* %219, i64* %222)
  %224 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %6
  %225 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %224, i32 0, i32 0
  store i64* %223, i64** %225, align 8
  %226 = load volatile i64*, i64** %10
  %227 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %226) #3
  %228 = load i64, i64* %227, align 8
  %229 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %16
  %230 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %229) #3
  store i64 %228, i64* %230, align 8
  %231 = load i32, i32* @x.1171
  %232 = load i32, i32* @y.1172
  %233 = sub i32 %231, 1564921193
  %234 = sub i32 %233, 1
  %235 = add i32 %234, 1564921193
  %236 = sub i32 %231, 1
  %237 = mul i32 %231, %235
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %232, 10
  %241 = xor i1 %239, true
  %242 = xor i1 %240, true
  %243 = xor i1 false, true
  %244 = and i1 %241, false
  %245 = and i1 %239, %243
  %246 = and i1 %242, false
  %247 = and i1 %240, %243
  %248 = or i1 %244, %245
  %249 = or i1 %246, %247
  %250 = xor i1 %248, %249
  %251 = or i1 %241, %242
  %252 = xor i1 %251, true
  %253 = or i1 false, %243
  %254 = and i1 %252, %253
  %255 = or i1 %250, %254
  %256 = or i1 %239, %240
  %257 = select i1 %255, i32 100285840, i32 1229857805
  store i32 %257, i32* %29
  br label %456

; <label>:258:                                    ; preds = %30
  store i32 521983098, i32* %29
  br label %456

; <label>:259:                                    ; preds = %30
  %260 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %5
  %261 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %260 to i8*
  %262 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %13
  %263 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %262 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %261, i8* %263, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops15__val_comp_iterENS0_15_Iter_less_iterE()
  %264 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %5
  %265 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %264, i32 0, i32 0
  %266 = load i64*, i64** %265, align 8
  call void @_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops14_Val_less_iterEEvT_T0_(i64* %266)
  store i32 521983098, i32* %29
  br label %456

; <label>:267:                                    ; preds = %30
  %268 = load i32, i32* @x.1171
  %269 = load i32, i32* @y.1172
  %270 = sub i32 0, 1
  %271 = add i32 %268, %270
  %272 = sub i32 %268, 1
  %273 = mul i32 %268, %271
  %274 = urem i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = icmp slt i32 %269, 10
  %277 = xor i1 %275, true
  %278 = xor i1 %276, true
  %279 = xor i1 true, true
  %280 = and i1 %277, true
  %281 = and i1 %275, %279
  %282 = and i1 %278, true
  %283 = and i1 %276, %279
  %284 = or i1 %280, %281
  %285 = or i1 %282, %283
  %286 = xor i1 %284, %285
  %287 = or i1 %277, %278
  %288 = xor i1 %287, true
  %289 = or i1 true, %279
  %290 = and i1 %288, %289
  %291 = or i1 %286, %290
  %292 = or i1 %275, %276
  %293 = select i1 %291, i32 305048488, i32 -1280444951
  store i32 %293, i32* %29
  br label %456

; <label>:294:                                    ; preds = %30
  %295 = load i32, i32* @x.1171
  %296 = load i32, i32* @y.1172
  %297 = sub i32 0, 1
  %298 = add i32 %295, %297
  %299 = sub i32 %295, 1
  %300 = mul i32 %295, %298
  %301 = urem i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %296, 10
  %304 = xor i1 %302, true
  %305 = xor i1 %303, true
  %306 = xor i1 true, true
  %307 = and i1 %304, true
  %308 = and i1 %302, %306
  %309 = and i1 %305, true
  %310 = and i1 %303, %306
  %311 = or i1 %307, %308
  %312 = or i1 %309, %310
  %313 = xor i1 %311, %312
  %314 = or i1 %304, %305
  %315 = xor i1 %314, true
  %316 = or i1 true, %306
  %317 = and i1 %315, %316
  %318 = or i1 %313, %317
  %319 = or i1 %302, %303
  %320 = select i1 %318, i32 409923887, i32 -1280444951
  store i32 %320, i32* %29
  br label %456

; <label>:321:                                    ; preds = %30
  store i32 1286548790, i32* %29
  br label %456

; <label>:322:                                    ; preds = %30
  %323 = load i32, i32* @x.1171
  %324 = load i32, i32* @y.1172
  %325 = add i32 %323, 674943702
  %326 = sub i32 %325, 1
  %327 = sub i32 %326, 674943702
  %328 = sub i32 %323, 1
  %329 = mul i32 %323, %327
  %330 = urem i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %324, 10
  %333 = xor i1 %331, true
  %334 = xor i1 %332, true
  %335 = xor i1 true, true
  %336 = and i1 %333, true
  %337 = and i1 %331, %335
  %338 = and i1 %334, true
  %339 = and i1 %332, %335
  %340 = or i1 %336, %337
  %341 = or i1 %338, %339
  %342 = xor i1 %340, %341
  %343 = or i1 %333, %334
  %344 = xor i1 %343, true
  %345 = or i1 true, %335
  %346 = and i1 %344, %345
  %347 = or i1 %342, %346
  %348 = or i1 %331, %332
  %349 = select i1 %347, i32 -1567538507, i32 -1146784944
  store i32 %349, i32* %29
  br label %456

; <label>:350:                                    ; preds = %30
  %351 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %13
  %352 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.38"* @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEppEv(%"class.__gnu_cxx::__normal_iterator.38"* %351) #3
  %353 = load i32, i32* @x.1171
  %354 = load i32, i32* @y.1172
  %355 = sub i32 0, 1
  %356 = add i32 %353, %355
  %357 = sub i32 %353, 1
  %358 = mul i32 %353, %356
  %359 = urem i32 %358, 2
  %360 = icmp eq i32 %359, 0
  %361 = icmp slt i32 %354, 10
  %362 = xor i1 %360, true
  %363 = xor i1 %361, true
  %364 = xor i1 true, true
  %365 = and i1 %362, true
  %366 = and i1 %360, %364
  %367 = and i1 %363, true
  %368 = and i1 %361, %364
  %369 = or i1 %365, %366
  %370 = or i1 %367, %368
  %371 = xor i1 %369, %370
  %372 = or i1 %362, %363
  %373 = xor i1 %372, true
  %374 = or i1 true, %364
  %375 = and i1 %373, %374
  %376 = or i1 %371, %375
  %377 = or i1 %360, %361
  %378 = select i1 %376, i32 -1479281959, i32 -1146784944
  store i32 %378, i32* %29
  br label %456

; <label>:379:                                    ; preds = %30
  store i32 16759059, i32* %29
  br label %456

; <label>:380:                                    ; preds = %30
  ret void

; <label>:381:                                    ; preds = %30
  %382 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %383 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %384 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %385 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %386 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %387 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %388 = alloca i64, align 8
  %389 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %390 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %391 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %392 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %393 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %394 = alloca %"struct.__gnu_cxx::__ops::_Val_less_iter", align 1
  %395 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %396 = alloca %"struct.__gnu_cxx::__ops::_Val_less_iter", align 1
  %397 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %382, i32 0, i32 0
  store i64* %0, i64** %397, align 8
  %398 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %383, i32 0, i32 0
  store i64* %1, i64** %398, align 8
  %399 = call zeroext i1 @_ZN9__gnu_cxxeqIPxSt6vectorIxSaIxEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %382, %"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %383) #3
  store i32 -1401863210, i32* %29
  br label %456

; <label>:400:                                    ; preds = %30
  %401 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %12
  %402 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %401 to i8*
  %403 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %13
  %404 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %403 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %402, i8* %404, i64 8, i32 8, i1 false)
  %405 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %11
  %406 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %405 to i8*
  %407 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %16
  %408 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %407 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %406, i8* %408, i64 8, i32 8, i1 false)
  %409 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %12
  %410 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %409, i32 0, i32 0
  %411 = load i64*, i64** %410, align 8
  %412 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %11
  %413 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %412, i32 0, i32 0
  %414 = load i64*, i64** %413, align 8
  %415 = load volatile %"struct.__gnu_cxx::__ops::_Iter_less_iter"*, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %14
  %416 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclINS_17__normal_iteratorIPxSt6vectorIxSaIxEEEES8_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %415, i64* %411, i64* %414)
  store i32 -1966629459, i32* %29
  br label %456

; <label>:417:                                    ; preds = %30
  %418 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %13
  %419 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %418) #3
  %420 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %419) #3
  %421 = load i64, i64* %420, align 8
  %422 = load volatile i64*, i64** %10
  store i64 %421, i64* %422, align 8
  %423 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %9
  %424 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %423 to i8*
  %425 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %16
  %426 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %425 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %424, i8* %426, i64 8, i32 8, i1 false)
  %427 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %428 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %427 to i8*
  %429 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %13
  %430 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %429 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %428, i8* %430, i64 8, i32 8, i1 false)
  %431 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %13
  %432 = call i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEplEl(%"class.__gnu_cxx::__normal_iterator.38"* %431, i64 1) #3
  %433 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %7
  %434 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %433, i32 0, i32 0
  store i64* %432, i64** %434, align 8
  %435 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %9
  %436 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %435, i32 0, i32 0
  %437 = load i64*, i64** %436, align 8
  %438 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %8
  %439 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %438, i32 0, i32 0
  %440 = load i64*, i64** %439, align 8
  %441 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %7
  %442 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %441, i32 0, i32 0
  %443 = load i64*, i64** %442, align 8
  %444 = call i64* @_ZSt13move_backwardIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES6_ET0_T_S8_S7_(i64* %437, i64* %440, i64* %443)
  %445 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %6
  %446 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %445, i32 0, i32 0
  store i64* %444, i64** %446, align 8
  %447 = load volatile i64*, i64** %10
  %448 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %447) #3
  %449 = load i64, i64* %448, align 8
  %450 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %16
  %451 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %450) #3
  store i64 %449, i64* %451, align 8
  store i32 -516627222, i32* %29
  br label %456

; <label>:452:                                    ; preds = %30
  store i32 305048488, i32* %29
  br label %456

; <label>:453:                                    ; preds = %30
  %454 = load volatile %"class.__gnu_cxx::__normal_iterator.38"*, %"class.__gnu_cxx::__normal_iterator.38"** %13
  %455 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.38"* @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEppEv(%"class.__gnu_cxx::__normal_iterator.38"* %454) #3
  store i32 -1567538507, i32* %29
  br label %456

; <label>:456:                                    ; preds = %453, %452, %417, %400, %381, %379, %350, %322, %321, %294, %267, %259, %258, %196, %168, %165, %121, %93, %88, %83, %82, %79, %41, %33, %32
  br label %30
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt26__unguarded_insertion_sortIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops15_Iter_less_iterEEvT_S9_T0_(i64*, i64*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %8 = alloca %"struct.__gnu_cxx::__ops::_Val_less_iter", align 1
  %9 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %10 = alloca %"struct.__gnu_cxx::__ops::_Val_less_iter", align 1
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %3, i32 0, i32 0
  store i64* %0, i64** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %4, i32 0, i32 0
  store i64* %1, i64** %12, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %6 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = alloca i32
  store i32 750239354, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %124
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 750239354, label %19
    i32 -1124294351, label %22
    i32 558855042, label %49
    i32 1735783489, label %69
    i32 -1314183525, label %70
    i32 1578932869, label %98
    i32 -617289674, label %115
    i32 -561665277, label %116
    i32 1320150825, label %117
    i32 -1285372483, label %122
  ]

; <label>:18:                                     ; preds = %16
  br label %124

; <label>:19:                                     ; preds = %16
  %20 = call zeroext i1 @_ZN9__gnu_cxxneIPxSt6vectorIxSaIxEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %6, %"class.__gnu_cxx::__normal_iterator.38"* dereferenceable(8) %4) #3
  %21 = select i1 %20, i32 -1124294351, i32 -561665277
  store i32 %21, i32* %15
  br label %124

; <label>:22:                                     ; preds = %16
  %23 = load i32, i32* @x.1173
  %24 = load i32, i32* @y.1174
  %25 = sub i32 0, 1
  %26 = add i32 %23, %25
  %27 = sub i32 %23, 1
  %28 = mul i32 %23, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %24, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 false, true
  %35 = and i1 %32, false
  %36 = and i1 %30, %34
  %37 = and i1 %33, false
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 false, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 558855042, i32 1320150825
  store i32 %48, i32* %15
  br label %124

; <label>:49:                                     ; preds = %16
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %7 to i8*
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops15__val_comp_iterENS0_15_Iter_less_iterE()
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %7, i32 0, i32 0
  %53 = load i64*, i64** %52, align 8
  call void @_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops14_Val_less_iterEEvT_T0_(i64* %53)
  %54 = load i32, i32* @x.1173
  %55 = load i32, i32* @y.1174
  %56 = add i32 %54, 2005983507
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, 2005983507
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  %68 = select i1 %66, i32 1735783489, i32 1320150825
  store i32 %68, i32* %15
  br label %124

; <label>:69:                                     ; preds = %16
  store i32 -1314183525, i32* %15
  br label %124

; <label>:70:                                     ; preds = %16
  %71 = load i32, i32* @x.1173
  %72 = load i32, i32* @y.1174
  %73 = add i32 %71, -1449595737
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, -1449595737
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 false, true
  %84 = and i1 %81, false
  %85 = and i1 %79, %83
  %86 = and i1 %82, false
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 false, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  %97 = select i1 %95, i32 1578932869, i32 -1285372483
  store i32 %97, i32* %15
  br label %124

; <label>:98:                                     ; preds = %16
  %99 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.38"* @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEppEv(%"class.__gnu_cxx::__normal_iterator.38"* %6) #3
  %100 = load i32, i32* @x.1173
  %101 = load i32, i32* @y.1174
  %102 = sub i32 %100, 1265522388
  %103 = sub i32 %102, 1
  %104 = add i32 %103, 1265522388
  %105 = sub i32 %100, 1
  %106 = mul i32 %100, %104
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %101, 10
  %110 = and i1 %108, %109
  %111 = xor i1 %108, %109
  %112 = or i1 %110, %111
  %113 = or i1 %108, %109
  %114 = select i1 %112, i32 -617289674, i32 -1285372483
  store i32 %114, i32* %15
  br label %124

; <label>:115:                                    ; preds = %16
  store i32 750239354, i32* %15
  br label %124

; <label>:116:                                    ; preds = %16
  ret void

; <label>:117:                                    ; preds = %16
  %118 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %7 to i8*
  %119 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %118, i8* %119, i64 8, i32 8, i1 false)
  call void @_ZN9__gnu_cxx5__ops15__val_comp_iterENS0_15_Iter_less_iterE()
  %120 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %7, i32 0, i32 0
  %121 = load i64*, i64** %120, align 8
  call void @_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops14_Val_less_iterEEvT_T0_(i64* %121)
  store i32 558855042, i32* %15
  br label %124

; <label>:122:                                    ; preds = %16
  %123 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.38"* @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEppEv(%"class.__gnu_cxx::__normal_iterator.38"* %6) #3
  store i32 1578932869, i32* %15
  br label %124

; <label>:124:                                    ; preds = %122, %117, %115, %98, %70, %69, %49, %22, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt13move_backwardIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES6_ET0_T_S8_S7_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.1175
  %8 = load i32, i32* @y.1176
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -278244634, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %130
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -278244634, label %20
    i32 -1365412076, label %40
    i32 -42006414, label %91
    i32 -1215071105, label %93
  ]

; <label>:19:                                     ; preds = %17
  br label %130

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1365412076, i32 -1215071105
  store i32 %39, i32* %16
  br label %130

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %45 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %48 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %49 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %42, i32 0, i32 0
  store i64* %0, i64** %50, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %43, i32 0, i32 0
  store i64* %1, i64** %51, align 8
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %44, i32 0, i32 0
  store i64* %2, i64** %52, align 8
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %46 to i8*
  %54 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 8, i32 8, i1 false)
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %46, i32 0, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = call i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES8_(i64* %56)
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %45, i32 0, i32 0
  store i64* %57, i64** %58, align 8
  %59 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %48 to i8*
  %60 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %59, i8* %60, i64 8, i32 8, i1 false)
  %61 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %48, i32 0, i32 0
  %62 = load i64*, i64** %61, align 8
  %63 = call i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES8_(i64* %62)
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %47, i32 0, i32 0
  store i64* %63, i64** %64, align 8
  %65 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %49 to i8*
  %66 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 8, i32 8, i1 false)
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %45, i32 0, i32 0
  %68 = load i64*, i64** %67, align 8
  %69 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %47, i32 0, i32 0
  %70 = load i64*, i64** %69, align 8
  %71 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %49, i32 0, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = call i64* @_ZSt23__copy_move_backward_a2ILb1EN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES6_ET1_T0_S8_S7_(i64* %68, i64* %70, i64* %72)
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %41, i32 0, i32 0
  store i64* %73, i64** %74, align 8
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %41, i32 0, i32 0
  %76 = load i64*, i64** %75, align 8
  store i64* %76, i64** %4
  %77 = load i32, i32* @x.1175
  %78 = load i32, i32* @y.1176
  %79 = sub i32 0, 1
  %80 = add i32 %77, %79
  %81 = sub i32 %77, 1
  %82 = mul i32 %77, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %78, 10
  %86 = and i1 %84, %85
  %87 = xor i1 %84, %85
  %88 = or i1 %86, %87
  %89 = or i1 %84, %85
  %90 = select i1 %88, i32 -42006414, i32 -1215071105
  store i32 %90, i32* %16
  br label %130

; <label>:91:                                     ; preds = %17
  %92 = load volatile i64*, i64** %4
  ret i64* %92

; <label>:93:                                     ; preds = %17
  %94 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %95 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %96 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %97 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %98 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %99 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %100 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %101 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %102 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %103 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %95, i32 0, i32 0
  store i64* %0, i64** %103, align 8
  %104 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %96, i32 0, i32 0
  store i64* %1, i64** %104, align 8
  %105 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %97, i32 0, i32 0
  store i64* %2, i64** %105, align 8
  %106 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %99 to i8*
  %107 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %106, i8* %107, i64 8, i32 8, i1 false)
  %108 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %99, i32 0, i32 0
  %109 = load i64*, i64** %108, align 8
  %110 = call i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES8_(i64* %109)
  %111 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %98, i32 0, i32 0
  store i64* %110, i64** %111, align 8
  %112 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %101 to i8*
  %113 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %96 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %112, i8* %113, i64 8, i32 8, i1 false)
  %114 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %101, i32 0, i32 0
  %115 = load i64*, i64** %114, align 8
  %116 = call i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES8_(i64* %115)
  %117 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %100, i32 0, i32 0
  store i64* %116, i64** %117, align 8
  %118 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %102 to i8*
  %119 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %118, i8* %119, i64 8, i32 8, i1 false)
  %120 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %98, i32 0, i32 0
  %121 = load i64*, i64** %120, align 8
  %122 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %100, i32 0, i32 0
  %123 = load i64*, i64** %122, align 8
  %124 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %102, i32 0, i32 0
  %125 = load i64*, i64** %124, align 8
  %126 = call i64* @_ZSt23__copy_move_backward_a2ILb1EN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES6_ET1_T0_S8_S7_(i64* %121, i64* %123, i64* %125)
  %127 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %94, i32 0, i32 0
  store i64* %126, i64** %127, align 8
  %128 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %94, i32 0, i32 0
  %129 = load i64*, i64** %128, align 8
  store i32 -1365412076, i32* %16
  br label %130

; <label>:130:                                    ; preds = %93, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEENS0_5__ops14_Val_less_iterEEvT_T0_(i64*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %3 = alloca %"struct.__gnu_cxx::__ops::_Val_less_iter", align 1
  %4 = alloca i64, align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %2, i32 0, i32 0
  store i64* %0, i64** %7, align 8
  %8 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %2) #3
  %9 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %8) #3
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %4, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %5 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.38"* @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEmmEv(%"class.__gnu_cxx::__normal_iterator.38"* %5) #3
  %14 = alloca i32
  store i32 1823492602, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %161
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1823492602, label %18
    i32 -1775368311, label %25
    i32 1901763670, label %53
    i32 842501039, label %88
    i32 -1344261648, label %89
    i32 -579668711, label %117
    i32 1624489602, label %148
    i32 -695698769, label %149
    i32 -2062718262, label %157
  ]

; <label>:17:                                     ; preds = %15
  br label %161

; <label>:18:                                     ; preds = %15
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %6 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %6, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = call zeroext i1 @_ZNK9__gnu_cxx5__ops14_Val_less_iterclIxNS_17__normal_iteratorIPxSt6vectorIxSaIxEEEEEEbRT_T0_(%"struct.__gnu_cxx::__ops::_Val_less_iter"* %3, i64* dereferenceable(8) %4, i64* %22)
  %24 = select i1 %23, i32 -1775368311, i32 -1344261648
  store i32 %24, i32* %14
  br label %161

; <label>:25:                                     ; preds = %15
  %26 = load i32, i32* @x.1177
  %27 = load i32, i32* @y.1178
  %28 = add i32 %26, 1895260093
  %29 = sub i32 %28, 1
  %30 = sub i32 %29, 1895260093
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 false, true
  %39 = and i1 %36, false
  %40 = and i1 %34, %38
  %41 = and i1 %37, false
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 false, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  %52 = select i1 %50, i32 1901763670, i32 -695698769
  store i32 %52, i32* %14
  br label %161

; <label>:53:                                     ; preds = %15
  %54 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %5) #3
  %55 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %54) #3
  %56 = load i64, i64* %55, align 8
  %57 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %2) #3
  store i64 %56, i64* %57, align 8
  %58 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %2 to i8*
  %59 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %58, i8* %59, i64 8, i32 8, i1 false)
  %60 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.38"* @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEmmEv(%"class.__gnu_cxx::__normal_iterator.38"* %5) #3
  %61 = load i32, i32* @x.1177
  %62 = load i32, i32* @y.1178
  %63 = add i32 %61, 907975353
  %64 = sub i32 %63, 1
  %65 = sub i32 %64, 907975353
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 false, true
  %74 = and i1 %71, false
  %75 = and i1 %69, %73
  %76 = and i1 %72, false
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 false, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  %87 = select i1 %85, i32 842501039, i32 -695698769
  store i32 %87, i32* %14
  br label %161

; <label>:88:                                     ; preds = %15
  store i32 1823492602, i32* %14
  br label %161

; <label>:89:                                     ; preds = %15
  %90 = load i32, i32* @x.1177
  %91 = load i32, i32* @y.1178
  %92 = sub i32 %90, 1557375411
  %93 = sub i32 %92, 1
  %94 = add i32 %93, 1557375411
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = xor i1 %98, true
  %101 = xor i1 %99, true
  %102 = xor i1 true, true
  %103 = and i1 %100, true
  %104 = and i1 %98, %102
  %105 = and i1 %101, true
  %106 = and i1 %99, %102
  %107 = or i1 %103, %104
  %108 = or i1 %105, %106
  %109 = xor i1 %107, %108
  %110 = or i1 %100, %101
  %111 = xor i1 %110, true
  %112 = or i1 true, %102
  %113 = and i1 %111, %112
  %114 = or i1 %109, %113
  %115 = or i1 %98, %99
  %116 = select i1 %114, i32 -579668711, i32 -2062718262
  store i32 %116, i32* %14
  br label %161

; <label>:117:                                    ; preds = %15
  %118 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %4) #3
  %119 = load i64, i64* %118, align 8
  %120 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %2) #3
  store i64 %119, i64* %120, align 8
  %121 = load i32, i32* @x.1177
  %122 = load i32, i32* @y.1178
  %123 = sub i32 %121, -365915269
  %124 = sub i32 %123, 1
  %125 = add i32 %124, -365915269
  %126 = sub i32 %121, 1
  %127 = mul i32 %121, %125
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %122, 10
  %131 = xor i1 %129, true
  %132 = xor i1 %130, true
  %133 = xor i1 true, true
  %134 = and i1 %131, true
  %135 = and i1 %129, %133
  %136 = and i1 %132, true
  %137 = and i1 %130, %133
  %138 = or i1 %134, %135
  %139 = or i1 %136, %137
  %140 = xor i1 %138, %139
  %141 = or i1 %131, %132
  %142 = xor i1 %141, true
  %143 = or i1 true, %133
  %144 = and i1 %142, %143
  %145 = or i1 %140, %144
  %146 = or i1 %129, %130
  %147 = select i1 %145, i32 1624489602, i32 -2062718262
  store i32 %147, i32* %14
  br label %161

; <label>:148:                                    ; preds = %15
  ret void

; <label>:149:                                    ; preds = %15
  %150 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %5) #3
  %151 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %150) #3
  %152 = load i64, i64* %151, align 8
  %153 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %2) #3
  store i64 %152, i64* %153, align 8
  %154 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %2 to i8*
  %155 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %154, i8* %155, i64 8, i32 8, i1 false)
  %156 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.38"* @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEmmEv(%"class.__gnu_cxx::__normal_iterator.38"* %5) #3
  store i32 1901763670, i32* %14
  br label %161

; <label>:157:                                    ; preds = %15
  %158 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %4) #3
  %159 = load i64, i64* %158, align 8
  %160 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %2) #3
  store i64 %159, i64* %160, align 8
  store i32 -579668711, i32* %14
  br label %161

; <label>:161:                                    ; preds = %157, %149, %117, %89, %88, %53, %25, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15__val_comp_iterENS0_15_Iter_less_iterE() #4 comdat {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.1179
  %4 = load i32, i32* @y.1180
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %2
  %11 = icmp slt i32 %4, 10
  store i1 %11, i1* %1
  %12 = alloca i32
  store i32 -1362093508, i32* %12
  br label %13

; <label>:13:                                     ; preds = %0, %58
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1362093508, label %16
    i32 816569035, label %24
    i32 872010876, label %54
    i32 -1995025764, label %55
  ]

; <label>:15:                                     ; preds = %13
  br label %58

; <label>:16:                                     ; preds = %13
  %17 = load volatile i1, i1* %2
  %18 = load volatile i1, i1* %1
  %19 = and i1 %17, %18
  %20 = xor i1 %17, %18
  %21 = or i1 %19, %20
  %22 = or i1 %17, %18
  %23 = select i1 %21, i32 816569035, i32 -1995025764
  store i32 %23, i32* %12
  br label %58

; <label>:24:                                     ; preds = %13
  %25 = alloca %"struct.__gnu_cxx::__ops::_Val_less_iter", align 1
  %26 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %27 = load i32, i32* @x.1179
  %28 = load i32, i32* @y.1180
  %29 = add i32 %27, 1244757101
  %30 = sub i32 %29, 1
  %31 = sub i32 %30, 1244757101
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 true, true
  %40 = and i1 %37, true
  %41 = and i1 %35, %39
  %42 = and i1 %38, true
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 true, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  %53 = select i1 %51, i32 872010876, i32 -1995025764
  store i32 %53, i32* %12
  br label %58

; <label>:54:                                     ; preds = %13
  ret void

; <label>:55:                                     ; preds = %13
  %56 = alloca %"struct.__gnu_cxx::__ops::_Val_less_iter", align 1
  %57 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  store i32 816569035, i32* %12
  br label %58

; <label>:58:                                     ; preds = %55, %24, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt23__copy_move_backward_a2ILb1EN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEES6_ET1_T0_S8_S7_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %8 = alloca i64*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %5, i32 0, i32 0
  store i64* %0, i64** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %6, i32 0, i32 0
  store i64* %1, i64** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %7, i32 0, i32 0
  store i64* %2, i64** %14, align 8
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %9 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %9, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i64* %18)
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %10 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %10, i32 0, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i64* %23)
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %11 to i8*
  %26 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 8, i32 8, i1 false)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %11, i32 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i64* %28)
  %30 = call i64* @_ZSt22__copy_move_backward_aILb1EPxS0_ET1_T0_S2_S1_(i64* %19, i64* %24, i64* %29)
  store i64* %30, i64** %8, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.38"* %4, i64** dereferenceable(8) %8) #3
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %4, i32 0, i32 0
  %32 = load i64*, i64** %31, align 8
  ret i64* %32
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES8_(i64*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %3, i32 0, i32 0
  store i64* %0, i64** %5, align 8
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %4 to i8*
  %7 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 8, i32 8, i1 false)
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %4, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = call i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEELb0EE7_S_baseES6_(i64* %9)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %2, i32 0, i32 0
  store i64* %10, i64** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %2, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  ret i64* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i64*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %2, i32 0, i32 0
  store i64* %0, i64** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %3, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = call i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEELb1EE7_S_baseES6_(i64* %8)
  ret i64* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEELb1EE7_S_baseES6_(i64*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %2, i32 0, i32 0
  store i64* %0, i64** %3, align 8
  %4 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.38"* %2) #3
  %5 = load i64*, i64** %4, align 8
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEELb0EE7_S_baseES6_(i64*) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1189
  %6 = load i32, i32* @y.1190
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -276048049, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %71
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -276048049, label %18
    i32 -1195682245, label %38
    i32 -260701946, label %61
    i32 -48111760, label %63
  ]

; <label>:17:                                     ; preds = %15
  br label %71

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1195682245, i32 -48111760
  store i32 %37, i32* %14
  br label %71

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %40, i32 0, i32 0
  store i64* %0, i64** %41, align 8
  %42 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %39 to i8*
  %43 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 8, i32 8, i1 false)
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %39, i32 0, i32 0
  %45 = load i64*, i64** %44, align 8
  store i64* %45, i64** %2
  %46 = load i32, i32* @x.1189
  %47 = load i32, i32* @y.1190
  %48 = add i32 %46, 1205243133
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, 1205243133
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -260701946, i32 -48111760
  store i32 %60, i32* %14
  br label %71

; <label>:61:                                     ; preds = %15
  %62 = load volatile i64*, i64** %2
  ret i64* %62

; <label>:63:                                     ; preds = %15
  %64 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %65 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %65, i32 0, i32 0
  store i64* %0, i64** %66, align 8
  %67 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %64 to i8*
  %68 = bitcast %"class.__gnu_cxx::__normal_iterator.38"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %67, i8* %68, i64 8, i32 8, i1 false)
  %69 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %64, i32 0, i32 0
  %70 = load i64*, i64** %69, align 8
  store i32 -1195682245, i32* %14
  br label %71

; <label>:71:                                     ; preds = %63, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK9__gnu_cxx5__ops14_Val_less_iterclIxNS_17__normal_iteratorIPxSt6vectorIxSaIxEEEEEEbRT_T0_(%"struct.__gnu_cxx::__ops::_Val_less_iter"*, i64* dereferenceable(8), i64*) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.38", align 8
  %5 = alloca %"struct.__gnu_cxx::__ops::_Val_less_iter"*, align 8
  %6 = alloca i64*, align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.38", %"class.__gnu_cxx::__normal_iterator.38"* %4, i32 0, i32 0
  store i64* %2, i64** %7, align 8
  store %"struct.__gnu_cxx::__ops::_Val_less_iter"* %0, %"struct.__gnu_cxx::__ops::_Val_less_iter"** %5, align 8
  store i64* %1, i64** %6, align 8
  %8 = load %"struct.__gnu_cxx::__ops::_Val_less_iter"*, %"struct.__gnu_cxx::__ops::_Val_less_iter"** %5, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = load i64, i64* %9, align 8
  %11 = call dereferenceable(8) i64* @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEdeEv(%"class.__gnu_cxx::__normal_iterator.38"* %4) #3
  %12 = load i64, i64* %11, align 8
  %13 = icmp slt i64 %10, %12
  ret i1 %13
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIxxESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.31"*, %"struct.std::pair.36"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"struct.std::pair.36"*
  %4 = alloca %"struct.std::pair.36"*
  %5 = alloca %"class.std::vector.31"*
  %6 = alloca %"class.std::vector.31"*, align 8
  %7 = alloca %"struct.std::pair.36"*, align 8
  store %"class.std::vector.31"* %0, %"class.std::vector.31"** %6, align 8
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %7, align 8
  %8 = load %"class.std::vector.31"*, %"class.std::vector.31"** %6, align 8
  store %"class.std::vector.31"* %8, %"class.std::vector.31"** %5
  %9 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %5
  %10 = bitcast %"class.std::vector.31"* %9 to %"struct.std::_Vector_base.32"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %12, align 8
  store %"struct.std::pair.36"* %13, %"struct.std::pair.36"** %4
  %14 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %5
  %15 = bitcast %"class.std::vector.31"* %14 to %"struct.std::_Vector_base.32"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %17, align 8
  store %"struct.std::pair.36"* %18, %"struct.std::pair.36"** %3
  %19 = alloca i32
  store i32 377109222, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %159
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 377109222, label %23
    i32 -989928699, label %28
    i32 -1958770780, label %55
    i32 -436005442, label %88
    i32 1440481210, label %89
    i32 -365431533, label %117
    i32 -710815036, label %135
    i32 1576427202, label %136
    i32 -707483068, label %137
    i32 -819374247, label %155
  ]

; <label>:22:                                     ; preds = %20
  br label %159

; <label>:23:                                     ; preds = %20
  %24 = load volatile %"struct.std::pair.36"*, %"struct.std::pair.36"** %4
  %25 = load volatile %"struct.std::pair.36"*, %"struct.std::pair.36"** %3
  %26 = icmp ne %"struct.std::pair.36"* %24, %25
  %27 = select i1 %26, i32 -989928699, i32 1440481210
  store i32 %27, i32* %19
  br label %159

; <label>:28:                                     ; preds = %20
  %29 = load i32, i32* @x.1193
  %30 = load i32, i32* @y.1194
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 -1958770780, i32 -707483068
  store i32 %54, i32* %19
  br label %159

; <label>:55:                                     ; preds = %20
  %56 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %5
  %57 = bitcast %"class.std::vector.31"* %56 to %"struct.std::_Vector_base.32"*
  %58 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %57, i32 0, i32 0
  %59 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %58 to %"class.std::allocator.33"*
  %60 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %5
  %61 = bitcast %"class.std::vector.31"* %60 to %"struct.std::_Vector_base.32"*
  %62 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %61, i32 0, i32 0
  %63 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %62, i32 0, i32 1
  %64 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %63, align 8
  %65 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %7, align 8
  %66 = call dereferenceable(16) %"struct.std::pair.36"* @_ZSt7forwardISt4pairIxxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair.36"* dereferenceable(16) %65) #3
  call void @_ZNSt16allocator_traitsISaISt4pairIxxEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.33"* dereferenceable(1) %59, %"struct.std::pair.36"* %64, %"struct.std::pair.36"* dereferenceable(16) %66)
  %67 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %5
  %68 = bitcast %"class.std::vector.31"* %67 to %"struct.std::_Vector_base.32"*
  %69 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %68, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %69, i32 0, i32 1
  %71 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %71, i32 1
  store %"struct.std::pair.36"* %72, %"struct.std::pair.36"** %70, align 8
  %73 = load i32, i32* @x.1193
  %74 = load i32, i32* @y.1194
  %75 = add i32 %73, 1351204335
  %76 = sub i32 %75, 1
  %77 = sub i32 %76, 1351204335
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = and i1 %81, %82
  %84 = xor i1 %81, %82
  %85 = or i1 %83, %84
  %86 = or i1 %81, %82
  %87 = select i1 %85, i32 -436005442, i32 -707483068
  store i32 %87, i32* %19
  br label %159

; <label>:88:                                     ; preds = %20
  store i32 1576427202, i32* %19
  br label %159

; <label>:89:                                     ; preds = %20
  %90 = load i32, i32* @x.1193
  %91 = load i32, i32* @y.1194
  %92 = sub i32 %90, 1100036601
  %93 = sub i32 %92, 1
  %94 = add i32 %93, 1100036601
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = xor i1 %98, true
  %101 = xor i1 %99, true
  %102 = xor i1 false, true
  %103 = and i1 %100, false
  %104 = and i1 %98, %102
  %105 = and i1 %101, false
  %106 = and i1 %99, %102
  %107 = or i1 %103, %104
  %108 = or i1 %105, %106
  %109 = xor i1 %107, %108
  %110 = or i1 %100, %101
  %111 = xor i1 %110, true
  %112 = or i1 false, %102
  %113 = and i1 %111, %112
  %114 = or i1 %109, %113
  %115 = or i1 %98, %99
  %116 = select i1 %114, i32 -365431533, i32 -819374247
  store i32 %116, i32* %19
  br label %159

; <label>:117:                                    ; preds = %20
  %118 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %7, align 8
  %119 = call dereferenceable(16) %"struct.std::pair.36"* @_ZSt7forwardISt4pairIxxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair.36"* dereferenceable(16) %118) #3
  %120 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %5
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.31"* %120, %"struct.std::pair.36"* dereferenceable(16) %119)
  %121 = load i32, i32* @x.1193
  %122 = load i32, i32* @y.1194
  %123 = sub i32 0, 1
  %124 = add i32 %121, %123
  %125 = sub i32 %121, 1
  %126 = mul i32 %121, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %122, 10
  %130 = and i1 %128, %129
  %131 = xor i1 %128, %129
  %132 = or i1 %130, %131
  %133 = or i1 %128, %129
  %134 = select i1 %132, i32 -710815036, i32 -819374247
  store i32 %134, i32* %19
  br label %159

; <label>:135:                                    ; preds = %20
  store i32 1576427202, i32* %19
  br label %159

; <label>:136:                                    ; preds = %20
  ret void

; <label>:137:                                    ; preds = %20
  %138 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %5
  %139 = bitcast %"class.std::vector.31"* %138 to %"struct.std::_Vector_base.32"*
  %140 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %139, i32 0, i32 0
  %141 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %140 to %"class.std::allocator.33"*
  %142 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %5
  %143 = bitcast %"class.std::vector.31"* %142 to %"struct.std::_Vector_base.32"*
  %144 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %143, i32 0, i32 0
  %145 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %144, i32 0, i32 1
  %146 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %145, align 8
  %147 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %7, align 8
  %148 = call dereferenceable(16) %"struct.std::pair.36"* @_ZSt7forwardISt4pairIxxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair.36"* dereferenceable(16) %147) #3
  call void @_ZNSt16allocator_traitsISaISt4pairIxxEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.33"* dereferenceable(1) %141, %"struct.std::pair.36"* %146, %"struct.std::pair.36"* dereferenceable(16) %148)
  %149 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %5
  %150 = bitcast %"class.std::vector.31"* %149 to %"struct.std::_Vector_base.32"*
  %151 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %150, i32 0, i32 0
  %152 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %151, i32 0, i32 1
  %153 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %152, align 8
  %154 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %153, i32 1
  store %"struct.std::pair.36"* %154, %"struct.std::pair.36"** %152, align 8
  store i32 -1958770780, i32* %19
  br label %159

; <label>:155:                                    ; preds = %20
  %156 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %7, align 8
  %157 = call dereferenceable(16) %"struct.std::pair.36"* @_ZSt7forwardISt4pairIxxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair.36"* dereferenceable(16) %156) #3
  %158 = load volatile %"class.std::vector.31"*, %"class.std::vector.31"** %5
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.31"* %158, %"struct.std::pair.36"* dereferenceable(16) %157)
  store i32 -365431533, i32* %19
  br label %159

; <label>:159:                                    ; preds = %155, %137, %135, %117, %89, %88, %55, %28, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIxxEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.33"* dereferenceable(1), %"struct.std::pair.36"*, %"struct.std::pair.36"* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.1195
  %7 = load i32, i32* @y.1196
  %8 = add i32 %6, -116322131
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -116322131
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1668886652, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %73
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1668886652, label %20
    i32 -840808972, label %28
    i32 538849279, label %63
    i32 -1753456882, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %73

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -840808972, i32 -1753456882
  store i32 %27, i32* %16
  br label %73

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.33"*, align 8
  %30 = alloca %"struct.std::pair.36"*, align 8
  %31 = alloca %"struct.std::pair.36"*, align 8
  store %"class.std::allocator.33"* %0, %"class.std::allocator.33"** %29, align 8
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %30, align 8
  store %"struct.std::pair.36"* %2, %"struct.std::pair.36"** %31, align 8
  %32 = load %"class.std::allocator.33"*, %"class.std::allocator.33"** %29, align 8
  %33 = bitcast %"class.std::allocator.33"* %32 to %"class.__gnu_cxx::new_allocator.34"*
  %34 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %30, align 8
  %35 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %31, align 8
  %36 = call dereferenceable(16) %"struct.std::pair.36"* @_ZSt7forwardISt4pairIxxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair.36"* dereferenceable(16) %35) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.34"* %33, %"struct.std::pair.36"* %34, %"struct.std::pair.36"* dereferenceable(16) %36)
  %37 = load i32, i32* @x.1195
  %38 = load i32, i32* @y.1196
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 538849279, i32 -1753456882
  store i32 %62, i32* %16
  br label %73

; <label>:63:                                     ; preds = %17
  ret void

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::allocator.33"*, align 8
  %66 = alloca %"struct.std::pair.36"*, align 8
  %67 = alloca %"struct.std::pair.36"*, align 8
  store %"class.std::allocator.33"* %0, %"class.std::allocator.33"** %65, align 8
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %66, align 8
  store %"struct.std::pair.36"* %2, %"struct.std::pair.36"** %67, align 8
  %68 = load %"class.std::allocator.33"*, %"class.std::allocator.33"** %65, align 8
  %69 = bitcast %"class.std::allocator.33"* %68 to %"class.__gnu_cxx::new_allocator.34"*
  %70 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %66, align 8
  %71 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %67, align 8
  %72 = call dereferenceable(16) %"struct.std::pair.36"* @_ZSt7forwardISt4pairIxxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair.36"* dereferenceable(16) %71) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.34"* %69, %"struct.std::pair.36"* %70, %"struct.std::pair.36"* dereferenceable(16) %72)
  store i32 -840808972, i32* %16
  br label %73

; <label>:73:                                     ; preds = %64, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIxxESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.31"*, %"struct.std::pair.36"* dereferenceable(16)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.31"*, align 8
  %4 = alloca %"struct.std::pair.36"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.std::pair.36"*, align 8
  %7 = alloca %"struct.std::pair.36"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.31"* %0, %"class.std::vector.31"** %3, align 8
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %4, align 8
  %10 = load %"class.std::vector.31"*, %"class.std::vector.31"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.31"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.31"* %10 to %"struct.std::_Vector_base.32"*
  %13 = load i64, i64* %5, align 8
  %14 = call %"struct.std::pair.36"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.32"* %12, i64 %13)
  store %"struct.std::pair.36"* %14, %"struct.std::pair.36"** %6, align 8
  %15 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %6, align 8
  store %"struct.std::pair.36"* %15, %"struct.std::pair.36"** %7, align 8
  %16 = bitcast %"class.std::vector.31"* %10 to %"struct.std::_Vector_base.32"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %17 to %"class.std::allocator.33"*
  %19 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %6, align 8
  %20 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector.31"* %10) #3
  %21 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %19, i64 %20
  %22 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %4, align 8
  %23 = call dereferenceable(16) %"struct.std::pair.36"* @_ZSt7forwardISt4pairIxxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair.36"* dereferenceable(16) %22) #3
  invoke void @_ZNSt16allocator_traitsISaISt4pairIxxEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.33"* dereferenceable(1) %18, %"struct.std::pair.36"* %21, %"struct.std::pair.36"* dereferenceable(16) %23)
          to label %24 unwind label %121

; <label>:24:                                     ; preds = %2
  %25 = load i32, i32* @x.1197
  %26 = load i32, i32* @y.1198
  %27 = sub i32 0, 1
  %28 = add i32 %25, %27
  %29 = sub i32 %25, 1
  %30 = mul i32 %25, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %26, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  br i1 %36, label %38, label %289

; <label>:38:                                     ; preds = %24, %289
  store %"struct.std::pair.36"* null, %"struct.std::pair.36"** %7, align 8
  %39 = bitcast %"class.std::vector.31"* %10 to %"struct.std::_Vector_base.32"*
  %40 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %39, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %40, i32 0, i32 0
  %42 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %41, align 8
  %43 = bitcast %"class.std::vector.31"* %10 to %"struct.std::_Vector_base.32"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %44, i32 0, i32 1
  %46 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %45, align 8
  %47 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %6, align 8
  %48 = bitcast %"class.std::vector.31"* %10 to %"struct.std::_Vector_base.32"*
  %49 = call dereferenceable(1) %"class.std::allocator.33"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.32"* %48) #3
  %50 = load i32, i32* @x.1197
  %51 = load i32, i32* @y.1198
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  br i1 %61, label %63, label %289

; <label>:63:                                     ; preds = %38
  %64 = invoke %"struct.std::pair.36"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt4pairIxxES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.std::pair.36"* %42, %"struct.std::pair.36"* %46, %"struct.std::pair.36"* %47, %"class.std::allocator.33"* dereferenceable(1) %49)
          to label %65 unwind label %121

; <label>:65:                                     ; preds = %63
  %66 = load i32, i32* @x.1197
  %67 = load i32, i32* @y.1198
  %68 = sub i32 %66, 1928514300
  %69 = sub i32 %68, 1
  %70 = add i32 %69, 1928514300
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 true, true
  %79 = and i1 %76, true
  %80 = and i1 %74, %78
  %81 = and i1 %77, true
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 true, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  br i1 %90, label %92, label %301

; <label>:92:                                     ; preds = %65, %301
  store %"struct.std::pair.36"* %64, %"struct.std::pair.36"** %7, align 8
  %93 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %7, align 8
  %94 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %93, i32 1
  store %"struct.std::pair.36"* %94, %"struct.std::pair.36"** %7, align 8
  %95 = load i32, i32* @x.1197
  %96 = load i32, i32* @y.1198
  %97 = sub i32 0, 1
  %98 = add i32 %95, %97
  %99 = sub i32 %95, 1
  %100 = mul i32 %95, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %96, 10
  %104 = xor i1 %102, true
  %105 = xor i1 %103, true
  %106 = xor i1 true, true
  %107 = and i1 %104, true
  %108 = and i1 %102, %106
  %109 = and i1 %105, true
  %110 = and i1 %103, %106
  %111 = or i1 %107, %108
  %112 = or i1 %109, %110
  %113 = xor i1 %111, %112
  %114 = or i1 %104, %105
  %115 = xor i1 %114, true
  %116 = or i1 true, %106
  %117 = and i1 %115, %116
  %118 = or i1 %113, %117
  %119 = or i1 %102, %103
  br i1 %118, label %120, label %301

; <label>:120:                                    ; preds = %92
  br label %194

; <label>:121:                                    ; preds = %63, %2
  %122 = landingpad { i8*, i32 }
          catch i8* null
  %123 = extractvalue { i8*, i32 } %122, 0
  store i8* %123, i8** %8, align 8
  %124 = extractvalue { i8*, i32 } %122, 1
  store i32 %124, i32* %9, align 4
  br label %125

; <label>:125:                                    ; preds = %121
  %126 = load i8*, i8** %8, align 8
  %127 = call i8* @__cxa_begin_catch(i8* %126) #3
  %128 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %7, align 8
  %129 = icmp ne %"struct.std::pair.36"* %128, null
  br i1 %129, label %142, label %130

; <label>:130:                                    ; preds = %125
  %131 = bitcast %"class.std::vector.31"* %10 to %"struct.std::_Vector_base.32"*
  %132 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %131, i32 0, i32 0
  %133 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %132 to %"class.std::allocator.33"*
  %134 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %6, align 8
  %135 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector.31"* %10) #3
  %136 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %134, i64 %135
  invoke void @_ZNSt16allocator_traitsISaISt4pairIxxEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.33"* dereferenceable(1) %133, %"struct.std::pair.36"* %136)
          to label %137 unwind label %138

; <label>:137:                                    ; preds = %130
  br label %148

; <label>:138:                                    ; preds = %152, %148, %142, %130
  %139 = landingpad { i8*, i32 }
          cleanup
  %140 = extractvalue { i8*, i32 } %139, 0
  store i8* %140, i8** %8, align 8
  %141 = extractvalue { i8*, i32 } %139, 1
  store i32 %141, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %153 unwind label %285

; <label>:142:                                    ; preds = %125
  %143 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %6, align 8
  %144 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %7, align 8
  %145 = bitcast %"class.std::vector.31"* %10 to %"struct.std::_Vector_base.32"*
  %146 = call dereferenceable(1) %"class.std::allocator.33"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.32"* %145) #3
  invoke void @_ZSt8_DestroyIPSt4pairIxxES1_EvT_S3_RSaIT0_E(%"struct.std::pair.36"* %143, %"struct.std::pair.36"* %144, %"class.std::allocator.33"* dereferenceable(1) %146)
          to label %147 unwind label %138

; <label>:147:                                    ; preds = %142
  br label %148

; <label>:148:                                    ; preds = %147, %137
  %149 = bitcast %"class.std::vector.31"* %10 to %"struct.std::_Vector_base.32"*
  %150 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %6, align 8
  %151 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.32"* %149, %"struct.std::pair.36"* %150, i64 %151)
          to label %152 unwind label %138

; <label>:152:                                    ; preds = %148
  invoke void @__cxa_rethrow() #15
          to label %288 unwind label %138

; <label>:153:                                    ; preds = %138
  %154 = load i32, i32* @x.1197
  %155 = load i32, i32* @y.1198
  %156 = sub i32 0, 1
  %157 = add i32 %154, %156
  %158 = sub i32 %154, 1
  %159 = mul i32 %154, %157
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %155, 10
  %163 = and i1 %161, %162
  %164 = xor i1 %161, %162
  %165 = or i1 %163, %164
  %166 = or i1 %161, %162
  br i1 %165, label %167, label %304

; <label>:167:                                    ; preds = %153, %304
  %168 = load i32, i32* @x.1197
  %169 = load i32, i32* @y.1198
  %170 = sub i32 0, 1
  %171 = add i32 %168, %170
  %172 = sub i32 %168, 1
  %173 = mul i32 %168, %171
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %169, 10
  %177 = xor i1 %175, true
  %178 = xor i1 %176, true
  %179 = xor i1 false, true
  %180 = and i1 %177, false
  %181 = and i1 %175, %179
  %182 = and i1 %178, false
  %183 = and i1 %176, %179
  %184 = or i1 %180, %181
  %185 = or i1 %182, %183
  %186 = xor i1 %184, %185
  %187 = or i1 %177, %178
  %188 = xor i1 %187, true
  %189 = or i1 false, %179
  %190 = and i1 %188, %189
  %191 = or i1 %186, %190
  %192 = or i1 %175, %176
  br i1 %191, label %193, label %304

; <label>:193:                                    ; preds = %167
  br label %239

; <label>:194:                                    ; preds = %120
  %195 = bitcast %"class.std::vector.31"* %10 to %"struct.std::_Vector_base.32"*
  %196 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %195, i32 0, i32 0
  %197 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %196, i32 0, i32 0
  %198 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %197, align 8
  %199 = bitcast %"class.std::vector.31"* %10 to %"struct.std::_Vector_base.32"*
  %200 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %199, i32 0, i32 0
  %201 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %200, i32 0, i32 1
  %202 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %201, align 8
  %203 = bitcast %"class.std::vector.31"* %10 to %"struct.std::_Vector_base.32"*
  %204 = call dereferenceable(1) %"class.std::allocator.33"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.32"* %203) #3
  call void @_ZSt8_DestroyIPSt4pairIxxES1_EvT_S3_RSaIT0_E(%"struct.std::pair.36"* %198, %"struct.std::pair.36"* %202, %"class.std::allocator.33"* dereferenceable(1) %204)
  %205 = bitcast %"class.std::vector.31"* %10 to %"struct.std::_Vector_base.32"*
  %206 = bitcast %"class.std::vector.31"* %10 to %"struct.std::_Vector_base.32"*
  %207 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %206, i32 0, i32 0
  %208 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %207, i32 0, i32 0
  %209 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %208, align 8
  %210 = bitcast %"class.std::vector.31"* %10 to %"struct.std::_Vector_base.32"*
  %211 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %210, i32 0, i32 0
  %212 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %211, i32 0, i32 2
  %213 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %212, align 8
  %214 = bitcast %"class.std::vector.31"* %10 to %"struct.std::_Vector_base.32"*
  %215 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %214, i32 0, i32 0
  %216 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %215, i32 0, i32 0
  %217 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %216, align 8
  %218 = ptrtoint %"struct.std::pair.36"* %213 to i64
  %219 = ptrtoint %"struct.std::pair.36"* %217 to i64
  %220 = sub i64 %218, 5897533548246841372
  %221 = sub i64 %220, %219
  %222 = add i64 %221, 5897533548246841372
  %223 = sub i64 %218, %219
  %224 = sdiv exact i64 %222, 16
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.32"* %205, %"struct.std::pair.36"* %209, i64 %224)
  %225 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %6, align 8
  %226 = bitcast %"class.std::vector.31"* %10 to %"struct.std::_Vector_base.32"*
  %227 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %226, i32 0, i32 0
  %228 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %227, i32 0, i32 0
  store %"struct.std::pair.36"* %225, %"struct.std::pair.36"** %228, align 8
  %229 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %7, align 8
  %230 = bitcast %"class.std::vector.31"* %10 to %"struct.std::_Vector_base.32"*
  %231 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %230, i32 0, i32 0
  %232 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %231, i32 0, i32 1
  store %"struct.std::pair.36"* %229, %"struct.std::pair.36"** %232, align 8
  %233 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %6, align 8
  %234 = load i64, i64* %5, align 8
  %235 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %233, i64 %234
  %236 = bitcast %"class.std::vector.31"* %10 to %"struct.std::_Vector_base.32"*
  %237 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %236, i32 0, i32 0
  %238 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %237, i32 0, i32 2
  store %"struct.std::pair.36"* %235, %"struct.std::pair.36"** %238, align 8
  ret void

; <label>:239:                                    ; preds = %193
  %240 = load i32, i32* @x.1197
  %241 = load i32, i32* @y.1198
  %242 = sub i32 %240, 100204257
  %243 = sub i32 %242, 1
  %244 = add i32 %243, 100204257
  %245 = sub i32 %240, 1
  %246 = mul i32 %240, %244
  %247 = urem i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %241, 10
  %250 = and i1 %248, %249
  %251 = xor i1 %248, %249
  %252 = or i1 %250, %251
  %253 = or i1 %248, %249
  br i1 %252, label %254, label %305

; <label>:254:                                    ; preds = %239, %305
  %255 = load i8*, i8** %8, align 8
  %256 = load i32, i32* %9, align 4
  %257 = insertvalue { i8*, i32 } undef, i8* %255, 0
  %258 = insertvalue { i8*, i32 } %257, i32 %256, 1
  %259 = load i32, i32* @x.1197
  %260 = load i32, i32* @y.1198
  %261 = sub i32 0, 1
  %262 = add i32 %259, %261
  %263 = sub i32 %259, 1
  %264 = mul i32 %259, %262
  %265 = urem i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %260, 10
  %268 = xor i1 %266, true
  %269 = xor i1 %267, true
  %270 = xor i1 true, true
  %271 = and i1 %268, true
  %272 = and i1 %266, %270
  %273 = and i1 %269, true
  %274 = and i1 %267, %270
  %275 = or i1 %271, %272
  %276 = or i1 %273, %274
  %277 = xor i1 %275, %276
  %278 = or i1 %268, %269
  %279 = xor i1 %278, true
  %280 = or i1 true, %270
  %281 = and i1 %279, %280
  %282 = or i1 %277, %281
  %283 = or i1 %266, %267
  br i1 %282, label %284, label %305

; <label>:284:                                    ; preds = %254
  resume { i8*, i32 } %258

; <label>:285:                                    ; preds = %138
  %286 = landingpad { i8*, i32 }
          catch i8* null
  %287 = extractvalue { i8*, i32 } %286, 0
  call void @__clang_call_terminate(i8* %287) #12
  unreachable

; <label>:288:                                    ; preds = %152
  unreachable

; <label>:289:                                    ; preds = %38, %24
  store %"struct.std::pair.36"* null, %"struct.std::pair.36"** %7, align 8
  %290 = bitcast %"class.std::vector.31"* %10 to %"struct.std::_Vector_base.32"*
  %291 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %290, i32 0, i32 0
  %292 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %291, i32 0, i32 0
  %293 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %292, align 8
  %294 = bitcast %"class.std::vector.31"* %10 to %"struct.std::_Vector_base.32"*
  %295 = getelementptr inbounds %"struct.std::_Vector_base.32", %"struct.std::_Vector_base.32"* %294, i32 0, i32 0
  %296 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %295, i32 0, i32 1
  %297 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %296, align 8
  %298 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %6, align 8
  %299 = bitcast %"class.std::vector.31"* %10 to %"struct.std::_Vector_base.32"*
  %300 = call dereferenceable(1) %"class.std::allocator.33"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.32"* %299) #3
  br label %38

; <label>:301:                                    ; preds = %92, %65
  store %"struct.std::pair.36"* %64, %"struct.std::pair.36"** %7, align 8
  %302 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %7, align 8
  %303 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %302, i32 1
  store %"struct.std::pair.36"* %303, %"struct.std::pair.36"** %7, align 8
  br label %92

; <label>:304:                                    ; preds = %167, %153
  br label %167

; <label>:305:                                    ; preds = %254, %239
  %306 = load i8*, i8** %8, align 8
  %307 = load i32, i32* %9, align 4
  %308 = insertvalue { i8*, i32 } undef, i8* %306, 0
  %309 = insertvalue { i8*, i32 } %308, i32 %307, 1
  br label %254
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.34"*, %"struct.std::pair.36"*, %"struct.std::pair.36"* dereferenceable(16)) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.34"*, align 8
  %5 = alloca %"struct.std::pair.36"*, align 8
  %6 = alloca %"struct.std::pair.36"*, align 8
  store %"class.__gnu_cxx::new_allocator.34"* %0, %"class.__gnu_cxx::new_allocator.34"** %4, align 8
  store %"struct.std::pair.36"* %1, %"struct.std::pair.36"** %5, align 8
  store %"struct.std::pair.36"* %2, %"struct.std::pair.36"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.34"*, %"class.__gnu_cxx::new_allocator.34"** %4, align 8
  %8 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %5, align 8
  %9 = bitcast %"struct.std::pair.36"* %8 to i8*
  %10 = bitcast i8* %9 to %"struct.std::pair.36"*
  %11 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %6, align 8
  %12 = call dereferenceable(16) %"struct.std::pair.36"* @_ZSt7forwardISt4pairIxxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair.36"* dereferenceable(16) %11) #3
  %13 = bitcast %"struct.std::pair.36"* %10 to i8*
  %14 = bitcast %"struct.std::pair.36"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 16, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEEC2Ev(%"class.__gnu_cxx::new_allocator.24"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.1201
  %5 = load i32, i32* @y.1202
  %6 = sub i32 %4, -388348689
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -388348689
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1875777311, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %48
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1875777311, label %18
    i32 1948033226, label %26
    i32 1337690067, label %44
    i32 -655636141, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %48

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1948033226, i32 -655636141
  store i32 %25, i32* %14
  br label %48

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.24"*, align 8
  store %"class.__gnu_cxx::new_allocator.24"* %0, %"class.__gnu_cxx::new_allocator.24"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.24"*, %"class.__gnu_cxx::new_allocator.24"** %27, align 8
  %29 = load i32, i32* @x.1201
  %30 = load i32, i32* @y.1202
  %31 = sub i32 %29, 1488592430
  %32 = sub i32 %31, 1
  %33 = add i32 %32, 1488592430
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 1337690067, i32 -655636141
  store i32 %43, i32* %14
  br label %48

; <label>:44:                                     ; preds = %15
  ret void

; <label>:45:                                     ; preds = %15
  %46 = alloca %"class.__gnu_cxx::new_allocator.24"*, align 8
  store %"class.__gnu_cxx::new_allocator.24"* %0, %"class.__gnu_cxx::new_allocator.24"** %46, align 8
  %47 = load %"class.__gnu_cxx::new_allocator.24"*, %"class.__gnu_cxx::new_allocator.24"** %46, align 8
  store i32 1948033226, i32* %14
  br label %48

; <label>:48:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEED2Ev(%"class.__gnu_cxx::new_allocator.24"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.1203
  %5 = load i32, i32* @y.1204
  %6 = sub i32 %4, -636206829
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -636206829
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 796501799, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 796501799, label %18
    i32 1724950778, label %26
    i32 1010344980, label %56
    i32 1516162514, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1724950778, i32 1516162514
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.24"*, align 8
  store %"class.__gnu_cxx::new_allocator.24"* %0, %"class.__gnu_cxx::new_allocator.24"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.24"*, %"class.__gnu_cxx::new_allocator.24"** %27, align 8
  %29 = load i32, i32* @x.1203
  %30 = load i32, i32* @y.1204
  %31 = add i32 %29, -1873991491
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, -1873991491
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 1010344980, i32 1516162514
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.24"*, align 8
  store %"class.__gnu_cxx::new_allocator.24"* %0, %"class.__gnu_cxx::new_allocator.24"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.24"*, %"class.__gnu_cxx::new_allocator.24"** %58, align 8
  store i32 1724950778, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EEC2EmRKS4_(%"struct.std::_Vector_base.22"*, i64, %"class.std::allocator.23"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.1205
  %5 = load i32, i32* @y.1206
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %5, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %64

; <label>:29:                                     ; preds = %3, %64
  %30 = alloca %"struct.std::_Vector_base.22"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"class.std::allocator.23"*, align 8
  %33 = alloca i8*
  %34 = alloca i32
  store %"struct.std::_Vector_base.22"* %0, %"struct.std::_Vector_base.22"** %30, align 8
  store i64 %1, i64* %31, align 8
  store %"class.std::allocator.23"* %2, %"class.std::allocator.23"** %32, align 8
  %35 = load %"struct.std::_Vector_base.22"*, %"struct.std::_Vector_base.22"** %30, align 8
  %36 = getelementptr inbounds %"struct.std::_Vector_base.22", %"struct.std::_Vector_base.22"* %35, i32 0, i32 0
  %37 = load %"class.std::allocator.23"*, %"class.std::allocator.23"** %32, align 8
  call void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE12_Vector_implC2ERKS4_(%"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %36, %"class.std::allocator.23"* dereferenceable(1) %37) #3
  %38 = load i64, i64* %31, align 8
  %39 = load i32, i32* @x.1205
  %40 = load i32, i32* @y.1206
  %41 = sub i32 %39, 680100219
  %42 = sub i32 %41, 1
  %43 = add i32 %42, 680100219
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  br i1 %51, label %53, label %64

; <label>:53:                                     ; preds = %29
  invoke void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE17_M_create_storageEm(%"struct.std::_Vector_base.22"* %35, i64 %38)
          to label %54 unwind label %55

; <label>:54:                                     ; preds = %53
  ret void

; <label>:55:                                     ; preds = %53
  %56 = landingpad { i8*, i32 }
          cleanup
  %57 = extractvalue { i8*, i32 } %56, 0
  store i8* %57, i8** %33, align 8
  %58 = extractvalue { i8*, i32 } %56, 1
  store i32 %58, i32* %34, align 4
  call void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %36) #3
  br label %59

; <label>:59:                                     ; preds = %55
  %60 = load i8*, i8** %33, align 8
  %61 = load i32, i32* %34, align 4
  %62 = insertvalue { i8*, i32 } undef, i8* %60, 0
  %63 = insertvalue { i8*, i32 } %62, i32 %61, 1
  resume { i8*, i32 } %63

; <label>:64:                                     ; preds = %29, %3
  %65 = alloca %"struct.std::_Vector_base.22"*, align 8
  %66 = alloca i64, align 8
  %67 = alloca %"class.std::allocator.23"*, align 8
  %68 = alloca i8*
  %69 = alloca i32
  store %"struct.std::_Vector_base.22"* %0, %"struct.std::_Vector_base.22"** %65, align 8
  store i64 %1, i64* %66, align 8
  store %"class.std::allocator.23"* %2, %"class.std::allocator.23"** %67, align 8
  %70 = load %"struct.std::_Vector_base.22"*, %"struct.std::_Vector_base.22"** %65, align 8
  %71 = getelementptr inbounds %"struct.std::_Vector_base.22", %"struct.std::_Vector_base.22"* %70, i32 0, i32 0
  %72 = load %"class.std::allocator.23"*, %"class.std::allocator.23"** %67, align 8
  call void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE12_Vector_implC2ERKS4_(%"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %71, %"class.std::allocator.23"* dereferenceable(1) %72) #3
  %73 = load i64, i64* %66, align 8
  br label %29
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_I4EdgeSaIS0_EESaIS2_EE21_M_default_initializeEm(%"class.std::vector.21"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1207
  %6 = load i32, i32* @y.1208
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -226134085, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -226134085, label %18
    i32 -1436893716, label %26
    i32 -902360070, label %56
    i32 1195797097, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1436893716, i32 1195797097
  store i32 %25, i32* %14
  br label %72

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.21"*, align 8
  %28 = alloca i64, align 8
  store %"class.std::vector.21"* %0, %"class.std::vector.21"** %27, align 8
  store i64 %1, i64* %28, align 8
  %29 = load %"class.std::vector.21"*, %"class.std::vector.21"** %27, align 8
  %30 = bitcast %"class.std::vector.21"* %29 to %"struct.std::_Vector_base.22"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.22", %"struct.std::_Vector_base.22"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %31, i32 0, i32 0
  %33 = load %"class.std::vector.26"*, %"class.std::vector.26"** %32, align 8
  %34 = load i64, i64* %28, align 8
  %35 = bitcast %"class.std::vector.21"* %29 to %"struct.std::_Vector_base.22"*
  %36 = call dereferenceable(1) %"class.std::allocator.23"* @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.22"* %35) #3
  %37 = call %"class.std::vector.26"* @_ZSt27__uninitialized_default_n_aIPSt6vectorI4EdgeSaIS1_EEmS3_ET_S5_T0_RSaIT1_E(%"class.std::vector.26"* %33, i64 %34, %"class.std::allocator.23"* dereferenceable(1) %36)
  %38 = bitcast %"class.std::vector.21"* %29 to %"struct.std::_Vector_base.22"*
  %39 = getelementptr inbounds %"struct.std::_Vector_base.22", %"struct.std::_Vector_base.22"* %38, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %39, i32 0, i32 1
  store %"class.std::vector.26"* %37, %"class.std::vector.26"** %40, align 8
  %41 = load i32, i32* @x.1207
  %42 = load i32, i32* @y.1208
  %43 = add i32 %41, -2223117
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -2223117
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -902360070, i32 1195797097
  store i32 %55, i32* %14
  br label %72

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.std::vector.21"*, align 8
  %59 = alloca i64, align 8
  store %"class.std::vector.21"* %0, %"class.std::vector.21"** %58, align 8
  store i64 %1, i64* %59, align 8
  %60 = load %"class.std::vector.21"*, %"class.std::vector.21"** %58, align 8
  %61 = bitcast %"class.std::vector.21"* %60 to %"struct.std::_Vector_base.22"*
  %62 = getelementptr inbounds %"struct.std::_Vector_base.22", %"struct.std::_Vector_base.22"* %61, i32 0, i32 0
  %63 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %62, i32 0, i32 0
  %64 = load %"class.std::vector.26"*, %"class.std::vector.26"** %63, align 8
  %65 = load i64, i64* %59, align 8
  %66 = bitcast %"class.std::vector.21"* %60 to %"struct.std::_Vector_base.22"*
  %67 = call dereferenceable(1) %"class.std::allocator.23"* @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.22"* %66) #3
  %68 = call %"class.std::vector.26"* @_ZSt27__uninitialized_default_n_aIPSt6vectorI4EdgeSaIS1_EEmS3_ET_S5_T0_RSaIT1_E(%"class.std::vector.26"* %64, i64 %65, %"class.std::allocator.23"* dereferenceable(1) %67)
  %69 = bitcast %"class.std::vector.21"* %60 to %"struct.std::_Vector_base.22"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base.22", %"struct.std::_Vector_base.22"* %69, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %70, i32 0, i32 1
  store %"class.std::vector.26"* %68, %"class.std::vector.26"** %71, align 8
  store i32 -1436893716, i32* %14
  br label %72

; <label>:72:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EED2Ev(%"struct.std::_Vector_base.22"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.22"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.22"* %0, %"struct.std::_Vector_base.22"** %2, align 8
  %5 = load %"struct.std::_Vector_base.22"*, %"struct.std::_Vector_base.22"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.22", %"struct.std::_Vector_base.22"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::vector.26"*, %"class.std::vector.26"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.22", %"struct.std::_Vector_base.22"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::vector.26"*, %"class.std::vector.26"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.22", %"struct.std::_Vector_base.22"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::vector.26"*, %"class.std::vector.26"** %13, align 8
  %15 = ptrtoint %"class.std::vector.26"* %11 to i64
  %16 = ptrtoint %"class.std::vector.26"* %14 to i64
  %17 = sub i64 0, %16
  %18 = add i64 %15, %17
  %19 = sub i64 %15, %16
  %20 = sdiv exact i64 %18, 24
  invoke void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE13_M_deallocateEPS3_m(%"struct.std::_Vector_base.22"* %5, %"class.std::vector.26"* %8, i64 %20)
          to label %21 unwind label %23

; <label>:21:                                     ; preds = %1
  %22 = getelementptr inbounds %"struct.std::_Vector_base.22", %"struct.std::_Vector_base.22"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %22) #3
  ret void

; <label>:23:                                     ; preds = %1
  %24 = load i32, i32* @x.1209
  %25 = load i32, i32* @y.1210
  %26 = add i32 %24, 1823994184
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, 1823994184
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  br i1 %36, label %38, label %72

; <label>:38:                                     ; preds = %23, %72
  %39 = landingpad { i8*, i32 }
          catch i8* null
  %40 = extractvalue { i8*, i32 } %39, 0
  store i8* %40, i8** %3, align 8
  %41 = extractvalue { i8*, i32 } %39, 1
  store i32 %41, i32* %4, align 4
  %42 = getelementptr inbounds %"struct.std::_Vector_base.22", %"struct.std::_Vector_base.22"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %42) #3
  %43 = load i32, i32* @x.1209
  %44 = load i32, i32* @y.1210
  %45 = add i32 %43, 2044713748
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 2044713748
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  br i1 %67, label %69, label %72

; <label>:69:                                     ; preds = %38
  br label %70

; <label>:70:                                     ; preds = %69
  %71 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %71) #12
  unreachable

; <label>:72:                                     ; preds = %38, %23
  %73 = landingpad { i8*, i32 }
          catch i8* null
  %74 = extractvalue { i8*, i32 } %73, 0
  store i8* %74, i8** %3, align 8
  %75 = extractvalue { i8*, i32 } %73, 1
  store i32 %75, i32* %4, align 4
  %76 = getelementptr inbounds %"struct.std::_Vector_base.22", %"struct.std::_Vector_base.22"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %76) #3
  br label %38
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE12_Vector_implC2ERKS4_(%"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"*, %"class.std::allocator.23"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1211
  %6 = load i32, i32* @y.1212
  %7 = add i32 %5, -1222697327
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1222697327
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1737246575, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %73
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1737246575, label %19
    i32 -579577924, label %39
    i32 1194402157, label %63
    i32 1701249328, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %73

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -579577924, i32 1701249328
  store i32 %38, i32* %15
  br label %73

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"*, align 8
  %41 = alloca %"class.std::allocator.23"*, align 8
  store %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"** %40, align 8
  store %"class.std::allocator.23"* %1, %"class.std::allocator.23"** %41, align 8
  %42 = load %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"** %40, align 8
  %43 = bitcast %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %42 to %"class.std::allocator.23"*
  %44 = load %"class.std::allocator.23"*, %"class.std::allocator.23"** %41, align 8
  call void @_ZNSaISt6vectorI4EdgeSaIS0_EEEC2ERKS3_(%"class.std::allocator.23"* %43, %"class.std::allocator.23"* dereferenceable(1) %44) #3
  %45 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %42, i32 0, i32 0
  store %"class.std::vector.26"* null, %"class.std::vector.26"** %45, align 8
  %46 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %42, i32 0, i32 1
  store %"class.std::vector.26"* null, %"class.std::vector.26"** %46, align 8
  %47 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %42, i32 0, i32 2
  store %"class.std::vector.26"* null, %"class.std::vector.26"** %47, align 8
  %48 = load i32, i32* @x.1211
  %49 = load i32, i32* @y.1212
  %50 = sub i32 %48, -2007858398
  %51 = sub i32 %50, 1
  %52 = add i32 %51, -2007858398
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 1194402157, i32 1701249328
  store i32 %62, i32* %15
  br label %73

; <label>:63:                                     ; preds = %16
  ret void

; <label>:64:                                     ; preds = %16
  %65 = alloca %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"*, align 8
  %66 = alloca %"class.std::allocator.23"*, align 8
  store %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"** %65, align 8
  store %"class.std::allocator.23"* %1, %"class.std::allocator.23"** %66, align 8
  %67 = load %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"** %65, align 8
  %68 = bitcast %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %67 to %"class.std::allocator.23"*
  %69 = load %"class.std::allocator.23"*, %"class.std::allocator.23"** %66, align 8
  call void @_ZNSaISt6vectorI4EdgeSaIS0_EEEC2ERKS3_(%"class.std::allocator.23"* %68, %"class.std::allocator.23"* dereferenceable(1) %69) #3
  %70 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %67, i32 0, i32 0
  store %"class.std::vector.26"* null, %"class.std::vector.26"** %70, align 8
  %71 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %67, i32 0, i32 1
  store %"class.std::vector.26"* null, %"class.std::vector.26"** %71, align 8
  %72 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %67, i32 0, i32 2
  store %"class.std::vector.26"* null, %"class.std::vector.26"** %72, align 8
  store i32 -579577924, i32* %15
  br label %73

; <label>:73:                                     ; preds = %64, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE17_M_create_storageEm(%"struct.std::_Vector_base.22"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.22"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.22"* %0, %"struct.std::_Vector_base.22"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.22"*, %"struct.std::_Vector_base.22"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"class.std::vector.26"* @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE11_M_allocateEm(%"struct.std::_Vector_base.22"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.22", %"struct.std::_Vector_base.22"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %8, i32 0, i32 0
  store %"class.std::vector.26"* %7, %"class.std::vector.26"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.22", %"struct.std::_Vector_base.22"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"class.std::vector.26"*, %"class.std::vector.26"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.22", %"struct.std::_Vector_base.22"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %13, i32 0, i32 1
  store %"class.std::vector.26"* %12, %"class.std::vector.26"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.22", %"struct.std::_Vector_base.22"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"class.std::vector.26"*, %"class.std::vector.26"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"class.std::vector.26", %"class.std::vector.26"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.22", %"struct.std::_Vector_base.22"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %20, i32 0, i32 2
  store %"class.std::vector.26"* %19, %"class.std::vector.26"** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %3 to %"class.std::allocator.23"*
  call void @_ZNSaISt6vectorI4EdgeSaIS0_EEED2Ev(%"class.std::allocator.23"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorI4EdgeSaIS0_EEEC2ERKS3_(%"class.std::allocator.23"*, %"class.std::allocator.23"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.23"*, align 8
  %4 = alloca %"class.std::allocator.23"*, align 8
  store %"class.std::allocator.23"* %0, %"class.std::allocator.23"** %3, align 8
  store %"class.std::allocator.23"* %1, %"class.std::allocator.23"** %4, align 8
  %5 = load %"class.std::allocator.23"*, %"class.std::allocator.23"** %3, align 8
  %6 = bitcast %"class.std::allocator.23"* %5 to %"class.__gnu_cxx::new_allocator.24"*
  %7 = load %"class.std::allocator.23"*, %"class.std::allocator.23"** %4, align 8
  %8 = bitcast %"class.std::allocator.23"* %7 to %"class.__gnu_cxx::new_allocator.24"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEEC2ERKS5_(%"class.__gnu_cxx::new_allocator.24"* %6, %"class.__gnu_cxx::new_allocator.24"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEEC2ERKS5_(%"class.__gnu_cxx::new_allocator.24"*, %"class.__gnu_cxx::new_allocator.24"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.24"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.24"*, align 8
  store %"class.__gnu_cxx::new_allocator.24"* %0, %"class.__gnu_cxx::new_allocator.24"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.24"* %1, %"class.__gnu_cxx::new_allocator.24"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.24"*, %"class.__gnu_cxx::new_allocator.24"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.26"* @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE11_M_allocateEm(%"struct.std::_Vector_base.22"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base.22"*
  %5 = alloca %"struct.std::_Vector_base.22"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.22"* %0, %"struct.std::_Vector_base.22"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.22"*, %"struct.std::_Vector_base.22"** %5, align 8
  store %"struct.std::_Vector_base.22"* %7, %"struct.std::_Vector_base.22"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 -796802581, i32* %9
  %10 = alloca %"class.std::vector.26"*
  br label %11

; <label>:11:                                     ; preds = %2, %27
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 -796802581, label %14
    i32 1081969208, label %18
    i32 -692007703, label %24
    i32 -1153495641, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %27

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 1081969208, i32 -692007703
  store i32 %17, i32* %9
  br label %27

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base.22"*, %"struct.std::_Vector_base.22"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base.22", %"struct.std::_Vector_base.22"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %20 to %"class.std::allocator.23"*
  %22 = load i64, i64* %6, align 8
  %23 = call %"class.std::vector.26"* @_ZNSt16allocator_traitsISaISt6vectorI4EdgeSaIS1_EEEE8allocateERS4_m(%"class.std::allocator.23"* dereferenceable(1) %21, i64 %22)
  store i32 -1153495641, i32* %9
  store %"class.std::vector.26"* %23, %"class.std::vector.26"** %10
  br label %27

; <label>:24:                                     ; preds = %11
  store i32 -1153495641, i32* %9
  store %"class.std::vector.26"* null, %"class.std::vector.26"** %10
  br label %27

; <label>:25:                                     ; preds = %11
  %26 = load %"class.std::vector.26"*, %"class.std::vector.26"** %10
  ret %"class.std::vector.26"* %26

; <label>:27:                                     ; preds = %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.26"* @_ZNSt16allocator_traitsISaISt6vectorI4EdgeSaIS1_EEEE8allocateERS4_m(%"class.std::allocator.23"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.23"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.23"* %0, %"class.std::allocator.23"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.23"*, %"class.std::allocator.23"** %3, align 8
  %6 = bitcast %"class.std::allocator.23"* %5 to %"class.__gnu_cxx::new_allocator.24"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::vector.26"* @_ZN9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.24"* %6, i64 %7, i8* null)
  ret %"class.std::vector.26"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.26"* @_ZN9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.24"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.1225
  %9 = load i32, i32* @y.1226
  %10 = add i32 %8, -587131283
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -587131283
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -1234756973, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %72
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1234756973, label %22
    i32 1992464879, label %30
    i32 253286509, label %54
    i32 -2139368086, label %57
    i32 1530615139, label %58
    i32 -845137188, label %64
  ]

; <label>:21:                                     ; preds = %19
  br label %72

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 1992464879, i32 -845137188
  store i32 %29, i32* %18
  br label %72

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.__gnu_cxx::new_allocator.24"*, align 8
  %32 = alloca i64, align 8
  store i64* %32, i64** %5
  %33 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.24"* %0, %"class.__gnu_cxx::new_allocator.24"** %31, align 8
  %34 = load volatile i64*, i64** %5
  store i64 %1, i64* %34, align 8
  store i8* %2, i8** %33, align 8
  %35 = load %"class.__gnu_cxx::new_allocator.24"*, %"class.__gnu_cxx::new_allocator.24"** %31, align 8
  %36 = load volatile i64*, i64** %5
  %37 = load i64, i64* %36, align 8
  %38 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.24"* %35) #3
  %39 = icmp ugt i64 %37, %38
  store i1 %39, i1* %4
  %40 = load i32, i32* @x.1225
  %41 = load i32, i32* @y.1226
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 253286509, i32 -845137188
  store i32 %53, i32* %18
  br label %72

; <label>:54:                                     ; preds = %19
  %55 = load volatile i1, i1* %4
  %56 = select i1 %55, i32 -2139368086, i32 1530615139
  store i32 %56, i32* %18
  br label %72

; <label>:57:                                     ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #15
  unreachable

; <label>:58:                                     ; preds = %19
  %59 = load volatile i64*, i64** %5
  %60 = load i64, i64* %59, align 8
  %61 = mul i64 %60, 24
  %62 = call i8* @_Znwm(i64 %61)
  %63 = bitcast i8* %62 to %"class.std::vector.26"*
  ret %"class.std::vector.26"* %63

; <label>:64:                                     ; preds = %19
  %65 = alloca %"class.__gnu_cxx::new_allocator.24"*, align 8
  %66 = alloca i64, align 8
  %67 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.24"* %0, %"class.__gnu_cxx::new_allocator.24"** %65, align 8
  store i64 %1, i64* %66, align 8
  store i8* %2, i8** %67, align 8
  %68 = load %"class.__gnu_cxx::new_allocator.24"*, %"class.__gnu_cxx::new_allocator.24"** %65, align 8
  %69 = load i64, i64* %66, align 8
  %70 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.24"* %68) #3
  %71 = icmp ugt i64 %69, %70
  store i32 1992464879, i32* %18
  br label %72

; <label>:72:                                     ; preds = %64, %54, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.24"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.24"*, align 8
  store %"class.__gnu_cxx::new_allocator.24"* %0, %"class.__gnu_cxx::new_allocator.24"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.24"*, %"class.__gnu_cxx::new_allocator.24"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.26"* @_ZSt27__uninitialized_default_n_aIPSt6vectorI4EdgeSaIS1_EEmS3_ET_S5_T0_RSaIT1_E(%"class.std::vector.26"*, i64, %"class.std::allocator.23"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.26"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.23"*, align 8
  store %"class.std::vector.26"* %0, %"class.std::vector.26"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.23"* %2, %"class.std::allocator.23"** %6, align 8
  %7 = load %"class.std::vector.26"*, %"class.std::vector.26"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call %"class.std::vector.26"* @_ZSt25__uninitialized_default_nIPSt6vectorI4EdgeSaIS1_EEmET_S5_T0_(%"class.std::vector.26"* %7, i64 %8)
  ret %"class.std::vector.26"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.23"* @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.22"*) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.23"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1231
  %6 = load i32, i32* @y.1232
  %7 = add i32 %5, 965443912
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 965443912
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1140126154, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1140126154, label %19
    i32 -224442032, label %27
    i32 272216576, label %58
    i32 718367716, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -224442032, i32 718367716
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base.22"*, align 8
  store %"struct.std::_Vector_base.22"* %0, %"struct.std::_Vector_base.22"** %28, align 8
  %29 = load %"struct.std::_Vector_base.22"*, %"struct.std::_Vector_base.22"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Vector_base.22", %"struct.std::_Vector_base.22"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %30 to %"class.std::allocator.23"*
  store %"class.std::allocator.23"* %31, %"class.std::allocator.23"** %2
  %32 = load i32, i32* @x.1231
  %33 = load i32, i32* @y.1232
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 272216576, i32 718367716
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"class.std::allocator.23"*, %"class.std::allocator.23"** %2
  ret %"class.std::allocator.23"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"struct.std::_Vector_base.22"*, align 8
  store %"struct.std::_Vector_base.22"* %0, %"struct.std::_Vector_base.22"** %61, align 8
  %62 = load %"struct.std::_Vector_base.22"*, %"struct.std::_Vector_base.22"** %61, align 8
  %63 = getelementptr inbounds %"struct.std::_Vector_base.22", %"struct.std::_Vector_base.22"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %63 to %"class.std::allocator.23"*
  store i32 -224442032, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.26"* @_ZSt25__uninitialized_default_nIPSt6vectorI4EdgeSaIS1_EEmET_S5_T0_(%"class.std::vector.26"*, i64) #0 comdat {
  %3 = alloca %"class.std::vector.26"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.1233
  %7 = load i32, i32* @y.1234
  %8 = add i32 %6, -688703780
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -688703780
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -68164098, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %82
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -68164098, label %20
    i32 -1562207970, label %40
    i32 2144565636, label %73
    i32 -134966234, label %75
  ]

; <label>:19:                                     ; preds = %17
  br label %82

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1562207970, i32 -134966234
  store i32 %39, i32* %16
  br label %82

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector.26"*, align 8
  %42 = alloca i64, align 8
  %43 = alloca i8, align 1
  store %"class.std::vector.26"* %0, %"class.std::vector.26"** %41, align 8
  store i64 %1, i64* %42, align 8
  store i8 1, i8* %43, align 1
  %44 = load %"class.std::vector.26"*, %"class.std::vector.26"** %41, align 8
  %45 = load i64, i64* %42, align 8
  %46 = call %"class.std::vector.26"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorI4EdgeSaIS3_EEmEET_S7_T0_(%"class.std::vector.26"* %44, i64 %45)
  store %"class.std::vector.26"* %46, %"class.std::vector.26"** %3
  %47 = load i32, i32* @x.1233
  %48 = load i32, i32* @y.1234
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 2144565636, i32 -134966234
  store i32 %72, i32* %16
  br label %82

; <label>:73:                                     ; preds = %17
  %74 = load volatile %"class.std::vector.26"*, %"class.std::vector.26"** %3
  ret %"class.std::vector.26"* %74

; <label>:75:                                     ; preds = %17
  %76 = alloca %"class.std::vector.26"*, align 8
  %77 = alloca i64, align 8
  %78 = alloca i8, align 1
  store %"class.std::vector.26"* %0, %"class.std::vector.26"** %76, align 8
  store i64 %1, i64* %77, align 8
  store i8 1, i8* %78, align 1
  %79 = load %"class.std::vector.26"*, %"class.std::vector.26"** %76, align 8
  %80 = load i64, i64* %77, align 8
  %81 = call %"class.std::vector.26"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorI4EdgeSaIS3_EEmEET_S7_T0_(%"class.std::vector.26"* %79, i64 %80)
  store i32 -1562207970, i32* %16
  br label %82

; <label>:82:                                     ; preds = %75, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.26"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorI4EdgeSaIS3_EEmEET_S7_T0_(%"class.std::vector.26"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.1235
  %4 = load i32, i32* @y.1236
  %5 = sub i32 %3, -1211846768
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -1211846768
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %311

; <label>:17:                                     ; preds = %2, %311
  %18 = alloca %"class.std::vector.26"*, align 8
  %19 = alloca i64, align 8
  %20 = alloca %"class.std::vector.26"*, align 8
  %21 = alloca i8*
  %22 = alloca i32
  store %"class.std::vector.26"* %0, %"class.std::vector.26"** %18, align 8
  store i64 %1, i64* %19, align 8
  %23 = load %"class.std::vector.26"*, %"class.std::vector.26"** %18, align 8
  store %"class.std::vector.26"* %23, %"class.std::vector.26"** %20, align 8
  %24 = load i32, i32* @x.1235
  %25 = load i32, i32* @y.1236
  %26 = add i32 %24, 958182772
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, 958182772
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 true, true
  %37 = and i1 %34, true
  %38 = and i1 %32, %36
  %39 = and i1 %35, true
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 true, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  br i1 %48, label %50, label %311

; <label>:50:                                     ; preds = %17
  br label %51

; <label>:51:                                     ; preds = %117, %50
  %52 = load i64, i64* %19, align 8
  %53 = icmp ugt i64 %52, 0
  br i1 %53, label %54, label %170

; <label>:54:                                     ; preds = %51
  %55 = load %"class.std::vector.26"*, %"class.std::vector.26"** %20, align 8
  %56 = call %"class.std::vector.26"* @_ZSt11__addressofISt6vectorI4EdgeSaIS1_EEEPT_RS4_(%"class.std::vector.26"* dereferenceable(24) %55) #3
  invoke void @_ZSt10_ConstructISt6vectorI4EdgeSaIS1_EEJEEvPT_DpOT0_(%"class.std::vector.26"* %56)
          to label %57 unwind label %118

; <label>:57:                                     ; preds = %54
  br label %58

; <label>:58:                                     ; preds = %57
  %59 = load i32, i32* @x.1235
  %60 = load i32, i32* @y.1236
  %61 = sub i32 %59, -1329136147
  %62 = sub i32 %61, 1
  %63 = add i32 %62, -1329136147
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 true, true
  %72 = and i1 %69, true
  %73 = and i1 %67, %71
  %74 = and i1 %70, true
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 true, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  br i1 %83, label %85, label %318

; <label>:85:                                     ; preds = %58, %318
  %86 = load i64, i64* %19, align 8
  %87 = sub i64 0, -1
  %88 = sub i64 %86, %87
  %89 = add i64 %86, -1
  store i64 %88, i64* %19, align 8
  %90 = load %"class.std::vector.26"*, %"class.std::vector.26"** %20, align 8
  %91 = getelementptr inbounds %"class.std::vector.26", %"class.std::vector.26"* %90, i32 1
  store %"class.std::vector.26"* %91, %"class.std::vector.26"** %20, align 8
  %92 = load i32, i32* @x.1235
  %93 = load i32, i32* @y.1236
  %94 = sub i32 0, 1
  %95 = add i32 %92, %94
  %96 = sub i32 %92, 1
  %97 = mul i32 %92, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %93, 10
  %101 = xor i1 %99, true
  %102 = xor i1 %100, true
  %103 = xor i1 true, true
  %104 = and i1 %101, true
  %105 = and i1 %99, %103
  %106 = and i1 %102, true
  %107 = and i1 %100, %103
  %108 = or i1 %104, %105
  %109 = or i1 %106, %107
  %110 = xor i1 %108, %109
  %111 = or i1 %101, %102
  %112 = xor i1 %111, true
  %113 = or i1 true, %103
  %114 = and i1 %112, %113
  %115 = or i1 %110, %114
  %116 = or i1 %99, %100
  br i1 %115, label %117, label %318

; <label>:117:                                    ; preds = %85
  br label %51

; <label>:118:                                    ; preds = %54
  %119 = landingpad { i8*, i32 }
          catch i8* null
  %120 = extractvalue { i8*, i32 } %119, 0
  store i8* %120, i8** %21, align 8
  %121 = extractvalue { i8*, i32 } %119, 1
  store i32 %121, i32* %22, align 4
  br label %122

; <label>:122:                                    ; preds = %118
  %123 = load i8*, i8** %21, align 8
  %124 = call i8* @__cxa_begin_catch(i8* %123) #3
  %125 = load %"class.std::vector.26"*, %"class.std::vector.26"** %18, align 8
  %126 = load %"class.std::vector.26"*, %"class.std::vector.26"** %20, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorI4EdgeSaIS1_EEEvT_S5_(%"class.std::vector.26"* %125, %"class.std::vector.26"* %126)
          to label %127 unwind label %172

; <label>:127:                                    ; preds = %122
  %128 = load i32, i32* @x.1235
  %129 = load i32, i32* @y.1236
  %130 = sub i32 %128, 6735405
  %131 = sub i32 %130, 1
  %132 = add i32 %131, 6735405
  %133 = sub i32 %128, 1
  %134 = mul i32 %128, %132
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %129, 10
  %138 = and i1 %136, %137
  %139 = xor i1 %136, %137
  %140 = or i1 %138, %139
  %141 = or i1 %136, %137
  br i1 %140, label %142, label %340

; <label>:142:                                    ; preds = %127, %340
  %143 = load i32, i32* @x.1235
  %144 = load i32, i32* @y.1236
  %145 = sub i32 %143, 1090413079
  %146 = sub i32 %145, 1
  %147 = add i32 %146, 1090413079
  %148 = sub i32 %143, 1
  %149 = mul i32 %143, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %144, 10
  %153 = xor i1 %151, true
  %154 = xor i1 %152, true
  %155 = xor i1 false, true
  %156 = and i1 %153, false
  %157 = and i1 %151, %155
  %158 = and i1 %154, false
  %159 = and i1 %152, %155
  %160 = or i1 %156, %157
  %161 = or i1 %158, %159
  %162 = xor i1 %160, %161
  %163 = or i1 %153, %154
  %164 = xor i1 %163, true
  %165 = or i1 false, %155
  %166 = and i1 %164, %165
  %167 = or i1 %162, %166
  %168 = or i1 %151, %152
  br i1 %167, label %169, label %340

; <label>:169:                                    ; preds = %142
  invoke void @__cxa_rethrow() #15
          to label %269 unwind label %172

; <label>:170:                                    ; preds = %51
  %171 = load %"class.std::vector.26"*, %"class.std::vector.26"** %20, align 8
  ret %"class.std::vector.26"* %171

; <label>:172:                                    ; preds = %169, %122
  %173 = landingpad { i8*, i32 }
          cleanup
  %174 = extractvalue { i8*, i32 } %173, 0
  store i8* %174, i8** %21, align 8
  %175 = extractvalue { i8*, i32 } %173, 1
  store i32 %175, i32* %22, align 4
  invoke void @__cxa_end_catch()
          to label %176 unwind label %266

; <label>:176:                                    ; preds = %172
  %177 = load i32, i32* @x.1235
  %178 = load i32, i32* @y.1236
  %179 = add i32 %177, 401804629
  %180 = sub i32 %179, 1
  %181 = sub i32 %180, 401804629
  %182 = sub i32 %177, 1
  %183 = mul i32 %177, %181
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %178, 10
  %187 = xor i1 %185, true
  %188 = xor i1 %186, true
  %189 = xor i1 false, true
  %190 = and i1 %187, false
  %191 = and i1 %185, %189
  %192 = and i1 %188, false
  %193 = and i1 %186, %189
  %194 = or i1 %190, %191
  %195 = or i1 %192, %193
  %196 = xor i1 %194, %195
  %197 = or i1 %187, %188
  %198 = xor i1 %197, true
  %199 = or i1 false, %189
  %200 = and i1 %198, %199
  %201 = or i1 %196, %200
  %202 = or i1 %185, %186
  br i1 %201, label %203, label %341

; <label>:203:                                    ; preds = %176, %341
  %204 = load i32, i32* @x.1235
  %205 = load i32, i32* @y.1236
  %206 = sub i32 0, 1
  %207 = add i32 %204, %206
  %208 = sub i32 %204, 1
  %209 = mul i32 %204, %207
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %205, 10
  %213 = and i1 %211, %212
  %214 = xor i1 %211, %212
  %215 = or i1 %213, %214
  %216 = or i1 %211, %212
  br i1 %215, label %217, label %341

; <label>:217:                                    ; preds = %203
  br label %219
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:219:                                    ; preds = %217
  %220 = load i32, i32* @x.1235
  %221 = load i32, i32* @y.1236
  %222 = add i32 %220, -1705459628
  %223 = sub i32 %222, 1
  %224 = sub i32 %223, -1705459628
  %225 = sub i32 %220, 1
  %226 = mul i32 %220, %224
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %221, 10
  %230 = xor i1 %228, true
  %231 = xor i1 %229, true
  %232 = xor i1 true, true
  %233 = and i1 %230, true
  %234 = and i1 %228, %232
  %235 = and i1 %231, true
  %236 = and i1 %229, %232
  %237 = or i1 %233, %234
  %238 = or i1 %235, %236
  %239 = xor i1 %237, %238
  %240 = or i1 %230, %231
  %241 = xor i1 %240, true
  %242 = or i1 true, %232
  %243 = and i1 %241, %242
  %244 = or i1 %239, %243
  %245 = or i1 %228, %229
  br i1 %244, label %246, label %342

; <label>:246:                                    ; preds = %219, %342
  %247 = load i8*, i8** %21, align 8
  %248 = load i32, i32* %22, align 4
  %249 = insertvalue { i8*, i32 } undef, i8* %247, 0
  %250 = insertvalue { i8*, i32 } %249, i32 %248, 1
  %251 = load i32, i32* @x.1235
  %252 = load i32, i32* @y.1236
  %253 = add i32 %251, -1811688090
  %254 = sub i32 %253, 1
  %255 = sub i32 %254, -1811688090
  %256 = sub i32 %251, 1
  %257 = mul i32 %251, %255
  %258 = urem i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %252, 10
  %261 = and i1 %259, %260
  %262 = xor i1 %259, %260
  %263 = or i1 %261, %262
  %264 = or i1 %259, %260
  br i1 %263, label %265, label %342

; <label>:265:                                    ; preds = %246
  resume { i8*, i32 } %250

; <label>:266:                                    ; preds = %172
  %267 = landingpad { i8*, i32 }
          catch i8* null
  %268 = extractvalue { i8*, i32 } %267, 0
  call void @__clang_call_terminate(i8* %268) #12
  unreachable

; <label>:269:                                    ; preds = %169
  %270 = load i32, i32* @x.1235
  %271 = load i32, i32* @y.1236
  %272 = sub i32 0, 1
  %273 = add i32 %270, %272
  %274 = sub i32 %270, 1
  %275 = mul i32 %270, %273
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %271, 10
  %279 = xor i1 %277, true
  %280 = xor i1 %278, true
  %281 = xor i1 false, true
  %282 = and i1 %279, false
  %283 = and i1 %277, %281
  %284 = and i1 %280, false
  %285 = and i1 %278, %281
  %286 = or i1 %282, %283
  %287 = or i1 %284, %285
  %288 = xor i1 %286, %287
  %289 = or i1 %279, %280
  %290 = xor i1 %289, true
  %291 = or i1 false, %281
  %292 = and i1 %290, %291
  %293 = or i1 %288, %292
  %294 = or i1 %277, %278
  br i1 %293, label %295, label %347

; <label>:295:                                    ; preds = %269, %347
  %296 = load i32, i32* @x.1235
  %297 = load i32, i32* @y.1236
  %298 = add i32 %296, -901251670
  %299 = sub i32 %298, 1
  %300 = sub i32 %299, -901251670
  %301 = sub i32 %296, 1
  %302 = mul i32 %296, %300
  %303 = urem i32 %302, 2
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %297, 10
  %306 = and i1 %304, %305
  %307 = xor i1 %304, %305
  %308 = or i1 %306, %307
  %309 = or i1 %304, %305
  br i1 %308, label %310, label %347

; <label>:310:                                    ; preds = %295
  unreachable

; <label>:311:                                    ; preds = %17, %2
  %312 = alloca %"class.std::vector.26"*, align 8
  %313 = alloca i64, align 8
  %314 = alloca %"class.std::vector.26"*, align 8
  %315 = alloca i8*
  %316 = alloca i32
  store %"class.std::vector.26"* %0, %"class.std::vector.26"** %312, align 8
  store i64 %1, i64* %313, align 8
  %317 = load %"class.std::vector.26"*, %"class.std::vector.26"** %312, align 8
  store %"class.std::vector.26"* %317, %"class.std::vector.26"** %314, align 8
  br label %17

; <label>:318:                                    ; preds = %85, %58
  %319 = load i64, i64* %19, align 8
  %320 = sub i64 0, -1
  %321 = add i64 %319, %320
  %322 = sub i64 %319, -1
  %323 = mul i64 %321, -1
  %324 = sub i64 %319, -3467492967023917854
  %325 = sub i64 %324, -1
  %326 = add i64 %325, -3467492967023917854
  %327 = sub i64 %319, -1
  %328 = mul i64 %326, -1
  %329 = add i64 %319, 5090188453498606899
  %330 = sub i64 %329, -1
  %331 = sub i64 %330, 5090188453498606899
  %332 = sub i64 %319, -1
  %333 = mul i64 %331, -1
  %334 = add i64 %319, -3314737925532994775
  %335 = add i64 %334, -1
  %336 = sub i64 %335, -3314737925532994775
  %337 = add i64 %319, -1
  store i64 %336, i64* %19, align 8
  %338 = load %"class.std::vector.26"*, %"class.std::vector.26"** %20, align 8
  %339 = getelementptr inbounds %"class.std::vector.26", %"class.std::vector.26"* %338, i32 1
  store %"class.std::vector.26"* %339, %"class.std::vector.26"** %20, align 8
  br label %85

; <label>:340:                                    ; preds = %142, %127
  br label %142

; <label>:341:                                    ; preds = %203, %176
  br label %203

; <label>:342:                                    ; preds = %246, %219
  %343 = load i8*, i8** %21, align 8
  %344 = load i32, i32* %22, align 4
  %345 = insertvalue { i8*, i32 } undef, i8* %343, 0
  %346 = insertvalue { i8*, i32 } %345, i32 %344, 1
  br label %246

; <label>:347:                                    ; preds = %295, %269
  br label %295
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorI4EdgeSaIS1_EEJEEvPT_DpOT0_(%"class.std::vector.26"*) #4 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.1237
  %5 = load i32, i32* @y.1238
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -32966991, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %62
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -32966991, label %17
    i32 -1010225343, label %25
    i32 -696959699, label %56
    i32 187048903, label %57
  ]

; <label>:16:                                     ; preds = %14
  br label %62

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -1010225343, i32 187048903
  store i32 %24, i32* %13
  br label %62

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.std::vector.26"*, align 8
  store %"class.std::vector.26"* %0, %"class.std::vector.26"** %26, align 8
  %27 = load %"class.std::vector.26"*, %"class.std::vector.26"** %26, align 8
  %28 = bitcast %"class.std::vector.26"* %27 to i8*
  %29 = bitcast i8* %28 to %"class.std::vector.26"*
  call void @_ZNSt6vectorI4EdgeSaIS0_EEC2Ev(%"class.std::vector.26"* %29) #3
  %30 = load i32, i32* @x.1237
  %31 = load i32, i32* @y.1238
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -696959699, i32 187048903
  store i32 %55, i32* %13
  br label %62

; <label>:56:                                     ; preds = %14
  ret void

; <label>:57:                                     ; preds = %14
  %58 = alloca %"class.std::vector.26"*, align 8
  store %"class.std::vector.26"* %0, %"class.std::vector.26"** %58, align 8
  %59 = load %"class.std::vector.26"*, %"class.std::vector.26"** %58, align 8
  %60 = bitcast %"class.std::vector.26"* %59 to i8*
  %61 = bitcast i8* %60 to %"class.std::vector.26"*
  call void @_ZNSt6vectorI4EdgeSaIS0_EEC2Ev(%"class.std::vector.26"* %61) #3
  store i32 -1010225343, i32* %13
  br label %62

; <label>:62:                                     ; preds = %57, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.26"* @_ZSt11__addressofISt6vectorI4EdgeSaIS1_EEEPT_RS4_(%"class.std::vector.26"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector.26"*, align 8
  store %"class.std::vector.26"* %0, %"class.std::vector.26"** %2, align 8
  %3 = load %"class.std::vector.26"*, %"class.std::vector.26"** %2, align 8
  %4 = bitcast %"class.std::vector.26"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector.26"*
  ret %"class.std::vector.26"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorI4EdgeSaIS1_EEEvT_S5_(%"class.std::vector.26"*, %"class.std::vector.26"*) #0 comdat {
  %3 = alloca %"class.std::vector.26"*, align 8
  %4 = alloca %"class.std::vector.26"*, align 8
  store %"class.std::vector.26"* %0, %"class.std::vector.26"** %3, align 8
  store %"class.std::vector.26"* %1, %"class.std::vector.26"** %4, align 8
  %5 = load %"class.std::vector.26"*, %"class.std::vector.26"** %3, align 8
  %6 = load %"class.std::vector.26"*, %"class.std::vector.26"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorI4EdgeSaIS3_EEEEvT_S7_(%"class.std::vector.26"* %5, %"class.std::vector.26"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorI4EdgeSaIS0_EEC2Ev(%"class.std::vector.26"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.1243
  %3 = load i32, i32* @y.1244
  %4 = sub i32 %2, -1378562195
  %5 = sub i32 %4, 1
  %6 = add i32 %5, -1378562195
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %51

; <label>:16:                                     ; preds = %1, %51
  %17 = alloca %"class.std::vector.26"*, align 8
  store %"class.std::vector.26"* %0, %"class.std::vector.26"** %17, align 8
  %18 = load %"class.std::vector.26"*, %"class.std::vector.26"** %17, align 8
  %19 = bitcast %"class.std::vector.26"* %18 to %"struct.std::_Vector_base.27"*
  %20 = load i32, i32* @x.1243
  %21 = load i32, i32* @y.1244
  %22 = sub i32 %20, -1342689693
  %23 = sub i32 %22, 1
  %24 = add i32 %23, -1342689693
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 false, true
  %33 = and i1 %30, false
  %34 = and i1 %28, %32
  %35 = and i1 %31, false
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 false, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  br i1 %44, label %46, label %51

; <label>:46:                                     ; preds = %16
  invoke void @_ZNSt12_Vector_baseI4EdgeSaIS0_EEC2Ev(%"struct.std::_Vector_base.27"* %19)
          to label %47 unwind label %48

; <label>:47:                                     ; preds = %46
  ret void

; <label>:48:                                     ; preds = %46
  %49 = landingpad { i8*, i32 }
          catch i8* null
  %50 = extractvalue { i8*, i32 } %49, 0
  call void @__clang_call_terminate(i8* %50) #12
  unreachable

; <label>:51:                                     ; preds = %16, %1
  %52 = alloca %"class.std::vector.26"*, align 8
  store %"class.std::vector.26"* %0, %"class.std::vector.26"** %52, align 8
  %53 = load %"class.std::vector.26"*, %"class.std::vector.26"** %52, align 8
  %54 = bitcast %"class.std::vector.26"* %53 to %"struct.std::_Vector_base.27"*
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI4EdgeSaIS0_EEC2Ev(%"struct.std::_Vector_base.27"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.27"*, align 8
  store %"struct.std::_Vector_base.27"* %0, %"struct.std::_Vector_base.27"** %2, align 8
  %3 = load %"struct.std::_Vector_base.27"*, %"struct.std::_Vector_base.27"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI4EdgeSaIS0_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI4EdgeSaIS0_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %3 to %"class.std::allocator.28"*
  call void @_ZNSaI4EdgeEC2Ev(%"class.std::allocator.28"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %3, i32 0, i32 0
  store %struct.Edge* null, %struct.Edge** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %3, i32 0, i32 1
  store %struct.Edge* null, %struct.Edge** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %3, i32 0, i32 2
  store %struct.Edge* null, %struct.Edge** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI4EdgeEC2Ev(%"class.std::allocator.28"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.1249
  %5 = load i32, i32* @y.1250
  %6 = add i32 %4, -314010282
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -314010282
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -104780525, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -104780525, label %18
    i32 1857862657, label %26
    i32 582273316, label %57
    i32 -1807994587, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1857862657, i32 -1807994587
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.28"*, align 8
  store %"class.std::allocator.28"* %0, %"class.std::allocator.28"** %27, align 8
  %28 = load %"class.std::allocator.28"*, %"class.std::allocator.28"** %27, align 8
  %29 = bitcast %"class.std::allocator.28"* %28 to %"class.__gnu_cxx::new_allocator.29"*
  call void @_ZN9__gnu_cxx13new_allocatorI4EdgeEC2Ev(%"class.__gnu_cxx::new_allocator.29"* %29) #3
  %30 = load i32, i32* @x.1249
  %31 = load i32, i32* @y.1250
  %32 = add i32 %30, -365397179
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -365397179
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 582273316, i32 -1807994587
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::allocator.28"*, align 8
  store %"class.std::allocator.28"* %0, %"class.std::allocator.28"** %59, align 8
  %60 = load %"class.std::allocator.28"*, %"class.std::allocator.28"** %59, align 8
  %61 = bitcast %"class.std::allocator.28"* %60 to %"class.__gnu_cxx::new_allocator.29"*
  call void @_ZN9__gnu_cxx13new_allocatorI4EdgeEC2Ev(%"class.__gnu_cxx::new_allocator.29"* %61) #3
  store i32 1857862657, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI4EdgeEC2Ev(%"class.__gnu_cxx::new_allocator.29"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.1251
  %5 = load i32, i32* @y.1252
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1512105078, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %59
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1512105078, label %17
    i32 -1317846725, label %25
    i32 -1577850851, label %55
    i32 673805855, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %59

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -1317846725, i32 673805855
  store i32 %24, i32* %13
  br label %59

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator.29"*, align 8
  store %"class.__gnu_cxx::new_allocator.29"* %0, %"class.__gnu_cxx::new_allocator.29"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator.29"*, %"class.__gnu_cxx::new_allocator.29"** %26, align 8
  %28 = load i32, i32* @x.1251
  %29 = load i32, i32* @y.1252
  %30 = sub i32 %28, -2120158275
  %31 = sub i32 %30, 1
  %32 = add i32 %31, -2120158275
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 -1577850851, i32 673805855
  store i32 %54, i32* %13
  br label %59

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %"class.__gnu_cxx::new_allocator.29"*, align 8
  store %"class.__gnu_cxx::new_allocator.29"* %0, %"class.__gnu_cxx::new_allocator.29"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.29"*, %"class.__gnu_cxx::new_allocator.29"** %57, align 8
  store i32 -1317846725, i32* %13
  br label %59

; <label>:59:                                     ; preds = %56, %25, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorI4EdgeSaIS3_EEEEvT_S7_(%"class.std::vector.26"*, %"class.std::vector.26"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.26"*, align 8
  %5 = alloca %"class.std::vector.26"*, align 8
  store %"class.std::vector.26"* %0, %"class.std::vector.26"** %4, align 8
  store %"class.std::vector.26"* %1, %"class.std::vector.26"** %5, align 8
  %6 = alloca i32
  store i32 127878054, i32* %6
  br label %7

; <label>:7:                                      ; preds = %2, %101
  %8 = load i32, i32* %6
  switch i32 %8, label %9 [
    i32 127878054, label %10
    i32 -2029468451, label %25
    i32 -958060023, label %44
    i32 -1050689258, label %47
    i32 -157402086, label %50
    i32 -282095426, label %53
    i32 -2064389815, label %68
    i32 -698227349, label %95
    i32 94767340, label %96
    i32 -614873613, label %100
  ]

; <label>:9:                                      ; preds = %7
  br label %101

; <label>:10:                                     ; preds = %7
  %11 = load i32, i32* @x.1253
  %12 = load i32, i32* @y.1254
  %13 = sub i32 0, 1
  %14 = add i32 %11, %13
  %15 = sub i32 %11, 1
  %16 = mul i32 %11, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %12, 10
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -2029468451, i32 94767340
  store i32 %24, i32* %6
  br label %101

; <label>:25:                                     ; preds = %7
  %26 = load %"class.std::vector.26"*, %"class.std::vector.26"** %4, align 8
  %27 = load %"class.std::vector.26"*, %"class.std::vector.26"** %5, align 8
  %28 = icmp ne %"class.std::vector.26"* %26, %27
  store i1 %28, i1* %3
  %29 = load i32, i32* @x.1253
  %30 = load i32, i32* @y.1254
  %31 = sub i32 %29, -837819208
  %32 = sub i32 %31, 1
  %33 = add i32 %32, -837819208
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -958060023, i32 94767340
  store i32 %43, i32* %6
  br label %101

; <label>:44:                                     ; preds = %7
  %45 = load volatile i1, i1* %3
  %46 = select i1 %45, i32 -1050689258, i32 -282095426
  store i32 %46, i32* %6
  br label %101

; <label>:47:                                     ; preds = %7
  %48 = load %"class.std::vector.26"*, %"class.std::vector.26"** %4, align 8
  %49 = call %"class.std::vector.26"* @_ZSt11__addressofISt6vectorI4EdgeSaIS1_EEEPT_RS4_(%"class.std::vector.26"* dereferenceable(24) %48) #3
  call void @_ZSt8_DestroyISt6vectorI4EdgeSaIS1_EEEvPT_(%"class.std::vector.26"* %49)
  store i32 -157402086, i32* %6
  br label %101

; <label>:50:                                     ; preds = %7
  %51 = load %"class.std::vector.26"*, %"class.std::vector.26"** %4, align 8
  %52 = getelementptr inbounds %"class.std::vector.26", %"class.std::vector.26"* %51, i32 1
  store %"class.std::vector.26"* %52, %"class.std::vector.26"** %4, align 8
  store i32 127878054, i32* %6
  br label %101

; <label>:53:                                     ; preds = %7
  %54 = load i32, i32* @x.1253
  %55 = load i32, i32* @y.1254
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 -2064389815, i32 -614873613
  store i32 %67, i32* %6
  br label %101

; <label>:68:                                     ; preds = %7
  %69 = load i32, i32* @x.1253
  %70 = load i32, i32* @y.1254
  %71 = sub i32 0, 1
  %72 = add i32 %69, %71
  %73 = sub i32 %69, 1
  %74 = mul i32 %69, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %70, 10
  %78 = xor i1 %76, true
  %79 = xor i1 %77, true
  %80 = xor i1 true, true
  %81 = and i1 %78, true
  %82 = and i1 %76, %80
  %83 = and i1 %79, true
  %84 = and i1 %77, %80
  %85 = or i1 %81, %82
  %86 = or i1 %83, %84
  %87 = xor i1 %85, %86
  %88 = or i1 %78, %79
  %89 = xor i1 %88, true
  %90 = or i1 true, %80
  %91 = and i1 %89, %90
  %92 = or i1 %87, %91
  %93 = or i1 %76, %77
  %94 = select i1 %92, i32 -698227349, i32 -614873613
  store i32 %94, i32* %6
  br label %101

; <label>:95:                                     ; preds = %7
  ret void

; <label>:96:                                     ; preds = %7
  %97 = load %"class.std::vector.26"*, %"class.std::vector.26"** %4, align 8
  %98 = load %"class.std::vector.26"*, %"class.std::vector.26"** %5, align 8
  %99 = icmp ne %"class.std::vector.26"* %97, %98
  store i32 -2029468451, i32* %6
  br label %101

; <label>:100:                                    ; preds = %7
  store i32 -2064389815, i32* %6
  br label %101

; <label>:101:                                    ; preds = %100, %96, %68, %53, %50, %47, %44, %25, %10, %9
  br label %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorI4EdgeSaIS1_EEEvPT_(%"class.std::vector.26"*) #4 comdat {
  %2 = alloca %"class.std::vector.26"*, align 8
  store %"class.std::vector.26"* %0, %"class.std::vector.26"** %2, align 8
  %3 = load %"class.std::vector.26"*, %"class.std::vector.26"** %2, align 8
  call void @_ZNSt6vectorI4EdgeSaIS0_EED2Ev(%"class.std::vector.26"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorI4EdgeSaIS0_EED2Ev(%"class.std::vector.26"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.1257
  %3 = load i32, i32* @y.1258
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %83

; <label>:15:                                     ; preds = %1, %83
  %16 = alloca %"class.std::vector.26"*, align 8
  %17 = alloca i8*
  %18 = alloca i32
  store %"class.std::vector.26"* %0, %"class.std::vector.26"** %16, align 8
  %19 = load %"class.std::vector.26"*, %"class.std::vector.26"** %16, align 8
  %20 = bitcast %"class.std::vector.26"* %19 to %"struct.std::_Vector_base.27"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %21, i32 0, i32 0
  %23 = load %struct.Edge*, %struct.Edge** %22, align 8
  %24 = bitcast %"class.std::vector.26"* %19 to %"struct.std::_Vector_base.27"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %25, i32 0, i32 1
  %27 = load %struct.Edge*, %struct.Edge** %26, align 8
  %28 = bitcast %"class.std::vector.26"* %19 to %"struct.std::_Vector_base.27"*
  %29 = call dereferenceable(1) %"class.std::allocator.28"* @_ZNSt12_Vector_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.27"* %28) #3
  %30 = load i32, i32* @x.1257
  %31 = load i32, i32* @y.1258
  %32 = sub i32 %30, -1077375224
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -1077375224
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  br i1 %42, label %44, label %83

; <label>:44:                                     ; preds = %15
  invoke void @_ZSt8_DestroyIP4EdgeS0_EvT_S2_RSaIT0_E(%struct.Edge* %23, %struct.Edge* %27, %"class.std::allocator.28"* dereferenceable(1) %29)
          to label %45 unwind label %47

; <label>:45:                                     ; preds = %44
  %46 = bitcast %"class.std::vector.26"* %19 to %"struct.std::_Vector_base.27"*
  call void @_ZNSt12_Vector_baseI4EdgeSaIS0_EED2Ev(%"struct.std::_Vector_base.27"* %46) #3
  ret void

; <label>:47:                                     ; preds = %44
  %48 = landingpad { i8*, i32 }
          catch i8* null
  %49 = extractvalue { i8*, i32 } %48, 0
  store i8* %49, i8** %17, align 8
  %50 = extractvalue { i8*, i32 } %48, 1
  store i32 %50, i32* %18, align 4
  %51 = bitcast %"class.std::vector.26"* %19 to %"struct.std::_Vector_base.27"*
  call void @_ZNSt12_Vector_baseI4EdgeSaIS0_EED2Ev(%"struct.std::_Vector_base.27"* %51) #3
  br label %52

; <label>:52:                                     ; preds = %47
  %53 = load i32, i32* @x.1257
  %54 = load i32, i32* @y.1258
  %55 = add i32 %53, 1733702680
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, 1733702680
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  br i1 %65, label %67, label %98

; <label>:67:                                     ; preds = %52, %98
  %68 = load i8*, i8** %17, align 8
  call void @__clang_call_terminate(i8* %68) #12
  %69 = load i32, i32* @x.1257
  %70 = load i32, i32* @y.1258
  %71 = sub i32 0, 1
  %72 = add i32 %69, %71
  %73 = sub i32 %69, 1
  %74 = mul i32 %69, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %70, 10
  %78 = and i1 %76, %77
  %79 = xor i1 %76, %77
  %80 = or i1 %78, %79
  %81 = or i1 %76, %77
  br i1 %80, label %82, label %98

; <label>:82:                                     ; preds = %67
  unreachable

; <label>:83:                                     ; preds = %15, %1
  %84 = alloca %"class.std::vector.26"*, align 8
  %85 = alloca i8*
  %86 = alloca i32
  store %"class.std::vector.26"* %0, %"class.std::vector.26"** %84, align 8
  %87 = load %"class.std::vector.26"*, %"class.std::vector.26"** %84, align 8
  %88 = bitcast %"class.std::vector.26"* %87 to %"struct.std::_Vector_base.27"*
  %89 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %88, i32 0, i32 0
  %90 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %89, i32 0, i32 0
  %91 = load %struct.Edge*, %struct.Edge** %90, align 8
  %92 = bitcast %"class.std::vector.26"* %87 to %"struct.std::_Vector_base.27"*
  %93 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %92, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %93, i32 0, i32 1
  %95 = load %struct.Edge*, %struct.Edge** %94, align 8
  %96 = bitcast %"class.std::vector.26"* %87 to %"struct.std::_Vector_base.27"*
  %97 = call dereferenceable(1) %"class.std::allocator.28"* @_ZNSt12_Vector_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.27"* %96) #3
  br label %15

; <label>:98:                                     ; preds = %67, %52
  %99 = load i8*, i8** %17, align 8
  call void @__clang_call_terminate(i8* %99) #12
  br label %67
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP4EdgeS0_EvT_S2_RSaIT0_E(%struct.Edge*, %struct.Edge*, %"class.std::allocator.28"* dereferenceable(1)) #0 comdat {
  %4 = alloca %struct.Edge*, align 8
  %5 = alloca %struct.Edge*, align 8
  %6 = alloca %"class.std::allocator.28"*, align 8
  store %struct.Edge* %0, %struct.Edge** %4, align 8
  store %struct.Edge* %1, %struct.Edge** %5, align 8
  store %"class.std::allocator.28"* %2, %"class.std::allocator.28"** %6, align 8
  %7 = load %struct.Edge*, %struct.Edge** %4, align 8
  %8 = load %struct.Edge*, %struct.Edge** %5, align 8
  call void @_ZSt8_DestroyIP4EdgeEvT_S2_(%struct.Edge* %7, %struct.Edge* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.28"* @_ZNSt12_Vector_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.27"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.27"*, align 8
  store %"struct.std::_Vector_base.27"* %0, %"struct.std::_Vector_base.27"** %2, align 8
  %3 = load %"struct.std::_Vector_base.27"*, %"struct.std::_Vector_base.27"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %4 to %"class.std::allocator.28"*
  ret %"class.std::allocator.28"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI4EdgeSaIS0_EED2Ev(%"struct.std::_Vector_base.27"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.27"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.27"* %0, %"struct.std::_Vector_base.27"** %2, align 8
  %5 = load %"struct.std::_Vector_base.27"*, %"struct.std::_Vector_base.27"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %struct.Edge*, %struct.Edge** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %struct.Edge*, %struct.Edge** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %struct.Edge*, %struct.Edge** %13, align 8
  %15 = ptrtoint %struct.Edge* %11 to i64
  %16 = ptrtoint %struct.Edge* %14 to i64
  %17 = add i64 %15, 124836460130593744
  %18 = sub i64 %17, %16
  %19 = sub i64 %18, 124836460130593744
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 16
  invoke void @_ZNSt12_Vector_baseI4EdgeSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base.27"* %5, %struct.Edge* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI4EdgeSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI4EdgeSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %28) #3
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %30) #12
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP4EdgeEvT_S2_(%struct.Edge*, %struct.Edge*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1265
  %6 = load i32, i32* @y.1266
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 824561337, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %76
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 824561337, label %18
    i32 -633211611, label %38
    i32 1511561337, label %70
    i32 -1183536010, label %71
  ]

; <label>:17:                                     ; preds = %15
  br label %76

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -633211611, i32 -1183536010
  store i32 %37, i32* %14
  br label %76

; <label>:38:                                     ; preds = %15
  %39 = alloca %struct.Edge*, align 8
  %40 = alloca %struct.Edge*, align 8
  store %struct.Edge* %0, %struct.Edge** %39, align 8
  store %struct.Edge* %1, %struct.Edge** %40, align 8
  %41 = load %struct.Edge*, %struct.Edge** %39, align 8
  %42 = load %struct.Edge*, %struct.Edge** %40, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIP4EdgeEEvT_S4_(%struct.Edge* %41, %struct.Edge* %42)
  %43 = load i32, i32* @x.1265
  %44 = load i32, i32* @y.1266
  %45 = sub i32 %43, -883909953
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -883909953
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 1511561337, i32 -1183536010
  store i32 %69, i32* %14
  br label %76

; <label>:70:                                     ; preds = %15
  ret void

; <label>:71:                                     ; preds = %15
  %72 = alloca %struct.Edge*, align 8
  %73 = alloca %struct.Edge*, align 8
  store %struct.Edge* %0, %struct.Edge** %72, align 8
  store %struct.Edge* %1, %struct.Edge** %73, align 8
  %74 = load %struct.Edge*, %struct.Edge** %72, align 8
  %75 = load %struct.Edge*, %struct.Edge** %73, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIP4EdgeEEvT_S4_(%struct.Edge* %74, %struct.Edge* %75)
  store i32 -633211611, i32* %14
  br label %76

; <label>:76:                                     ; preds = %71, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIP4EdgeEEvT_S4_(%struct.Edge*, %struct.Edge*) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1267
  %6 = load i32, i32* @y.1268
  %7 = sub i32 %5, 171522349
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 171522349
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2002585890, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2002585890, label %19
    i32 -865398096, label %39
    i32 2072139830, label %57
    i32 -1252311716, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -865398096, i32 -1252311716
  store i32 %38, i32* %15
  br label %61

; <label>:39:                                     ; preds = %16
  %40 = alloca %struct.Edge*, align 8
  %41 = alloca %struct.Edge*, align 8
  store %struct.Edge* %0, %struct.Edge** %40, align 8
  store %struct.Edge* %1, %struct.Edge** %41, align 8
  %42 = load i32, i32* @x.1267
  %43 = load i32, i32* @y.1268
  %44 = sub i32 %42, 138137123
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 138137123
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 2072139830, i32 -1252311716
  store i32 %56, i32* %15
  br label %61

; <label>:57:                                     ; preds = %16
  ret void

; <label>:58:                                     ; preds = %16
  %59 = alloca %struct.Edge*, align 8
  %60 = alloca %struct.Edge*, align 8
  store %struct.Edge* %0, %struct.Edge** %59, align 8
  store %struct.Edge* %1, %struct.Edge** %60, align 8
  store i32 -865398096, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI4EdgeSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base.27"*, %struct.Edge*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.27"*
  %6 = alloca i64*
  %7 = alloca %struct.Edge**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.1269
  %11 = load i32, i32* @y.1270
  %12 = sub i32 %10, 1079509127
  %13 = sub i32 %12, 1
  %14 = add i32 %13, 1079509127
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -977811146, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %100
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -977811146, label %24
    i32 -824391140, label %44
    i32 2006781683, label %81
    i32 -2027746984, label %84
    i32 -2126224702, label %92
    i32 1192110098, label %93
  ]

; <label>:23:                                     ; preds = %21
  br label %100

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 -824391140, i32 1192110098
  store i32 %43, i32* %20
  br label %100

; <label>:44:                                     ; preds = %21
  %45 = alloca %"struct.std::_Vector_base.27"*, align 8
  %46 = alloca %struct.Edge*, align 8
  store %struct.Edge** %46, %struct.Edge*** %7
  %47 = alloca i64, align 8
  store i64* %47, i64** %6
  store %"struct.std::_Vector_base.27"* %0, %"struct.std::_Vector_base.27"** %45, align 8
  %48 = load volatile %struct.Edge**, %struct.Edge*** %7
  store %struct.Edge* %1, %struct.Edge** %48, align 8
  %49 = load volatile i64*, i64** %6
  store i64 %2, i64* %49, align 8
  %50 = load %"struct.std::_Vector_base.27"*, %"struct.std::_Vector_base.27"** %45, align 8
  store %"struct.std::_Vector_base.27"* %50, %"struct.std::_Vector_base.27"** %5
  %51 = load volatile %struct.Edge**, %struct.Edge*** %7
  %52 = load %struct.Edge*, %struct.Edge** %51, align 8
  %53 = icmp ne %struct.Edge* %52, null
  store i1 %53, i1* %4
  %54 = load i32, i32* @x.1269
  %55 = load i32, i32* @y.1270
  %56 = add i32 %54, 501006871
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, 501006871
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 true, true
  %67 = and i1 %64, true
  %68 = and i1 %62, %66
  %69 = and i1 %65, true
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 true, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  %80 = select i1 %78, i32 2006781683, i32 1192110098
  store i32 %80, i32* %20
  br label %100

; <label>:81:                                     ; preds = %21
  %82 = load volatile i1, i1* %4
  %83 = select i1 %82, i32 -2027746984, i32 -2126224702
  store i32 %83, i32* %20
  br label %100

; <label>:84:                                     ; preds = %21
  %85 = load volatile %"struct.std::_Vector_base.27"*, %"struct.std::_Vector_base.27"** %5
  %86 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %85, i32 0, i32 0
  %87 = bitcast %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %86 to %"class.std::allocator.28"*
  %88 = load volatile %struct.Edge**, %struct.Edge*** %7
  %89 = load %struct.Edge*, %struct.Edge** %88, align 8
  %90 = load volatile i64*, i64** %6
  %91 = load i64, i64* %90, align 8
  call void @_ZNSt16allocator_traitsISaI4EdgeEE10deallocateERS1_PS0_m(%"class.std::allocator.28"* dereferenceable(1) %87, %struct.Edge* %89, i64 %91)
  store i32 -2126224702, i32* %20
  br label %100

; <label>:92:                                     ; preds = %21
  ret void

; <label>:93:                                     ; preds = %21
  %94 = alloca %"struct.std::_Vector_base.27"*, align 8
  %95 = alloca %struct.Edge*, align 8
  %96 = alloca i64, align 8
  store %"struct.std::_Vector_base.27"* %0, %"struct.std::_Vector_base.27"** %94, align 8
  store %struct.Edge* %1, %struct.Edge** %95, align 8
  store i64 %2, i64* %96, align 8
  %97 = load %"struct.std::_Vector_base.27"*, %"struct.std::_Vector_base.27"** %94, align 8
  %98 = load %struct.Edge*, %struct.Edge** %95, align 8
  %99 = icmp ne %struct.Edge* %98, null
  store i32 -824391140, i32* %20
  br label %100

; <label>:100:                                    ; preds = %93, %84, %81, %44, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI4EdgeSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %3 to %"class.std::allocator.28"*
  call void @_ZNSaI4EdgeED2Ev(%"class.std::allocator.28"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaI4EdgeEE10deallocateERS1_PS0_m(%"class.std::allocator.28"* dereferenceable(1), %struct.Edge*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.28"*, align 8
  %5 = alloca %struct.Edge*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.28"* %0, %"class.std::allocator.28"** %4, align 8
  store %struct.Edge* %1, %struct.Edge** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.28"*, %"class.std::allocator.28"** %4, align 8
  %8 = bitcast %"class.std::allocator.28"* %7 to %"class.__gnu_cxx::new_allocator.29"*
  %9 = load %struct.Edge*, %struct.Edge** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI4EdgeE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.29"* %8, %struct.Edge* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI4EdgeE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.29"*, %struct.Edge*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.29"*, align 8
  %5 = alloca %struct.Edge*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.29"* %0, %"class.__gnu_cxx::new_allocator.29"** %4, align 8
  store %struct.Edge* %1, %struct.Edge** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.29"*, %"class.__gnu_cxx::new_allocator.29"** %4, align 8
  %8 = load %struct.Edge*, %struct.Edge** %5, align 8
  %9 = bitcast %struct.Edge* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI4EdgeED2Ev(%"class.std::allocator.28"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.28"*, align 8
  store %"class.std::allocator.28"* %0, %"class.std::allocator.28"** %2, align 8
  %3 = load %"class.std::allocator.28"*, %"class.std::allocator.28"** %2, align 8
  %4 = bitcast %"class.std::allocator.28"* %3 to %"class.__gnu_cxx::new_allocator.29"*
  call void @_ZN9__gnu_cxx13new_allocatorI4EdgeED2Ev(%"class.__gnu_cxx::new_allocator.29"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI4EdgeED2Ev(%"class.__gnu_cxx::new_allocator.29"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.29"*, align 8
  store %"class.__gnu_cxx::new_allocator.29"* %0, %"class.__gnu_cxx::new_allocator.29"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.29"*, %"class.__gnu_cxx::new_allocator.29"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorI4EdgeSaIS1_EESaIS3_EE13_M_deallocateEPS3_m(%"struct.std::_Vector_base.22"*, %"class.std::vector.26"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.26"*
  %5 = alloca %"struct.std::_Vector_base.22"*
  %6 = alloca %"struct.std::_Vector_base.22"*, align 8
  %7 = alloca %"class.std::vector.26"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.22"* %0, %"struct.std::_Vector_base.22"** %6, align 8
  store %"class.std::vector.26"* %1, %"class.std::vector.26"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.22"*, %"struct.std::_Vector_base.22"** %6, align 8
  store %"struct.std::_Vector_base.22"* %9, %"struct.std::_Vector_base.22"** %5
  %10 = load %"class.std::vector.26"*, %"class.std::vector.26"** %7, align 8
  store %"class.std::vector.26"* %10, %"class.std::vector.26"** %4
  %11 = alloca i32
  store i32 -606602624, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -606602624, label %15
    i32 1627020341, label %19
    i32 -432425427, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::vector.26"*, %"class.std::vector.26"** %4
  %17 = icmp ne %"class.std::vector.26"* %16, null
  %18 = select i1 %17, i32 1627020341, i32 -432425427
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.22"*, %"struct.std::_Vector_base.22"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.22", %"struct.std::_Vector_base.22"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::vector<Edge, std::allocator<Edge> >, std::allocator<std::vector<Edge, std::allocator<Edge> > > >::_Vector_impl"* %21 to %"class.std::allocator.23"*
  %23 = load %"class.std::vector.26"*, %"class.std::vector.26"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorI4EdgeSaIS1_EEEE10deallocateERS4_PS3_m(%"class.std::allocator.23"* dereferenceable(1) %22, %"class.std::vector.26"* %23, i64 %24)
  store i32 -432425427, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorI4EdgeSaIS1_EEEE10deallocateERS4_PS3_m(%"class.std::allocator.23"* dereferenceable(1), %"class.std::vector.26"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.23"*, align 8
  %5 = alloca %"class.std::vector.26"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.23"* %0, %"class.std::allocator.23"** %4, align 8
  store %"class.std::vector.26"* %1, %"class.std::vector.26"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.23"*, %"class.std::allocator.23"** %4, align 8
  %8 = bitcast %"class.std::allocator.23"* %7 to %"class.__gnu_cxx::new_allocator.24"*
  %9 = load %"class.std::vector.26"*, %"class.std::vector.26"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEE10deallocateEPS4_m(%"class.__gnu_cxx::new_allocator.24"* %8, %"class.std::vector.26"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorI4EdgeSaIS2_EEE10deallocateEPS4_m(%"class.__gnu_cxx::new_allocator.24"*, %"class.std::vector.26"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.24"*, align 8
  %5 = alloca %"class.std::vector.26"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.24"* %0, %"class.__gnu_cxx::new_allocator.24"** %4, align 8
  store %"class.std::vector.26"* %1, %"class.std::vector.26"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.24"*, %"class.__gnu_cxx::new_allocator.24"** %4, align 8
  %8 = load %"class.std::vector.26"*, %"class.std::vector.26"** %5, align 8
  %9 = bitcast %"class.std::vector.26"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorI4EdgeSaIS1_EES3_EvT_S5_RSaIT0_E(%"class.std::vector.26"*, %"class.std::vector.26"*, %"class.std::allocator.23"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.26"*, align 8
  %5 = alloca %"class.std::vector.26"*, align 8
  %6 = alloca %"class.std::allocator.23"*, align 8
  store %"class.std::vector.26"* %0, %"class.std::vector.26"** %4, align 8
  store %"class.std::vector.26"* %1, %"class.std::vector.26"** %5, align 8
  store %"class.std::allocator.23"* %2, %"class.std::allocator.23"** %6, align 8
  %7 = load %"class.std::vector.26"*, %"class.std::vector.26"** %4, align 8
  %8 = load %"class.std::vector.26"*, %"class.std::vector.26"** %5, align 8
  call void @_ZSt8_DestroyIPSt6vectorI4EdgeSaIS1_EEEvT_S5_(%"class.std::vector.26"* %7, %"class.std::vector.26"* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaI4EdgeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator.28"* dereferenceable(1), %struct.Edge*, %struct.Edge* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.28"*, align 8
  %5 = alloca %struct.Edge*, align 8
  %6 = alloca %struct.Edge*, align 8
  store %"class.std::allocator.28"* %0, %"class.std::allocator.28"** %4, align 8
  store %struct.Edge* %1, %struct.Edge** %5, align 8
  store %struct.Edge* %2, %struct.Edge** %6, align 8
  %7 = load %"class.std::allocator.28"*, %"class.std::allocator.28"** %4, align 8
  %8 = bitcast %"class.std::allocator.28"* %7 to %"class.__gnu_cxx::new_allocator.29"*
  %9 = load %struct.Edge*, %struct.Edge** %5, align 8
  %10 = load %struct.Edge*, %struct.Edge** %6, align 8
  %11 = call dereferenceable(16) %struct.Edge* @_ZSt7forwardIRK4EdgeEOT_RNSt16remove_referenceIS3_E4typeE(%struct.Edge* dereferenceable(16) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorI4EdgeE9constructIS1_JRKS1_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.29"* %8, %struct.Edge* %9, %struct.Edge* dereferenceable(16) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI4EdgeSaIS0_EE19_M_emplace_back_auxIJRKS0_EEEvDpOT_(%"class.std::vector.26"*, %struct.Edge* dereferenceable(16)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.26"*, align 8
  %4 = alloca %struct.Edge*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.Edge*, align 8
  %7 = alloca %struct.Edge*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.26"* %0, %"class.std::vector.26"** %3, align 8
  store %struct.Edge* %1, %struct.Edge** %4, align 8
  %10 = load %"class.std::vector.26"*, %"class.std::vector.26"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorI4EdgeSaIS0_EE12_M_check_lenEmPKc(%"class.std::vector.26"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.26"* %10 to %"struct.std::_Vector_base.27"*
  %13 = load i64, i64* %5, align 8
  %14 = call %struct.Edge* @_ZNSt12_Vector_baseI4EdgeSaIS0_EE11_M_allocateEm(%"struct.std::_Vector_base.27"* %12, i64 %13)
  store %struct.Edge* %14, %struct.Edge** %6, align 8
  %15 = load %struct.Edge*, %struct.Edge** %6, align 8
  store %struct.Edge* %15, %struct.Edge** %7, align 8
  %16 = bitcast %"class.std::vector.26"* %10 to %"struct.std::_Vector_base.27"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %17 to %"class.std::allocator.28"*
  %19 = load %struct.Edge*, %struct.Edge** %6, align 8
  %20 = call i64 @_ZNKSt6vectorI4EdgeSaIS0_EE4sizeEv(%"class.std::vector.26"* %10) #3
  %21 = getelementptr inbounds %struct.Edge, %struct.Edge* %19, i64 %20
  %22 = load %struct.Edge*, %struct.Edge** %4, align 8
  %23 = call dereferenceable(16) %struct.Edge* @_ZSt7forwardIRK4EdgeEOT_RNSt16remove_referenceIS3_E4typeE(%struct.Edge* dereferenceable(16) %22) #3
  invoke void @_ZNSt16allocator_traitsISaI4EdgeEE9constructIS0_JRKS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator.28"* dereferenceable(1) %18, %struct.Edge* %21, %struct.Edge* dereferenceable(16) %23)
          to label %24 unwind label %40

; <label>:24:                                     ; preds = %2
  store %struct.Edge* null, %struct.Edge** %7, align 8
  %25 = bitcast %"class.std::vector.26"* %10 to %"struct.std::_Vector_base.27"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %26, i32 0, i32 0
  %28 = load %struct.Edge*, %struct.Edge** %27, align 8
  %29 = bitcast %"class.std::vector.26"* %10 to %"struct.std::_Vector_base.27"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %30, i32 0, i32 1
  %32 = load %struct.Edge*, %struct.Edge** %31, align 8
  %33 = load %struct.Edge*, %struct.Edge** %6, align 8
  %34 = bitcast %"class.std::vector.26"* %10 to %"struct.std::_Vector_base.27"*
  %35 = call dereferenceable(1) %"class.std::allocator.28"* @_ZNSt12_Vector_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.27"* %34) #3
  %36 = invoke %struct.Edge* @_ZSt34__uninitialized_move_if_noexcept_aIP4EdgeS1_SaIS0_EET0_T_S4_S3_RT1_(%struct.Edge* %28, %struct.Edge* %32, %struct.Edge* %33, %"class.std::allocator.28"* dereferenceable(1) %35)
          to label %37 unwind label %40

; <label>:37:                                     ; preds = %24
  store %struct.Edge* %36, %struct.Edge** %7, align 8
  %38 = load %struct.Edge*, %struct.Edge** %7, align 8
  %39 = getelementptr inbounds %struct.Edge, %struct.Edge* %38, i32 1
  store %struct.Edge* %39, %struct.Edge** %7, align 8
  br label %214

; <label>:40:                                     ; preds = %24, %2
  %41 = landingpad { i8*, i32 }
          catch i8* null
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %8, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %9, align 4
  br label %44

; <label>:44:                                     ; preds = %40
  %45 = load i32, i32* @x.1291
  %46 = load i32, i32* @y.1292
  %47 = sub i32 %45, -175765557
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -175765557
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  br i1 %57, label %59, label %308

; <label>:59:                                     ; preds = %44, %308
  %60 = load i8*, i8** %8, align 8
  %61 = call i8* @__cxa_begin_catch(i8* %60) #3
  %62 = load %struct.Edge*, %struct.Edge** %7, align 8
  %63 = icmp ne %struct.Edge* %62, null
  %64 = load i32, i32* @x.1291
  %65 = load i32, i32* @y.1292
  %66 = sub i32 0, 1
  %67 = add i32 %64, %66
  %68 = sub i32 %64, 1
  %69 = mul i32 %64, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %65, 10
  %73 = and i1 %71, %72
  %74 = xor i1 %71, %72
  %75 = or i1 %73, %74
  %76 = or i1 %71, %72
  br i1 %75, label %77, label %308

; <label>:77:                                     ; preds = %59
  br i1 %63, label %174, label %78

; <label>:78:                                     ; preds = %77
  %79 = load i32, i32* @x.1291
  %80 = load i32, i32* @y.1292
  %81 = add i32 %79, 818730807
  %82 = sub i32 %81, 1
  %83 = sub i32 %82, 818730807
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = xor i1 %87, true
  %90 = xor i1 %88, true
  %91 = xor i1 false, true
  %92 = and i1 %89, false
  %93 = and i1 %87, %91
  %94 = and i1 %90, false
  %95 = and i1 %88, %91
  %96 = or i1 %92, %93
  %97 = or i1 %94, %95
  %98 = xor i1 %96, %97
  %99 = or i1 %89, %90
  %100 = xor i1 %99, true
  %101 = or i1 false, %91
  %102 = and i1 %100, %101
  %103 = or i1 %98, %102
  %104 = or i1 %87, %88
  br i1 %103, label %105, label %313

; <label>:105:                                    ; preds = %78, %313
  %106 = bitcast %"class.std::vector.26"* %10 to %"struct.std::_Vector_base.27"*
  %107 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %106, i32 0, i32 0
  %108 = bitcast %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %107 to %"class.std::allocator.28"*
  %109 = load %struct.Edge*, %struct.Edge** %6, align 8
  %110 = call i64 @_ZNKSt6vectorI4EdgeSaIS0_EE4sizeEv(%"class.std::vector.26"* %10) #3
  %111 = getelementptr inbounds %struct.Edge, %struct.Edge* %109, i64 %110
  %112 = load i32, i32* @x.1291
  %113 = load i32, i32* @y.1292
  %114 = sub i32 %112, -1274991207
  %115 = sub i32 %114, 1
  %116 = add i32 %115, -1274991207
  %117 = sub i32 %112, 1
  %118 = mul i32 %112, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %113, 10
  %122 = and i1 %120, %121
  %123 = xor i1 %120, %121
  %124 = or i1 %122, %123
  %125 = or i1 %120, %121
  br i1 %124, label %126, label %313

; <label>:126:                                    ; preds = %105
  invoke void @_ZNSt16allocator_traitsISaI4EdgeEE7destroyIS0_EEvRS1_PT_(%"class.std::allocator.28"* dereferenceable(1) %108, %struct.Edge* %111)
          to label %127 unwind label %128

; <label>:127:                                    ; preds = %126
  br label %180

; <label>:128:                                    ; preds = %212, %180, %174, %126
  %129 = load i32, i32* @x.1291
  %130 = load i32, i32* @y.1292
  %131 = add i32 %129, -224850701
  %132 = sub i32 %131, 1
  %133 = sub i32 %132, -224850701
  %134 = sub i32 %129, 1
  %135 = mul i32 %129, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %130, 10
  %139 = xor i1 %137, true
  %140 = xor i1 %138, true
  %141 = xor i1 true, true
  %142 = and i1 %139, true
  %143 = and i1 %137, %141
  %144 = and i1 %140, true
  %145 = and i1 %138, %141
  %146 = or i1 %142, %143
  %147 = or i1 %144, %145
  %148 = xor i1 %146, %147
  %149 = or i1 %139, %140
  %150 = xor i1 %149, true
  %151 = or i1 true, %141
  %152 = and i1 %150, %151
  %153 = or i1 %148, %152
  %154 = or i1 %137, %138
  br i1 %153, label %155, label %320

; <label>:155:                                    ; preds = %128, %320
  %156 = landingpad { i8*, i32 }
          cleanup
  %157 = extractvalue { i8*, i32 } %156, 0
  store i8* %157, i8** %8, align 8
  %158 = extractvalue { i8*, i32 } %156, 1
  store i32 %158, i32* %9, align 4
  %159 = load i32, i32* @x.1291
  %160 = load i32, i32* @y.1292
  %161 = sub i32 %159, 144185719
  %162 = sub i32 %161, 1
  %163 = add i32 %162, 144185719
  %164 = sub i32 %159, 1
  %165 = mul i32 %159, %163
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %160, 10
  %169 = and i1 %167, %168
  %170 = xor i1 %167, %168
  %171 = or i1 %169, %170
  %172 = or i1 %167, %168
  br i1 %171, label %173, label %320

; <label>:173:                                    ; preds = %155
  invoke void @__cxa_end_catch()
          to label %213 unwind label %304

; <label>:174:                                    ; preds = %77
  %175 = load %struct.Edge*, %struct.Edge** %6, align 8
  %176 = load %struct.Edge*, %struct.Edge** %7, align 8
  %177 = bitcast %"class.std::vector.26"* %10 to %"struct.std::_Vector_base.27"*
  %178 = call dereferenceable(1) %"class.std::allocator.28"* @_ZNSt12_Vector_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.27"* %177) #3
  invoke void @_ZSt8_DestroyIP4EdgeS0_EvT_S2_RSaIT0_E(%struct.Edge* %175, %struct.Edge* %176, %"class.std::allocator.28"* dereferenceable(1) %178)
          to label %179 unwind label %128

; <label>:179:                                    ; preds = %174
  br label %180

; <label>:180:                                    ; preds = %179, %127
  %181 = bitcast %"class.std::vector.26"* %10 to %"struct.std::_Vector_base.27"*
  %182 = load %struct.Edge*, %struct.Edge** %6, align 8
  %183 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseI4EdgeSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base.27"* %181, %struct.Edge* %182, i64 %183)
          to label %184 unwind label %128

; <label>:184:                                    ; preds = %180
  %185 = load i32, i32* @x.1291
  %186 = load i32, i32* @y.1292
  %187 = sub i32 0, 1
  %188 = add i32 %185, %187
  %189 = sub i32 %185, 1
  %190 = mul i32 %185, %188
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %186, 10
  %194 = and i1 %192, %193
  %195 = xor i1 %192, %193
  %196 = or i1 %194, %195
  %197 = or i1 %192, %193
  br i1 %196, label %198, label %324

; <label>:198:                                    ; preds = %184, %324
  %199 = load i32, i32* @x.1291
  %200 = load i32, i32* @y.1292
  %201 = sub i32 0, 1
  %202 = add i32 %199, %201
  %203 = sub i32 %199, 1
  %204 = mul i32 %199, %202
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %200, 10
  %208 = and i1 %206, %207
  %209 = xor i1 %206, %207
  %210 = or i1 %208, %209
  %211 = or i1 %206, %207
  br i1 %210, label %212, label %324

; <label>:212:                                    ; preds = %198
  invoke void @__cxa_rethrow() #15
          to label %307 unwind label %128

; <label>:213:                                    ; preds = %173
  br label %299

; <label>:214:                                    ; preds = %37
  %215 = load i32, i32* @x.1291
  %216 = load i32, i32* @y.1292
  %217 = sub i32 0, 1
  %218 = add i32 %215, %217
  %219 = sub i32 %215, 1
  %220 = mul i32 %215, %218
  %221 = urem i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %216, 10
  %224 = and i1 %222, %223
  %225 = xor i1 %222, %223
  %226 = or i1 %224, %225
  %227 = or i1 %222, %223
  br i1 %226, label %228, label %325

; <label>:228:                                    ; preds = %214, %325
  %229 = bitcast %"class.std::vector.26"* %10 to %"struct.std::_Vector_base.27"*
  %230 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %229, i32 0, i32 0
  %231 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %230, i32 0, i32 0
  %232 = load %struct.Edge*, %struct.Edge** %231, align 8
  %233 = bitcast %"class.std::vector.26"* %10 to %"struct.std::_Vector_base.27"*
  %234 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %233, i32 0, i32 0
  %235 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %234, i32 0, i32 1
  %236 = load %struct.Edge*, %struct.Edge** %235, align 8
  %237 = bitcast %"class.std::vector.26"* %10 to %"struct.std::_Vector_base.27"*
  %238 = call dereferenceable(1) %"class.std::allocator.28"* @_ZNSt12_Vector_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.27"* %237) #3
  call void @_ZSt8_DestroyIP4EdgeS0_EvT_S2_RSaIT0_E(%struct.Edge* %232, %struct.Edge* %236, %"class.std::allocator.28"* dereferenceable(1) %238)
  %239 = bitcast %"class.std::vector.26"* %10 to %"struct.std::_Vector_base.27"*
  %240 = bitcast %"class.std::vector.26"* %10 to %"struct.std::_Vector_base.27"*
  %241 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %240, i32 0, i32 0
  %242 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %241, i32 0, i32 0
  %243 = load %struct.Edge*, %struct.Edge** %242, align 8
  %244 = bitcast %"class.std::vector.26"* %10 to %"struct.std::_Vector_base.27"*
  %245 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %244, i32 0, i32 0
  %246 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %245, i32 0, i32 2
  %247 = load %struct.Edge*, %struct.Edge** %246, align 8
  %248 = bitcast %"class.std::vector.26"* %10 to %"struct.std::_Vector_base.27"*
  %249 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %248, i32 0, i32 0
  %250 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %249, i32 0, i32 0
  %251 = load %struct.Edge*, %struct.Edge** %250, align 8
  %252 = ptrtoint %struct.Edge* %247 to i64
  %253 = ptrtoint %struct.Edge* %251 to i64
  %254 = add i64 %252, -6910568553926321947
  %255 = sub i64 %254, %253
  %256 = sub i64 %255, -6910568553926321947
  %257 = sub i64 %252, %253
  %258 = sdiv exact i64 %256, 16
  call void @_ZNSt12_Vector_baseI4EdgeSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base.27"* %239, %struct.Edge* %243, i64 %258)
  %259 = load %struct.Edge*, %struct.Edge** %6, align 8
  %260 = bitcast %"class.std::vector.26"* %10 to %"struct.std::_Vector_base.27"*
  %261 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %260, i32 0, i32 0
  %262 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %261, i32 0, i32 0
  store %struct.Edge* %259, %struct.Edge** %262, align 8
  %263 = load %struct.Edge*, %struct.Edge** %7, align 8
  %264 = bitcast %"class.std::vector.26"* %10 to %"struct.std::_Vector_base.27"*
  %265 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %264, i32 0, i32 0
  %266 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %265, i32 0, i32 1
  store %struct.Edge* %263, %struct.Edge** %266, align 8
  %267 = load %struct.Edge*, %struct.Edge** %6, align 8
  %268 = load i64, i64* %5, align 8
  %269 = getelementptr inbounds %struct.Edge, %struct.Edge* %267, i64 %268
  %270 = bitcast %"class.std::vector.26"* %10 to %"struct.std::_Vector_base.27"*
  %271 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %270, i32 0, i32 0
  %272 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %271, i32 0, i32 2
  store %struct.Edge* %269, %struct.Edge** %272, align 8
  %273 = load i32, i32* @x.1291
  %274 = load i32, i32* @y.1292
  %275 = sub i32 0, 1
  %276 = add i32 %273, %275
  %277 = sub i32 %273, 1
  %278 = mul i32 %273, %276
  %279 = urem i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %274, 10
  %282 = xor i1 %280, true
  %283 = xor i1 %281, true
  %284 = xor i1 true, true
  %285 = and i1 %282, true
  %286 = and i1 %280, %284
  %287 = and i1 %283, true
  %288 = and i1 %281, %284
  %289 = or i1 %285, %286
  %290 = or i1 %287, %288
  %291 = xor i1 %289, %290
  %292 = or i1 %282, %283
  %293 = xor i1 %292, true
  %294 = or i1 true, %284
  %295 = and i1 %293, %294
  %296 = or i1 %291, %295
  %297 = or i1 %280, %281
  br i1 %296, label %298, label %325

; <label>:298:                                    ; preds = %228
  ret void

; <label>:299:                                    ; preds = %213
  %300 = load i8*, i8** %8, align 8
  %301 = load i32, i32* %9, align 4
  %302 = insertvalue { i8*, i32 } undef, i8* %300, 0
  %303 = insertvalue { i8*, i32 } %302, i32 %301, 1
  resume { i8*, i32 } %303

; <label>:304:                                    ; preds = %173
  %305 = landingpad { i8*, i32 }
          catch i8* null
  %306 = extractvalue { i8*, i32 } %305, 0
  call void @__clang_call_terminate(i8* %306) #12
  unreachable

; <label>:307:                                    ; preds = %212
  unreachable

; <label>:308:                                    ; preds = %59, %44
  %309 = load i8*, i8** %8, align 8
  %310 = call i8* @__cxa_begin_catch(i8* %309) #3
  %311 = load %struct.Edge*, %struct.Edge** %7, align 8
  %312 = icmp ne %struct.Edge* %311, null
  br label %59

; <label>:313:                                    ; preds = %105, %78
  %314 = bitcast %"class.std::vector.26"* %10 to %"struct.std::_Vector_base.27"*
  %315 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %314, i32 0, i32 0
  %316 = bitcast %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %315 to %"class.std::allocator.28"*
  %317 = load %struct.Edge*, %struct.Edge** %6, align 8
  %318 = call i64 @_ZNKSt6vectorI4EdgeSaIS0_EE4sizeEv(%"class.std::vector.26"* %10) #3
  %319 = getelementptr inbounds %struct.Edge, %struct.Edge* %317, i64 %318
  br label %105

; <label>:320:                                    ; preds = %155, %128
  %321 = landingpad { i8*, i32 }
          cleanup
  %322 = extractvalue { i8*, i32 } %321, 0
  store i8* %322, i8** %8, align 8
  %323 = extractvalue { i8*, i32 } %321, 1
  store i32 %323, i32* %9, align 4
  br label %155

; <label>:324:                                    ; preds = %198, %184
  br label %198

; <label>:325:                                    ; preds = %228, %214
  %326 = bitcast %"class.std::vector.26"* %10 to %"struct.std::_Vector_base.27"*
  %327 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %326, i32 0, i32 0
  %328 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %327, i32 0, i32 0
  %329 = load %struct.Edge*, %struct.Edge** %328, align 8
  %330 = bitcast %"class.std::vector.26"* %10 to %"struct.std::_Vector_base.27"*
  %331 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %330, i32 0, i32 0
  %332 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %331, i32 0, i32 1
  %333 = load %struct.Edge*, %struct.Edge** %332, align 8
  %334 = bitcast %"class.std::vector.26"* %10 to %"struct.std::_Vector_base.27"*
  %335 = call dereferenceable(1) %"class.std::allocator.28"* @_ZNSt12_Vector_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.27"* %334) #3
  call void @_ZSt8_DestroyIP4EdgeS0_EvT_S2_RSaIT0_E(%struct.Edge* %329, %struct.Edge* %333, %"class.std::allocator.28"* dereferenceable(1) %335)
  %336 = bitcast %"class.std::vector.26"* %10 to %"struct.std::_Vector_base.27"*
  %337 = bitcast %"class.std::vector.26"* %10 to %"struct.std::_Vector_base.27"*
  %338 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %337, i32 0, i32 0
  %339 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %338, i32 0, i32 0
  %340 = load %struct.Edge*, %struct.Edge** %339, align 8
  %341 = bitcast %"class.std::vector.26"* %10 to %"struct.std::_Vector_base.27"*
  %342 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %341, i32 0, i32 0
  %343 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %342, i32 0, i32 2
  %344 = load %struct.Edge*, %struct.Edge** %343, align 8
  %345 = bitcast %"class.std::vector.26"* %10 to %"struct.std::_Vector_base.27"*
  %346 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %345, i32 0, i32 0
  %347 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %346, i32 0, i32 0
  %348 = load %struct.Edge*, %struct.Edge** %347, align 8
  %349 = ptrtoint %struct.Edge* %344 to i64
  %350 = ptrtoint %struct.Edge* %348 to i64
  %351 = sub i64 %349, 4609615296209244348
  %352 = sub i64 %351, %350
  %353 = add i64 %352, 4609615296209244348
  %354 = sub i64 %349, %350
  %355 = mul i64 %353, %350
  %356 = sub i64 0, %350
  %357 = add i64 %349, %356
  %358 = sub i64 %349, %350
  %359 = sub i64 0, 1298875569325742178
  %360 = sub i64 %359, %357
  %361 = add i64 %360, 1298875569325742178
  %362 = sub i64 0, %357
  %363 = add i64 %361, 4276620066219356534
  %364 = add i64 %363, 16
  %365 = sub i64 %364, 4276620066219356534
  %366 = add i64 %361, 16
  %367 = add i64 %357, -153922733552056630
  %368 = sub i64 %367, 16
  %369 = sub i64 %368, -153922733552056630
  %370 = sub i64 %357, 16
  %371 = mul i64 %369, 16
  %372 = shl i64 %357, 16
  %373 = sub i64 0, 16
  %374 = add i64 %357, %373
  %375 = sub i64 %357, 16
  %376 = mul i64 %374, 16
  %377 = sub i64 0, %357
  %378 = add i64 0, %377
  %379 = sub i64 0, %357
  %380 = sub i64 0, %378
  %381 = sub i64 0, 16
  %382 = add i64 %380, %381
  %383 = sub i64 0, %382
  %384 = add i64 %378, 16
  %385 = shl i64 %357, 16
  %386 = sub i64 0, 8792246867789568002
  %387 = sub i64 %386, %357
  %388 = add i64 %387, 8792246867789568002
  %389 = sub i64 0, %357
  %390 = sub i64 0, %388
  %391 = sub i64 0, 16
  %392 = add i64 %390, %391
  %393 = sub i64 0, %392
  %394 = add i64 %388, 16
  %395 = sdiv exact i64 %357, 16
  call void @_ZNSt12_Vector_baseI4EdgeSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base.27"* %336, %struct.Edge* %340, i64 %395)
  %396 = load %struct.Edge*, %struct.Edge** %6, align 8
  %397 = bitcast %"class.std::vector.26"* %10 to %"struct.std::_Vector_base.27"*
  %398 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %397, i32 0, i32 0
  %399 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %398, i32 0, i32 0
  store %struct.Edge* %396, %struct.Edge** %399, align 8
  %400 = load %struct.Edge*, %struct.Edge** %7, align 8
  %401 = bitcast %"class.std::vector.26"* %10 to %"struct.std::_Vector_base.27"*
  %402 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %401, i32 0, i32 0
  %403 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %402, i32 0, i32 1
  store %struct.Edge* %400, %struct.Edge** %403, align 8
  %404 = load %struct.Edge*, %struct.Edge** %6, align 8
  %405 = load i64, i64* %5, align 8
  %406 = getelementptr inbounds %struct.Edge, %struct.Edge* %404, i64 %405
  %407 = bitcast %"class.std::vector.26"* %10 to %"struct.std::_Vector_base.27"*
  %408 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %407, i32 0, i32 0
  %409 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %408, i32 0, i32 2
  store %struct.Edge* %406, %struct.Edge** %409, align 8
  br label %228
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI4EdgeE9constructIS1_JRKS1_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.29"*, %struct.Edge*, %struct.Edge* dereferenceable(16)) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.29"*, align 8
  %5 = alloca %struct.Edge*, align 8
  %6 = alloca %struct.Edge*, align 8
  store %"class.__gnu_cxx::new_allocator.29"* %0, %"class.__gnu_cxx::new_allocator.29"** %4, align 8
  store %struct.Edge* %1, %struct.Edge** %5, align 8
  store %struct.Edge* %2, %struct.Edge** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.29"*, %"class.__gnu_cxx::new_allocator.29"** %4, align 8
  %8 = load %struct.Edge*, %struct.Edge** %5, align 8
  %9 = bitcast %struct.Edge* %8 to i8*
  %10 = bitcast i8* %9 to %struct.Edge*
  %11 = load %struct.Edge*, %struct.Edge** %6, align 8
  %12 = call dereferenceable(16) %struct.Edge* @_ZSt7forwardIRK4EdgeEOT_RNSt16remove_referenceIS3_E4typeE(%struct.Edge* dereferenceable(16) %11) #3
  %13 = bitcast %struct.Edge* %10 to i8*
  %14 = bitcast %struct.Edge* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 16, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %struct.Edge* @_ZSt7forwardIRK4EdgeEOT_RNSt16remove_referenceIS3_E4typeE(%struct.Edge* dereferenceable(16)) #4 comdat {
  %2 = alloca %struct.Edge*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1295
  %6 = load i32, i32* @y.1296
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -348725834, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %73
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -348725834, label %18
    i32 -50354401, label %38
    i32 -2010986626, label %68
    i32 -326109383, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %73

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -50354401, i32 -326109383
  store i32 %37, i32* %14
  br label %73

; <label>:38:                                     ; preds = %15
  %39 = alloca %struct.Edge*, align 8
  store %struct.Edge* %0, %struct.Edge** %39, align 8
  %40 = load %struct.Edge*, %struct.Edge** %39, align 8
  store %struct.Edge* %40, %struct.Edge** %2
  %41 = load i32, i32* @x.1295
  %42 = load i32, i32* @y.1296
  %43 = sub i32 %41, 1503433441
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 1503433441
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -2010986626, i32 -326109383
  store i32 %67, i32* %14
  br label %73

; <label>:68:                                     ; preds = %15
  %69 = load volatile %struct.Edge*, %struct.Edge** %2
  ret %struct.Edge* %69

; <label>:70:                                     ; preds = %15
  %71 = alloca %struct.Edge*, align 8
  store %struct.Edge* %0, %struct.Edge** %71, align 8
  %72 = load %struct.Edge*, %struct.Edge** %71, align 8
  store i32 -50354401, i32* %14
  br label %73

; <label>:73:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorI4EdgeSaIS0_EE12_M_check_lenEmPKc(%"class.std::vector.26"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.std::vector.26"*
  %7 = alloca %"class.std::vector.26"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  store %"class.std::vector.26"* %0, %"class.std::vector.26"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %12 = load %"class.std::vector.26"*, %"class.std::vector.26"** %7, align 8
  store %"class.std::vector.26"* %12, %"class.std::vector.26"** %6
  %13 = load volatile %"class.std::vector.26"*, %"class.std::vector.26"** %6
  %14 = call i64 @_ZNKSt6vectorI4EdgeSaIS0_EE8max_sizeEv(%"class.std::vector.26"* %13) #3
  %15 = load volatile %"class.std::vector.26"*, %"class.std::vector.26"** %6
  %16 = call i64 @_ZNKSt6vectorI4EdgeSaIS0_EE4sizeEv(%"class.std::vector.26"* %15) #3
  %17 = add i64 %14, -5222829329021319301
  %18 = sub i64 %17, %16
  %19 = sub i64 %18, -5222829329021319301
  %20 = sub i64 %14, %16
  store i64 %19, i64* %5
  %21 = load i64, i64* %8, align 8
  store i64 %21, i64* %4
  %22 = alloca i32
  store i32 1220482463, i32* %22
  %23 = alloca i64
  br label %24

; <label>:24:                                     ; preds = %3, %64
  %25 = load i32, i32* %22
  switch i32 %25, label %26 [
    i32 1220482463, label %27
    i32 1697506396, label %32
    i32 -1967052998, label %34
    i32 1264103376, label %51
    i32 521067537, label %57
    i32 561144106, label %60
    i32 287273817, label %62
  ]

; <label>:26:                                     ; preds = %24
  br label %64

; <label>:27:                                     ; preds = %24
  %28 = load volatile i64, i64* %5
  %29 = load volatile i64, i64* %4
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i32 1697506396, i32 -1967052998
  store i32 %31, i32* %22
  br label %64

; <label>:32:                                     ; preds = %24
  %33 = load i8*, i8** %9, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %33) #15
  unreachable

; <label>:34:                                     ; preds = %24
  %35 = load volatile %"class.std::vector.26"*, %"class.std::vector.26"** %6
  %36 = call i64 @_ZNKSt6vectorI4EdgeSaIS0_EE4sizeEv(%"class.std::vector.26"* %35) #3
  %37 = load volatile %"class.std::vector.26"*, %"class.std::vector.26"** %6
  %38 = call i64 @_ZNKSt6vectorI4EdgeSaIS0_EE4sizeEv(%"class.std::vector.26"* %37) #3
  store i64 %38, i64* %11, align 8
  %39 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %11, i64* dereferenceable(8) %8)
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 0, %36
  %42 = sub i64 0, %40
  %43 = add i64 %41, %42
  %44 = sub i64 0, %43
  %45 = add i64 %36, %40
  store i64 %44, i64* %10, align 8
  %46 = load i64, i64* %10, align 8
  %47 = load volatile %"class.std::vector.26"*, %"class.std::vector.26"** %6
  %48 = call i64 @_ZNKSt6vectorI4EdgeSaIS0_EE4sizeEv(%"class.std::vector.26"* %47) #3
  %49 = icmp ult i64 %46, %48
  %50 = select i1 %49, i32 521067537, i32 1264103376
  store i32 %50, i32* %22
  br label %64

; <label>:51:                                     ; preds = %24
  %52 = load i64, i64* %10, align 8
  %53 = load volatile %"class.std::vector.26"*, %"class.std::vector.26"** %6
  %54 = call i64 @_ZNKSt6vectorI4EdgeSaIS0_EE8max_sizeEv(%"class.std::vector.26"* %53) #3
  %55 = icmp ugt i64 %52, %54
  %56 = select i1 %55, i32 521067537, i32 561144106
  store i32 %56, i32* %22
  br label %64

; <label>:57:                                     ; preds = %24
  %58 = load volatile %"class.std::vector.26"*, %"class.std::vector.26"** %6
  %59 = call i64 @_ZNKSt6vectorI4EdgeSaIS0_EE8max_sizeEv(%"class.std::vector.26"* %58) #3
  store i32 287273817, i32* %22
  store i64 %59, i64* %23
  br label %64

; <label>:60:                                     ; preds = %24
  %61 = load i64, i64* %10, align 8
  store i32 287273817, i32* %22
  store i64 %61, i64* %23
  br label %64

; <label>:62:                                     ; preds = %24
  %63 = load i64, i64* %23
  ret i64 %63

; <label>:64:                                     ; preds = %60, %57, %51, %34, %27, %26
  br label %24
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge* @_ZNSt12_Vector_baseI4EdgeSaIS0_EE11_M_allocateEm(%"struct.std::_Vector_base.27"*, i64) #0 comdat align 2 {
  %3 = alloca %struct.Edge*
  %4 = alloca i64
  %5 = alloca %"struct.std::_Vector_base.27"*
  %6 = alloca %"struct.std::_Vector_base.27"*, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Vector_base.27"* %0, %"struct.std::_Vector_base.27"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"struct.std::_Vector_base.27"*, %"struct.std::_Vector_base.27"** %6, align 8
  store %"struct.std::_Vector_base.27"* %8, %"struct.std::_Vector_base.27"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = alloca i32
  store i32 743028734, i32* %10
  %11 = alloca %struct.Edge*
  br label %12

; <label>:12:                                     ; preds = %2, %110
  %13 = load i32, i32* %10
  switch i32 %13, label %14 [
    i32 743028734, label %15
    i32 1205659661, label %19
    i32 -28930347, label %34
    i32 -515644611, label %67
    i32 955655822, label %69
    i32 -314563382, label %85
    i32 -1462741278, label %100
    i32 -1024632027, label %101
    i32 1586894818, label %103
    i32 1206442314, label %109
  ]

; <label>:14:                                     ; preds = %12
  br label %110

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp ne i64 %16, 0
  %18 = select i1 %17, i32 1205659661, i32 955655822
  store i32 %18, i32* %10
  br label %110

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.1299
  %21 = load i32, i32* @y.1300
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  %33 = select i1 %31, i32 -28930347, i32 1586894818
  store i32 %33, i32* %10
  br label %110

; <label>:34:                                     ; preds = %12
  %35 = load volatile %"struct.std::_Vector_base.27"*, %"struct.std::_Vector_base.27"** %5
  %36 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %35, i32 0, i32 0
  %37 = bitcast %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %36 to %"class.std::allocator.28"*
  %38 = load i64, i64* %7, align 8
  %39 = call %struct.Edge* @_ZNSt16allocator_traitsISaI4EdgeEE8allocateERS1_m(%"class.std::allocator.28"* dereferenceable(1) %37, i64 %38)
  store %struct.Edge* %39, %struct.Edge** %3
  %40 = load i32, i32* @x.1299
  %41 = load i32, i32* @y.1300
  %42 = sub i32 %40, -817767491
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -817767491
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -515644611, i32 1586894818
  store i32 %66, i32* %10
  br label %110

; <label>:67:                                     ; preds = %12
  store i32 -1024632027, i32* %10
  %68 = load volatile %struct.Edge*, %struct.Edge** %3
  store %struct.Edge* %68, %struct.Edge** %11
  br label %110

; <label>:69:                                     ; preds = %12
  %70 = load i32, i32* @x.1299
  %71 = load i32, i32* @y.1300
  %72 = sub i32 %70, 1727262038
  %73 = sub i32 %72, 1
  %74 = add i32 %73, 1727262038
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  %84 = select i1 %82, i32 -314563382, i32 1206442314
  store i32 %84, i32* %10
  br label %110

; <label>:85:                                     ; preds = %12
  %86 = load i32, i32* @x.1299
  %87 = load i32, i32* @y.1300
  %88 = sub i32 0, 1
  %89 = add i32 %86, %88
  %90 = sub i32 %86, 1
  %91 = mul i32 %86, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %87, 10
  %95 = and i1 %93, %94
  %96 = xor i1 %93, %94
  %97 = or i1 %95, %96
  %98 = or i1 %93, %94
  %99 = select i1 %97, i32 -1462741278, i32 1206442314
  store i32 %99, i32* %10
  br label %110

; <label>:100:                                    ; preds = %12
  store i32 -1024632027, i32* %10
  store %struct.Edge* null, %struct.Edge** %11
  br label %110

; <label>:101:                                    ; preds = %12
  %102 = load %struct.Edge*, %struct.Edge** %11
  ret %struct.Edge* %102

; <label>:103:                                    ; preds = %12
  %104 = load volatile %"struct.std::_Vector_base.27"*, %"struct.std::_Vector_base.27"** %5
  %105 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %104, i32 0, i32 0
  %106 = bitcast %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %105 to %"class.std::allocator.28"*
  %107 = load i64, i64* %7, align 8
  %108 = call %struct.Edge* @_ZNSt16allocator_traitsISaI4EdgeEE8allocateERS1_m(%"class.std::allocator.28"* dereferenceable(1) %106, i64 %107)
  store i32 -28930347, i32* %10
  br label %110

; <label>:109:                                    ; preds = %12
  store i32 -314563382, i32* %10
  br label %110

; <label>:110:                                    ; preds = %109, %103, %100, %85, %69, %67, %34, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorI4EdgeSaIS0_EE4sizeEv(%"class.std::vector.26"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.26"*, align 8
  store %"class.std::vector.26"* %0, %"class.std::vector.26"** %2, align 8
  %3 = load %"class.std::vector.26"*, %"class.std::vector.26"** %2, align 8
  %4 = bitcast %"class.std::vector.26"* %3 to %"struct.std::_Vector_base.27"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %struct.Edge*, %struct.Edge** %6, align 8
  %8 = bitcast %"class.std::vector.26"* %3 to %"struct.std::_Vector_base.27"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl", %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %struct.Edge*, %struct.Edge** %10, align 8
  %12 = ptrtoint %struct.Edge* %7 to i64
  %13 = ptrtoint %struct.Edge* %11 to i64
  %14 = add i64 %12, -473255420032335583
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, -473255420032335583
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 16
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge* @_ZSt34__uninitialized_move_if_noexcept_aIP4EdgeS1_SaIS0_EET0_T_S4_S3_RT1_(%struct.Edge*, %struct.Edge*, %struct.Edge*, %"class.std::allocator.28"* dereferenceable(1)) #0 comdat {
  %5 = alloca %struct.Edge*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.1303
  %9 = load i32, i32* @y.1304
  %10 = add i32 %8, -795875090
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -795875090
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1225918461, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %87
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1225918461, label %22
    i32 293834271, label %30
    i32 -1739450062, label %65
    i32 -654878373, label %67
  ]

; <label>:21:                                     ; preds = %19
  br label %87

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 293834271, i32 -654878373
  store i32 %29, i32* %18
  br label %87

; <label>:30:                                     ; preds = %19
  %31 = alloca %struct.Edge*, align 8
  %32 = alloca %struct.Edge*, align 8
  %33 = alloca %struct.Edge*, align 8
  %34 = alloca %"class.std::allocator.28"*, align 8
  %35 = alloca %"class.std::move_iterator.57", align 8
  %36 = alloca %"class.std::move_iterator.57", align 8
  store %struct.Edge* %0, %struct.Edge** %31, align 8
  store %struct.Edge* %1, %struct.Edge** %32, align 8
  store %struct.Edge* %2, %struct.Edge** %33, align 8
  store %"class.std::allocator.28"* %3, %"class.std::allocator.28"** %34, align 8
  %37 = load %struct.Edge*, %struct.Edge** %31, align 8
  %38 = call %struct.Edge* @_ZSt32__make_move_if_noexcept_iteratorIP4EdgeSt13move_iteratorIS1_EET0_T_(%struct.Edge* %37)
  %39 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %35, i32 0, i32 0
  store %struct.Edge* %38, %struct.Edge** %39, align 8
  %40 = load %struct.Edge*, %struct.Edge** %32, align 8
  %41 = call %struct.Edge* @_ZSt32__make_move_if_noexcept_iteratorIP4EdgeSt13move_iteratorIS1_EET0_T_(%struct.Edge* %40)
  %42 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %36, i32 0, i32 0
  store %struct.Edge* %41, %struct.Edge** %42, align 8
  %43 = load %struct.Edge*, %struct.Edge** %33, align 8
  %44 = load %"class.std::allocator.28"*, %"class.std::allocator.28"** %34, align 8
  %45 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %35, i32 0, i32 0
  %46 = load %struct.Edge*, %struct.Edge** %45, align 8
  %47 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %36, i32 0, i32 0
  %48 = load %struct.Edge*, %struct.Edge** %47, align 8
  %49 = call %struct.Edge* @_ZSt22__uninitialized_copy_aISt13move_iteratorIP4EdgeES2_S1_ET0_T_S5_S4_RSaIT1_E(%struct.Edge* %46, %struct.Edge* %48, %struct.Edge* %43, %"class.std::allocator.28"* dereferenceable(1) %44)
  store %struct.Edge* %49, %struct.Edge** %5
  %50 = load i32, i32* @x.1303
  %51 = load i32, i32* @y.1304
  %52 = sub i32 %50, -220188781
  %53 = sub i32 %52, 1
  %54 = add i32 %53, -220188781
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -1739450062, i32 -654878373
  store i32 %64, i32* %18
  br label %87

; <label>:65:                                     ; preds = %19
  %66 = load volatile %struct.Edge*, %struct.Edge** %5
  ret %struct.Edge* %66

; <label>:67:                                     ; preds = %19
  %68 = alloca %struct.Edge*, align 8
  %69 = alloca %struct.Edge*, align 8
  %70 = alloca %struct.Edge*, align 8
  %71 = alloca %"class.std::allocator.28"*, align 8
  %72 = alloca %"class.std::move_iterator.57", align 8
  %73 = alloca %"class.std::move_iterator.57", align 8
  store %struct.Edge* %0, %struct.Edge** %68, align 8
  store %struct.Edge* %1, %struct.Edge** %69, align 8
  store %struct.Edge* %2, %struct.Edge** %70, align 8
  store %"class.std::allocator.28"* %3, %"class.std::allocator.28"** %71, align 8
  %74 = load %struct.Edge*, %struct.Edge** %68, align 8
  %75 = call %struct.Edge* @_ZSt32__make_move_if_noexcept_iteratorIP4EdgeSt13move_iteratorIS1_EET0_T_(%struct.Edge* %74)
  %76 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %72, i32 0, i32 0
  store %struct.Edge* %75, %struct.Edge** %76, align 8
  %77 = load %struct.Edge*, %struct.Edge** %69, align 8
  %78 = call %struct.Edge* @_ZSt32__make_move_if_noexcept_iteratorIP4EdgeSt13move_iteratorIS1_EET0_T_(%struct.Edge* %77)
  %79 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %73, i32 0, i32 0
  store %struct.Edge* %78, %struct.Edge** %79, align 8
  %80 = load %struct.Edge*, %struct.Edge** %70, align 8
  %81 = load %"class.std::allocator.28"*, %"class.std::allocator.28"** %71, align 8
  %82 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %72, i32 0, i32 0
  %83 = load %struct.Edge*, %struct.Edge** %82, align 8
  %84 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %73, i32 0, i32 0
  %85 = load %struct.Edge*, %struct.Edge** %84, align 8
  %86 = call %struct.Edge* @_ZSt22__uninitialized_copy_aISt13move_iteratorIP4EdgeES2_S1_ET0_T_S5_S4_RSaIT1_E(%struct.Edge* %83, %struct.Edge* %85, %struct.Edge* %80, %"class.std::allocator.28"* dereferenceable(1) %81)
  store i32 293834271, i32* %18
  br label %87

; <label>:87:                                     ; preds = %67, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaI4EdgeEE7destroyIS0_EEvRS1_PT_(%"class.std::allocator.28"* dereferenceable(1), %struct.Edge*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.28"*, align 8
  %4 = alloca %struct.Edge*, align 8
  store %"class.std::allocator.28"* %0, %"class.std::allocator.28"** %3, align 8
  store %struct.Edge* %1, %struct.Edge** %4, align 8
  %5 = load %"class.std::allocator.28"*, %"class.std::allocator.28"** %3, align 8
  %6 = bitcast %"class.std::allocator.28"* %5 to %"class.__gnu_cxx::new_allocator.29"*
  %7 = load %struct.Edge*, %struct.Edge** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI4EdgeE7destroyIS1_EEvPT_(%"class.__gnu_cxx::new_allocator.29"* %6, %struct.Edge* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorI4EdgeSaIS0_EE8max_sizeEv(%"class.std::vector.26"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.26"*, align 8
  store %"class.std::vector.26"* %0, %"class.std::vector.26"** %2, align 8
  %3 = load %"class.std::vector.26"*, %"class.std::vector.26"** %2, align 8
  %4 = bitcast %"class.std::vector.26"* %3 to %"struct.std::_Vector_base.27"*
  %5 = call dereferenceable(1) %"class.std::allocator.28"* @_ZNKSt12_Vector_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.27"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaI4EdgeEE8max_sizeERKS1_(%"class.std::allocator.28"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaI4EdgeEE8max_sizeERKS1_(%"class.std::allocator.28"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.28"*, align 8
  store %"class.std::allocator.28"* %0, %"class.std::allocator.28"** %2, align 8
  %3 = load %"class.std::allocator.28"*, %"class.std::allocator.28"** %2, align 8
  %4 = bitcast %"class.std::allocator.28"* %3 to %"class.__gnu_cxx::new_allocator.29"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorI4EdgeE8max_sizeEv(%"class.__gnu_cxx::new_allocator.29"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.28"* @_ZNKSt12_Vector_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.27"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.27"*, align 8
  store %"struct.std::_Vector_base.27"* %0, %"struct.std::_Vector_base.27"** %2, align 8
  %3 = load %"struct.std::_Vector_base.27"*, %"struct.std::_Vector_base.27"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.27", %"struct.std::_Vector_base.27"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Edge, std::allocator<Edge> >::_Vector_impl"* %4 to %"class.std::allocator.28"*
  ret %"class.std::allocator.28"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorI4EdgeE8max_sizeEv(%"class.__gnu_cxx::new_allocator.29"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.1313
  %5 = load i32, i32* @y.1314
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -653224468, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %71
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -653224468, label %17
    i32 -1910168076, label %37
    i32 -1001439181, label %67
    i32 999287233, label %68
  ]

; <label>:16:                                     ; preds = %14
  br label %71

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -1910168076, i32 999287233
  store i32 %36, i32* %13
  br label %71

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator.29"*, align 8
  store %"class.__gnu_cxx::new_allocator.29"* %0, %"class.__gnu_cxx::new_allocator.29"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.29"*, %"class.__gnu_cxx::new_allocator.29"** %38, align 8
  %40 = load i32, i32* @x.1313
  %41 = load i32, i32* @y.1314
  %42 = sub i32 %40, 2020885146
  %43 = sub i32 %42, 1
  %44 = add i32 %43, 2020885146
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -1001439181, i32 999287233
  store i32 %66, i32* %13
  br label %71

; <label>:67:                                     ; preds = %14
  ret i64 1152921504606846975

; <label>:68:                                     ; preds = %14
  %69 = alloca %"class.__gnu_cxx::new_allocator.29"*, align 8
  store %"class.__gnu_cxx::new_allocator.29"* %0, %"class.__gnu_cxx::new_allocator.29"** %69, align 8
  %70 = load %"class.__gnu_cxx::new_allocator.29"*, %"class.__gnu_cxx::new_allocator.29"** %69, align 8
  store i32 -1910168076, i32* %13
  br label %71

; <label>:71:                                     ; preds = %68, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge* @_ZNSt16allocator_traitsISaI4EdgeEE8allocateERS1_m(%"class.std::allocator.28"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.28"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.28"* %0, %"class.std::allocator.28"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.28"*, %"class.std::allocator.28"** %3, align 8
  %6 = bitcast %"class.std::allocator.28"* %5 to %"class.__gnu_cxx::new_allocator.29"*
  %7 = load i64, i64* %4, align 8
  %8 = call %struct.Edge* @_ZN9__gnu_cxx13new_allocatorI4EdgeE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.29"* %6, i64 %7, i8* null)
  ret %struct.Edge* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge* @_ZN9__gnu_cxx13new_allocatorI4EdgeE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.29"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.1317
  %9 = load i32, i32* @y.1318
  %10 = sub i32 %8, 2121405764
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 2121405764
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -2082376932, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %118
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -2082376932, label %22
    i32 -1274360406, label %30
    i32 -1599334897, label %55
    i32 3032882, label %58
    i32 -1008507644, label %86
    i32 -612621267, label %102
    i32 -721493150, label %103
    i32 309270168, label %109
    i32 1327030466, label %117
  ]

; <label>:21:                                     ; preds = %19
  br label %118

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -1274360406, i32 309270168
  store i32 %29, i32* %18
  br label %118

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.__gnu_cxx::new_allocator.29"*, align 8
  %32 = alloca i64, align 8
  store i64* %32, i64** %5
  %33 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.29"* %0, %"class.__gnu_cxx::new_allocator.29"** %31, align 8
  %34 = load volatile i64*, i64** %5
  store i64 %1, i64* %34, align 8
  store i8* %2, i8** %33, align 8
  %35 = load %"class.__gnu_cxx::new_allocator.29"*, %"class.__gnu_cxx::new_allocator.29"** %31, align 8
  %36 = load volatile i64*, i64** %5
  %37 = load i64, i64* %36, align 8
  %38 = call i64 @_ZNK9__gnu_cxx13new_allocatorI4EdgeE8max_sizeEv(%"class.__gnu_cxx::new_allocator.29"* %35) #3
  %39 = icmp ugt i64 %37, %38
  store i1 %39, i1* %4
  %40 = load i32, i32* @x.1317
  %41 = load i32, i32* @y.1318
  %42 = sub i32 %40, 1928597628
  %43 = sub i32 %42, 1
  %44 = add i32 %43, 1928597628
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -1599334897, i32 309270168
  store i32 %54, i32* %18
  br label %118

; <label>:55:                                     ; preds = %19
  %56 = load volatile i1, i1* %4
  %57 = select i1 %56, i32 3032882, i32 -721493150
  store i32 %57, i32* %18
  br label %118

; <label>:58:                                     ; preds = %19
  %59 = load i32, i32* @x.1317
  %60 = load i32, i32* @y.1318
  %61 = sub i32 %59, -849721993
  %62 = sub i32 %61, 1
  %63 = add i32 %62, -849721993
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 true, true
  %72 = and i1 %69, true
  %73 = and i1 %67, %71
  %74 = and i1 %70, true
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 true, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  %85 = select i1 %83, i32 -1008507644, i32 1327030466
  store i32 %85, i32* %18
  br label %118

; <label>:86:                                     ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #15
  %87 = load i32, i32* @x.1317
  %88 = load i32, i32* @y.1318
  %89 = sub i32 %87, 2000511252
  %90 = sub i32 %89, 1
  %91 = add i32 %90, 2000511252
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = and i1 %95, %96
  %98 = xor i1 %95, %96
  %99 = or i1 %97, %98
  %100 = or i1 %95, %96
  %101 = select i1 %99, i32 -612621267, i32 1327030466
  store i32 %101, i32* %18
  br label %118

; <label>:102:                                    ; preds = %19
  unreachable

; <label>:103:                                    ; preds = %19
  %104 = load volatile i64*, i64** %5
  %105 = load i64, i64* %104, align 8
  %106 = mul i64 %105, 16
  %107 = call i8* @_Znwm(i64 %106)
  %108 = bitcast i8* %107 to %struct.Edge*
  ret %struct.Edge* %108

; <label>:109:                                    ; preds = %19
  %110 = alloca %"class.__gnu_cxx::new_allocator.29"*, align 8
  %111 = alloca i64, align 8
  %112 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.29"* %0, %"class.__gnu_cxx::new_allocator.29"** %110, align 8
  store i64 %1, i64* %111, align 8
  store i8* %2, i8** %112, align 8
  %113 = load %"class.__gnu_cxx::new_allocator.29"*, %"class.__gnu_cxx::new_allocator.29"** %110, align 8
  %114 = load i64, i64* %111, align 8
  %115 = call i64 @_ZNK9__gnu_cxx13new_allocatorI4EdgeE8max_sizeEv(%"class.__gnu_cxx::new_allocator.29"* %113) #3
  %116 = icmp ugt i64 %114, %115
  store i32 -1274360406, i32* %18
  br label %118

; <label>:117:                                    ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #15
  store i32 -1008507644, i32* %18
  br label %118

; <label>:118:                                    ; preds = %117, %109, %86, %58, %55, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge* @_ZSt22__uninitialized_copy_aISt13move_iteratorIP4EdgeES2_S1_ET0_T_S5_S4_RSaIT1_E(%struct.Edge*, %struct.Edge*, %struct.Edge*, %"class.std::allocator.28"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.57", align 8
  %6 = alloca %"class.std::move_iterator.57", align 8
  %7 = alloca %struct.Edge*, align 8
  %8 = alloca %"class.std::allocator.28"*, align 8
  %9 = alloca %"class.std::move_iterator.57", align 8
  %10 = alloca %"class.std::move_iterator.57", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %5, i32 0, i32 0
  store %struct.Edge* %0, %struct.Edge** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %6, i32 0, i32 0
  store %struct.Edge* %1, %struct.Edge** %12, align 8
  store %struct.Edge* %2, %struct.Edge** %7, align 8
  store %"class.std::allocator.28"* %3, %"class.std::allocator.28"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.57"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.57"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.57"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.57"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %struct.Edge*, %struct.Edge** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %9, i32 0, i32 0
  %19 = load %struct.Edge*, %struct.Edge** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %10, i32 0, i32 0
  %21 = load %struct.Edge*, %struct.Edge** %20, align 8
  %22 = call %struct.Edge* @_ZSt18uninitialized_copyISt13move_iteratorIP4EdgeES2_ET0_T_S5_S4_(%struct.Edge* %19, %struct.Edge* %21, %struct.Edge* %17)
  ret %struct.Edge* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge* @_ZSt32__make_move_if_noexcept_iteratorIP4EdgeSt13move_iteratorIS1_EET0_T_(%struct.Edge*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.57", align 8
  %3 = alloca %struct.Edge*, align 8
  store %struct.Edge* %0, %struct.Edge** %3, align 8
  %4 = load %struct.Edge*, %struct.Edge** %3, align 8
  call void @_ZNSt13move_iteratorIP4EdgeEC2ES1_(%"class.std::move_iterator.57"* %2, %struct.Edge* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %2, i32 0, i32 0
  %6 = load %struct.Edge*, %struct.Edge** %5, align 8
  ret %struct.Edge* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge* @_ZSt18uninitialized_copyISt13move_iteratorIP4EdgeES2_ET0_T_S5_S4_(%struct.Edge*, %struct.Edge*, %struct.Edge*) #0 comdat {
  %4 = alloca %struct.Edge*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.1323
  %8 = load i32, i32* @y.1324
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -1900702560, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %95
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1900702560, label %20
    i32 -1486698989, label %40
    i32 774390411, label %74
    i32 1047991514, label %76
  ]

; <label>:19:                                     ; preds = %17
  br label %95

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1486698989, i32 1047991514
  store i32 %39, i32* %16
  br label %95

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::move_iterator.57", align 8
  %42 = alloca %"class.std::move_iterator.57", align 8
  %43 = alloca %struct.Edge*, align 8
  %44 = alloca i8, align 1
  %45 = alloca %"class.std::move_iterator.57", align 8
  %46 = alloca %"class.std::move_iterator.57", align 8
  %47 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %41, i32 0, i32 0
  store %struct.Edge* %0, %struct.Edge** %47, align 8
  %48 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %42, i32 0, i32 0
  store %struct.Edge* %1, %struct.Edge** %48, align 8
  store %struct.Edge* %2, %struct.Edge** %43, align 8
  store i8 1, i8* %44, align 1
  %49 = bitcast %"class.std::move_iterator.57"* %45 to i8*
  %50 = bitcast %"class.std::move_iterator.57"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = bitcast %"class.std::move_iterator.57"* %46 to i8*
  %52 = bitcast %"class.std::move_iterator.57"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 8, i1 false)
  %53 = load %struct.Edge*, %struct.Edge** %43, align 8
  %54 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %45, i32 0, i32 0
  %55 = load %struct.Edge*, %struct.Edge** %54, align 8
  %56 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %46, i32 0, i32 0
  %57 = load %struct.Edge*, %struct.Edge** %56, align 8
  %58 = call %struct.Edge* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIP4EdgeES4_EET0_T_S7_S6_(%struct.Edge* %55, %struct.Edge* %57, %struct.Edge* %53)
  store %struct.Edge* %58, %struct.Edge** %4
  %59 = load i32, i32* @x.1323
  %60 = load i32, i32* @y.1324
  %61 = sub i32 %59, -702892156
  %62 = sub i32 %61, 1
  %63 = add i32 %62, -702892156
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  %73 = select i1 %71, i32 774390411, i32 1047991514
  store i32 %73, i32* %16
  br label %95

; <label>:74:                                     ; preds = %17
  %75 = load volatile %struct.Edge*, %struct.Edge** %4
  ret %struct.Edge* %75

; <label>:76:                                     ; preds = %17
  %77 = alloca %"class.std::move_iterator.57", align 8
  %78 = alloca %"class.std::move_iterator.57", align 8
  %79 = alloca %struct.Edge*, align 8
  %80 = alloca i8, align 1
  %81 = alloca %"class.std::move_iterator.57", align 8
  %82 = alloca %"class.std::move_iterator.57", align 8
  %83 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %77, i32 0, i32 0
  store %struct.Edge* %0, %struct.Edge** %83, align 8
  %84 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %78, i32 0, i32 0
  store %struct.Edge* %1, %struct.Edge** %84, align 8
  store %struct.Edge* %2, %struct.Edge** %79, align 8
  store i8 1, i8* %80, align 1
  %85 = bitcast %"class.std::move_iterator.57"* %81 to i8*
  %86 = bitcast %"class.std::move_iterator.57"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 8, i32 8, i1 false)
  %87 = bitcast %"class.std::move_iterator.57"* %82 to i8*
  %88 = bitcast %"class.std::move_iterator.57"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %87, i8* %88, i64 8, i32 8, i1 false)
  %89 = load %struct.Edge*, %struct.Edge** %79, align 8
  %90 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %81, i32 0, i32 0
  %91 = load %struct.Edge*, %struct.Edge** %90, align 8
  %92 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %82, i32 0, i32 0
  %93 = load %struct.Edge*, %struct.Edge** %92, align 8
  %94 = call %struct.Edge* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIP4EdgeES4_EET0_T_S7_S6_(%struct.Edge* %91, %struct.Edge* %93, %struct.Edge* %89)
  store i32 -1486698989, i32* %16
  br label %95

; <label>:95:                                     ; preds = %76, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIP4EdgeES4_EET0_T_S7_S6_(%struct.Edge*, %struct.Edge*, %struct.Edge*) #0 comdat align 2 {
  %4 = alloca %"class.std::move_iterator.57", align 8
  %5 = alloca %"class.std::move_iterator.57", align 8
  %6 = alloca %struct.Edge*, align 8
  %7 = alloca %"class.std::move_iterator.57", align 8
  %8 = alloca %"class.std::move_iterator.57", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %4, i32 0, i32 0
  store %struct.Edge* %0, %struct.Edge** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %5, i32 0, i32 0
  store %struct.Edge* %1, %struct.Edge** %10, align 8
  store %struct.Edge* %2, %struct.Edge** %6, align 8
  %11 = bitcast %"class.std::move_iterator.57"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.57"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.std::move_iterator.57"* %8 to i8*
  %14 = bitcast %"class.std::move_iterator.57"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load %struct.Edge*, %struct.Edge** %6, align 8
  %16 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %7, i32 0, i32 0
  %17 = load %struct.Edge*, %struct.Edge** %16, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %8, i32 0, i32 0
  %19 = load %struct.Edge*, %struct.Edge** %18, align 8
  %20 = call %struct.Edge* @_ZSt4copyISt13move_iteratorIP4EdgeES2_ET0_T_S5_S4_(%struct.Edge* %17, %struct.Edge* %19, %struct.Edge* %15)
  ret %struct.Edge* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge* @_ZSt4copyISt13move_iteratorIP4EdgeES2_ET0_T_S5_S4_(%struct.Edge*, %struct.Edge*, %struct.Edge*) #0 comdat {
  %4 = alloca %struct.Edge*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.1327
  %8 = load i32, i32* @y.1328
  %9 = add i32 %7, 2096077250
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 2096077250
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 748355909, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %98
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 748355909, label %21
    i32 -1073097683, label %29
    i32 1011765355, label %76
    i32 -765285855, label %78
  ]

; <label>:20:                                     ; preds = %18
  br label %98

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1073097683, i32 -765285855
  store i32 %28, i32* %17
  br label %98

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::move_iterator.57", align 8
  %31 = alloca %"class.std::move_iterator.57", align 8
  %32 = alloca %struct.Edge*, align 8
  %33 = alloca %"class.std::move_iterator.57", align 8
  %34 = alloca %"class.std::move_iterator.57", align 8
  %35 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %30, i32 0, i32 0
  store %struct.Edge* %0, %struct.Edge** %35, align 8
  %36 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %31, i32 0, i32 0
  store %struct.Edge* %1, %struct.Edge** %36, align 8
  store %struct.Edge* %2, %struct.Edge** %32, align 8
  %37 = bitcast %"class.std::move_iterator.57"* %33 to i8*
  %38 = bitcast %"class.std::move_iterator.57"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 8, i32 8, i1 false)
  %39 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %33, i32 0, i32 0
  %40 = load %struct.Edge*, %struct.Edge** %39, align 8
  %41 = call %struct.Edge* @_ZSt12__miter_baseISt13move_iteratorIP4EdgeEENSt11_Miter_baseIT_E13iterator_typeES5_(%struct.Edge* %40)
  %42 = bitcast %"class.std::move_iterator.57"* %34 to i8*
  %43 = bitcast %"class.std::move_iterator.57"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 8, i32 8, i1 false)
  %44 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %34, i32 0, i32 0
  %45 = load %struct.Edge*, %struct.Edge** %44, align 8
  %46 = call %struct.Edge* @_ZSt12__miter_baseISt13move_iteratorIP4EdgeEENSt11_Miter_baseIT_E13iterator_typeES5_(%struct.Edge* %45)
  %47 = load %struct.Edge*, %struct.Edge** %32, align 8
  %48 = call %struct.Edge* @_ZSt14__copy_move_a2ILb1EP4EdgeS1_ET1_T0_S3_S2_(%struct.Edge* %41, %struct.Edge* %46, %struct.Edge* %47)
  store %struct.Edge* %48, %struct.Edge** %4
  %49 = load i32, i32* @x.1327
  %50 = load i32, i32* @y.1328
  %51 = sub i32 %49, 1479151394
  %52 = sub i32 %51, 1
  %53 = add i32 %52, 1479151394
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 1011765355, i32 -765285855
  store i32 %75, i32* %17
  br label %98

; <label>:76:                                     ; preds = %18
  %77 = load volatile %struct.Edge*, %struct.Edge** %4
  ret %struct.Edge* %77

; <label>:78:                                     ; preds = %18
  %79 = alloca %"class.std::move_iterator.57", align 8
  %80 = alloca %"class.std::move_iterator.57", align 8
  %81 = alloca %struct.Edge*, align 8
  %82 = alloca %"class.std::move_iterator.57", align 8
  %83 = alloca %"class.std::move_iterator.57", align 8
  %84 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %79, i32 0, i32 0
  store %struct.Edge* %0, %struct.Edge** %84, align 8
  %85 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %80, i32 0, i32 0
  store %struct.Edge* %1, %struct.Edge** %85, align 8
  store %struct.Edge* %2, %struct.Edge** %81, align 8
  %86 = bitcast %"class.std::move_iterator.57"* %82 to i8*
  %87 = bitcast %"class.std::move_iterator.57"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 8, i32 8, i1 false)
  %88 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %82, i32 0, i32 0
  %89 = load %struct.Edge*, %struct.Edge** %88, align 8
  %90 = call %struct.Edge* @_ZSt12__miter_baseISt13move_iteratorIP4EdgeEENSt11_Miter_baseIT_E13iterator_typeES5_(%struct.Edge* %89)
  %91 = bitcast %"class.std::move_iterator.57"* %83 to i8*
  %92 = bitcast %"class.std::move_iterator.57"* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %91, i8* %92, i64 8, i32 8, i1 false)
  %93 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %83, i32 0, i32 0
  %94 = load %struct.Edge*, %struct.Edge** %93, align 8
  %95 = call %struct.Edge* @_ZSt12__miter_baseISt13move_iteratorIP4EdgeEENSt11_Miter_baseIT_E13iterator_typeES5_(%struct.Edge* %94)
  %96 = load %struct.Edge*, %struct.Edge** %81, align 8
  %97 = call %struct.Edge* @_ZSt14__copy_move_a2ILb1EP4EdgeS1_ET1_T0_S3_S2_(%struct.Edge* %90, %struct.Edge* %95, %struct.Edge* %96)
  store i32 -1073097683, i32* %17
  br label %98

; <label>:98:                                     ; preds = %78, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge* @_ZSt14__copy_move_a2ILb1EP4EdgeS1_ET1_T0_S3_S2_(%struct.Edge*, %struct.Edge*, %struct.Edge*) #0 comdat {
  %4 = alloca %struct.Edge*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.1329
  %8 = load i32, i32* @y.1330
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -1480831534, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %79
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1480831534, label %20
    i32 2020051692, label %28
    i32 1671986035, label %66
    i32 1693622626, label %68
  ]

; <label>:19:                                     ; preds = %17
  br label %79

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 2020051692, i32 1693622626
  store i32 %27, i32* %16
  br label %79

; <label>:28:                                     ; preds = %17
  %29 = alloca %struct.Edge*, align 8
  %30 = alloca %struct.Edge*, align 8
  %31 = alloca %struct.Edge*, align 8
  store %struct.Edge* %0, %struct.Edge** %29, align 8
  store %struct.Edge* %1, %struct.Edge** %30, align 8
  store %struct.Edge* %2, %struct.Edge** %31, align 8
  %32 = load %struct.Edge*, %struct.Edge** %29, align 8
  %33 = call %struct.Edge* @_ZSt12__niter_baseIP4EdgeENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.Edge* %32)
  %34 = load %struct.Edge*, %struct.Edge** %30, align 8
  %35 = call %struct.Edge* @_ZSt12__niter_baseIP4EdgeENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.Edge* %34)
  %36 = load %struct.Edge*, %struct.Edge** %31, align 8
  %37 = call %struct.Edge* @_ZSt12__niter_baseIP4EdgeENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.Edge* %36)
  %38 = call %struct.Edge* @_ZSt13__copy_move_aILb1EP4EdgeS1_ET1_T0_S3_S2_(%struct.Edge* %33, %struct.Edge* %35, %struct.Edge* %37)
  store %struct.Edge* %38, %struct.Edge** %4
  %39 = load i32, i32* @x.1329
  %40 = load i32, i32* @y.1330
  %41 = add i32 %39, -578734909
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, -578734909
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 1671986035, i32 1693622626
  store i32 %65, i32* %16
  br label %79

; <label>:66:                                     ; preds = %17
  %67 = load volatile %struct.Edge*, %struct.Edge** %4
  ret %struct.Edge* %67

; <label>:68:                                     ; preds = %17
  %69 = alloca %struct.Edge*, align 8
  %70 = alloca %struct.Edge*, align 8
  %71 = alloca %struct.Edge*, align 8
  store %struct.Edge* %0, %struct.Edge** %69, align 8
  store %struct.Edge* %1, %struct.Edge** %70, align 8
  store %struct.Edge* %2, %struct.Edge** %71, align 8
  %72 = load %struct.Edge*, %struct.Edge** %69, align 8
  %73 = call %struct.Edge* @_ZSt12__niter_baseIP4EdgeENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.Edge* %72)
  %74 = load %struct.Edge*, %struct.Edge** %70, align 8
  %75 = call %struct.Edge* @_ZSt12__niter_baseIP4EdgeENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.Edge* %74)
  %76 = load %struct.Edge*, %struct.Edge** %71, align 8
  %77 = call %struct.Edge* @_ZSt12__niter_baseIP4EdgeENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.Edge* %76)
  %78 = call %struct.Edge* @_ZSt13__copy_move_aILb1EP4EdgeS1_ET1_T0_S3_S2_(%struct.Edge* %73, %struct.Edge* %75, %struct.Edge* %77)
  store i32 2020051692, i32* %16
  br label %79

; <label>:79:                                     ; preds = %68, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge* @_ZSt12__miter_baseISt13move_iteratorIP4EdgeEENSt11_Miter_baseIT_E13iterator_typeES5_(%struct.Edge*) #0 comdat {
  %2 = alloca %struct.Edge*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1331
  %6 = load i32, i32* @y.1332
  %7 = add i32 %5, 1284997435
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1284997435
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2009456953, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %85
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2009456953, label %19
    i32 -1606640451, label %39
    i32 1594205547, label %74
    i32 1263949429, label %76
  ]

; <label>:18:                                     ; preds = %16
  br label %85

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1606640451, i32 1263949429
  store i32 %38, i32* %15
  br label %85

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator.57", align 8
  %41 = alloca %"class.std::move_iterator.57", align 8
  %42 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %40, i32 0, i32 0
  store %struct.Edge* %0, %struct.Edge** %42, align 8
  %43 = bitcast %"class.std::move_iterator.57"* %41 to i8*
  %44 = bitcast %"class.std::move_iterator.57"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 8, i32 8, i1 false)
  %45 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %41, i32 0, i32 0
  %46 = load %struct.Edge*, %struct.Edge** %45, align 8
  %47 = call %struct.Edge* @_ZNSt10_Iter_baseISt13move_iteratorIP4EdgeELb1EE7_S_baseES3_(%struct.Edge* %46)
  store %struct.Edge* %47, %struct.Edge** %2
  %48 = load i32, i32* @x.1331
  %49 = load i32, i32* @y.1332
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 1594205547, i32 1263949429
  store i32 %73, i32* %15
  br label %85

; <label>:74:                                     ; preds = %16
  %75 = load volatile %struct.Edge*, %struct.Edge** %2
  ret %struct.Edge* %75

; <label>:76:                                     ; preds = %16
  %77 = alloca %"class.std::move_iterator.57", align 8
  %78 = alloca %"class.std::move_iterator.57", align 8
  %79 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %77, i32 0, i32 0
  store %struct.Edge* %0, %struct.Edge** %79, align 8
  %80 = bitcast %"class.std::move_iterator.57"* %78 to i8*
  %81 = bitcast %"class.std::move_iterator.57"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %80, i8* %81, i64 8, i32 8, i1 false)
  %82 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %78, i32 0, i32 0
  %83 = load %struct.Edge*, %struct.Edge** %82, align 8
  %84 = call %struct.Edge* @_ZNSt10_Iter_baseISt13move_iteratorIP4EdgeELb1EE7_S_baseES3_(%struct.Edge* %83)
  store i32 -1606640451, i32* %15
  br label %85

; <label>:85:                                     ; preds = %76, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge* @_ZSt13__copy_move_aILb1EP4EdgeS1_ET1_T0_S3_S2_(%struct.Edge*, %struct.Edge*, %struct.Edge*) #0 comdat {
  %4 = alloca %struct.Edge*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.1333
  %8 = load i32, i32* @y.1334
  %9 = sub i32 %7, -1677131648
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -1677131648
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 551354941, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %87
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 551354941, label %21
    i32 -173055844, label %41
    i32 1875549045, label %76
    i32 1484694054, label %78
  ]

; <label>:20:                                     ; preds = %18
  br label %87

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -173055844, i32 1484694054
  store i32 %40, i32* %17
  br label %87

; <label>:41:                                     ; preds = %18
  %42 = alloca %struct.Edge*, align 8
  %43 = alloca %struct.Edge*, align 8
  %44 = alloca %struct.Edge*, align 8
  %45 = alloca i8, align 1
  store %struct.Edge* %0, %struct.Edge** %42, align 8
  store %struct.Edge* %1, %struct.Edge** %43, align 8
  store %struct.Edge* %2, %struct.Edge** %44, align 8
  store i8 1, i8* %45, align 1
  %46 = load %struct.Edge*, %struct.Edge** %42, align 8
  %47 = load %struct.Edge*, %struct.Edge** %43, align 8
  %48 = load %struct.Edge*, %struct.Edge** %44, align 8
  %49 = call %struct.Edge* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mI4EdgeEEPT_PKS4_S7_S5_(%struct.Edge* %46, %struct.Edge* %47, %struct.Edge* %48)
  store %struct.Edge* %49, %struct.Edge** %4
  %50 = load i32, i32* @x.1333
  %51 = load i32, i32* @y.1334
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 1875549045, i32 1484694054
  store i32 %75, i32* %17
  br label %87

; <label>:76:                                     ; preds = %18
  %77 = load volatile %struct.Edge*, %struct.Edge** %4
  ret %struct.Edge* %77

; <label>:78:                                     ; preds = %18
  %79 = alloca %struct.Edge*, align 8
  %80 = alloca %struct.Edge*, align 8
  %81 = alloca %struct.Edge*, align 8
  %82 = alloca i8, align 1
  store %struct.Edge* %0, %struct.Edge** %79, align 8
  store %struct.Edge* %1, %struct.Edge** %80, align 8
  store %struct.Edge* %2, %struct.Edge** %81, align 8
  store i8 1, i8* %82, align 1
  %83 = load %struct.Edge*, %struct.Edge** %79, align 8
  %84 = load %struct.Edge*, %struct.Edge** %80, align 8
  %85 = load %struct.Edge*, %struct.Edge** %81, align 8
  %86 = call %struct.Edge* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mI4EdgeEEPT_PKS4_S7_S5_(%struct.Edge* %83, %struct.Edge* %84, %struct.Edge* %85)
  store i32 -173055844, i32* %17
  br label %87

; <label>:87:                                     ; preds = %78, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge* @_ZSt12__niter_baseIP4EdgeENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.Edge*) #0 comdat {
  %2 = alloca %struct.Edge*, align 8
  store %struct.Edge* %0, %struct.Edge** %2, align 8
  %3 = load %struct.Edge*, %struct.Edge** %2, align 8
  %4 = call %struct.Edge* @_ZNSt10_Iter_baseIP4EdgeLb0EE7_S_baseES1_(%struct.Edge* %3)
  ret %struct.Edge* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.Edge* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mI4EdgeEEPT_PKS4_S7_S5_(%struct.Edge*, %struct.Edge*, %struct.Edge*) #4 comdat align 2 {
  %4 = alloca i64
  %5 = alloca %struct.Edge*, align 8
  %6 = alloca %struct.Edge*, align 8
  %7 = alloca %struct.Edge*, align 8
  %8 = alloca i64, align 8
  store %struct.Edge* %0, %struct.Edge** %5, align 8
  store %struct.Edge* %1, %struct.Edge** %6, align 8
  store %struct.Edge* %2, %struct.Edge** %7, align 8
  %9 = load %struct.Edge*, %struct.Edge** %6, align 8
  %10 = load %struct.Edge*, %struct.Edge** %5, align 8
  %11 = ptrtoint %struct.Edge* %9 to i64
  %12 = ptrtoint %struct.Edge* %10 to i64
  %13 = sub i64 0, %12
  %14 = add i64 %11, %13
  %15 = sub i64 %11, %12
  %16 = sdiv exact i64 %14, 16
  store i64 %16, i64* %8, align 8
  %17 = load i64, i64* %8, align 8
  store i64 %17, i64* %4
  %18 = alloca i32
  store i32 2109285361, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %37
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 2109285361, label %22
    i32 122427481, label %26
    i32 -1451106784, label %33
  ]

; <label>:21:                                     ; preds = %19
  br label %37

; <label>:22:                                     ; preds = %19
  %23 = load volatile i64, i64* %4
  %24 = icmp ne i64 %23, 0
  %25 = select i1 %24, i32 122427481, i32 -1451106784
  store i32 %25, i32* %18
  br label %37

; <label>:26:                                     ; preds = %19
  %27 = load %struct.Edge*, %struct.Edge** %7, align 8
  %28 = bitcast %struct.Edge* %27 to i8*
  %29 = load %struct.Edge*, %struct.Edge** %5, align 8
  %30 = bitcast %struct.Edge* %29 to i8*
  %31 = load i64, i64* %8, align 8
  %32 = mul i64 16, %31
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %28, i8* %30, i64 %32, i32 8, i1 false)
  store i32 -1451106784, i32* %18
  br label %37

; <label>:33:                                     ; preds = %19
  %34 = load %struct.Edge*, %struct.Edge** %7, align 8
  %35 = load i64, i64* %8, align 8
  %36 = getelementptr inbounds %struct.Edge, %struct.Edge* %34, i64 %35
  ret %struct.Edge* %36

; <label>:37:                                     ; preds = %26, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.Edge* @_ZNSt10_Iter_baseIP4EdgeLb0EE7_S_baseES1_(%struct.Edge*) #4 comdat align 2 {
  %2 = alloca %struct.Edge*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.1339
  %6 = load i32, i32* @y.1340
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 486067164, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 486067164, label %18
    i32 -1539455384, label %26
    i32 735900637, label %56
    i32 606770569, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1539455384, i32 606770569
  store i32 %25, i32* %14
  br label %61

; <label>:26:                                     ; preds = %15
  %27 = alloca %struct.Edge*, align 8
  store %struct.Edge* %0, %struct.Edge** %27, align 8
  %28 = load %struct.Edge*, %struct.Edge** %27, align 8
  store %struct.Edge* %28, %struct.Edge** %2
  %29 = load i32, i32* @x.1339
  %30 = load i32, i32* @y.1340
  %31 = add i32 %29, 104499190
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, 104499190
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 735900637, i32 606770569
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  %57 = load volatile %struct.Edge*, %struct.Edge** %2
  ret %struct.Edge* %57

; <label>:58:                                     ; preds = %15
  %59 = alloca %struct.Edge*, align 8
  store %struct.Edge* %0, %struct.Edge** %59, align 8
  %60 = load %struct.Edge*, %struct.Edge** %59, align 8
  store i32 -1539455384, i32* %14
  br label %61

; <label>:61:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge* @_ZNSt10_Iter_baseISt13move_iteratorIP4EdgeELb1EE7_S_baseES3_(%struct.Edge*) #0 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.57", align 8
  %3 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %2, i32 0, i32 0
  store %struct.Edge* %0, %struct.Edge** %3, align 8
  %4 = call %struct.Edge* @_ZNKSt13move_iteratorIP4EdgeE4baseEv(%"class.std::move_iterator.57"* %2)
  ret %struct.Edge* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.Edge* @_ZNKSt13move_iteratorIP4EdgeE4baseEv(%"class.std::move_iterator.57"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.57"*, align 8
  store %"class.std::move_iterator.57"* %0, %"class.std::move_iterator.57"** %2, align 8
  %3 = load %"class.std::move_iterator.57"*, %"class.std::move_iterator.57"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %3, i32 0, i32 0
  %5 = load %struct.Edge*, %struct.Edge** %4, align 8
  ret %struct.Edge* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIP4EdgeEC2ES1_(%"class.std::move_iterator.57"*, %struct.Edge*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.57"*, align 8
  %4 = alloca %struct.Edge*, align 8
  store %"class.std::move_iterator.57"* %0, %"class.std::move_iterator.57"** %3, align 8
  store %struct.Edge* %1, %struct.Edge** %4, align 8
  %5 = load %"class.std::move_iterator.57"*, %"class.std::move_iterator.57"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.57", %"class.std::move_iterator.57"* %5, i32 0, i32 0
  %7 = load %struct.Edge*, %struct.Edge** %4, align 8
  store %struct.Edge* %7, %struct.Edge** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI4EdgeE7destroyIS1_EEvPT_(%"class.__gnu_cxx::new_allocator.29"*, %struct.Edge*) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.29"*, align 8
  %4 = alloca %struct.Edge*, align 8
  store %"class.__gnu_cxx::new_allocator.29"* %0, %"class.__gnu_cxx::new_allocator.29"** %3, align 8
  store %struct.Edge* %1, %struct.Edge** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.29"*, %"class.__gnu_cxx::new_allocator.29"** %3, align 8
  %6 = load %struct.Edge*, %struct.Edge** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s301713658.cpp() #0 section ".text.startup" {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.1349
  %4 = load i32, i32* @y.1350
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %2
  %11 = icmp slt i32 %4, 10
  store i1 %11, i1* %1
  %12 = alloca i32
  store i32 -320031645, i32* %12
  br label %13

; <label>:13:                                     ; preds = %0, %41
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -320031645, label %16
    i32 1599923395, label %24
    i32 1402707743, label %39
    i32 -989344426, label %40
  ]

; <label>:15:                                     ; preds = %13
  br label %41

; <label>:16:                                     ; preds = %13
  %17 = load volatile i1, i1* %2
  %18 = load volatile i1, i1* %1
  %19 = and i1 %17, %18
  %20 = xor i1 %17, %18
  %21 = or i1 %19, %20
  %22 = or i1 %17, %18
  %23 = select i1 %21, i32 1599923395, i32 -989344426
  store i32 %23, i32* %12
  br label %41

; <label>:24:                                     ; preds = %13
  call void @__cxx_global_var_init()
  call void @__cxx_global_var_init.1()
  %25 = load i32, i32* @x.1349
  %26 = load i32, i32* @y.1350
  %27 = sub i32 0, 1
  %28 = add i32 %25, %27
  %29 = sub i32 %25, 1
  %30 = mul i32 %25, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %26, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  %38 = select i1 %36, i32 1402707743, i32 -989344426
  store i32 %38, i32* %12
  br label %41

; <label>:39:                                     ; preds = %13
  ret void

; <label>:40:                                     ; preds = %13
  call void @__cxx_global_var_init()
  call void @__cxx_global_var_init.1()
  store i32 1599923395, i32* %12
  br label %41

; <label>:41:                                     ; preds = %40, %24, %16, %15
  br label %13
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline noreturn nounwind }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind }
attributes #13 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone }
attributes #15 = { noreturn }
attributes #16 = { nounwind readonly }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
