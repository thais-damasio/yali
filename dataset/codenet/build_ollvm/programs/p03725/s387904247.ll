; ModuleID = 'Project_CodeNet_C++1400/p03725/s387904247.cpp'
source_filename = "Project_CodeNet_C++1400/p03725/s387904247.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%struct.Direction = type { i32, i32 }
%"class.std::set" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl" = type { %"struct.std::less", %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::less" = type { i8 }
%"struct.std::_Rb_tree_node_base" = type { i32, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%"struct.std::pair" = type <{ %"struct.std::_Rb_tree_const_iterator", i8, [7 x i8] }>
%"struct.std::_Rb_tree_const_iterator" = type { %"struct.std::_Rb_tree_node_base"* }
%"struct.std::pair.36" = type <{ %"struct.std::_Rb_tree_iterator", i8, [7 x i8] }>
%"struct.std::_Rb_tree_iterator" = type { %"struct.std::_Rb_tree_node_base"* }
%"class.std::queue" = type { %"class.std::deque" }
%"class.std::deque" = type { %"class.std::_Deque_base" }
%"class.std::_Deque_base" = type { %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl" }
%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl" = type { i32**, i64, %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator" }
%"struct.std::_Deque_iterator" = type { i32*, i32*, i32*, i32** }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl" = type { %"class.std::vector.6"*, %"class.std::vector.6"*, %"class.std::vector.6"* }
%"class.std::vector.6" = type { %"struct.std::_Vector_base.7" }
%"struct.std::_Vector_base.7" = type { %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl" }
%"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl" = type { i8*, i8*, i8* }
%"class.std::allocator.8" = type { i8 }
%"class.std::allocator.3" = type { i8 }
%"class.std::vector.11" = type { %"struct.std::_Vector_base.12" }
%"struct.std::_Vector_base.12" = type { %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl" = type { %"class.std::vector.16"*, %"class.std::vector.16"*, %"class.std::vector.16"* }
%"class.std::vector.16" = type { %"struct.std::_Vector_base.17" }
%"struct.std::_Vector_base.17" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" = type { i32*, i32*, i32* }
%"class.std::allocator.0" = type { i8 }
%"class.std::allocator.13" = type { i8 }
%"struct.std::pair.18" = type { i64, i64 }
%class.anon = type { i32*, i32*, %"class.std::vector"* }
%"class.std::queue.19" = type { %"class.std::deque.20" }
%"class.std::deque.20" = type { %"class.std::_Deque_base.21" }
%"class.std::_Deque_base.21" = type { %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl" }
%"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl" = type { %struct.Point**, i64, %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25" }
%struct.Point = type { i64, i64, i64 }
%"struct.std::_Deque_iterator.25" = type { %struct.Point*, %struct.Point*, %struct.Point*, %struct.Point** }
%class.anon.26 = type { i32* }
%"class.std::vector.27" = type { %"struct.std::_Vector_base.28" }
%"struct.std::_Vector_base.28" = type { %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl" }
%"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl" = type { %struct.Direction*, %struct.Direction*, %struct.Direction* }
%"class.std::initializer_list" = type { %struct.Direction*, i64 }
%"class.std::allocator.29" = type { i8 }
%class.anon.32 = type { i32*, i32*, %"class.std::vector"*, %"class.std::vector.11"* }
%"class.__gnu_cxx::__normal_iterator" = type { %struct.Direction* }
%class.anon.33 = type { i32*, i32*, i32* }
%"class.__gnu_cxx::new_allocator.4" = type { i8 }
%"class.__gnu_cxx::new_allocator.1" = type { i8 }
%"class.__gnu_cxx::new_allocator.14" = type { i8 }
%"class.std::allocator.22" = type { i8 }
%"class.__gnu_cxx::new_allocator.30" = type { i8 }
%"struct.std::forward_iterator_tag" = type { i8 }
%"struct.std::random_access_iterator_tag" = type { i8 }
%class.anon.34 = type { i32* }
%"class.std::initializer_list.35" = type { i32*, i64 }
%"struct.__gnu_cxx::__ops::_Iter_less_iter" = type { i8 }
%"struct.std::pair.38" = type { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%"struct.std::_Identity" = type { i8 }
%"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node" = type { %"class.std::_Rb_tree"* }
%"struct.std::_Rb_tree_node" = type <{ %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf", [4 x i8] }>
%"struct.__gnu_cxx::__aligned_membuf" = type { [4 x i8] }
%"class.std::allocator" = type { i8 }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"class.std::allocator.39" = type { i8 }
%"class.__gnu_cxx::new_allocator.40" = type { i8 }
%"class.__gnu_cxx::new_allocator.9" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.42" = type { i8* }
%"class.__gnu_cxx::__normal_iterator.43" = type { i32* }
%"class.__gnu_cxx::new_allocator.23" = type { i8 }
%"class.std::allocator.44" = type { i8 }
%"class.__gnu_cxx::new_allocator.45" = type { i8 }
%"struct.std::integral_constant" = type { i8 }
%"struct.__gnu_cxx::__allocator_always_compares_equal" = type { i8 }

$_ZNSt3setIiSt4lessIiESaIiEE6insertERKi = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEE4pushEOi = comdat any

$_ZNSt3setIiSt4lessIiESaIiEE4findERKi = comdat any

$_ZNKSt23_Rb_tree_const_iteratorIiEneERKS0_ = comdat any

$_ZNKSt3setIiSt4lessIiESaIiEE3endEv = comdat any

$_ZNSt6vectorIcSaIcEEC2EmRKcRKS0_ = comdat any

$_ZNSaISt6vectorIcSaIcEEEC2Ev = comdat any

$_ZNSt6vectorIS_IcSaIcEESaIS1_EEC2EmRKS1_RKS2_ = comdat any

$_ZNSaISt6vectorIcSaIcEEED2Ev = comdat any

$_ZNSt6vectorIcSaIcEED2Ev = comdat any

$_ZNSt6vectorIS_IcSaIcEESaIS1_EEixEm = comdat any

$_ZNSt6vectorIcSaIcEEixEm = comdat any

$_ZNSaIiEC2Ev = comdat any

$_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_ = comdat any

$_ZNSaISt6vectorIiSaIiEEEC2Ev = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2EmRKS1_RKS2_ = comdat any

$_ZNSaISt6vectorIiSaIiEEED2Ev = comdat any

$_ZNSt6vectorIiSaIiEED2Ev = comdat any

$_ZNSaIiED2Ev = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm = comdat any

$_ZNSt6vectorIiSaIiEEixEm = comdat any

$_ZSt3minIiERKT_S2_S2_ = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev = comdat any

$_ZNSt6vectorIS_IcSaIcEESaIS1_EED2Ev = comdat any

$_ZNSt4pairIxxEC2IRiS2_vEEOT_OT0_ = comdat any

$_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZSt3minIiET_St16initializer_listIS0_E = comdat any

$_ZSt11min_elementIPKiET_S2_S2_ = comdat any

$_ZNKSt16initializer_listIiE5beginEv = comdat any

$_ZNKSt16initializer_listIiE3endEv = comdat any

$_ZSt13__min_elementIPKiN9__gnu_cxx5__ops15_Iter_less_iterEET_S5_S5_T0_ = comdat any

$_ZN9__gnu_cxx5__ops16__iter_less_iterEv = comdat any

$_ZNK9__gnu_cxx5__ops15_Iter_less_iterclIPKiS4_EEbT_T0_ = comdat any

$_ZNKSt16initializer_listIiE4sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiED2Ev = comdat any

$_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueIRKiEESt4pairISt17_Rb_tree_iteratorIiEbEOT_ = comdat any

$_ZNSt4pairISt23_Rb_tree_const_iteratorIiEbEC2IRSt17_Rb_tree_iteratorIiERbvEEOT_OT0_ = comdat any

$_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi = comdat any

$_ZNKSt9_IdentityIiEclERKi = comdat any

$_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE11_Alloc_nodeC2ERS5_ = comdat any

$_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IRKiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSD_OT_RT0_ = comdat any

$_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt4pairISt17_Rb_tree_iteratorIiEbEC2IS1_bvEEOT_OT0_ = comdat any

$_ZNSt17_Rb_tree_iteratorIiEC2EPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_beginEv = comdat any

$_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_M_endEv = comdat any

$_ZNKSt4lessIiEclERKiS2_ = comdat any

$_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_S_keyEPKSt13_Rb_tree_nodeIiE = comdat any

$_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE7_S_leftEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_rightEPSt18_Rb_tree_node_base = comdat any

$_ZNKSt17_Rb_tree_iteratorIiEeqERKS0_ = comdat any

$_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE5beginEv = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIiES7_vEEOT_OT0_ = comdat any

$_ZNSt17_Rb_tree_iteratorIiEmmEv = comdat any

$_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_S_keyEPKSt18_Rb_tree_node_base = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_ = comdat any

$_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_valueEPKSt13_Rb_tree_nodeIiE = comdat any

$_ZNKSt13_Rb_tree_nodeIiE9_M_valptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufIiE6_M_ptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufIiE7_M_addrEv = comdat any

$_ZSt7forwardIRPSt13_Rb_tree_nodeIiEEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_valueEPKSt18_Rb_tree_node_base = comdat any

$_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE11_Alloc_nodeclIRKiEEPSt13_Rb_tree_nodeIiEOT_ = comdat any

$_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_create_nodeIJRKiEEEPSt13_Rb_tree_nodeIiEDpOT_ = comdat any

$_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE11_M_get_nodeEv = comdat any

$_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE17_M_construct_nodeIJRKiEEEvPSt13_Rb_tree_nodeIiEDpOT_ = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIiEEE8allocateERS2_m = comdat any

$_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE21_M_get_Node_allocatorEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIiEEE9constructIiJRKiEEEvRS2_PT_DpOT0_ = comdat any

$_ZNSt13_Rb_tree_nodeIiE9_M_valptrEv = comdat any

$_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE11_M_put_nodeEPSt13_Rb_tree_nodeIiE = comdat any

$__clang_call_terminate = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE9constructIiJRKiEEEvPT_DpOT0_ = comdat any

$_ZN9__gnu_cxx16__aligned_membufIiE6_M_ptrEv = comdat any

$_ZN9__gnu_cxx16__aligned_membufIiE7_M_addrEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIiEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE10deallocateEPS2_m = comdat any

$_ZSt7forwardISt17_Rb_tree_iteratorIiEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZSt7forwardIRSt17_Rb_tree_iteratorIiEEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNSt23_Rb_tree_const_iteratorIiEC2ERKSt17_Rb_tree_iteratorIiE = comdat any

$_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZNSt5dequeIiSaIiEE9push_backEOi = comdat any

$_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZNSt5dequeIiSaIiEE12emplace_backIJiEEEvDpOT_ = comdat any

$_ZNSt16allocator_traitsISaIiEE9constructIiJiEEEvRS0_PT_DpOT0_ = comdat any

$_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJiEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE9constructIiJiEEEvPT_DpOT0_ = comdat any

$_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm = comdat any

$_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv = comdat any

$_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi = comdat any

$_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb = comdat any

$_ZSt4copyIPPiS1_ET0_T_S3_S2_ = comdat any

$_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_ = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm = comdat any

$_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim = comdat any

$_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_ = comdat any

$_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_ = comdat any

$_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_ = comdat any

$_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m = comdat any

$_ZNSaIPiED2Ev = comdat any

$_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSaIPiEC2IiEERKSaIT_E = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiED2Ev = comdat any

$_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m = comdat any

$_ZNSt16allocator_traitsISaIiEE8allocateERS0_m = comdat any

$_ZSt16__deque_buf_sizem = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv = comdat any

$_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim = comdat any

$_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE4findERKi = comdat any

$_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_lower_boundEPSt13_Rb_tree_nodeIiES8_RKi = comdat any

$_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE3endEv = comdat any

$_ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE3endEv = comdat any

$_ZNSt23_Rb_tree_const_iteratorIiEC2EPKSt18_Rb_tree_node_base = comdat any

$_ZNSt12_Vector_baseIcSaIcEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIcSaIcEE18_M_fill_initializeEmRKc = comdat any

$_ZNSt12_Vector_baseIcSaIcEED2Ev = comdat any

$_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD2Ev = comdat any

$_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaIcEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPcmccET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv = comdat any

$_ZSt20uninitialized_fill_nIPcmcET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPcmcEET_S3_T0_RKT1_ = comdat any

$_ZSt6fill_nIPcmcET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aImcEN9__gnu_cxx11__enable_ifIXsr9__is_byteIT0_EE7__valueEPS2_E6__typeES3_T_RKS2_ = comdat any

$_ZSt12__niter_baseIPcENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZSt8__fill_aIcEN9__gnu_cxx11__enable_ifIXsr9__is_byteIT_EE7__valueEvE6__typeEPS2_S5_RKS2_ = comdat any

$_ZNSt10_Iter_baseIPcLb0EE7_S_baseES0_ = comdat any

$_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm = comdat any

$_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm = comdat any

$_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm = comdat any

$_ZSt8_DestroyIPccEvT_S1_RSaIT0_E = comdat any

$_ZSt8_DestroyIPcEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EEC2EmRKS3_ = comdat any

$_ZNSt6vectorIS_IcSaIcEESaIS1_EE18_M_fill_initializeEmRKS1_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE12_Vector_implC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE12_Vector_implD2Ev = comdat any

$_ZNSaISt6vectorIcSaIcEEEC2ERKS2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEEC2ERKS4_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIcSaIcEEEE8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEE8max_sizeEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPSt6vectorIcSaIcEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt20uninitialized_fill_nIPSt6vectorIcSaIcEEmS2_ET_S4_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIcSaIcEEmS4_EET_S6_T0_RKT1_ = comdat any

$_ZSt10_ConstructISt6vectorIcSaIcEEJRKS2_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt6vectorIcSaIcEEEPT_RS3_ = comdat any

$_ZSt8_DestroyIPSt6vectorIcSaIcEEEvT_S4_ = comdat any

$_ZSt7forwardIRKSt6vectorIcSaIcEEEOT_RNSt16remove_referenceIS5_E4typeE = comdat any

$_ZNSt6vectorIcSaIcEEC2ERKS1_ = comdat any

$_ZNKSt6vectorIcSaIcEE4sizeEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIcEE17_S_select_on_copyERKS1_ = comdat any

$_ZNKSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEPccET0_T_SA_S9_RSaIT1_E = comdat any

$_ZNKSt6vectorIcSaIcEE5beginEv = comdat any

$_ZNKSt6vectorIcSaIcEE3endEv = comdat any

$_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_ = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEPcET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEPcEET0_T_SC_SB_ = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEPcET0_T_SA_S9_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEPcET1_T0_SA_S9_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEENSt11_Miter_baseIT_E13iterator_typeES9_ = comdat any

$_ZSt13__copy_move_aILb0EPKcPcET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEENSt11_Niter_baseIT_E13iterator_typeES9_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIcEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEELb1EE7_S_baseES7_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEE4baseEv = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEELb0EE7_S_baseES7_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEC2ERKS2_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIcSaIcEEEEvT_S6_ = comdat any

$_ZSt8_DestroyISt6vectorIcSaIcEEEvPT_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIcSaIcEEEE10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEE10deallocateEPS3_m = comdat any

$_ZSt8_DestroyIPSt6vectorIcSaIcEES2_EvT_S4_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi = comdat any

$_ZNSt12_Vector_baseIiSaIiEED2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm = comdat any

$_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_ = comdat any

$_ZSt6fill_nIPimiET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim = comdat any

$_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E = comdat any

$_ZSt8_DestroyIPiEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2EmRKS3_ = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE18_M_fill_initializeEmRKS1_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev = comdat any

$_ZNSaISt6vectorIiSaIiEEEC2ERKS2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2ERKS4_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8max_sizeEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPSt6vectorIiSaIiEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt20uninitialized_fill_nIPSt6vectorIiSaIiEEmS2_ET_S4_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIiSaIiEEmS4_EET_S6_T0_RKT1_ = comdat any

$_ZSt10_ConstructISt6vectorIiSaIiEEJRKS2_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_ = comdat any

$_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_ = comdat any

$_ZSt7forwardIRKSt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS5_E4typeE = comdat any

$_ZNSt6vectorIiSaIiEEC2ERKS1_ = comdat any

$_ZNKSt6vectorIiSaIiEE4sizeEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIiEE17_S_select_on_copyERKS1_ = comdat any

$_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E = comdat any

$_ZNKSt6vectorIiSaIiEE5beginEv = comdat any

$_ZNKSt6vectorIiSaIiEE3endEv = comdat any

$_ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_ = comdat any

$_ZNSaIiEC2ERKS_ = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_ = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES9_ = comdat any

$_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES9_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEELb1EE7_S_baseES7_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEELb0EE7_S_baseES7_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIiSaIiEEEEvT_S6_ = comdat any

$_ZSt8_DestroyISt6vectorIiSaIiEEEvPT_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE10deallocateEPS3_m = comdat any

$_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E = comdat any

$_ZSt4swapImEvRT_S1_ = comdat any

$_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@.ref.tmp = private constant [4 x %struct.Direction] [%struct.Direction { i32 0, i32 1 }, %struct.Direction { i32 1, i32 0 }, %struct.Direction { i32 0, i32 -1 }, %struct.Direction { i32 -1, i32 0 }], align 4
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [8 x i8] c"konaide\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s387904247.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.1 = common global i32 0
@y.2 = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0
@x.147 = common global i32 0
@y.148 = common global i32 0
@x.149 = common global i32 0
@y.150 = common global i32 0
@x.151 = common global i32 0
@y.152 = common global i32 0
@x.153 = common global i32 0
@y.154 = common global i32 0
@x.155 = common global i32 0
@y.156 = common global i32 0
@x.157 = common global i32 0
@y.158 = common global i32 0
@x.159 = common global i32 0
@y.160 = common global i32 0
@x.161 = common global i32 0
@y.162 = common global i32 0
@x.163 = common global i32 0
@y.164 = common global i32 0
@x.165 = common global i32 0
@y.166 = common global i32 0
@x.167 = common global i32 0
@y.168 = common global i32 0
@x.169 = common global i32 0
@y.170 = common global i32 0
@x.171 = common global i32 0
@y.172 = common global i32 0
@x.173 = common global i32 0
@y.174 = common global i32 0
@x.175 = common global i32 0
@y.176 = common global i32 0
@x.177 = common global i32 0
@y.178 = common global i32 0
@x.179 = common global i32 0
@y.180 = common global i32 0
@x.181 = common global i32 0
@y.182 = common global i32 0
@x.183 = common global i32 0
@y.184 = common global i32 0
@x.185 = common global i32 0
@y.186 = common global i32 0
@x.187 = common global i32 0
@y.188 = common global i32 0
@x.189 = common global i32 0
@y.190 = common global i32 0
@x.191 = common global i32 0
@y.192 = common global i32 0
@x.193 = common global i32 0
@y.194 = common global i32 0
@x.195 = common global i32 0
@y.196 = common global i32 0
@x.197 = common global i32 0
@y.198 = common global i32 0
@x.199 = common global i32 0
@y.200 = common global i32 0
@x.201 = common global i32 0
@y.202 = common global i32 0
@x.203 = common global i32 0
@y.204 = common global i32 0
@x.205 = common global i32 0
@y.206 = common global i32 0
@x.207 = common global i32 0
@y.208 = common global i32 0
@x.209 = common global i32 0
@y.210 = common global i32 0
@x.211 = common global i32 0
@y.212 = common global i32 0
@x.213 = common global i32 0
@y.214 = common global i32 0
@x.215 = common global i32 0
@y.216 = common global i32 0
@x.217 = common global i32 0
@y.218 = common global i32 0
@x.219 = common global i32 0
@y.220 = common global i32 0
@x.221 = common global i32 0
@y.222 = common global i32 0
@x.223 = common global i32 0
@y.224 = common global i32 0
@x.225 = common global i32 0
@y.226 = common global i32 0
@x.227 = common global i32 0
@y.228 = common global i32 0
@x.229 = common global i32 0
@y.230 = common global i32 0
@x.231 = common global i32 0
@y.232 = common global i32 0
@x.233 = common global i32 0
@y.234 = common global i32 0
@x.235 = common global i32 0
@y.236 = common global i32 0
@x.237 = common global i32 0
@y.238 = common global i32 0
@x.239 = common global i32 0
@y.240 = common global i32 0
@x.241 = common global i32 0
@y.242 = common global i32 0
@x.243 = common global i32 0
@y.244 = common global i32 0
@x.245 = common global i32 0
@y.246 = common global i32 0
@x.247 = common global i32 0
@y.248 = common global i32 0
@x.249 = common global i32 0
@y.250 = common global i32 0
@x.251 = common global i32 0
@y.252 = common global i32 0
@x.253 = common global i32 0
@y.254 = common global i32 0
@x.255 = common global i32 0
@y.256 = common global i32 0
@x.257 = common global i32 0
@y.258 = common global i32 0
@x.259 = common global i32 0
@y.260 = common global i32 0
@x.261 = common global i32 0
@y.262 = common global i32 0
@x.263 = common global i32 0
@y.264 = common global i32 0
@x.265 = common global i32 0
@y.266 = common global i32 0
@x.267 = common global i32 0
@y.268 = common global i32 0
@x.269 = common global i32 0
@y.270 = common global i32 0
@x.271 = common global i32 0
@y.272 = common global i32 0
@x.273 = common global i32 0
@y.274 = common global i32 0
@x.275 = common global i32 0
@y.276 = common global i32 0
@x.277 = common global i32 0
@y.278 = common global i32 0
@x.279 = common global i32 0
@y.280 = common global i32 0
@x.281 = common global i32 0
@y.282 = common global i32 0
@x.283 = common global i32 0
@y.284 = common global i32 0
@x.285 = common global i32 0
@y.286 = common global i32 0
@x.287 = common global i32 0
@y.288 = common global i32 0
@x.289 = common global i32 0
@y.290 = common global i32 0
@x.291 = common global i32 0
@y.292 = common global i32 0
@x.293 = common global i32 0
@y.294 = common global i32 0
@x.295 = common global i32 0
@y.296 = common global i32 0
@x.297 = common global i32 0
@y.298 = common global i32 0
@x.299 = common global i32 0
@y.300 = common global i32 0
@x.301 = common global i32 0
@y.302 = common global i32 0
@x.303 = common global i32 0
@y.304 = common global i32 0
@x.305 = common global i32 0
@y.306 = common global i32 0
@x.307 = common global i32 0
@y.308 = common global i32 0
@x.309 = common global i32 0
@y.310 = common global i32 0
@x.311 = common global i32 0
@y.312 = common global i32 0
@x.313 = common global i32 0
@y.314 = common global i32 0
@x.315 = common global i32 0
@y.316 = common global i32 0
@x.317 = common global i32 0
@y.318 = common global i32 0
@x.319 = common global i32 0
@y.320 = common global i32 0
@x.321 = common global i32 0
@y.322 = common global i32 0
@x.323 = common global i32 0
@y.324 = common global i32 0
@x.325 = common global i32 0
@y.326 = common global i32 0
@x.327 = common global i32 0
@y.328 = common global i32 0
@x.329 = common global i32 0
@y.330 = common global i32 0
@x.331 = common global i32 0
@y.332 = common global i32 0
@x.333 = common global i32 0
@y.334 = common global i32 0
@x.335 = common global i32 0
@y.336 = common global i32 0
@x.337 = common global i32 0
@y.338 = common global i32 0
@x.339 = common global i32 0
@y.340 = common global i32 0
@x.341 = common global i32 0
@y.342 = common global i32 0
@x.343 = common global i32 0
@y.344 = common global i32 0
@x.345 = common global i32 0
@y.346 = common global i32 0
@x.347 = common global i32 0
@y.348 = common global i32 0
@x.349 = common global i32 0
@y.350 = common global i32 0
@x.351 = common global i32 0
@y.352 = common global i32 0
@x.353 = common global i32 0
@y.354 = common global i32 0
@x.355 = common global i32 0
@y.356 = common global i32 0
@x.357 = common global i32 0
@y.358 = common global i32 0
@x.359 = common global i32 0
@y.360 = common global i32 0
@x.361 = common global i32 0
@y.362 = common global i32 0
@x.363 = common global i32 0
@y.364 = common global i32 0
@x.365 = common global i32 0
@y.366 = common global i32 0
@x.367 = common global i32 0
@y.368 = common global i32 0
@x.369 = common global i32 0
@y.370 = common global i32 0
@x.371 = common global i32 0
@y.372 = common global i32 0
@x.373 = common global i32 0
@y.374 = common global i32 0
@x.375 = common global i32 0
@y.376 = common global i32 0
@x.377 = common global i32 0
@y.378 = common global i32 0
@x.379 = common global i32 0
@y.380 = common global i32 0
@x.381 = common global i32 0
@y.382 = common global i32 0
@x.383 = common global i32 0
@y.384 = common global i32 0
@x.385 = common global i32 0
@y.386 = common global i32 0
@x.387 = common global i32 0
@y.388 = common global i32 0
@x.389 = common global i32 0
@y.390 = common global i32 0
@x.391 = common global i32 0
@y.392 = common global i32 0
@x.393 = common global i32 0
@y.394 = common global i32 0
@x.395 = common global i32 0
@y.396 = common global i32 0
@x.397 = common global i32 0
@y.398 = common global i32 0
@x.399 = common global i32 0
@y.400 = common global i32 0
@x.401 = common global i32 0
@y.402 = common global i32 0
@x.403 = common global i32 0
@y.404 = common global i32 0
@x.405 = common global i32 0
@y.406 = common global i32 0
@x.407 = common global i32 0
@y.408 = common global i32 0
@x.409 = common global i32 0
@y.410 = common global i32 0
@x.411 = common global i32 0
@y.412 = common global i32 0
@x.413 = common global i32 0
@y.414 = common global i32 0
@x.415 = common global i32 0
@y.416 = common global i32 0
@x.417 = common global i32 0
@y.418 = common global i32 0
@x.419 = common global i32 0
@y.420 = common global i32 0
@x.421 = common global i32 0
@y.422 = common global i32 0
@x.423 = common global i32 0
@y.424 = common global i32 0
@x.425 = common global i32 0
@y.426 = common global i32 0
@x.427 = common global i32 0
@y.428 = common global i32 0
@x.429 = common global i32 0
@y.430 = common global i32 0
@x.431 = common global i32 0
@y.432 = common global i32 0
@x.433 = common global i32 0
@y.434 = common global i32 0
@x.435 = common global i32 0
@y.436 = common global i32 0
@x.437 = common global i32 0
@y.438 = common global i32 0
@x.439 = common global i32 0
@y.440 = common global i32 0
@x.441 = common global i32 0
@y.442 = common global i32 0
@x.443 = common global i32 0
@y.444 = common global i32 0
@x.445 = common global i32 0
@y.446 = common global i32 0
@x.447 = common global i32 0
@y.448 = common global i32 0
@x.449 = common global i32 0
@y.450 = common global i32 0
@x.451 = common global i32 0
@y.452 = common global i32 0
@x.453 = common global i32 0
@y.454 = common global i32 0
@x.455 = common global i32 0
@y.456 = common global i32 0
@x.457 = common global i32 0
@y.458 = common global i32 0
@x.459 = common global i32 0
@y.460 = common global i32 0
@x.461 = common global i32 0
@y.462 = common global i32 0
@x.463 = common global i32 0
@y.464 = common global i32 0
@x.465 = common global i32 0
@y.466 = common global i32 0
@x.467 = common global i32 0
@y.468 = common global i32 0
@x.469 = common global i32 0
@y.470 = common global i32 0
@x.471 = common global i32 0
@y.472 = common global i32 0
@x.473 = common global i32 0
@y.474 = common global i32 0
@x.475 = common global i32 0
@y.476 = common global i32 0
@x.477 = common global i32 0
@y.478 = common global i32 0
@x.479 = common global i32 0
@y.480 = common global i32 0
@x.481 = common global i32 0
@y.482 = common global i32 0
@x.483 = common global i32 0
@y.484 = common global i32 0
@x.485 = common global i32 0
@y.486 = common global i32 0
@x.487 = common global i32 0
@y.488 = common global i32 0
@x.489 = common global i32 0
@y.490 = common global i32 0
@x.491 = common global i32 0
@y.492 = common global i32 0
@x.493 = common global i32 0
@y.494 = common global i32 0
@x.495 = common global i32 0
@y.496 = common global i32 0
@x.497 = common global i32 0
@y.498 = common global i32 0
@x.499 = common global i32 0
@y.500 = common global i32 0
@x.501 = common global i32 0
@y.502 = common global i32 0
@x.503 = common global i32 0
@y.504 = common global i32 0
@x.505 = common global i32 0
@y.506 = common global i32 0
@x.507 = common global i32 0
@y.508 = common global i32 0
@x.509 = common global i32 0
@y.510 = common global i32 0
@x.511 = common global i32 0
@y.512 = common global i32 0
@x.513 = common global i32 0
@y.514 = common global i32 0
@x.515 = common global i32 0
@y.516 = common global i32 0
@x.517 = common global i32 0
@y.518 = common global i32 0
@x.519 = common global i32 0
@y.520 = common global i32 0
@x.521 = common global i32 0
@y.522 = common global i32 0
@x.523 = common global i32 0
@y.524 = common global i32 0
@x.525 = common global i32 0
@y.526 = common global i32 0
@x.527 = common global i32 0
@y.528 = common global i32 0
@x.529 = common global i32 0
@y.530 = common global i32 0
@x.531 = common global i32 0
@y.532 = common global i32 0
@x.533 = common global i32 0
@y.534 = common global i32 0
@x.535 = common global i32 0
@y.536 = common global i32 0
@x.537 = common global i32 0
@y.538 = common global i32 0
@x.539 = common global i32 0
@y.540 = common global i32 0
@x.541 = common global i32 0
@y.542 = common global i32 0
@x.543 = common global i32 0
@y.544 = common global i32 0
@x.545 = common global i32 0
@y.546 = common global i32 0
@x.547 = common global i32 0
@y.548 = common global i32 0
@x.549 = common global i32 0
@y.550 = common global i32 0
@x.551 = common global i32 0
@y.552 = common global i32 0
@x.553 = common global i32 0
@y.554 = common global i32 0
@x.555 = common global i32 0
@y.556 = common global i32 0
@x.557 = common global i32 0
@y.558 = common global i32 0
@x.559 = common global i32 0
@y.560 = common global i32 0
@x.561 = common global i32 0
@y.562 = common global i32 0
@x.563 = common global i32 0
@y.564 = common global i32 0
@x.565 = common global i32 0
@y.566 = common global i32 0
@x.567 = common global i32 0
@y.568 = common global i32 0
@x.569 = common global i32 0
@y.570 = common global i32 0
@x.571 = common global i32 0
@y.572 = common global i32 0
@x.573 = common global i32 0
@y.574 = common global i32 0
@x.575 = common global i32 0
@y.576 = common global i32 0
@x.577 = common global i32 0
@y.578 = common global i32 0
@x.579 = common global i32 0
@y.580 = common global i32 0
@x.581 = common global i32 0
@y.582 = common global i32 0
@x.583 = common global i32 0
@y.584 = common global i32 0
@x.585 = common global i32 0
@y.586 = common global i32 0
@x.587 = common global i32 0
@y.588 = common global i32 0
@x.589 = common global i32 0
@y.590 = common global i32 0
@x.591 = common global i32 0
@y.592 = common global i32 0
@x.593 = common global i32 0
@y.594 = common global i32 0
@x.595 = common global i32 0
@y.596 = common global i32 0
@x.597 = common global i32 0
@y.598 = common global i32 0
@x.599 = common global i32 0
@y.600 = common global i32 0
@x.601 = common global i32 0
@y.602 = common global i32 0
@x.603 = common global i32 0
@y.604 = common global i32 0
@x.605 = common global i32 0
@y.606 = common global i32 0
@x.607 = common global i32 0
@y.608 = common global i32 0
@x.609 = common global i32 0
@y.610 = common global i32 0
@x.611 = common global i32 0
@y.612 = common global i32 0
@x.613 = common global i32 0
@y.614 = common global i32 0
@x.615 = common global i32 0
@y.616 = common global i32 0
@x.617 = common global i32 0
@y.618 = common global i32 0
@x.619 = common global i32 0
@y.620 = common global i32 0
@x.621 = common global i32 0
@y.622 = common global i32 0
@x.623 = common global i32 0
@y.624 = common global i32 0
@x.625 = common global i32 0
@y.626 = common global i32 0
@x.627 = common global i32 0
@y.628 = common global i32 0
@x.629 = common global i32 0
@y.630 = common global i32 0
@x.631 = common global i32 0
@y.632 = common global i32 0
@x.633 = common global i32 0
@y.634 = common global i32 0
@x.635 = common global i32 0
@y.636 = common global i32 0
@x.637 = common global i32 0
@y.638 = common global i32 0
@x.639 = common global i32 0
@y.640 = common global i32 0
@x.641 = common global i32 0
@y.642 = common global i32 0
@x.643 = common global i32 0
@y.644 = common global i32 0
@x.645 = common global i32 0
@y.646 = common global i32 0
@x.647 = common global i32 0
@y.648 = common global i32 0
@x.649 = common global i32 0
@y.650 = common global i32 0
@x.651 = common global i32 0
@y.652 = common global i32 0
@x.653 = common global i32 0
@y.654 = common global i32 0
@x.655 = common global i32 0
@y.656 = common global i32 0
@x.657 = common global i32 0
@y.658 = common global i32 0
@x.659 = common global i32 0
@y.660 = common global i32 0
@x.661 = common global i32 0
@y.662 = common global i32 0
@x.663 = common global i32 0
@y.664 = common global i32 0
@x.665 = common global i32 0
@y.666 = common global i32 0
@x.667 = common global i32 0
@y.668 = common global i32 0
@x.669 = common global i32 0
@y.670 = common global i32 0
@x.671 = common global i32 0
@y.672 = common global i32 0
@x.673 = common global i32 0
@y.674 = common global i32 0
@x.675 = common global i32 0
@y.676 = common global i32 0
@x.677 = common global i32 0
@y.678 = common global i32 0
@x.679 = common global i32 0
@y.680 = common global i32 0
@x.681 = common global i32 0
@y.682 = common global i32 0
@x.683 = common global i32 0
@y.684 = common global i32 0
@x.685 = common global i32 0
@y.686 = common global i32 0
@x.687 = common global i32 0
@y.688 = common global i32 0
@x.689 = common global i32 0
@y.690 = common global i32 0
@x.691 = common global i32 0
@y.692 = common global i32 0
@x.693 = common global i32 0
@y.694 = common global i32 0
@x.695 = common global i32 0
@y.696 = common global i32 0
@x.697 = common global i32 0
@y.698 = common global i32 0
@x.699 = common global i32 0
@y.700 = common global i32 0
@x.701 = common global i32 0
@y.702 = common global i32 0
@x.703 = common global i32 0
@y.704 = common global i32 0
@x.705 = common global i32 0
@y.706 = common global i32 0
@x.707 = common global i32 0
@y.708 = common global i32 0
@x.709 = common global i32 0
@y.710 = common global i32 0
@x.711 = common global i32 0
@y.712 = common global i32 0
@x.713 = common global i32 0
@y.714 = common global i32 0
@x.715 = common global i32 0
@y.716 = common global i32 0
@x.717 = common global i32 0
@y.718 = common global i32 0
@x.719 = common global i32 0
@y.720 = common global i32 0
@x.721 = common global i32 0
@y.722 = common global i32 0
@x.723 = common global i32 0
@y.724 = common global i32 0
@x.725 = common global i32 0
@y.726 = common global i32 0
@x.727 = common global i32 0
@y.728 = common global i32 0
@x.729 = common global i32 0
@y.730 = common global i32 0
@x.731 = common global i32 0
@y.732 = common global i32 0
@x.733 = common global i32 0
@y.734 = common global i32 0
@x.735 = common global i32 0
@y.736 = common global i32 0
@x.737 = common global i32 0
@y.738 = common global i32 0
@x.739 = common global i32 0
@y.740 = common global i32 0
@x.741 = common global i32 0
@y.742 = common global i32 0
@x.743 = common global i32 0
@y.744 = common global i32 0
@x.745 = common global i32 0
@y.746 = common global i32 0
@x.747 = common global i32 0
@y.748 = common global i32 0
@x.749 = common global i32 0
@y.750 = common global i32 0
@x.751 = common global i32 0
@y.752 = common global i32 0
@x.753 = common global i32 0
@y.754 = common global i32 0
@x.755 = common global i32 0
@y.756 = common global i32 0
@x.757 = common global i32 0
@y.758 = common global i32 0
@x.759 = common global i32 0
@y.760 = common global i32 0
@x.761 = common global i32 0
@y.762 = common global i32 0
@x.763 = common global i32 0
@y.764 = common global i32 0
@x.765 = common global i32 0
@y.766 = common global i32 0
@x.767 = common global i32 0
@y.768 = common global i32 0
@x.769 = common global i32 0
@y.770 = common global i32 0
@x.771 = common global i32 0
@y.772 = common global i32 0
@x.773 = common global i32 0
@y.774 = common global i32 0
@x.775 = common global i32 0
@y.776 = common global i32 0
@x.777 = common global i32 0
@y.778 = common global i32 0
@x.779 = common global i32 0
@y.780 = common global i32 0
@x.781 = common global i32 0
@y.782 = common global i32 0
@x.783 = common global i32 0
@y.784 = common global i32 0
@x.785 = common global i32 0
@y.786 = common global i32 0
@x.787 = common global i32 0
@y.788 = common global i32 0
@x.789 = common global i32 0
@y.790 = common global i32 0
@x.791 = common global i32 0
@y.792 = common global i32 0
@x.793 = common global i32 0
@y.794 = common global i32 0
@x.795 = common global i32 0
@y.796 = common global i32 0
@x.797 = common global i32 0
@y.798 = common global i32 0
@x.799 = common global i32 0
@y.800 = common global i32 0
@x.801 = common global i32 0
@y.802 = common global i32 0
@x.803 = common global i32 0
@y.804 = common global i32 0
@x.805 = common global i32 0
@y.806 = common global i32 0
@x.807 = common global i32 0
@y.808 = common global i32 0
@x.809 = common global i32 0
@y.810 = common global i32 0
@x.811 = common global i32 0
@y.812 = common global i32 0
@x.813 = common global i32 0
@y.814 = common global i32 0
@x.815 = common global i32 0
@y.816 = common global i32 0
@x.817 = common global i32 0
@y.818 = common global i32 0
@x.819 = common global i32 0
@y.820 = common global i32 0
@x.821 = common global i32 0
@y.822 = common global i32 0
@x.823 = common global i32 0
@y.824 = common global i32 0
@x.825 = common global i32 0
@y.826 = common global i32 0
@x.827 = common global i32 0
@y.828 = common global i32 0
@x.829 = common global i32 0
@y.830 = common global i32 0
@x.831 = common global i32 0
@y.832 = common global i32 0
@x.833 = common global i32 0
@y.834 = common global i32 0
@x.835 = common global i32 0
@y.836 = common global i32 0
@x.837 = common global i32 0
@y.838 = common global i32 0
@x.839 = common global i32 0
@y.840 = common global i32 0
@x.841 = common global i32 0
@y.842 = common global i32 0
@x.843 = common global i32 0
@y.844 = common global i32 0
@x.845 = common global i32 0
@y.846 = common global i32 0
@x.847 = common global i32 0
@y.848 = common global i32 0
@x.849 = common global i32 0
@y.850 = common global i32 0
@x.851 = common global i32 0
@y.852 = common global i32 0
@x.853 = common global i32 0
@y.854 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define double @_Z5equaldd(double, double) #4 {
  %3 = alloca double
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.1
  %7 = load i32, i32* @y.2
  %8 = sub i32 %6, 55134170
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 55134170
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -773722946, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %69
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -773722946, label %20
    i32 213581011, label %28
    i32 1565455304, label %52
    i32 -1196308430, label %54
  ]

; <label>:19:                                     ; preds = %17
  br label %69

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 213581011, i32 -1196308430
  store i32 %27, i32* %16
  br label %69

; <label>:28:                                     ; preds = %17
  %29 = alloca double, align 8
  %30 = alloca double, align 8
  store double %0, double* %29, align 8
  store double %1, double* %30, align 8
  %31 = load double, double* %29, align 8
  %32 = load double, double* %30, align 8
  %33 = fsub double %31, %32
  %34 = call double @fabs(double %33) #14
  %35 = fcmp olt double %34, 0x3CB0000000000000
  %36 = uitofp i1 %35 to double
  store double %36, double* %3
  %37 = load i32, i32* @x.1
  %38 = load i32, i32* @y.2
  %39 = sub i32 %37, 1574723248
  %40 = sub i32 %39, 1
  %41 = add i32 %40, 1574723248
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 1565455304, i32 -1196308430
  store i32 %51, i32* %16
  br label %69

; <label>:52:                                     ; preds = %17
  %53 = load volatile double, double* %3
  ret double %53

; <label>:54:                                     ; preds = %17
  %55 = alloca double, align 8
  %56 = alloca double, align 8
  store double %0, double* %55, align 8
  store double %1, double* %56, align 8
  %57 = load double, double* %55, align 8
  %58 = load double, double* %56, align 8
  %59 = fsub double %57, %58
  %60 = fmul double %59, %58
  %61 = fsub double %57, %58
  %62 = fmul double %61, %58
  %63 = fsub double -0.000000e+00, %57
  %64 = fadd double %63, %58
  %65 = fsub double %57, %58
  %66 = call double @fabs(double %65) #14
  %67 = fcmp olt double %66, 0x3CB0000000000000
  %68 = uitofp i1 %67 to double
  store i32 213581011, i32* %16
  br label %69

; <label>:69:                                     ; preds = %54, %28, %20, %19
  br label %17
}

; Function Attrs: nounwind readnone
declare double @fabs(double) #5

; Function Attrs: noinline uwtable
define dereferenceable(280) %"class.std::basic_istream"* @_ZrsRSiRSt3setIiSt4lessIiESaIiEE(%"class.std::basic_istream"* dereferenceable(280), %"class.std::set"* dereferenceable(48)) #0 {
  %3 = alloca %"class.std::basic_istream"*, align 8
  %4 = alloca %"class.std::set"*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %"struct.std::pair", align 8
  store %"class.std::basic_istream"* %0, %"class.std::basic_istream"** %3, align 8
  store %"class.std::set"* %1, %"class.std::set"** %4, align 8
  %7 = load %"class.std::basic_istream"*, %"class.std::basic_istream"** %3, align 8
  %8 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %7, i32* dereferenceable(4) %5)
  %9 = load %"class.std::set"*, %"class.std::set"** %4, align 8
  %10 = call { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt3setIiSt4lessIiESaIiEE6insertERKi(%"class.std::set"* %9, i32* dereferenceable(4) %5)
  %11 = bitcast %"struct.std::pair"* %6 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %12 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %11, i32 0, i32 0
  %13 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %10, 0
  store %"struct.std::_Rb_tree_node_base"* %13, %"struct.std::_Rb_tree_node_base"** %12, align 8
  %14 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %11, i32 0, i32 1
  %15 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %10, 1
  store i8 %15, i8* %14, align 8
  %16 = load %"class.std::basic_istream"*, %"class.std::basic_istream"** %3, align 8
  ret %"class.std::basic_istream"* %16
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) #1

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt3setIiSt4lessIiESaIiEE6insertERKi(%"class.std::set"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca %"struct.std::pair", align 8
  %4 = alloca %"class.std::set"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca %"struct.std::pair.36", align 8
  store %"class.std::set"* %0, %"class.std::set"** %4, align 8
  store i32* %1, i32** %5, align 8
  %7 = load %"class.std::set"*, %"class.std::set"** %4, align 8
  %8 = getelementptr inbounds %"class.std::set", %"class.std::set"* %7, i32 0, i32 0
  %9 = load i32*, i32** %5, align 8
  %10 = call { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueIRKiEESt4pairISt17_Rb_tree_iteratorIiEbEOT_(%"class.std::_Rb_tree"* %8, i32* dereferenceable(4) %9)
  %11 = bitcast %"struct.std::pair.36"* %6 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %12 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %11, i32 0, i32 0
  %13 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %10, 0
  store %"struct.std::_Rb_tree_node_base"* %13, %"struct.std::_Rb_tree_node_base"** %12, align 8
  %14 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %11, i32 0, i32 1
  %15 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %10, 1
  store i8 %15, i8* %14, align 8
  %16 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %6, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %6, i32 0, i32 1
  call void @_ZNSt4pairISt23_Rb_tree_const_iteratorIiEbEC2IRSt17_Rb_tree_iteratorIiERbvEEOT_OT0_(%"struct.std::pair"* %3, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %16, i8* dereferenceable(1) %17)
  %18 = bitcast %"struct.std::pair"* %3 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %19 = load { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %18, align 8
  ret { %"struct.std::_Rb_tree_node_base"*, i8 } %19
}

; Function Attrs: noinline uwtable
define dereferenceable(280) %"class.std::basic_istream"* @_ZrsRSiRSt5queueIiSt5dequeIiSaIiEEE(%"class.std::basic_istream"* dereferenceable(280), %"class.std::queue"* dereferenceable(80)) #0 {
  %3 = alloca %"class.std::basic_istream"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.7
  %7 = load i32, i32* @y.8
  %8 = sub i32 %6, -352398637
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -352398637
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1631855886, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %66
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1631855886, label %20
    i32 -926419247, label %28
    i32 -952297253, label %53
    i32 1562707845, label %55
  ]

; <label>:19:                                     ; preds = %17
  br label %66

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -926419247, i32 1562707845
  store i32 %27, i32* %16
  br label %66

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::basic_istream"*, align 8
  %30 = alloca %"class.std::queue"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca i32, align 4
  store %"class.std::basic_istream"* %0, %"class.std::basic_istream"** %29, align 8
  store %"class.std::queue"* %1, %"class.std::queue"** %30, align 8
  %33 = load %"class.std::basic_istream"*, %"class.std::basic_istream"** %29, align 8
  %34 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %33, i64* dereferenceable(8) %31)
  %35 = load %"class.std::queue"*, %"class.std::queue"** %30, align 8
  %36 = load i64, i64* %31, align 8
  %37 = trunc i64 %36 to i32
  store i32 %37, i32* %32, align 4
  call void @_ZNSt5queueIiSt5dequeIiSaIiEEE4pushEOi(%"class.std::queue"* %35, i32* dereferenceable(4) %32)
  %38 = load %"class.std::basic_istream"*, %"class.std::basic_istream"** %29, align 8
  store %"class.std::basic_istream"* %38, %"class.std::basic_istream"** %3
  %39 = load i32, i32* @x.7
  %40 = load i32, i32* @y.8
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -952297253, i32 1562707845
  store i32 %52, i32* %16
  br label %66

; <label>:53:                                     ; preds = %17
  %54 = load volatile %"class.std::basic_istream"*, %"class.std::basic_istream"** %3
  ret %"class.std::basic_istream"* %54

; <label>:55:                                     ; preds = %17
  %56 = alloca %"class.std::basic_istream"*, align 8
  %57 = alloca %"class.std::queue"*, align 8
  %58 = alloca i64, align 8
  %59 = alloca i32, align 4
  store %"class.std::basic_istream"* %0, %"class.std::basic_istream"** %56, align 8
  store %"class.std::queue"* %1, %"class.std::queue"** %57, align 8
  %60 = load %"class.std::basic_istream"*, %"class.std::basic_istream"** %56, align 8
  %61 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %60, i64* dereferenceable(8) %58)
  %62 = load %"class.std::queue"*, %"class.std::queue"** %57, align 8
  %63 = load i64, i64* %58, align 8
  %64 = trunc i64 %63 to i32
  store i32 %64, i32* %59, align 4
  call void @_ZNSt5queueIiSt5dequeIiSaIiEEE4pushEOi(%"class.std::queue"* %62, i32* dereferenceable(4) %59)
  %65 = load %"class.std::basic_istream"*, %"class.std::basic_istream"** %56, align 8
  store i32 -926419247, i32* %16
  br label %66

; <label>:66:                                     ; preds = %55, %28, %20, %19
  br label %17
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEE4pushEOi(%"class.std::queue"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca %"class.std::queue"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::queue"*, %"class.std::queue"** %3, align 8
  %6 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %5, i32 0, i32 0
  %7 = load i32*, i32** %4, align 8
  %8 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %7) #3
  call void @_ZNSt5dequeIiSaIiEE9push_backEOi(%"class.std::deque"* %6, i32* dereferenceable(4) %8)
  ret void
}

; Function Attrs: noinline uwtable
define zeroext i1 @_Z7containRSt3setIiSt4lessIiESaIiEEi(%"class.std::set"* dereferenceable(48), i32) #0 {
  %3 = alloca %"class.std::set"*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %6 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  store %"class.std::set"* %0, %"class.std::set"** %3, align 8
  store i32 %1, i32* %4, align 4
  %7 = load %"class.std::set"*, %"class.std::set"** %3, align 8
  %8 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt3setIiSt4lessIiESaIiEE4findERKi(%"class.std::set"* %7, i32* dereferenceable(4) %4)
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %8, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %10 = load %"class.std::set"*, %"class.std::set"** %3, align 8
  %11 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt3setIiSt4lessIiESaIiEE3endEv(%"class.std::set"* %10) #3
  %12 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %6, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %12, align 8
  %13 = call zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorIiEneERKS0_(%"struct.std::_Rb_tree_const_iterator"* %5, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %6) #3
  ret i1 %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt3setIiSt4lessIiESaIiEE4findERKi(%"class.std::set"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %4 = alloca %"class.std::set"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"class.std::set"* %0, %"class.std::set"** %4, align 8
  store i32* %1, i32** %5, align 8
  %7 = load %"class.std::set"*, %"class.std::set"** %4, align 8
  %8 = getelementptr inbounds %"class.std::set", %"class.std::set"* %7, i32 0, i32 0
  %9 = load i32*, i32** %5, align 8
  %10 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE4findERKi(%"class.std::_Rb_tree"* %8, i32* dereferenceable(4) %9)
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %6, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %10, %"struct.std::_Rb_tree_node_base"** %11, align 8
  call void @_ZNSt23_Rb_tree_const_iteratorIiEC2ERKSt17_Rb_tree_iteratorIiE(%"struct.std::_Rb_tree_const_iterator"* %3, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %6) #3
  %12 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %3, i32 0, i32 0
  %13 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %12, align 8
  ret %"struct.std::_Rb_tree_node_base"* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorIiEneERKS0_(%"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %1, %"struct.std::_Rb_tree_const_iterator"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %8, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %11 = icmp ne %"struct.std::_Rb_tree_node_base"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt3setIiSt4lessIiESaIiEE3endEv(%"class.std::set"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.17
  %6 = load i32, i32* @y.18
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -141733000, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %84
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -141733000, label %18
    i32 -1183472834, label %38
    i32 1759871329, label %73
    i32 -1513093652, label %75
  ]

; <label>:17:                                     ; preds = %15
  br label %84

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1183472834, i32 -1513093652
  store i32 %37, i32* %14
  br label %84

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %40 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %40, align 8
  %41 = load %"class.std::set"*, %"class.std::set"** %40, align 8
  %42 = getelementptr inbounds %"class.std::set", %"class.std::set"* %41, i32 0, i32 0
  %43 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE3endEv(%"class.std::_Rb_tree"* %42) #3
  %44 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %39, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %43, %"struct.std::_Rb_tree_node_base"** %44, align 8
  %45 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %39, i32 0, i32 0
  %46 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %45, align 8
  store %"struct.std::_Rb_tree_node_base"* %46, %"struct.std::_Rb_tree_node_base"** %2
  %47 = load i32, i32* @x.17
  %48 = load i32, i32* @y.18
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 1759871329, i32 -1513093652
  store i32 %72, i32* %14
  br label %84

; <label>:73:                                     ; preds = %15
  %74 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2
  ret %"struct.std::_Rb_tree_node_base"* %74

; <label>:75:                                     ; preds = %15
  %76 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %77 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %77, align 8
  %78 = load %"class.std::set"*, %"class.std::set"** %77, align 8
  %79 = getelementptr inbounds %"class.std::set", %"class.std::set"* %78, i32 0, i32 0
  %80 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE3endEv(%"class.std::_Rb_tree"* %79) #3
  %81 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %76, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %80, %"struct.std::_Rb_tree_node_base"** %81, align 8
  %82 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %76, i32 0, i32 0
  %83 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %82, align 8
  store i32 -1183472834, i32* %14
  br label %84

; <label>:84:                                     ; preds = %75, %38, %18, %17
  br label %15
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() #6 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::vector", align 8
  %6 = alloca %"class.std::vector.6", align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::allocator.8", align 1
  %9 = alloca i8*
  %10 = alloca i32
  %11 = alloca %"class.std::allocator.3", align 1
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %"class.std::vector.11", align 8
  %15 = alloca %"class.std::vector.16", align 8
  %16 = alloca i32, align 4
  %17 = alloca %"class.std::allocator.0", align 1
  %18 = alloca %"class.std::allocator.13", align 1
  %19 = alloca %"struct.std::pair.18", align 8
  %20 = alloca %class.anon, align 8
  %21 = alloca %"class.std::queue.19", align 8
  %22 = alloca %"class.std::deque.20", align 8
  %23 = alloca %struct.Point, align 8
  %24 = alloca %class.anon.26, align 8
  %25 = alloca %"class.std::vector.27", align 8
  %26 = alloca %"class.std::initializer_list", align 8
  %27 = alloca %"class.std::allocator.29", align 1
  %28 = alloca %class.anon.32, align 8
  %29 = alloca %struct.Point, align 8
  %30 = alloca %"class.std::vector.27"*, align 8
  %31 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %32 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %33 = alloca %struct.Direction, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca %struct.Point, align 8
  %38 = alloca %class.anon.33, align 8
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %43 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %2)
  %44 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %43, i32* dereferenceable(4) %3)
  %45 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %44, i32* dereferenceable(4) %4)
  %46 = load i32, i32* %2, align 4
  %47 = sext i32 %46 to i64
  %48 = load i32, i32* %3, align 4
  %49 = sext i32 %48 to i64
  store i8 32, i8* %7, align 1
  call void @_ZNSaIcEC1Ev(%"class.std::allocator.8"* %8) #3
  invoke void @_ZNSt6vectorIcSaIcEEC2EmRKcRKS0_(%"class.std::vector.6"* %6, i64 %49, i8* dereferenceable(1) %7, %"class.std::allocator.8"* dereferenceable(1) %8)
          to label %50 unwind label %241

; <label>:50:                                     ; preds = %0
  call void @_ZNSaISt6vectorIcSaIcEEEC2Ev(%"class.std::allocator.3"* %11) #3
  invoke void @_ZNSt6vectorIS_IcSaIcEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector"* %5, i64 %47, %"class.std::vector.6"* dereferenceable(24) %6, %"class.std::allocator.3"* dereferenceable(1) %11)
          to label %51 unwind label %275

; <label>:51:                                     ; preds = %50
  %52 = load i32, i32* @x.19
  %53 = load i32, i32* @y.20
  %54 = sub i32 %52, 58174013
  %55 = sub i32 %54, 1
  %56 = add i32 %55, 58174013
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  br i1 %76, label %78, label %1398

; <label>:78:                                     ; preds = %51, %1398
  call void @_ZNSaISt6vectorIcSaIcEEED2Ev(%"class.std::allocator.3"* %11) #3
  call void @_ZNSt6vectorIcSaIcEED2Ev(%"class.std::vector.6"* %6) #3
  call void @_ZNSaIcED1Ev(%"class.std::allocator.8"* %8) #3
  store i32 0, i32* %12, align 4
  %79 = load i32, i32* @x.19
  %80 = load i32, i32* @y.20
  %81 = sub i32 %79, 1456048108
  %82 = sub i32 %81, 1
  %83 = add i32 %82, 1456048108
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  br i1 %91, label %93, label %1398

; <label>:93:                                     ; preds = %78
  br label %94

; <label>:94:                                     ; preds = %402, %93
  %95 = load i32, i32* %12, align 4
  %96 = load i32, i32* %2, align 4
  %97 = icmp slt i32 %95, %96
  br i1 %97, label %98, label %403

; <label>:98:                                     ; preds = %94
  store i32 0, i32* %13, align 4
  br label %99

; <label>:99:                                     ; preds = %240, %98
  %100 = load i32, i32* %13, align 4
  %101 = load i32, i32* %3, align 4
  %102 = icmp slt i32 %100, %101
  br i1 %102, label %103, label %313

; <label>:103:                                    ; preds = %99
  %104 = load i32, i32* @x.19
  %105 = load i32, i32* @y.20
  %106 = sub i32 0, 1
  %107 = add i32 %104, %106
  %108 = sub i32 %104, 1
  %109 = mul i32 %104, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %105, 10
  %113 = xor i1 %111, true
  %114 = xor i1 %112, true
  %115 = xor i1 false, true
  %116 = and i1 %113, false
  %117 = and i1 %111, %115
  %118 = and i1 %114, false
  %119 = and i1 %112, %115
  %120 = or i1 %116, %117
  %121 = or i1 %118, %119
  %122 = xor i1 %120, %121
  %123 = or i1 %113, %114
  %124 = xor i1 %123, true
  %125 = or i1 false, %115
  %126 = and i1 %124, %125
  %127 = or i1 %122, %126
  %128 = or i1 %111, %112
  br i1 %127, label %129, label %1399

; <label>:129:                                    ; preds = %103, %1399
  %130 = load i32, i32* %12, align 4
  %131 = sext i32 %130 to i64
  %132 = call dereferenceable(24) %"class.std::vector.6"* @_ZNSt6vectorIS_IcSaIcEESaIS1_EEixEm(%"class.std::vector"* %5, i64 %131) #3
  %133 = load i32, i32* %13, align 4
  %134 = sext i32 %133 to i64
  %135 = call dereferenceable(1) i8* @_ZNSt6vectorIcSaIcEEixEm(%"class.std::vector.6"* %132, i64 %134) #3
  %136 = load i32, i32* @x.19
  %137 = load i32, i32* @y.20
  %138 = sub i32 0, 1
  %139 = add i32 %136, %138
  %140 = sub i32 %136, 1
  %141 = mul i32 %136, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %137, 10
  %145 = and i1 %143, %144
  %146 = xor i1 %143, %144
  %147 = or i1 %145, %146
  %148 = or i1 %143, %144
  br i1 %147, label %149, label %1399

; <label>:149:                                    ; preds = %129
  %150 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280) @_ZSt3cin, i8* dereferenceable(1) %135)
          to label %151 unwind label %309

; <label>:151:                                    ; preds = %149
  %152 = load i32, i32* @x.19
  %153 = load i32, i32* @y.20
  %154 = sub i32 %152, -746301439
  %155 = sub i32 %154, 1
  %156 = add i32 %155, -746301439
  %157 = sub i32 %152, 1
  %158 = mul i32 %152, %156
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %153, 10
  %162 = and i1 %160, %161
  %163 = xor i1 %160, %161
  %164 = or i1 %162, %163
  %165 = or i1 %160, %161
  br i1 %164, label %166, label %1406

; <label>:166:                                    ; preds = %151, %1406
  %167 = load i32, i32* @x.19
  %168 = load i32, i32* @y.20
  %169 = sub i32 0, 1
  %170 = add i32 %167, %169
  %171 = sub i32 %167, 1
  %172 = mul i32 %167, %170
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %168, 10
  %176 = and i1 %174, %175
  %177 = xor i1 %174, %175
  %178 = or i1 %176, %177
  %179 = or i1 %174, %175
  br i1 %178, label %180, label %1406

; <label>:180:                                    ; preds = %166
  br label %181

; <label>:181:                                    ; preds = %180
  %182 = load i32, i32* @x.19
  %183 = load i32, i32* @y.20
  %184 = sub i32 %182, 1553446717
  %185 = sub i32 %184, 1
  %186 = add i32 %185, 1553446717
  %187 = sub i32 %182, 1
  %188 = mul i32 %182, %186
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %183, 10
  %192 = xor i1 %190, true
  %193 = xor i1 %191, true
  %194 = xor i1 false, true
  %195 = and i1 %192, false
  %196 = and i1 %190, %194
  %197 = and i1 %193, false
  %198 = and i1 %191, %194
  %199 = or i1 %195, %196
  %200 = or i1 %197, %198
  %201 = xor i1 %199, %200
  %202 = or i1 %192, %193
  %203 = xor i1 %202, true
  %204 = or i1 false, %194
  %205 = and i1 %203, %204
  %206 = or i1 %201, %205
  %207 = or i1 %190, %191
  br i1 %206, label %208, label %1407

; <label>:208:                                    ; preds = %181, %1407
  %209 = load i32, i32* %13, align 4
  %210 = add i32 %209, -1422700086
  %211 = add i32 %210, 1
  %212 = sub i32 %211, -1422700086
  %213 = add nsw i32 %209, 1
  store i32 %212, i32* %13, align 4
  %214 = load i32, i32* @x.19
  %215 = load i32, i32* @y.20
  %216 = sub i32 %214, 438648814
  %217 = sub i32 %216, 1
  %218 = add i32 %217, 438648814
  %219 = sub i32 %214, 1
  %220 = mul i32 %214, %218
  %221 = urem i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %215, 10
  %224 = xor i1 %222, true
  %225 = xor i1 %223, true
  %226 = xor i1 true, true
  %227 = and i1 %224, true
  %228 = and i1 %222, %226
  %229 = and i1 %225, true
  %230 = and i1 %223, %226
  %231 = or i1 %227, %228
  %232 = or i1 %229, %230
  %233 = xor i1 %231, %232
  %234 = or i1 %224, %225
  %235 = xor i1 %234, true
  %236 = or i1 true, %226
  %237 = and i1 %235, %236
  %238 = or i1 %233, %237
  %239 = or i1 %222, %223
  br i1 %238, label %240, label %1407

; <label>:240:                                    ; preds = %208
  br label %99

; <label>:241:                                    ; preds = %0
  %242 = load i32, i32* @x.19
  %243 = load i32, i32* @y.20
  %244 = sub i32 %242, -587466801
  %245 = sub i32 %244, 1
  %246 = add i32 %245, -587466801
  %247 = sub i32 %242, 1
  %248 = mul i32 %242, %246
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %243, 10
  %252 = and i1 %250, %251
  %253 = xor i1 %250, %251
  %254 = or i1 %252, %253
  %255 = or i1 %250, %251
  br i1 %254, label %256, label %1419

; <label>:256:                                    ; preds = %241, %1419
  %257 = landingpad { i8*, i32 }
          cleanup
  %258 = extractvalue { i8*, i32 } %257, 0
  store i8* %258, i8** %9, align 8
  %259 = extractvalue { i8*, i32 } %257, 1
  store i32 %259, i32* %10, align 4
  %260 = load i32, i32* @x.19
  %261 = load i32, i32* @y.20
  %262 = add i32 %260, 1382018637
  %263 = sub i32 %262, 1
  %264 = sub i32 %263, 1382018637
  %265 = sub i32 %260, 1
  %266 = mul i32 %260, %264
  %267 = urem i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %261, 10
  %270 = and i1 %268, %269
  %271 = xor i1 %268, %269
  %272 = or i1 %270, %271
  %273 = or i1 %268, %269
  br i1 %272, label %274, label %1419

; <label>:274:                                    ; preds = %256
  br label %308

; <label>:275:                                    ; preds = %50
  %276 = load i32, i32* @x.19
  %277 = load i32, i32* @y.20
  %278 = sub i32 0, 1
  %279 = add i32 %276, %278
  %280 = sub i32 %276, 1
  %281 = mul i32 %276, %279
  %282 = urem i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %277, 10
  %285 = and i1 %283, %284
  %286 = xor i1 %283, %284
  %287 = or i1 %285, %286
  %288 = or i1 %283, %284
  br i1 %287, label %289, label %1423

; <label>:289:                                    ; preds = %275, %1423
  %290 = landingpad { i8*, i32 }
          cleanup
  %291 = extractvalue { i8*, i32 } %290, 0
  store i8* %291, i8** %9, align 8
  %292 = extractvalue { i8*, i32 } %290, 1
  store i32 %292, i32* %10, align 4
  call void @_ZNSaISt6vectorIcSaIcEEED2Ev(%"class.std::allocator.3"* %11) #3
  call void @_ZNSt6vectorIcSaIcEED2Ev(%"class.std::vector.6"* %6) #3
  %293 = load i32, i32* @x.19
  %294 = load i32, i32* @y.20
  %295 = add i32 %293, -694863732
  %296 = sub i32 %295, 1
  %297 = sub i32 %296, -694863732
  %298 = sub i32 %293, 1
  %299 = mul i32 %293, %297
  %300 = urem i32 %299, 2
  %301 = icmp eq i32 %300, 0
  %302 = icmp slt i32 %294, 10
  %303 = and i1 %301, %302
  %304 = xor i1 %301, %302
  %305 = or i1 %303, %304
  %306 = or i1 %301, %302
  br i1 %305, label %307, label %1423

; <label>:307:                                    ; preds = %289
  br label %308

; <label>:308:                                    ; preds = %307, %274
  call void @_ZNSaIcED1Ev(%"class.std::allocator.8"* %8) #3
  br label %1352

; <label>:309:                                    ; preds = %149
  %310 = landingpad { i8*, i32 }
          cleanup
  %311 = extractvalue { i8*, i32 } %310, 0
  store i8* %311, i8** %9, align 8
  %312 = extractvalue { i8*, i32 } %310, 1
  store i32 %312, i32* %10, align 4
  br label %1309

; <label>:313:                                    ; preds = %99
  %314 = load i32, i32* @x.19
  %315 = load i32, i32* @y.20
  %316 = add i32 %314, -1828873408
  %317 = sub i32 %316, 1
  %318 = sub i32 %317, -1828873408
  %319 = sub i32 %314, 1
  %320 = mul i32 %314, %318
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %315, 10
  %324 = xor i1 %322, true
  %325 = xor i1 %323, true
  %326 = xor i1 false, true
  %327 = and i1 %324, false
  %328 = and i1 %322, %326
  %329 = and i1 %325, false
  %330 = and i1 %323, %326
  %331 = or i1 %327, %328
  %332 = or i1 %329, %330
  %333 = xor i1 %331, %332
  %334 = or i1 %324, %325
  %335 = xor i1 %334, true
  %336 = or i1 false, %326
  %337 = and i1 %335, %336
  %338 = or i1 %333, %337
  %339 = or i1 %322, %323
  br i1 %338, label %340, label %1427

; <label>:340:                                    ; preds = %313, %1427
  %341 = load i32, i32* @x.19
  %342 = load i32, i32* @y.20
  %343 = sub i32 %341, -572248181
  %344 = sub i32 %343, 1
  %345 = add i32 %344, -572248181
  %346 = sub i32 %341, 1
  %347 = mul i32 %341, %345
  %348 = urem i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %342, 10
  %351 = and i1 %349, %350
  %352 = xor i1 %349, %350
  %353 = or i1 %351, %352
  %354 = or i1 %349, %350
  br i1 %353, label %355, label %1427

; <label>:355:                                    ; preds = %340
  br label %356

; <label>:356:                                    ; preds = %355
  %357 = load i32, i32* @x.19
  %358 = load i32, i32* @y.20
  %359 = add i32 %357, 2147363269
  %360 = sub i32 %359, 1
  %361 = sub i32 %360, 2147363269
  %362 = sub i32 %357, 1
  %363 = mul i32 %357, %361
  %364 = urem i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = icmp slt i32 %358, 10
  %367 = xor i1 %365, true
  %368 = xor i1 %366, true
  %369 = xor i1 false, true
  %370 = and i1 %367, false
  %371 = and i1 %365, %369
  %372 = and i1 %368, false
  %373 = and i1 %366, %369
  %374 = or i1 %370, %371
  %375 = or i1 %372, %373
  %376 = xor i1 %374, %375
  %377 = or i1 %367, %368
  %378 = xor i1 %377, true
  %379 = or i1 false, %369
  %380 = and i1 %378, %379
  %381 = or i1 %376, %380
  %382 = or i1 %365, %366
  br i1 %381, label %383, label %1428

; <label>:383:                                    ; preds = %356, %1428
  %384 = load i32, i32* %12, align 4
  %385 = sub i32 0, 1
  %386 = sub i32 %384, %385
  %387 = add nsw i32 %384, 1
  store i32 %386, i32* %12, align 4
  %388 = load i32, i32* @x.19
  %389 = load i32, i32* @y.20
  %390 = add i32 %388, -1609151531
  %391 = sub i32 %390, 1
  %392 = sub i32 %391, -1609151531
  %393 = sub i32 %388, 1
  %394 = mul i32 %388, %392
  %395 = urem i32 %394, 2
  %396 = icmp eq i32 %395, 0
  %397 = icmp slt i32 %389, 10
  %398 = and i1 %396, %397
  %399 = xor i1 %396, %397
  %400 = or i1 %398, %399
  %401 = or i1 %396, %397
  br i1 %400, label %402, label %1428

; <label>:402:                                    ; preds = %383
  br label %94

; <label>:403:                                    ; preds = %94
  %404 = load i32, i32* @x.19
  %405 = load i32, i32* @y.20
  %406 = sub i32 0, 1
  %407 = add i32 %404, %406
  %408 = sub i32 %404, 1
  %409 = mul i32 %404, %407
  %410 = urem i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %405, 10
  %413 = and i1 %411, %412
  %414 = xor i1 %411, %412
  %415 = or i1 %413, %414
  %416 = or i1 %411, %412
  br i1 %415, label %417, label %1439

; <label>:417:                                    ; preds = %403, %1439
  %418 = load i32, i32* %2, align 4
  %419 = sext i32 %418 to i64
  %420 = load i32, i32* %3, align 4
  %421 = sext i32 %420 to i64
  store i32 214748364, i32* %16, align 4
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.0"* %17) #3
  %422 = load i32, i32* @x.19
  %423 = load i32, i32* @y.20
  %424 = add i32 %422, -1579824041
  %425 = sub i32 %424, 1
  %426 = sub i32 %425, -1579824041
  %427 = sub i32 %422, 1
  %428 = mul i32 %422, %426
  %429 = urem i32 %428, 2
  %430 = icmp eq i32 %429, 0
  %431 = icmp slt i32 %423, 10
  %432 = xor i1 %430, true
  %433 = xor i1 %431, true
  %434 = xor i1 false, true
  %435 = and i1 %432, false
  %436 = and i1 %430, %434
  %437 = and i1 %433, false
  %438 = and i1 %431, %434
  %439 = or i1 %435, %436
  %440 = or i1 %437, %438
  %441 = xor i1 %439, %440
  %442 = or i1 %432, %433
  %443 = xor i1 %442, true
  %444 = or i1 false, %434
  %445 = and i1 %443, %444
  %446 = or i1 %441, %445
  %447 = or i1 %430, %431
  br i1 %446, label %448, label %1439

; <label>:448:                                    ; preds = %417
  invoke void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector.16"* %15, i64 %421, i32* dereferenceable(4) %16, %"class.std::allocator.0"* dereferenceable(1) %17)
          to label %449 unwind label %779

; <label>:449:                                    ; preds = %448
  call void @_ZNSaISt6vectorIiSaIiEEEC2Ev(%"class.std::allocator.13"* %18) #3
  invoke void @_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.11"* %14, i64 %419, %"class.std::vector.16"* dereferenceable(24) %15, %"class.std::allocator.13"* dereferenceable(1) %18)
          to label %450 unwind label %783

; <label>:450:                                    ; preds = %449
  %451 = load i32, i32* @x.19
  %452 = load i32, i32* @y.20
  %453 = sub i32 %451, 1815009949
  %454 = sub i32 %453, 1
  %455 = add i32 %454, 1815009949
  %456 = sub i32 %451, 1
  %457 = mul i32 %451, %455
  %458 = urem i32 %457, 2
  %459 = icmp eq i32 %458, 0
  %460 = icmp slt i32 %452, 10
  %461 = xor i1 %459, true
  %462 = xor i1 %460, true
  %463 = xor i1 true, true
  %464 = and i1 %461, true
  %465 = and i1 %459, %463
  %466 = and i1 %462, true
  %467 = and i1 %460, %463
  %468 = or i1 %464, %465
  %469 = or i1 %466, %467
  %470 = xor i1 %468, %469
  %471 = or i1 %461, %462
  %472 = xor i1 %471, true
  %473 = or i1 true, %463
  %474 = and i1 %472, %473
  %475 = or i1 %470, %474
  %476 = or i1 %459, %460
  br i1 %475, label %477, label %1444

; <label>:477:                                    ; preds = %450, %1444
  call void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.13"* %18) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.16"* %15) #3
  call void @_ZNSaIiED2Ev(%"class.std::allocator.0"* %17) #3
  %478 = getelementptr inbounds %class.anon, %class.anon* %20, i32 0, i32 0
  store i32* %2, i32** %478, align 8
  %479 = getelementptr inbounds %class.anon, %class.anon* %20, i32 0, i32 1
  store i32* %3, i32** %479, align 8
  %480 = getelementptr inbounds %class.anon, %class.anon* %20, i32 0, i32 2
  store %"class.std::vector"* %5, %"class.std::vector"** %480, align 8
  %481 = load i32, i32* @x.19
  %482 = load i32, i32* @y.20
  %483 = sub i32 %481, -1624467381
  %484 = sub i32 %483, 1
  %485 = add i32 %484, -1624467381
  %486 = sub i32 %481, 1
  %487 = mul i32 %481, %485
  %488 = urem i32 %487, 2
  %489 = icmp eq i32 %488, 0
  %490 = icmp slt i32 %482, 10
  %491 = and i1 %489, %490
  %492 = xor i1 %489, %490
  %493 = or i1 %491, %492
  %494 = or i1 %489, %490
  br i1 %493, label %495, label %1444

; <label>:495:                                    ; preds = %477
  %496 = invoke { i64, i64 } @"_ZZ4mainENK3$_0clEv"(%class.anon* %20)
          to label %497 unwind label %788

; <label>:497:                                    ; preds = %495
  %498 = bitcast %"struct.std::pair.18"* %19 to { i64, i64 }*
  %499 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %498, i32 0, i32 0
  %500 = extractvalue { i64, i64 } %496, 0
  store i64 %500, i64* %499, align 8
  %501 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %498, i32 0, i32 1
  %502 = extractvalue { i64, i64 } %496, 1
  store i64 %502, i64* %501, align 8
  %503 = getelementptr inbounds %"struct.std::pair.18", %"struct.std::pair.18"* %19, i32 0, i32 0
  %504 = load i64, i64* %503, align 8
  %505 = call dereferenceable(24) %"class.std::vector.16"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.11"* %14, i64 %504) #3
  %506 = getelementptr inbounds %"struct.std::pair.18", %"struct.std::pair.18"* %19, i32 0, i32 1
  %507 = load i64, i64* %506, align 8
  %508 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.16"* %505, i64 %507) #3
  store i32 0, i32* %508, align 4
  invoke void @_ZNSt5dequeIZ4mainE5PointSaIS0_EEC2Ev(%"class.std::deque.20"* %22)
          to label %509 unwind label %788

; <label>:509:                                    ; preds = %497
  invoke void @_ZNSt5queueIZ4mainE5PointSt5dequeIS0_SaIS0_EEEC2EOS3_(%"class.std::queue.19"* %21, %"class.std::deque.20"* dereferenceable(80) %22)
          to label %510 unwind label %792

; <label>:510:                                    ; preds = %509
  call void @_ZNSt5dequeIZ4mainE5PointSaIS0_EED2Ev(%"class.std::deque.20"* %22) #3
  %511 = getelementptr inbounds %struct.Point, %struct.Point* %23, i32 0, i32 0
  %512 = getelementptr inbounds %"struct.std::pair.18", %"struct.std::pair.18"* %19, i32 0, i32 0
  %513 = load i64, i64* %512, align 8
  store i64 %513, i64* %511, align 8
  %514 = getelementptr inbounds %struct.Point, %struct.Point* %23, i32 0, i32 1
  %515 = getelementptr inbounds %"struct.std::pair.18", %"struct.std::pair.18"* %19, i32 0, i32 1
  %516 = load i64, i64* %515, align 8
  store i64 %516, i64* %514, align 8
  %517 = getelementptr inbounds %struct.Point, %struct.Point* %23, i32 0, i32 2
  store i64 0, i64* %517, align 8
  invoke void @_ZNSt5queueIZ4mainE5PointSt5dequeIS0_SaIS0_EEE4pushEOS0_(%"class.std::queue.19"* %21, %struct.Point* dereferenceable(24) %23)
          to label %518 unwind label %796

; <label>:518:                                    ; preds = %510
  %519 = load i32, i32* @x.19
  %520 = load i32, i32* @y.20
  %521 = sub i32 %519, -1351918622
  %522 = sub i32 %521, 1
  %523 = add i32 %522, -1351918622
  %524 = sub i32 %519, 1
  %525 = mul i32 %519, %523
  %526 = urem i32 %525, 2
  %527 = icmp eq i32 %526, 0
  %528 = icmp slt i32 %520, 10
  %529 = xor i1 %527, true
  %530 = xor i1 %528, true
  %531 = xor i1 false, true
  %532 = and i1 %529, false
  %533 = and i1 %527, %531
  %534 = and i1 %530, false
  %535 = and i1 %528, %531
  %536 = or i1 %532, %533
  %537 = or i1 %534, %535
  %538 = xor i1 %536, %537
  %539 = or i1 %529, %530
  %540 = xor i1 %539, true
  %541 = or i1 false, %531
  %542 = and i1 %540, %541
  %543 = or i1 %538, %542
  %544 = or i1 %527, %528
  br i1 %543, label %545, label %1448

; <label>:545:                                    ; preds = %518, %1448
  %546 = getelementptr inbounds %class.anon.26, %class.anon.26* %24, i32 0, i32 0
  store i32* %3, i32** %546, align 8
  %547 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %26, i32 0, i32 0
  store %struct.Direction* getelementptr inbounds ([4 x %struct.Direction], [4 x %struct.Direction]* @.ref.tmp, i64 0, i64 0), %struct.Direction** %547, align 8
  %548 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %26, i32 0, i32 1
  store i64 4, i64* %548, align 8
  call void @_ZNSaIZ4mainE9DirectionEC2Ev(%"class.std::allocator.29"* %27) #3
  %549 = bitcast %"class.std::initializer_list"* %26 to { %struct.Direction*, i64 }*
  %550 = getelementptr inbounds { %struct.Direction*, i64 }, { %struct.Direction*, i64 }* %549, i32 0, i32 0
  %551 = load %struct.Direction*, %struct.Direction** %550, align 8
  %552 = getelementptr inbounds { %struct.Direction*, i64 }, { %struct.Direction*, i64 }* %549, i32 0, i32 1
  %553 = load i64, i64* %552, align 8
  %554 = load i32, i32* @x.19
  %555 = load i32, i32* @y.20
  %556 = sub i32 0, 1
  %557 = add i32 %554, %556
  %558 = sub i32 %554, 1
  %559 = mul i32 %554, %557
  %560 = urem i32 %559, 2
  %561 = icmp eq i32 %560, 0
  %562 = icmp slt i32 %555, 10
  %563 = and i1 %561, %562
  %564 = xor i1 %561, %562
  %565 = or i1 %563, %564
  %566 = or i1 %561, %562
  br i1 %565, label %567, label %1448

; <label>:567:                                    ; preds = %545
  invoke void @_ZNSt6vectorIZ4mainE9DirectionSaIS0_EEC2ESt16initializer_listIS0_ERKS1_(%"class.std::vector.27"* %25, %struct.Direction* %551, i64 %553, %"class.std::allocator.29"* dereferenceable(1) %27)
          to label %568 unwind label %841

; <label>:568:                                    ; preds = %567
  call void @_ZNSaIZ4mainE9DirectionED2Ev(%"class.std::allocator.29"* %27) #3
  %569 = getelementptr inbounds %class.anon.32, %class.anon.32* %28, i32 0, i32 0
  store i32* %3, i32** %569, align 8
  %570 = getelementptr inbounds %class.anon.32, %class.anon.32* %28, i32 0, i32 1
  store i32* %2, i32** %570, align 8
  %571 = getelementptr inbounds %class.anon.32, %class.anon.32* %28, i32 0, i32 2
  store %"class.std::vector"* %5, %"class.std::vector"** %571, align 8
  %572 = getelementptr inbounds %class.anon.32, %class.anon.32* %28, i32 0, i32 3
  store %"class.std::vector.11"* %14, %"class.std::vector.11"** %572, align 8
  br label %573

; <label>:573:                                    ; preds = %1042, %568
  %574 = invoke zeroext i1 @_ZNKSt5queueIZ4mainE5PointSt5dequeIS0_SaIS0_EEE5emptyEv(%"class.std::queue.19"* %21)
          to label %575 unwind label %899

; <label>:575:                                    ; preds = %573
  %576 = xor i1 %574, true
  %577 = and i1 false, %576
  %578 = xor i1 false, true
  %579 = and i1 %574, %578
  %580 = xor i1 true, true
  %581 = and i1 %580, false
  %582 = and i1 true, %578
  %583 = or i1 %577, %579
  %584 = or i1 %581, %582
  %585 = xor i1 %583, %584
  %586 = xor i1 %574, true
  br i1 %585, label %587, label %1043

; <label>:587:                                    ; preds = %575
  %588 = load i32, i32* @x.19
  %589 = load i32, i32* @y.20
  %590 = sub i32 0, 1
  %591 = add i32 %588, %590
  %592 = sub i32 %588, 1
  %593 = mul i32 %588, %591
  %594 = urem i32 %593, 2
  %595 = icmp eq i32 %594, 0
  %596 = icmp slt i32 %589, 10
  %597 = xor i1 %595, true
  %598 = xor i1 %596, true
  %599 = xor i1 false, true
  %600 = and i1 %597, false
  %601 = and i1 %595, %599
  %602 = and i1 %598, false
  %603 = and i1 %596, %599
  %604 = or i1 %600, %601
  %605 = or i1 %602, %603
  %606 = xor i1 %604, %605
  %607 = or i1 %597, %598
  %608 = xor i1 %607, true
  %609 = or i1 false, %599
  %610 = and i1 %608, %609
  %611 = or i1 %606, %610
  %612 = or i1 %595, %596
  br i1 %611, label %613, label %1457

; <label>:613:                                    ; preds = %587, %1457
  %614 = load i32, i32* @x.19
  %615 = load i32, i32* @y.20
  %616 = sub i32 0, 1
  %617 = add i32 %614, %616
  %618 = sub i32 %614, 1
  %619 = mul i32 %614, %617
  %620 = urem i32 %619, 2
  %621 = icmp eq i32 %620, 0
  %622 = icmp slt i32 %615, 10
  %623 = and i1 %621, %622
  %624 = xor i1 %621, %622
  %625 = or i1 %623, %624
  %626 = or i1 %621, %622
  br i1 %625, label %627, label %1457

; <label>:627:                                    ; preds = %613
  %628 = invoke dereferenceable(24) %struct.Point* @_ZNSt5queueIZ4mainE5PointSt5dequeIS0_SaIS0_EEE5frontEv(%"class.std::queue.19"* %21)
          to label %629 unwind label %899

; <label>:629:                                    ; preds = %627
  %630 = bitcast %struct.Point* %29 to i8*
  %631 = bitcast %struct.Point* %628 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %630, i8* %631, i64 24, i32 8, i1 false)
  invoke void @_ZNSt5queueIZ4mainE5PointSt5dequeIS0_SaIS0_EEE3popEv(%"class.std::queue.19"* %21)
          to label %632 unwind label %899

; <label>:632:                                    ; preds = %629
  %633 = load i32, i32* @x.19
  %634 = load i32, i32* @y.20
  %635 = sub i32 0, 1
  %636 = add i32 %633, %635
  %637 = sub i32 %633, 1
  %638 = mul i32 %633, %636
  %639 = urem i32 %638, 2
  %640 = icmp eq i32 %639, 0
  %641 = icmp slt i32 %634, 10
  %642 = xor i1 %640, true
  %643 = xor i1 %641, true
  %644 = xor i1 false, true
  %645 = and i1 %642, false
  %646 = and i1 %640, %644
  %647 = and i1 %643, false
  %648 = and i1 %641, %644
  %649 = or i1 %645, %646
  %650 = or i1 %647, %648
  %651 = xor i1 %649, %650
  %652 = or i1 %642, %643
  %653 = xor i1 %652, true
  %654 = or i1 false, %644
  %655 = and i1 %653, %654
  %656 = or i1 %651, %655
  %657 = or i1 %640, %641
  br i1 %656, label %658, label %1458

; <label>:658:                                    ; preds = %632, %1458
  store %"class.std::vector.27"* %25, %"class.std::vector.27"** %30, align 8
  %659 = load %"class.std::vector.27"*, %"class.std::vector.27"** %30, align 8
  %660 = call %struct.Direction* @_ZNSt6vectorIZ4mainE9DirectionSaIS0_EE5beginEv(%"class.std::vector.27"* %659) #3
  %661 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %31, i32 0, i32 0
  store %struct.Direction* %660, %struct.Direction** %661, align 8
  %662 = load %"class.std::vector.27"*, %"class.std::vector.27"** %30, align 8
  %663 = call %struct.Direction* @_ZNSt6vectorIZ4mainE9DirectionSaIS0_EE3endEv(%"class.std::vector.27"* %662) #3
  %664 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %32, i32 0, i32 0
  store %struct.Direction* %663, %struct.Direction** %664, align 8
  %665 = load i32, i32* @x.19
  %666 = load i32, i32* @y.20
  %667 = sub i32 %665, 1808331431
  %668 = sub i32 %667, 1
  %669 = add i32 %668, 1808331431
  %670 = sub i32 %665, 1
  %671 = mul i32 %665, %669
  %672 = urem i32 %671, 2
  %673 = icmp eq i32 %672, 0
  %674 = icmp slt i32 %666, 10
  %675 = xor i1 %673, true
  %676 = xor i1 %674, true
  %677 = xor i1 false, true
  %678 = and i1 %675, false
  %679 = and i1 %673, %677
  %680 = and i1 %676, false
  %681 = and i1 %674, %677
  %682 = or i1 %678, %679
  %683 = or i1 %680, %681
  %684 = xor i1 %682, %683
  %685 = or i1 %675, %676
  %686 = xor i1 %685, true
  %687 = or i1 false, %677
  %688 = and i1 %686, %687
  %689 = or i1 %684, %688
  %690 = or i1 %673, %674
  br i1 %689, label %691, label %1458

; <label>:691:                                    ; preds = %658
  br label %692

; <label>:692:                                    ; preds = %1000, %691
  %693 = call zeroext i1 @_ZN9__gnu_cxxneIPZ4mainE9DirectionSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %31, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %32) #3
  br i1 %693, label %694, label %1001

; <label>:694:                                    ; preds = %692
  %695 = call dereferenceable(8) %struct.Direction* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE9DirectionSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %31) #3
  %696 = bitcast %struct.Direction* %33 to i8*
  %697 = bitcast %struct.Direction* %695 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %696, i8* %697, i64 8, i32 4, i1 false)
  %698 = getelementptr inbounds %struct.Point, %struct.Point* %29, i32 0, i32 1
  %699 = load i64, i64* %698, align 8
  %700 = getelementptr inbounds %struct.Direction, %struct.Direction* %33, i32 0, i32 1
  %701 = load i32, i32* %700, align 4
  %702 = sext i32 %701 to i64
  %703 = sub i64 0, %699
  %704 = sub i64 0, %702
  %705 = add i64 %703, %704
  %706 = sub i64 0, %705
  %707 = add nsw i64 %699, %702
  %708 = trunc i64 %706 to i32
  store i32 %708, i32* %34, align 4
  %709 = getelementptr inbounds %struct.Point, %struct.Point* %29, i32 0, i32 0
  %710 = load i64, i64* %709, align 8
  %711 = getelementptr inbounds %struct.Direction, %struct.Direction* %33, i32 0, i32 0
  %712 = load i32, i32* %711, align 4
  %713 = sext i32 %712 to i64
  %714 = add i64 %710, 6358142895416144922
  %715 = add i64 %714, %713
  %716 = sub i64 %715, 6358142895416144922
  %717 = add nsw i64 %710, %713
  %718 = trunc i64 %716 to i32
  store i32 %718, i32* %35, align 4
  %719 = getelementptr inbounds %struct.Point, %struct.Point* %29, i32 0, i32 2
  %720 = load i64, i64* %719, align 8
  %721 = sub i64 %720, -6428434925113710537
  %722 = add i64 %721, 1
  %723 = add i64 %722, -6428434925113710537
  %724 = add nsw i64 %720, 1
  %725 = trunc i64 %723 to i32
  store i32 %725, i32* %36, align 4
  %726 = load i32, i32* %35, align 4
  %727 = load i32, i32* %34, align 4
  %728 = load i32, i32* %36, align 4
  %729 = invoke zeroext i1 @"_ZZ4mainENK3$_1clEiii"(%class.anon.32* %28, i32 %726, i32 %727, i32 %728)
          to label %730 unwind label %899

; <label>:730:                                    ; preds = %694
  br i1 %729, label %731, label %944

; <label>:731:                                    ; preds = %730
  %732 = load i32, i32* @x.19
  %733 = load i32, i32* @y.20
  %734 = add i32 %732, -877173946
  %735 = sub i32 %734, 1
  %736 = sub i32 %735, -877173946
  %737 = sub i32 %732, 1
  %738 = mul i32 %732, %736
  %739 = urem i32 %738, 2
  %740 = icmp eq i32 %739, 0
  %741 = icmp slt i32 %733, 10
  %742 = and i1 %740, %741
  %743 = xor i1 %740, %741
  %744 = or i1 %742, %743
  %745 = or i1 %740, %741
  br i1 %744, label %746, label %1465

; <label>:746:                                    ; preds = %731, %1465
  %747 = load i32, i32* %36, align 4
  %748 = load i32, i32* %35, align 4
  %749 = sext i32 %748 to i64
  %750 = call dereferenceable(24) %"class.std::vector.16"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.11"* %14, i64 %749) #3
  %751 = load i32, i32* %34, align 4
  %752 = sext i32 %751 to i64
  %753 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.16"* %750, i64 %752) #3
  store i32 %747, i32* %753, align 4
  %754 = getelementptr inbounds %struct.Point, %struct.Point* %37, i32 0, i32 0
  %755 = load i32, i32* %35, align 4
  %756 = sext i32 %755 to i64
  store i64 %756, i64* %754, align 8
  %757 = getelementptr inbounds %struct.Point, %struct.Point* %37, i32 0, i32 1
  %758 = load i32, i32* %34, align 4
  %759 = sext i32 %758 to i64
  store i64 %759, i64* %757, align 8
  %760 = getelementptr inbounds %struct.Point, %struct.Point* %37, i32 0, i32 2
  %761 = load i32, i32* %36, align 4
  %762 = sext i32 %761 to i64
  store i64 %762, i64* %760, align 8
  %763 = load i32, i32* @x.19
  %764 = load i32, i32* @y.20
  %765 = add i32 %763, -958448657
  %766 = sub i32 %765, 1
  %767 = sub i32 %766, -958448657
  %768 = sub i32 %763, 1
  %769 = mul i32 %763, %767
  %770 = urem i32 %769, 2
  %771 = icmp eq i32 %770, 0
  %772 = icmp slt i32 %764, 10
  %773 = and i1 %771, %772
  %774 = xor i1 %771, %772
  %775 = or i1 %773, %774
  %776 = or i1 %771, %772
  br i1 %775, label %777, label %1465

; <label>:777:                                    ; preds = %746
  invoke void @_ZNSt5queueIZ4mainE5PointSt5dequeIS0_SaIS0_EEE4pushEOS0_(%"class.std::queue.19"* %21, %struct.Point* dereferenceable(24) %37)
          to label %778 unwind label %899

; <label>:778:                                    ; preds = %777
  br label %944

; <label>:779:                                    ; preds = %448
  %780 = landingpad { i8*, i32 }
          cleanup
  %781 = extractvalue { i8*, i32 } %780, 0
  store i8* %781, i8** %9, align 8
  %782 = extractvalue { i8*, i32 } %780, 1
  store i32 %782, i32* %10, align 4
  br label %787

; <label>:783:                                    ; preds = %449
  %784 = landingpad { i8*, i32 }
          cleanup
  %785 = extractvalue { i8*, i32 } %784, 0
  store i8* %785, i8** %9, align 8
  %786 = extractvalue { i8*, i32 } %784, 1
  store i32 %786, i32* %10, align 4
  call void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.13"* %18) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.16"* %15) #3
  br label %787

; <label>:787:                                    ; preds = %783, %779
  call void @_ZNSaIiED2Ev(%"class.std::allocator.0"* %17) #3
  br label %1309

; <label>:788:                                    ; preds = %497, %495
  %789 = landingpad { i8*, i32 }
          cleanup
  %790 = extractvalue { i8*, i32 } %789, 0
  store i8* %790, i8** %9, align 8
  %791 = extractvalue { i8*, i32 } %789, 1
  store i32 %791, i32* %10, align 4
  br label %1308

; <label>:792:                                    ; preds = %509
  %793 = landingpad { i8*, i32 }
          cleanup
  %794 = extractvalue { i8*, i32 } %793, 0
  store i8* %794, i8** %9, align 8
  %795 = extractvalue { i8*, i32 } %793, 1
  store i32 %795, i32* %10, align 4
  call void @_ZNSt5dequeIZ4mainE5PointSaIS0_EED2Ev(%"class.std::deque.20"* %22) #3
  br label %1308

; <label>:796:                                    ; preds = %510
  %797 = load i32, i32* @x.19
  %798 = load i32, i32* @y.20
  %799 = sub i32 0, 1
  %800 = add i32 %797, %799
  %801 = sub i32 %797, 1
  %802 = mul i32 %797, %800
  %803 = urem i32 %802, 2
  %804 = icmp eq i32 %803, 0
  %805 = icmp slt i32 %798, 10
  %806 = and i1 %804, %805
  %807 = xor i1 %804, %805
  %808 = or i1 %806, %807
  %809 = or i1 %804, %805
  br i1 %808, label %810, label %1482

; <label>:810:                                    ; preds = %796, %1482
  %811 = landingpad { i8*, i32 }
          cleanup
  %812 = extractvalue { i8*, i32 } %811, 0
  store i8* %812, i8** %9, align 8
  %813 = extractvalue { i8*, i32 } %811, 1
  store i32 %813, i32* %10, align 4
  %814 = load i32, i32* @x.19
  %815 = load i32, i32* @y.20
  %816 = sub i32 %814, 1867138466
  %817 = sub i32 %816, 1
  %818 = add i32 %817, 1867138466
  %819 = sub i32 %814, 1
  %820 = mul i32 %814, %818
  %821 = urem i32 %820, 2
  %822 = icmp eq i32 %821, 0
  %823 = icmp slt i32 %815, 10
  %824 = xor i1 %822, true
  %825 = xor i1 %823, true
  %826 = xor i1 false, true
  %827 = and i1 %824, false
  %828 = and i1 %822, %826
  %829 = and i1 %825, false
  %830 = and i1 %823, %826
  %831 = or i1 %827, %828
  %832 = or i1 %829, %830
  %833 = xor i1 %831, %832
  %834 = or i1 %824, %825
  %835 = xor i1 %834, true
  %836 = or i1 false, %826
  %837 = and i1 %835, %836
  %838 = or i1 %833, %837
  %839 = or i1 %822, %823
  br i1 %838, label %840, label %1482

; <label>:840:                                    ; preds = %810
  br label %1307

; <label>:841:                                    ; preds = %567
  %842 = load i32, i32* @x.19
  %843 = load i32, i32* @y.20
  %844 = sub i32 %842, -443034378
  %845 = sub i32 %844, 1
  %846 = add i32 %845, -443034378
  %847 = sub i32 %842, 1
  %848 = mul i32 %842, %846
  %849 = urem i32 %848, 2
  %850 = icmp eq i32 %849, 0
  %851 = icmp slt i32 %843, 10
  %852 = xor i1 %850, true
  %853 = xor i1 %851, true
  %854 = xor i1 false, true
  %855 = and i1 %852, false
  %856 = and i1 %850, %854
  %857 = and i1 %853, false
  %858 = and i1 %851, %854
  %859 = or i1 %855, %856
  %860 = or i1 %857, %858
  %861 = xor i1 %859, %860
  %862 = or i1 %852, %853
  %863 = xor i1 %862, true
  %864 = or i1 false, %854
  %865 = and i1 %863, %864
  %866 = or i1 %861, %865
  %867 = or i1 %850, %851
  br i1 %866, label %868, label %1486

; <label>:868:                                    ; preds = %841, %1486
  %869 = landingpad { i8*, i32 }
          cleanup
  %870 = extractvalue { i8*, i32 } %869, 0
  store i8* %870, i8** %9, align 8
  %871 = extractvalue { i8*, i32 } %869, 1
  store i32 %871, i32* %10, align 4
  call void @_ZNSaIZ4mainE9DirectionED2Ev(%"class.std::allocator.29"* %27) #3
  %872 = load i32, i32* @x.19
  %873 = load i32, i32* @y.20
  %874 = add i32 %872, 316105695
  %875 = sub i32 %874, 1
  %876 = sub i32 %875, 316105695
  %877 = sub i32 %872, 1
  %878 = mul i32 %872, %876
  %879 = urem i32 %878, 2
  %880 = icmp eq i32 %879, 0
  %881 = icmp slt i32 %873, 10
  %882 = xor i1 %880, true
  %883 = xor i1 %881, true
  %884 = xor i1 false, true
  %885 = and i1 %882, false
  %886 = and i1 %880, %884
  %887 = and i1 %883, false
  %888 = and i1 %881, %884
  %889 = or i1 %885, %886
  %890 = or i1 %887, %888
  %891 = xor i1 %889, %890
  %892 = or i1 %882, %883
  %893 = xor i1 %892, true
  %894 = or i1 false, %884
  %895 = and i1 %893, %894
  %896 = or i1 %891, %895
  %897 = or i1 %880, %881
  br i1 %896, label %898, label %1486

; <label>:898:                                    ; preds = %868
  br label %1307

; <label>:899:                                    ; preds = %1261, %1200, %1140, %1108, %777, %694, %629, %627, %573
  %900 = load i32, i32* @x.19
  %901 = load i32, i32* @y.20
  %902 = sub i32 0, 1
  %903 = add i32 %900, %902
  %904 = sub i32 %900, 1
  %905 = mul i32 %900, %903
  %906 = urem i32 %905, 2
  %907 = icmp eq i32 %906, 0
  %908 = icmp slt i32 %901, 10
  %909 = and i1 %907, %908
  %910 = xor i1 %907, %908
  %911 = or i1 %909, %910
  %912 = or i1 %907, %908
  br i1 %911, label %913, label %1490

; <label>:913:                                    ; preds = %899, %1490
  %914 = landingpad { i8*, i32 }
          cleanup
  %915 = extractvalue { i8*, i32 } %914, 0
  store i8* %915, i8** %9, align 8
  %916 = extractvalue { i8*, i32 } %914, 1
  store i32 %916, i32* %10, align 4
  call void @_ZNSt6vectorIZ4mainE9DirectionSaIS0_EED2Ev(%"class.std::vector.27"* %25) #3
  %917 = load i32, i32* @x.19
  %918 = load i32, i32* @y.20
  %919 = sub i32 %917, 1110409144
  %920 = sub i32 %919, 1
  %921 = add i32 %920, 1110409144
  %922 = sub i32 %917, 1
  %923 = mul i32 %917, %921
  %924 = urem i32 %923, 2
  %925 = icmp eq i32 %924, 0
  %926 = icmp slt i32 %918, 10
  %927 = xor i1 %925, true
  %928 = xor i1 %926, true
  %929 = xor i1 true, true
  %930 = and i1 %927, true
  %931 = and i1 %925, %929
  %932 = and i1 %928, true
  %933 = and i1 %926, %929
  %934 = or i1 %930, %931
  %935 = or i1 %932, %933
  %936 = xor i1 %934, %935
  %937 = or i1 %927, %928
  %938 = xor i1 %937, true
  %939 = or i1 true, %929
  %940 = and i1 %938, %939
  %941 = or i1 %936, %940
  %942 = or i1 %925, %926
  br i1 %941, label %943, label %1490

; <label>:943:                                    ; preds = %913
  br label %1307

; <label>:944:                                    ; preds = %778, %730
  br label %945

; <label>:945:                                    ; preds = %944
  %946 = load i32, i32* @x.19
  %947 = load i32, i32* @y.20
  %948 = add i32 %946, 617151904
  %949 = sub i32 %948, 1
  %950 = sub i32 %949, 617151904
  %951 = sub i32 %946, 1
  %952 = mul i32 %946, %950
  %953 = urem i32 %952, 2
  %954 = icmp eq i32 %953, 0
  %955 = icmp slt i32 %947, 10
  %956 = xor i1 %954, true
  %957 = xor i1 %955, true
  %958 = xor i1 false, true
  %959 = and i1 %956, false
  %960 = and i1 %954, %958
  %961 = and i1 %957, false
  %962 = and i1 %955, %958
  %963 = or i1 %959, %960
  %964 = or i1 %961, %962
  %965 = xor i1 %963, %964
  %966 = or i1 %956, %957
  %967 = xor i1 %966, true
  %968 = or i1 false, %958
  %969 = and i1 %967, %968
  %970 = or i1 %965, %969
  %971 = or i1 %954, %955
  br i1 %970, label %972, label %1494

; <label>:972:                                    ; preds = %945, %1494
  %973 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPZ4mainE9DirectionSt6vectorIS1_SaIS1_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %31) #3
  %974 = load i32, i32* @x.19
  %975 = load i32, i32* @y.20
  %976 = add i32 %974, 1819587385
  %977 = sub i32 %976, 1
  %978 = sub i32 %977, 1819587385
  %979 = sub i32 %974, 1
  %980 = mul i32 %974, %978
  %981 = urem i32 %980, 2
  %982 = icmp eq i32 %981, 0
  %983 = icmp slt i32 %975, 10
  %984 = xor i1 %982, true
  %985 = xor i1 %983, true
  %986 = xor i1 true, true
  %987 = and i1 %984, true
  %988 = and i1 %982, %986
  %989 = and i1 %985, true
  %990 = and i1 %983, %986
  %991 = or i1 %987, %988
  %992 = or i1 %989, %990
  %993 = xor i1 %991, %992
  %994 = or i1 %984, %985
  %995 = xor i1 %994, true
  %996 = or i1 true, %986
  %997 = and i1 %995, %996
  %998 = or i1 %993, %997
  %999 = or i1 %982, %983
  br i1 %998, label %1000, label %1494

; <label>:1000:                                   ; preds = %972
  br label %692

; <label>:1001:                                   ; preds = %692
  %1002 = load i32, i32* @x.19
  %1003 = load i32, i32* @y.20
  %1004 = sub i32 %1002, -1115394813
  %1005 = sub i32 %1004, 1
  %1006 = add i32 %1005, -1115394813
  %1007 = sub i32 %1002, 1
  %1008 = mul i32 %1002, %1006
  %1009 = urem i32 %1008, 2
  %1010 = icmp eq i32 %1009, 0
  %1011 = icmp slt i32 %1003, 10
  %1012 = and i1 %1010, %1011
  %1013 = xor i1 %1010, %1011
  %1014 = or i1 %1012, %1013
  %1015 = or i1 %1010, %1011
  br i1 %1014, label %1016, label %1496

; <label>:1016:                                   ; preds = %1001, %1496
  %1017 = load i32, i32* @x.19
  %1018 = load i32, i32* @y.20
  %1019 = sub i32 0, 1
  %1020 = add i32 %1017, %1019
  %1021 = sub i32 %1017, 1
  %1022 = mul i32 %1017, %1020
  %1023 = urem i32 %1022, 2
  %1024 = icmp eq i32 %1023, 0
  %1025 = icmp slt i32 %1018, 10
  %1026 = xor i1 %1024, true
  %1027 = xor i1 %1025, true
  %1028 = xor i1 true, true
  %1029 = and i1 %1026, true
  %1030 = and i1 %1024, %1028
  %1031 = and i1 %1027, true
  %1032 = and i1 %1025, %1028
  %1033 = or i1 %1029, %1030
  %1034 = or i1 %1031, %1032
  %1035 = xor i1 %1033, %1034
  %1036 = or i1 %1026, %1027
  %1037 = xor i1 %1036, true
  %1038 = or i1 true, %1028
  %1039 = and i1 %1037, %1038
  %1040 = or i1 %1035, %1039
  %1041 = or i1 %1024, %1025
  br i1 %1040, label %1042, label %1496

; <label>:1042:                                   ; preds = %1016
  br label %573

; <label>:1043:                                   ; preds = %575
  %1044 = getelementptr inbounds %class.anon.33, %class.anon.33* %38, i32 0, i32 0
  store i32* %4, i32** %1044, align 8
  %1045 = getelementptr inbounds %class.anon.33, %class.anon.33* %38, i32 0, i32 1
  store i32* %3, i32** %1045, align 8
  %1046 = getelementptr inbounds %class.anon.33, %class.anon.33* %38, i32 0, i32 2
  store i32* %2, i32** %1046, align 8
  store i32 2147483647, i32* %39, align 4
  store i32 0, i32* %40, align 4
  br label %1047

; <label>:1047:                                   ; preds = %1193, %1043
  %1048 = load i32, i32* %40, align 4
  %1049 = load i32, i32* %2, align 4
  %1050 = icmp slt i32 %1048, %1049
  br i1 %1050, label %1051, label %1200

; <label>:1051:                                   ; preds = %1047
  %1052 = load i32, i32* @x.19
  %1053 = load i32, i32* @y.20
  %1054 = add i32 %1052, 1156932549
  %1055 = sub i32 %1054, 1
  %1056 = sub i32 %1055, 1156932549
  %1057 = sub i32 %1052, 1
  %1058 = mul i32 %1052, %1056
  %1059 = urem i32 %1058, 2
  %1060 = icmp eq i32 %1059, 0
  %1061 = icmp slt i32 %1053, 10
  %1062 = and i1 %1060, %1061
  %1063 = xor i1 %1060, %1061
  %1064 = or i1 %1062, %1063
  %1065 = or i1 %1060, %1061
  br i1 %1064, label %1066, label %1497

; <label>:1066:                                   ; preds = %1051, %1497
  store i32 0, i32* %41, align 4
  %1067 = load i32, i32* @x.19
  %1068 = load i32, i32* @y.20
  %1069 = sub i32 0, 1
  %1070 = add i32 %1067, %1069
  %1071 = sub i32 %1067, 1
  %1072 = mul i32 %1067, %1070
  %1073 = urem i32 %1072, 2
  %1074 = icmp eq i32 %1073, 0
  %1075 = icmp slt i32 %1068, 10
  %1076 = xor i1 %1074, true
  %1077 = xor i1 %1075, true
  %1078 = xor i1 true, true
  %1079 = and i1 %1076, true
  %1080 = and i1 %1074, %1078
  %1081 = and i1 %1077, true
  %1082 = and i1 %1075, %1078
  %1083 = or i1 %1079, %1080
  %1084 = or i1 %1081, %1082
  %1085 = xor i1 %1083, %1084
  %1086 = or i1 %1076, %1077
  %1087 = xor i1 %1086, true
  %1088 = or i1 true, %1078
  %1089 = and i1 %1087, %1088
  %1090 = or i1 %1085, %1089
  %1091 = or i1 %1074, %1075
  br i1 %1090, label %1092, label %1497

; <label>:1092:                                   ; preds = %1066
  br label %1093

; <label>:1093:                                   ; preds = %1144, %1092
  %1094 = load i32, i32* %41, align 4
  %1095 = load i32, i32* %3, align 4
  %1096 = icmp slt i32 %1094, %1095
  br i1 %1096, label %1097, label %1150

; <label>:1097:                                   ; preds = %1093
  %1098 = load i32, i32* %40, align 4
  %1099 = sext i32 %1098 to i64
  %1100 = call dereferenceable(24) %"class.std::vector.16"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.11"* %14, i64 %1099) #3
  %1101 = load i32, i32* %41, align 4
  %1102 = sext i32 %1101 to i64
  %1103 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.16"* %1100, i64 %1102) #3
  %1104 = load i32, i32* %1103, align 4
  %1105 = load i32, i32* %4, align 4
  %1106 = icmp sgt i32 %1104, %1105
  br i1 %1106, label %1107, label %1108

; <label>:1107:                                   ; preds = %1097
  br label %1144

; <label>:1108:                                   ; preds = %1097
  %1109 = load i32, i32* %40, align 4
  %1110 = load i32, i32* %41, align 4
  %1111 = invoke i32 @"_ZZ4mainENK3$_2clEii"(%class.anon.33* %38, i32 %1109, i32 %1110)
          to label %1112 unwind label %899

; <label>:1112:                                   ; preds = %1108
  %1113 = load i32, i32* @x.19
  %1114 = load i32, i32* @y.20
  %1115 = sub i32 0, 1
  %1116 = add i32 %1113, %1115
  %1117 = sub i32 %1113, 1
  %1118 = mul i32 %1113, %1116
  %1119 = urem i32 %1118, 2
  %1120 = icmp eq i32 %1119, 0
  %1121 = icmp slt i32 %1114, 10
  %1122 = and i1 %1120, %1121
  %1123 = xor i1 %1120, %1121
  %1124 = or i1 %1122, %1123
  %1125 = or i1 %1120, %1121
  br i1 %1124, label %1126, label %1498

; <label>:1126:                                   ; preds = %1112, %1498
  store i32 %1111, i32* %42, align 4
  %1127 = load i32, i32* @x.19
  %1128 = load i32, i32* @y.20
  %1129 = sub i32 0, 1
  %1130 = add i32 %1127, %1129
  %1131 = sub i32 %1127, 1
  %1132 = mul i32 %1127, %1130
  %1133 = urem i32 %1132, 2
  %1134 = icmp eq i32 %1133, 0
  %1135 = icmp slt i32 %1128, 10
  %1136 = and i1 %1134, %1135
  %1137 = xor i1 %1134, %1135
  %1138 = or i1 %1136, %1137
  %1139 = or i1 %1134, %1135
  br i1 %1138, label %1140, label %1498

; <label>:1140:                                   ; preds = %1126
  %1141 = invoke dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %39, i32* dereferenceable(4) %42)
          to label %1142 unwind label %899

; <label>:1142:                                   ; preds = %1140
  %1143 = load i32, i32* %1141, align 4
  store i32 %1143, i32* %39, align 4
  br label %1144

; <label>:1144:                                   ; preds = %1142, %1107
  %1145 = load i32, i32* %41, align 4
  %1146 = add i32 %1145, 816675420
  %1147 = add i32 %1146, 1
  %1148 = sub i32 %1147, 816675420
  %1149 = add nsw i32 %1145, 1
  store i32 %1148, i32* %41, align 4
  br label %1093

; <label>:1150:                                   ; preds = %1093
  %1151 = load i32, i32* @x.19
  %1152 = load i32, i32* @y.20
  %1153 = sub i32 %1151, -1175895229
  %1154 = sub i32 %1153, 1
  %1155 = add i32 %1154, -1175895229
  %1156 = sub i32 %1151, 1
  %1157 = mul i32 %1151, %1155
  %1158 = urem i32 %1157, 2
  %1159 = icmp eq i32 %1158, 0
  %1160 = icmp slt i32 %1152, 10
  %1161 = xor i1 %1159, true
  %1162 = xor i1 %1160, true
  %1163 = xor i1 true, true
  %1164 = and i1 %1161, true
  %1165 = and i1 %1159, %1163
  %1166 = and i1 %1162, true
  %1167 = and i1 %1160, %1163
  %1168 = or i1 %1164, %1165
  %1169 = or i1 %1166, %1167
  %1170 = xor i1 %1168, %1169
  %1171 = or i1 %1161, %1162
  %1172 = xor i1 %1171, true
  %1173 = or i1 true, %1163
  %1174 = and i1 %1172, %1173
  %1175 = or i1 %1170, %1174
  %1176 = or i1 %1159, %1160
  br i1 %1175, label %1177, label %1499

; <label>:1177:                                   ; preds = %1150, %1499
  %1178 = load i32, i32* @x.19
  %1179 = load i32, i32* @y.20
  %1180 = add i32 %1178, 767916817
  %1181 = sub i32 %1180, 1
  %1182 = sub i32 %1181, 767916817
  %1183 = sub i32 %1178, 1
  %1184 = mul i32 %1178, %1182
  %1185 = urem i32 %1184, 2
  %1186 = icmp eq i32 %1185, 0
  %1187 = icmp slt i32 %1179, 10
  %1188 = and i1 %1186, %1187
  %1189 = xor i1 %1186, %1187
  %1190 = or i1 %1188, %1189
  %1191 = or i1 %1186, %1187
  br i1 %1190, label %1192, label %1499

; <label>:1192:                                   ; preds = %1177
  br label %1193

; <label>:1193:                                   ; preds = %1192
  %1194 = load i32, i32* %40, align 4
  %1195 = sub i32 0, %1194
  %1196 = sub i32 0, 1
  %1197 = add i32 %1195, %1196
  %1198 = sub i32 0, %1197
  %1199 = add nsw i32 %1194, 1
  store i32 %1198, i32* %40, align 4
  br label %1047

; <label>:1200:                                   ; preds = %1047
  %1201 = load i32, i32* %39, align 4
  %1202 = sub i32 %1201, -746598012
  %1203 = add i32 %1202, 1
  %1204 = add i32 %1203, -746598012
  %1205 = add nsw i32 %1201, 1
  %1206 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* @_ZSt4cout, i32 %1204)
          to label %1207 unwind label %899

; <label>:1207:                                   ; preds = %1200
  %1208 = load i32, i32* @x.19
  %1209 = load i32, i32* @y.20
  %1210 = sub i32 %1208, 198441987
  %1211 = sub i32 %1210, 1
  %1212 = add i32 %1211, 198441987
  %1213 = sub i32 %1208, 1
  %1214 = mul i32 %1208, %1212
  %1215 = urem i32 %1214, 2
  %1216 = icmp eq i32 %1215, 0
  %1217 = icmp slt i32 %1209, 10
  %1218 = xor i1 %1216, true
  %1219 = xor i1 %1217, true
  %1220 = xor i1 true, true
  %1221 = and i1 %1218, true
  %1222 = and i1 %1216, %1220
  %1223 = and i1 %1219, true
  %1224 = and i1 %1217, %1220
  %1225 = or i1 %1221, %1222
  %1226 = or i1 %1223, %1224
  %1227 = xor i1 %1225, %1226
  %1228 = or i1 %1218, %1219
  %1229 = xor i1 %1228, true
  %1230 = or i1 true, %1220
  %1231 = and i1 %1229, %1230
  %1232 = or i1 %1227, %1231
  %1233 = or i1 %1216, %1217
  br i1 %1232, label %1234, label %1500

; <label>:1234:                                   ; preds = %1207, %1500
  %1235 = load i32, i32* @x.19
  %1236 = load i32, i32* @y.20
  %1237 = sub i32 %1235, 1138418002
  %1238 = sub i32 %1237, 1
  %1239 = add i32 %1238, 1138418002
  %1240 = sub i32 %1235, 1
  %1241 = mul i32 %1235, %1239
  %1242 = urem i32 %1241, 2
  %1243 = icmp eq i32 %1242, 0
  %1244 = icmp slt i32 %1236, 10
  %1245 = xor i1 %1243, true
  %1246 = xor i1 %1244, true
  %1247 = xor i1 false, true
  %1248 = and i1 %1245, false
  %1249 = and i1 %1243, %1247
  %1250 = and i1 %1246, false
  %1251 = and i1 %1244, %1247
  %1252 = or i1 %1248, %1249
  %1253 = or i1 %1250, %1251
  %1254 = xor i1 %1252, %1253
  %1255 = or i1 %1245, %1246
  %1256 = xor i1 %1255, true
  %1257 = or i1 false, %1247
  %1258 = and i1 %1256, %1257
  %1259 = or i1 %1254, %1258
  %1260 = or i1 %1243, %1244
  br i1 %1259, label %1261, label %1500

; <label>:1261:                                   ; preds = %1234
  %1262 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %1206, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %1263 unwind label %899

; <label>:1263:                                   ; preds = %1261
  %1264 = load i32, i32* @x.19
  %1265 = load i32, i32* @y.20
  %1266 = sub i32 %1264, 1816804666
  %1267 = sub i32 %1266, 1
  %1268 = add i32 %1267, 1816804666
  %1269 = sub i32 %1264, 1
  %1270 = mul i32 %1264, %1268
  %1271 = urem i32 %1270, 2
  %1272 = icmp eq i32 %1271, 0
  %1273 = icmp slt i32 %1265, 10
  %1274 = and i1 %1272, %1273
  %1275 = xor i1 %1272, %1273
  %1276 = or i1 %1274, %1275
  %1277 = or i1 %1272, %1273
  br i1 %1276, label %1278, label %1501

; <label>:1278:                                   ; preds = %1263, %1501
  call void @_ZNSt6vectorIZ4mainE9DirectionSaIS0_EED2Ev(%"class.std::vector.27"* %25) #3
  call void @_ZNSt5queueIZ4mainE5PointSt5dequeIS0_SaIS0_EEED2Ev(%"class.std::queue.19"* %21) #3
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.11"* %14) #3
  call void @_ZNSt6vectorIS_IcSaIcEESaIS1_EED2Ev(%"class.std::vector"* %5) #3
  %1279 = load i32, i32* %1, align 4
  %1280 = load i32, i32* @x.19
  %1281 = load i32, i32* @y.20
  %1282 = sub i32 %1280, 1710870410
  %1283 = sub i32 %1282, 1
  %1284 = add i32 %1283, 1710870410
  %1285 = sub i32 %1280, 1
  %1286 = mul i32 %1280, %1284
  %1287 = urem i32 %1286, 2
  %1288 = icmp eq i32 %1287, 0
  %1289 = icmp slt i32 %1281, 10
  %1290 = xor i1 %1288, true
  %1291 = xor i1 %1289, true
  %1292 = xor i1 true, true
  %1293 = and i1 %1290, true
  %1294 = and i1 %1288, %1292
  %1295 = and i1 %1291, true
  %1296 = and i1 %1289, %1292
  %1297 = or i1 %1293, %1294
  %1298 = or i1 %1295, %1296
  %1299 = xor i1 %1297, %1298
  %1300 = or i1 %1290, %1291
  %1301 = xor i1 %1300, true
  %1302 = or i1 true, %1292
  %1303 = and i1 %1301, %1302
  %1304 = or i1 %1299, %1303
  %1305 = or i1 %1288, %1289
  br i1 %1304, label %1306, label %1501

; <label>:1306:                                   ; preds = %1278
  ret i32 %1279

; <label>:1307:                                   ; preds = %943, %898, %840
  call void @_ZNSt5queueIZ4mainE5PointSt5dequeIS0_SaIS0_EEED2Ev(%"class.std::queue.19"* %21) #3
  br label %1308

; <label>:1308:                                   ; preds = %1307, %792, %788
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.11"* %14) #3
  br label %1309

; <label>:1309:                                   ; preds = %1308, %787, %309
  %1310 = load i32, i32* @x.19
  %1311 = load i32, i32* @y.20
  %1312 = sub i32 %1310, 1726285099
  %1313 = sub i32 %1312, 1
  %1314 = add i32 %1313, 1726285099
  %1315 = sub i32 %1310, 1
  %1316 = mul i32 %1310, %1314
  %1317 = urem i32 %1316, 2
  %1318 = icmp eq i32 %1317, 0
  %1319 = icmp slt i32 %1311, 10
  %1320 = xor i1 %1318, true
  %1321 = xor i1 %1319, true
  %1322 = xor i1 false, true
  %1323 = and i1 %1320, false
  %1324 = and i1 %1318, %1322
  %1325 = and i1 %1321, false
  %1326 = and i1 %1319, %1322
  %1327 = or i1 %1323, %1324
  %1328 = or i1 %1325, %1326
  %1329 = xor i1 %1327, %1328
  %1330 = or i1 %1320, %1321
  %1331 = xor i1 %1330, true
  %1332 = or i1 false, %1322
  %1333 = and i1 %1331, %1332
  %1334 = or i1 %1329, %1333
  %1335 = or i1 %1318, %1319
  br i1 %1334, label %1336, label %1503

; <label>:1336:                                   ; preds = %1309, %1503
  call void @_ZNSt6vectorIS_IcSaIcEESaIS1_EED2Ev(%"class.std::vector"* %5) #3
  %1337 = load i32, i32* @x.19
  %1338 = load i32, i32* @y.20
  %1339 = add i32 %1337, -1950163272
  %1340 = sub i32 %1339, 1
  %1341 = sub i32 %1340, -1950163272
  %1342 = sub i32 %1337, 1
  %1343 = mul i32 %1337, %1341
  %1344 = urem i32 %1343, 2
  %1345 = icmp eq i32 %1344, 0
  %1346 = icmp slt i32 %1338, 10
  %1347 = and i1 %1345, %1346
  %1348 = xor i1 %1345, %1346
  %1349 = or i1 %1347, %1348
  %1350 = or i1 %1345, %1346
  br i1 %1349, label %1351, label %1503

; <label>:1351:                                   ; preds = %1336
  br label %1352

; <label>:1352:                                   ; preds = %1351, %308
  %1353 = load i32, i32* @x.19
  %1354 = load i32, i32* @y.20
  %1355 = sub i32 %1353, -1433691339
  %1356 = sub i32 %1355, 1
  %1357 = add i32 %1356, -1433691339
  %1358 = sub i32 %1353, 1
  %1359 = mul i32 %1353, %1357
  %1360 = urem i32 %1359, 2
  %1361 = icmp eq i32 %1360, 0
  %1362 = icmp slt i32 %1354, 10
  %1363 = and i1 %1361, %1362
  %1364 = xor i1 %1361, %1362
  %1365 = or i1 %1363, %1364
  %1366 = or i1 %1361, %1362
  br i1 %1365, label %1367, label %1504

; <label>:1367:                                   ; preds = %1352, %1504
  %1368 = load i8*, i8** %9, align 8
  %1369 = load i32, i32* %10, align 4
  %1370 = insertvalue { i8*, i32 } undef, i8* %1368, 0
  %1371 = insertvalue { i8*, i32 } %1370, i32 %1369, 1
  %1372 = load i32, i32* @x.19
  %1373 = load i32, i32* @y.20
  %1374 = sub i32 0, 1
  %1375 = add i32 %1372, %1374
  %1376 = sub i32 %1372, 1
  %1377 = mul i32 %1372, %1375
  %1378 = urem i32 %1377, 2
  %1379 = icmp eq i32 %1378, 0
  %1380 = icmp slt i32 %1373, 10
  %1381 = xor i1 %1379, true
  %1382 = xor i1 %1380, true
  %1383 = xor i1 false, true
  %1384 = and i1 %1381, false
  %1385 = and i1 %1379, %1383
  %1386 = and i1 %1382, false
  %1387 = and i1 %1380, %1383
  %1388 = or i1 %1384, %1385
  %1389 = or i1 %1386, %1387
  %1390 = xor i1 %1388, %1389
  %1391 = or i1 %1381, %1382
  %1392 = xor i1 %1391, true
  %1393 = or i1 false, %1383
  %1394 = and i1 %1392, %1393
  %1395 = or i1 %1390, %1394
  %1396 = or i1 %1379, %1380
  br i1 %1395, label %1397, label %1504

; <label>:1397:                                   ; preds = %1367
  resume { i8*, i32 } %1371

; <label>:1398:                                   ; preds = %78, %51
  call void @_ZNSaISt6vectorIcSaIcEEED2Ev(%"class.std::allocator.3"* %11) #3
  call void @_ZNSt6vectorIcSaIcEED2Ev(%"class.std::vector.6"* %6) #3
  call void @_ZNSaIcED1Ev(%"class.std::allocator.8"* %8) #3
  store i32 0, i32* %12, align 4
  br label %78

; <label>:1399:                                   ; preds = %129, %103
  %1400 = load i32, i32* %12, align 4
  %1401 = sext i32 %1400 to i64
  %1402 = call dereferenceable(24) %"class.std::vector.6"* @_ZNSt6vectorIS_IcSaIcEESaIS1_EEixEm(%"class.std::vector"* %5, i64 %1401) #3
  %1403 = load i32, i32* %13, align 4
  %1404 = sext i32 %1403 to i64
  %1405 = call dereferenceable(1) i8* @_ZNSt6vectorIcSaIcEEixEm(%"class.std::vector.6"* %1402, i64 %1404) #3
  br label %129

; <label>:1406:                                   ; preds = %166, %151
  br label %166

; <label>:1407:                                   ; preds = %208, %181
  %1408 = load i32, i32* %13, align 4
  %1409 = sub i32 0, 1
  %1410 = add i32 %1408, %1409
  %1411 = sub i32 %1408, 1
  %1412 = mul i32 %1410, 1
  %1413 = shl i32 %1408, 1
  %1414 = sub i32 0, %1408
  %1415 = sub i32 0, 1
  %1416 = add i32 %1414, %1415
  %1417 = sub i32 0, %1416
  %1418 = add nsw i32 %1408, 1
  store i32 %1417, i32* %13, align 4
  br label %208

; <label>:1419:                                   ; preds = %256, %241
  %1420 = landingpad { i8*, i32 }
          cleanup
  %1421 = extractvalue { i8*, i32 } %1420, 0
  store i8* %1421, i8** %9, align 8
  %1422 = extractvalue { i8*, i32 } %1420, 1
  store i32 %1422, i32* %10, align 4
  br label %256

; <label>:1423:                                   ; preds = %289, %275
  %1424 = landingpad { i8*, i32 }
          cleanup
  %1425 = extractvalue { i8*, i32 } %1424, 0
  store i8* %1425, i8** %9, align 8
  %1426 = extractvalue { i8*, i32 } %1424, 1
  store i32 %1426, i32* %10, align 4
  call void @_ZNSaISt6vectorIcSaIcEEED2Ev(%"class.std::allocator.3"* %11) #3
  call void @_ZNSt6vectorIcSaIcEED2Ev(%"class.std::vector.6"* %6) #3
  br label %289

; <label>:1427:                                   ; preds = %340, %313
  br label %340

; <label>:1428:                                   ; preds = %383, %356
  %1429 = load i32, i32* %12, align 4
  %1430 = add i32 %1429, -1592097064
  %1431 = sub i32 %1430, 1
  %1432 = sub i32 %1431, -1592097064
  %1433 = sub i32 %1429, 1
  %1434 = mul i32 %1432, 1
  %1435 = shl i32 %1429, 1
  %1436 = sub i32 0, 1
  %1437 = sub i32 %1429, %1436
  %1438 = add nsw i32 %1429, 1
  store i32 %1437, i32* %12, align 4
  br label %383

; <label>:1439:                                   ; preds = %417, %403
  %1440 = load i32, i32* %2, align 4
  %1441 = sext i32 %1440 to i64
  %1442 = load i32, i32* %3, align 4
  %1443 = sext i32 %1442 to i64
  store i32 214748364, i32* %16, align 4
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.0"* %17) #3
  br label %417

; <label>:1444:                                   ; preds = %477, %450
  call void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.13"* %18) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.16"* %15) #3
  call void @_ZNSaIiED2Ev(%"class.std::allocator.0"* %17) #3
  %1445 = getelementptr inbounds %class.anon, %class.anon* %20, i32 0, i32 0
  store i32* %2, i32** %1445, align 8
  %1446 = getelementptr inbounds %class.anon, %class.anon* %20, i32 0, i32 1
  store i32* %3, i32** %1446, align 8
  %1447 = getelementptr inbounds %class.anon, %class.anon* %20, i32 0, i32 2
  store %"class.std::vector"* %5, %"class.std::vector"** %1447, align 8
  br label %477

; <label>:1448:                                   ; preds = %545, %518
  %1449 = getelementptr inbounds %class.anon.26, %class.anon.26* %24, i32 0, i32 0
  store i32* %3, i32** %1449, align 8
  %1450 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %26, i32 0, i32 0
  store %struct.Direction* getelementptr inbounds ([4 x %struct.Direction], [4 x %struct.Direction]* @.ref.tmp, i64 0, i64 0), %struct.Direction** %1450, align 8
  %1451 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %26, i32 0, i32 1
  store i64 4, i64* %1451, align 8
  call void @_ZNSaIZ4mainE9DirectionEC2Ev(%"class.std::allocator.29"* %27) #3
  %1452 = bitcast %"class.std::initializer_list"* %26 to { %struct.Direction*, i64 }*
  %1453 = getelementptr inbounds { %struct.Direction*, i64 }, { %struct.Direction*, i64 }* %1452, i32 0, i32 0
  %1454 = load %struct.Direction*, %struct.Direction** %1453, align 8
  %1455 = getelementptr inbounds { %struct.Direction*, i64 }, { %struct.Direction*, i64 }* %1452, i32 0, i32 1
  %1456 = load i64, i64* %1455, align 8
  br label %545

; <label>:1457:                                   ; preds = %613, %587
  br label %613

; <label>:1458:                                   ; preds = %658, %632
  store %"class.std::vector.27"* %25, %"class.std::vector.27"** %30, align 8
  %1459 = load %"class.std::vector.27"*, %"class.std::vector.27"** %30, align 8
  %1460 = call %struct.Direction* @_ZNSt6vectorIZ4mainE9DirectionSaIS0_EE5beginEv(%"class.std::vector.27"* %1459) #3
  %1461 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %31, i32 0, i32 0
  store %struct.Direction* %1460, %struct.Direction** %1461, align 8
  %1462 = load %"class.std::vector.27"*, %"class.std::vector.27"** %30, align 8
  %1463 = call %struct.Direction* @_ZNSt6vectorIZ4mainE9DirectionSaIS0_EE3endEv(%"class.std::vector.27"* %1462) #3
  %1464 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %32, i32 0, i32 0
  store %struct.Direction* %1463, %struct.Direction** %1464, align 8
  br label %658

; <label>:1465:                                   ; preds = %746, %731
  %1466 = load i32, i32* %36, align 4
  %1467 = load i32, i32* %35, align 4
  %1468 = sext i32 %1467 to i64
  %1469 = call dereferenceable(24) %"class.std::vector.16"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.11"* %14, i64 %1468) #3
  %1470 = load i32, i32* %34, align 4
  %1471 = sext i32 %1470 to i64
  %1472 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.16"* %1469, i64 %1471) #3
  store i32 %1466, i32* %1472, align 4
  %1473 = getelementptr inbounds %struct.Point, %struct.Point* %37, i32 0, i32 0
  %1474 = load i32, i32* %35, align 4
  %1475 = sext i32 %1474 to i64
  store i64 %1475, i64* %1473, align 8
  %1476 = getelementptr inbounds %struct.Point, %struct.Point* %37, i32 0, i32 1
  %1477 = load i32, i32* %34, align 4
  %1478 = sext i32 %1477 to i64
  store i64 %1478, i64* %1476, align 8
  %1479 = getelementptr inbounds %struct.Point, %struct.Point* %37, i32 0, i32 2
  %1480 = load i32, i32* %36, align 4
  %1481 = sext i32 %1480 to i64
  store i64 %1481, i64* %1479, align 8
  br label %746

; <label>:1482:                                   ; preds = %810, %796
  %1483 = landingpad { i8*, i32 }
          cleanup
  %1484 = extractvalue { i8*, i32 } %1483, 0
  store i8* %1484, i8** %9, align 8
  %1485 = extractvalue { i8*, i32 } %1483, 1
  store i32 %1485, i32* %10, align 4
  br label %810

; <label>:1486:                                   ; preds = %868, %841
  %1487 = landingpad { i8*, i32 }
          cleanup
  %1488 = extractvalue { i8*, i32 } %1487, 0
  store i8* %1488, i8** %9, align 8
  %1489 = extractvalue { i8*, i32 } %1487, 1
  store i32 %1489, i32* %10, align 4
  call void @_ZNSaIZ4mainE9DirectionED2Ev(%"class.std::allocator.29"* %27) #3
  br label %868

; <label>:1490:                                   ; preds = %913, %899
  %1491 = landingpad { i8*, i32 }
          cleanup
  %1492 = extractvalue { i8*, i32 } %1491, 0
  store i8* %1492, i8** %9, align 8
  %1493 = extractvalue { i8*, i32 } %1491, 1
  store i32 %1493, i32* %10, align 4
  call void @_ZNSt6vectorIZ4mainE9DirectionSaIS0_EED2Ev(%"class.std::vector.27"* %25) #3
  br label %913

; <label>:1494:                                   ; preds = %972, %945
  %1495 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPZ4mainE9DirectionSt6vectorIS1_SaIS1_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %31) #3
  br label %972

; <label>:1496:                                   ; preds = %1016, %1001
  br label %1016

; <label>:1497:                                   ; preds = %1066, %1051
  store i32 0, i32* %41, align 4
  br label %1066

; <label>:1498:                                   ; preds = %1126, %1112
  store i32 %1111, i32* %42, align 4
  br label %1126

; <label>:1499:                                   ; preds = %1177, %1150
  br label %1177

; <label>:1500:                                   ; preds = %1234, %1207
  br label %1234

; <label>:1501:                                   ; preds = %1278, %1263
  call void @_ZNSt6vectorIZ4mainE9DirectionSaIS0_EED2Ev(%"class.std::vector.27"* %25) #3
  call void @_ZNSt5queueIZ4mainE5PointSt5dequeIS0_SaIS0_EEED2Ev(%"class.std::queue.19"* %21) #3
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.11"* %14) #3
  call void @_ZNSt6vectorIS_IcSaIcEESaIS1_EED2Ev(%"class.std::vector"* %5) #3
  %1502 = load i32, i32* %1, align 4
  br label %1278

; <label>:1503:                                   ; preds = %1336, %1309
  call void @_ZNSt6vectorIS_IcSaIcEESaIS1_EED2Ev(%"class.std::vector"* %5) #3
  br label %1336

; <label>:1504:                                   ; preds = %1367, %1352
  %1505 = load i8*, i8** %9, align 8
  %1506 = load i32, i32* %10, align 4
  %1507 = insertvalue { i8*, i32 } undef, i8* %1505, 0
  %1508 = insertvalue { i8*, i32 } %1507, i32 %1506, 1
  br label %1367
}

; Function Attrs: nounwind
declare void @_ZNSaIcEC1Ev(%"class.std::allocator.8"*) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIcSaIcEEC2EmRKcRKS0_(%"class.std::vector.6"*, i64, i8* dereferenceable(1), %"class.std::allocator.8"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.21
  %6 = load i32, i32* @y.22
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %6, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 true, true
  %17 = and i1 %14, true
  %18 = and i1 %12, %16
  %19 = and i1 %15, true
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 true, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %123

; <label>:30:                                     ; preds = %4, %123
  %31 = alloca %"class.std::vector.6"*, align 8
  %32 = alloca i64, align 8
  %33 = alloca i8*, align 8
  %34 = alloca %"class.std::allocator.8"*, align 8
  %35 = alloca i8*
  %36 = alloca i32
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %31, align 8
  store i64 %1, i64* %32, align 8
  store i8* %2, i8** %33, align 8
  store %"class.std::allocator.8"* %3, %"class.std::allocator.8"** %34, align 8
  %37 = load %"class.std::vector.6"*, %"class.std::vector.6"** %31, align 8
  %38 = bitcast %"class.std::vector.6"* %37 to %"struct.std::_Vector_base.7"*
  %39 = load i64, i64* %32, align 8
  %40 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %34, align 8
  call void @_ZNSt12_Vector_baseIcSaIcEEC2EmRKS0_(%"struct.std::_Vector_base.7"* %38, i64 %39, %"class.std::allocator.8"* dereferenceable(1) %40)
  %41 = load i64, i64* %32, align 8
  %42 = load i8*, i8** %33, align 8
  %43 = load i32, i32* @x.21
  %44 = load i32, i32* @y.22
  %45 = sub i32 %43, -996227689
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -996227689
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  br i1 %55, label %57, label %123

; <label>:57:                                     ; preds = %30
  invoke void @_ZNSt6vectorIcSaIcEE18_M_fill_initializeEmRKc(%"class.std::vector.6"* %37, i64 %41, i8* dereferenceable(1) %42)
          to label %58 unwind label %59

; <label>:58:                                     ; preds = %57
  ret void

; <label>:59:                                     ; preds = %57
  %60 = load i32, i32* @x.21
  %61 = load i32, i32* @y.22
  %62 = sub i32 %60, -1524091403
  %63 = sub i32 %62, 1
  %64 = add i32 %63, -1524091403
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 false, true
  %73 = and i1 %70, false
  %74 = and i1 %68, %72
  %75 = and i1 %71, false
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 false, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  br i1 %84, label %86, label %136

; <label>:86:                                     ; preds = %59, %136
  %87 = landingpad { i8*, i32 }
          cleanup
  %88 = extractvalue { i8*, i32 } %87, 0
  store i8* %88, i8** %35, align 8
  %89 = extractvalue { i8*, i32 } %87, 1
  store i32 %89, i32* %36, align 4
  %90 = bitcast %"class.std::vector.6"* %37 to %"struct.std::_Vector_base.7"*
  call void @_ZNSt12_Vector_baseIcSaIcEED2Ev(%"struct.std::_Vector_base.7"* %90) #3
  %91 = load i32, i32* @x.21
  %92 = load i32, i32* @y.22
  %93 = add i32 %91, -176611958
  %94 = sub i32 %93, 1
  %95 = sub i32 %94, -176611958
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = xor i1 %99, true
  %102 = xor i1 %100, true
  %103 = xor i1 true, true
  %104 = and i1 %101, true
  %105 = and i1 %99, %103
  %106 = and i1 %102, true
  %107 = and i1 %100, %103
  %108 = or i1 %104, %105
  %109 = or i1 %106, %107
  %110 = xor i1 %108, %109
  %111 = or i1 %101, %102
  %112 = xor i1 %111, true
  %113 = or i1 true, %103
  %114 = and i1 %112, %113
  %115 = or i1 %110, %114
  %116 = or i1 %99, %100
  br i1 %115, label %117, label %136

; <label>:117:                                    ; preds = %86
  br label %118

; <label>:118:                                    ; preds = %117
  %119 = load i8*, i8** %35, align 8
  %120 = load i32, i32* %36, align 4
  %121 = insertvalue { i8*, i32 } undef, i8* %119, 0
  %122 = insertvalue { i8*, i32 } %121, i32 %120, 1
  resume { i8*, i32 } %122

; <label>:123:                                    ; preds = %30, %4
  %124 = alloca %"class.std::vector.6"*, align 8
  %125 = alloca i64, align 8
  %126 = alloca i8*, align 8
  %127 = alloca %"class.std::allocator.8"*, align 8
  %128 = alloca i8*
  %129 = alloca i32
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %124, align 8
  store i64 %1, i64* %125, align 8
  store i8* %2, i8** %126, align 8
  store %"class.std::allocator.8"* %3, %"class.std::allocator.8"** %127, align 8
  %130 = load %"class.std::vector.6"*, %"class.std::vector.6"** %124, align 8
  %131 = bitcast %"class.std::vector.6"* %130 to %"struct.std::_Vector_base.7"*
  %132 = load i64, i64* %125, align 8
  %133 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %127, align 8
  call void @_ZNSt12_Vector_baseIcSaIcEEC2EmRKS0_(%"struct.std::_Vector_base.7"* %131, i64 %132, %"class.std::allocator.8"* dereferenceable(1) %133)
  %134 = load i64, i64* %125, align 8
  %135 = load i8*, i8** %126, align 8
  br label %30

; <label>:136:                                    ; preds = %86, %59
  %137 = landingpad { i8*, i32 }
          cleanup
  %138 = extractvalue { i8*, i32 } %137, 0
  store i8* %138, i8** %35, align 8
  %139 = extractvalue { i8*, i32 } %137, 1
  store i32 %139, i32* %36, align 4
  %140 = bitcast %"class.std::vector.6"* %37 to %"struct.std::_Vector_base.7"*
  call void @_ZNSt12_Vector_baseIcSaIcEED2Ev(%"struct.std::_Vector_base.7"* %140) #3
  br label %86
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIcSaIcEEEC2Ev(%"class.std::allocator.3"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.3"*, align 8
  store %"class.std::allocator.3"* %0, %"class.std::allocator.3"** %2, align 8
  %3 = load %"class.std::allocator.3"*, %"class.std::allocator.3"** %2, align 8
  %4 = bitcast %"class.std::allocator.3"* %3 to %"class.__gnu_cxx::new_allocator.4"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEEC2Ev(%"class.__gnu_cxx::new_allocator.4"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IcSaIcEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector"*, i64, %"class.std::vector.6"* dereferenceable(24), %"class.std::allocator.3"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.25
  %6 = load i32, i32* @y.26
  %7 = sub i32 %5, -583609720
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -583609720
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %6, 10
  %15 = and i1 %13, %14
  %16 = xor i1 %13, %14
  %17 = or i1 %15, %16
  %18 = or i1 %13, %14
  br i1 %17, label %19, label %118

; <label>:19:                                     ; preds = %4, %118
  %20 = alloca %"class.std::vector"*, align 8
  %21 = alloca i64, align 8
  %22 = alloca %"class.std::vector.6"*, align 8
  %23 = alloca %"class.std::allocator.3"*, align 8
  %24 = alloca i8*
  %25 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %20, align 8
  store i64 %1, i64* %21, align 8
  store %"class.std::vector.6"* %2, %"class.std::vector.6"** %22, align 8
  store %"class.std::allocator.3"* %3, %"class.std::allocator.3"** %23, align 8
  %26 = load %"class.std::vector"*, %"class.std::vector"** %20, align 8
  %27 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %28 = load i64, i64* %21, align 8
  %29 = load %"class.std::allocator.3"*, %"class.std::allocator.3"** %23, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base"* %27, i64 %28, %"class.std::allocator.3"* dereferenceable(1) %29)
  %30 = load i64, i64* %21, align 8
  %31 = load %"class.std::vector.6"*, %"class.std::vector.6"** %22, align 8
  %32 = load i32, i32* @x.25
  %33 = load i32, i32* @y.26
  %34 = sub i32 %32, 1041391496
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 1041391496
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %118

; <label>:46:                                     ; preds = %19
  invoke void @_ZNSt6vectorIS_IcSaIcEESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector"* %26, i64 %30, %"class.std::vector.6"* dereferenceable(24) %31)
          to label %47 unwind label %78

; <label>:47:                                     ; preds = %46
  %48 = load i32, i32* @x.25
  %49 = load i32, i32* @y.26
  %50 = sub i32 %48, 1282630796
  %51 = sub i32 %50, 1
  %52 = add i32 %51, 1282630796
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  br i1 %60, label %62, label %131

; <label>:62:                                     ; preds = %47, %131
  %63 = load i32, i32* @x.25
  %64 = load i32, i32* @y.26
  %65 = add i32 %63, -616379045
  %66 = sub i32 %65, 1
  %67 = sub i32 %66, -616379045
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = and i1 %71, %72
  %74 = xor i1 %71, %72
  %75 = or i1 %73, %74
  %76 = or i1 %71, %72
  br i1 %75, label %77, label %131

; <label>:77:                                     ; preds = %62
  ret void

; <label>:78:                                     ; preds = %46
  %79 = load i32, i32* @x.25
  %80 = load i32, i32* @y.26
  %81 = sub i32 %79, 1397027519
  %82 = sub i32 %81, 1
  %83 = add i32 %82, 1397027519
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  br i1 %91, label %93, label %132

; <label>:93:                                     ; preds = %78, %132
  %94 = landingpad { i8*, i32 }
          cleanup
  %95 = extractvalue { i8*, i32 } %94, 0
  store i8* %95, i8** %24, align 8
  %96 = extractvalue { i8*, i32 } %94, 1
  store i32 %96, i32* %25, align 4
  %97 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EED2Ev(%"struct.std::_Vector_base"* %97) #3
  %98 = load i32, i32* @x.25
  %99 = load i32, i32* @y.26
  %100 = add i32 %98, 550711607
  %101 = sub i32 %100, 1
  %102 = sub i32 %101, 550711607
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = and i1 %106, %107
  %109 = xor i1 %106, %107
  %110 = or i1 %108, %109
  %111 = or i1 %106, %107
  br i1 %110, label %112, label %132

; <label>:112:                                    ; preds = %93
  br label %113

; <label>:113:                                    ; preds = %112
  %114 = load i8*, i8** %24, align 8
  %115 = load i32, i32* %25, align 4
  %116 = insertvalue { i8*, i32 } undef, i8* %114, 0
  %117 = insertvalue { i8*, i32 } %116, i32 %115, 1
  resume { i8*, i32 } %117

; <label>:118:                                    ; preds = %19, %4
  %119 = alloca %"class.std::vector"*, align 8
  %120 = alloca i64, align 8
  %121 = alloca %"class.std::vector.6"*, align 8
  %122 = alloca %"class.std::allocator.3"*, align 8
  %123 = alloca i8*
  %124 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %119, align 8
  store i64 %1, i64* %120, align 8
  store %"class.std::vector.6"* %2, %"class.std::vector.6"** %121, align 8
  store %"class.std::allocator.3"* %3, %"class.std::allocator.3"** %122, align 8
  %125 = load %"class.std::vector"*, %"class.std::vector"** %119, align 8
  %126 = bitcast %"class.std::vector"* %125 to %"struct.std::_Vector_base"*
  %127 = load i64, i64* %120, align 8
  %128 = load %"class.std::allocator.3"*, %"class.std::allocator.3"** %122, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base"* %126, i64 %127, %"class.std::allocator.3"* dereferenceable(1) %128)
  %129 = load i64, i64* %120, align 8
  %130 = load %"class.std::vector.6"*, %"class.std::vector.6"** %121, align 8
  br label %19

; <label>:131:                                    ; preds = %62, %47
  br label %62

; <label>:132:                                    ; preds = %93, %78
  %133 = landingpad { i8*, i32 }
          cleanup
  %134 = extractvalue { i8*, i32 } %133, 0
  store i8* %134, i8** %24, align 8
  %135 = extractvalue { i8*, i32 } %133, 1
  store i32 %135, i32* %25, align 4
  %136 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EED2Ev(%"struct.std::_Vector_base"* %136) #3
  br label %93
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIcSaIcEEED2Ev(%"class.std::allocator.3"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.27
  %5 = load i32, i32* @y.28
  %6 = add i32 %4, 1460440587
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1460440587
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -2104152240, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2104152240, label %18
    i32 -1445814408, label %38
    i32 1962789654, label %57
    i32 1727089830, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1445814408, i32 1727089830
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.3"*, align 8
  store %"class.std::allocator.3"* %0, %"class.std::allocator.3"** %39, align 8
  %40 = load %"class.std::allocator.3"*, %"class.std::allocator.3"** %39, align 8
  %41 = bitcast %"class.std::allocator.3"* %40 to %"class.__gnu_cxx::new_allocator.4"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEED2Ev(%"class.__gnu_cxx::new_allocator.4"* %41) #3
  %42 = load i32, i32* @x.27
  %43 = load i32, i32* @y.28
  %44 = sub i32 %42, 1514166817
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 1514166817
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 1962789654, i32 1727089830
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::allocator.3"*, align 8
  store %"class.std::allocator.3"* %0, %"class.std::allocator.3"** %59, align 8
  %60 = load %"class.std::allocator.3"*, %"class.std::allocator.3"** %59, align 8
  %61 = bitcast %"class.std::allocator.3"* %60 to %"class.__gnu_cxx::new_allocator.4"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEED2Ev(%"class.__gnu_cxx::new_allocator.4"* %61) #3
  store i32 -1445814408, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIcSaIcEED2Ev(%"class.std::vector.6"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.29
  %3 = load i32, i32* @y.30
  %4 = sub i32 %2, -2015458349
  %5 = sub i32 %4, 1
  %6 = add i32 %5, -2015458349
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %67

; <label>:16:                                     ; preds = %1, %67
  %17 = alloca %"class.std::vector.6"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %17, align 8
  %20 = load %"class.std::vector.6"*, %"class.std::vector.6"** %17, align 8
  %21 = bitcast %"class.std::vector.6"* %20 to %"struct.std::_Vector_base.7"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %21, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %22, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = bitcast %"class.std::vector.6"* %20 to %"struct.std::_Vector_base.7"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %26, i32 0, i32 1
  %28 = load i8*, i8** %27, align 8
  %29 = bitcast %"class.std::vector.6"* %20 to %"struct.std::_Vector_base.7"*
  %30 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %29) #3
  %31 = load i32, i32* @x.29
  %32 = load i32, i32* @y.30
  %33 = add i32 %31, -395625031
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -395625031
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  br i1 %55, label %57, label %67

; <label>:57:                                     ; preds = %16
  invoke void @_ZSt8_DestroyIPccEvT_S1_RSaIT0_E(i8* %24, i8* %28, %"class.std::allocator.8"* dereferenceable(1) %30)
          to label %58 unwind label %60

; <label>:58:                                     ; preds = %57
  %59 = bitcast %"class.std::vector.6"* %20 to %"struct.std::_Vector_base.7"*
  call void @_ZNSt12_Vector_baseIcSaIcEED2Ev(%"struct.std::_Vector_base.7"* %59) #3
  ret void

; <label>:60:                                     ; preds = %57
  %61 = landingpad { i8*, i32 }
          catch i8* null
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %18, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %19, align 4
  %64 = bitcast %"class.std::vector.6"* %20 to %"struct.std::_Vector_base.7"*
  call void @_ZNSt12_Vector_baseIcSaIcEED2Ev(%"struct.std::_Vector_base.7"* %64) #3
  br label %65

; <label>:65:                                     ; preds = %60
  %66 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %66) #13
  unreachable

; <label>:67:                                     ; preds = %16, %1
  %68 = alloca %"class.std::vector.6"*, align 8
  %69 = alloca i8*
  %70 = alloca i32
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %68, align 8
  %71 = load %"class.std::vector.6"*, %"class.std::vector.6"** %68, align 8
  %72 = bitcast %"class.std::vector.6"* %71 to %"struct.std::_Vector_base.7"*
  %73 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %72, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %73, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::vector.6"* %71 to %"struct.std::_Vector_base.7"*
  %77 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %77, i32 0, i32 1
  %79 = load i8*, i8** %78, align 8
  %80 = bitcast %"class.std::vector.6"* %71 to %"struct.std::_Vector_base.7"*
  %81 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %80) #3
  br label %16
}

; Function Attrs: nounwind
declare void @_ZNSaIcED1Ev(%"class.std::allocator.8"*) unnamed_addr #2

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.6"* @_ZNSt6vectorIS_IcSaIcEESaIS1_EEixEm(%"class.std::vector"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector.6"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.31
  %7 = load i32, i32* @y.32
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1422807707, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %75
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1422807707, label %19
    i32 -1141899824, label %27
    i32 -35416491, label %63
    i32 1516687132, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %75

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1141899824, i32 1516687132
  store i32 %26, i32* %15
  br label %75

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector"*, align 8
  %29 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load %"class.std::vector"*, %"class.std::vector"** %28, align 8
  %31 = bitcast %"class.std::vector"* %30 to %"struct.std::_Vector_base"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %32, i32 0, i32 0
  %34 = load %"class.std::vector.6"*, %"class.std::vector.6"** %33, align 8
  %35 = load i64, i64* %29, align 8
  %36 = getelementptr inbounds %"class.std::vector.6", %"class.std::vector.6"* %34, i64 %35
  store %"class.std::vector.6"* %36, %"class.std::vector.6"** %3
  %37 = load i32, i32* @x.31
  %38 = load i32, i32* @y.32
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 -35416491, i32 1516687132
  store i32 %62, i32* %15
  br label %75

; <label>:63:                                     ; preds = %16
  %64 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %3
  ret %"class.std::vector.6"* %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"class.std::vector"*, align 8
  %67 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %66, align 8
  store i64 %1, i64* %67, align 8
  %68 = load %"class.std::vector"*, %"class.std::vector"** %66, align 8
  %69 = bitcast %"class.std::vector"* %68 to %"struct.std::_Vector_base"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %69, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %70, i32 0, i32 0
  %72 = load %"class.std::vector.6"*, %"class.std::vector.6"** %71, align 8
  %73 = load i64, i64* %67, align 8
  %74 = getelementptr inbounds %"class.std::vector.6", %"class.std::vector.6"* %72, i64 %73
  store i32 -1141899824, i32* %15
  br label %75

; <label>:75:                                     ; preds = %65, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) i8* @_ZNSt6vectorIcSaIcEEixEm(%"class.std::vector.6"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector.6"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.6"*, %"class.std::vector.6"** %3, align 8
  %6 = bitcast %"class.std::vector.6"* %5 to %"struct.std::_Vector_base.7"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds i8, i8* %9, i64 %10
  ret i8* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2Ev(%"class.std::allocator.0"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %2, align 8
  %3 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %2, align 8
  %4 = bitcast %"class.std::allocator.0"* %3 to %"class.__gnu_cxx::new_allocator.1"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.1"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector.16"*, i64, i32* dereferenceable(4), %"class.std::allocator.0"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.37
  %6 = load i32, i32* @y.38
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %6, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 true, true
  %17 = and i1 %14, true
  %18 = and i1 %12, %16
  %19 = and i1 %15, true
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 true, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %111

; <label>:30:                                     ; preds = %4, %111
  %31 = alloca %"class.std::vector.16"*, align 8
  %32 = alloca i64, align 8
  %33 = alloca i32*, align 8
  %34 = alloca %"class.std::allocator.0"*, align 8
  %35 = alloca i8*
  %36 = alloca i32
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %31, align 8
  store i64 %1, i64* %32, align 8
  store i32* %2, i32** %33, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %34, align 8
  %37 = load %"class.std::vector.16"*, %"class.std::vector.16"** %31, align 8
  %38 = bitcast %"class.std::vector.16"* %37 to %"struct.std::_Vector_base.17"*
  %39 = load i64, i64* %32, align 8
  %40 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %34, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base.17"* %38, i64 %39, %"class.std::allocator.0"* dereferenceable(1) %40)
  %41 = load i64, i64* %32, align 8
  %42 = load i32*, i32** %33, align 8
  %43 = load i32, i32* @x.37
  %44 = load i32, i32* @y.38
  %45 = add i32 %43, -825923662
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -825923662
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  br i1 %67, label %69, label %111

; <label>:69:                                     ; preds = %30
  invoke void @_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi(%"class.std::vector.16"* %37, i64 %41, i32* dereferenceable(4) %42)
          to label %70 unwind label %71

; <label>:70:                                     ; preds = %69
  ret void

; <label>:71:                                     ; preds = %69
  %72 = load i32, i32* @x.37
  %73 = load i32, i32* @y.38
  %74 = add i32 %72, -1163187949
  %75 = sub i32 %74, 1
  %76 = sub i32 %75, -1163187949
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  br i1 %84, label %86, label %124

; <label>:86:                                     ; preds = %71, %124
  %87 = landingpad { i8*, i32 }
          cleanup
  %88 = extractvalue { i8*, i32 } %87, 0
  store i8* %88, i8** %35, align 8
  %89 = extractvalue { i8*, i32 } %87, 1
  store i32 %89, i32* %36, align 4
  %90 = bitcast %"class.std::vector.16"* %37 to %"struct.std::_Vector_base.17"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.17"* %90) #3
  %91 = load i32, i32* @x.37
  %92 = load i32, i32* @y.38
  %93 = sub i32 %91, 6682391
  %94 = sub i32 %93, 1
  %95 = add i32 %94, 6682391
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = and i1 %99, %100
  %102 = xor i1 %99, %100
  %103 = or i1 %101, %102
  %104 = or i1 %99, %100
  br i1 %103, label %105, label %124

; <label>:105:                                    ; preds = %86
  br label %106

; <label>:106:                                    ; preds = %105
  %107 = load i8*, i8** %35, align 8
  %108 = load i32, i32* %36, align 4
  %109 = insertvalue { i8*, i32 } undef, i8* %107, 0
  %110 = insertvalue { i8*, i32 } %109, i32 %108, 1
  resume { i8*, i32 } %110

; <label>:111:                                    ; preds = %30, %4
  %112 = alloca %"class.std::vector.16"*, align 8
  %113 = alloca i64, align 8
  %114 = alloca i32*, align 8
  %115 = alloca %"class.std::allocator.0"*, align 8
  %116 = alloca i8*
  %117 = alloca i32
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %112, align 8
  store i64 %1, i64* %113, align 8
  store i32* %2, i32** %114, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %115, align 8
  %118 = load %"class.std::vector.16"*, %"class.std::vector.16"** %112, align 8
  %119 = bitcast %"class.std::vector.16"* %118 to %"struct.std::_Vector_base.17"*
  %120 = load i64, i64* %113, align 8
  %121 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %115, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base.17"* %119, i64 %120, %"class.std::allocator.0"* dereferenceable(1) %121)
  %122 = load i64, i64* %113, align 8
  %123 = load i32*, i32** %114, align 8
  br label %30

; <label>:124:                                    ; preds = %86, %71
  %125 = landingpad { i8*, i32 }
          cleanup
  %126 = extractvalue { i8*, i32 } %125, 0
  store i8* %126, i8** %35, align 8
  %127 = extractvalue { i8*, i32 } %125, 1
  store i32 %127, i32* %36, align 4
  %128 = bitcast %"class.std::vector.16"* %37 to %"struct.std::_Vector_base.17"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.17"* %128) #3
  br label %86
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIiSaIiEEEC2Ev(%"class.std::allocator.13"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.39
  %5 = load i32, i32* @y.40
  %6 = sub i32 %4, -420289507
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -420289507
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 215227978, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %50
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 215227978, label %18
    i32 346467233, label %26
    i32 767146941, label %45
    i32 -1542903067, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %50

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 346467233, i32 -1542903067
  store i32 %25, i32* %14
  br label %50

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.13"*, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %27, align 8
  %28 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %27, align 8
  %29 = bitcast %"class.std::allocator.13"* %28 to %"class.__gnu_cxx::new_allocator.14"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2Ev(%"class.__gnu_cxx::new_allocator.14"* %29) #3
  %30 = load i32, i32* @x.39
  %31 = load i32, i32* @y.40
  %32 = sub i32 %30, -305224812
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -305224812
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 767146941, i32 -1542903067
  store i32 %44, i32* %14
  br label %50

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca %"class.std::allocator.13"*, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %47, align 8
  %48 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %47, align 8
  %49 = bitcast %"class.std::allocator.13"* %48 to %"class.__gnu_cxx::new_allocator.14"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2Ev(%"class.__gnu_cxx::new_allocator.14"* %49) #3
  store i32 346467233, i32* %14
  br label %50

; <label>:50:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2EmRKS1_RKS2_(%"class.std::vector.11"*, i64, %"class.std::vector.16"* dereferenceable(24), %"class.std::allocator.13"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.11"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector.16"*, align 8
  %8 = alloca %"class.std::allocator.13"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector.16"* %2, %"class.std::vector.16"** %7, align 8
  store %"class.std::allocator.13"* %3, %"class.std::allocator.13"** %8, align 8
  %11 = load %"class.std::vector.11"*, %"class.std::vector.11"** %5, align 8
  %12 = bitcast %"class.std::vector.11"* %11 to %"struct.std::_Vector_base.12"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %8, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.12"* %12, i64 %13, %"class.std::allocator.13"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load %"class.std::vector.16"*, %"class.std::vector.16"** %7, align 8
  invoke void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector.11"* %11, i64 %15, %"class.std::vector.16"* dereferenceable(24) %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %4
  ret void

; <label>:18:                                     ; preds = %4
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %9, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %10, align 4
  %22 = bitcast %"class.std::vector.11"* %11 to %"struct.std::_Vector_base.12"*
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base.12"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %9, align 8
  %25 = load i32, i32* %10, align 4
  %26 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.13"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.13"*, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %2, align 8
  %3 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %2, align 8
  %4 = bitcast %"class.std::allocator.13"* %3 to %"class.__gnu_cxx::new_allocator.14"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEED2Ev(%"class.__gnu_cxx::new_allocator.14"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.16"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.45
  %3 = load i32, i32* @y.46
  %4 = add i32 %2, 1605854495
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 1605854495
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %121

; <label>:28:                                     ; preds = %1, %121
  %29 = alloca %"class.std::vector.16"*, align 8
  %30 = alloca i8*
  %31 = alloca i32
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %29, align 8
  %32 = load %"class.std::vector.16"*, %"class.std::vector.16"** %29, align 8
  %33 = bitcast %"class.std::vector.16"* %32 to %"struct.std::_Vector_base.17"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = bitcast %"class.std::vector.16"* %32 to %"struct.std::_Vector_base.17"*
  %38 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %38, i32 0, i32 1
  %40 = load i32*, i32** %39, align 8
  %41 = bitcast %"class.std::vector.16"* %32 to %"struct.std::_Vector_base.17"*
  %42 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.17"* %41) #3
  %43 = load i32, i32* @x.45
  %44 = load i32, i32* @y.46
  %45 = sub i32 %43, 453528212
  %46 = sub i32 %45, 1
  %47 = add i32 %46, 453528212
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  br i1 %67, label %69, label %121

; <label>:69:                                     ; preds = %28
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %36, i32* %40, %"class.std::allocator.0"* dereferenceable(1) %42)
          to label %70 unwind label %114

; <label>:70:                                     ; preds = %69
  %71 = load i32, i32* @x.45
  %72 = load i32, i32* @y.46
  %73 = add i32 %71, 1216993810
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, 1216993810
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  br i1 %83, label %85, label %136

; <label>:85:                                     ; preds = %70, %136
  %86 = bitcast %"class.std::vector.16"* %32 to %"struct.std::_Vector_base.17"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.17"* %86) #3
  %87 = load i32, i32* @x.45
  %88 = load i32, i32* @y.46
  %89 = add i32 %87, 457092031
  %90 = sub i32 %89, 1
  %91 = sub i32 %90, 457092031
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 true, true
  %100 = and i1 %97, true
  %101 = and i1 %95, %99
  %102 = and i1 %98, true
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 true, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  br i1 %111, label %113, label %136

; <label>:113:                                    ; preds = %85
  ret void

; <label>:114:                                    ; preds = %69
  %115 = landingpad { i8*, i32 }
          catch i8* null
  %116 = extractvalue { i8*, i32 } %115, 0
  store i8* %116, i8** %30, align 8
  %117 = extractvalue { i8*, i32 } %115, 1
  store i32 %117, i32* %31, align 4
  %118 = bitcast %"class.std::vector.16"* %32 to %"struct.std::_Vector_base.17"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.17"* %118) #3
  br label %119

; <label>:119:                                    ; preds = %114
  %120 = load i8*, i8** %30, align 8
  call void @__clang_call_terminate(i8* %120) #13
  unreachable

; <label>:121:                                    ; preds = %28, %1
  %122 = alloca %"class.std::vector.16"*, align 8
  %123 = alloca i8*
  %124 = alloca i32
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %122, align 8
  %125 = load %"class.std::vector.16"*, %"class.std::vector.16"** %122, align 8
  %126 = bitcast %"class.std::vector.16"* %125 to %"struct.std::_Vector_base.17"*
  %127 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %126, i32 0, i32 0
  %128 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %127, i32 0, i32 0
  %129 = load i32*, i32** %128, align 8
  %130 = bitcast %"class.std::vector.16"* %125 to %"struct.std::_Vector_base.17"*
  %131 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %130, i32 0, i32 0
  %132 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %131, i32 0, i32 1
  %133 = load i32*, i32** %132, align 8
  %134 = bitcast %"class.std::vector.16"* %125 to %"struct.std::_Vector_base.17"*
  %135 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.17"* %134) #3
  br label %28

; <label>:136:                                    ; preds = %85, %70
  %137 = bitcast %"class.std::vector.16"* %32 to %"struct.std::_Vector_base.17"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.17"* %137) #3
  br label %85
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiED2Ev(%"class.std::allocator.0"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.47
  %5 = load i32, i32* @y.48
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -72150458, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %72
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -72150458, label %17
    i32 -1880510388, label %37
    i32 -1824276797, label %67
    i32 -1696543494, label %68
  ]

; <label>:16:                                     ; preds = %14
  br label %72

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -1880510388, i32 -1696543494
  store i32 %36, i32* %13
  br label %72

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %38, align 8
  %39 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %38, align 8
  %40 = bitcast %"class.std::allocator.0"* %39 to %"class.__gnu_cxx::new_allocator.1"*
  call void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.1"* %40) #3
  %41 = load i32, i32* @x.47
  %42 = load i32, i32* @y.48
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -1824276797, i32 -1696543494
  store i32 %66, i32* %13
  br label %72

; <label>:67:                                     ; preds = %14
  ret void

; <label>:68:                                     ; preds = %14
  %69 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %69, align 8
  %70 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %69, align 8
  %71 = bitcast %"class.std::allocator.0"* %70 to %"class.__gnu_cxx::new_allocator.1"*
  call void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.1"* %71) #3
  store i32 -1880510388, i32* %13
  br label %72

; <label>:72:                                     ; preds = %68, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define internal { i64, i64 } @"_ZZ4mainENK3$_0clEv"(%class.anon*) #0 align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = alloca %class.anon*
  %5 = alloca %"struct.std::pair.18", align 8
  %6 = alloca %class.anon*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %class.anon* %0, %class.anon** %6, align 8
  %9 = load %class.anon*, %class.anon** %6, align 8
  store %class.anon* %9, %class.anon** %4
  store i32 0, i32* %7, align 4
  %10 = alloca i32
  store i32 -1549127219, i32* %10
  br label %11

; <label>:11:                                     ; preds = %1, %305
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 -1549127219, label %14
    i32 -1736692759, label %29
    i32 -1691195554, label %51
    i32 147398927, label %54
    i32 -553462765, label %55
    i32 -2011761750, label %63
    i32 1607228620, label %79
    i32 1462413219, label %107
    i32 -211775015, label %110
    i32 324912667, label %113
    i32 -1691141937, label %114
    i32 1768905649, label %120
    i32 1912375204, label %147
    i32 1550579906, label %163
    i32 -1744638351, label %164
    i32 688609859, label %179
    i32 -2054099109, label %199
    i32 -1277197973, label %200
    i32 -969069693, label %216
    i32 -1913709486, label %244
    i32 828351644, label %245
    i32 144878682, label %252
    i32 84635739, label %265
    i32 998019456, label %266
    i32 -383708333, label %304
  ]

; <label>:13:                                     ; preds = %11
  br label %305

; <label>:14:                                     ; preds = %11
  %15 = load i32, i32* @x.49
  %16 = load i32, i32* @y.50
  %17 = sub i32 0, 1
  %18 = add i32 %15, %17
  %19 = sub i32 %15, 1
  %20 = mul i32 %15, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %16, 10
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1736692759, i32 828351644
  store i32 %28, i32* %10
  br label %305

; <label>:29:                                     ; preds = %11
  %30 = load i32, i32* %7, align 4
  %31 = load volatile %class.anon*, %class.anon** %4
  %32 = getelementptr inbounds %class.anon, %class.anon* %31, i32 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = load i32, i32* %33, align 4
  %35 = icmp slt i32 %30, %34
  store i1 %35, i1* %3
  %36 = load i32, i32* @x.49
  %37 = load i32, i32* @y.50
  %38 = sub i32 %36, 835431641
  %39 = sub i32 %38, 1
  %40 = add i32 %39, 835431641
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 -1691195554, i32 828351644
  store i32 %50, i32* %10
  br label %305

; <label>:51:                                     ; preds = %11
  %52 = load volatile i1, i1* %3
  %53 = select i1 %52, i32 147398927, i32 -1277197973
  store i32 %53, i32* %10
  br label %305

; <label>:54:                                     ; preds = %11
  store i32 0, i32* %8, align 4
  store i32 -553462765, i32* %10
  br label %305

; <label>:55:                                     ; preds = %11
  %56 = load i32, i32* %8, align 4
  %57 = load volatile %class.anon*, %class.anon** %4
  %58 = getelementptr inbounds %class.anon, %class.anon* %57, i32 0, i32 1
  %59 = load i32*, i32** %58, align 8
  %60 = load i32, i32* %59, align 4
  %61 = icmp slt i32 %56, %60
  %62 = select i1 %61, i32 -2011761750, i32 1768905649
  store i32 %62, i32* %10
  br label %305

; <label>:63:                                     ; preds = %11
  %64 = load i32, i32* @x.49
  %65 = load i32, i32* @y.50
  %66 = add i32 %64, 1973172892
  %67 = sub i32 %66, 1
  %68 = sub i32 %67, 1973172892
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = and i1 %72, %73
  %75 = xor i1 %72, %73
  %76 = or i1 %74, %75
  %77 = or i1 %72, %73
  %78 = select i1 %76, i32 1607228620, i32 144878682
  store i32 %78, i32* %10
  br label %305

; <label>:79:                                     ; preds = %11
  %80 = load volatile %class.anon*, %class.anon** %4
  %81 = getelementptr inbounds %class.anon, %class.anon* %80, i32 0, i32 2
  %82 = load %"class.std::vector"*, %"class.std::vector"** %81, align 8
  %83 = load i32, i32* %7, align 4
  %84 = sext i32 %83 to i64
  %85 = call dereferenceable(24) %"class.std::vector.6"* @_ZNSt6vectorIS_IcSaIcEESaIS1_EEixEm(%"class.std::vector"* %82, i64 %84) #3
  %86 = load i32, i32* %8, align 4
  %87 = sext i32 %86 to i64
  %88 = call dereferenceable(1) i8* @_ZNSt6vectorIcSaIcEEixEm(%"class.std::vector.6"* %85, i64 %87) #3
  %89 = load i8, i8* %88, align 1
  %90 = sext i8 %89 to i32
  %91 = icmp eq i32 %90, 83
  store i1 %91, i1* %2
  %92 = load i32, i32* @x.49
  %93 = load i32, i32* @y.50
  %94 = sub i32 %92, 1404524513
  %95 = sub i32 %94, 1
  %96 = add i32 %95, 1404524513
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  %106 = select i1 %104, i32 1462413219, i32 144878682
  store i32 %106, i32* %10
  br label %305

; <label>:107:                                    ; preds = %11
  %108 = load volatile i1, i1* %2
  %109 = select i1 %108, i32 -211775015, i32 324912667
  store i32 %109, i32* %10
  br label %305

; <label>:110:                                    ; preds = %11
  call void @_ZNSt4pairIxxEC2IRiS2_vEEOT_OT0_(%"struct.std::pair.18"* %5, i32* dereferenceable(4) %7, i32* dereferenceable(4) %8)
  %111 = bitcast %"struct.std::pair.18"* %5 to { i64, i64 }*
  %112 = load { i64, i64 }, { i64, i64 }* %111, align 8
  ret { i64, i64 } %112

; <label>:113:                                    ; preds = %11
  store i32 -1691141937, i32* %10
  br label %305

; <label>:114:                                    ; preds = %11
  %115 = load i32, i32* %8, align 4
  %116 = add i32 %115, -1164140483
  %117 = add i32 %116, 1
  %118 = sub i32 %117, -1164140483
  %119 = add nsw i32 %115, 1
  store i32 %118, i32* %8, align 4
  store i32 -553462765, i32* %10
  br label %305

; <label>:120:                                    ; preds = %11
  %121 = load i32, i32* @x.49
  %122 = load i32, i32* @y.50
  %123 = sub i32 0, 1
  %124 = add i32 %121, %123
  %125 = sub i32 %121, 1
  %126 = mul i32 %121, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %122, 10
  %130 = xor i1 %128, true
  %131 = xor i1 %129, true
  %132 = xor i1 false, true
  %133 = and i1 %130, false
  %134 = and i1 %128, %132
  %135 = and i1 %131, false
  %136 = and i1 %129, %132
  %137 = or i1 %133, %134
  %138 = or i1 %135, %136
  %139 = xor i1 %137, %138
  %140 = or i1 %130, %131
  %141 = xor i1 %140, true
  %142 = or i1 false, %132
  %143 = and i1 %141, %142
  %144 = or i1 %139, %143
  %145 = or i1 %128, %129
  %146 = select i1 %144, i32 1912375204, i32 84635739
  store i32 %146, i32* %10
  br label %305

; <label>:147:                                    ; preds = %11
  %148 = load i32, i32* @x.49
  %149 = load i32, i32* @y.50
  %150 = add i32 %148, -2022193757
  %151 = sub i32 %150, 1
  %152 = sub i32 %151, -2022193757
  %153 = sub i32 %148, 1
  %154 = mul i32 %148, %152
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %149, 10
  %158 = and i1 %156, %157
  %159 = xor i1 %156, %157
  %160 = or i1 %158, %159
  %161 = or i1 %156, %157
  %162 = select i1 %160, i32 1550579906, i32 84635739
  store i32 %162, i32* %10
  br label %305

; <label>:163:                                    ; preds = %11
  store i32 -1744638351, i32* %10
  br label %305

; <label>:164:                                    ; preds = %11
  %165 = load i32, i32* @x.49
  %166 = load i32, i32* @y.50
  %167 = sub i32 0, 1
  %168 = add i32 %165, %167
  %169 = sub i32 %165, 1
  %170 = mul i32 %165, %168
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %166, 10
  %174 = and i1 %172, %173
  %175 = xor i1 %172, %173
  %176 = or i1 %174, %175
  %177 = or i1 %172, %173
  %178 = select i1 %176, i32 688609859, i32 998019456
  store i32 %178, i32* %10
  br label %305

; <label>:179:                                    ; preds = %11
  %180 = load i32, i32* %7, align 4
  %181 = sub i32 %180, 1832858885
  %182 = add i32 %181, 1
  %183 = add i32 %182, 1832858885
  %184 = add nsw i32 %180, 1
  store i32 %183, i32* %7, align 4
  %185 = load i32, i32* @x.49
  %186 = load i32, i32* @y.50
  %187 = sub i32 0, 1
  %188 = add i32 %185, %187
  %189 = sub i32 %185, 1
  %190 = mul i32 %185, %188
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %186, 10
  %194 = and i1 %192, %193
  %195 = xor i1 %192, %193
  %196 = or i1 %194, %195
  %197 = or i1 %192, %193
  %198 = select i1 %196, i32 -2054099109, i32 998019456
  store i32 %198, i32* %10
  br label %305

; <label>:199:                                    ; preds = %11
  store i32 -1549127219, i32* %10
  br label %305

; <label>:200:                                    ; preds = %11
  %201 = load i32, i32* @x.49
  %202 = load i32, i32* @y.50
  %203 = sub i32 %201, -1348669017
  %204 = sub i32 %203, 1
  %205 = add i32 %204, -1348669017
  %206 = sub i32 %201, 1
  %207 = mul i32 %201, %205
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %202, 10
  %211 = and i1 %209, %210
  %212 = xor i1 %209, %210
  %213 = or i1 %211, %212
  %214 = or i1 %209, %210
  %215 = select i1 %213, i32 -969069693, i32 -383708333
  store i32 %215, i32* %10
  br label %305

; <label>:216:                                    ; preds = %11
  call void @_ZSt21__throw_runtime_errorPKc(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0)) #15
  %217 = load i32, i32* @x.49
  %218 = load i32, i32* @y.50
  %219 = sub i32 %217, 1618653085
  %220 = sub i32 %219, 1
  %221 = add i32 %220, 1618653085
  %222 = sub i32 %217, 1
  %223 = mul i32 %217, %221
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %218, 10
  %227 = xor i1 %225, true
  %228 = xor i1 %226, true
  %229 = xor i1 true, true
  %230 = and i1 %227, true
  %231 = and i1 %225, %229
  %232 = and i1 %228, true
  %233 = and i1 %226, %229
  %234 = or i1 %230, %231
  %235 = or i1 %232, %233
  %236 = xor i1 %234, %235
  %237 = or i1 %227, %228
  %238 = xor i1 %237, true
  %239 = or i1 true, %229
  %240 = and i1 %238, %239
  %241 = or i1 %236, %240
  %242 = or i1 %225, %226
  %243 = select i1 %241, i32 -1913709486, i32 -383708333
  store i32 %243, i32* %10
  br label %305

; <label>:244:                                    ; preds = %11
  unreachable

; <label>:245:                                    ; preds = %11
  %246 = load i32, i32* %7, align 4
  %247 = load volatile %class.anon*, %class.anon** %4
  %248 = getelementptr inbounds %class.anon, %class.anon* %247, i32 0, i32 0
  %249 = load i32*, i32** %248, align 8
  %250 = load i32, i32* %249, align 4
  %251 = icmp slt i32 %246, %250
  store i32 -1736692759, i32* %10
  br label %305

; <label>:252:                                    ; preds = %11
  %253 = load volatile %class.anon*, %class.anon** %4
  %254 = getelementptr inbounds %class.anon, %class.anon* %253, i32 0, i32 2
  %255 = load %"class.std::vector"*, %"class.std::vector"** %254, align 8
  %256 = load i32, i32* %7, align 4
  %257 = sext i32 %256 to i64
  %258 = call dereferenceable(24) %"class.std::vector.6"* @_ZNSt6vectorIS_IcSaIcEESaIS1_EEixEm(%"class.std::vector"* %255, i64 %257) #3
  %259 = load i32, i32* %8, align 4
  %260 = sext i32 %259 to i64
  %261 = call dereferenceable(1) i8* @_ZNSt6vectorIcSaIcEEixEm(%"class.std::vector.6"* %258, i64 %260) #3
  %262 = load i8, i8* %261, align 1
  %263 = sext i8 %262 to i32
  %264 = icmp eq i32 %263, 83
  store i32 1607228620, i32* %10
  br label %305

; <label>:265:                                    ; preds = %11
  store i32 1912375204, i32* %10
  br label %305

; <label>:266:                                    ; preds = %11
  %267 = load i32, i32* %7, align 4
  %268 = shl i32 %267, 1
  %269 = sub i32 0, %267
  %270 = add i32 0, %269
  %271 = sub i32 0, %267
  %272 = sub i32 %270, 1572122041
  %273 = add i32 %272, 1
  %274 = add i32 %273, 1572122041
  %275 = add i32 %270, 1
  %276 = sub i32 0, %267
  %277 = add i32 0, %276
  %278 = sub i32 0, %267
  %279 = sub i32 0, 1
  %280 = sub i32 %277, %279
  %281 = add i32 %277, 1
  %282 = add i32 %267, 217423433
  %283 = sub i32 %282, 1
  %284 = sub i32 %283, 217423433
  %285 = sub i32 %267, 1
  %286 = mul i32 %284, 1
  %287 = sub i32 0, 379740065
  %288 = sub i32 %287, %267
  %289 = add i32 %288, 379740065
  %290 = sub i32 0, %267
  %291 = sub i32 %289, 153237482
  %292 = add i32 %291, 1
  %293 = add i32 %292, 153237482
  %294 = add i32 %289, 1
  %295 = sub i32 %267, 970429184
  %296 = sub i32 %295, 1
  %297 = add i32 %296, 970429184
  %298 = sub i32 %267, 1
  %299 = mul i32 %297, 1
  %300 = sub i32 %267, -135785238
  %301 = add i32 %300, 1
  %302 = add i32 %301, -135785238
  %303 = add nsw i32 %267, 1
  store i32 %302, i32* %7, align 4
  store i32 688609859, i32* %10
  br label %305

; <label>:304:                                    ; preds = %11
  call void @_ZSt21__throw_runtime_errorPKc(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0)) #15
  store i32 -969069693, i32* %10
  br label %305

; <label>:305:                                    ; preds = %304, %266, %265, %252, %245, %216, %200, %199, %179, %164, %163, %147, %120, %114, %113, %107, %79, %63, %55, %54, %51, %29, %14, %13
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.16"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.11"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector.11"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.11"*, %"class.std::vector.11"** %3, align 8
  %6 = bitcast %"class.std::vector.11"* %5 to %"struct.std::_Vector_base.12"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.16"*, %"class.std::vector.16"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::vector.16", %"class.std::vector.16"* %9, i64 %10
  ret %"class.std::vector.16"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.16"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector.16"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.16"*, %"class.std::vector.16"** %3, align 8
  %6 = bitcast %"class.std::vector.16"* %5 to %"struct.std::_Vector_base.17"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds i32, i32* %9, i64 %10
  ret i32* %11
}

; Function Attrs: noinline uwtable
define internal void @_ZNSt5dequeIZ4mainE5PointSaIS0_EEC2Ev(%"class.std::deque.20"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::deque.20"*, align 8
  store %"class.std::deque.20"* %0, %"class.std::deque.20"** %2, align 8
  %3 = load %"class.std::deque.20"*, %"class.std::deque.20"** %2, align 8
  %4 = bitcast %"class.std::deque.20"* %3 to %"class.std::_Deque_base.21"*
  call void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EEC2Ev(%"class.std::_Deque_base.21"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define internal void @_ZNSt5queueIZ4mainE5PointSt5dequeIS0_SaIS0_EEEC2EOS3_(%"class.std::queue.19"*, %"class.std::deque.20"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.57
  %6 = load i32, i32* @y.58
  %7 = add i32 %5, -1484791271
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1484791271
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1928881733, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %81
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1928881733, label %19
    i32 1687686840, label %39
    i32 177162759, label %73
    i32 1106146135, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %81

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1687686840, i32 1106146135
  store i32 %38, i32* %15
  br label %81

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::queue.19"*, align 8
  %41 = alloca %"class.std::deque.20"*, align 8
  store %"class.std::queue.19"* %0, %"class.std::queue.19"** %40, align 8
  store %"class.std::deque.20"* %1, %"class.std::deque.20"** %41, align 8
  %42 = load %"class.std::queue.19"*, %"class.std::queue.19"** %40, align 8
  %43 = getelementptr inbounds %"class.std::queue.19", %"class.std::queue.19"* %42, i32 0, i32 0
  %44 = load %"class.std::deque.20"*, %"class.std::deque.20"** %41, align 8
  %45 = call dereferenceable(80) %"class.std::deque.20"* @_ZSt4moveIRSt5dequeIZ4mainE5PointSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::deque.20"* dereferenceable(80) %44) #3
  call void @_ZNSt5dequeIZ4mainE5PointSaIS0_EEC2EOS2_(%"class.std::deque.20"* %43, %"class.std::deque.20"* dereferenceable(80) %45)
  %46 = load i32, i32* @x.57
  %47 = load i32, i32* @y.58
  %48 = add i32 %46, -1120925436
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, -1120925436
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 177162759, i32 1106146135
  store i32 %72, i32* %15
  br label %81

; <label>:73:                                     ; preds = %16
  ret void

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.std::queue.19"*, align 8
  %76 = alloca %"class.std::deque.20"*, align 8
  store %"class.std::queue.19"* %0, %"class.std::queue.19"** %75, align 8
  store %"class.std::deque.20"* %1, %"class.std::deque.20"** %76, align 8
  %77 = load %"class.std::queue.19"*, %"class.std::queue.19"** %75, align 8
  %78 = getelementptr inbounds %"class.std::queue.19", %"class.std::queue.19"* %77, i32 0, i32 0
  %79 = load %"class.std::deque.20"*, %"class.std::deque.20"** %76, align 8
  %80 = call dereferenceable(80) %"class.std::deque.20"* @_ZSt4moveIRSt5dequeIZ4mainE5PointSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::deque.20"* dereferenceable(80) %79) #3
  call void @_ZNSt5dequeIZ4mainE5PointSaIS0_EEC2EOS2_(%"class.std::deque.20"* %78, %"class.std::deque.20"* dereferenceable(80) %80)
  store i32 1687686840, i32* %15
  br label %81

; <label>:81:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSt5dequeIZ4mainE5PointSaIS0_EED2Ev(%"class.std::deque.20"*) unnamed_addr #4 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::deque.20"*, align 8
  %3 = alloca %"struct.std::_Deque_iterator.25", align 8
  %4 = alloca %"struct.std::_Deque_iterator.25", align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"class.std::deque.20"* %0, %"class.std::deque.20"** %2, align 8
  %7 = load %"class.std::deque.20"*, %"class.std::deque.20"** %2, align 8
  call void @_ZNSt5dequeIZ4mainE5PointSaIS0_EE5beginEv(%"struct.std::_Deque_iterator.25"* sret %3, %"class.std::deque.20"* %7) #3
  call void @_ZNSt5dequeIZ4mainE5PointSaIS0_EE3endEv(%"struct.std::_Deque_iterator.25"* sret %4, %"class.std::deque.20"* %7) #3
  %8 = bitcast %"class.std::deque.20"* %7 to %"class.std::_Deque_base.21"*
  %9 = call dereferenceable(1) %"class.std::allocator.22"* @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base.21"* %8) #3
  invoke void @_ZNSt5dequeIZ4mainE5PointSaIS0_EE15_M_destroy_dataESt15_Deque_iteratorIS0_RS0_PS0_ES6_RKS1_(%"class.std::deque.20"* %7, %"struct.std::_Deque_iterator.25"* %3, %"struct.std::_Deque_iterator.25"* %4, %"class.std::allocator.22"* dereferenceable(1) %9)
          to label %10 unwind label %12

; <label>:10:                                     ; preds = %1
  %11 = bitcast %"class.std::deque.20"* %7 to %"class.std::_Deque_base.21"*
  call void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EED2Ev(%"class.std::_Deque_base.21"* %11) #3
  ret void

; <label>:12:                                     ; preds = %1
  %13 = landingpad { i8*, i32 }
          catch i8* null
  %14 = extractvalue { i8*, i32 } %13, 0
  store i8* %14, i8** %5, align 8
  %15 = extractvalue { i8*, i32 } %13, 1
  store i32 %15, i32* %6, align 4
  %16 = bitcast %"class.std::deque.20"* %7 to %"class.std::_Deque_base.21"*
  call void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EED2Ev(%"class.std::_Deque_base.21"* %16) #3
  br label %17

; <label>:17:                                     ; preds = %12
  %18 = load i32, i32* @x.59
  %19 = load i32, i32* @y.60
  %20 = sub i32 0, 1
  %21 = add i32 %18, %20
  %22 = sub i32 %18, 1
  %23 = mul i32 %18, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %19, 10
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  br i1 %29, label %31, label %48

; <label>:31:                                     ; preds = %17, %48
  %32 = load i8*, i8** %5, align 8
  call void @__clang_call_terminate(i8* %32) #13
  %33 = load i32, i32* @x.59
  %34 = load i32, i32* @y.60
  %35 = add i32 %33, 1458659290
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 1458659290
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  br i1 %45, label %47, label %48

; <label>:47:                                     ; preds = %31
  unreachable

; <label>:48:                                     ; preds = %31, %17
  %49 = load i8*, i8** %5, align 8
  call void @__clang_call_terminate(i8* %49) #13
  br label %31
}

; Function Attrs: noinline uwtable
define internal void @_ZNSt5queueIZ4mainE5PointSt5dequeIS0_SaIS0_EEE4pushEOS0_(%"class.std::queue.19"*, %struct.Point* dereferenceable(24)) #0 align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.61
  %6 = load i32, i32* @y.62
  %7 = add i32 %5, 864107261
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 864107261
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1163346563, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1163346563, label %19
    i32 756829101, label %27
    i32 -251644623, label %61
    i32 -877399981, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 756829101, i32 -877399981
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::queue.19"*, align 8
  %29 = alloca %struct.Point*, align 8
  store %"class.std::queue.19"* %0, %"class.std::queue.19"** %28, align 8
  store %struct.Point* %1, %struct.Point** %29, align 8
  %30 = load %"class.std::queue.19"*, %"class.std::queue.19"** %28, align 8
  %31 = getelementptr inbounds %"class.std::queue.19", %"class.std::queue.19"* %30, i32 0, i32 0
  %32 = load %struct.Point*, %struct.Point** %29, align 8
  %33 = call dereferenceable(24) %struct.Point* @_ZSt4moveIRZ4mainE5PointEONSt16remove_referenceIT_E4typeEOS3_(%struct.Point* dereferenceable(24) %32) #3
  call void @_ZNSt5dequeIZ4mainE5PointSaIS0_EE9push_backEOS0_(%"class.std::deque.20"* %31, %struct.Point* dereferenceable(24) %33)
  %34 = load i32, i32* @x.61
  %35 = load i32, i32* @y.62
  %36 = sub i32 %34, 855996151
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 855996151
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -251644623, i32 -877399981
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::queue.19"*, align 8
  %64 = alloca %struct.Point*, align 8
  store %"class.std::queue.19"* %0, %"class.std::queue.19"** %63, align 8
  store %struct.Point* %1, %struct.Point** %64, align 8
  %65 = load %"class.std::queue.19"*, %"class.std::queue.19"** %63, align 8
  %66 = getelementptr inbounds %"class.std::queue.19", %"class.std::queue.19"* %65, i32 0, i32 0
  %67 = load %struct.Point*, %struct.Point** %64, align 8
  %68 = call dereferenceable(24) %struct.Point* @_ZSt4moveIRZ4mainE5PointEONSt16remove_referenceIT_E4typeEOS3_(%struct.Point* dereferenceable(24) %67) #3
  call void @_ZNSt5dequeIZ4mainE5PointSaIS0_EE9push_backEOS0_(%"class.std::deque.20"* %66, %struct.Point* dereferenceable(24) %68)
  store i32 756829101, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSaIZ4mainE9DirectionEC2Ev(%"class.std::allocator.29"*) unnamed_addr #4 align 2 {
  %2 = alloca %"class.std::allocator.29"*, align 8
  store %"class.std::allocator.29"* %0, %"class.std::allocator.29"** %2, align 8
  %3 = load %"class.std::allocator.29"*, %"class.std::allocator.29"** %2, align 8
  %4 = bitcast %"class.std::allocator.29"* %3 to %"class.__gnu_cxx::new_allocator.30"*
  call void @_ZN9__gnu_cxx13new_allocatorIZ4mainE9DirectionEC2Ev(%"class.__gnu_cxx::new_allocator.30"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define internal void @_ZNSt6vectorIZ4mainE9DirectionSaIS0_EEC2ESt16initializer_listIS0_ERKS1_(%"class.std::vector.27"*, %struct.Direction*, i64, %"class.std::allocator.29"* dereferenceable(1)) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::initializer_list", align 8
  %6 = alloca %"class.std::vector.27"*, align 8
  %7 = alloca %"class.std::allocator.29"*, align 8
  %8 = alloca %"struct.std::forward_iterator_tag", align 1
  %9 = alloca %"struct.std::random_access_iterator_tag", align 1
  %10 = alloca i8*
  %11 = alloca i32
  %12 = bitcast %"class.std::initializer_list"* %5 to { %struct.Direction*, i64 }*
  %13 = getelementptr inbounds { %struct.Direction*, i64 }, { %struct.Direction*, i64 }* %12, i32 0, i32 0
  store %struct.Direction* %1, %struct.Direction** %13, align 8
  %14 = getelementptr inbounds { %struct.Direction*, i64 }, { %struct.Direction*, i64 }* %12, i32 0, i32 1
  store i64 %2, i64* %14, align 8
  store %"class.std::vector.27"* %0, %"class.std::vector.27"** %6, align 8
  store %"class.std::allocator.29"* %3, %"class.std::allocator.29"** %7, align 8
  %15 = load %"class.std::vector.27"*, %"class.std::vector.27"** %6, align 8
  %16 = bitcast %"class.std::vector.27"* %15 to %"struct.std::_Vector_base.28"*
  %17 = load %"class.std::allocator.29"*, %"class.std::allocator.29"** %7, align 8
  call void @_ZNSt12_Vector_baseIZ4mainE9DirectionSaIS0_EEC2ERKS1_(%"struct.std::_Vector_base.28"* %16, %"class.std::allocator.29"* dereferenceable(1) %17) #3
  %18 = call %struct.Direction* @_ZNKSt16initializer_listIZ4mainE9DirectionE5beginEv(%"class.std::initializer_list"* %5) #3
  %19 = call %struct.Direction* @_ZNKSt16initializer_listIZ4mainE9DirectionE3endEv(%"class.std::initializer_list"* %5) #3
  %20 = bitcast %"struct.std::random_access_iterator_tag"* %9 to %"struct.std::forward_iterator_tag"*
  invoke void @_ZNSt6vectorIZ4mainE9DirectionSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag(%"class.std::vector.27"* %15, %struct.Direction* %18, %struct.Direction* %19)
          to label %21 unwind label %22

; <label>:21:                                     ; preds = %4
  ret void

; <label>:22:                                     ; preds = %4
  %23 = load i32, i32* @x.65
  %24 = load i32, i32* @y.66
  %25 = add i32 %23, -176609230
  %26 = sub i32 %25, 1
  %27 = sub i32 %26, -176609230
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 false, true
  %36 = and i1 %33, false
  %37 = and i1 %31, %35
  %38 = and i1 %34, false
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 false, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  br i1 %47, label %49, label %74

; <label>:49:                                     ; preds = %22, %74
  %50 = landingpad { i8*, i32 }
          cleanup
  %51 = extractvalue { i8*, i32 } %50, 0
  store i8* %51, i8** %10, align 8
  %52 = extractvalue { i8*, i32 } %50, 1
  store i32 %52, i32* %11, align 4
  %53 = bitcast %"class.std::vector.27"* %15 to %"struct.std::_Vector_base.28"*
  call void @_ZNSt12_Vector_baseIZ4mainE9DirectionSaIS0_EED2Ev(%"struct.std::_Vector_base.28"* %53) #3
  %54 = load i32, i32* @x.65
  %55 = load i32, i32* @y.66
  %56 = sub i32 %54, 1187540071
  %57 = sub i32 %56, 1
  %58 = add i32 %57, 1187540071
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  br i1 %66, label %68, label %74

; <label>:68:                                     ; preds = %49
  br label %69

; <label>:69:                                     ; preds = %68
  %70 = load i8*, i8** %10, align 8
  %71 = load i32, i32* %11, align 4
  %72 = insertvalue { i8*, i32 } undef, i8* %70, 0
  %73 = insertvalue { i8*, i32 } %72, i32 %71, 1
  resume { i8*, i32 } %73

; <label>:74:                                     ; preds = %49, %22
  %75 = landingpad { i8*, i32 }
          cleanup
  %76 = extractvalue { i8*, i32 } %75, 0
  store i8* %76, i8** %10, align 8
  %77 = extractvalue { i8*, i32 } %75, 1
  store i32 %77, i32* %11, align 4
  %78 = bitcast %"class.std::vector.27"* %15 to %"struct.std::_Vector_base.28"*
  call void @_ZNSt12_Vector_baseIZ4mainE9DirectionSaIS0_EED2Ev(%"struct.std::_Vector_base.28"* %78) #3
  br label %49
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSaIZ4mainE9DirectionED2Ev(%"class.std::allocator.29"*) unnamed_addr #4 align 2 {
  %2 = alloca %"class.std::allocator.29"*, align 8
  store %"class.std::allocator.29"* %0, %"class.std::allocator.29"** %2, align 8
  %3 = load %"class.std::allocator.29"*, %"class.std::allocator.29"** %2, align 8
  %4 = bitcast %"class.std::allocator.29"* %3 to %"class.__gnu_cxx::new_allocator.30"*
  call void @_ZN9__gnu_cxx13new_allocatorIZ4mainE9DirectionED2Ev(%"class.__gnu_cxx::new_allocator.30"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @_ZNKSt5queueIZ4mainE5PointSt5dequeIS0_SaIS0_EEE5emptyEv(%"class.std::queue.19"*) #4 align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.69
  %6 = load i32, i32* @y.70
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1784344382, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %53
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1784344382, label %18
    i32 1906044996, label %26
    i32 -2096530858, label %46
    i32 558614736, label %48
  ]

; <label>:17:                                     ; preds = %15
  br label %53

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1906044996, i32 558614736
  store i32 %25, i32* %14
  br label %53

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::queue.19"*, align 8
  store %"class.std::queue.19"* %0, %"class.std::queue.19"** %27, align 8
  %28 = load %"class.std::queue.19"*, %"class.std::queue.19"** %27, align 8
  %29 = getelementptr inbounds %"class.std::queue.19", %"class.std::queue.19"* %28, i32 0, i32 0
  %30 = call zeroext i1 @_ZNKSt5dequeIZ4mainE5PointSaIS0_EE5emptyEv(%"class.std::deque.20"* %29) #3
  store i1 %30, i1* %2
  %31 = load i32, i32* @x.69
  %32 = load i32, i32* @y.70
  %33 = sub i32 %31, -636887689
  %34 = sub i32 %33, 1
  %35 = add i32 %34, -636887689
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -2096530858, i32 558614736
  store i32 %45, i32* %14
  br label %53

; <label>:46:                                     ; preds = %15
  %47 = load volatile i1, i1* %2
  ret i1 %47

; <label>:48:                                     ; preds = %15
  %49 = alloca %"class.std::queue.19"*, align 8
  store %"class.std::queue.19"* %0, %"class.std::queue.19"** %49, align 8
  %50 = load %"class.std::queue.19"*, %"class.std::queue.19"** %49, align 8
  %51 = getelementptr inbounds %"class.std::queue.19", %"class.std::queue.19"* %50, i32 0, i32 0
  %52 = call zeroext i1 @_ZNKSt5dequeIZ4mainE5PointSaIS0_EE5emptyEv(%"class.std::deque.20"* %51) #3
  store i32 1906044996, i32* %14
  br label %53

; <label>:53:                                     ; preds = %48, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(24) %struct.Point* @_ZNSt5queueIZ4mainE5PointSt5dequeIS0_SaIS0_EEE5frontEv(%"class.std::queue.19"*) #4 align 2 {
  %2 = alloca %struct.Point*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.71
  %6 = load i32, i32* @y.72
  %7 = sub i32 %5, -1285600004
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1285600004
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 665204509, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 665204509, label %19
    i32 -729007015, label %27
    i32 -2118393254, label %59
    i32 -1084134534, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -729007015, i32 -1084134534
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::queue.19"*, align 8
  store %"class.std::queue.19"* %0, %"class.std::queue.19"** %28, align 8
  %29 = load %"class.std::queue.19"*, %"class.std::queue.19"** %28, align 8
  %30 = getelementptr inbounds %"class.std::queue.19", %"class.std::queue.19"* %29, i32 0, i32 0
  %31 = call dereferenceable(24) %struct.Point* @_ZNSt5dequeIZ4mainE5PointSaIS0_EE5frontEv(%"class.std::deque.20"* %30) #3
  store %struct.Point* %31, %struct.Point** %2
  %32 = load i32, i32* @x.71
  %33 = load i32, i32* @y.72
  %34 = add i32 %32, 1663617080
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 1663617080
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -2118393254, i32 -1084134534
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %struct.Point*, %struct.Point** %2
  ret %struct.Point* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::queue.19"*, align 8
  store %"class.std::queue.19"* %0, %"class.std::queue.19"** %62, align 8
  %63 = load %"class.std::queue.19"*, %"class.std::queue.19"** %62, align 8
  %64 = getelementptr inbounds %"class.std::queue.19", %"class.std::queue.19"* %63, i32 0, i32 0
  %65 = call dereferenceable(24) %struct.Point* @_ZNSt5dequeIZ4mainE5PointSaIS0_EE5frontEv(%"class.std::deque.20"* %64) #3
  store i32 -729007015, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #7

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSt5queueIZ4mainE5PointSt5dequeIS0_SaIS0_EEE3popEv(%"class.std::queue.19"*) #4 align 2 {
  %2 = alloca %"class.std::queue.19"*, align 8
  store %"class.std::queue.19"* %0, %"class.std::queue.19"** %2, align 8
  %3 = load %"class.std::queue.19"*, %"class.std::queue.19"** %2, align 8
  %4 = getelementptr inbounds %"class.std::queue.19", %"class.std::queue.19"* %3, i32 0, i32 0
  call void @_ZNSt5dequeIZ4mainE5PointSaIS0_EE9pop_frontEv(%"class.std::deque.20"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.Direction* @_ZNSt6vectorIZ4mainE9DirectionSaIS0_EE5beginEv(%"class.std::vector.27"*) #4 align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.27"*, align 8
  store %"class.std::vector.27"* %0, %"class.std::vector.27"** %3, align 8
  %4 = load %"class.std::vector.27"*, %"class.std::vector.27"** %3, align 8
  %5 = bitcast %"class.std::vector.27"* %4 to %"struct.std::_Vector_base.28"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.28", %"struct.std::_Vector_base.28"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl", %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPZ4mainE9DirectionSt6vectorIS1_SaIS1_EEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator"* %2, %struct.Direction** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %struct.Direction*, %struct.Direction** %8, align 8
  ret %struct.Direction* %9
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.Direction* @_ZNSt6vectorIZ4mainE9DirectionSaIS0_EE3endEv(%"class.std::vector.27"*) #4 align 2 {
  %2 = alloca %struct.Direction*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.77
  %6 = load i32, i32* @y.78
  %7 = sub i32 %5, 1020867265
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1020867265
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1715404363, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1715404363, label %19
    i32 -607891422, label %39
    i32 -1535168150, label %63
    i32 625867132, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -607891422, i32 625867132
  store i32 %38, i32* %15
  br label %74

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %41 = alloca %"class.std::vector.27"*, align 8
  store %"class.std::vector.27"* %0, %"class.std::vector.27"** %41, align 8
  %42 = load %"class.std::vector.27"*, %"class.std::vector.27"** %41, align 8
  %43 = bitcast %"class.std::vector.27"* %42 to %"struct.std::_Vector_base.28"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base.28", %"struct.std::_Vector_base.28"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl", %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"* %44, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPZ4mainE9DirectionSt6vectorIS1_SaIS1_EEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator"* %40, %struct.Direction** dereferenceable(8) %45) #3
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %40, i32 0, i32 0
  %47 = load %struct.Direction*, %struct.Direction** %46, align 8
  store %struct.Direction* %47, %struct.Direction** %2
  %48 = load i32, i32* @x.77
  %49 = load i32, i32* @y.78
  %50 = add i32 %48, -1307908848
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, -1307908848
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -1535168150, i32 625867132
  store i32 %62, i32* %15
  br label %74

; <label>:63:                                     ; preds = %16
  %64 = load volatile %struct.Direction*, %struct.Direction** %2
  ret %struct.Direction* %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %67 = alloca %"class.std::vector.27"*, align 8
  store %"class.std::vector.27"* %0, %"class.std::vector.27"** %67, align 8
  %68 = load %"class.std::vector.27"*, %"class.std::vector.27"** %67, align 8
  %69 = bitcast %"class.std::vector.27"* %68 to %"struct.std::_Vector_base.28"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base.28", %"struct.std::_Vector_base.28"* %69, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl", %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"* %70, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPZ4mainE9DirectionSt6vectorIS1_SaIS1_EEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator"* %66, %struct.Direction** dereferenceable(8) %71) #3
  %72 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %66, i32 0, i32 0
  %73 = load %struct.Direction*, %struct.Direction** %72, align 8
  store i32 -607891422, i32* %15
  br label %74

; <label>:74:                                     ; preds = %65, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @_ZN9__gnu_cxxneIPZ4mainE9DirectionSt6vectorIS1_SaIS1_EEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #4 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call dereferenceable(8) %struct.Direction** @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE9DirectionSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %7 = load %struct.Direction*, %struct.Direction** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call dereferenceable(8) %struct.Direction** @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE9DirectionSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %8) #3
  %10 = load %struct.Direction*, %struct.Direction** %9, align 8
  %11 = icmp ne %struct.Direction* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(8) %struct.Direction* @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE9DirectionSt6vectorIS1_SaIS1_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"*) #4 align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %5 = load %struct.Direction*, %struct.Direction** %4, align 8
  ret %struct.Direction* %5
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @"_ZZ4mainENK3$_1clEiii"(%class.anon.32*, i32, i32, i32) #4 align 2 {
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca i1
  %8 = alloca i1
  %9 = alloca i1
  %10 = alloca %class.anon.32*
  %11 = alloca i32*
  %12 = alloca i32*
  %13 = alloca i32*
  %14 = alloca i1*
  %15 = alloca i1
  %16 = alloca i1
  %17 = load i32, i32* @x.83
  %18 = load i32, i32* @y.84
  %19 = sub i32 %17, -234001723
  %20 = sub i32 %19, 1
  %21 = add i32 %20, -234001723
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  store i1 %25, i1* %16
  %26 = icmp slt i32 %18, 10
  store i1 %26, i1* %15
  %27 = alloca i32
  store i32 -762406962, i32* %27
  br label %28

; <label>:28:                                     ; preds = %4, %395
  %29 = load i32, i32* %27
  switch i32 %29, label %30 [
    i32 -762406962, label %31
    i32 -1686784704, label %51
    i32 -206906098, label %79
    i32 1110013644, label %82
    i32 -2124183868, label %110
    i32 1826350836, label %145
    i32 1154093325, label %148
    i32 -1002748925, label %164
    i32 1771928625, label %194
    i32 1089840632, label %197
    i32 1321234750, label %225
    i32 1103115918, label %260
    i32 1857536793, label %263
    i32 -173032305, label %265
    i32 1989973512, label %292
    i32 200769676, label %322
    i32 -1239526605, label %325
    i32 1273997652, label %327
    i32 -1388096009, label %344
    i32 -707132922, label %346
    i32 752273456, label %348
    i32 -614965755, label %351
    i32 -1953772107, label %360
    i32 235058329, label %368
    i32 661135392, label %372
    i32 -322643693, label %380
  ]

; <label>:30:                                     ; preds = %28
  br label %395

; <label>:31:                                     ; preds = %28
  %32 = load volatile i1, i1* %16
  %33 = load volatile i1, i1* %15
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 true, true
  %37 = and i1 %34, true
  %38 = and i1 %32, %36
  %39 = and i1 %35, true
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 true, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  %50 = select i1 %48, i32 -1686784704, i32 -614965755
  store i32 %50, i32* %27
  br label %395

; <label>:51:                                     ; preds = %28
  %52 = alloca i1, align 1
  store i1* %52, i1** %14
  %53 = alloca %class.anon.32*, align 8
  %54 = alloca i32, align 4
  store i32* %54, i32** %13
  %55 = alloca i32, align 4
  store i32* %55, i32** %12
  %56 = alloca i32, align 4
  store i32* %56, i32** %11
  store %class.anon.32* %0, %class.anon.32** %53, align 8
  %57 = load volatile i32*, i32** %13
  store i32 %1, i32* %57, align 4
  %58 = load volatile i32*, i32** %12
  store i32 %2, i32* %58, align 4
  %59 = load volatile i32*, i32** %11
  store i32 %3, i32* %59, align 4
  %60 = load %class.anon.32*, %class.anon.32** %53, align 8
  store %class.anon.32* %60, %class.anon.32** %10
  %61 = load volatile i32*, i32** %12
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, -1
  store i1 %63, i1* %9
  %64 = load i32, i32* @x.83
  %65 = load i32, i32* @y.84
  %66 = add i32 %64, -666366387
  %67 = sub i32 %66, 1
  %68 = sub i32 %67, -666366387
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = and i1 %72, %73
  %75 = xor i1 %72, %73
  %76 = or i1 %74, %75
  %77 = or i1 %72, %73
  %78 = select i1 %76, i32 -206906098, i32 -614965755
  store i32 %78, i32* %27
  br label %395

; <label>:79:                                     ; preds = %28
  %80 = load volatile i1, i1* %9
  %81 = select i1 %80, i32 1857536793, i32 1110013644
  store i32 %81, i32* %27
  br label %395

; <label>:82:                                     ; preds = %28
  %83 = load i32, i32* @x.83
  %84 = load i32, i32* @y.84
  %85 = sub i32 %83, 1343149110
  %86 = sub i32 %85, 1
  %87 = add i32 %86, 1343149110
  %88 = sub i32 %83, 1
  %89 = mul i32 %83, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %84, 10
  %93 = xor i1 %91, true
  %94 = xor i1 %92, true
  %95 = xor i1 false, true
  %96 = and i1 %93, false
  %97 = and i1 %91, %95
  %98 = and i1 %94, false
  %99 = and i1 %92, %95
  %100 = or i1 %96, %97
  %101 = or i1 %98, %99
  %102 = xor i1 %100, %101
  %103 = or i1 %93, %94
  %104 = xor i1 %103, true
  %105 = or i1 false, %95
  %106 = and i1 %104, %105
  %107 = or i1 %102, %106
  %108 = or i1 %91, %92
  %109 = select i1 %107, i32 -2124183868, i32 -1953772107
  store i32 %109, i32* %27
  br label %395

; <label>:110:                                    ; preds = %28
  %111 = load volatile i32*, i32** %12
  %112 = load i32, i32* %111, align 4
  %113 = load volatile %class.anon.32*, %class.anon.32** %10
  %114 = getelementptr inbounds %class.anon.32, %class.anon.32* %113, i32 0, i32 0
  %115 = load i32*, i32** %114, align 8
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %112, %116
  store i1 %117, i1* %8
  %118 = load i32, i32* @x.83
  %119 = load i32, i32* @y.84
  %120 = sub i32 %118, 338024301
  %121 = sub i32 %120, 1
  %122 = add i32 %121, 338024301
  %123 = sub i32 %118, 1
  %124 = mul i32 %118, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %119, 10
  %128 = xor i1 %126, true
  %129 = xor i1 %127, true
  %130 = xor i1 true, true
  %131 = and i1 %128, true
  %132 = and i1 %126, %130
  %133 = and i1 %129, true
  %134 = and i1 %127, %130
  %135 = or i1 %131, %132
  %136 = or i1 %133, %134
  %137 = xor i1 %135, %136
  %138 = or i1 %128, %129
  %139 = xor i1 %138, true
  %140 = or i1 true, %130
  %141 = and i1 %139, %140
  %142 = or i1 %137, %141
  %143 = or i1 %126, %127
  %144 = select i1 %142, i32 1826350836, i32 -1953772107
  store i32 %144, i32* %27
  br label %395

; <label>:145:                                    ; preds = %28
  %146 = load volatile i1, i1* %8
  %147 = select i1 %146, i32 1857536793, i32 1154093325
  store i32 %147, i32* %27
  br label %395

; <label>:148:                                    ; preds = %28
  %149 = load i32, i32* @x.83
  %150 = load i32, i32* @y.84
  %151 = add i32 %149, -1664099085
  %152 = sub i32 %151, 1
  %153 = sub i32 %152, -1664099085
  %154 = sub i32 %149, 1
  %155 = mul i32 %149, %153
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %150, 10
  %159 = and i1 %157, %158
  %160 = xor i1 %157, %158
  %161 = or i1 %159, %160
  %162 = or i1 %157, %158
  %163 = select i1 %161, i32 -1002748925, i32 235058329
  store i32 %163, i32* %27
  br label %395

; <label>:164:                                    ; preds = %28
  %165 = load volatile i32*, i32** %13
  %166 = load i32, i32* %165, align 4
  %167 = icmp eq i32 %166, -1
  store i1 %167, i1* %7
  %168 = load i32, i32* @x.83
  %169 = load i32, i32* @y.84
  %170 = sub i32 0, 1
  %171 = add i32 %168, %170
  %172 = sub i32 %168, 1
  %173 = mul i32 %168, %171
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %169, 10
  %177 = xor i1 %175, true
  %178 = xor i1 %176, true
  %179 = xor i1 true, true
  %180 = and i1 %177, true
  %181 = and i1 %175, %179
  %182 = and i1 %178, true
  %183 = and i1 %176, %179
  %184 = or i1 %180, %181
  %185 = or i1 %182, %183
  %186 = xor i1 %184, %185
  %187 = or i1 %177, %178
  %188 = xor i1 %187, true
  %189 = or i1 true, %179
  %190 = and i1 %188, %189
  %191 = or i1 %186, %190
  %192 = or i1 %175, %176
  %193 = select i1 %191, i32 1771928625, i32 235058329
  store i32 %193, i32* %27
  br label %395

; <label>:194:                                    ; preds = %28
  %195 = load volatile i1, i1* %7
  %196 = select i1 %195, i32 1857536793, i32 1089840632
  store i32 %196, i32* %27
  br label %395

; <label>:197:                                    ; preds = %28
  %198 = load i32, i32* @x.83
  %199 = load i32, i32* @y.84
  %200 = add i32 %198, 319538074
  %201 = sub i32 %200, 1
  %202 = sub i32 %201, 319538074
  %203 = sub i32 %198, 1
  %204 = mul i32 %198, %202
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %199, 10
  %208 = xor i1 %206, true
  %209 = xor i1 %207, true
  %210 = xor i1 true, true
  %211 = and i1 %208, true
  %212 = and i1 %206, %210
  %213 = and i1 %209, true
  %214 = and i1 %207, %210
  %215 = or i1 %211, %212
  %216 = or i1 %213, %214
  %217 = xor i1 %215, %216
  %218 = or i1 %208, %209
  %219 = xor i1 %218, true
  %220 = or i1 true, %210
  %221 = and i1 %219, %220
  %222 = or i1 %217, %221
  %223 = or i1 %206, %207
  %224 = select i1 %222, i32 1321234750, i32 661135392
  store i32 %224, i32* %27
  br label %395

; <label>:225:                                    ; preds = %28
  %226 = load volatile i32*, i32** %13
  %227 = load i32, i32* %226, align 4
  %228 = load volatile %class.anon.32*, %class.anon.32** %10
  %229 = getelementptr inbounds %class.anon.32, %class.anon.32* %228, i32 0, i32 1
  %230 = load i32*, i32** %229, align 8
  %231 = load i32, i32* %230, align 4
  %232 = icmp eq i32 %227, %231
  store i1 %232, i1* %6
  %233 = load i32, i32* @x.83
  %234 = load i32, i32* @y.84
  %235 = sub i32 %233, -1841710208
  %236 = sub i32 %235, 1
  %237 = add i32 %236, -1841710208
  %238 = sub i32 %233, 1
  %239 = mul i32 %233, %237
  %240 = urem i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = icmp slt i32 %234, 10
  %243 = xor i1 %241, true
  %244 = xor i1 %242, true
  %245 = xor i1 true, true
  %246 = and i1 %243, true
  %247 = and i1 %241, %245
  %248 = and i1 %244, true
  %249 = and i1 %242, %245
  %250 = or i1 %246, %247
  %251 = or i1 %248, %249
  %252 = xor i1 %250, %251
  %253 = or i1 %243, %244
  %254 = xor i1 %253, true
  %255 = or i1 true, %245
  %256 = and i1 %254, %255
  %257 = or i1 %252, %256
  %258 = or i1 %241, %242
  %259 = select i1 %257, i32 1103115918, i32 661135392
  store i32 %259, i32* %27
  br label %395

; <label>:260:                                    ; preds = %28
  %261 = load volatile i1, i1* %6
  %262 = select i1 %261, i32 1857536793, i32 -173032305
  store i32 %262, i32* %27
  br label %395

; <label>:263:                                    ; preds = %28
  %264 = load volatile i1*, i1** %14
  store i1 false, i1* %264, align 1
  store i32 752273456, i32* %27
  br label %395

; <label>:265:                                    ; preds = %28
  %266 = load i32, i32* @x.83
  %267 = load i32, i32* @y.84
  %268 = sub i32 0, 1
  %269 = add i32 %266, %268
  %270 = sub i32 %266, 1
  %271 = mul i32 %266, %269
  %272 = urem i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %267, 10
  %275 = xor i1 %273, true
  %276 = xor i1 %274, true
  %277 = xor i1 false, true
  %278 = and i1 %275, false
  %279 = and i1 %273, %277
  %280 = and i1 %276, false
  %281 = and i1 %274, %277
  %282 = or i1 %278, %279
  %283 = or i1 %280, %281
  %284 = xor i1 %282, %283
  %285 = or i1 %275, %276
  %286 = xor i1 %285, true
  %287 = or i1 false, %277
  %288 = and i1 %286, %287
  %289 = or i1 %284, %288
  %290 = or i1 %273, %274
  %291 = select i1 %289, i32 1989973512, i32 -322643693
  store i32 %291, i32* %27
  br label %395

; <label>:292:                                    ; preds = %28
  %293 = load volatile %class.anon.32*, %class.anon.32** %10
  %294 = getelementptr inbounds %class.anon.32, %class.anon.32* %293, i32 0, i32 2
  %295 = load %"class.std::vector"*, %"class.std::vector"** %294, align 8
  %296 = load volatile i32*, i32** %13
  %297 = load i32, i32* %296, align 4
  %298 = sext i32 %297 to i64
  %299 = call dereferenceable(24) %"class.std::vector.6"* @_ZNSt6vectorIS_IcSaIcEESaIS1_EEixEm(%"class.std::vector"* %295, i64 %298) #3
  %300 = load volatile i32*, i32** %12
  %301 = load i32, i32* %300, align 4
  %302 = sext i32 %301 to i64
  %303 = call dereferenceable(1) i8* @_ZNSt6vectorIcSaIcEEixEm(%"class.std::vector.6"* %299, i64 %302) #3
  %304 = load i8, i8* %303, align 1
  %305 = sext i8 %304 to i32
  %306 = icmp eq i32 %305, 35
  store i1 %306, i1* %5
  %307 = load i32, i32* @x.83
  %308 = load i32, i32* @y.84
  %309 = add i32 %307, 976168378
  %310 = sub i32 %309, 1
  %311 = sub i32 %310, 976168378
  %312 = sub i32 %307, 1
  %313 = mul i32 %307, %311
  %314 = urem i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %308, 10
  %317 = and i1 %315, %316
  %318 = xor i1 %315, %316
  %319 = or i1 %317, %318
  %320 = or i1 %315, %316
  %321 = select i1 %319, i32 200769676, i32 -322643693
  store i32 %321, i32* %27
  br label %395

; <label>:322:                                    ; preds = %28
  %323 = load volatile i1, i1* %5
  %324 = select i1 %323, i32 -1239526605, i32 1273997652
  store i32 %324, i32* %27
  br label %395

; <label>:325:                                    ; preds = %28
  %326 = load volatile i1*, i1** %14
  store i1 false, i1* %326, align 1
  store i32 752273456, i32* %27
  br label %395

; <label>:327:                                    ; preds = %28
  %328 = load volatile %class.anon.32*, %class.anon.32** %10
  %329 = getelementptr inbounds %class.anon.32, %class.anon.32* %328, i32 0, i32 3
  %330 = load %"class.std::vector.11"*, %"class.std::vector.11"** %329, align 8
  %331 = load volatile i32*, i32** %13
  %332 = load i32, i32* %331, align 4
  %333 = sext i32 %332 to i64
  %334 = call dereferenceable(24) %"class.std::vector.16"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.11"* %330, i64 %333) #3
  %335 = load volatile i32*, i32** %12
  %336 = load i32, i32* %335, align 4
  %337 = sext i32 %336 to i64
  %338 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.16"* %334, i64 %337) #3
  %339 = load i32, i32* %338, align 4
  %340 = load volatile i32*, i32** %11
  %341 = load i32, i32* %340, align 4
  %342 = icmp sle i32 %339, %341
  %343 = select i1 %342, i32 -1388096009, i32 -707132922
  store i32 %343, i32* %27
  br label %395

; <label>:344:                                    ; preds = %28
  %345 = load volatile i1*, i1** %14
  store i1 false, i1* %345, align 1
  store i32 752273456, i32* %27
  br label %395

; <label>:346:                                    ; preds = %28
  %347 = load volatile i1*, i1** %14
  store i1 true, i1* %347, align 1
  store i32 752273456, i32* %27
  br label %395

; <label>:348:                                    ; preds = %28
  %349 = load volatile i1*, i1** %14
  %350 = load i1, i1* %349, align 1
  ret i1 %350

; <label>:351:                                    ; preds = %28
  %352 = alloca i1, align 1
  %353 = alloca %class.anon.32*, align 8
  %354 = alloca i32, align 4
  %355 = alloca i32, align 4
  %356 = alloca i32, align 4
  store %class.anon.32* %0, %class.anon.32** %353, align 8
  store i32 %1, i32* %354, align 4
  store i32 %2, i32* %355, align 4
  store i32 %3, i32* %356, align 4
  %357 = load %class.anon.32*, %class.anon.32** %353, align 8
  %358 = load i32, i32* %355, align 4
  %359 = icmp eq i32 %358, -1
  store i32 -1686784704, i32* %27
  br label %395

; <label>:360:                                    ; preds = %28
  %361 = load volatile i32*, i32** %12
  %362 = load i32, i32* %361, align 4
  %363 = load volatile %class.anon.32*, %class.anon.32** %10
  %364 = getelementptr inbounds %class.anon.32, %class.anon.32* %363, i32 0, i32 0
  %365 = load i32*, i32** %364, align 8
  %366 = load i32, i32* %365, align 4
  %367 = icmp eq i32 %362, %366
  store i32 -2124183868, i32* %27
  br label %395

; <label>:368:                                    ; preds = %28
  %369 = load volatile i32*, i32** %13
  %370 = load i32, i32* %369, align 4
  %371 = icmp eq i32 %370, -1
  store i32 -1002748925, i32* %27
  br label %395

; <label>:372:                                    ; preds = %28
  %373 = load volatile i32*, i32** %13
  %374 = load i32, i32* %373, align 4
  %375 = load volatile %class.anon.32*, %class.anon.32** %10
  %376 = getelementptr inbounds %class.anon.32, %class.anon.32* %375, i32 0, i32 1
  %377 = load i32*, i32** %376, align 8
  %378 = load i32, i32* %377, align 4
  %379 = icmp eq i32 %374, %378
  store i32 1321234750, i32* %27
  br label %395

; <label>:380:                                    ; preds = %28
  %381 = load volatile %class.anon.32*, %class.anon.32** %10
  %382 = getelementptr inbounds %class.anon.32, %class.anon.32* %381, i32 0, i32 2
  %383 = load %"class.std::vector"*, %"class.std::vector"** %382, align 8
  %384 = load volatile i32*, i32** %13
  %385 = load i32, i32* %384, align 4
  %386 = sext i32 %385 to i64
  %387 = call dereferenceable(24) %"class.std::vector.6"* @_ZNSt6vectorIS_IcSaIcEESaIS1_EEixEm(%"class.std::vector"* %383, i64 %386) #3
  %388 = load volatile i32*, i32** %12
  %389 = load i32, i32* %388, align 4
  %390 = sext i32 %389 to i64
  %391 = call dereferenceable(1) i8* @_ZNSt6vectorIcSaIcEEixEm(%"class.std::vector.6"* %387, i64 %390) #3
  %392 = load i8, i8* %391, align 1
  %393 = sext i8 %392 to i32
  %394 = icmp eq i32 %393, 35
  store i32 1989973512, i32* %27
  br label %395

; <label>:395:                                    ; preds = %380, %372, %368, %360, %351, %346, %344, %327, %325, %322, %292, %265, %263, %260, %225, %197, %194, %164, %148, %145, %110, %82, %79, %51, %31, %30
  br label %28
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPZ4mainE9DirectionSt6vectorIS1_SaIS1_EEEppEv(%"class.__gnu_cxx::__normal_iterator"*) #4 align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.85
  %6 = load i32, i32* @y.86
  %7 = add i32 %5, -426443581
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -426443581
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 522394691, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %57
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 522394691, label %19
    i32 1164216647, label %27
    i32 1926993714, label %49
    i32 -705366522, label %51
  ]

; <label>:18:                                     ; preds = %16
  br label %57

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1164216647, i32 -705366522
  store i32 %26, i32* %15
  br label %57

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %29, %"class.__gnu_cxx::__normal_iterator"** %2
  %30 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %30, i32 0, i32 0
  %32 = load %struct.Direction*, %struct.Direction** %31, align 8
  %33 = getelementptr inbounds %struct.Direction, %struct.Direction* %32, i32 1
  store %struct.Direction* %33, %struct.Direction** %31, align 8
  %34 = load i32, i32* @x.85
  %35 = load i32, i32* @y.86
  %36 = sub i32 %34, -71497812
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -71497812
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 1926993714, i32 -705366522
  store i32 %48, i32* %15
  br label %57

; <label>:49:                                     ; preds = %16
  %50 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2
  ret %"class.__gnu_cxx::__normal_iterator"* %50

; <label>:51:                                     ; preds = %16
  %52 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %52, align 8
  %53 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %52, align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %53, i32 0, i32 0
  %55 = load %struct.Direction*, %struct.Direction** %54, align 8
  %56 = getelementptr inbounds %struct.Direction, %struct.Direction* %55, i32 1
  store %struct.Direction* %56, %struct.Direction** %54, align 8
  store i32 1164216647, i32* %15
  br label %57

; <label>:57:                                     ; preds = %51, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define internal i32 @"_ZZ4mainENK3$_2clEii"(%class.anon.33*, i32, i32) #0 align 2 {
  %4 = alloca %class.anon.33*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %class.anon.34, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %"class.std::initializer_list.35", align 8
  %13 = alloca [4 x i32], align 4
  store %class.anon.33* %0, %class.anon.33** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %14 = load %class.anon.33*, %class.anon.33** %4, align 8
  %15 = getelementptr inbounds %class.anon.34, %class.anon.34* %7, i32 0, i32 0
  %16 = getelementptr inbounds %class.anon.33, %class.anon.33* %14, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  store i32* %17, i32** %15, align 8
  %18 = load i32, i32* %6, align 4
  %19 = call i32 @"_ZZZ4mainENK3$_2clEiiENKUliE_clEi"(%class.anon.34* %7, i32 %18)
  store i32 %19, i32* %8, align 4
  %20 = getelementptr inbounds %class.anon.33, %class.anon.33* %14, i32 0, i32 1
  %21 = load i32*, i32** %20, align 8
  %22 = load i32, i32* %21, align 4
  %23 = load i32, i32* %6, align 4
  %24 = sub i32 %22, 592879936
  %25 = sub i32 %24, %23
  %26 = add i32 %25, 592879936
  %27 = sub nsw i32 %22, %23
  %28 = add i32 %26, 1364566052
  %29 = sub i32 %28, 1
  %30 = sub i32 %29, 1364566052
  %31 = sub nsw i32 %26, 1
  %32 = call i32 @"_ZZZ4mainENK3$_2clEiiENKUliE_clEi"(%class.anon.34* %7, i32 %30)
  store i32 %32, i32* %9, align 4
  %33 = load i32, i32* %5, align 4
  %34 = call i32 @"_ZZZ4mainENK3$_2clEiiENKUliE_clEi"(%class.anon.34* %7, i32 %33)
  store i32 %34, i32* %10, align 4
  %35 = getelementptr inbounds %class.anon.33, %class.anon.33* %14, i32 0, i32 2
  %36 = load i32*, i32** %35, align 8
  %37 = load i32, i32* %36, align 4
  %38 = load i32, i32* %5, align 4
  %39 = add i32 %37, 806029738
  %40 = sub i32 %39, %38
  %41 = sub i32 %40, 806029738
  %42 = sub nsw i32 %37, %38
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub nsw i32 %41, 1
  %46 = call i32 @"_ZZZ4mainENK3$_2clEiiENKUliE_clEi"(%class.anon.34* %7, i32 %44)
  store i32 %46, i32* %11, align 4
  %47 = getelementptr inbounds [4 x i32], [4 x i32]* %13, i64 0, i64 0
  %48 = load i32, i32* %8, align 4
  store i32 %48, i32* %47, align 4
  %49 = getelementptr inbounds i32, i32* %47, i64 1
  %50 = load i32, i32* %9, align 4
  store i32 %50, i32* %49, align 4
  %51 = getelementptr inbounds i32, i32* %49, i64 1
  %52 = load i32, i32* %10, align 4
  store i32 %52, i32* %51, align 4
  %53 = getelementptr inbounds i32, i32* %51, i64 1
  %54 = load i32, i32* %11, align 4
  store i32 %54, i32* %53, align 4
  %55 = getelementptr inbounds %"class.std::initializer_list.35", %"class.std::initializer_list.35"* %12, i32 0, i32 0
  %56 = getelementptr inbounds [4 x i32], [4 x i32]* %13, i64 0, i64 0
  store i32* %56, i32** %55, align 8
  %57 = getelementptr inbounds %"class.std::initializer_list.35", %"class.std::initializer_list.35"* %12, i32 0, i32 1
  store i64 4, i64* %57, align 8
  %58 = bitcast %"class.std::initializer_list.35"* %12 to { i32*, i64 }*
  %59 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %58, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8
  %61 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %58, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = call i32 @_ZSt3minIiET_St16initializer_listIS0_E(i32* %60, i64 %62)
  ret i32 %63
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4), i32* dereferenceable(4)) #4 comdat {
  %3 = alloca i32
  %4 = alloca i32
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  store i32* %0, i32** %6, align 8
  store i32* %1, i32** %7, align 8
  %8 = load i32*, i32** %7, align 8
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %4
  %10 = load i32*, i32** %6, align 8
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %3
  %12 = alloca i32
  store i32 -415969551, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %73
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -415969551, label %16
    i32 1189450236, label %21
    i32 -711143510, label %23
    i32 -715223222, label %51
    i32 -776797015, label %68
    i32 2052256660, label %69
    i32 1066612834, label %71
  ]

; <label>:15:                                     ; preds = %13
  br label %73

; <label>:16:                                     ; preds = %13
  %17 = load volatile i32, i32* %4
  %18 = load volatile i32, i32* %3
  %19 = icmp slt i32 %17, %18
  %20 = select i1 %19, i32 1189450236, i32 -711143510
  store i32 %20, i32* %12
  br label %73

; <label>:21:                                     ; preds = %13
  %22 = load i32*, i32** %7, align 8
  store i32* %22, i32** %5, align 8
  store i32 2052256660, i32* %12
  br label %73

; <label>:23:                                     ; preds = %13
  %24 = load i32, i32* @x.89
  %25 = load i32, i32* @y.90
  %26 = add i32 %24, -1777332547
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, -1777332547
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 true, true
  %37 = and i1 %34, true
  %38 = and i1 %32, %36
  %39 = and i1 %35, true
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 true, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  %50 = select i1 %48, i32 -715223222, i32 1066612834
  store i32 %50, i32* %12
  br label %73

; <label>:51:                                     ; preds = %13
  %52 = load i32*, i32** %6, align 8
  store i32* %52, i32** %5, align 8
  %53 = load i32, i32* @x.89
  %54 = load i32, i32* @y.90
  %55 = add i32 %53, 726116013
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, 726116013
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 -776797015, i32 1066612834
  store i32 %67, i32* %12
  br label %73

; <label>:68:                                     ; preds = %13
  store i32 2052256660, i32* %12
  br label %73

; <label>:69:                                     ; preds = %13
  %70 = load i32*, i32** %5, align 8
  ret i32* %70

; <label>:71:                                     ; preds = %13
  %72 = load i32*, i32** %6, align 8
  store i32* %72, i32** %5, align 8
  store i32 -715223222, i32* %12
  br label %73

; <label>:73:                                     ; preds = %71, %68, %51, %23, %21, %16, %15
  br label %13
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSt6vectorIZ4mainE9DirectionSaIS0_EED2Ev(%"class.std::vector.27"*) unnamed_addr #4 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.91
  %3 = load i32, i32* @y.92
  %4 = sub i32 %2, -290186961
  %5 = sub i32 %4, 1
  %6 = add i32 %5, -290186961
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %161

; <label>:16:                                     ; preds = %1, %161
  %17 = alloca %"class.std::vector.27"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"class.std::vector.27"* %0, %"class.std::vector.27"** %17, align 8
  %20 = load %"class.std::vector.27"*, %"class.std::vector.27"** %17, align 8
  %21 = bitcast %"class.std::vector.27"* %20 to %"struct.std::_Vector_base.28"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base.28", %"struct.std::_Vector_base.28"* %21, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl", %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"* %22, i32 0, i32 0
  %24 = load %struct.Direction*, %struct.Direction** %23, align 8
  %25 = bitcast %"class.std::vector.27"* %20 to %"struct.std::_Vector_base.28"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.28", %"struct.std::_Vector_base.28"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl", %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"* %26, i32 0, i32 1
  %28 = load %struct.Direction*, %struct.Direction** %27, align 8
  %29 = bitcast %"class.std::vector.27"* %20 to %"struct.std::_Vector_base.28"*
  %30 = call dereferenceable(1) %"class.std::allocator.29"* @_ZNSt12_Vector_baseIZ4mainE9DirectionSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.28"* %29) #3
  %31 = load i32, i32* @x.91
  %32 = load i32, i32* @y.92
  %33 = add i32 %31, -487930307
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -487930307
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  br i1 %55, label %57, label %161

; <label>:57:                                     ; preds = %16
  invoke void @_ZSt8_DestroyIPZ4mainE9DirectionS0_EvT_S2_RSaIT0_E(%struct.Direction* %24, %struct.Direction* %28, %"class.std::allocator.29"* dereferenceable(1) %30)
          to label %58 unwind label %101

; <label>:58:                                     ; preds = %57
  %59 = load i32, i32* @x.91
  %60 = load i32, i32* @y.92
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  br i1 %70, label %72, label %176

; <label>:72:                                     ; preds = %58, %176
  %73 = bitcast %"class.std::vector.27"* %20 to %"struct.std::_Vector_base.28"*
  call void @_ZNSt12_Vector_baseIZ4mainE9DirectionSaIS0_EED2Ev(%"struct.std::_Vector_base.28"* %73) #3
  %74 = load i32, i32* @x.91
  %75 = load i32, i32* @y.92
  %76 = add i32 %74, 693928133
  %77 = sub i32 %76, 1
  %78 = sub i32 %77, 693928133
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = xor i1 %82, true
  %85 = xor i1 %83, true
  %86 = xor i1 true, true
  %87 = and i1 %84, true
  %88 = and i1 %82, %86
  %89 = and i1 %85, true
  %90 = and i1 %83, %86
  %91 = or i1 %87, %88
  %92 = or i1 %89, %90
  %93 = xor i1 %91, %92
  %94 = or i1 %84, %85
  %95 = xor i1 %94, true
  %96 = or i1 true, %86
  %97 = and i1 %95, %96
  %98 = or i1 %93, %97
  %99 = or i1 %82, %83
  br i1 %98, label %100, label %176

; <label>:100:                                    ; preds = %72
  ret void

; <label>:101:                                    ; preds = %57
  %102 = load i32, i32* @x.91
  %103 = load i32, i32* @y.92
  %104 = sub i32 0, 1
  %105 = add i32 %102, %104
  %106 = sub i32 %102, 1
  %107 = mul i32 %102, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %103, 10
  %111 = xor i1 %109, true
  %112 = xor i1 %110, true
  %113 = xor i1 false, true
  %114 = and i1 %111, false
  %115 = and i1 %109, %113
  %116 = and i1 %112, false
  %117 = and i1 %110, %113
  %118 = or i1 %114, %115
  %119 = or i1 %116, %117
  %120 = xor i1 %118, %119
  %121 = or i1 %111, %112
  %122 = xor i1 %121, true
  %123 = or i1 false, %113
  %124 = and i1 %122, %123
  %125 = or i1 %120, %124
  %126 = or i1 %109, %110
  br i1 %125, label %127, label %178

; <label>:127:                                    ; preds = %101, %178
  %128 = landingpad { i8*, i32 }
          catch i8* null
  %129 = extractvalue { i8*, i32 } %128, 0
  store i8* %129, i8** %18, align 8
  %130 = extractvalue { i8*, i32 } %128, 1
  store i32 %130, i32* %19, align 4
  %131 = bitcast %"class.std::vector.27"* %20 to %"struct.std::_Vector_base.28"*
  call void @_ZNSt12_Vector_baseIZ4mainE9DirectionSaIS0_EED2Ev(%"struct.std::_Vector_base.28"* %131) #3
  %132 = load i32, i32* @x.91
  %133 = load i32, i32* @y.92
  %134 = sub i32 %132, 9061512
  %135 = sub i32 %134, 1
  %136 = add i32 %135, 9061512
  %137 = sub i32 %132, 1
  %138 = mul i32 %132, %136
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %133, 10
  %142 = xor i1 %140, true
  %143 = xor i1 %141, true
  %144 = xor i1 true, true
  %145 = and i1 %142, true
  %146 = and i1 %140, %144
  %147 = and i1 %143, true
  %148 = and i1 %141, %144
  %149 = or i1 %145, %146
  %150 = or i1 %147, %148
  %151 = xor i1 %149, %150
  %152 = or i1 %142, %143
  %153 = xor i1 %152, true
  %154 = or i1 true, %144
  %155 = and i1 %153, %154
  %156 = or i1 %151, %155
  %157 = or i1 %140, %141
  br i1 %156, label %158, label %178

; <label>:158:                                    ; preds = %127
  br label %159

; <label>:159:                                    ; preds = %158
  %160 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %160) #13
  unreachable

; <label>:161:                                    ; preds = %16, %1
  %162 = alloca %"class.std::vector.27"*, align 8
  %163 = alloca i8*
  %164 = alloca i32
  store %"class.std::vector.27"* %0, %"class.std::vector.27"** %162, align 8
  %165 = load %"class.std::vector.27"*, %"class.std::vector.27"** %162, align 8
  %166 = bitcast %"class.std::vector.27"* %165 to %"struct.std::_Vector_base.28"*
  %167 = getelementptr inbounds %"struct.std::_Vector_base.28", %"struct.std::_Vector_base.28"* %166, i32 0, i32 0
  %168 = getelementptr inbounds %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl", %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"* %167, i32 0, i32 0
  %169 = load %struct.Direction*, %struct.Direction** %168, align 8
  %170 = bitcast %"class.std::vector.27"* %165 to %"struct.std::_Vector_base.28"*
  %171 = getelementptr inbounds %"struct.std::_Vector_base.28", %"struct.std::_Vector_base.28"* %170, i32 0, i32 0
  %172 = getelementptr inbounds %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl", %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"* %171, i32 0, i32 1
  %173 = load %struct.Direction*, %struct.Direction** %172, align 8
  %174 = bitcast %"class.std::vector.27"* %165 to %"struct.std::_Vector_base.28"*
  %175 = call dereferenceable(1) %"class.std::allocator.29"* @_ZNSt12_Vector_baseIZ4mainE9DirectionSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.28"* %174) #3
  br label %16

; <label>:176:                                    ; preds = %72, %58
  %177 = bitcast %"class.std::vector.27"* %20 to %"struct.std::_Vector_base.28"*
  call void @_ZNSt12_Vector_baseIZ4mainE9DirectionSaIS0_EED2Ev(%"struct.std::_Vector_base.28"* %177) #3
  br label %72

; <label>:178:                                    ; preds = %127, %101
  %179 = landingpad { i8*, i32 }
          catch i8* null
  %180 = extractvalue { i8*, i32 } %179, 0
  store i8* %180, i8** %18, align 8
  %181 = extractvalue { i8*, i32 } %179, 1
  store i32 %181, i32* %19, align 4
  %182 = bitcast %"class.std::vector.27"* %20 to %"struct.std::_Vector_base.28"*
  call void @_ZNSt12_Vector_baseIZ4mainE9DirectionSaIS0_EED2Ev(%"struct.std::_Vector_base.28"* %182) #3
  br label %127
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSt5queueIZ4mainE5PointSt5dequeIS0_SaIS0_EEED2Ev(%"class.std::queue.19"*) unnamed_addr #4 align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.93
  %5 = load i32, i32* @y.94
  %6 = add i32 %4, -1309691730
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1309691730
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1654291776, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1654291776, label %18
    i32 -1234288419, label %38
    i32 -1451744034, label %57
    i32 -1596476420, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1234288419, i32 -1596476420
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::queue.19"*, align 8
  store %"class.std::queue.19"* %0, %"class.std::queue.19"** %39, align 8
  %40 = load %"class.std::queue.19"*, %"class.std::queue.19"** %39, align 8
  %41 = getelementptr inbounds %"class.std::queue.19", %"class.std::queue.19"* %40, i32 0, i32 0
  call void @_ZNSt5dequeIZ4mainE5PointSaIS0_EED2Ev(%"class.std::deque.20"* %41) #3
  %42 = load i32, i32* @x.93
  %43 = load i32, i32* @y.94
  %44 = sub i32 %42, -470864327
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -470864327
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1451744034, i32 -1596476420
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::queue.19"*, align 8
  store %"class.std::queue.19"* %0, %"class.std::queue.19"** %59, align 8
  %60 = load %"class.std::queue.19"*, %"class.std::queue.19"** %59, align 8
  %61 = getelementptr inbounds %"class.std::queue.19", %"class.std::queue.19"* %60, i32 0, i32 0
  call void @_ZNSt5dequeIZ4mainE5PointSaIS0_EED2Ev(%"class.std::deque.20"* %61) #3
  store i32 -1234288419, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.11"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.11"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %2, align 8
  %5 = load %"class.std::vector.11"*, %"class.std::vector.11"** %2, align 8
  %6 = bitcast %"class.std::vector.11"* %5 to %"struct.std::_Vector_base.12"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.16"*, %"class.std::vector.16"** %8, align 8
  %10 = bitcast %"class.std::vector.11"* %5 to %"struct.std::_Vector_base.12"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::vector.16"*, %"class.std::vector.16"** %12, align 8
  %14 = bitcast %"class.std::vector.11"* %5 to %"struct.std::_Vector_base.12"*
  %15 = call dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %14) #3
  invoke void @_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::vector.16"* %9, %"class.std::vector.16"* %13, %"class.std::allocator.13"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.11"* %5 to %"struct.std::_Vector_base.12"*
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base.12"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = load i32, i32* @x.95
  %20 = load i32, i32* @y.96
  %21 = add i32 %19, 970113465
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, 970113465
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  br i1 %31, label %33, label %55

; <label>:33:                                     ; preds = %18, %55
  %34 = landingpad { i8*, i32 }
          catch i8* null
  %35 = extractvalue { i8*, i32 } %34, 0
  store i8* %35, i8** %3, align 8
  %36 = extractvalue { i8*, i32 } %34, 1
  store i32 %36, i32* %4, align 4
  %37 = bitcast %"class.std::vector.11"* %5 to %"struct.std::_Vector_base.12"*
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base.12"* %37) #3
  %38 = load i32, i32* @x.95
  %39 = load i32, i32* @y.96
  %40 = sub i32 %38, -1167332585
  %41 = sub i32 %40, 1
  %42 = add i32 %41, -1167332585
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %55

; <label>:52:                                     ; preds = %33
  br label %53

; <label>:53:                                     ; preds = %52
  %54 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %54) #13
  unreachable

; <label>:55:                                     ; preds = %33, %18
  %56 = landingpad { i8*, i32 }
          catch i8* null
  %57 = extractvalue { i8*, i32 } %56, 0
  store i8* %57, i8** %3, align 8
  %58 = extractvalue { i8*, i32 } %56, 1
  store i32 %58, i32* %4, align 4
  %59 = bitcast %"class.std::vector.11"* %5 to %"struct.std::_Vector_base.12"*
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base.12"* %59) #3
  br label %33
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IcSaIcEESaIS1_EED2Ev(%"class.std::vector"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.6"*, %"class.std::vector.6"** %8, align 8
  %10 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::vector.6"*, %"class.std::vector.6"** %12, align 8
  %14 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator.3"* @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %14) #3
  invoke void @_ZSt8_DestroyIPSt6vectorIcSaIcEES2_EvT_S4_RSaIT0_E(%"class.std::vector.6"* %9, %"class.std::vector.6"* %13, %"class.std::allocator.3"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EED2Ev(%"struct.std::_Vector_base"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EED2Ev(%"struct.std::_Vector_base"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %24) #13
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIxxEC2IRiS2_vEEOT_OT0_(%"struct.std::pair.18"*, i32* dereferenceable(4), i32* dereferenceable(4)) unnamed_addr #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.99
  %7 = load i32, i32* @y.100
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -905494186, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %85
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -905494186, label %19
    i32 1356367337, label %39
    i32 -480886717, label %69
    i32 -783657646, label %70
  ]

; <label>:18:                                     ; preds = %16
  br label %85

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1356367337, i32 -783657646
  store i32 %38, i32* %15
  br label %85

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::pair.18"*, align 8
  %41 = alloca i32*, align 8
  %42 = alloca i32*, align 8
  store %"struct.std::pair.18"* %0, %"struct.std::pair.18"** %40, align 8
  store i32* %1, i32** %41, align 8
  store i32* %2, i32** %42, align 8
  %43 = load %"struct.std::pair.18"*, %"struct.std::pair.18"** %40, align 8
  %44 = getelementptr inbounds %"struct.std::pair.18", %"struct.std::pair.18"* %43, i32 0, i32 0
  %45 = load i32*, i32** %41, align 8
  %46 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %45) #3
  %47 = load i32, i32* %46, align 4
  %48 = sext i32 %47 to i64
  store i64 %48, i64* %44, align 8
  %49 = getelementptr inbounds %"struct.std::pair.18", %"struct.std::pair.18"* %43, i32 0, i32 1
  %50 = load i32*, i32** %42, align 8
  %51 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %50) #3
  %52 = load i32, i32* %51, align 4
  %53 = sext i32 %52 to i64
  store i64 %53, i64* %49, align 8
  %54 = load i32, i32* @x.99
  %55 = load i32, i32* @y.100
  %56 = add i32 %54, -401436571
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, -401436571
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  %68 = select i1 %66, i32 -480886717, i32 -783657646
  store i32 %68, i32* %15
  br label %85

; <label>:69:                                     ; preds = %16
  ret void

; <label>:70:                                     ; preds = %16
  %71 = alloca %"struct.std::pair.18"*, align 8
  %72 = alloca i32*, align 8
  %73 = alloca i32*, align 8
  store %"struct.std::pair.18"* %0, %"struct.std::pair.18"** %71, align 8
  store i32* %1, i32** %72, align 8
  store i32* %2, i32** %73, align 8
  %74 = load %"struct.std::pair.18"*, %"struct.std::pair.18"** %71, align 8
  %75 = getelementptr inbounds %"struct.std::pair.18", %"struct.std::pair.18"* %74, i32 0, i32 0
  %76 = load i32*, i32** %72, align 8
  %77 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %76) #3
  %78 = load i32, i32* %77, align 4
  %79 = sext i32 %78 to i64
  store i64 %79, i64* %75, align 8
  %80 = getelementptr inbounds %"struct.std::pair.18", %"struct.std::pair.18"* %74, i32 0, i32 1
  %81 = load i32*, i32** %73, align 8
  %82 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %81) #3
  %83 = load i32, i32* %82, align 4
  %84 = sext i32 %83 to i64
  store i64 %84, i64* %80, align 8
  store i32 1356367337, i32* %15
  br label %85

; <label>:85:                                     ; preds = %70, %39, %19, %18
  br label %16
}

; Function Attrs: noreturn
declare void @_ZSt21__throw_runtime_errorPKc(i8*) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4)) #4 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.101
  %6 = load i32, i32* @y.102
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 725522852, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %73
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 725522852, label %18
    i32 -75745291, label %38
    i32 -1665706949, label %68
    i32 1929363357, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %73

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -75745291, i32 1929363357
  store i32 %37, i32* %14
  br label %73

; <label>:38:                                     ; preds = %15
  %39 = alloca i32*, align 8
  store i32* %0, i32** %39, align 8
  %40 = load i32*, i32** %39, align 8
  store i32* %40, i32** %2
  %41 = load i32, i32* @x.101
  %42 = load i32, i32* @y.102
  %43 = add i32 %41, -813491298
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -813491298
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -1665706949, i32 1929363357
  store i32 %67, i32* %14
  br label %73

; <label>:68:                                     ; preds = %15
  %69 = load volatile i32*, i32** %2
  ret i32* %69

; <label>:70:                                     ; preds = %15
  %71 = alloca i32*, align 8
  store i32* %0, i32** %71, align 8
  %72 = load i32*, i32** %71, align 8
  store i32 -75745291, i32* %14
  br label %73

; <label>:73:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @"_ZZZ4mainENK3$_2clEiiENKUliE_clEi"(%class.anon.34*, i32) #4 align 2 {
  %3 = alloca i32
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.103
  %7 = load i32, i32* @y.104
  %8 = add i32 %6, 668215844
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 668215844
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 2126409286, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %109
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 2126409286, label %20
    i32 -1967268879, label %28
    i32 358552046, label %62
    i32 1325536835, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %109

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1967268879, i32 1325536835
  store i32 %27, i32* %16
  br label %109

; <label>:28:                                     ; preds = %17
  %29 = alloca %class.anon.34*, align 8
  %30 = alloca i32, align 4
  store %class.anon.34* %0, %class.anon.34** %29, align 8
  store i32 %1, i32* %30, align 4
  %31 = load %class.anon.34*, %class.anon.34** %29, align 8
  %32 = load i32, i32* %30, align 4
  %33 = getelementptr inbounds %class.anon.34, %class.anon.34* %31, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  %35 = load i32, i32* %34, align 4
  %36 = sub i32 %32, 1886584197
  %37 = add i32 %36, %35
  %38 = add i32 %37, 1886584197
  %39 = add nsw i32 %32, %35
  %40 = sub i32 %38, -810307326
  %41 = sub i32 %40, 1
  %42 = add i32 %41, -810307326
  %43 = sub nsw i32 %38, 1
  %44 = getelementptr inbounds %class.anon.34, %class.anon.34* %31, i32 0, i32 0
  %45 = load i32*, i32** %44, align 8
  %46 = load i32, i32* %45, align 4
  %47 = sdiv i32 %42, %46
  store i32 %47, i32* %3
  %48 = load i32, i32* @x.103
  %49 = load i32, i32* @y.104
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 358552046, i32 1325536835
  store i32 %61, i32* %16
  br label %109

; <label>:62:                                     ; preds = %17
  %63 = load volatile i32, i32* %3
  ret i32 %63

; <label>:64:                                     ; preds = %17
  %65 = alloca %class.anon.34*, align 8
  %66 = alloca i32, align 4
  store %class.anon.34* %0, %class.anon.34** %65, align 8
  store i32 %1, i32* %66, align 4
  %67 = load %class.anon.34*, %class.anon.34** %65, align 8
  %68 = load i32, i32* %66, align 4
  %69 = getelementptr inbounds %class.anon.34, %class.anon.34* %67, i32 0, i32 0
  %70 = load i32*, i32** %69, align 8
  %71 = load i32, i32* %70, align 4
  %72 = sub i32 0, 1517782412
  %73 = sub i32 %72, %68
  %74 = add i32 %73, 1517782412
  %75 = sub i32 0, %68
  %76 = sub i32 0, %71
  %77 = sub i32 %74, %76
  %78 = add i32 %74, %71
  %79 = sub i32 0, 843626154
  %80 = sub i32 %79, %68
  %81 = add i32 %80, 843626154
  %82 = sub i32 0, %68
  %83 = sub i32 0, %71
  %84 = sub i32 %81, %83
  %85 = add i32 %81, %71
  %86 = shl i32 %68, %71
  %87 = shl i32 %68, %71
  %88 = add i32 %68, -1461415988
  %89 = add i32 %88, %71
  %90 = sub i32 %89, -1461415988
  %91 = add nsw i32 %68, %71
  %92 = sub i32 0, 1
  %93 = add i32 %90, %92
  %94 = sub i32 %90, 1
  %95 = mul i32 %93, 1
  %96 = add i32 %90, 1119907560
  %97 = sub i32 %96, 1
  %98 = sub i32 %97, 1119907560
  %99 = sub nsw i32 %90, 1
  %100 = getelementptr inbounds %class.anon.34, %class.anon.34* %67, i32 0, i32 0
  %101 = load i32*, i32** %100, align 8
  %102 = load i32, i32* %101, align 4
  %103 = add i32 %98, 68552281
  %104 = sub i32 %103, %102
  %105 = sub i32 %104, 68552281
  %106 = sub i32 %98, %102
  %107 = mul i32 %105, %102
  %108 = sdiv i32 %98, %102
  store i32 -1967268879, i32* %16
  br label %109

; <label>:109:                                    ; preds = %64, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZSt3minIiET_St16initializer_listIS0_E(i32*, i64) #0 comdat {
  %3 = alloca %"class.std::initializer_list.35", align 8
  %4 = bitcast %"class.std::initializer_list.35"* %3 to { i32*, i64 }*
  %5 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %4, i32 0, i32 0
  store i32* %0, i32** %5, align 8
  %6 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %4, i32 0, i32 1
  store i64 %1, i64* %6, align 8
  %7 = call i32* @_ZNKSt16initializer_listIiE5beginEv(%"class.std::initializer_list.35"* %3) #3
  %8 = call i32* @_ZNKSt16initializer_listIiE3endEv(%"class.std::initializer_list.35"* %3) #3
  %9 = call i32* @_ZSt11min_elementIPKiET_S2_S2_(i32* %7, i32* %8)
  %10 = load i32, i32* %9, align 4
  ret i32 %10
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt11min_elementIPKiET_S2_S2_(i32*, i32*) #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %7 = load i32*, i32** %3, align 8
  %8 = load i32*, i32** %4, align 8
  call void @_ZN9__gnu_cxx5__ops16__iter_less_iterEv()
  %9 = call i32* @_ZSt13__min_elementIPKiN9__gnu_cxx5__ops15_Iter_less_iterEET_S5_S5_T0_(i32* %7, i32* %8)
  ret i32* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNKSt16initializer_listIiE5beginEv(%"class.std::initializer_list.35"*) #4 comdat align 2 {
  %2 = alloca %"class.std::initializer_list.35"*, align 8
  store %"class.std::initializer_list.35"* %0, %"class.std::initializer_list.35"** %2, align 8
  %3 = load %"class.std::initializer_list.35"*, %"class.std::initializer_list.35"** %2, align 8
  %4 = getelementptr inbounds %"class.std::initializer_list.35", %"class.std::initializer_list.35"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNKSt16initializer_listIiE3endEv(%"class.std::initializer_list.35"*) #4 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.111
  %6 = load i32, i32* @y.112
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -526073223, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %79
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -526073223, label %18
    i32 750113189, label %38
    i32 -1329281275, label %71
    i32 1907029728, label %73
  ]

; <label>:17:                                     ; preds = %15
  br label %79

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 750113189, i32 1907029728
  store i32 %37, i32* %14
  br label %79

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::initializer_list.35"*, align 8
  store %"class.std::initializer_list.35"* %0, %"class.std::initializer_list.35"** %39, align 8
  %40 = load %"class.std::initializer_list.35"*, %"class.std::initializer_list.35"** %39, align 8
  %41 = call i32* @_ZNKSt16initializer_listIiE5beginEv(%"class.std::initializer_list.35"* %40) #3
  %42 = call i64 @_ZNKSt16initializer_listIiE4sizeEv(%"class.std::initializer_list.35"* %40) #3
  %43 = getelementptr inbounds i32, i32* %41, i64 %42
  store i32* %43, i32** %2
  %44 = load i32, i32* @x.111
  %45 = load i32, i32* @y.112
  %46 = add i32 %44, 1565491353
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 1565491353
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -1329281275, i32 1907029728
  store i32 %70, i32* %14
  br label %79

; <label>:71:                                     ; preds = %15
  %72 = load volatile i32*, i32** %2
  ret i32* %72

; <label>:73:                                     ; preds = %15
  %74 = alloca %"class.std::initializer_list.35"*, align 8
  store %"class.std::initializer_list.35"* %0, %"class.std::initializer_list.35"** %74, align 8
  %75 = load %"class.std::initializer_list.35"*, %"class.std::initializer_list.35"** %74, align 8
  %76 = call i32* @_ZNKSt16initializer_listIiE5beginEv(%"class.std::initializer_list.35"* %75) #3
  %77 = call i64 @_ZNKSt16initializer_listIiE4sizeEv(%"class.std::initializer_list.35"* %75) #3
  %78 = getelementptr inbounds i32, i32* %76, i64 %77
  store i32 750113189, i32* %14
  br label %79

; <label>:79:                                     ; preds = %73, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt13__min_elementIPKiN9__gnu_cxx5__ops15_Iter_less_iterEET_S5_S5_T0_(i32*, i32*) #0 comdat {
  %3 = alloca i32*
  %4 = alloca i32*
  %5 = alloca i32*, align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  store i32* %0, i32** %7, align 8
  store i32* %1, i32** %8, align 8
  %10 = load i32*, i32** %7, align 8
  store i32* %10, i32** %4
  %11 = load i32*, i32** %8, align 8
  store i32* %11, i32** %3
  %12 = alloca i32
  store i32 1430545308, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %110
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1430545308, label %16
    i32 -1739372817, label %21
    i32 -1601683951, label %23
    i32 -1379476940, label %25
    i32 1944591136, label %31
    i32 -1474911950, label %36
    i32 -69932664, label %52
    i32 585097591, label %69
    i32 1689681896, label %70
    i32 780560191, label %86
    i32 304959920, label %102
    i32 1918994640, label %103
    i32 -227956740, label %105
    i32 997585504, label %107
    i32 -1391143652, label %109
  ]

; <label>:15:                                     ; preds = %13
  br label %110

; <label>:16:                                     ; preds = %13
  %17 = load volatile i32*, i32** %4
  %18 = load volatile i32*, i32** %3
  %19 = icmp eq i32* %17, %18
  %20 = select i1 %19, i32 -1739372817, i32 -1601683951
  store i32 %20, i32* %12
  br label %110

; <label>:21:                                     ; preds = %13
  %22 = load i32*, i32** %7, align 8
  store i32* %22, i32** %5, align 8
  store i32 -227956740, i32* %12
  br label %110

; <label>:23:                                     ; preds = %13
  %24 = load i32*, i32** %7, align 8
  store i32* %24, i32** %9, align 8
  store i32 -1379476940, i32* %12
  br label %110

; <label>:25:                                     ; preds = %13
  %26 = load i32*, i32** %7, align 8
  %27 = getelementptr inbounds i32, i32* %26, i32 1
  store i32* %27, i32** %7, align 8
  %28 = load i32*, i32** %8, align 8
  %29 = icmp ne i32* %27, %28
  %30 = select i1 %29, i32 1944591136, i32 1918994640
  store i32 %30, i32* %12
  br label %110

; <label>:31:                                     ; preds = %13
  %32 = load i32*, i32** %7, align 8
  %33 = load i32*, i32** %9, align 8
  %34 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclIPKiS4_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %6, i32* %32, i32* %33)
  %35 = select i1 %34, i32 -1474911950, i32 1689681896
  store i32 %35, i32* %12
  br label %110

; <label>:36:                                     ; preds = %13
  %37 = load i32, i32* @x.113
  %38 = load i32, i32* @y.114
  %39 = sub i32 %37, -884567351
  %40 = sub i32 %39, 1
  %41 = add i32 %40, -884567351
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 -69932664, i32 997585504
  store i32 %51, i32* %12
  br label %110

; <label>:52:                                     ; preds = %13
  %53 = load i32*, i32** %7, align 8
  store i32* %53, i32** %9, align 8
  %54 = load i32, i32* @x.113
  %55 = load i32, i32* @y.114
  %56 = add i32 %54, 449565820
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, 449565820
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  %68 = select i1 %66, i32 585097591, i32 997585504
  store i32 %68, i32* %12
  br label %110

; <label>:69:                                     ; preds = %13
  store i32 1689681896, i32* %12
  br label %110

; <label>:70:                                     ; preds = %13
  %71 = load i32, i32* @x.113
  %72 = load i32, i32* @y.114
  %73 = add i32 %71, 1714151488
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, 1714151488
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  %85 = select i1 %83, i32 780560191, i32 -1391143652
  store i32 %85, i32* %12
  br label %110

; <label>:86:                                     ; preds = %13
  %87 = load i32, i32* @x.113
  %88 = load i32, i32* @y.114
  %89 = sub i32 %87, -1095156377
  %90 = sub i32 %89, 1
  %91 = add i32 %90, -1095156377
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = and i1 %95, %96
  %98 = xor i1 %95, %96
  %99 = or i1 %97, %98
  %100 = or i1 %95, %96
  %101 = select i1 %99, i32 304959920, i32 -1391143652
  store i32 %101, i32* %12
  br label %110

; <label>:102:                                    ; preds = %13
  store i32 -1379476940, i32* %12
  br label %110

; <label>:103:                                    ; preds = %13
  %104 = load i32*, i32** %9, align 8
  store i32* %104, i32** %5, align 8
  store i32 -227956740, i32* %12
  br label %110

; <label>:105:                                    ; preds = %13
  %106 = load i32*, i32** %5, align 8
  ret i32* %106

; <label>:107:                                    ; preds = %13
  %108 = load i32*, i32** %7, align 8
  store i32* %108, i32** %9, align 8
  store i32 -69932664, i32* %12
  br label %110

; <label>:109:                                    ; preds = %13
  store i32 780560191, i32* %12
  br label %110

; <label>:110:                                    ; preds = %109, %107, %103, %102, %86, %70, %69, %52, %36, %31, %25, %23, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops16__iter_less_iterEv() #4 comdat {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclIPKiS4_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"*, i32*, i32*) #4 comdat align 2 {
  %4 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_less_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"struct.__gnu_cxx::__ops::_Iter_less_iter"*, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = load i32, i32* %8, align 4
  %10 = load i32*, i32** %6, align 8
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %9, %11
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt16initializer_listIiE4sizeEv(%"class.std::initializer_list.35"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.119
  %6 = load i32, i32* @y.120
  %7 = add i32 %5, -1228424730
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1228424730
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1817848889, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1817848889, label %19
    i32 1952106217, label %27
    i32 1198935711, label %47
    i32 1141959529, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1952106217, i32 1141959529
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::initializer_list.35"*, align 8
  store %"class.std::initializer_list.35"* %0, %"class.std::initializer_list.35"** %28, align 8
  %29 = load %"class.std::initializer_list.35"*, %"class.std::initializer_list.35"** %28, align 8
  %30 = getelementptr inbounds %"class.std::initializer_list.35", %"class.std::initializer_list.35"* %29, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %2
  %32 = load i32, i32* @x.119
  %33 = load i32, i32* @y.120
  %34 = add i32 %32, -1197207916
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -1197207916
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 1198935711, i32 1141959529
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile i64, i64* %2
  ret i64 %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::initializer_list.35"*, align 8
  store %"class.std::initializer_list.35"* %0, %"class.std::initializer_list.35"** %50, align 8
  %51 = load %"class.std::initializer_list.35"*, %"class.std::initializer_list.35"** %50, align 8
  %52 = getelementptr inbounds %"class.std::initializer_list.35", %"class.std::initializer_list.35"* %51, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  store i32 1952106217, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.1"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.121
  %5 = load i32, i32* @y.122
  %6 = sub i32 %4, 741603895
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 741603895
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 785877932, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 785877932, label %18
    i32 -748820576, label %26
    i32 29087025, label %56
    i32 1203178487, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -748820576, i32 1203178487
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %27, align 8
  %29 = load i32, i32* @x.121
  %30 = load i32, i32* @y.122
  %31 = add i32 %29, -1045837696
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, -1045837696
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 29087025, i32 1203178487
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %58, align 8
  store i32 -748820576, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.1"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueIRKiEESt4pairISt17_Rb_tree_iteratorIiEbEOT_(%"class.std::_Rb_tree"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node_base"*
  %4 = alloca %"class.std::_Rb_tree"*
  %5 = alloca %"struct.std::pair.36", align 8
  %6 = alloca %"class.std::_Rb_tree"*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"struct.std::pair.38", align 8
  %9 = alloca %"struct.std::_Identity", align 1
  %10 = alloca %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node", align 8
  %11 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %12 = alloca i8, align 1
  %13 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %14 = alloca i8, align 1
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %6, align 8
  store i32* %1, i32** %7, align 8
  %15 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
  store %"class.std::_Rb_tree"* %15, %"class.std::_Rb_tree"** %4
  %16 = load i32*, i32** %7, align 8
  %17 = call dereferenceable(4) i32* @_ZNKSt9_IdentityIiEclERKi(%"struct.std::_Identity"* %9, i32* dereferenceable(4) %16)
  %18 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4
  %19 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi(%"class.std::_Rb_tree"* %18, i32* dereferenceable(4) %17)
  %20 = bitcast %"struct.std::pair.38"* %8 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %21 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %20, i32 0, i32 0
  %22 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %19, 0
  store %"struct.std::_Rb_tree_node_base"* %22, %"struct.std::_Rb_tree_node_base"** %21, align 8
  %23 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %20, i32 0, i32 1
  %24 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %19, 1
  store %"struct.std::_Rb_tree_node_base"* %24, %"struct.std::_Rb_tree_node_base"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %8, i32 0, i32 1
  %26 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %25, align 8
  store %"struct.std::_Rb_tree_node_base"* %26, %"struct.std::_Rb_tree_node_base"** %3
  %27 = alloca i32
  store i32 1233271802, i32* %27
  br label %28

; <label>:28:                                     ; preds = %2, %54
  %29 = load i32, i32* %27
  switch i32 %29, label %30 [
    i32 1233271802, label %31
    i32 -520705419, label %35
    i32 -510956670, label %46
    i32 -1874843204, label %51
  ]

; <label>:30:                                     ; preds = %28
  br label %54

; <label>:31:                                     ; preds = %28
  %32 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %3
  %33 = icmp ne %"struct.std::_Rb_tree_node_base"* %32, null
  %34 = select i1 %33, i32 -520705419, i32 -510956670
  store i32 %34, i32* %27
  br label %54

; <label>:35:                                     ; preds = %28
  %36 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4
  call void @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE11_Alloc_nodeC2ERS5_(%"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"* %10, %"class.std::_Rb_tree"* dereferenceable(48) %36)
  %37 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %8, i32 0, i32 0
  %38 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %8, i32 0, i32 1
  %40 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %39, align 8
  %41 = load i32*, i32** %7, align 8
  %42 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %41) #3
  %43 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4
  %44 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IRKiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSD_OT_RT0_(%"class.std::_Rb_tree"* %43, %"struct.std::_Rb_tree_node_base"* %38, %"struct.std::_Rb_tree_node_base"* %40, i32* dereferenceable(4) %42, %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"* dereferenceable(8) %10)
  %45 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %11, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %44, %"struct.std::_Rb_tree_node_base"** %45, align 8
  store i8 1, i8* %12, align 1
  call void @_ZNSt4pairISt17_Rb_tree_iteratorIiEbEC2IS1_bvEEOT_OT0_(%"struct.std::pair.36"* %5, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %11, i8* dereferenceable(1) %12)
  store i32 -1874843204, i32* %27
  br label %54

; <label>:46:                                     ; preds = %28
  %47 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %8, i32 0, i32 0
  %48 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %47, align 8
  %49 = bitcast %"struct.std::_Rb_tree_node_base"* %48 to %"struct.std::_Rb_tree_node"*
  %50 = bitcast %"struct.std::_Rb_tree_node"* %49 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorIiEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %13, %"struct.std::_Rb_tree_node_base"* %50) #3
  store i8 0, i8* %14, align 1
  call void @_ZNSt4pairISt17_Rb_tree_iteratorIiEbEC2IS1_bvEEOT_OT0_(%"struct.std::pair.36"* %5, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %13, i8* dereferenceable(1) %14)
  store i32 -1874843204, i32* %27
  br label %54

; <label>:51:                                     ; preds = %28
  %52 = bitcast %"struct.std::pair.36"* %5 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %53 = load { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %52, align 8
  ret { %"struct.std::_Rb_tree_node_base"*, i8 } %53

; <label>:54:                                     ; preds = %46, %35, %31, %30
  br label %28
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairISt23_Rb_tree_const_iteratorIiEbEC2IRSt17_Rb_tree_iteratorIiERbvEEOT_OT0_(%"struct.std::pair"*, %"struct.std::_Rb_tree_iterator"* dereferenceable(8), i8* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::pair"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %6 = alloca i8*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %4, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %5, align 8
  %10 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardIRSt17_Rb_tree_iteratorIiEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8) %9) #3
  call void @_ZNSt23_Rb_tree_const_iteratorIiEC2ERKSt17_Rb_tree_iteratorIiE(%"struct.std::_Rb_tree_const_iterator"* %8, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %10) #3
  %11 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 1
  %12 = load i8*, i8** %6, align 8
  %13 = call dereferenceable(1) i8* @_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE(i8* dereferenceable(1) %12) #3
  %14 = load i8, i8* %13, align 1
  %15 = trunc i8 %14 to i1
  %16 = zext i1 %15 to i8
  store i8 %16, i8* %11, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE24_M_get_insert_unique_posERKi(%"class.std::_Rb_tree"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node"*
  %4 = alloca i1
  %5 = alloca %"class.std::_Rb_tree"*
  %6 = alloca %"struct.std::pair.38", align 8
  %7 = alloca %"class.std::_Rb_tree"*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %10 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %11 = alloca i8, align 1
  %12 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %13 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %14 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %7, align 8
  store i32* %1, i32** %8, align 8
  %15 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7, align 8
  store %"class.std::_Rb_tree"* %15, %"class.std::_Rb_tree"** %5
  %16 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5
  %17 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_beginEv(%"class.std::_Rb_tree"* %16) #3
  store %"struct.std::_Rb_tree_node"* %17, %"struct.std::_Rb_tree_node"** %9, align 8
  %18 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5
  %19 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_M_endEv(%"class.std::_Rb_tree"* %18) #3
  store %"struct.std::_Rb_tree_node"* %19, %"struct.std::_Rb_tree_node"** %10, align 8
  store i8 1, i8* %11, align 1
  %20 = alloca i32
  store i32 -1703814332, i32* %20
  %21 = alloca %"struct.std::_Rb_tree_node"*
  br label %22

; <label>:22:                                     ; preds = %2, %293
  %23 = load i32, i32* %20
  switch i32 %23, label %24 [
    i32 -1703814332, label %25
    i32 833243877, label %29
    i32 17395979, label %42
    i32 -300667509, label %46
    i32 -630259949, label %50
    i32 289074389, label %79
    i32 1983069176, label %107
    i32 -445071936, label %108
    i32 -226568328, label %114
    i32 1168134174, label %130
    i32 -1605736103, label %162
    i32 -2052758839, label %165
    i32 756859340, label %192
    i32 -800641868, label %220
    i32 1499550061, label %221
    i32 -1633471209, label %248
    i32 -446355438, label %265
    i32 140054341, label %266
    i32 -1375300323, label %267
    i32 -1538011512, label %277
    i32 -668574001, label %278
    i32 -713838379, label %280
    i32 -1831212026, label %283
    i32 1756095968, label %285
    i32 1273525966, label %290
    i32 1584707826, label %291
  ]

; <label>:24:                                     ; preds = %22
  br label %293

; <label>:25:                                     ; preds = %22
  %26 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %27 = icmp ne %"struct.std::_Rb_tree_node"* %26, null
  %28 = select i1 %27, i32 833243877, i32 -445071936
  store i32 %28, i32* %20
  br label %293

; <label>:29:                                     ; preds = %22
  %30 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  store %"struct.std::_Rb_tree_node"* %30, %"struct.std::_Rb_tree_node"** %10, align 8
  %31 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5
  %32 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl", %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl"* %32, i32 0, i32 0
  %34 = load i32*, i32** %8, align 8
  %35 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %36 = call dereferenceable(4) i32* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_S_keyEPKSt13_Rb_tree_nodeIiE(%"struct.std::_Rb_tree_node"* %35)
  %37 = call zeroext i1 @_ZNKSt4lessIiEclERKiS2_(%"struct.std::less"* %33, i32* dereferenceable(4) %34, i32* dereferenceable(4) %36)
  %38 = zext i1 %37 to i8
  store i8 %38, i8* %11, align 1
  %39 = load i8, i8* %11, align 1
  %40 = trunc i8 %39 to i1
  %41 = select i1 %40, i32 17395979, i32 -300667509
  store i32 %41, i32* %20
  br label %293

; <label>:42:                                     ; preds = %22
  %43 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %44 = bitcast %"struct.std::_Rb_tree_node"* %43 to %"struct.std::_Rb_tree_node_base"*
  %45 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %44) #3
  store i32 -630259949, i32* %20
  store %"struct.std::_Rb_tree_node"* %45, %"struct.std::_Rb_tree_node"** %21
  br label %293

; <label>:46:                                     ; preds = %22
  %47 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %48 = bitcast %"struct.std::_Rb_tree_node"* %47 to %"struct.std::_Rb_tree_node_base"*
  %49 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %48) #3
  store i32 -630259949, i32* %20
  store %"struct.std::_Rb_tree_node"* %49, %"struct.std::_Rb_tree_node"** %21
  br label %293

; <label>:50:                                     ; preds = %22
  %51 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %21
  store %"struct.std::_Rb_tree_node"* %51, %"struct.std::_Rb_tree_node"** %3
  %52 = load i32, i32* @x.129
  %53 = load i32, i32* @y.130
  %54 = add i32 %52, 1359644632
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, 1359644632
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 289074389, i32 -1831212026
  store i32 %78, i32* %20
  br label %293

; <label>:79:                                     ; preds = %22
  %80 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %3
  store %"struct.std::_Rb_tree_node"* %80, %"struct.std::_Rb_tree_node"** %9, align 8
  %81 = load i32, i32* @x.129
  %82 = load i32, i32* @y.130
  %83 = sub i32 0, 1
  %84 = add i32 %81, %83
  %85 = sub i32 %81, 1
  %86 = mul i32 %81, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %82, 10
  %90 = xor i1 %88, true
  %91 = xor i1 %89, true
  %92 = xor i1 true, true
  %93 = and i1 %90, true
  %94 = and i1 %88, %92
  %95 = and i1 %91, true
  %96 = and i1 %89, %92
  %97 = or i1 %93, %94
  %98 = or i1 %95, %96
  %99 = xor i1 %97, %98
  %100 = or i1 %90, %91
  %101 = xor i1 %100, true
  %102 = or i1 true, %92
  %103 = and i1 %101, %102
  %104 = or i1 %99, %103
  %105 = or i1 %88, %89
  %106 = select i1 %104, i32 1983069176, i32 -1831212026
  store i32 %106, i32* %20
  br label %293

; <label>:107:                                    ; preds = %22
  store i32 -1703814332, i32* %20
  br label %293

; <label>:108:                                    ; preds = %22
  %109 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  %110 = bitcast %"struct.std::_Rb_tree_node"* %109 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorIiEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %12, %"struct.std::_Rb_tree_node_base"* %110) #3
  %111 = load i8, i8* %11, align 1
  %112 = trunc i8 %111 to i1
  %113 = select i1 %112, i32 -226568328, i32 -1375300323
  store i32 %113, i32* %20
  br label %293

; <label>:114:                                    ; preds = %22
  %115 = load i32, i32* @x.129
  %116 = load i32, i32* @y.130
  %117 = add i32 %115, -1883415265
  %118 = sub i32 %117, 1
  %119 = sub i32 %118, -1883415265
  %120 = sub i32 %115, 1
  %121 = mul i32 %115, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %116, 10
  %125 = and i1 %123, %124
  %126 = xor i1 %123, %124
  %127 = or i1 %125, %126
  %128 = or i1 %123, %124
  %129 = select i1 %127, i32 1168134174, i32 1756095968
  store i32 %129, i32* %20
  br label %293

; <label>:130:                                    ; preds = %22
  %131 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5
  %132 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE5beginEv(%"class.std::_Rb_tree"* %131) #3
  %133 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %132, %"struct.std::_Rb_tree_node_base"** %133, align 8
  %134 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorIiEeqERKS0_(%"struct.std::_Rb_tree_iterator"* %12, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %13) #3
  store i1 %134, i1* %4
  %135 = load i32, i32* @x.129
  %136 = load i32, i32* @y.130
  %137 = sub i32 %135, 1023423528
  %138 = sub i32 %137, 1
  %139 = add i32 %138, 1023423528
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = xor i1 %143, true
  %146 = xor i1 %144, true
  %147 = xor i1 false, true
  %148 = and i1 %145, false
  %149 = and i1 %143, %147
  %150 = and i1 %146, false
  %151 = and i1 %144, %147
  %152 = or i1 %148, %149
  %153 = or i1 %150, %151
  %154 = xor i1 %152, %153
  %155 = or i1 %145, %146
  %156 = xor i1 %155, true
  %157 = or i1 false, %147
  %158 = and i1 %156, %157
  %159 = or i1 %154, %158
  %160 = or i1 %143, %144
  %161 = select i1 %159, i32 -1605736103, i32 1756095968
  store i32 %161, i32* %20
  br label %293

; <label>:162:                                    ; preds = %22
  %163 = load volatile i1, i1* %4
  %164 = select i1 %163, i32 -2052758839, i32 1499550061
  store i32 %164, i32* %20
  br label %293

; <label>:165:                                    ; preds = %22
  %166 = load i32, i32* @x.129
  %167 = load i32, i32* @y.130
  %168 = sub i32 0, 1
  %169 = add i32 %166, %168
  %170 = sub i32 %166, 1
  %171 = mul i32 %166, %169
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %167, 10
  %175 = xor i1 %173, true
  %176 = xor i1 %174, true
  %177 = xor i1 true, true
  %178 = and i1 %175, true
  %179 = and i1 %173, %177
  %180 = and i1 %176, true
  %181 = and i1 %174, %177
  %182 = or i1 %178, %179
  %183 = or i1 %180, %181
  %184 = xor i1 %182, %183
  %185 = or i1 %175, %176
  %186 = xor i1 %185, true
  %187 = or i1 true, %177
  %188 = and i1 %186, %187
  %189 = or i1 %184, %188
  %190 = or i1 %173, %174
  %191 = select i1 %189, i32 756859340, i32 1273525966
  store i32 %191, i32* %20
  br label %293

; <label>:192:                                    ; preds = %22
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIiES7_vEEOT_OT0_(%"struct.std::pair.38"* %6, %"struct.std::_Rb_tree_node"** dereferenceable(8) %9, %"struct.std::_Rb_tree_node"** dereferenceable(8) %10)
  %193 = load i32, i32* @x.129
  %194 = load i32, i32* @y.130
  %195 = sub i32 %193, -1767041140
  %196 = sub i32 %195, 1
  %197 = add i32 %196, -1767041140
  %198 = sub i32 %193, 1
  %199 = mul i32 %193, %197
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %194, 10
  %203 = xor i1 %201, true
  %204 = xor i1 %202, true
  %205 = xor i1 true, true
  %206 = and i1 %203, true
  %207 = and i1 %201, %205
  %208 = and i1 %204, true
  %209 = and i1 %202, %205
  %210 = or i1 %206, %207
  %211 = or i1 %208, %209
  %212 = xor i1 %210, %211
  %213 = or i1 %203, %204
  %214 = xor i1 %213, true
  %215 = or i1 true, %205
  %216 = and i1 %214, %215
  %217 = or i1 %212, %216
  %218 = or i1 %201, %202
  %219 = select i1 %217, i32 -800641868, i32 1273525966
  store i32 %219, i32* %20
  br label %293

; <label>:220:                                    ; preds = %22
  store i32 -713838379, i32* %20
  br label %293

; <label>:221:                                    ; preds = %22
  %222 = load i32, i32* @x.129
  %223 = load i32, i32* @y.130
  %224 = sub i32 0, 1
  %225 = add i32 %222, %224
  %226 = sub i32 %222, 1
  %227 = mul i32 %222, %225
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %223, 10
  %231 = xor i1 %229, true
  %232 = xor i1 %230, true
  %233 = xor i1 true, true
  %234 = and i1 %231, true
  %235 = and i1 %229, %233
  %236 = and i1 %232, true
  %237 = and i1 %230, %233
  %238 = or i1 %234, %235
  %239 = or i1 %236, %237
  %240 = xor i1 %238, %239
  %241 = or i1 %231, %232
  %242 = xor i1 %241, true
  %243 = or i1 true, %233
  %244 = and i1 %242, %243
  %245 = or i1 %240, %244
  %246 = or i1 %229, %230
  %247 = select i1 %245, i32 -1633471209, i32 1584707826
  store i32 %247, i32* %20
  br label %293

; <label>:248:                                    ; preds = %22
  %249 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorIiEmmEv(%"struct.std::_Rb_tree_iterator"* %12) #3
  %250 = load i32, i32* @x.129
  %251 = load i32, i32* @y.130
  %252 = sub i32 %250, -743513282
  %253 = sub i32 %252, 1
  %254 = add i32 %253, -743513282
  %255 = sub i32 %250, 1
  %256 = mul i32 %250, %254
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %251, 10
  %260 = and i1 %258, %259
  %261 = xor i1 %258, %259
  %262 = or i1 %260, %261
  %263 = or i1 %258, %259
  %264 = select i1 %262, i32 -446355438, i32 1584707826
  store i32 %264, i32* %20
  br label %293

; <label>:265:                                    ; preds = %22
  store i32 140054341, i32* %20
  br label %293

; <label>:266:                                    ; preds = %22
  store i32 -1375300323, i32* %20
  br label %293

; <label>:267:                                    ; preds = %22
  %268 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5
  %269 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %268, i32 0, i32 0
  %270 = getelementptr inbounds %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl", %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl"* %269, i32 0, i32 0
  %271 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %12, i32 0, i32 0
  %272 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %271, align 8
  %273 = call dereferenceable(4) i32* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %272)
  %274 = load i32*, i32** %8, align 8
  %275 = call zeroext i1 @_ZNKSt4lessIiEclERKiS2_(%"struct.std::less"* %270, i32* dereferenceable(4) %273, i32* dereferenceable(4) %274)
  %276 = select i1 %275, i32 -1538011512, i32 -668574001
  store i32 %276, i32* %20
  br label %293

; <label>:277:                                    ; preds = %22
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIiES7_vEEOT_OT0_(%"struct.std::pair.38"* %6, %"struct.std::_Rb_tree_node"** dereferenceable(8) %9, %"struct.std::_Rb_tree_node"** dereferenceable(8) %10)
  store i32 -713838379, i32* %20
  br label %293

; <label>:278:                                    ; preds = %22
  %279 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %12, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %14, align 8
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.38"* %6, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %279, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %14)
  store i32 -713838379, i32* %20
  br label %293

; <label>:280:                                    ; preds = %22
  %281 = bitcast %"struct.std::pair.38"* %6 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %282 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %281, align 8
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %282

; <label>:283:                                    ; preds = %22
  %284 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %3
  store %"struct.std::_Rb_tree_node"* %284, %"struct.std::_Rb_tree_node"** %9, align 8
  store i32 289074389, i32* %20
  br label %293

; <label>:285:                                    ; preds = %22
  %286 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5
  %287 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE5beginEv(%"class.std::_Rb_tree"* %286) #3
  %288 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %287, %"struct.std::_Rb_tree_node_base"** %288, align 8
  %289 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorIiEeqERKS0_(%"struct.std::_Rb_tree_iterator"* %12, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %13) #3
  store i32 1168134174, i32* %20
  br label %293

; <label>:290:                                    ; preds = %22
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIiES7_vEEOT_OT0_(%"struct.std::pair.38"* %6, %"struct.std::_Rb_tree_node"** dereferenceable(8) %9, %"struct.std::_Rb_tree_node"** dereferenceable(8) %10)
  store i32 756859340, i32* %20
  br label %293

; <label>:291:                                    ; preds = %22
  %292 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorIiEmmEv(%"struct.std::_Rb_tree_iterator"* %12) #3
  store i32 -1633471209, i32* %20
  br label %293

; <label>:293:                                    ; preds = %291, %290, %285, %283, %278, %277, %267, %266, %265, %248, %221, %220, %192, %165, %162, %130, %114, %108, %107, %79, %50, %46, %42, %29, %25, %24
  br label %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNKSt9_IdentityIiEclERKi(%"struct.std::_Identity"*, i32* dereferenceable(4)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Identity"*, align 8
  %4 = alloca i32*, align 8
  store %"struct.std::_Identity"* %0, %"struct.std::_Identity"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"struct.std::_Identity"*, %"struct.std::_Identity"** %3, align 8
  %6 = load i32*, i32** %4, align 8
  ret i32* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE11_Alloc_nodeC2ERS5_(%"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"*, %"class.std::_Rb_tree"* dereferenceable(48)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.133
  %6 = load i32, i32* @y.134
  %7 = sub i32 %5, -1292126898
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1292126898
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1565843215, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1565843215, label %19
    i32 118658152, label %27
    i32 -53302892, label %59
    i32 1609243627, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 118658152, i32 1609243627
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"*, align 8
  %29 = alloca %"class.std::_Rb_tree"*, align 8
  store %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"* %0, %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"** %28, align 8
  store %"class.std::_Rb_tree"* %1, %"class.std::_Rb_tree"** %29, align 8
  %30 = load %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"*, %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"** %28, align 8
  %31 = getelementptr inbounds %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node", %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"* %30, i32 0, i32 0
  %32 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %29, align 8
  store %"class.std::_Rb_tree"* %32, %"class.std::_Rb_tree"** %31, align 8
  %33 = load i32, i32* @x.133
  %34 = load i32, i32* @y.134
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -53302892, i32 1609243627
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  ret void

; <label>:60:                                     ; preds = %16
  %61 = alloca %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"*, align 8
  %62 = alloca %"class.std::_Rb_tree"*, align 8
  store %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"* %0, %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"** %61, align 8
  store %"class.std::_Rb_tree"* %1, %"class.std::_Rb_tree"** %62, align 8
  %63 = load %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"*, %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"** %61, align 8
  %64 = getelementptr inbounds %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node", %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"* %63, i32 0, i32 0
  %65 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %62, align 8
  store %"class.std::_Rb_tree"* %65, %"class.std::_Rb_tree"** %64, align 8
  store i32 118658152, i32* %15
  br label %66

; <label>:66:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_IRKiNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIiEPSt18_Rb_tree_node_baseSD_OT_RT0_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, i32* dereferenceable(4), %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"* dereferenceable(8)) #0 comdat align 2 {
  %6 = alloca i1
  %7 = alloca i1
  %8 = alloca i1
  %9 = alloca %"class.std::_Rb_tree"*
  %10 = alloca %"struct.std::_Rb_tree_node"**
  %11 = alloca %"struct.std::_Identity"*
  %12 = alloca i8*
  %13 = alloca %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"**
  %14 = alloca i32**
  %15 = alloca %"struct.std::_Rb_tree_node_base"**
  %16 = alloca %"struct.std::_Rb_tree_iterator"*
  %17 = alloca i1
  %18 = alloca i1
  %19 = load i32, i32* @x.135
  %20 = load i32, i32* @y.136
  %21 = sub i32 %19, 1599149095
  %22 = sub i32 %21, 1
  %23 = add i32 %22, 1599149095
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  store i1 %27, i1* %18
  %28 = icmp slt i32 %20, 10
  store i1 %28, i1* %17
  %29 = alloca i32
  store i32 1650630367, i32* %29
  %30 = alloca i1
  br label %31

; <label>:31:                                     ; preds = %5, %265
  %32 = load i32, i32* %29
  switch i32 %32, label %33 [
    i32 1650630367, label %34
    i32 -1535350115, label %54
    i32 286125480, label %85
    i32 -580081430, label %88
    i32 -523712840, label %104
    i32 351421410, label %138
    i32 -1744725916, label %141
    i32 -553840004, label %157
    i32 356846272, label %195
    i32 -1493388663, label %197
    i32 -341662356, label %233
    i32 -414974061, label %246
    i32 -1234057899, label %253
  ]

; <label>:33:                                     ; preds = %31
  br label %265

; <label>:34:                                     ; preds = %31
  %35 = load volatile i1, i1* %18
  %36 = load volatile i1, i1* %17
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 false, true
  %40 = and i1 %37, false
  %41 = and i1 %35, %39
  %42 = and i1 %38, false
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 false, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  %53 = select i1 %51, i32 -1535350115, i32 -341662356
  store i32 %53, i32* %29
  br label %265

; <label>:54:                                     ; preds = %31
  %55 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"struct.std::_Rb_tree_iterator"* %55, %"struct.std::_Rb_tree_iterator"** %16
  %56 = alloca %"class.std::_Rb_tree"*, align 8
  %57 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %58 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"** %58, %"struct.std::_Rb_tree_node_base"*** %15
  %59 = alloca i32*, align 8
  store i32** %59, i32*** %14
  %60 = alloca %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"*, align 8
  store %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"** %60, %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"*** %13
  %61 = alloca i8, align 1
  store i8* %61, i8** %12
  %62 = alloca %"struct.std::_Identity", align 1
  store %"struct.std::_Identity"* %62, %"struct.std::_Identity"** %11
  %63 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"** %63, %"struct.std::_Rb_tree_node"*** %10
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %56, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %57, align 8
  %64 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %15
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %64, align 8
  %65 = load volatile i32**, i32*** %14
  store i32* %3, i32** %65, align 8
  %66 = load volatile %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"**, %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"*** %13
  store %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"* %4, %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"** %66, align 8
  %67 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %56, align 8
  store %"class.std::_Rb_tree"* %67, %"class.std::_Rb_tree"** %9
  %68 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %57, align 8
  %69 = icmp ne %"struct.std::_Rb_tree_node_base"* %68, null
  store i1 %69, i1* %8
  %70 = load i32, i32* @x.135
  %71 = load i32, i32* @y.136
  %72 = add i32 %70, 546654348
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, 546654348
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  %84 = select i1 %82, i32 286125480, i32 -341662356
  store i32 %84, i32* %29
  br label %265

; <label>:85:                                     ; preds = %31
  %86 = load volatile i1, i1* %8
  %87 = select i1 %86, i32 -1493388663, i32 -580081430
  store i32 %87, i32* %29
  store i1 true, i1* %30
  br label %265

; <label>:88:                                     ; preds = %31
  %89 = load i32, i32* @x.135
  %90 = load i32, i32* @y.136
  %91 = add i32 %89, 1863765310
  %92 = sub i32 %91, 1
  %93 = sub i32 %92, 1863765310
  %94 = sub i32 %89, 1
  %95 = mul i32 %89, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %90, 10
  %99 = and i1 %97, %98
  %100 = xor i1 %97, %98
  %101 = or i1 %99, %100
  %102 = or i1 %97, %98
  %103 = select i1 %101, i32 -523712840, i32 -414974061
  store i32 %103, i32* %29
  br label %265

; <label>:104:                                    ; preds = %31
  %105 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %15
  %106 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %105, align 8
  %107 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %108 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_M_endEv(%"class.std::_Rb_tree"* %107) #3
  %109 = bitcast %"struct.std::_Rb_tree_node"* %108 to %"struct.std::_Rb_tree_node_base"*
  %110 = icmp eq %"struct.std::_Rb_tree_node_base"* %106, %109
  store i1 %110, i1* %7
  %111 = load i32, i32* @x.135
  %112 = load i32, i32* @y.136
  %113 = sub i32 %111, 921893448
  %114 = sub i32 %113, 1
  %115 = add i32 %114, 921893448
  %116 = sub i32 %111, 1
  %117 = mul i32 %111, %115
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %112, 10
  %121 = xor i1 %119, true
  %122 = xor i1 %120, true
  %123 = xor i1 true, true
  %124 = and i1 %121, true
  %125 = and i1 %119, %123
  %126 = and i1 %122, true
  %127 = and i1 %120, %123
  %128 = or i1 %124, %125
  %129 = or i1 %126, %127
  %130 = xor i1 %128, %129
  %131 = or i1 %121, %122
  %132 = xor i1 %131, true
  %133 = or i1 true, %123
  %134 = and i1 %132, %133
  %135 = or i1 %130, %134
  %136 = or i1 %119, %120
  %137 = select i1 %135, i32 351421410, i32 -414974061
  store i32 %137, i32* %29
  br label %265

; <label>:138:                                    ; preds = %31
  %139 = load volatile i1, i1* %7
  %140 = select i1 %139, i32 -1493388663, i32 -1744725916
  store i32 %140, i32* %29
  store i1 true, i1* %30
  br label %265

; <label>:141:                                    ; preds = %31
  %142 = load i32, i32* @x.135
  %143 = load i32, i32* @y.136
  %144 = sub i32 %142, 1759940200
  %145 = sub i32 %144, 1
  %146 = add i32 %145, 1759940200
  %147 = sub i32 %142, 1
  %148 = mul i32 %142, %146
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %143, 10
  %152 = and i1 %150, %151
  %153 = xor i1 %150, %151
  %154 = or i1 %152, %153
  %155 = or i1 %150, %151
  %156 = select i1 %154, i32 -553840004, i32 -1234057899
  store i32 %156, i32* %29
  br label %265

; <label>:157:                                    ; preds = %31
  %158 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %159 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %158, i32 0, i32 0
  %160 = getelementptr inbounds %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl", %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl"* %159, i32 0, i32 0
  %161 = load volatile i32**, i32*** %14
  %162 = load i32*, i32** %161, align 8
  %163 = load volatile %"struct.std::_Identity"*, %"struct.std::_Identity"** %11
  %164 = call dereferenceable(4) i32* @_ZNKSt9_IdentityIiEclERKi(%"struct.std::_Identity"* %163, i32* dereferenceable(4) %162)
  %165 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %15
  %166 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %165, align 8
  %167 = call dereferenceable(4) i32* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %166)
  %168 = call zeroext i1 @_ZNKSt4lessIiEclERKiS2_(%"struct.std::less"* %160, i32* dereferenceable(4) %164, i32* dereferenceable(4) %167)
  store i1 %168, i1* %6
  %169 = load i32, i32* @x.135
  %170 = load i32, i32* @y.136
  %171 = sub i32 0, 1
  %172 = add i32 %169, %171
  %173 = sub i32 %169, 1
  %174 = mul i32 %169, %172
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %170, 10
  %178 = xor i1 %176, true
  %179 = xor i1 %177, true
  %180 = xor i1 false, true
  %181 = and i1 %178, false
  %182 = and i1 %176, %180
  %183 = and i1 %179, false
  %184 = and i1 %177, %180
  %185 = or i1 %181, %182
  %186 = or i1 %183, %184
  %187 = xor i1 %185, %186
  %188 = or i1 %178, %179
  %189 = xor i1 %188, true
  %190 = or i1 false, %180
  %191 = and i1 %189, %190
  %192 = or i1 %187, %191
  %193 = or i1 %176, %177
  %194 = select i1 %192, i32 356846272, i32 -1234057899
  store i32 %194, i32* %29
  br label %265

; <label>:195:                                    ; preds = %31
  store i32 -1493388663, i32* %29
  %196 = load volatile i1, i1* %6
  store i1 %196, i1* %30
  br label %265

; <label>:197:                                    ; preds = %31
  %198 = load i1, i1* %30
  %199 = zext i1 %198 to i8
  %200 = load volatile i8*, i8** %12
  store i8 %199, i8* %200, align 1
  %201 = load volatile %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"**, %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"*** %13
  %202 = load %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"*, %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"** %201, align 8
  %203 = load volatile i32**, i32*** %14
  %204 = load i32*, i32** %203, align 8
  %205 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %204) #3
  %206 = call %"struct.std::_Rb_tree_node"* @_ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE11_Alloc_nodeclIRKiEEPSt13_Rb_tree_nodeIiEOT_(%"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"* %202, i32* dereferenceable(4) %205)
  %207 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %10
  store %"struct.std::_Rb_tree_node"* %206, %"struct.std::_Rb_tree_node"** %207, align 8
  %208 = load volatile i8*, i8** %12
  %209 = load i8, i8* %208, align 1
  %210 = trunc i8 %209 to i1
  %211 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %10
  %212 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %211, align 8
  %213 = bitcast %"struct.std::_Rb_tree_node"* %212 to %"struct.std::_Rb_tree_node_base"*
  %214 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %15
  %215 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %214, align 8
  %216 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %217 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %216, i32 0, i32 0
  %218 = getelementptr inbounds %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl", %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl"* %217, i32 0, i32 1
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %210, %"struct.std::_Rb_tree_node_base"* %213, %"struct.std::_Rb_tree_node_base"* %215, %"struct.std::_Rb_tree_node_base"* dereferenceable(32) %218) #3
  %219 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %220 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %219, i32 0, i32 0
  %221 = getelementptr inbounds %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl", %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl"* %220, i32 0, i32 2
  %222 = load i64, i64* %221, align 8
  %223 = sub i64 0, 1
  %224 = sub i64 %222, %223
  %225 = add i64 %222, 1
  store i64 %224, i64* %221, align 8
  %226 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %10
  %227 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %226, align 8
  %228 = bitcast %"struct.std::_Rb_tree_node"* %227 to %"struct.std::_Rb_tree_node_base"*
  %229 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %16
  call void @_ZNSt17_Rb_tree_iteratorIiEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %229, %"struct.std::_Rb_tree_node_base"* %228) #3
  %230 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %16
  %231 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %230, i32 0, i32 0
  %232 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %231, align 8
  ret %"struct.std::_Rb_tree_node_base"* %232

; <label>:233:                                    ; preds = %31
  %234 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %235 = alloca %"class.std::_Rb_tree"*, align 8
  %236 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %237 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %238 = alloca i32*, align 8
  %239 = alloca %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"*, align 8
  %240 = alloca i8, align 1
  %241 = alloca %"struct.std::_Identity", align 1
  %242 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %235, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %236, align 8
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %237, align 8
  store i32* %3, i32** %238, align 8
  store %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"* %4, %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"** %239, align 8
  %243 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %235, align 8
  %244 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %236, align 8
  %245 = icmp ne %"struct.std::_Rb_tree_node_base"* %244, null
  store i32 -1535350115, i32* %29
  br label %265

; <label>:246:                                    ; preds = %31
  %247 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %15
  %248 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %247, align 8
  %249 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %250 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_M_endEv(%"class.std::_Rb_tree"* %249) #3
  %251 = bitcast %"struct.std::_Rb_tree_node"* %250 to %"struct.std::_Rb_tree_node_base"*
  %252 = icmp eq %"struct.std::_Rb_tree_node_base"* %248, %251
  store i32 -523712840, i32* %29
  br label %265

; <label>:253:                                    ; preds = %31
  %254 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9
  %255 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %254, i32 0, i32 0
  %256 = getelementptr inbounds %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl", %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl"* %255, i32 0, i32 0
  %257 = load volatile i32**, i32*** %14
  %258 = load i32*, i32** %257, align 8
  %259 = load volatile %"struct.std::_Identity"*, %"struct.std::_Identity"** %11
  %260 = call dereferenceable(4) i32* @_ZNKSt9_IdentityIiEclERKi(%"struct.std::_Identity"* %259, i32* dereferenceable(4) %258)
  %261 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %15
  %262 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %261, align 8
  %263 = call dereferenceable(4) i32* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %262)
  %264 = call zeroext i1 @_ZNKSt4lessIiEclERKiS2_(%"struct.std::less"* %256, i32* dereferenceable(4) %260, i32* dereferenceable(4) %263)
  store i32 -553840004, i32* %29
  br label %265

; <label>:265:                                    ; preds = %253, %246, %233, %195, %157, %141, %138, %104, %88, %85, %54, %34, %33
  br label %31
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4)) #4 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairISt17_Rb_tree_iteratorIiEbEC2IS1_bvEEOT_OT0_(%"struct.std::pair.36"*, %"struct.std::_Rb_tree_iterator"* dereferenceable(8), i8* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::pair.36"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %6 = alloca i8*, align 8
  store %"struct.std::pair.36"* %0, %"struct.std::pair.36"** %4, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"struct.std::pair.36"*, %"struct.std::pair.36"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %5, align 8
  %10 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardISt17_Rb_tree_iteratorIiEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8) %9) #3
  %11 = bitcast %"struct.std::_Rb_tree_iterator"* %8 to i8*
  %12 = bitcast %"struct.std::_Rb_tree_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"struct.std::pair.36", %"struct.std::pair.36"* %7, i32 0, i32 1
  %14 = load i8*, i8** %6, align 8
  %15 = call dereferenceable(1) i8* @_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE(i8* dereferenceable(1) %14) #3
  %16 = load i8, i8* %15, align 1
  %17 = trunc i8 %16 to i1
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %13, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt17_Rb_tree_iteratorIiEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_node_base"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.141
  %6 = load i32, i32* @y.142
  %7 = sub i32 %5, 264670124
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 264670124
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1642429244, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %79
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1642429244, label %19
    i32 231918486, label %39
    i32 75958445, label %72
    i32 1981139415, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %79

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 231918486, i32 1981139415
  store i32 %38, i32* %15
  br label %79

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %41 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %40, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %41, align 8
  %42 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %40, align 8
  %43 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %42, i32 0, i32 0
  %44 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %41, align 8
  store %"struct.std::_Rb_tree_node_base"* %44, %"struct.std::_Rb_tree_node_base"** %43, align 8
  %45 = load i32, i32* @x.141
  %46 = load i32, i32* @y.142
  %47 = sub i32 %45, 1264947705
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 1264947705
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 75958445, i32 1981139415
  store i32 %71, i32* %15
  br label %79

; <label>:72:                                     ; preds = %16
  ret void

; <label>:73:                                     ; preds = %16
  %74 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %75 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %74, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %75, align 8
  %76 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %74, align 8
  %77 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %76, i32 0, i32 0
  %78 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %75, align 8
  store %"struct.std::_Rb_tree_node_base"* %78, %"struct.std::_Rb_tree_node_base"** %77, align 8
  store i32 231918486, i32* %15
  br label %79

; <label>:79:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_beginEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.143
  %6 = load i32, i32* @y.144
  %7 = sub i32 %5, 675988282
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 675988282
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -191682585, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %72
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -191682585, label %19
    i32 1701356619, label %39
    i32 253316637, label %62
    i32 1838669498, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %72

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1701356619, i32 1838669498
  store i32 %38, i32* %15
  br label %72

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %40, align 8
  %41 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %40, align 8
  %42 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl", %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl"* %42, i32 0, i32 1
  %44 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %43, i32 0, i32 1
  %45 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %44, align 8
  %46 = bitcast %"struct.std::_Rb_tree_node_base"* %45 to %"struct.std::_Rb_tree_node"*
  store %"struct.std::_Rb_tree_node"* %46, %"struct.std::_Rb_tree_node"** %2
  %47 = load i32, i32* @x.143
  %48 = load i32, i32* @y.144
  %49 = add i32 %47, -344136483
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -344136483
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 253316637, i32 1838669498
  store i32 %61, i32* %15
  br label %72

; <label>:62:                                     ; preds = %16
  %63 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2
  ret %"struct.std::_Rb_tree_node"* %63

; <label>:64:                                     ; preds = %16
  %65 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %65, align 8
  %66 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %65, align 8
  %67 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %66, i32 0, i32 0
  %68 = getelementptr inbounds %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl", %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl"* %67, i32 0, i32 1
  %69 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %68, i32 0, i32 1
  %70 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %69, align 8
  %71 = bitcast %"struct.std::_Rb_tree_node_base"* %70 to %"struct.std::_Rb_tree_node"*
  store i32 1701356619, i32* %15
  br label %72

; <label>:72:                                     ; preds = %64, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_M_endEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl", %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt4lessIiEclERKiS2_(%"struct.std::less"*, i32* dereferenceable(4), i32* dereferenceable(4)) #4 comdat align 2 {
  %4 = alloca %"struct.std::less"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"struct.std::less"* %0, %"struct.std::less"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"struct.std::less"*, %"struct.std::less"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = load i32, i32* %8, align 4
  %10 = load i32*, i32** %6, align 8
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %9, %11
  ret i1 %12
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_S_keyEPKSt13_Rb_tree_nodeIiE(%"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %3 = alloca %"struct.std::_Identity", align 1
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
  %4 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
  %5 = call dereferenceable(4) i32* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_valueEPKSt13_Rb_tree_nodeIiE(%"struct.std::_Rb_tree_node"* %4)
  %6 = call dereferenceable(4) i32* @_ZNKSt9_IdentityIiEclERKi(%"struct.std::_Identity"* %3, i32* dereferenceable(4) %5)
  ret i32* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 2
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.153
  %6 = load i32, i32* @y.154
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 692000439, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %78
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 692000439, label %18
    i32 733085252, label %38
    i32 705887088, label %70
    i32 151588563, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %78

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 733085252, i32 151588563
  store i32 %37, i32* %14
  br label %78

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %39, align 8
  %40 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %40, i32 0, i32 3
  %42 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %41, align 8
  %43 = bitcast %"struct.std::_Rb_tree_node_base"* %42 to %"struct.std::_Rb_tree_node"*
  store %"struct.std::_Rb_tree_node"* %43, %"struct.std::_Rb_tree_node"** %2
  %44 = load i32, i32* @x.153
  %45 = load i32, i32* @y.154
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 705887088, i32 151588563
  store i32 %69, i32* %14
  br label %78

; <label>:70:                                     ; preds = %15
  %71 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2
  ret %"struct.std::_Rb_tree_node"* %71

; <label>:72:                                     ; preds = %15
  %73 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %73, align 8
  %74 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %73, align 8
  %75 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %74, i32 0, i32 3
  %76 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %75, align 8
  %77 = bitcast %"struct.std::_Rb_tree_node_base"* %76 to %"struct.std::_Rb_tree_node"*
  store i32 733085252, i32* %14
  br label %78

; <label>:78:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt17_Rb_tree_iteratorIiEeqERKS0_(%"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"* dereferenceable(8)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %8, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %11 = icmp eq %"struct.std::_Rb_tree_node_base"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE5beginEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  %4 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl", %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %6, i32 0, i32 2
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  call void @_ZNSt17_Rb_tree_iteratorIiEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %2, %"struct.std::_Rb_tree_node_base"* %8) #3
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %2, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  ret %"struct.std::_Rb_tree_node_base"* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIiES7_vEEOT_OT0_(%"struct.std::pair.38"*, %"struct.std::_Rb_tree_node"** dereferenceable(8), %"struct.std::_Rb_tree_node"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::pair.38"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"**, align 8
  %6 = alloca %"struct.std::_Rb_tree_node"**, align 8
  store %"struct.std::pair.38"* %0, %"struct.std::pair.38"** %4, align 8
  store %"struct.std::_Rb_tree_node"** %1, %"struct.std::_Rb_tree_node"*** %5, align 8
  store %"struct.std::_Rb_tree_node"** %2, %"struct.std::_Rb_tree_node"*** %6, align 8
  %7 = load %"struct.std::pair.38"*, %"struct.std::pair.38"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %5, align 8
  %10 = call dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeIiEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8) %9) #3
  %11 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  %12 = bitcast %"struct.std::_Rb_tree_node"* %11 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %12, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %13 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %7, i32 0, i32 1
  %14 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %6, align 8
  %15 = call dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeIiEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8) %14) #3
  %16 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %15, align 8
  %17 = bitcast %"struct.std::_Rb_tree_node"* %16 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %13, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorIiEmmEv(%"struct.std::_Rb_tree_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %5) #16
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_iterator"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %3 = alloca %"struct.std::_Identity", align 1
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %5 = call dereferenceable(4) i32* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %4)
  %6 = call dereferenceable(4) i32* @_ZNKSt9_IdentityIiEclERKi(%"struct.std::_Identity"* %3, i32* dereferenceable(4) %5)
  ret i32* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.38"*, %"struct.std::_Rb_tree_node_base"** dereferenceable(8), %"struct.std::_Rb_tree_node_base"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::pair.38"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  %6 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::pair.38"* %0, %"struct.std::pair.38"** %4, align 8
  store %"struct.std::_Rb_tree_node_base"** %1, %"struct.std::_Rb_tree_node_base"*** %5, align 8
  store %"struct.std::_Rb_tree_node_base"** %2, %"struct.std::_Rb_tree_node_base"*** %6, align 8
  %7 = load %"struct.std::pair.38"*, %"struct.std::pair.38"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %5, align 8
  %10 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %9) #3
  %11 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
  store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %12 = getelementptr inbounds %"struct.std::pair.38", %"struct.std::pair.38"* %7, i32 0, i32 1
  %13 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %6, align 8
  %14 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %13, align 8
  store %"struct.std::_Rb_tree_node_base"* %14, %"struct.std::_Rb_tree_node_base"** %12, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_valueEPKSt13_Rb_tree_nodeIiE(%"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
  %4 = call i32* @_ZNKSt13_Rb_tree_nodeIiE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %3)
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNKSt13_Rb_tree_nodeIiE9_M_valptrEv(%"struct.std::_Rb_tree_node"*) #4 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.169
  %6 = load i32, i32* @y.170
  %7 = sub i32 %5, -480600024
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -480600024
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1107120570, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1107120570, label %19
    i32 -176153360, label %39
    i32 -1327417681, label %59
    i32 -1781878098, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -176153360, i32 -1781878098
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %40, align 8
  %41 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %41, i32 0, i32 1
  %43 = call i32* @_ZNK9__gnu_cxx16__aligned_membufIiE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* %42) #3
  store i32* %43, i32** %2
  %44 = load i32, i32* @x.169
  %45 = load i32, i32* @y.170
  %46 = add i32 %44, -170077713
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -170077713
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -1327417681, i32 -1781878098
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile i32*, i32** %2
  ret i32* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %62, align 8
  %63 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %63, i32 0, i32 1
  %65 = call i32* @_ZNK9__gnu_cxx16__aligned_membufIiE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* %64) #3
  store i32 -176153360, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNK9__gnu_cxx16__aligned_membufIiE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #4 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.171
  %6 = load i32, i32* @y.172
  %7 = add i32 %5, -973142001
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -973142001
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 942206834, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 942206834, label %19
    i32 911134286, label %39
    i32 -605791525, label %70
    i32 1853609601, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 911134286, i32 1853609601
  store i32 %38, i32* %15
  br label %77

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %40, align 8
  %41 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %40, align 8
  %42 = call i8* @_ZNK9__gnu_cxx16__aligned_membufIiE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* %41) #3
  %43 = bitcast i8* %42 to i32*
  store i32* %43, i32** %2
  %44 = load i32, i32* @x.171
  %45 = load i32, i32* @y.172
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -605791525, i32 1853609601
  store i32 %69, i32* %15
  br label %77

; <label>:70:                                     ; preds = %16
  %71 = load volatile i32*, i32** %2
  ret i32* %71

; <label>:72:                                     ; preds = %16
  %73 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %73, align 8
  %74 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %73, align 8
  %75 = call i8* @_ZNK9__gnu_cxx16__aligned_membufIiE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* %74) #3
  %76 = bitcast i8* %75 to i32*
  store i32 911134286, i32* %15
  br label %77

; <label>:77:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNK9__gnu_cxx16__aligned_membufIiE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf", %"struct.__gnu_cxx::__aligned_membuf"* %3, i32 0, i32 0
  %5 = bitcast [4 x i8]* %4 to i8*
  ret i8* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeIiEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Rb_tree_node"**, align 8
  store %"struct.std::_Rb_tree_node"** %0, %"struct.std::_Rb_tree_node"*** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %2, align 8
  ret %"struct.std::_Rb_tree_node"** %3
}

; Function Attrs: nounwind readonly
declare %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #9

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = bitcast %"struct.std::_Rb_tree_node_base"* %3 to %"struct.std::_Rb_tree_node"*
  %5 = call i32* @_ZNKSt13_Rb_tree_nodeIiE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %4)
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::_Rb_tree_node_base"** %0, %"struct.std::_Rb_tree_node_base"*** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %2, align 8
  ret %"struct.std::_Rb_tree_node_base"** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE11_Alloc_nodeclIRKiEEPSt13_Rb_tree_nodeIiEOT_(%"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"*, align 8
  %4 = alloca i32*, align 8
  store %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"* %0, %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"*, %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node", %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node"* %5, i32 0, i32 0
  %7 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
  %8 = load i32*, i32** %4, align 8
  %9 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %8) #3
  %10 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_create_nodeIJRKiEEEPSt13_Rb_tree_nodeIiEDpOT_(%"class.std::_Rb_tree"* %7, i32* dereferenceable(4) %9)
  ret %"struct.std::_Rb_tree_node"* %10
}

; Function Attrs: nounwind
declare void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* dereferenceable(32)) #2

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_create_nodeIJRKiEEEPSt13_Rb_tree_nodeIiEDpOT_(%"class.std::_Rb_tree"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  store i32* %1, i32** %4, align 8
  %6 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %7 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE11_M_get_nodeEv(%"class.std::_Rb_tree"* %6)
  store %"struct.std::_Rb_tree_node"* %7, %"struct.std::_Rb_tree_node"** %5, align 8
  %8 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %9 = load i32*, i32** %4, align 8
  %10 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %9) #3
  call void @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE17_M_construct_nodeIJRKiEEEvPSt13_Rb_tree_nodeIiEDpOT_(%"class.std::_Rb_tree"* %6, %"struct.std::_Rb_tree_node"* %8, i32* dereferenceable(4) %10)
  %11 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  ret %"struct.std::_Rb_tree_node"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE11_M_get_nodeEv(%"class.std::_Rb_tree"*) #0 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %3) #3
  %5 = call %"struct.std::_Rb_tree_node"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIiEEE8allocateERS2_m(%"class.std::allocator"* dereferenceable(1) %4, i64 1)
  ret %"struct.std::_Rb_tree_node"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE17_M_construct_nodeIJRKiEEEvPSt13_Rb_tree_nodeIiEDpOT_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*, i32* dereferenceable(4)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Rb_tree"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %4, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
  store i32* %2, i32** %6, align 8
  %9 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  %10 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %11 = bitcast %"struct.std::_Rb_tree_node"* %10 to i8*
  %12 = bitcast i8* %11 to %"struct.std::_Rb_tree_node"*
  %13 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %9) #3
  %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %15 = invoke i32* @_ZNSt13_Rb_tree_nodeIiE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %14)
          to label %16 unwind label %48

; <label>:16:                                     ; preds = %3
  %17 = load i32, i32* @x.187
  %18 = load i32, i32* @y.188
  %19 = sub i32 0, 1
  %20 = add i32 %17, %19
  %21 = sub i32 %17, 1
  %22 = mul i32 %17, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %18, 10
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  br i1 %28, label %30, label %171

; <label>:30:                                     ; preds = %16, %171
  %31 = load i32*, i32** %6, align 8
  %32 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %31) #3
  %33 = load i32, i32* @x.187
  %34 = load i32, i32* @y.188
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %171

; <label>:46:                                     ; preds = %30
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIiEEE9constructIiJRKiEEEvRS2_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1) %13, i32* %15, i32* dereferenceable(4) %32)
          to label %47 unwind label %48

; <label>:47:                                     ; preds = %46
  br label %132

; <label>:48:                                     ; preds = %46, %3
  %49 = landingpad { i8*, i32 }
          catch i8* null
  %50 = extractvalue { i8*, i32 } %49, 0
  store i8* %50, i8** %7, align 8
  %51 = extractvalue { i8*, i32 } %49, 1
  store i32 %51, i32* %8, align 4
  br label %52

; <label>:52:                                     ; preds = %48
  %53 = load i8*, i8** %7, align 8
  %54 = call i8* @__cxa_begin_catch(i8* %53) #3
  %55 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %56 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  call void @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE11_M_put_nodeEPSt13_Rb_tree_nodeIiE(%"class.std::_Rb_tree"* %9, %"struct.std::_Rb_tree_node"* %56) #3
  invoke void @__cxa_rethrow() #15
          to label %170 unwind label %57

; <label>:57:                                     ; preds = %52
  %58 = load i32, i32* @x.187
  %59 = load i32, i32* @y.188
  %60 = sub i32 %58, -584399207
  %61 = sub i32 %60, 1
  %62 = add i32 %61, -584399207
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 true, true
  %71 = and i1 %68, true
  %72 = and i1 %66, %70
  %73 = and i1 %69, true
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 true, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  br i1 %82, label %84, label %174

; <label>:84:                                     ; preds = %57, %174
  %85 = landingpad { i8*, i32 }
          cleanup
  %86 = extractvalue { i8*, i32 } %85, 0
  store i8* %86, i8** %7, align 8
  %87 = extractvalue { i8*, i32 } %85, 1
  store i32 %87, i32* %8, align 4
  %88 = load i32, i32* @x.187
  %89 = load i32, i32* @y.188
  %90 = add i32 %88, 1494412305
  %91 = sub i32 %90, 1
  %92 = sub i32 %91, 1494412305
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = and i1 %96, %97
  %99 = xor i1 %96, %97
  %100 = or i1 %98, %99
  %101 = or i1 %96, %97
  br i1 %100, label %102, label %174

; <label>:102:                                    ; preds = %84
  invoke void @__cxa_end_catch()
          to label %103 unwind label %167

; <label>:103:                                    ; preds = %102
  %104 = load i32, i32* @x.187
  %105 = load i32, i32* @y.188
  %106 = sub i32 0, 1
  %107 = add i32 %104, %106
  %108 = sub i32 %104, 1
  %109 = mul i32 %104, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %105, 10
  %113 = and i1 %111, %112
  %114 = xor i1 %111, %112
  %115 = or i1 %113, %114
  %116 = or i1 %111, %112
  br i1 %115, label %117, label %178

; <label>:117:                                    ; preds = %103, %178
  %118 = load i32, i32* @x.187
  %119 = load i32, i32* @y.188
  %120 = sub i32 0, 1
  %121 = add i32 %118, %120
  %122 = sub i32 %118, 1
  %123 = mul i32 %118, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %119, 10
  %127 = and i1 %125, %126
  %128 = xor i1 %125, %126
  %129 = or i1 %127, %128
  %130 = or i1 %125, %126
  br i1 %129, label %131, label %178

; <label>:131:                                    ; preds = %117
  br label %162

; <label>:132:                                    ; preds = %47
  %133 = load i32, i32* @x.187
  %134 = load i32, i32* @y.188
  %135 = sub i32 0, 1
  %136 = add i32 %133, %135
  %137 = sub i32 %133, 1
  %138 = mul i32 %133, %136
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %134, 10
  %142 = and i1 %140, %141
  %143 = xor i1 %140, %141
  %144 = or i1 %142, %143
  %145 = or i1 %140, %141
  br i1 %144, label %146, label %179

; <label>:146:                                    ; preds = %132, %179
  %147 = load i32, i32* @x.187
  %148 = load i32, i32* @y.188
  %149 = sub i32 %147, -210501409
  %150 = sub i32 %149, 1
  %151 = add i32 %150, -210501409
  %152 = sub i32 %147, 1
  %153 = mul i32 %147, %151
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %148, 10
  %157 = and i1 %155, %156
  %158 = xor i1 %155, %156
  %159 = or i1 %157, %158
  %160 = or i1 %155, %156
  br i1 %159, label %161, label %179

; <label>:161:                                    ; preds = %146
  ret void

; <label>:162:                                    ; preds = %131
  %163 = load i8*, i8** %7, align 8
  %164 = load i32, i32* %8, align 4
  %165 = insertvalue { i8*, i32 } undef, i8* %163, 0
  %166 = insertvalue { i8*, i32 } %165, i32 %164, 1
  resume { i8*, i32 } %166

; <label>:167:                                    ; preds = %102
  %168 = landingpad { i8*, i32 }
          catch i8* null
  %169 = extractvalue { i8*, i32 } %168, 0
  call void @__clang_call_terminate(i8* %169) #13
  unreachable

; <label>:170:                                    ; preds = %52
  unreachable

; <label>:171:                                    ; preds = %30, %16
  %172 = load i32*, i32** %6, align 8
  %173 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %172) #3
  br label %30

; <label>:174:                                    ; preds = %84, %57
  %175 = landingpad { i8*, i32 }
          cleanup
  %176 = extractvalue { i8*, i32 } %175, 0
  store i8* %176, i8** %7, align 8
  %177 = extractvalue { i8*, i32 } %175, 1
  store i32 %177, i32* %8, align 4
  br label %84

; <label>:178:                                    ; preds = %117, %103
  br label %117

; <label>:179:                                    ; preds = %146, %132
  br label %146
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIiEEE8allocateERS2_m(%"class.std::allocator"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.std::_Rb_tree_node"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %6, i64 %7, i8* null)
  ret %"struct.std::_Rb_tree_node"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.193
  %9 = load i32, i32* @y.194
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 778268701, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %83
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 778268701, label %21
    i32 -602210938, label %29
    i32 -453873103, label %65
    i32 -388361734, label %68
    i32 -915260835, label %69
    i32 -711944394, label %75
  ]

; <label>:20:                                     ; preds = %18
  br label %83

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -602210938, i32 -711944394
  store i32 %28, i32* %17
  br label %83

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %31 = alloca i64, align 8
  store i64* %31, i64** %5
  %32 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %30, align 8
  %33 = load volatile i64*, i64** %5
  store i64 %1, i64* %33, align 8
  store i8* %2, i8** %32, align 8
  %34 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %30, align 8
  %35 = load volatile i64*, i64** %5
  %36 = load i64, i64* %35, align 8
  %37 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %34) #3
  %38 = icmp ugt i64 %36, %37
  store i1 %38, i1* %4
  %39 = load i32, i32* @x.193
  %40 = load i32, i32* @y.194
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 -453873103, i32 -711944394
  store i32 %64, i32* %17
  br label %83

; <label>:65:                                     ; preds = %18
  %66 = load volatile i1, i1* %4
  %67 = select i1 %66, i32 -388361734, i32 -915260835
  store i32 %67, i32* %17
  br label %83

; <label>:68:                                     ; preds = %18
  call void @_ZSt17__throw_bad_allocv() #15
  unreachable

; <label>:69:                                     ; preds = %18
  %70 = load volatile i64*, i64** %5
  %71 = load i64, i64* %70, align 8
  %72 = mul i64 %71, 40
  %73 = call i8* @_Znwm(i64 %72)
  %74 = bitcast i8* %73 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %74

; <label>:75:                                     ; preds = %18
  %76 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %77 = alloca i64, align 8
  %78 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %76, align 8
  store i64 %1, i64* %77, align 8
  store i8* %2, i8** %78, align 8
  %79 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %76, align 8
  %80 = load i64, i64* %77, align 8
  %81 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %79) #3
  %82 = icmp ugt i64 %80, %81
  store i32 -602210938, i32* %17
  br label %83

; <label>:83:                                     ; preds = %75, %65, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.195
  %5 = load i32, i32* @y.196
  %6 = sub i32 %4, 1944206908
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1944206908
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1320359088, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %48
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1320359088, label %18
    i32 471150218, label %26
    i32 1298623330, label %44
    i32 -1139985168, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %48

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 471150218, i32 -1139985168
  store i32 %25, i32* %14
  br label %48

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %27, align 8
  %29 = load i32, i32* @x.195
  %30 = load i32, i32* @y.196
  %31 = sub i32 %29, -390160631
  %32 = sub i32 %31, 1
  %33 = add i32 %32, -390160631
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 1298623330, i32 -1139985168
  store i32 %43, i32* %14
  br label %48

; <label>:44:                                     ; preds = %15
  ret i64 461168601842738790

; <label>:45:                                     ; preds = %15
  %46 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %46, align 8
  %47 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %46, align 8
  store i32 471150218, i32* %14
  br label %48

; <label>:48:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #8

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #10

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIiEEE9constructIiJRKiEEEvRS2_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1), i32*, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.197
  %7 = load i32, i32* @y.198
  %8 = add i32 %6, -1798404914
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1798404914
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -232861000, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %74
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -232861000, label %20
    i32 -1330276790, label %28
    i32 -1202296005, label %64
    i32 -433990833, label %65
  ]

; <label>:19:                                     ; preds = %17
  br label %74

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1330276790, i32 -433990833
  store i32 %27, i32* %16
  br label %74

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator"*, align 8
  %30 = alloca i32*, align 8
  %31 = alloca i32*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %29, align 8
  store i32* %1, i32** %30, align 8
  store i32* %2, i32** %31, align 8
  %32 = load %"class.std::allocator"*, %"class.std::allocator"** %29, align 8
  %33 = bitcast %"class.std::allocator"* %32 to %"class.__gnu_cxx::new_allocator"*
  %34 = load i32*, i32** %30, align 8
  %35 = load i32*, i32** %31, align 8
  %36 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %35) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"* %33, i32* %34, i32* dereferenceable(4) %36)
  %37 = load i32, i32* @x.197
  %38 = load i32, i32* @y.198
  %39 = add i32 %37, -313641980
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, -313641980
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -1202296005, i32 -433990833
  store i32 %63, i32* %16
  br label %74

; <label>:64:                                     ; preds = %17
  ret void

; <label>:65:                                     ; preds = %17
  %66 = alloca %"class.std::allocator"*, align 8
  %67 = alloca i32*, align 8
  %68 = alloca i32*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %66, align 8
  store i32* %1, i32** %67, align 8
  store i32* %2, i32** %68, align 8
  %69 = load %"class.std::allocator"*, %"class.std::allocator"** %66, align 8
  %70 = bitcast %"class.std::allocator"* %69 to %"class.__gnu_cxx::new_allocator"*
  %71 = load i32*, i32** %67, align 8
  %72 = load i32*, i32** %68, align 8
  %73 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %72) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"* %70, i32* %71, i32* dereferenceable(4) %73)
  store i32 -1330276790, i32* %16
  br label %74

; <label>:74:                                     ; preds = %65, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt13_Rb_tree_nodeIiE9_M_valptrEv(%"struct.std::_Rb_tree_node"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %3, i32 0, i32 1
  %5 = call i32* @_ZN9__gnu_cxx16__aligned_membufIiE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* %4) #3
  ret i32* %5
}

declare i8* @__cxa_begin_catch(i8*)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE11_M_put_nodeEPSt13_Rb_tree_nodeIiE(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
  %5 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %6 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %5) #3
  %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIiEEE10deallocateERS2_PS1_m(%"class.std::allocator"* dereferenceable(1) %6, %"struct.std::_Rb_tree_node"* %7, i64 1)
          to label %8 unwind label %9

; <label>:8:                                      ; preds = %2
  ret void

; <label>:9:                                      ; preds = %2
  %10 = landingpad { i8*, i32 }
          catch i8* null
  %11 = extractvalue { i8*, i32 } %10, 0
  call void @__clang_call_terminate(i8* %11) #13
  unreachable
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #11 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #13
  unreachable
}

declare void @_ZSt9terminatev()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"*, i32*, i32* dereferenceable(4)) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = bitcast i32* %8 to i8*
  %10 = bitcast i8* %9 to i32*
  %11 = load i32*, i32** %6, align 8
  %12 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %11) #3
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %10, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx16__aligned_membufIiE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %4 = call i8* @_ZN9__gnu_cxx16__aligned_membufIiE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* %3) #3
  %5 = bitcast i8* %4 to i32*
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZN9__gnu_cxx16__aligned_membufIiE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf", %"struct.__gnu_cxx::__aligned_membuf"* %3, i32 0, i32 0
  %5 = bitcast [4 x i8]* %4 to i8*
  ret i8* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIiEEE10deallocateERS2_PS1_m(%"class.std::allocator"* dereferenceable(1), %"struct.std::_Rb_tree_node"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator"* %8, %"struct.std::_Rb_tree_node"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator"*, %"struct.std::_Rb_tree_node"*, i64) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.213
  %7 = load i32, i32* @y.214
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 696986269, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 696986269, label %19
    i32 1106427825, label %27
    i32 -40421297, label %61
    i32 1938249231, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1106427825, i32 1938249231
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %29 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %30 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %28, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %29, align 8
  store i64 %2, i64* %30, align 8
  %31 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %28, align 8
  %32 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %29, align 8
  %33 = bitcast %"struct.std::_Rb_tree_node"* %32 to i8*
  call void @_ZdlPv(i8* %33) #3
  %34 = load i32, i32* @x.213
  %35 = load i32, i32* @y.214
  %36 = sub i32 %34, -1690799376
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -1690799376
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -40421297, i32 1938249231
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %64 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %65 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %63, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %64, align 8
  store i64 %2, i64* %65, align 8
  %66 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %63, align 8
  %67 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %64, align 8
  %68 = bitcast %"struct.std::_Rb_tree_node"* %67 to i8*
  call void @_ZdlPv(i8* %68) #3
  store i32 1106427825, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #12

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardISt17_Rb_tree_iteratorIiEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2, align 8
  ret %"struct.std::_Rb_tree_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) i8* @_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE(i8* dereferenceable(1)) #4 comdat {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZSt7forwardIRSt17_Rb_tree_iteratorIiEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_iterator"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Rb_tree_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.219
  %6 = load i32, i32* @y.220
  %7 = sub i32 %5, -1632731236
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1632731236
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1569602752, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %50
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1569602752, label %19
    i32 -1069304210, label %27
    i32 288317460, label %45
    i32 -1435237352, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %50

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1069304210, i32 -1435237352
  store i32 %26, i32* %15
  br label %50

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %28, align 8
  %29 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %28, align 8
  store %"struct.std::_Rb_tree_iterator"* %29, %"struct.std::_Rb_tree_iterator"** %2
  %30 = load i32, i32* @x.219
  %31 = load i32, i32* @y.220
  %32 = sub i32 %30, -1858809278
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -1858809278
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 288317460, i32 -1435237352
  store i32 %44, i32* %15
  br label %50

; <label>:45:                                     ; preds = %16
  %46 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2
  ret %"struct.std::_Rb_tree_iterator"* %46

; <label>:47:                                     ; preds = %16
  %48 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %48, align 8
  %49 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %48, align 8
  store i32 -1069304210, i32* %15
  br label %50

; <label>:50:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt23_Rb_tree_const_iteratorIiEC2ERKSt17_Rb_tree_iteratorIiE(%"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_iterator"* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  store %"struct.std::_Rb_tree_node_base"* %9, %"struct.std::_Rb_tree_node_base"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) i8* @_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE(i8* dereferenceable(1)) #4 comdat {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE9push_backEOi(%"class.std::deque"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.225
  %6 = load i32, i32* @y.226
  %7 = sub i32 %5, 530167545
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 530167545
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -607259384, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -607259384, label %19
    i32 314571220, label %27
    i32 -488271245, label %47
    i32 203879964, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 314571220, i32 203879964
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::deque"*, align 8
  %29 = alloca i32*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %28, align 8
  store i32* %1, i32** %29, align 8
  %30 = load %"class.std::deque"*, %"class.std::deque"** %28, align 8
  %31 = load i32*, i32** %29, align 8
  %32 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %31) #3
  call void @_ZNSt5dequeIiSaIiEE12emplace_backIJiEEEvDpOT_(%"class.std::deque"* %30, i32* dereferenceable(4) %32)
  %33 = load i32, i32* @x.225
  %34 = load i32, i32* @y.226
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -488271245, i32 203879964
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  ret void

; <label>:48:                                     ; preds = %16
  %49 = alloca %"class.std::deque"*, align 8
  %50 = alloca i32*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %49, align 8
  store i32* %1, i32** %50, align 8
  %51 = load %"class.std::deque"*, %"class.std::deque"** %49, align 8
  %52 = load i32*, i32** %50, align 8
  %53 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %52) #3
  call void @_ZNSt5dequeIiSaIiEE12emplace_backIJiEEEvDpOT_(%"class.std::deque"* %51, i32* dereferenceable(4) %53)
  store i32 314571220, i32* %15
  br label %54

; <label>:54:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4)) #4 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.227
  %6 = load i32, i32* @y.228
  %7 = sub i32 %5, 576291042
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 576291042
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 806365307, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 806365307, label %19
    i32 -1166617809, label %27
    i32 476180097, label %57
    i32 -632835751, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1166617809, i32 -632835751
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca i32*, align 8
  store i32* %0, i32** %28, align 8
  %29 = load i32*, i32** %28, align 8
  store i32* %29, i32** %2
  %30 = load i32, i32* @x.227
  %31 = load i32, i32* @y.228
  %32 = sub i32 %30, 1410105112
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 1410105112
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 476180097, i32 -632835751
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile i32*, i32** %2
  ret i32* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca i32*, align 8
  store i32* %0, i32** %60, align 8
  %61 = load i32*, i32** %60, align 8
  store i32 -1166617809, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE12emplace_backIJiEEEvDpOT_(%"class.std::deque"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i32*
  %5 = alloca %"class.std::deque"*
  %6 = alloca %"class.std::deque"*, align 8
  %7 = alloca i32*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %6, align 8
  store i32* %1, i32** %7, align 8
  %8 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  store %"class.std::deque"* %8, %"class.std::deque"** %5
  %9 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %10 = bitcast %"class.std::deque"* %9 to %"class.std::_Deque_base"*
  %11 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %11, i32 0, i32 3
  %13 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %12, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  store i32* %14, i32** %4
  %15 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %16 = bitcast %"class.std::deque"* %15 to %"class.std::_Deque_base"*
  %17 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %16, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %17, i32 0, i32 3
  %19 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %18, i32 0, i32 2
  %20 = load i32*, i32** %19, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 -1
  store i32* %21, i32** %3
  %22 = alloca i32
  store i32 -1443385262, i32* %22
  br label %23

; <label>:23:                                     ; preds = %2, %101
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 -1443385262, label %26
    i32 629312955, label %31
    i32 -836186965, label %51
    i32 -957719514, label %55
    i32 -190067433, label %83
    i32 1280846650, label %99
    i32 324795386, label %100
  ]

; <label>:25:                                     ; preds = %23
  br label %101

; <label>:26:                                     ; preds = %23
  %27 = load volatile i32*, i32** %4
  %28 = load volatile i32*, i32** %3
  %29 = icmp ne i32* %27, %28
  %30 = select i1 %29, i32 629312955, i32 -836186965
  store i32 %30, i32* %22
  br label %101

; <label>:31:                                     ; preds = %23
  %32 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %33 = bitcast %"class.std::deque"* %32 to %"class.std::_Deque_base"*
  %34 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %33, i32 0, i32 0
  %35 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %34 to %"class.std::allocator.0"*
  %36 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %37 = bitcast %"class.std::deque"* %36 to %"class.std::_Deque_base"*
  %38 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %38, i32 0, i32 3
  %40 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %39, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  %42 = load i32*, i32** %7, align 8
  %43 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %42) #3
  call void @_ZNSt16allocator_traitsISaIiEE9constructIiJiEEEvRS0_PT_DpOT0_(%"class.std::allocator.0"* dereferenceable(1) %35, i32* %41, i32* dereferenceable(4) %43)
  %44 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %45 = bitcast %"class.std::deque"* %44 to %"class.std::_Deque_base"*
  %46 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %46, i32 0, i32 3
  %48 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %47, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = getelementptr inbounds i32, i32* %49, i32 1
  store i32* %50, i32** %48, align 8
  store i32 -957719514, i32* %22
  br label %101

; <label>:51:                                     ; preds = %23
  %52 = load i32*, i32** %7, align 8
  %53 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %52) #3
  %54 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  call void @_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJiEEEvDpOT_(%"class.std::deque"* %54, i32* dereferenceable(4) %53)
  store i32 -957719514, i32* %22
  br label %101

; <label>:55:                                     ; preds = %23
  %56 = load i32, i32* @x.229
  %57 = load i32, i32* @y.230
  %58 = add i32 %56, -153771665
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, -153771665
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 true, true
  %69 = and i1 %66, true
  %70 = and i1 %64, %68
  %71 = and i1 %67, true
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 true, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  %82 = select i1 %80, i32 -190067433, i32 324795386
  store i32 %82, i32* %22
  br label %101

; <label>:83:                                     ; preds = %23
  %84 = load i32, i32* @x.229
  %85 = load i32, i32* @y.230
  %86 = sub i32 %84, -1727369291
  %87 = sub i32 %86, 1
  %88 = add i32 %87, -1727369291
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = and i1 %92, %93
  %95 = xor i1 %92, %93
  %96 = or i1 %94, %95
  %97 = or i1 %92, %93
  %98 = select i1 %96, i32 1280846650, i32 324795386
  store i32 %98, i32* %22
  br label %101

; <label>:99:                                     ; preds = %23
  ret void

; <label>:100:                                    ; preds = %23
  store i32 -190067433, i32* %22
  br label %101

; <label>:101:                                    ; preds = %100, %83, %55, %51, %31, %26, %25
  br label %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE9constructIiJiEEEvRS0_PT_DpOT0_(%"class.std::allocator.0"* dereferenceable(1), i32*, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.0"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %4, align 8
  %8 = bitcast %"class.std::allocator.0"* %7 to %"class.__gnu_cxx::new_allocator.1"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.1"* %8, i32* %9, i32* dereferenceable(4) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4)) #4 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.233
  %6 = load i32, i32* @y.234
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -912840883, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -912840883, label %18
    i32 1977696810, label %38
    i32 1662622907, label %56
    i32 1402285377, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1977696810, i32 1402285377
  store i32 %37, i32* %14
  br label %61

; <label>:38:                                     ; preds = %15
  %39 = alloca i32*, align 8
  store i32* %0, i32** %39, align 8
  %40 = load i32*, i32** %39, align 8
  store i32* %40, i32** %2
  %41 = load i32, i32* @x.233
  %42 = load i32, i32* @y.234
  %43 = add i32 %41, -197163590
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -197163590
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 1662622907, i32 1402285377
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  %57 = load volatile i32*, i32** %2
  ret i32* %57

; <label>:58:                                     ; preds = %15
  %59 = alloca i32*, align 8
  store i32* %0, i32** %59, align 8
  %60 = load i32*, i32** %59, align 8
  store i32 1977696810, i32* %14
  br label %61

; <label>:61:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJiEEEvDpOT_(%"class.std::deque"*, i32* dereferenceable(4)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store i32* %1, i32** %4, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  call void @_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm(%"class.std::deque"* %7, i64 1)
  %8 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %9 = call i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %8)
  %10 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %11 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %11, i32 0, i32 3
  %13 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %12, i32 0, i32 3
  %14 = load i32**, i32*** %13, align 8
  %15 = getelementptr inbounds i32*, i32** %14, i64 1
  store i32* %9, i32** %15, align 8
  %16 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %17 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %17 to %"class.std::allocator.0"*
  %19 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %20 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %20, i32 0, i32 3
  %22 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %21, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = load i32*, i32** %4, align 8
  %25 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %24) #3
  invoke void @_ZNSt16allocator_traitsISaIiEE9constructIiJiEEEvRS0_PT_DpOT0_(%"class.std::allocator.0"* dereferenceable(1) %18, i32* %23, i32* dereferenceable(4) %25)
          to label %26 unwind label %45

; <label>:26:                                     ; preds = %2
  %27 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %28 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %28, i32 0, i32 3
  %30 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %31 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %31, i32 0, i32 3
  %33 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %32, i32 0, i32 3
  %34 = load i32**, i32*** %33, align 8
  %35 = getelementptr inbounds i32*, i32** %34, i64 1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %29, i32** %35) #3
  %36 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %37 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %37, i32 0, i32 3
  %39 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %38, i32 0, i32 1
  %40 = load i32*, i32** %39, align 8
  %41 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %42 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %42, i32 0, i32 3
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %43, i32 0, i32 0
  store i32* %40, i32** %44, align 8
  br label %106

; <label>:45:                                     ; preds = %2
  %46 = landingpad { i8*, i32 }
          catch i8* null
  %47 = extractvalue { i8*, i32 } %46, 0
  store i8* %47, i8** %5, align 8
  %48 = extractvalue { i8*, i32 } %46, 1
  store i32 %48, i32* %6, align 4
  br label %49

; <label>:49:                                     ; preds = %45
  %50 = load i8*, i8** %5, align 8
  %51 = call i8* @__cxa_begin_catch(i8* %50) #3
  %52 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %53 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %54 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %54, i32 0, i32 3
  %56 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %55, i32 0, i32 3
  %57 = load i32**, i32*** %56, align 8
  %58 = getelementptr inbounds i32*, i32** %57, i64 1
  %59 = load i32*, i32** %58, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %52, i32* %59) #3
  invoke void @__cxa_rethrow() #15
          to label %145 unwind label %60

; <label>:60:                                     ; preds = %49
  %61 = load i32, i32* @x.235
  %62 = load i32, i32* @y.236
  %63 = add i32 %61, -294630688
  %64 = sub i32 %63, 1
  %65 = sub i32 %64, -294630688
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 true, true
  %74 = and i1 %71, true
  %75 = and i1 %69, %73
  %76 = and i1 %72, true
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 true, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  br i1 %85, label %87, label %146

; <label>:87:                                     ; preds = %60, %146
  %88 = landingpad { i8*, i32 }
          cleanup
  %89 = extractvalue { i8*, i32 } %88, 0
  store i8* %89, i8** %5, align 8
  %90 = extractvalue { i8*, i32 } %88, 1
  store i32 %90, i32* %6, align 4
  %91 = load i32, i32* @x.235
  %92 = load i32, i32* @y.236
  %93 = sub i32 0, 1
  %94 = add i32 %91, %93
  %95 = sub i32 %91, 1
  %96 = mul i32 %91, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %92, 10
  %100 = and i1 %98, %99
  %101 = xor i1 %98, %99
  %102 = or i1 %100, %101
  %103 = or i1 %98, %99
  br i1 %102, label %104, label %146

; <label>:104:                                    ; preds = %87
  invoke void @__cxa_end_catch()
          to label %105 unwind label %142

; <label>:105:                                    ; preds = %104
  br label %107

; <label>:106:                                    ; preds = %26
  ret void

; <label>:107:                                    ; preds = %105
  %108 = load i32, i32* @x.235
  %109 = load i32, i32* @y.236
  %110 = sub i32 %108, -2014942997
  %111 = sub i32 %110, 1
  %112 = add i32 %111, -2014942997
  %113 = sub i32 %108, 1
  %114 = mul i32 %108, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %109, 10
  %118 = and i1 %116, %117
  %119 = xor i1 %116, %117
  %120 = or i1 %118, %119
  %121 = or i1 %116, %117
  br i1 %120, label %122, label %150

; <label>:122:                                    ; preds = %107, %150
  %123 = load i8*, i8** %5, align 8
  %124 = load i32, i32* %6, align 4
  %125 = insertvalue { i8*, i32 } undef, i8* %123, 0
  %126 = insertvalue { i8*, i32 } %125, i32 %124, 1
  %127 = load i32, i32* @x.235
  %128 = load i32, i32* @y.236
  %129 = add i32 %127, -150741211
  %130 = sub i32 %129, 1
  %131 = sub i32 %130, -150741211
  %132 = sub i32 %127, 1
  %133 = mul i32 %127, %131
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %128, 10
  %137 = and i1 %135, %136
  %138 = xor i1 %135, %136
  %139 = or i1 %137, %138
  %140 = or i1 %135, %136
  br i1 %139, label %141, label %150

; <label>:141:                                    ; preds = %122
  resume { i8*, i32 } %126

; <label>:142:                                    ; preds = %104
  %143 = landingpad { i8*, i32 }
          catch i8* null
  %144 = extractvalue { i8*, i32 } %143, 0
  call void @__clang_call_terminate(i8* %144) #13
  unreachable

; <label>:145:                                    ; preds = %49
  unreachable

; <label>:146:                                    ; preds = %87, %60
  %147 = landingpad { i8*, i32 }
          cleanup
  %148 = extractvalue { i8*, i32 } %147, 0
  store i8* %148, i8** %5, align 8
  %149 = extractvalue { i8*, i32 } %147, 1
  store i32 %149, i32* %6, align 4
  br label %87

; <label>:150:                                    ; preds = %122, %107
  %151 = load i8*, i8** %5, align 8
  %152 = load i32, i32* %6, align 4
  %153 = insertvalue { i8*, i32 } undef, i8* %151, 0
  %154 = insertvalue { i8*, i32 } %153, i32 %152, 1
  br label %122
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.1"*, i32*, i32* dereferenceable(4)) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.237
  %7 = load i32, i32* @y.238
  %8 = add i32 %6, 1356755664
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1356755664
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1311819955, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %78
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1311819955, label %20
    i32 710937115, label %40
    i32 1162747864, label %66
    i32 -1549095922, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %78

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 710937115, i32 -1549095922
  store i32 %39, i32* %16
  br label %78

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %42 = alloca i32*, align 8
  %43 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %41, align 8
  store i32* %1, i32** %42, align 8
  store i32* %2, i32** %43, align 8
  %44 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %41, align 8
  %45 = load i32*, i32** %42, align 8
  %46 = bitcast i32* %45 to i8*
  %47 = bitcast i8* %46 to i32*
  %48 = load i32*, i32** %43, align 8
  %49 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %48) #3
  %50 = load i32, i32* %49, align 4
  store i32 %50, i32* %47, align 4
  %51 = load i32, i32* @x.237
  %52 = load i32, i32* @y.238
  %53 = sub i32 %51, 91865011
  %54 = sub i32 %53, 1
  %55 = add i32 %54, 91865011
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 1162747864, i32 -1549095922
  store i32 %65, i32* %16
  br label %78

; <label>:66:                                     ; preds = %17
  ret void

; <label>:67:                                     ; preds = %17
  %68 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %69 = alloca i32*, align 8
  %70 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %68, align 8
  store i32* %1, i32** %69, align 8
  store i32* %2, i32** %70, align 8
  %71 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %68, align 8
  %72 = load i32*, i32** %69, align 8
  %73 = bitcast i32* %72 to i8*
  %74 = bitcast i8* %73 to i32*
  %75 = load i32*, i32** %70, align 8
  %76 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %75) #3
  %77 = load i32, i32* %76, align 4
  store i32 %77, i32* %74, align 4
  store i32 710937115, i32* %16
  br label %78

; <label>:78:                                     ; preds = %67, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm(%"class.std::deque"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::deque"*
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.239
  %9 = load i32, i32* @y.240
  %10 = add i32 %8, -1598392199
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -1598392199
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 397767490, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %239
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 397767490, label %22
    i32 1842712076, label %30
    i32 223935832, label %81
    i32 -1007449779, label %84
    i32 409921015, label %100
    i32 181052909, label %119
    i32 -240570259, label %120
    i32 -1973328524, label %121
    i32 -363344215, label %235
  ]

; <label>:21:                                     ; preds = %19
  br label %239

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 1842712076, i32 -1973328524
  store i32 %29, i32* %18
  br label %239

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::deque"*, align 8
  %32 = alloca i64, align 8
  store i64* %32, i64** %5
  store %"class.std::deque"* %0, %"class.std::deque"** %31, align 8
  %33 = load volatile i64*, i64** %5
  store i64 %1, i64* %33, align 8
  %34 = load %"class.std::deque"*, %"class.std::deque"** %31, align 8
  store %"class.std::deque"* %34, %"class.std::deque"** %4
  %35 = load volatile i64*, i64** %5
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 0, 1
  %38 = sub i64 %36, %37
  %39 = add i64 %36, 1
  %40 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %41 = bitcast %"class.std::deque"* %40 to %"class.std::_Deque_base"*
  %42 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %42, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %46 = bitcast %"class.std::deque"* %45 to %"class.std::_Deque_base"*
  %47 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %46, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %47, i32 0, i32 3
  %49 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %48, i32 0, i32 3
  %50 = load i32**, i32*** %49, align 8
  %51 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %52 = bitcast %"class.std::deque"* %51 to %"class.std::_Deque_base"*
  %53 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %52, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %53, i32 0, i32 0
  %55 = load i32**, i32*** %54, align 8
  %56 = ptrtoint i32** %50 to i64
  %57 = ptrtoint i32** %55 to i64
  %58 = sub i64 0, %57
  %59 = add i64 %56, %58
  %60 = sub i64 %56, %57
  %61 = sdiv exact i64 %59, 8
  %62 = add i64 %44, 8261737045648201689
  %63 = sub i64 %62, %61
  %64 = sub i64 %63, 8261737045648201689
  %65 = sub i64 %44, %61
  %66 = icmp ugt i64 %38, %64
  store i1 %66, i1* %3
  %67 = load i32, i32* @x.239
  %68 = load i32, i32* @y.240
  %69 = sub i32 0, 1
  %70 = add i32 %67, %69
  %71 = sub i32 %67, 1
  %72 = mul i32 %67, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %68, 10
  %76 = and i1 %74, %75
  %77 = xor i1 %74, %75
  %78 = or i1 %76, %77
  %79 = or i1 %74, %75
  %80 = select i1 %78, i32 223935832, i32 -1973328524
  store i32 %80, i32* %18
  br label %239

; <label>:81:                                     ; preds = %19
  %82 = load volatile i1, i1* %3
  %83 = select i1 %82, i32 -1007449779, i32 -240570259
  store i32 %83, i32* %18
  br label %239

; <label>:84:                                     ; preds = %19
  %85 = load i32, i32* @x.239
  %86 = load i32, i32* @y.240
  %87 = sub i32 %85, 1984080347
  %88 = sub i32 %87, 1
  %89 = add i32 %88, 1984080347
  %90 = sub i32 %85, 1
  %91 = mul i32 %85, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %86, 10
  %95 = and i1 %93, %94
  %96 = xor i1 %93, %94
  %97 = or i1 %95, %96
  %98 = or i1 %93, %94
  %99 = select i1 %97, i32 409921015, i32 -363344215
  store i32 %99, i32* %18
  br label %239

; <label>:100:                                    ; preds = %19
  %101 = load volatile i64*, i64** %5
  %102 = load i64, i64* %101, align 8
  %103 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  call void @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb(%"class.std::deque"* %103, i64 %102, i1 zeroext false)
  %104 = load i32, i32* @x.239
  %105 = load i32, i32* @y.240
  %106 = add i32 %104, 1775116103
  %107 = sub i32 %106, 1
  %108 = sub i32 %107, 1775116103
  %109 = sub i32 %104, 1
  %110 = mul i32 %104, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %105, 10
  %114 = and i1 %112, %113
  %115 = xor i1 %112, %113
  %116 = or i1 %114, %115
  %117 = or i1 %112, %113
  %118 = select i1 %116, i32 181052909, i32 -363344215
  store i32 %118, i32* %18
  br label %239

; <label>:119:                                    ; preds = %19
  store i32 -240570259, i32* %18
  br label %239

; <label>:120:                                    ; preds = %19
  ret void

; <label>:121:                                    ; preds = %19
  %122 = alloca %"class.std::deque"*, align 8
  %123 = alloca i64, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %122, align 8
  store i64 %1, i64* %123, align 8
  %124 = load %"class.std::deque"*, %"class.std::deque"** %122, align 8
  %125 = load i64, i64* %123, align 8
  %126 = add i64 0, 2293283301609740508
  %127 = sub i64 %126, %125
  %128 = sub i64 %127, 2293283301609740508
  %129 = sub i64 0, %125
  %130 = add i64 %128, -5133451961319915780
  %131 = add i64 %130, 1
  %132 = sub i64 %131, -5133451961319915780
  %133 = add i64 %128, 1
  %134 = add i64 %125, -8289210641210376077
  %135 = sub i64 %134, 1
  %136 = sub i64 %135, -8289210641210376077
  %137 = sub i64 %125, 1
  %138 = mul i64 %136, 1
  %139 = sub i64 %125, 6639972405845374249
  %140 = add i64 %139, 1
  %141 = add i64 %140, 6639972405845374249
  %142 = add i64 %125, 1
  %143 = bitcast %"class.std::deque"* %124 to %"class.std::_Deque_base"*
  %144 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %143, i32 0, i32 0
  %145 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %144, i32 0, i32 1
  %146 = load i64, i64* %145, align 8
  %147 = bitcast %"class.std::deque"* %124 to %"class.std::_Deque_base"*
  %148 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %147, i32 0, i32 0
  %149 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %148, i32 0, i32 3
  %150 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %149, i32 0, i32 3
  %151 = load i32**, i32*** %150, align 8
  %152 = bitcast %"class.std::deque"* %124 to %"class.std::_Deque_base"*
  %153 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %152, i32 0, i32 0
  %154 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %153, i32 0, i32 0
  %155 = load i32**, i32*** %154, align 8
  %156 = ptrtoint i32** %151 to i64
  %157 = ptrtoint i32** %155 to i64
  %158 = shl i64 %156, %157
  %159 = shl i64 %156, %157
  %160 = add i64 %156, -5733396849233345427
  %161 = sub i64 %160, %157
  %162 = sub i64 %161, -5733396849233345427
  %163 = sub i64 %156, %157
  %164 = mul i64 %162, %157
  %165 = add i64 0, -7883216742361919019
  %166 = sub i64 %165, %156
  %167 = sub i64 %166, -7883216742361919019
  %168 = sub i64 0, %156
  %169 = sub i64 %167, -2249710506055534096
  %170 = add i64 %169, %157
  %171 = add i64 %170, -2249710506055534096
  %172 = add i64 %167, %157
  %173 = shl i64 %156, %157
  %174 = add i64 %156, 6438232317453241705
  %175 = sub i64 %174, %157
  %176 = sub i64 %175, 6438232317453241705
  %177 = sub i64 %156, %157
  %178 = sub i64 0, -7882077952814508590
  %179 = sub i64 %178, %176
  %180 = add i64 %179, -7882077952814508590
  %181 = sub i64 0, %176
  %182 = add i64 %180, 4736782069887885835
  %183 = add i64 %182, 8
  %184 = sub i64 %183, 4736782069887885835
  %185 = add i64 %180, 8
  %186 = sub i64 0, -4016316987267870223
  %187 = sub i64 %186, %176
  %188 = add i64 %187, -4016316987267870223
  %189 = sub i64 0, %176
  %190 = sub i64 %188, -889479860488118950
  %191 = add i64 %190, 8
  %192 = add i64 %191, -889479860488118950
  %193 = add i64 %188, 8
  %194 = sub i64 0, %176
  %195 = add i64 0, %194
  %196 = sub i64 0, %176
  %197 = sub i64 0, 8
  %198 = sub i64 %195, %197
  %199 = add i64 %195, 8
  %200 = sdiv exact i64 %176, 8
  %201 = sub i64 0, -8836151119009428409
  %202 = sub i64 %201, %146
  %203 = add i64 %202, -8836151119009428409
  %204 = sub i64 0, %146
  %205 = sub i64 0, %200
  %206 = sub i64 %203, %205
  %207 = add i64 %203, %200
  %208 = add i64 %146, -1556001938806176915
  %209 = sub i64 %208, %200
  %210 = sub i64 %209, -1556001938806176915
  %211 = sub i64 %146, %200
  %212 = mul i64 %210, %200
  %213 = sub i64 0, %200
  %214 = add i64 %146, %213
  %215 = sub i64 %146, %200
  %216 = mul i64 %214, %200
  %217 = shl i64 %146, %200
  %218 = shl i64 %146, %200
  %219 = shl i64 %146, %200
  %220 = sub i64 %146, 5918127174572863889
  %221 = sub i64 %220, %200
  %222 = add i64 %221, 5918127174572863889
  %223 = sub i64 %146, %200
  %224 = mul i64 %222, %200
  %225 = sub i64 %146, 7406013602066074439
  %226 = sub i64 %225, %200
  %227 = add i64 %226, 7406013602066074439
  %228 = sub i64 %146, %200
  %229 = mul i64 %227, %200
  %230 = shl i64 %146, %200
  %231 = sub i64 0, %200
  %232 = add i64 %146, %231
  %233 = sub i64 %146, %200
  %234 = icmp ugt i64 %141, %232
  store i32 1842712076, i32* %18
  br label %239

; <label>:235:                                    ; preds = %19
  %236 = load volatile i64*, i64** %5
  %237 = load i64, i64* %236, align 8
  %238 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  call void @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb(%"class.std::deque"* %238, i64 %237, i1 zeroext false)
  store i32 409921015, i32* %18
  br label %239

; <label>:239:                                    ; preds = %235, %121, %119, %100, %84, %81, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"*) #0 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.241
  %6 = load i32, i32* @y.242
  %7 = add i32 %5, -1461507757
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1461507757
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1976086686, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %82
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1976086686, label %19
    i32 1433394541, label %39
    i32 -2104349893, label %73
    i32 943866151, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %82

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1433394541, i32 943866151
  store i32 %38, i32* %15
  br label %82

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %40, align 8
  %41 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %40, align 8
  %42 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %42 to %"class.std::allocator.0"*
  %44 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %45 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.0"* dereferenceable(1) %43, i64 %44)
  store i32* %45, i32** %2
  %46 = load i32, i32* @x.241
  %47 = load i32, i32* @y.242
  %48 = add i32 %46, 1304182938
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, 1304182938
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -2104349893, i32 943866151
  store i32 %72, i32* %15
  br label %82

; <label>:73:                                     ; preds = %16
  %74 = load volatile i32*, i32** %2
  ret i32* %74

; <label>:75:                                     ; preds = %16
  %76 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %76, align 8
  %77 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %76, align 8
  %78 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %77, i32 0, i32 0
  %79 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %78 to %"class.std::allocator.0"*
  %80 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %81 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.0"* dereferenceable(1) %79, i64 %80)
  store i32 1433394541, i32* %15
  br label %82

; <label>:82:                                     ; preds = %75, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"*, i32**) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca i32**, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store i32** %1, i32*** %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = load i32**, i32*** %4, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 3
  store i32** %6, i32*** %7, align 8
  %8 = load i32**, i32*** %4, align 8
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  store i32* %9, i32** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  %12 = load i32*, i32** %11, align 8
  %13 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #3
  %14 = getelementptr inbounds i32, i32* %12, i64 %13
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 2
  store i32* %14, i32** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"*, i32*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6 to %"class.std::allocator.0"*
  %8 = load i32*, i32** %4, align 8
  %9 = invoke i64 @_ZSt16__deque_buf_sizem(i64 4)
          to label %10 unwind label %12

; <label>:10:                                     ; preds = %2
  invoke void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.0"* dereferenceable(1) %7, i32* %8, i64 %9)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %10
  ret void

; <label>:12:                                     ; preds = %10, %2
  %13 = load i32, i32* @x.245
  %14 = load i32, i32* @y.246
  %15 = sub i32 %13, -960913356
  %16 = sub i32 %15, 1
  %17 = add i32 %16, -960913356
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %14, 10
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  br i1 %25, label %27, label %57

; <label>:27:                                     ; preds = %12, %57
  %28 = landingpad { i8*, i32 }
          catch i8* null
  %29 = extractvalue { i8*, i32 } %28, 0
  call void @__clang_call_terminate(i8* %29) #13
  %30 = load i32, i32* @x.245
  %31 = load i32, i32* @y.246
  %32 = add i32 %30, 957502898
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 957502898
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  br i1 %54, label %56, label %57

; <label>:56:                                     ; preds = %27
  unreachable

; <label>:57:                                     ; preds = %27, %12
  %58 = landingpad { i8*, i32 }
          catch i8* null
  %59 = extractvalue { i8*, i32 } %58, 0
  call void @__clang_call_terminate(i8* %59) #13
  br label %27
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb(%"class.std::deque"*, i64, i1 zeroext) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca i32**
  %8 = alloca i1
  %9 = alloca i64
  %10 = alloca i32**
  %11 = alloca i1
  %12 = alloca %"class.std::deque"*
  %13 = alloca i32***
  %14 = alloca i64*
  %15 = alloca i32***
  %16 = alloca i64*
  %17 = alloca i64*
  %18 = alloca i8*
  %19 = alloca i64*
  %20 = alloca i1
  %21 = alloca i1
  %22 = load i32, i32* @x.247
  %23 = load i32, i32* @y.248
  %24 = sub i32 %22, -1456974814
  %25 = sub i32 %24, 1
  %26 = add i32 %25, -1456974814
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  store i1 %30, i1* %21
  %31 = icmp slt i32 %23, 10
  store i1 %31, i1* %20
  %32 = alloca i32
  store i32 824655056, i32* %32
  %33 = alloca i64
  %34 = alloca i64
  br label %35

; <label>:35:                                     ; preds = %3, %817
  %36 = load i32, i32* %32
  switch i32 %36, label %37 [
    i32 824655056, label %38
    i32 -1072016027, label %46
    i32 75696788, label %128
    i32 -978532672, label %131
    i32 120141889, label %154
    i32 -1260747440, label %182
    i32 2122157734, label %212
    i32 1177779655, label %214
    i32 1852307263, label %215
    i32 -644738241, label %232
    i32 103359896, label %261
    i32 437002486, label %264
    i32 35204740, label %281
    i32 -749541946, label %309
    i32 -1298254022, label %356
    i32 1656430364, label %357
    i32 1829266637, label %358
    i32 1900005350, label %403
    i32 254984512, label %418
    i32 -1095017672, label %448
    i32 -2077820502, label %450
    i32 -2054538314, label %451
    i32 1221854873, label %480
    i32 -864969255, label %540
    i32 -672573334, label %541
    i32 1263252310, label %569
    i32 -434346975, label %613
    i32 2123082956, label %614
    i32 1458026548, label %715
    i32 -1567417200, label %718
    i32 1541185293, label %732
    i32 -1346590409, label %752
    i32 1101510309, label %755
    i32 -889701169, label %800
  ]

; <label>:37:                                     ; preds = %35
  br label %817

; <label>:38:                                     ; preds = %35
  %39 = load volatile i1, i1* %21
  %40 = load volatile i1, i1* %20
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -1072016027, i32 2123082956
  store i32 %45, i32* %32
  br label %817

; <label>:46:                                     ; preds = %35
  %47 = alloca %"class.std::deque"*, align 8
  %48 = alloca i64, align 8
  store i64* %48, i64** %19
  %49 = alloca i8, align 1
  store i8* %49, i8** %18
  %50 = alloca i64, align 8
  store i64* %50, i64** %17
  %51 = alloca i64, align 8
  store i64* %51, i64** %16
  %52 = alloca i32**, align 8
  store i32*** %52, i32**** %15
  %53 = alloca i64, align 8
  store i64* %53, i64** %14
  %54 = alloca i32**, align 8
  store i32*** %54, i32**** %13
  store %"class.std::deque"* %0, %"class.std::deque"** %47, align 8
  %55 = load volatile i64*, i64** %19
  store i64 %1, i64* %55, align 8
  %56 = zext i1 %2 to i8
  %57 = load volatile i8*, i8** %18
  store i8 %56, i8* %57, align 1
  %58 = load %"class.std::deque"*, %"class.std::deque"** %47, align 8
  store %"class.std::deque"* %58, %"class.std::deque"** %12
  %59 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %60 = bitcast %"class.std::deque"* %59 to %"class.std::_Deque_base"*
  %61 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %60, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %61, i32 0, i32 3
  %63 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %62, i32 0, i32 3
  %64 = load i32**, i32*** %63, align 8
  %65 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %66 = bitcast %"class.std::deque"* %65 to %"class.std::_Deque_base"*
  %67 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %66, i32 0, i32 0
  %68 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %67, i32 0, i32 2
  %69 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %68, i32 0, i32 3
  %70 = load i32**, i32*** %69, align 8
  %71 = ptrtoint i32** %64 to i64
  %72 = ptrtoint i32** %70 to i64
  %73 = sub i64 %71, -8066700315908026656
  %74 = sub i64 %73, %72
  %75 = add i64 %74, -8066700315908026656
  %76 = sub i64 %71, %72
  %77 = sdiv exact i64 %75, 8
  %78 = sub i64 0, 1
  %79 = sub i64 %77, %78
  %80 = add nsw i64 %77, 1
  %81 = load volatile i64*, i64** %17
  store i64 %79, i64* %81, align 8
  %82 = load volatile i64*, i64** %17
  %83 = load i64, i64* %82, align 8
  %84 = load volatile i64*, i64** %19
  %85 = load i64, i64* %84, align 8
  %86 = sub i64 0, %83
  %87 = sub i64 0, %85
  %88 = add i64 %86, %87
  %89 = sub i64 0, %88
  %90 = add i64 %83, %85
  %91 = load volatile i64*, i64** %16
  store i64 %89, i64* %91, align 8
  %92 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %93 = bitcast %"class.std::deque"* %92 to %"class.std::_Deque_base"*
  %94 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %93, i32 0, i32 0
  %95 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %94, i32 0, i32 1
  %96 = load i64, i64* %95, align 8
  %97 = load volatile i64*, i64** %16
  %98 = load i64, i64* %97, align 8
  %99 = mul i64 2, %98
  %100 = icmp ugt i64 %96, %99
  store i1 %100, i1* %11
  %101 = load i32, i32* @x.247
  %102 = load i32, i32* @y.248
  %103 = sub i32 %101, 538787574
  %104 = sub i32 %103, 1
  %105 = add i32 %104, 538787574
  %106 = sub i32 %101, 1
  %107 = mul i32 %101, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %102, 10
  %111 = xor i1 %109, true
  %112 = xor i1 %110, true
  %113 = xor i1 false, true
  %114 = and i1 %111, false
  %115 = and i1 %109, %113
  %116 = and i1 %112, false
  %117 = and i1 %110, %113
  %118 = or i1 %114, %115
  %119 = or i1 %116, %117
  %120 = xor i1 %118, %119
  %121 = or i1 %111, %112
  %122 = xor i1 %121, true
  %123 = or i1 false, %113
  %124 = and i1 %122, %123
  %125 = or i1 %120, %124
  %126 = or i1 %109, %110
  %127 = select i1 %125, i32 75696788, i32 2123082956
  store i32 %127, i32* %32
  br label %817

; <label>:128:                                    ; preds = %35
  %129 = load volatile i1, i1* %11
  %130 = select i1 %129, i32 -978532672, i32 1829266637
  store i32 %130, i32* %32
  br label %817

; <label>:131:                                    ; preds = %35
  %132 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %133 = bitcast %"class.std::deque"* %132 to %"class.std::_Deque_base"*
  %134 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %133, i32 0, i32 0
  %135 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %134, i32 0, i32 0
  %136 = load i32**, i32*** %135, align 8
  %137 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %138 = bitcast %"class.std::deque"* %137 to %"class.std::_Deque_base"*
  %139 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %138, i32 0, i32 0
  %140 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %139, i32 0, i32 1
  %141 = load i64, i64* %140, align 8
  %142 = load volatile i64*, i64** %16
  %143 = load i64, i64* %142, align 8
  %144 = sub i64 %141, -2938001099401029422
  %145 = sub i64 %144, %143
  %146 = add i64 %145, -2938001099401029422
  %147 = sub i64 %141, %143
  %148 = udiv i64 %146, 2
  %149 = getelementptr inbounds i32*, i32** %136, i64 %148
  store i32** %149, i32*** %10
  %150 = load volatile i8*, i8** %18
  %151 = load i8, i8* %150, align 1
  %152 = trunc i8 %151 to i1
  %153 = select i1 %152, i32 120141889, i32 1177779655
  store i32 %153, i32* %32
  br label %817

; <label>:154:                                    ; preds = %35
  %155 = load i32, i32* @x.247
  %156 = load i32, i32* @y.248
  %157 = sub i32 %155, 303733706
  %158 = sub i32 %157, 1
  %159 = add i32 %158, 303733706
  %160 = sub i32 %155, 1
  %161 = mul i32 %155, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %156, 10
  %165 = xor i1 %163, true
  %166 = xor i1 %164, true
  %167 = xor i1 true, true
  %168 = and i1 %165, true
  %169 = and i1 %163, %167
  %170 = and i1 %166, true
  %171 = and i1 %164, %167
  %172 = or i1 %168, %169
  %173 = or i1 %170, %171
  %174 = xor i1 %172, %173
  %175 = or i1 %165, %166
  %176 = xor i1 %175, true
  %177 = or i1 true, %167
  %178 = and i1 %176, %177
  %179 = or i1 %174, %178
  %180 = or i1 %163, %164
  %181 = select i1 %179, i32 -1260747440, i32 1458026548
  store i32 %181, i32* %32
  br label %817

; <label>:182:                                    ; preds = %35
  %183 = load volatile i64*, i64** %19
  %184 = load i64, i64* %183, align 8
  store i64 %184, i64* %9
  %185 = load i32, i32* @x.247
  %186 = load i32, i32* @y.248
  %187 = add i32 %185, 396419217
  %188 = sub i32 %187, 1
  %189 = sub i32 %188, 396419217
  %190 = sub i32 %185, 1
  %191 = mul i32 %185, %189
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %186, 10
  %195 = xor i1 %193, true
  %196 = xor i1 %194, true
  %197 = xor i1 true, true
  %198 = and i1 %195, true
  %199 = and i1 %193, %197
  %200 = and i1 %196, true
  %201 = and i1 %194, %197
  %202 = or i1 %198, %199
  %203 = or i1 %200, %201
  %204 = xor i1 %202, %203
  %205 = or i1 %195, %196
  %206 = xor i1 %205, true
  %207 = or i1 true, %197
  %208 = and i1 %206, %207
  %209 = or i1 %204, %208
  %210 = or i1 %193, %194
  %211 = select i1 %209, i32 2122157734, i32 1458026548
  store i32 %211, i32* %32
  br label %817

; <label>:212:                                    ; preds = %35
  store i32 1852307263, i32* %32
  %213 = load volatile i64, i64* %9
  store i64 %213, i64* %33
  br label %817

; <label>:214:                                    ; preds = %35
  store i32 1852307263, i32* %32
  store i64 0, i64* %33
  br label %817

; <label>:215:                                    ; preds = %35
  %216 = load i64, i64* %33
  store i64 %216, i64* %5
  %217 = load i32, i32* @x.247
  %218 = load i32, i32* @y.248
  %219 = add i32 %217, -1992757653
  %220 = sub i32 %219, 1
  %221 = sub i32 %220, -1992757653
  %222 = sub i32 %217, 1
  %223 = mul i32 %217, %221
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %218, 10
  %227 = and i1 %225, %226
  %228 = xor i1 %225, %226
  %229 = or i1 %227, %228
  %230 = or i1 %225, %226
  %231 = select i1 %229, i32 -644738241, i32 -1567417200
  store i32 %231, i32* %32
  br label %817

; <label>:232:                                    ; preds = %35
  %233 = load volatile i32**, i32*** %10
  %234 = load volatile i64, i64* %5
  %235 = getelementptr inbounds i32*, i32** %233, i64 %234
  %236 = load volatile i32***, i32**** %15
  store i32** %235, i32*** %236, align 8
  %237 = load volatile i32***, i32**** %15
  %238 = load i32**, i32*** %237, align 8
  %239 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %240 = bitcast %"class.std::deque"* %239 to %"class.std::_Deque_base"*
  %241 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %240, i32 0, i32 0
  %242 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %241, i32 0, i32 2
  %243 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %242, i32 0, i32 3
  %244 = load i32**, i32*** %243, align 8
  %245 = icmp ult i32** %238, %244
  store i1 %245, i1* %8
  %246 = load i32, i32* @x.247
  %247 = load i32, i32* @y.248
  %248 = add i32 %246, 728399342
  %249 = sub i32 %248, 1
  %250 = sub i32 %249, 728399342
  %251 = sub i32 %246, 1
  %252 = mul i32 %246, %250
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %247, 10
  %256 = and i1 %254, %255
  %257 = xor i1 %254, %255
  %258 = or i1 %256, %257
  %259 = or i1 %254, %255
  %260 = select i1 %258, i32 103359896, i32 -1567417200
  store i32 %260, i32* %32
  br label %817

; <label>:261:                                    ; preds = %35
  %262 = load volatile i1, i1* %8
  %263 = select i1 %262, i32 437002486, i32 35204740
  store i32 %263, i32* %32
  br label %817

; <label>:264:                                    ; preds = %35
  %265 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %266 = bitcast %"class.std::deque"* %265 to %"class.std::_Deque_base"*
  %267 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %266, i32 0, i32 0
  %268 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %267, i32 0, i32 2
  %269 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %268, i32 0, i32 3
  %270 = load i32**, i32*** %269, align 8
  %271 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %272 = bitcast %"class.std::deque"* %271 to %"class.std::_Deque_base"*
  %273 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %272, i32 0, i32 0
  %274 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %273, i32 0, i32 3
  %275 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %274, i32 0, i32 3
  %276 = load i32**, i32*** %275, align 8
  %277 = getelementptr inbounds i32*, i32** %276, i64 1
  %278 = load volatile i32***, i32**** %15
  %279 = load i32**, i32*** %278, align 8
  %280 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %270, i32** %277, i32** %279)
  store i32 1656430364, i32* %32
  br label %817

; <label>:281:                                    ; preds = %35
  %282 = load i32, i32* @x.247
  %283 = load i32, i32* @y.248
  %284 = add i32 %282, -1220686426
  %285 = sub i32 %284, 1
  %286 = sub i32 %285, -1220686426
  %287 = sub i32 %282, 1
  %288 = mul i32 %282, %286
  %289 = urem i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %283, 10
  %292 = xor i1 %290, true
  %293 = xor i1 %291, true
  %294 = xor i1 true, true
  %295 = and i1 %292, true
  %296 = and i1 %290, %294
  %297 = and i1 %293, true
  %298 = and i1 %291, %294
  %299 = or i1 %295, %296
  %300 = or i1 %297, %298
  %301 = xor i1 %299, %300
  %302 = or i1 %292, %293
  %303 = xor i1 %302, true
  %304 = or i1 true, %294
  %305 = and i1 %303, %304
  %306 = or i1 %301, %305
  %307 = or i1 %290, %291
  %308 = select i1 %306, i32 -749541946, i32 1541185293
  store i32 %308, i32* %32
  br label %817

; <label>:309:                                    ; preds = %35
  %310 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %311 = bitcast %"class.std::deque"* %310 to %"class.std::_Deque_base"*
  %312 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %311, i32 0, i32 0
  %313 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %312, i32 0, i32 2
  %314 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %313, i32 0, i32 3
  %315 = load i32**, i32*** %314, align 8
  %316 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %317 = bitcast %"class.std::deque"* %316 to %"class.std::_Deque_base"*
  %318 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %317, i32 0, i32 0
  %319 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %318, i32 0, i32 3
  %320 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %319, i32 0, i32 3
  %321 = load i32**, i32*** %320, align 8
  %322 = getelementptr inbounds i32*, i32** %321, i64 1
  %323 = load volatile i32***, i32**** %15
  %324 = load i32**, i32*** %323, align 8
  %325 = load volatile i64*, i64** %17
  %326 = load i64, i64* %325, align 8
  %327 = getelementptr inbounds i32*, i32** %324, i64 %326
  %328 = call i32** @_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_(i32** %315, i32** %322, i32** %327)
  %329 = load i32, i32* @x.247
  %330 = load i32, i32* @y.248
  %331 = sub i32 %329, 1690717078
  %332 = sub i32 %331, 1
  %333 = add i32 %332, 1690717078
  %334 = sub i32 %329, 1
  %335 = mul i32 %329, %333
  %336 = urem i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %330, 10
  %339 = xor i1 %337, true
  %340 = xor i1 %338, true
  %341 = xor i1 false, true
  %342 = and i1 %339, false
  %343 = and i1 %337, %341
  %344 = and i1 %340, false
  %345 = and i1 %338, %341
  %346 = or i1 %342, %343
  %347 = or i1 %344, %345
  %348 = xor i1 %346, %347
  %349 = or i1 %339, %340
  %350 = xor i1 %349, true
  %351 = or i1 false, %341
  %352 = and i1 %350, %351
  %353 = or i1 %348, %352
  %354 = or i1 %337, %338
  %355 = select i1 %353, i32 -1298254022, i32 1541185293
  store i32 %355, i32* %32
  br label %817

; <label>:356:                                    ; preds = %35
  store i32 1656430364, i32* %32
  br label %817

; <label>:357:                                    ; preds = %35
  store i32 -672573334, i32* %32
  br label %817

; <label>:358:                                    ; preds = %35
  %359 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %360 = bitcast %"class.std::deque"* %359 to %"class.std::_Deque_base"*
  %361 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %360, i32 0, i32 0
  %362 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %361, i32 0, i32 1
  %363 = load i64, i64* %362, align 8
  %364 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %365 = bitcast %"class.std::deque"* %364 to %"class.std::_Deque_base"*
  %366 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %365, i32 0, i32 0
  %367 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %366, i32 0, i32 1
  %368 = load volatile i64*, i64** %19
  %369 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %367, i64* dereferenceable(8) %368)
  %370 = load i64, i64* %369, align 8
  %371 = sub i64 %363, -227320492173448586
  %372 = add i64 %371, %370
  %373 = add i64 %372, -227320492173448586
  %374 = add i64 %363, %370
  %375 = sub i64 0, %373
  %376 = sub i64 0, 2
  %377 = add i64 %375, %376
  %378 = sub i64 0, %377
  %379 = add i64 %373, 2
  %380 = load volatile i64*, i64** %14
  store i64 %378, i64* %380, align 8
  %381 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %382 = bitcast %"class.std::deque"* %381 to %"class.std::_Deque_base"*
  %383 = load volatile i64*, i64** %14
  %384 = load i64, i64* %383, align 8
  %385 = call i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"* %382, i64 %384)
  %386 = load volatile i32***, i32**** %13
  store i32** %385, i32*** %386, align 8
  %387 = load volatile i32***, i32**** %13
  %388 = load i32**, i32*** %387, align 8
  %389 = load volatile i64*, i64** %14
  %390 = load i64, i64* %389, align 8
  %391 = load volatile i64*, i64** %16
  %392 = load i64, i64* %391, align 8
  %393 = add i64 %390, -5875903538956119014
  %394 = sub i64 %393, %392
  %395 = sub i64 %394, -5875903538956119014
  %396 = sub i64 %390, %392
  %397 = udiv i64 %395, 2
  %398 = getelementptr inbounds i32*, i32** %388, i64 %397
  store i32** %398, i32*** %7
  %399 = load volatile i8*, i8** %18
  %400 = load i8, i8* %399, align 1
  %401 = trunc i8 %400 to i1
  %402 = select i1 %401, i32 1900005350, i32 -2077820502
  store i32 %402, i32* %32
  br label %817

; <label>:403:                                    ; preds = %35
  %404 = load i32, i32* @x.247
  %405 = load i32, i32* @y.248
  %406 = sub i32 0, 1
  %407 = add i32 %404, %406
  %408 = sub i32 %404, 1
  %409 = mul i32 %404, %407
  %410 = urem i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %405, 10
  %413 = and i1 %411, %412
  %414 = xor i1 %411, %412
  %415 = or i1 %413, %414
  %416 = or i1 %411, %412
  %417 = select i1 %415, i32 254984512, i32 -1346590409
  store i32 %417, i32* %32
  br label %817

; <label>:418:                                    ; preds = %35
  %419 = load volatile i64*, i64** %19
  %420 = load i64, i64* %419, align 8
  store i64 %420, i64* %6
  %421 = load i32, i32* @x.247
  %422 = load i32, i32* @y.248
  %423 = sub i32 %421, 730920610
  %424 = sub i32 %423, 1
  %425 = add i32 %424, 730920610
  %426 = sub i32 %421, 1
  %427 = mul i32 %421, %425
  %428 = urem i32 %427, 2
  %429 = icmp eq i32 %428, 0
  %430 = icmp slt i32 %422, 10
  %431 = xor i1 %429, true
  %432 = xor i1 %430, true
  %433 = xor i1 false, true
  %434 = and i1 %431, false
  %435 = and i1 %429, %433
  %436 = and i1 %432, false
  %437 = and i1 %430, %433
  %438 = or i1 %434, %435
  %439 = or i1 %436, %437
  %440 = xor i1 %438, %439
  %441 = or i1 %431, %432
  %442 = xor i1 %441, true
  %443 = or i1 false, %433
  %444 = and i1 %442, %443
  %445 = or i1 %440, %444
  %446 = or i1 %429, %430
  %447 = select i1 %445, i32 -1095017672, i32 -1346590409
  store i32 %447, i32* %32
  br label %817

; <label>:448:                                    ; preds = %35
  store i32 -2054538314, i32* %32
  %449 = load volatile i64, i64* %6
  store i64 %449, i64* %34
  br label %817

; <label>:450:                                    ; preds = %35
  store i32 -2054538314, i32* %32
  store i64 0, i64* %34
  br label %817

; <label>:451:                                    ; preds = %35
  %452 = load i64, i64* %34
  store i64 %452, i64* %4
  %453 = load i32, i32* @x.247
  %454 = load i32, i32* @y.248
  %455 = add i32 %453, -186615089
  %456 = sub i32 %455, 1
  %457 = sub i32 %456, -186615089
  %458 = sub i32 %453, 1
  %459 = mul i32 %453, %457
  %460 = urem i32 %459, 2
  %461 = icmp eq i32 %460, 0
  %462 = icmp slt i32 %454, 10
  %463 = xor i1 %461, true
  %464 = xor i1 %462, true
  %465 = xor i1 true, true
  %466 = and i1 %463, true
  %467 = and i1 %461, %465
  %468 = and i1 %464, true
  %469 = and i1 %462, %465
  %470 = or i1 %466, %467
  %471 = or i1 %468, %469
  %472 = xor i1 %470, %471
  %473 = or i1 %463, %464
  %474 = xor i1 %473, true
  %475 = or i1 true, %465
  %476 = and i1 %474, %475
  %477 = or i1 %472, %476
  %478 = or i1 %461, %462
  %479 = select i1 %477, i32 1221854873, i32 1101510309
  store i32 %479, i32* %32
  br label %817

; <label>:480:                                    ; preds = %35
  %481 = load volatile i32**, i32*** %7
  %482 = load volatile i64, i64* %4
  %483 = getelementptr inbounds i32*, i32** %481, i64 %482
  %484 = load volatile i32***, i32**** %15
  store i32** %483, i32*** %484, align 8
  %485 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %486 = bitcast %"class.std::deque"* %485 to %"class.std::_Deque_base"*
  %487 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %486, i32 0, i32 0
  %488 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %487, i32 0, i32 2
  %489 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %488, i32 0, i32 3
  %490 = load i32**, i32*** %489, align 8
  %491 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %492 = bitcast %"class.std::deque"* %491 to %"class.std::_Deque_base"*
  %493 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %492, i32 0, i32 0
  %494 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %493, i32 0, i32 3
  %495 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %494, i32 0, i32 3
  %496 = load i32**, i32*** %495, align 8
  %497 = getelementptr inbounds i32*, i32** %496, i64 1
  %498 = load volatile i32***, i32**** %15
  %499 = load i32**, i32*** %498, align 8
  %500 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %490, i32** %497, i32** %499)
  %501 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %502 = bitcast %"class.std::deque"* %501 to %"class.std::_Deque_base"*
  %503 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %504 = bitcast %"class.std::deque"* %503 to %"class.std::_Deque_base"*
  %505 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %504, i32 0, i32 0
  %506 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %505, i32 0, i32 0
  %507 = load i32**, i32*** %506, align 8
  %508 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %509 = bitcast %"class.std::deque"* %508 to %"class.std::_Deque_base"*
  %510 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %509, i32 0, i32 0
  %511 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %510, i32 0, i32 1
  %512 = load i64, i64* %511, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %502, i32** %507, i64 %512) #3
  %513 = load volatile i32***, i32**** %13
  %514 = load i32**, i32*** %513, align 8
  %515 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %516 = bitcast %"class.std::deque"* %515 to %"class.std::_Deque_base"*
  %517 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %516, i32 0, i32 0
  %518 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %517, i32 0, i32 0
  store i32** %514, i32*** %518, align 8
  %519 = load volatile i64*, i64** %14
  %520 = load i64, i64* %519, align 8
  %521 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %522 = bitcast %"class.std::deque"* %521 to %"class.std::_Deque_base"*
  %523 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %522, i32 0, i32 0
  %524 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %523, i32 0, i32 1
  store i64 %520, i64* %524, align 8
  %525 = load i32, i32* @x.247
  %526 = load i32, i32* @y.248
  %527 = sub i32 %525, 1013212761
  %528 = sub i32 %527, 1
  %529 = add i32 %528, 1013212761
  %530 = sub i32 %525, 1
  %531 = mul i32 %525, %529
  %532 = urem i32 %531, 2
  %533 = icmp eq i32 %532, 0
  %534 = icmp slt i32 %526, 10
  %535 = and i1 %533, %534
  %536 = xor i1 %533, %534
  %537 = or i1 %535, %536
  %538 = or i1 %533, %534
  %539 = select i1 %537, i32 -864969255, i32 1101510309
  store i32 %539, i32* %32
  br label %817

; <label>:540:                                    ; preds = %35
  store i32 -672573334, i32* %32
  br label %817

; <label>:541:                                    ; preds = %35
  %542 = load i32, i32* @x.247
  %543 = load i32, i32* @y.248
  %544 = add i32 %542, 490995214
  %545 = sub i32 %544, 1
  %546 = sub i32 %545, 490995214
  %547 = sub i32 %542, 1
  %548 = mul i32 %542, %546
  %549 = urem i32 %548, 2
  %550 = icmp eq i32 %549, 0
  %551 = icmp slt i32 %543, 10
  %552 = xor i1 %550, true
  %553 = xor i1 %551, true
  %554 = xor i1 true, true
  %555 = and i1 %552, true
  %556 = and i1 %550, %554
  %557 = and i1 %553, true
  %558 = and i1 %551, %554
  %559 = or i1 %555, %556
  %560 = or i1 %557, %558
  %561 = xor i1 %559, %560
  %562 = or i1 %552, %553
  %563 = xor i1 %562, true
  %564 = or i1 true, %554
  %565 = and i1 %563, %564
  %566 = or i1 %561, %565
  %567 = or i1 %550, %551
  %568 = select i1 %566, i32 1263252310, i32 -889701169
  store i32 %568, i32* %32
  br label %817

; <label>:569:                                    ; preds = %35
  %570 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %571 = bitcast %"class.std::deque"* %570 to %"class.std::_Deque_base"*
  %572 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %571, i32 0, i32 0
  %573 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %572, i32 0, i32 2
  %574 = load volatile i32***, i32**** %15
  %575 = load i32**, i32*** %574, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %573, i32** %575) #3
  %576 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %577 = bitcast %"class.std::deque"* %576 to %"class.std::_Deque_base"*
  %578 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %577, i32 0, i32 0
  %579 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %578, i32 0, i32 3
  %580 = load volatile i32***, i32**** %15
  %581 = load i32**, i32*** %580, align 8
  %582 = load volatile i64*, i64** %17
  %583 = load i64, i64* %582, align 8
  %584 = getelementptr inbounds i32*, i32** %581, i64 %583
  %585 = getelementptr inbounds i32*, i32** %584, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %579, i32** %585) #3
  %586 = load i32, i32* @x.247
  %587 = load i32, i32* @y.248
  %588 = add i32 %586, -1189069545
  %589 = sub i32 %588, 1
  %590 = sub i32 %589, -1189069545
  %591 = sub i32 %586, 1
  %592 = mul i32 %586, %590
  %593 = urem i32 %592, 2
  %594 = icmp eq i32 %593, 0
  %595 = icmp slt i32 %587, 10
  %596 = xor i1 %594, true
  %597 = xor i1 %595, true
  %598 = xor i1 true, true
  %599 = and i1 %596, true
  %600 = and i1 %594, %598
  %601 = and i1 %597, true
  %602 = and i1 %595, %598
  %603 = or i1 %599, %600
  %604 = or i1 %601, %602
  %605 = xor i1 %603, %604
  %606 = or i1 %596, %597
  %607 = xor i1 %606, true
  %608 = or i1 true, %598
  %609 = and i1 %607, %608
  %610 = or i1 %605, %609
  %611 = or i1 %594, %595
  %612 = select i1 %610, i32 -434346975, i32 -889701169
  store i32 %612, i32* %32
  br label %817

; <label>:613:                                    ; preds = %35
  ret void

; <label>:614:                                    ; preds = %35
  %615 = alloca %"class.std::deque"*, align 8
  %616 = alloca i64, align 8
  %617 = alloca i8, align 1
  %618 = alloca i64, align 8
  %619 = alloca i64, align 8
  %620 = alloca i32**, align 8
  %621 = alloca i64, align 8
  %622 = alloca i32**, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %615, align 8
  store i64 %1, i64* %616, align 8
  %623 = zext i1 %2 to i8
  store i8 %623, i8* %617, align 1
  %624 = load %"class.std::deque"*, %"class.std::deque"** %615, align 8
  %625 = bitcast %"class.std::deque"* %624 to %"class.std::_Deque_base"*
  %626 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %625, i32 0, i32 0
  %627 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %626, i32 0, i32 3
  %628 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %627, i32 0, i32 3
  %629 = load i32**, i32*** %628, align 8
  %630 = bitcast %"class.std::deque"* %624 to %"class.std::_Deque_base"*
  %631 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %630, i32 0, i32 0
  %632 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %631, i32 0, i32 2
  %633 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %632, i32 0, i32 3
  %634 = load i32**, i32*** %633, align 8
  %635 = ptrtoint i32** %629 to i64
  %636 = ptrtoint i32** %634 to i64
  %637 = sub i64 0, %636
  %638 = add i64 %635, %637
  %639 = sub i64 %635, %636
  %640 = mul i64 %638, %636
  %641 = sub i64 0, %635
  %642 = add i64 0, %641
  %643 = sub i64 0, %635
  %644 = sub i64 0, %642
  %645 = sub i64 0, %636
  %646 = add i64 %644, %645
  %647 = sub i64 0, %646
  %648 = add i64 %642, %636
  %649 = shl i64 %635, %636
  %650 = sub i64 0, %636
  %651 = add i64 %635, %650
  %652 = sub i64 %635, %636
  %653 = add i64 0, -2046272007056258010
  %654 = sub i64 %653, %651
  %655 = sub i64 %654, -2046272007056258010
  %656 = sub i64 0, %651
  %657 = sub i64 %655, 3186087198881284657
  %658 = add i64 %657, 8
  %659 = add i64 %658, 3186087198881284657
  %660 = add i64 %655, 8
  %661 = sub i64 0, %651
  %662 = add i64 0, %661
  %663 = sub i64 0, %651
  %664 = sub i64 0, %662
  %665 = sub i64 0, 8
  %666 = add i64 %664, %665
  %667 = sub i64 0, %666
  %668 = add i64 %662, 8
  %669 = sdiv exact i64 %651, 8
  %670 = add i64 %669, -7153960740453976135
  %671 = sub i64 %670, 1
  %672 = sub i64 %671, -7153960740453976135
  %673 = sub i64 %669, 1
  %674 = mul i64 %672, 1
  %675 = shl i64 %669, 1
  %676 = add i64 %669, 1342993699814129577
  %677 = add i64 %676, 1
  %678 = sub i64 %677, 1342993699814129577
  %679 = add nsw i64 %669, 1
  store i64 %678, i64* %618, align 8
  %680 = load i64, i64* %618, align 8
  %681 = load i64, i64* %616, align 8
  %682 = shl i64 %680, %681
  %683 = add i64 0, 6427264042245745961
  %684 = sub i64 %683, %680
  %685 = sub i64 %684, 6427264042245745961
  %686 = sub i64 0, %680
  %687 = sub i64 0, %685
  %688 = sub i64 0, %681
  %689 = add i64 %687, %688
  %690 = sub i64 0, %689
  %691 = add i64 %685, %681
  %692 = sub i64 0, %681
  %693 = sub i64 %680, %692
  %694 = add i64 %680, %681
  store i64 %693, i64* %619, align 8
  %695 = bitcast %"class.std::deque"* %624 to %"class.std::_Deque_base"*
  %696 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %695, i32 0, i32 0
  %697 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %696, i32 0, i32 1
  %698 = load i64, i64* %697, align 8
  %699 = load i64, i64* %619, align 8
  %700 = sub i64 0, 2
  %701 = add i64 0, %700
  %702 = sub i64 0, 2
  %703 = sub i64 %701, -1461595502320951285
  %704 = add i64 %703, %699
  %705 = add i64 %704, -1461595502320951285
  %706 = add i64 %701, %699
  %707 = sub i64 0, 2
  %708 = add i64 0, %707
  %709 = sub i64 0, 2
  %710 = sub i64 0, %699
  %711 = sub i64 %708, %710
  %712 = add i64 %708, %699
  %713 = mul i64 2, %699
  %714 = icmp ugt i64 %698, %713
  store i32 -1072016027, i32* %32
  br label %817

; <label>:715:                                    ; preds = %35
  %716 = load volatile i64*, i64** %19
  %717 = load i64, i64* %716, align 8
  store i32 -1260747440, i32* %32
  br label %817

; <label>:718:                                    ; preds = %35
  %719 = load volatile i32**, i32*** %10
  %720 = load volatile i64, i64* %5
  %721 = getelementptr inbounds i32*, i32** %719, i64 %720
  %722 = load volatile i32***, i32**** %15
  store i32** %721, i32*** %722, align 8
  %723 = load volatile i32***, i32**** %15
  %724 = load i32**, i32*** %723, align 8
  %725 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %726 = bitcast %"class.std::deque"* %725 to %"class.std::_Deque_base"*
  %727 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %726, i32 0, i32 0
  %728 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %727, i32 0, i32 2
  %729 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %728, i32 0, i32 3
  %730 = load i32**, i32*** %729, align 8
  %731 = icmp ult i32** %724, %730
  store i32 -644738241, i32* %32
  br label %817

; <label>:732:                                    ; preds = %35
  %733 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %734 = bitcast %"class.std::deque"* %733 to %"class.std::_Deque_base"*
  %735 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %734, i32 0, i32 0
  %736 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %735, i32 0, i32 2
  %737 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %736, i32 0, i32 3
  %738 = load i32**, i32*** %737, align 8
  %739 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %740 = bitcast %"class.std::deque"* %739 to %"class.std::_Deque_base"*
  %741 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %740, i32 0, i32 0
  %742 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %741, i32 0, i32 3
  %743 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %742, i32 0, i32 3
  %744 = load i32**, i32*** %743, align 8
  %745 = getelementptr inbounds i32*, i32** %744, i64 1
  %746 = load volatile i32***, i32**** %15
  %747 = load i32**, i32*** %746, align 8
  %748 = load volatile i64*, i64** %17
  %749 = load i64, i64* %748, align 8
  %750 = getelementptr inbounds i32*, i32** %747, i64 %749
  %751 = call i32** @_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_(i32** %738, i32** %745, i32** %750)
  store i32 -749541946, i32* %32
  br label %817

; <label>:752:                                    ; preds = %35
  %753 = load volatile i64*, i64** %19
  %754 = load i64, i64* %753, align 8
  store i32 254984512, i32* %32
  br label %817

; <label>:755:                                    ; preds = %35
  %756 = load volatile i32**, i32*** %7
  %757 = load volatile i64, i64* %4
  %758 = getelementptr inbounds i32*, i32** %756, i64 %757
  %759 = load volatile i32***, i32**** %15
  store i32** %758, i32*** %759, align 8
  %760 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %761 = bitcast %"class.std::deque"* %760 to %"class.std::_Deque_base"*
  %762 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %761, i32 0, i32 0
  %763 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %762, i32 0, i32 2
  %764 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %763, i32 0, i32 3
  %765 = load i32**, i32*** %764, align 8
  %766 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %767 = bitcast %"class.std::deque"* %766 to %"class.std::_Deque_base"*
  %768 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %767, i32 0, i32 0
  %769 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %768, i32 0, i32 3
  %770 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %769, i32 0, i32 3
  %771 = load i32**, i32*** %770, align 8
  %772 = getelementptr inbounds i32*, i32** %771, i64 1
  %773 = load volatile i32***, i32**** %15
  %774 = load i32**, i32*** %773, align 8
  %775 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %765, i32** %772, i32** %774)
  %776 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %777 = bitcast %"class.std::deque"* %776 to %"class.std::_Deque_base"*
  %778 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %779 = bitcast %"class.std::deque"* %778 to %"class.std::_Deque_base"*
  %780 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %779, i32 0, i32 0
  %781 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %780, i32 0, i32 0
  %782 = load i32**, i32*** %781, align 8
  %783 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %784 = bitcast %"class.std::deque"* %783 to %"class.std::_Deque_base"*
  %785 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %784, i32 0, i32 0
  %786 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %785, i32 0, i32 1
  %787 = load i64, i64* %786, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %777, i32** %782, i64 %787) #3
  %788 = load volatile i32***, i32**** %13
  %789 = load i32**, i32*** %788, align 8
  %790 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %791 = bitcast %"class.std::deque"* %790 to %"class.std::_Deque_base"*
  %792 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %791, i32 0, i32 0
  %793 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %792, i32 0, i32 0
  store i32** %789, i32*** %793, align 8
  %794 = load volatile i64*, i64** %14
  %795 = load i64, i64* %794, align 8
  %796 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %797 = bitcast %"class.std::deque"* %796 to %"class.std::_Deque_base"*
  %798 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %797, i32 0, i32 0
  %799 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %798, i32 0, i32 1
  store i64 %795, i64* %799, align 8
  store i32 1221854873, i32* %32
  br label %817

; <label>:800:                                    ; preds = %35
  %801 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %802 = bitcast %"class.std::deque"* %801 to %"class.std::_Deque_base"*
  %803 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %802, i32 0, i32 0
  %804 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %803, i32 0, i32 2
  %805 = load volatile i32***, i32**** %15
  %806 = load i32**, i32*** %805, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %804, i32** %806) #3
  %807 = load volatile %"class.std::deque"*, %"class.std::deque"** %12
  %808 = bitcast %"class.std::deque"* %807 to %"class.std::_Deque_base"*
  %809 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %808, i32 0, i32 0
  %810 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %809, i32 0, i32 3
  %811 = load volatile i32***, i32**** %15
  %812 = load i32**, i32*** %811, align 8
  %813 = load volatile i64*, i64** %17
  %814 = load i64, i64* %813, align 8
  %815 = getelementptr inbounds i32*, i32** %812, i64 %814
  %816 = getelementptr inbounds i32*, i32** %815, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %810, i32** %816) #3
  store i32 1263252310, i32* %32
  br label %817

; <label>:817:                                    ; preds = %800, %755, %752, %732, %718, %715, %614, %569, %541, %540, %480, %451, %450, %448, %418, %403, %358, %357, %356, %309, %281, %264, %261, %232, %215, %214, %212, %182, %154, %131, %128, %46, %38, %37
  br label %35
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.249
  %8 = load i32, i32* @y.250
  %9 = add i32 %7, -692559583
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -692559583
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 14232316, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %66
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 14232316, label %21
    i32 -203531144, label %29
    i32 -2000305991, label %54
    i32 -92627371, label %56
  ]

; <label>:20:                                     ; preds = %18
  br label %66

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -203531144, i32 -92627371
  store i32 %28, i32* %17
  br label %66

; <label>:29:                                     ; preds = %18
  %30 = alloca i32**, align 8
  %31 = alloca i32**, align 8
  %32 = alloca i32**, align 8
  store i32** %0, i32*** %30, align 8
  store i32** %1, i32*** %31, align 8
  store i32** %2, i32*** %32, align 8
  %33 = load i32**, i32*** %30, align 8
  %34 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %33)
  %35 = load i32**, i32*** %31, align 8
  %36 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %35)
  %37 = load i32**, i32*** %32, align 8
  %38 = call i32** @_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32** %34, i32** %36, i32** %37)
  store i32** %38, i32*** %4
  %39 = load i32, i32* @x.249
  %40 = load i32, i32* @y.250
  %41 = add i32 %39, -1336526267
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, -1336526267
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -2000305991, i32 -92627371
  store i32 %53, i32* %17
  br label %66

; <label>:54:                                     ; preds = %18
  %55 = load volatile i32**, i32*** %4
  ret i32** %55

; <label>:56:                                     ; preds = %18
  %57 = alloca i32**, align 8
  %58 = alloca i32**, align 8
  %59 = alloca i32**, align 8
  store i32** %0, i32*** %57, align 8
  store i32** %1, i32*** %58, align 8
  store i32** %2, i32*** %59, align 8
  %60 = load i32**, i32*** %57, align 8
  %61 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %60)
  %62 = load i32**, i32*** %58, align 8
  %63 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %62)
  %64 = load i32**, i32*** %59, align 8
  %65 = call i32** @_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32** %61, i32** %63, i32** %64)
  store i32 -203531144, i32* %17
  br label %66

; <label>:66:                                     ; preds = %56, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %11)
  ret i32** %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  store i64* %0, i64** %6, align 8
  store i64* %1, i64** %7, align 8
  %8 = load i64*, i64** %6, align 8
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %4
  %10 = load i64*, i64** %7, align 8
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 1361654061, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %72
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1361654061, label %16
    i32 1125034594, label %21
    i32 1093933611, label %37
    i32 1450584760, label %65
    i32 -1252680556, label %66
    i32 -1999144424, label %68
    i32 -1012614005, label %70
  ]

; <label>:15:                                     ; preds = %13
  br label %72

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %4
  %18 = load volatile i64, i64* %3
  %19 = icmp ult i64 %17, %18
  %20 = select i1 %19, i32 1125034594, i32 -1252680556
  store i32 %20, i32* %12
  br label %72

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.253
  %23 = load i32, i32* @y.254
  %24 = add i32 %22, -982289091
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, -982289091
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  %36 = select i1 %34, i32 1093933611, i32 -1012614005
  store i32 %36, i32* %12
  br label %72

; <label>:37:                                     ; preds = %13
  %38 = load i64*, i64** %7, align 8
  store i64* %38, i64** %5, align 8
  %39 = load i32, i32* @x.253
  %40 = load i32, i32* @y.254
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 1450584760, i32 -1012614005
  store i32 %64, i32* %12
  br label %72

; <label>:65:                                     ; preds = %13
  store i32 -1999144424, i32* %12
  br label %72

; <label>:66:                                     ; preds = %13
  %67 = load i64*, i64** %6, align 8
  store i64* %67, i64** %5, align 8
  store i32 -1999144424, i32* %12
  br label %72

; <label>:68:                                     ; preds = %13
  %69 = load i64*, i64** %5, align 8
  ret i64* %69

; <label>:70:                                     ; preds = %13
  %71 = load i64*, i64** %7, align 8
  store i64* %71, i64** %5, align 8
  store i32 1093933611, i32* %12
  br label %72

; <label>:72:                                     ; preds = %70, %66, %65, %37, %21, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::allocator.39", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.39"* sret %5, %"class.std::_Deque_base"* %8) #3
  %9 = load i64, i64* %4, align 8
  %10 = invoke i32** @_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m(%"class.std::allocator.39"* dereferenceable(1) %5, i64 %9)
          to label %11 unwind label %66

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* @x.255
  %13 = load i32, i32* @y.256
  %14 = add i32 %12, -261659700
  %15 = sub i32 %14, 1
  %16 = sub i32 %15, -261659700
  %17 = sub i32 %12, 1
  %18 = mul i32 %12, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %13, 10
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  br i1 %36, label %38, label %75

; <label>:38:                                     ; preds = %11, %75
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.39"* %5) #3
  %39 = load i32, i32* @x.255
  %40 = load i32, i32* @y.256
  %41 = add i32 %39, -366296817
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, -366296817
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  br i1 %63, label %65, label %75

; <label>:65:                                     ; preds = %38
  ret i32** %10

; <label>:66:                                     ; preds = %2
  %67 = landingpad { i8*, i32 }
          cleanup
  %68 = extractvalue { i8*, i32 } %67, 0
  store i8* %68, i8** %6, align 8
  %69 = extractvalue { i8*, i32 } %67, 1
  store i32 %69, i32* %7, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.39"* %5) #3
  br label %70

; <label>:70:                                     ; preds = %66
  %71 = load i8*, i8** %6, align 8
  %72 = load i32, i32* %7, align 4
  %73 = insertvalue { i8*, i32 } undef, i8* %71, 0
  %74 = insertvalue { i8*, i32 } %73, i32 %72, 1
  resume { i8*, i32 } %74

; <label>:75:                                     ; preds = %38, %11
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.39"* %5) #3
  br label %38
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"*, i32**, i64) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::allocator.39", align 1
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i64 %2, i64* %6, align 8
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.39"* sret %7, %"class.std::_Deque_base"* %10) #3
  %11 = load i32**, i32*** %5, align 8
  %12 = load i64, i64* %6, align 8
  invoke void @_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m(%"class.std::allocator.39"* dereferenceable(1) %7, i32** %11, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.39"* %7) #3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          catch i8* null
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %8, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %9, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.39"* %7) #3
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i8*, i8** %8, align 8
  call void @__clang_call_terminate(i8* %19) #13
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %11)
  %13 = call i32** @_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %12)
  ret i32** %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32**) #4 comdat {
  %2 = alloca i32**, align 8
  store i32** %0, i32*** %2, align 8
  %3 = load i32**, i32*** %2, align 8
  %4 = call i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32** %3)
  ret i32** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.263
  %8 = load i32, i32* @y.264
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -1467297871, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %87
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1467297871, label %20
    i32 -1643150139, label %40
    i32 2076863337, label %76
    i32 -2036772289, label %78
  ]

; <label>:19:                                     ; preds = %17
  br label %87

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1643150139, i32 -2036772289
  store i32 %39, i32* %16
  br label %87

; <label>:40:                                     ; preds = %17
  %41 = alloca i32**, align 8
  %42 = alloca i32**, align 8
  %43 = alloca i32**, align 8
  %44 = alloca i8, align 1
  store i32** %0, i32*** %41, align 8
  store i32** %1, i32*** %42, align 8
  store i32** %2, i32*** %43, align 8
  store i8 1, i8* %44, align 1
  %45 = load i32**, i32*** %41, align 8
  %46 = load i32**, i32*** %42, align 8
  %47 = load i32**, i32*** %43, align 8
  %48 = call i32** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_(i32** %45, i32** %46, i32** %47)
  store i32** %48, i32*** %4
  %49 = load i32, i32* @x.263
  %50 = load i32, i32* @y.264
  %51 = sub i32 %49, 617110306
  %52 = sub i32 %51, 1
  %53 = add i32 %52, 617110306
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 2076863337, i32 -2036772289
  store i32 %75, i32* %16
  br label %87

; <label>:76:                                     ; preds = %17
  %77 = load volatile i32**, i32*** %4
  ret i32** %77

; <label>:78:                                     ; preds = %17
  %79 = alloca i32**, align 8
  %80 = alloca i32**, align 8
  %81 = alloca i32**, align 8
  %82 = alloca i8, align 1
  store i32** %0, i32*** %79, align 8
  store i32** %1, i32*** %80, align 8
  store i32** %2, i32*** %81, align 8
  store i8 1, i8* %82, align 1
  %83 = load i32**, i32*** %79, align 8
  %84 = load i32**, i32*** %80, align 8
  %85 = load i32**, i32*** %81, align 8
  %86 = call i32** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_(i32** %83, i32** %84, i32** %85)
  store i32 -1643150139, i32* %16
  br label %87

; <label>:87:                                     ; preds = %78, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32**) #0 comdat {
  %2 = alloca i32**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.265
  %6 = load i32, i32* @y.266
  %7 = add i32 %5, 389984764
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 389984764
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1269986227, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %75
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1269986227, label %19
    i32 -774802067, label %39
    i32 1870235276, label %69
    i32 70492521, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %75

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -774802067, i32 70492521
  store i32 %38, i32* %15
  br label %75

; <label>:39:                                     ; preds = %16
  %40 = alloca i32**, align 8
  store i32** %0, i32*** %40, align 8
  %41 = load i32**, i32*** %40, align 8
  %42 = call i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32** %41)
  store i32** %42, i32*** %2
  %43 = load i32, i32* @x.265
  %44 = load i32, i32* @y.266
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 1870235276, i32 70492521
  store i32 %68, i32* %15
  br label %75

; <label>:69:                                     ; preds = %16
  %70 = load volatile i32**, i32*** %2
  ret i32** %70

; <label>:71:                                     ; preds = %16
  %72 = alloca i32**, align 8
  store i32** %0, i32*** %72, align 8
  %73 = load i32**, i32*** %72, align 8
  %74 = call i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32** %73)
  store i32 -774802067, i32* %15
  br label %75

; <label>:75:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_(i32**, i32**, i32**) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i32***
  %7 = alloca i32***
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.267
  %11 = load i32, i32* @y.268
  %12 = add i32 %10, -392095505
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, -392095505
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -1450252626, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %167
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -1450252626, label %24
    i32 1459657363, label %32
    i32 1850068642, label %80
    i32 1440494076, label %83
    i32 1843258919, label %93
    i32 1545172086, label %99
  ]

; <label>:23:                                     ; preds = %21
  br label %167

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 1459657363, i32 1545172086
  store i32 %31, i32* %20
  br label %167

; <label>:32:                                     ; preds = %21
  %33 = alloca i32**, align 8
  store i32*** %33, i32**** %7
  %34 = alloca i32**, align 8
  %35 = alloca i32**, align 8
  store i32*** %35, i32**** %6
  %36 = alloca i64, align 8
  store i64* %36, i64** %5
  %37 = load volatile i32***, i32**** %7
  store i32** %0, i32*** %37, align 8
  store i32** %1, i32*** %34, align 8
  %38 = load volatile i32***, i32**** %6
  store i32** %2, i32*** %38, align 8
  %39 = load i32**, i32*** %34, align 8
  %40 = load volatile i32***, i32**** %7
  %41 = load i32**, i32*** %40, align 8
  %42 = ptrtoint i32** %39 to i64
  %43 = ptrtoint i32** %41 to i64
  %44 = add i64 %42, 2734247709528726263
  %45 = sub i64 %44, %43
  %46 = sub i64 %45, 2734247709528726263
  %47 = sub i64 %42, %43
  %48 = sdiv exact i64 %46, 8
  %49 = load volatile i64*, i64** %5
  store i64 %48, i64* %49, align 8
  %50 = load volatile i64*, i64** %5
  %51 = load i64, i64* %50, align 8
  %52 = icmp ne i64 %51, 0
  store i1 %52, i1* %4
  %53 = load i32, i32* @x.267
  %54 = load i32, i32* @y.268
  %55 = sub i32 %53, -343682777
  %56 = sub i32 %55, 1
  %57 = add i32 %56, -343682777
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 1850068642, i32 1545172086
  store i32 %79, i32* %20
  br label %167

; <label>:80:                                     ; preds = %21
  %81 = load volatile i1, i1* %4
  %82 = select i1 %81, i32 1440494076, i32 1843258919
  store i32 %82, i32* %20
  br label %167

; <label>:83:                                     ; preds = %21
  %84 = load volatile i32***, i32**** %6
  %85 = load i32**, i32*** %84, align 8
  %86 = bitcast i32** %85 to i8*
  %87 = load volatile i32***, i32**** %7
  %88 = load i32**, i32*** %87, align 8
  %89 = bitcast i32** %88 to i8*
  %90 = load volatile i64*, i64** %5
  %91 = load i64, i64* %90, align 8
  %92 = mul i64 8, %91
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %86, i8* %89, i64 %92, i32 8, i1 false)
  store i32 1843258919, i32* %20
  br label %167

; <label>:93:                                     ; preds = %21
  %94 = load volatile i32***, i32**** %6
  %95 = load i32**, i32*** %94, align 8
  %96 = load volatile i64*, i64** %5
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds i32*, i32** %95, i64 %97
  ret i32** %98

; <label>:99:                                     ; preds = %21
  %100 = alloca i32**, align 8
  %101 = alloca i32**, align 8
  %102 = alloca i32**, align 8
  %103 = alloca i64, align 8
  store i32** %0, i32*** %100, align 8
  store i32** %1, i32*** %101, align 8
  store i32** %2, i32*** %102, align 8
  %104 = load i32**, i32*** %101, align 8
  %105 = load i32**, i32*** %100, align 8
  %106 = ptrtoint i32** %104 to i64
  %107 = ptrtoint i32** %105 to i64
  %108 = sub i64 0, %107
  %109 = add i64 %106, %108
  %110 = sub i64 %106, %107
  %111 = mul i64 %109, %107
  %112 = shl i64 %106, %107
  %113 = add i64 %106, -3224244809652515620
  %114 = sub i64 %113, %107
  %115 = sub i64 %114, -3224244809652515620
  %116 = sub i64 %106, %107
  %117 = mul i64 %115, %107
  %118 = shl i64 %106, %107
  %119 = sub i64 0, 1201379631977136351
  %120 = sub i64 %119, %106
  %121 = add i64 %120, 1201379631977136351
  %122 = sub i64 0, %106
  %123 = sub i64 0, %107
  %124 = sub i64 %121, %123
  %125 = add i64 %121, %107
  %126 = add i64 %106, -748436147370935520
  %127 = sub i64 %126, %107
  %128 = sub i64 %127, -748436147370935520
  %129 = sub i64 %106, %107
  %130 = mul i64 %128, %107
  %131 = sub i64 %106, 4931968260411812732
  %132 = sub i64 %131, %107
  %133 = add i64 %132, 4931968260411812732
  %134 = sub i64 %106, %107
  %135 = shl i64 %133, 8
  %136 = shl i64 %133, 8
  %137 = sub i64 0, %133
  %138 = add i64 0, %137
  %139 = sub i64 0, %133
  %140 = add i64 %138, 1015626655428990684
  %141 = add i64 %140, 8
  %142 = sub i64 %141, 1015626655428990684
  %143 = add i64 %138, 8
  %144 = sub i64 0, 8
  %145 = add i64 %133, %144
  %146 = sub i64 %133, 8
  %147 = mul i64 %145, 8
  %148 = shl i64 %133, 8
  %149 = sub i64 %133, -7958885384271380134
  %150 = sub i64 %149, 8
  %151 = add i64 %150, -7958885384271380134
  %152 = sub i64 %133, 8
  %153 = mul i64 %151, 8
  %154 = sub i64 %133, -1917966220964484982
  %155 = sub i64 %154, 8
  %156 = add i64 %155, -1917966220964484982
  %157 = sub i64 %133, 8
  %158 = mul i64 %156, 8
  %159 = add i64 %133, -554378370773209892
  %160 = sub i64 %159, 8
  %161 = sub i64 %160, -554378370773209892
  %162 = sub i64 %133, 8
  %163 = mul i64 %161, 8
  %164 = sdiv exact i64 %133, 8
  store i64 %164, i64* %103, align 8
  %165 = load i64, i64* %103, align 8
  %166 = icmp ne i64 %165, 0
  store i32 1459657363, i32* %20
  br label %167

; <label>:167:                                    ; preds = %99, %83, %80, %32, %24, %23
  br label %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #7

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32**) #4 comdat align 2 {
  %2 = alloca i32**, align 8
  store i32** %0, i32*** %2, align 8
  %3 = load i32**, i32*** %2, align 8
  ret i32** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.271
  %8 = load i32, i32* @y.272
  %9 = sub i32 %7, -642833348
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -642833348
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -494533241, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %92
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -494533241, label %21
    i32 1436565794, label %41
    i32 746915318, label %79
    i32 957320930, label %81
  ]

; <label>:20:                                     ; preds = %18
  br label %92

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1436565794, i32 957320930
  store i32 %40, i32* %17
  br label %92

; <label>:41:                                     ; preds = %18
  %42 = alloca i32**, align 8
  %43 = alloca i32**, align 8
  %44 = alloca i32**, align 8
  store i32** %0, i32*** %42, align 8
  store i32** %1, i32*** %43, align 8
  store i32** %2, i32*** %44, align 8
  %45 = load i32**, i32*** %42, align 8
  %46 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %45)
  %47 = load i32**, i32*** %43, align 8
  %48 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %47)
  %49 = load i32**, i32*** %44, align 8
  %50 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %49)
  %51 = call i32** @_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %46, i32** %48, i32** %50)
  store i32** %51, i32*** %4
  %52 = load i32, i32* @x.271
  %53 = load i32, i32* @y.272
  %54 = sub i32 %52, -20917490
  %55 = sub i32 %54, 1
  %56 = add i32 %55, -20917490
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 746915318, i32 957320930
  store i32 %78, i32* %17
  br label %92

; <label>:79:                                     ; preds = %18
  %80 = load volatile i32**, i32*** %4
  ret i32** %80

; <label>:81:                                     ; preds = %18
  %82 = alloca i32**, align 8
  %83 = alloca i32**, align 8
  %84 = alloca i32**, align 8
  store i32** %0, i32*** %82, align 8
  store i32** %1, i32*** %83, align 8
  store i32** %2, i32*** %84, align 8
  %85 = load i32**, i32*** %82, align 8
  %86 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %85)
  %87 = load i32**, i32*** %83, align 8
  %88 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %87)
  %89 = load i32**, i32*** %84, align 8
  %90 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %89)
  %91 = call i32** @_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %86, i32** %88, i32** %90)
  store i32 1436565794, i32* %17
  br label %92

; <label>:92:                                     ; preds = %81, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.273
  %8 = load i32, i32* @y.274
  %9 = add i32 %7, -61161644
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -61161644
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1767094948, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %87
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1767094948, label %21
    i32 564979268, label %41
    i32 1854365196, label %76
    i32 946725994, label %78
  ]

; <label>:20:                                     ; preds = %18
  br label %87

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 564979268, i32 946725994
  store i32 %40, i32* %17
  br label %87

; <label>:41:                                     ; preds = %18
  %42 = alloca i32**, align 8
  %43 = alloca i32**, align 8
  %44 = alloca i32**, align 8
  %45 = alloca i8, align 1
  store i32** %0, i32*** %42, align 8
  store i32** %1, i32*** %43, align 8
  store i32** %2, i32*** %44, align 8
  store i8 1, i8* %45, align 1
  %46 = load i32**, i32*** %42, align 8
  %47 = load i32**, i32*** %43, align 8
  %48 = load i32**, i32*** %44, align 8
  %49 = call i32** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_(i32** %46, i32** %47, i32** %48)
  store i32** %49, i32*** %4
  %50 = load i32, i32* @x.273
  %51 = load i32, i32* @y.274
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 1854365196, i32 946725994
  store i32 %75, i32* %17
  br label %87

; <label>:76:                                     ; preds = %18
  %77 = load volatile i32**, i32*** %4
  ret i32** %77

; <label>:78:                                     ; preds = %18
  %79 = alloca i32**, align 8
  %80 = alloca i32**, align 8
  %81 = alloca i32**, align 8
  %82 = alloca i8, align 1
  store i32** %0, i32*** %79, align 8
  store i32** %1, i32*** %80, align 8
  store i32** %2, i32*** %81, align 8
  store i8 1, i8* %82, align 1
  %83 = load i32**, i32*** %79, align 8
  %84 = load i32**, i32*** %80, align 8
  %85 = load i32**, i32*** %81, align 8
  %86 = call i32** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_(i32** %83, i32** %84, i32** %85)
  store i32 564979268, i32* %17
  br label %87

; <label>:87:                                     ; preds = %78, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_(i32**, i32**, i32**) #4 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i64, align 8
  store i32** %0, i32*** %5, align 8
  store i32** %1, i32*** %6, align 8
  store i32** %2, i32*** %7, align 8
  %9 = load i32**, i32*** %6, align 8
  %10 = load i32**, i32*** %5, align 8
  %11 = ptrtoint i32** %9 to i64
  %12 = ptrtoint i32** %10 to i64
  %13 = sub i64 %11, -8608564413887591273
  %14 = sub i64 %13, %12
  %15 = add i64 %14, -8608564413887591273
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 8
  store i64 %17, i64* %8, align 8
  %18 = load i64, i64* %8, align 8
  store i64 %18, i64* %4
  %19 = alloca i32
  store i32 -662540515, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %47
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -662540515, label %23
    i32 213779869, label %27
    i32 -1152406185, label %40
  ]

; <label>:22:                                     ; preds = %20
  br label %47

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %4
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 213779869, i32 -1152406185
  store i32 %26, i32* %19
  br label %47

; <label>:27:                                     ; preds = %20
  %28 = load i32**, i32*** %7, align 8
  %29 = load i64, i64* %8, align 8
  %30 = sub i64 0, -6831718701796686170
  %31 = sub i64 %30, %29
  %32 = add i64 %31, -6831718701796686170
  %33 = sub i64 0, %29
  %34 = getelementptr inbounds i32*, i32** %28, i64 %32
  %35 = bitcast i32** %34 to i8*
  %36 = load i32**, i32*** %5, align 8
  %37 = bitcast i32** %36 to i8*
  %38 = load i64, i64* %8, align 8
  %39 = mul i64 8, %38
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %35, i8* %37, i64 %39, i32 8, i1 false)
  store i32 -1152406185, i32* %19
  br label %47

; <label>:40:                                     ; preds = %20
  %41 = load i32**, i32*** %7, align 8
  %42 = load i64, i64* %8, align 8
  %43 = sub i64 0, %42
  %44 = add i64 0, %43
  %45 = sub i64 0, %42
  %46 = getelementptr inbounds i32*, i32** %41, i64 %44
  ret i32** %46

; <label>:47:                                     ; preds = %27, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.39"* noalias sret, %"class.std::_Deque_base"*) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.277
  %6 = load i32, i32* @y.278
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 102569000, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %74
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 102569000, label %18
    i32 1095064319, label %38
    i32 -643641522, label %69
    i32 -1036910593, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %74

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1095064319, i32 -1036910593
  store i32 %37, i32* %14
  br label %74

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %39, align 8
  %40 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %39, align 8
  %41 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %40) #3
  call void @_ZNSaIPiEC2IiEERKSaIT_E(%"class.std::allocator.39"* %0, %"class.std::allocator.0"* dereferenceable(1) %41) #3
  %42 = load i32, i32* @x.277
  %43 = load i32, i32* @y.278
  %44 = sub i32 %42, 1514772036
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 1514772036
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -643641522, i32 -1036910593
  store i32 %68, i32* %14
  br label %74

; <label>:69:                                     ; preds = %15
  ret void

; <label>:70:                                     ; preds = %15
  %71 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %71, align 8
  %72 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %71, align 8
  %73 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %72) #3
  call void @_ZNSaIPiEC2IiEERKSaIT_E(%"class.std::allocator.39"* %0, %"class.std::allocator.0"* dereferenceable(1) %73) #3
  store i32 1095064319, i32* %14
  br label %74

; <label>:74:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m(%"class.std::allocator.39"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.39"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.39"* %0, %"class.std::allocator.39"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.39"*, %"class.std::allocator.39"** %3, align 8
  %6 = bitcast %"class.std::allocator.39"* %5 to %"class.__gnu_cxx::new_allocator.40"*
  %7 = load i64, i64* %4, align 8
  %8 = call i32** @_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.40"* %6, i64 %7, i8* null)
  ret i32** %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPiED2Ev(%"class.std::allocator.39"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.281
  %5 = load i32, i32* @y.282
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 2103165645, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %60
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 2103165645, label %17
    i32 649766036, label %25
    i32 -1780413175, label %55
    i32 -1091033213, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %60

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 649766036, i32 -1091033213
  store i32 %24, i32* %13
  br label %60

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.std::allocator.39"*, align 8
  store %"class.std::allocator.39"* %0, %"class.std::allocator.39"** %26, align 8
  %27 = load %"class.std::allocator.39"*, %"class.std::allocator.39"** %26, align 8
  %28 = bitcast %"class.std::allocator.39"* %27 to %"class.__gnu_cxx::new_allocator.40"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiED2Ev(%"class.__gnu_cxx::new_allocator.40"* %28) #3
  %29 = load i32, i32* @x.281
  %30 = load i32, i32* @y.282
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 -1780413175, i32 -1091033213
  store i32 %54, i32* %13
  br label %60

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %"class.std::allocator.39"*, align 8
  store %"class.std::allocator.39"* %0, %"class.std::allocator.39"** %57, align 8
  %58 = load %"class.std::allocator.39"*, %"class.std::allocator.39"** %57, align 8
  %59 = bitcast %"class.std::allocator.39"* %58 to %"class.__gnu_cxx::new_allocator.40"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiED2Ev(%"class.__gnu_cxx::new_allocator.40"* %59) #3
  store i32 649766036, i32* %13
  br label %60

; <label>:60:                                     ; preds = %56, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"*) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.0"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.283
  %6 = load i32, i32* @y.284
  %7 = add i32 %5, 948659628
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 948659628
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 307686168, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %53
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 307686168, label %19
    i32 -1646600489, label %27
    i32 886286909, label %46
    i32 2031683646, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %53

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1646600489, i32 2031683646
  store i32 %26, i32* %15
  br label %53

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %28, align 8
  %29 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %28, align 8
  %30 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %30 to %"class.std::allocator.0"*
  store %"class.std::allocator.0"* %31, %"class.std::allocator.0"** %2
  %32 = load i32, i32* @x.283
  %33 = load i32, i32* @y.284
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 886286909, i32 2031683646
  store i32 %45, i32* %15
  br label %53

; <label>:46:                                     ; preds = %16
  %47 = load volatile %"class.std::allocator.0"*, %"class.std::allocator.0"** %2
  ret %"class.std::allocator.0"* %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %49, align 8
  %50 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %49, align 8
  %51 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %50, i32 0, i32 0
  %52 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %51 to %"class.std::allocator.0"*
  store i32 -1646600489, i32* %15
  br label %53

; <label>:53:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPiEC2IiEERKSaIT_E(%"class.std::allocator.39"*, %"class.std::allocator.0"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.285
  %6 = load i32, i32* @y.286
  %7 = sub i32 %5, 1460926683
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1460926683
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -322722078, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -322722078, label %19
    i32 -743820384, label %39
    i32 1600544937, label %59
    i32 -522466070, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -743820384, i32 -522466070
  store i32 %38, i32* %15
  br label %65

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.39"*, align 8
  %41 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.39"* %0, %"class.std::allocator.39"** %40, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %41, align 8
  %42 = load %"class.std::allocator.39"*, %"class.std::allocator.39"** %40, align 8
  %43 = bitcast %"class.std::allocator.39"* %42 to %"class.__gnu_cxx::new_allocator.40"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiEC2Ev(%"class.__gnu_cxx::new_allocator.40"* %43) #3
  %44 = load i32, i32* @x.285
  %45 = load i32, i32* @y.286
  %46 = add i32 %44, -1328417192
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -1328417192
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1600544937, i32 -522466070
  store i32 %58, i32* %15
  br label %65

; <label>:59:                                     ; preds = %16
  ret void

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::allocator.39"*, align 8
  %62 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.39"* %0, %"class.std::allocator.39"** %61, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %62, align 8
  %63 = load %"class.std::allocator.39"*, %"class.std::allocator.39"** %61, align 8
  %64 = bitcast %"class.std::allocator.39"* %63 to %"class.__gnu_cxx::new_allocator.40"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiEC2Ev(%"class.__gnu_cxx::new_allocator.40"* %64) #3
  store i32 -743820384, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiEC2Ev(%"class.__gnu_cxx::new_allocator.40"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.40"*, align 8
  store %"class.__gnu_cxx::new_allocator.40"* %0, %"class.__gnu_cxx::new_allocator.40"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.40"*, %"class.__gnu_cxx::new_allocator.40"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.40"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i32**
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator.40"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.40"* %0, %"class.__gnu_cxx::new_allocator.40"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator.40"*, %"class.__gnu_cxx::new_allocator.40"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.40"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 463485223, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %107
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 463485223, label %17
    i32 1344059765, label %22
    i32 2133897591, label %23
    i32 1935191026, label %39
    i32 -1094514539, label %70
    i32 482278719, label %72
  ]

; <label>:16:                                     ; preds = %14
  br label %107

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 1344059765, i32 2133897591
  store i32 %21, i32* %13
  br label %107

; <label>:22:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #15
  unreachable

; <label>:23:                                     ; preds = %14
  %24 = load i32, i32* @x.289
  %25 = load i32, i32* @y.290
  %26 = sub i32 %24, 176228974
  %27 = sub i32 %26, 1
  %28 = add i32 %27, 176228974
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  %38 = select i1 %36, i32 1935191026, i32 482278719
  store i32 %38, i32* %13
  br label %107

; <label>:39:                                     ; preds = %14
  %40 = load i64, i64* %8, align 8
  %41 = mul i64 %40, 8
  %42 = call i8* @_Znwm(i64 %41)
  %43 = bitcast i8* %42 to i32**
  store i32** %43, i32*** %4
  %44 = load i32, i32* @x.289
  %45 = load i32, i32* @y.290
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -1094514539, i32 482278719
  store i32 %69, i32* %13
  br label %107

; <label>:70:                                     ; preds = %14
  %71 = load volatile i32**, i32*** %4
  ret i32** %71

; <label>:72:                                     ; preds = %14
  %73 = load i64, i64* %8, align 8
  %74 = sub i64 0, %73
  %75 = add i64 0, %74
  %76 = sub i64 0, %73
  %77 = sub i64 0, %75
  %78 = sub i64 0, 8
  %79 = add i64 %77, %78
  %80 = sub i64 0, %79
  %81 = add i64 %75, 8
  %82 = add i64 0, -2112220334647289656
  %83 = sub i64 %82, %73
  %84 = sub i64 %83, -2112220334647289656
  %85 = sub i64 0, %73
  %86 = add i64 %84, 8196733410035207818
  %87 = add i64 %86, 8
  %88 = sub i64 %87, 8196733410035207818
  %89 = add i64 %84, 8
  %90 = sub i64 %73, -160938338034996484
  %91 = sub i64 %90, 8
  %92 = add i64 %91, -160938338034996484
  %93 = sub i64 %73, 8
  %94 = mul i64 %92, 8
  %95 = sub i64 0, -9048124290086467186
  %96 = sub i64 %95, %73
  %97 = add i64 %96, -9048124290086467186
  %98 = sub i64 0, %73
  %99 = sub i64 %97, 5822353785653351677
  %100 = add i64 %99, 8
  %101 = add i64 %100, 5822353785653351677
  %102 = add i64 %97, 8
  %103 = shl i64 %73, 8
  %104 = mul i64 %73, 8
  %105 = call i8* @_Znwm(i64 %104)
  %106 = bitcast i8* %105 to i32**
  store i32 1935191026, i32* %13
  br label %107

; <label>:107:                                    ; preds = %72, %39, %23, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.40"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.40"*, align 8
  store %"class.__gnu_cxx::new_allocator.40"* %0, %"class.__gnu_cxx::new_allocator.40"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.40"*, %"class.__gnu_cxx::new_allocator.40"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiED2Ev(%"class.__gnu_cxx::new_allocator.40"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.293
  %5 = load i32, i32* @y.294
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1108679976, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %70
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1108679976, label %17
    i32 -1591759847, label %37
    i32 -654974833, label %66
    i32 343197846, label %67
  ]

; <label>:16:                                     ; preds = %14
  br label %70

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -1591759847, i32 343197846
  store i32 %36, i32* %13
  br label %70

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator.40"*, align 8
  store %"class.__gnu_cxx::new_allocator.40"* %0, %"class.__gnu_cxx::new_allocator.40"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.40"*, %"class.__gnu_cxx::new_allocator.40"** %38, align 8
  %40 = load i32, i32* @x.293
  %41 = load i32, i32* @y.294
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 -654974833, i32 343197846
  store i32 %65, i32* %13
  br label %70

; <label>:66:                                     ; preds = %14
  ret void

; <label>:67:                                     ; preds = %14
  %68 = alloca %"class.__gnu_cxx::new_allocator.40"*, align 8
  store %"class.__gnu_cxx::new_allocator.40"* %0, %"class.__gnu_cxx::new_allocator.40"** %68, align 8
  %69 = load %"class.__gnu_cxx::new_allocator.40"*, %"class.__gnu_cxx::new_allocator.40"** %68, align 8
  store i32 -1591759847, i32* %13
  br label %70

; <label>:70:                                     ; preds = %67, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m(%"class.std::allocator.39"* dereferenceable(1), i32**, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.39"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.39"* %0, %"class.std::allocator.39"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.39"*, %"class.std::allocator.39"** %4, align 8
  %8 = bitcast %"class.std::allocator.39"* %7 to %"class.__gnu_cxx::new_allocator.40"*
  %9 = load i32**, i32*** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.40"* %8, i32** %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.40"*, i32**, i64) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.297
  %7 = load i32, i32* @y.298
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1908483021, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1908483021, label %19
    i32 5660419, label %27
    i32 1919602136, label %60
    i32 927077469, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 5660419, i32 927077469
  store i32 %26, i32* %15
  br label %68

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator.40"*, align 8
  %29 = alloca i32**, align 8
  %30 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.40"* %0, %"class.__gnu_cxx::new_allocator.40"** %28, align 8
  store i32** %1, i32*** %29, align 8
  store i64 %2, i64* %30, align 8
  %31 = load %"class.__gnu_cxx::new_allocator.40"*, %"class.__gnu_cxx::new_allocator.40"** %28, align 8
  %32 = load i32**, i32*** %29, align 8
  %33 = bitcast i32** %32 to i8*
  call void @_ZdlPv(i8* %33) #3
  %34 = load i32, i32* @x.297
  %35 = load i32, i32* @y.298
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 1919602136, i32 927077469
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.__gnu_cxx::new_allocator.40"*, align 8
  %63 = alloca i32**, align 8
  %64 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.40"* %0, %"class.__gnu_cxx::new_allocator.40"** %62, align 8
  store i32** %1, i32*** %63, align 8
  store i64 %2, i64* %64, align 8
  %65 = load %"class.__gnu_cxx::new_allocator.40"*, %"class.__gnu_cxx::new_allocator.40"** %62, align 8
  %66 = load i32**, i32*** %63, align 8
  %67 = bitcast i32** %66 to i8*
  call void @_ZdlPv(i8* %67) #3
  store i32 5660419, i32* %15
  br label %68

; <label>:68:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.0"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.0"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %3, align 8
  %6 = bitcast %"class.std::allocator.0"* %5 to %"class.__gnu_cxx::new_allocator.1"*
  %7 = load i64, i64* %4, align 8
  %8 = call i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.1"* %6, i64 %7, i8* null)
  ret i32* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt16__deque_buf_sizem(i64) #4 comdat {
  %2 = alloca i64
  %3 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  %4 = load i64, i64* %3, align 8
  store i64 %4, i64* %2
  %5 = alloca i32
  store i32 1238931399, i32* %5
  %6 = alloca i64
  br label %7

; <label>:7:                                      ; preds = %1, %20
  %8 = load i32, i32* %5
  switch i32 %8, label %9 [
    i32 1238931399, label %10
    i32 -941386602, label %14
    i32 2074121493, label %17
    i32 1747835963, label %18
  ]

; <label>:9:                                      ; preds = %7
  br label %20

; <label>:10:                                     ; preds = %7
  %11 = load volatile i64, i64* %2
  %12 = icmp ult i64 %11, 512
  %13 = select i1 %12, i32 -941386602, i32 2074121493
  store i32 %13, i32* %5
  br label %20

; <label>:14:                                     ; preds = %7
  %15 = load i64, i64* %3, align 8
  %16 = udiv i64 512, %15
  store i32 1747835963, i32* %5
  store i64 %16, i64* %6
  br label %20

; <label>:17:                                     ; preds = %7
  store i32 1747835963, i32* %5
  store i64 1, i64* %6
  br label %20

; <label>:18:                                     ; preds = %7
  %19 = load i64, i64* %6
  ret i64 %19

; <label>:20:                                     ; preds = %17, %14, %10, %9
  br label %7
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.1"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.1"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 -337823656, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %84
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -337823656, label %17
    i32 1666090778, label %22
    i32 1344338164, label %23
    i32 -14930123, label %38
    i32 -2117726729, label %70
    i32 -1649303245, label %72
  ]

; <label>:16:                                     ; preds = %14
  br label %84

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 1666090778, i32 1344338164
  store i32 %21, i32* %13
  br label %84

; <label>:22:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #15
  unreachable

; <label>:23:                                     ; preds = %14
  %24 = load i32, i32* @x.303
  %25 = load i32, i32* @y.304
  %26 = sub i32 0, 1
  %27 = add i32 %24, %26
  %28 = sub i32 %24, 1
  %29 = mul i32 %24, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %25, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  %37 = select i1 %35, i32 -14930123, i32 -1649303245
  store i32 %37, i32* %13
  br label %84

; <label>:38:                                     ; preds = %14
  %39 = load i64, i64* %8, align 8
  %40 = mul i64 %39, 4
  %41 = call i8* @_Znwm(i64 %40)
  %42 = bitcast i8* %41 to i32*
  store i32* %42, i32** %4
  %43 = load i32, i32* @x.303
  %44 = load i32, i32* @y.304
  %45 = add i32 %43, 1352398536
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 1352398536
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -2117726729, i32 -1649303245
  store i32 %69, i32* %13
  br label %84

; <label>:70:                                     ; preds = %14
  %71 = load volatile i32*, i32** %4
  ret i32* %71

; <label>:72:                                     ; preds = %14
  %73 = load i64, i64* %8, align 8
  %74 = shl i64 %73, 4
  %75 = shl i64 %73, 4
  %76 = add i64 %73, 4024474183687969335
  %77 = sub i64 %76, 4
  %78 = sub i64 %77, 4024474183687969335
  %79 = sub i64 %73, 4
  %80 = mul i64 %78, 4
  %81 = mul i64 %73, 4
  %82 = call i8* @_Znwm(i64 %81)
  %83 = bitcast i8* %82 to i32*
  store i32 -14930123, i32* %13
  br label %84

; <label>:84:                                     ; preds = %72, %38, %23, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.1"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  ret i64 4611686018427387903
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = invoke i64 @_ZSt16__deque_buf_sizem(i64 4)
          to label %2 unwind label %3

; <label>:2:                                      ; preds = %0
  ret i64 %1

; <label>:3:                                      ; preds = %0
  %4 = landingpad { i8*, i32 }
          catch i8* null
  %5 = extractvalue { i8*, i32 } %4, 0
  call void @__clang_call_terminate(i8* %5) #13
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.0"* dereferenceable(1), i32*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.0"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %4, align 8
  %8 = bitcast %"class.std::allocator.0"* %7 to %"class.__gnu_cxx::new_allocator.1"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.1"* %8, i32* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.1"*, i32*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = bitcast i32* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE4findERKi(%"class.std::_Rb_tree"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca %"class.std::_Rb_tree"*
  %6 = alloca %"struct.std::_Rb_tree_iterator"*
  %7 = alloca i32**
  %8 = alloca %"struct.std::_Rb_tree_iterator"*
  %9 = alloca i1
  %10 = alloca i1
  %11 = load i32, i32* @x.313
  %12 = load i32, i32* @y.314
  %13 = sub i32 0, 1
  %14 = add i32 %11, %13
  %15 = sub i32 %11, 1
  %16 = mul i32 %11, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %10
  %19 = icmp slt i32 %12, 10
  store i1 %19, i1* %9
  %20 = alloca i32
  store i32 1602413840, i32* %20
  br label %21

; <label>:21:                                     ; preds = %2, %170
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 1602413840, label %24
    i32 738480887, label %32
    i32 -255405943, label %82
    i32 -1630513185, label %85
    i32 -394567690, label %101
    i32 1646598226, label %127
    i32 2003528779, label %130
    i32 -1252001941, label %135
    i32 -1903582356, label %140
    i32 1877679708, label %144
    i32 985308570, label %159
  ]

; <label>:23:                                     ; preds = %21
  br label %170

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %10
  %26 = load volatile i1, i1* %9
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 738480887, i32 1877679708
  store i32 %31, i32* %20
  br label %170

; <label>:32:                                     ; preds = %21
  %33 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"struct.std::_Rb_tree_iterator"* %33, %"struct.std::_Rb_tree_iterator"** %8
  %34 = alloca %"class.std::_Rb_tree"*, align 8
  %35 = alloca i32*, align 8
  store i32** %35, i32*** %7
  %36 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"struct.std::_Rb_tree_iterator"* %36, %"struct.std::_Rb_tree_iterator"** %6
  %37 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %34, align 8
  %38 = load volatile i32**, i32*** %7
  store i32* %1, i32** %38, align 8
  %39 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %34, align 8
  store %"class.std::_Rb_tree"* %39, %"class.std::_Rb_tree"** %5
  %40 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5
  %41 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_beginEv(%"class.std::_Rb_tree"* %40) #3
  %42 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5
  %43 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_M_endEv(%"class.std::_Rb_tree"* %42) #3
  %44 = load volatile i32**, i32*** %7
  %45 = load i32*, i32** %44, align 8
  %46 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5
  %47 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_lower_boundEPSt13_Rb_tree_nodeIiES8_RKi(%"class.std::_Rb_tree"* %46, %"struct.std::_Rb_tree_node"* %41, %"struct.std::_Rb_tree_node"* %43, i32* dereferenceable(4) %45)
  %48 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %6
  %49 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %48, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %47, %"struct.std::_Rb_tree_node_base"** %49, align 8
  %50 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5
  %51 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE3endEv(%"class.std::_Rb_tree"* %50) #3
  %52 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %37, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %51, %"struct.std::_Rb_tree_node_base"** %52, align 8
  %53 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %6
  %54 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorIiEeqERKS0_(%"struct.std::_Rb_tree_iterator"* %53, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %37) #3
  store i1 %54, i1* %4
  %55 = load i32, i32* @x.313
  %56 = load i32, i32* @y.314
  %57 = add i32 %55, 1205595053
  %58 = sub i32 %57, 1
  %59 = sub i32 %58, 1205595053
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 true, true
  %68 = and i1 %65, true
  %69 = and i1 %63, %67
  %70 = and i1 %66, true
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 true, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  %81 = select i1 %79, i32 -255405943, i32 1877679708
  store i32 %81, i32* %20
  br label %170

; <label>:82:                                     ; preds = %21
  %83 = load volatile i1, i1* %4
  %84 = select i1 %83, i32 2003528779, i32 -1630513185
  store i32 %84, i32* %20
  br label %170

; <label>:85:                                     ; preds = %21
  %86 = load i32, i32* @x.313
  %87 = load i32, i32* @y.314
  %88 = add i32 %86, -1409131930
  %89 = sub i32 %88, 1
  %90 = sub i32 %89, -1409131930
  %91 = sub i32 %86, 1
  %92 = mul i32 %86, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %87, 10
  %96 = and i1 %94, %95
  %97 = xor i1 %94, %95
  %98 = or i1 %96, %97
  %99 = or i1 %94, %95
  %100 = select i1 %98, i32 -394567690, i32 985308570
  store i32 %100, i32* %20
  br label %170

; <label>:101:                                    ; preds = %21
  %102 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5
  %103 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %102, i32 0, i32 0
  %104 = getelementptr inbounds %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl", %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl"* %103, i32 0, i32 0
  %105 = load volatile i32**, i32*** %7
  %106 = load i32*, i32** %105, align 8
  %107 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %6
  %108 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %107, i32 0, i32 0
  %109 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %108, align 8
  %110 = call dereferenceable(4) i32* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %109)
  %111 = call zeroext i1 @_ZNKSt4lessIiEclERKiS2_(%"struct.std::less"* %104, i32* dereferenceable(4) %106, i32* dereferenceable(4) %110)
  store i1 %111, i1* %3
  %112 = load i32, i32* @x.313
  %113 = load i32, i32* @y.314
  %114 = sub i32 %112, -974268057
  %115 = sub i32 %114, 1
  %116 = add i32 %115, -974268057
  %117 = sub i32 %112, 1
  %118 = mul i32 %112, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %113, 10
  %122 = and i1 %120, %121
  %123 = xor i1 %120, %121
  %124 = or i1 %122, %123
  %125 = or i1 %120, %121
  %126 = select i1 %124, i32 1646598226, i32 985308570
  store i32 %126, i32* %20
  br label %170

; <label>:127:                                    ; preds = %21
  %128 = load volatile i1, i1* %3
  %129 = select i1 %128, i32 2003528779, i32 -1252001941
  store i32 %129, i32* %20
  br label %170

; <label>:130:                                    ; preds = %21
  %131 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5
  %132 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE3endEv(%"class.std::_Rb_tree"* %131) #3
  %133 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %8
  %134 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %133, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %132, %"struct.std::_Rb_tree_node_base"** %134, align 8
  store i32 -1903582356, i32* %20
  br label %170

; <label>:135:                                    ; preds = %21
  %136 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %8
  %137 = bitcast %"struct.std::_Rb_tree_iterator"* %136 to i8*
  %138 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %6
  %139 = bitcast %"struct.std::_Rb_tree_iterator"* %138 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %137, i8* %139, i64 8, i32 8, i1 false)
  store i32 -1903582356, i32* %20
  br label %170

; <label>:140:                                    ; preds = %21
  %141 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %8
  %142 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %141, i32 0, i32 0
  %143 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %142, align 8
  ret %"struct.std::_Rb_tree_node_base"* %143

; <label>:144:                                    ; preds = %21
  %145 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %146 = alloca %"class.std::_Rb_tree"*, align 8
  %147 = alloca i32*, align 8
  %148 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %149 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %146, align 8
  store i32* %1, i32** %147, align 8
  %150 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %146, align 8
  %151 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_beginEv(%"class.std::_Rb_tree"* %150) #3
  %152 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_M_endEv(%"class.std::_Rb_tree"* %150) #3
  %153 = load i32*, i32** %147, align 8
  %154 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_lower_boundEPSt13_Rb_tree_nodeIiES8_RKi(%"class.std::_Rb_tree"* %150, %"struct.std::_Rb_tree_node"* %151, %"struct.std::_Rb_tree_node"* %152, i32* dereferenceable(4) %153)
  %155 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %148, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %154, %"struct.std::_Rb_tree_node_base"** %155, align 8
  %156 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE3endEv(%"class.std::_Rb_tree"* %150) #3
  %157 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %149, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %156, %"struct.std::_Rb_tree_node_base"** %157, align 8
  %158 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorIiEeqERKS0_(%"struct.std::_Rb_tree_iterator"* %148, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %149) #3
  store i32 738480887, i32* %20
  br label %170

; <label>:159:                                    ; preds = %21
  %160 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5
  %161 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %160, i32 0, i32 0
  %162 = getelementptr inbounds %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl", %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl"* %161, i32 0, i32 0
  %163 = load volatile i32**, i32*** %7
  %164 = load i32*, i32** %163, align 8
  %165 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %6
  %166 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %165, i32 0, i32 0
  %167 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %166, align 8
  %168 = call dereferenceable(4) i32* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %167)
  %169 = call zeroext i1 @_ZNKSt4lessIiEclERKiS2_(%"struct.std::less"* %162, i32* dereferenceable(4) %164, i32* dereferenceable(4) %168)
  store i32 -394567690, i32* %20
  br label %170

; <label>:170:                                    ; preds = %159, %144, %135, %130, %127, %101, %85, %82, %32, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_lower_boundEPSt13_Rb_tree_nodeIiES8_RKi(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %5 = alloca %"struct.std::_Rb_tree_node_base"*
  %6 = alloca %"class.std::_Rb_tree"*
  %7 = alloca i32**
  %8 = alloca %"struct.std::_Rb_tree_node"**
  %9 = alloca %"struct.std::_Rb_tree_node"**
  %10 = alloca %"struct.std::_Rb_tree_iterator"*
  %11 = alloca i1
  %12 = alloca i1
  %13 = load i32, i32* @x.315
  %14 = load i32, i32* @y.316
  %15 = add i32 %13, -1902483776
  %16 = sub i32 %15, 1
  %17 = sub i32 %16, -1902483776
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  store i1 %21, i1* %12
  %22 = icmp slt i32 %14, 10
  store i1 %22, i1* %11
  %23 = alloca i32
  store i32 -2024370290, i32* %23
  br label %24

; <label>:24:                                     ; preds = %4, %224
  %25 = load i32, i32* %23
  switch i32 %25, label %26 [
    i32 -2024370290, label %27
    i32 -202928376, label %35
    i32 1615000980, label %71
    i32 -1010748470, label %72
    i32 -614778927, label %77
    i32 -229257284, label %88
    i32 -550765761, label %116
    i32 760883359, label %152
    i32 1109213965, label %153
    i32 -1662135984, label %159
    i32 -1071619402, label %160
    i32 -1105995188, label %175
    i32 -122716699, label %198
    i32 124456265, label %200
    i32 -316347195, label %207
    i32 -1864346795, label %216
  ]

; <label>:26:                                     ; preds = %24
  br label %224

; <label>:27:                                     ; preds = %24
  %28 = load volatile i1, i1* %12
  %29 = load volatile i1, i1* %11
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  %34 = select i1 %32, i32 -202928376, i32 124456265
  store i32 %34, i32* %23
  br label %224

; <label>:35:                                     ; preds = %24
  %36 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"struct.std::_Rb_tree_iterator"* %36, %"struct.std::_Rb_tree_iterator"** %10
  %37 = alloca %"class.std::_Rb_tree"*, align 8
  %38 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"** %38, %"struct.std::_Rb_tree_node"*** %9
  %39 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"** %39, %"struct.std::_Rb_tree_node"*** %8
  %40 = alloca i32*, align 8
  store i32** %40, i32*** %7
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %37, align 8
  %41 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %9
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %41, align 8
  %42 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %8
  store %"struct.std::_Rb_tree_node"* %2, %"struct.std::_Rb_tree_node"** %42, align 8
  %43 = load volatile i32**, i32*** %7
  store i32* %3, i32** %43, align 8
  %44 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %37, align 8
  store %"class.std::_Rb_tree"* %44, %"class.std::_Rb_tree"** %6
  %45 = load i32, i32* @x.315
  %46 = load i32, i32* @y.316
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 1615000980, i32 124456265
  store i32 %70, i32* %23
  br label %224

; <label>:71:                                     ; preds = %24
  store i32 -1010748470, i32* %23
  br label %224

; <label>:72:                                     ; preds = %24
  %73 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %9
  %74 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %73, align 8
  %75 = icmp ne %"struct.std::_Rb_tree_node"* %74, null
  %76 = select i1 %75, i32 -614778927, i32 -1071619402
  store i32 %76, i32* %23
  br label %224

; <label>:77:                                     ; preds = %24
  %78 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %79 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %78, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl", %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl"* %79, i32 0, i32 0
  %81 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %9
  %82 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %81, align 8
  %83 = call dereferenceable(4) i32* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_S_keyEPKSt13_Rb_tree_nodeIiE(%"struct.std::_Rb_tree_node"* %82)
  %84 = load volatile i32**, i32*** %7
  %85 = load i32*, i32** %84, align 8
  %86 = call zeroext i1 @_ZNKSt4lessIiEclERKiS2_(%"struct.std::less"* %80, i32* dereferenceable(4) %83, i32* dereferenceable(4) %85)
  %87 = select i1 %86, i32 1109213965, i32 -229257284
  store i32 %87, i32* %23
  br label %224

; <label>:88:                                     ; preds = %24
  %89 = load i32, i32* @x.315
  %90 = load i32, i32* @y.316
  %91 = sub i32 %89, -573133272
  %92 = sub i32 %91, 1
  %93 = add i32 %92, -573133272
  %94 = sub i32 %89, 1
  %95 = mul i32 %89, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %90, 10
  %99 = xor i1 %97, true
  %100 = xor i1 %98, true
  %101 = xor i1 true, true
  %102 = and i1 %99, true
  %103 = and i1 %97, %101
  %104 = and i1 %100, true
  %105 = and i1 %98, %101
  %106 = or i1 %102, %103
  %107 = or i1 %104, %105
  %108 = xor i1 %106, %107
  %109 = or i1 %99, %100
  %110 = xor i1 %109, true
  %111 = or i1 true, %101
  %112 = and i1 %110, %111
  %113 = or i1 %108, %112
  %114 = or i1 %97, %98
  %115 = select i1 %113, i32 -550765761, i32 -316347195
  store i32 %115, i32* %23
  br label %224

; <label>:116:                                    ; preds = %24
  %117 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %9
  %118 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %117, align 8
  %119 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %8
  store %"struct.std::_Rb_tree_node"* %118, %"struct.std::_Rb_tree_node"** %119, align 8
  %120 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %9
  %121 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %120, align 8
  %122 = bitcast %"struct.std::_Rb_tree_node"* %121 to %"struct.std::_Rb_tree_node_base"*
  %123 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %122) #3
  %124 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %9
  store %"struct.std::_Rb_tree_node"* %123, %"struct.std::_Rb_tree_node"** %124, align 8
  %125 = load i32, i32* @x.315
  %126 = load i32, i32* @y.316
  %127 = add i32 %125, 501299802
  %128 = sub i32 %127, 1
  %129 = sub i32 %128, 501299802
  %130 = sub i32 %125, 1
  %131 = mul i32 %125, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %126, 10
  %135 = xor i1 %133, true
  %136 = xor i1 %134, true
  %137 = xor i1 true, true
  %138 = and i1 %135, true
  %139 = and i1 %133, %137
  %140 = and i1 %136, true
  %141 = and i1 %134, %137
  %142 = or i1 %138, %139
  %143 = or i1 %140, %141
  %144 = xor i1 %142, %143
  %145 = or i1 %135, %136
  %146 = xor i1 %145, true
  %147 = or i1 true, %137
  %148 = and i1 %146, %147
  %149 = or i1 %144, %148
  %150 = or i1 %133, %134
  %151 = select i1 %149, i32 760883359, i32 -316347195
  store i32 %151, i32* %23
  br label %224

; <label>:152:                                    ; preds = %24
  store i32 -1662135984, i32* %23
  br label %224

; <label>:153:                                    ; preds = %24
  %154 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %9
  %155 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %154, align 8
  %156 = bitcast %"struct.std::_Rb_tree_node"* %155 to %"struct.std::_Rb_tree_node_base"*
  %157 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %156) #3
  %158 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %9
  store %"struct.std::_Rb_tree_node"* %157, %"struct.std::_Rb_tree_node"** %158, align 8
  store i32 -1662135984, i32* %23
  br label %224

; <label>:159:                                    ; preds = %24
  store i32 -1010748470, i32* %23
  br label %224

; <label>:160:                                    ; preds = %24
  %161 = load i32, i32* @x.315
  %162 = load i32, i32* @y.316
  %163 = sub i32 0, 1
  %164 = add i32 %161, %163
  %165 = sub i32 %161, 1
  %166 = mul i32 %161, %164
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %162, 10
  %170 = and i1 %168, %169
  %171 = xor i1 %168, %169
  %172 = or i1 %170, %171
  %173 = or i1 %168, %169
  %174 = select i1 %172, i32 -1105995188, i32 -1864346795
  store i32 %174, i32* %23
  br label %224

; <label>:175:                                    ; preds = %24
  %176 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %8
  %177 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %176, align 8
  %178 = bitcast %"struct.std::_Rb_tree_node"* %177 to %"struct.std::_Rb_tree_node_base"*
  %179 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %10
  call void @_ZNSt17_Rb_tree_iteratorIiEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %179, %"struct.std::_Rb_tree_node_base"* %178) #3
  %180 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %10
  %181 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %180, i32 0, i32 0
  %182 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %181, align 8
  store %"struct.std::_Rb_tree_node_base"* %182, %"struct.std::_Rb_tree_node_base"** %5
  %183 = load i32, i32* @x.315
  %184 = load i32, i32* @y.316
  %185 = add i32 %183, 696136459
  %186 = sub i32 %185, 1
  %187 = sub i32 %186, 696136459
  %188 = sub i32 %183, 1
  %189 = mul i32 %183, %187
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %184, 10
  %193 = and i1 %191, %192
  %194 = xor i1 %191, %192
  %195 = or i1 %193, %194
  %196 = or i1 %191, %192
  %197 = select i1 %195, i32 -122716699, i32 -1864346795
  store i32 %197, i32* %23
  br label %224

; <label>:198:                                    ; preds = %24
  %199 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %5
  ret %"struct.std::_Rb_tree_node_base"* %199

; <label>:200:                                    ; preds = %24
  %201 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %202 = alloca %"class.std::_Rb_tree"*, align 8
  %203 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %204 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %205 = alloca i32*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %202, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %203, align 8
  store %"struct.std::_Rb_tree_node"* %2, %"struct.std::_Rb_tree_node"** %204, align 8
  store i32* %3, i32** %205, align 8
  %206 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %202, align 8
  store i32 -202928376, i32* %23
  br label %224

; <label>:207:                                    ; preds = %24
  %208 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %9
  %209 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %208, align 8
  %210 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %8
  store %"struct.std::_Rb_tree_node"* %209, %"struct.std::_Rb_tree_node"** %210, align 8
  %211 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %9
  %212 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %211, align 8
  %213 = bitcast %"struct.std::_Rb_tree_node"* %212 to %"struct.std::_Rb_tree_node_base"*
  %214 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %213) #3
  %215 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %9
  store %"struct.std::_Rb_tree_node"* %214, %"struct.std::_Rb_tree_node"** %215, align 8
  store i32 -550765761, i32* %23
  br label %224

; <label>:216:                                    ; preds = %24
  %217 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %8
  %218 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %217, align 8
  %219 = bitcast %"struct.std::_Rb_tree_node"* %218 to %"struct.std::_Rb_tree_node_base"*
  %220 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %10
  call void @_ZNSt17_Rb_tree_iteratorIiEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %220, %"struct.std::_Rb_tree_node_base"* %219) #3
  %221 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %10
  %222 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %221, i32 0, i32 0
  %223 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %222, align 8
  store i32 -1105995188, i32* %23
  br label %224

; <label>:224:                                    ; preds = %216, %207, %200, %175, %160, %159, %153, %152, %116, %88, %77, %72, %71, %35, %27, %26
  br label %24
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE3endEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  %4 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl", %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl"* %5, i32 0, i32 1
  call void @_ZNSt17_Rb_tree_iteratorIiEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %2, %"struct.std::_Rb_tree_node_base"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %2, i32 0, i32 0
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_node_base"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE3endEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  %4 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl", %"struct.std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Rb_tree_impl"* %5, i32 0, i32 1
  call void @_ZNSt23_Rb_tree_const_iteratorIiEC2EPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_const_iterator"* %2, %"struct.std::_Rb_tree_node_base"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %2, i32 0, i32 0
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_node_base"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt23_Rb_tree_const_iteratorIiEC2EPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_node_base"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  store %"struct.std::_Rb_tree_node_base"* %7, %"struct.std::_Rb_tree_node_base"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIcSaIcEEC2EmRKS0_(%"struct.std::_Vector_base.7"*, i64, %"class.std::allocator.8"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.7"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.8"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.8"* %2, %"class.std::allocator.8"** %6, align 8
  %9 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %6, align 8
  call void @_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %10, %"class.std::allocator.8"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm(%"struct.std::_Vector_base.7"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD2Ev(%"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %10) #3
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i8*, i8** %7, align 8
  %20 = load i32, i32* %8, align 4
  %21 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIcSaIcEE18_M_fill_initializeEmRKc(%"class.std::vector.6"*, i64, i8* dereferenceable(1)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.325
  %7 = load i32, i32* @y.326
  %8 = add i32 %6, 1112261187
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1112261187
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1174179337, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %90
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1174179337, label %20
    i32 1458454594, label %28
    i32 -75068490, label %72
    i32 1775538923, label %73
  ]

; <label>:19:                                     ; preds = %17
  br label %90

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1458454594, i32 1775538923
  store i32 %27, i32* %16
  br label %90

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.6"*, align 8
  %30 = alloca i64, align 8
  %31 = alloca i8*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %29, align 8
  store i64 %1, i64* %30, align 8
  store i8* %2, i8** %31, align 8
  %32 = load %"class.std::vector.6"*, %"class.std::vector.6"** %29, align 8
  %33 = bitcast %"class.std::vector.6"* %32 to %"struct.std::_Vector_base.7"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = load i64, i64* %30, align 8
  %38 = load i8*, i8** %31, align 8
  %39 = bitcast %"class.std::vector.6"* %32 to %"struct.std::_Vector_base.7"*
  %40 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %39) #3
  %41 = call i8* @_ZSt24__uninitialized_fill_n_aIPcmccET_S1_T0_RKT1_RSaIT2_E(i8* %36, i64 %37, i8* dereferenceable(1) %38, %"class.std::allocator.8"* dereferenceable(1) %40)
  %42 = bitcast %"class.std::vector.6"* %32 to %"struct.std::_Vector_base.7"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %43, i32 0, i32 1
  store i8* %41, i8** %44, align 8
  %45 = load i32, i32* @x.325
  %46 = load i32, i32* @y.326
  %47 = sub i32 %45, 59180463
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 59180463
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -75068490, i32 1775538923
  store i32 %71, i32* %16
  br label %90

; <label>:72:                                     ; preds = %17
  ret void

; <label>:73:                                     ; preds = %17
  %74 = alloca %"class.std::vector.6"*, align 8
  %75 = alloca i64, align 8
  %76 = alloca i8*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %74, align 8
  store i64 %1, i64* %75, align 8
  store i8* %2, i8** %76, align 8
  %77 = load %"class.std::vector.6"*, %"class.std::vector.6"** %74, align 8
  %78 = bitcast %"class.std::vector.6"* %77 to %"struct.std::_Vector_base.7"*
  %79 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %78, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %79, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = load i64, i64* %75, align 8
  %83 = load i8*, i8** %76, align 8
  %84 = bitcast %"class.std::vector.6"* %77 to %"struct.std::_Vector_base.7"*
  %85 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %84) #3
  %86 = call i8* @_ZSt24__uninitialized_fill_n_aIPcmccET_S1_T0_RKT1_RSaIT2_E(i8* %81, i64 %82, i8* dereferenceable(1) %83, %"class.std::allocator.8"* dereferenceable(1) %85)
  %87 = bitcast %"class.std::vector.6"* %77 to %"struct.std::_Vector_base.7"*
  %88 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %87, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %88, i32 0, i32 1
  store i8* %86, i8** %89, align 8
  store i32 1458454594, i32* %16
  br label %90

; <label>:90:                                     ; preds = %73, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIcSaIcEED2Ev(%"struct.std::_Vector_base.7"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.7"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %2, align 8
  %5 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = ptrtoint i8* %11 to i64
  %16 = ptrtoint i8* %14 to i64
  %17 = sub i64 0, %16
  %18 = add i64 %15, %17
  %19 = sub i64 %15, %16
  invoke void @_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm(%"struct.std::_Vector_base.7"* %5, i8* %8, i64 %18)
          to label %20 unwind label %64

; <label>:20:                                     ; preds = %1
  %21 = load i32, i32* @x.327
  %22 = load i32, i32* @y.328
  %23 = add i32 %21, -1366730282
  %24 = sub i32 %23, 1
  %25 = sub i32 %24, -1366730282
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  br i1 %33, label %35, label %124

; <label>:35:                                     ; preds = %20, %124
  %36 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD2Ev(%"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %36) #3
  %37 = load i32, i32* @x.327
  %38 = load i32, i32* @y.328
  %39 = add i32 %37, 566708457
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, 566708457
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  br i1 %61, label %63, label %124

; <label>:63:                                     ; preds = %35
  ret void

; <label>:64:                                     ; preds = %1
  %65 = landingpad { i8*, i32 }
          catch i8* null
  %66 = extractvalue { i8*, i32 } %65, 0
  store i8* %66, i8** %3, align 8
  %67 = extractvalue { i8*, i32 } %65, 1
  store i32 %67, i32* %4, align 4
  %68 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD2Ev(%"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %68) #3
  br label %69

; <label>:69:                                     ; preds = %64
  %70 = load i32, i32* @x.327
  %71 = load i32, i32* @y.328
  %72 = sub i32 0, 1
  %73 = add i32 %70, %72
  %74 = sub i32 %70, 1
  %75 = mul i32 %70, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %71, 10
  %79 = xor i1 %77, true
  %80 = xor i1 %78, true
  %81 = xor i1 false, true
  %82 = and i1 %79, false
  %83 = and i1 %77, %81
  %84 = and i1 %80, false
  %85 = and i1 %78, %81
  %86 = or i1 %82, %83
  %87 = or i1 %84, %85
  %88 = xor i1 %86, %87
  %89 = or i1 %79, %80
  %90 = xor i1 %89, true
  %91 = or i1 false, %81
  %92 = and i1 %90, %91
  %93 = or i1 %88, %92
  %94 = or i1 %77, %78
  br i1 %93, label %95, label %126

; <label>:95:                                     ; preds = %69, %126
  %96 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %96) #13
  %97 = load i32, i32* @x.327
  %98 = load i32, i32* @y.328
  %99 = sub i32 %97, -1569767757
  %100 = sub i32 %99, 1
  %101 = add i32 %100, -1569767757
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = xor i1 %105, true
  %108 = xor i1 %106, true
  %109 = xor i1 false, true
  %110 = and i1 %107, false
  %111 = and i1 %105, %109
  %112 = and i1 %108, false
  %113 = and i1 %106, %109
  %114 = or i1 %110, %111
  %115 = or i1 %112, %113
  %116 = xor i1 %114, %115
  %117 = or i1 %107, %108
  %118 = xor i1 %117, true
  %119 = or i1 false, %109
  %120 = and i1 %118, %119
  %121 = or i1 %116, %120
  %122 = or i1 %105, %106
  br i1 %121, label %123, label %126

; <label>:123:                                    ; preds = %95
  unreachable

; <label>:124:                                    ; preds = %35, %20
  %125 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD2Ev(%"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %125) #3
  br label %35

; <label>:126:                                    ; preds = %95, %69
  %127 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %127) #13
  br label %95
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, %"class.std::allocator.8"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.8"*, align 8
  store %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %0, %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.8"* %1, %"class.std::allocator.8"** %4, align 8
  %5 = load %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %5 to %"class.std::allocator.8"*
  %7 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %4, align 8
  call void @_ZNSaIcEC2ERKS_(%"class.std::allocator.8"* %6, %"class.std::allocator.8"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %5, i32 0, i32 0
  store i8* null, i8** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %5, i32 0, i32 1
  store i8* null, i8** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %5, i32 0, i32 2
  store i8* null, i8** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm(%"struct.std::_Vector_base.7"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.331
  %6 = load i32, i32* @y.332
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -2036296313, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %94
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2036296313, label %18
    i32 -1146819189, label %38
    i32 -570453312, label %73
    i32 -1279228876, label %74
  ]

; <label>:17:                                     ; preds = %15
  br label %94

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1146819189, i32 -1279228876
  store i32 %37, i32* %14
  br label %94

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base.7"*, align 8
  %40 = alloca i64, align 8
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %39, align 8
  store i64 %1, i64* %40, align 8
  %41 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %39, align 8
  %42 = load i64, i64* %40, align 8
  %43 = call i8* @_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm(%"struct.std::_Vector_base.7"* %41, i64 %42)
  %44 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %41, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %44, i32 0, i32 0
  store i8* %43, i8** %45, align 8
  %46 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %41, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %46, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %41, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %49, i32 0, i32 1
  store i8* %48, i8** %50, align 8
  %51 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %41, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %51, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = load i64, i64* %40, align 8
  %55 = getelementptr inbounds i8, i8* %53, i64 %54
  %56 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %41, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %56, i32 0, i32 2
  store i8* %55, i8** %57, align 8
  %58 = load i32, i32* @x.331
  %59 = load i32, i32* @y.332
  %60 = sub i32 %58, 1005415635
  %61 = sub i32 %60, 1
  %62 = add i32 %61, 1005415635
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  %72 = select i1 %70, i32 -570453312, i32 -1279228876
  store i32 %72, i32* %14
  br label %94

; <label>:73:                                     ; preds = %15
  ret void

; <label>:74:                                     ; preds = %15
  %75 = alloca %"struct.std::_Vector_base.7"*, align 8
  %76 = alloca i64, align 8
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %75, align 8
  store i64 %1, i64* %76, align 8
  %77 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %75, align 8
  %78 = load i64, i64* %76, align 8
  %79 = call i8* @_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm(%"struct.std::_Vector_base.7"* %77, i64 %78)
  %80 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %77, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %80, i32 0, i32 0
  store i8* %79, i8** %81, align 8
  %82 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %77, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %82, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  %85 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %77, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %85, i32 0, i32 1
  store i8* %84, i8** %86, align 8
  %87 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %77, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %87, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  %90 = load i64, i64* %76, align 8
  %91 = getelementptr inbounds i8, i8* %89, i64 %90
  %92 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %77, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %92, i32 0, i32 2
  store i8* %91, i8** %93, align 8
  store i32 -1146819189, i32* %14
  br label %94

; <label>:94:                                     ; preds = %74, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD2Ev(%"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.333
  %5 = load i32, i32* @y.334
  %6 = add i32 %4, 497817757
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 497817757
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1022007622, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1022007622, label %18
    i32 1604571811, label %38
    i32 -789921388, label %56
    i32 -1700706398, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1604571811, i32 -1700706398
  store i32 %37, i32* %14
  br label %61

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %0, %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"** %39, align 8
  %40 = load %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"** %39, align 8
  %41 = bitcast %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %40 to %"class.std::allocator.8"*
  call void @_ZNSaIcED2Ev(%"class.std::allocator.8"* %41) #3
  %42 = load i32, i32* @x.333
  %43 = load i32, i32* @y.334
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -789921388, i32 -1700706398
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %0, %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"** %58, align 8
  %59 = load %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"** %58, align 8
  %60 = bitcast %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %59 to %"class.std::allocator.8"*
  call void @_ZNSaIcED2Ev(%"class.std::allocator.8"* %60) #3
  store i32 1604571811, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: nounwind
declare void @_ZNSaIcEC2ERKS_(%"class.std::allocator.8"*, %"class.std::allocator.8"* dereferenceable(1)) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm(%"struct.std::_Vector_base.7"*, i64) #0 comdat align 2 {
  %3 = alloca i8*
  %4 = alloca i8*
  %5 = alloca i1
  %6 = alloca %"struct.std::_Vector_base.7"*
  %7 = alloca i64*
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.335
  %11 = load i32, i32* @y.336
  %12 = sub i32 %10, 414658911
  %13 = sub i32 %12, 1
  %14 = add i32 %13, 414658911
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -254246130, i32* %20
  %21 = alloca i8*
  br label %22

; <label>:22:                                     ; preds = %2, %196
  %23 = load i32, i32* %20
  switch i32 %23, label %24 [
    i32 -254246130, label %25
    i32 -118809842, label %45
    i32 1560790447, label %68
    i32 116735713, label %71
    i32 -696117341, label %98
    i32 -579477162, label %132
    i32 1681606674, label %134
    i32 -801575726, label %135
    i32 1636092434, label %164
    i32 -587332998, label %180
    i32 -925784301, label %182
    i32 -286188593, label %188
    i32 -700176627, label %195
  ]

; <label>:24:                                     ; preds = %22
  br label %196

; <label>:25:                                     ; preds = %22
  %26 = load volatile i1, i1* %9
  %27 = load volatile i1, i1* %8
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 false, true
  %31 = and i1 %28, false
  %32 = and i1 %26, %30
  %33 = and i1 %29, false
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 false, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  %44 = select i1 %42, i32 -118809842, i32 -925784301
  store i32 %44, i32* %20
  br label %196

; <label>:45:                                     ; preds = %22
  %46 = alloca %"struct.std::_Vector_base.7"*, align 8
  %47 = alloca i64, align 8
  store i64* %47, i64** %7
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %46, align 8
  %48 = load volatile i64*, i64** %7
  store i64 %1, i64* %48, align 8
  %49 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %46, align 8
  store %"struct.std::_Vector_base.7"* %49, %"struct.std::_Vector_base.7"** %6
  %50 = load volatile i64*, i64** %7
  %51 = load i64, i64* %50, align 8
  %52 = icmp ne i64 %51, 0
  store i1 %52, i1* %5
  %53 = load i32, i32* @x.335
  %54 = load i32, i32* @y.336
  %55 = sub i32 %53, -2069721300
  %56 = sub i32 %55, 1
  %57 = add i32 %56, -2069721300
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 1560790447, i32 -925784301
  store i32 %67, i32* %20
  br label %196

; <label>:68:                                     ; preds = %22
  %69 = load volatile i1, i1* %5
  %70 = select i1 %69, i32 116735713, i32 1681606674
  store i32 %70, i32* %20
  br label %196

; <label>:71:                                     ; preds = %22
  %72 = load i32, i32* @x.335
  %73 = load i32, i32* @y.336
  %74 = sub i32 0, 1
  %75 = add i32 %72, %74
  %76 = sub i32 %72, 1
  %77 = mul i32 %72, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %73, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 false, true
  %84 = and i1 %81, false
  %85 = and i1 %79, %83
  %86 = and i1 %82, false
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 false, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  %97 = select i1 %95, i32 -696117341, i32 -286188593
  store i32 %97, i32* %20
  br label %196

; <label>:98:                                     ; preds = %22
  %99 = load volatile %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %6
  %100 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %99, i32 0, i32 0
  %101 = bitcast %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %100 to %"class.std::allocator.8"*
  %102 = load volatile i64*, i64** %7
  %103 = load i64, i64* %102, align 8
  %104 = call i8* @_ZNSt16allocator_traitsISaIcEE8allocateERS0_m(%"class.std::allocator.8"* dereferenceable(1) %101, i64 %103)
  store i8* %104, i8** %4
  %105 = load i32, i32* @x.335
  %106 = load i32, i32* @y.336
  %107 = sub i32 %105, -556126977
  %108 = sub i32 %107, 1
  %109 = add i32 %108, -556126977
  %110 = sub i32 %105, 1
  %111 = mul i32 %105, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %106, 10
  %115 = xor i1 %113, true
  %116 = xor i1 %114, true
  %117 = xor i1 true, true
  %118 = and i1 %115, true
  %119 = and i1 %113, %117
  %120 = and i1 %116, true
  %121 = and i1 %114, %117
  %122 = or i1 %118, %119
  %123 = or i1 %120, %121
  %124 = xor i1 %122, %123
  %125 = or i1 %115, %116
  %126 = xor i1 %125, true
  %127 = or i1 true, %117
  %128 = and i1 %126, %127
  %129 = or i1 %124, %128
  %130 = or i1 %113, %114
  %131 = select i1 %129, i32 -579477162, i32 -286188593
  store i32 %131, i32* %20
  br label %196

; <label>:132:                                    ; preds = %22
  store i32 -801575726, i32* %20
  %133 = load volatile i8*, i8** %4
  store i8* %133, i8** %21
  br label %196

; <label>:134:                                    ; preds = %22
  store i32 -801575726, i32* %20
  store i8* null, i8** %21
  br label %196

; <label>:135:                                    ; preds = %22
  %136 = load i8*, i8** %21
  store i8* %136, i8** %3
  %137 = load i32, i32* @x.335
  %138 = load i32, i32* @y.336
  %139 = sub i32 %137, 1543711527
  %140 = sub i32 %139, 1
  %141 = add i32 %140, 1543711527
  %142 = sub i32 %137, 1
  %143 = mul i32 %137, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %138, 10
  %147 = xor i1 %145, true
  %148 = xor i1 %146, true
  %149 = xor i1 false, true
  %150 = and i1 %147, false
  %151 = and i1 %145, %149
  %152 = and i1 %148, false
  %153 = and i1 %146, %149
  %154 = or i1 %150, %151
  %155 = or i1 %152, %153
  %156 = xor i1 %154, %155
  %157 = or i1 %147, %148
  %158 = xor i1 %157, true
  %159 = or i1 false, %149
  %160 = and i1 %158, %159
  %161 = or i1 %156, %160
  %162 = or i1 %145, %146
  %163 = select i1 %161, i32 1636092434, i32 -700176627
  store i32 %163, i32* %20
  br label %196

; <label>:164:                                    ; preds = %22
  %165 = load i32, i32* @x.335
  %166 = load i32, i32* @y.336
  %167 = sub i32 %165, 27615177
  %168 = sub i32 %167, 1
  %169 = add i32 %168, 27615177
  %170 = sub i32 %165, 1
  %171 = mul i32 %165, %169
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %166, 10
  %175 = and i1 %173, %174
  %176 = xor i1 %173, %174
  %177 = or i1 %175, %176
  %178 = or i1 %173, %174
  %179 = select i1 %177, i32 -587332998, i32 -700176627
  store i32 %179, i32* %20
  br label %196

; <label>:180:                                    ; preds = %22
  %181 = load volatile i8*, i8** %3
  ret i8* %181

; <label>:182:                                    ; preds = %22
  %183 = alloca %"struct.std::_Vector_base.7"*, align 8
  %184 = alloca i64, align 8
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %183, align 8
  store i64 %1, i64* %184, align 8
  %185 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %183, align 8
  %186 = load i64, i64* %184, align 8
  %187 = icmp ne i64 %186, 0
  store i32 -118809842, i32* %20
  br label %196

; <label>:188:                                    ; preds = %22
  %189 = load volatile %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %6
  %190 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %189, i32 0, i32 0
  %191 = bitcast %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %190 to %"class.std::allocator.8"*
  %192 = load volatile i64*, i64** %7
  %193 = load i64, i64* %192, align 8
  %194 = call i8* @_ZNSt16allocator_traitsISaIcEE8allocateERS0_m(%"class.std::allocator.8"* dereferenceable(1) %191, i64 %193)
  store i32 -696117341, i32* %20
  br label %196

; <label>:195:                                    ; preds = %22
  store i32 1636092434, i32* %20
  br label %196

; <label>:196:                                    ; preds = %195, %188, %182, %164, %135, %134, %132, %98, %71, %68, %45, %25, %24
  br label %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZNSt16allocator_traitsISaIcEE8allocateERS0_m(%"class.std::allocator.8"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.8"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %3, align 8
  %6 = bitcast %"class.std::allocator.8"* %5 to %"class.__gnu_cxx::new_allocator.9"*
  %7 = load i64, i64* %4, align 8
  %8 = call i8* @_ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.9"* %6, i64 %7, i8* null)
  ret i8* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.9"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv(%"class.__gnu_cxx::new_allocator.9"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -260249172, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %26
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -260249172, label %16
    i32 204385942, label %21
    i32 1729518366, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %26

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 204385942, i32 1729518366
  store i32 %20, i32* %12
  br label %26

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #15
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 1
  %25 = call i8* @_Znwm(i64 %24)
  ret i8* %25

; <label>:26:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv(%"class.__gnu_cxx::new_allocator.9"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %2, align 8
  ret i64 -1
}

; Function Attrs: nounwind
declare void @_ZNSaIcED2Ev(%"class.std::allocator.8"*) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZSt24__uninitialized_fill_n_aIPcmccET_S1_T0_RKT1_RSaIT2_E(i8*, i64, i8* dereferenceable(1), %"class.std::allocator.8"* dereferenceable(1)) #0 comdat {
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %"class.std::allocator.8"*, align 8
  store i8* %0, i8** %5, align 8
  store i64 %1, i64* %6, align 8
  store i8* %2, i8** %7, align 8
  store %"class.std::allocator.8"* %3, %"class.std::allocator.8"** %8, align 8
  %9 = load i8*, i8** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load i8*, i8** %7, align 8
  %12 = call i8* @_ZSt20uninitialized_fill_nIPcmcET_S1_T0_RKT1_(i8* %9, i64 %10, i8* dereferenceable(1) %11)
  ret i8* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.7"*, align 8
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %2, align 8
  %3 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %4 to %"class.std::allocator.8"*
  ret %"class.std::allocator.8"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZSt20uninitialized_fill_nIPcmcET_S1_T0_RKT1_(i8*, i64, i8* dereferenceable(1)) #0 comdat {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8, align 1
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i8*, i8** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load i8*, i8** %6, align 8
  %11 = call i8* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPcmcEET_S3_T0_RKT1_(i8* %8, i64 %9, i8* dereferenceable(1) %10)
  ret i8* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPcmcEET_S3_T0_RKT1_(i8*, i64, i8* dereferenceable(1)) #0 comdat align 2 {
  %4 = alloca i8*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.349
  %8 = load i32, i32* @y.350
  %9 = sub i32 %7, 2086376927
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 2086376927
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -879534790, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %85
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -879534790, label %21
    i32 628458943, label %41
    i32 402449410, label %75
    i32 1564573258, label %77
  ]

; <label>:20:                                     ; preds = %18
  br label %85

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 628458943, i32 1564573258
  store i32 %40, i32* %17
  br label %85

; <label>:41:                                     ; preds = %18
  %42 = alloca i8*, align 8
  %43 = alloca i64, align 8
  %44 = alloca i8*, align 8
  store i8* %0, i8** %42, align 8
  store i64 %1, i64* %43, align 8
  store i8* %2, i8** %44, align 8
  %45 = load i8*, i8** %42, align 8
  %46 = load i64, i64* %43, align 8
  %47 = load i8*, i8** %44, align 8
  %48 = call i8* @_ZSt6fill_nIPcmcET_S1_T0_RKT1_(i8* %45, i64 %46, i8* dereferenceable(1) %47)
  store i8* %48, i8** %4
  %49 = load i32, i32* @x.349
  %50 = load i32, i32* @y.350
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 402449410, i32 1564573258
  store i32 %74, i32* %17
  br label %85

; <label>:75:                                     ; preds = %18
  %76 = load volatile i8*, i8** %4
  ret i8* %76

; <label>:77:                                     ; preds = %18
  %78 = alloca i8*, align 8
  %79 = alloca i64, align 8
  %80 = alloca i8*, align 8
  store i8* %0, i8** %78, align 8
  store i64 %1, i64* %79, align 8
  store i8* %2, i8** %80, align 8
  %81 = load i8*, i8** %78, align 8
  %82 = load i64, i64* %79, align 8
  %83 = load i8*, i8** %80, align 8
  %84 = call i8* @_ZSt6fill_nIPcmcET_S1_T0_RKT1_(i8* %81, i64 %82, i8* dereferenceable(1) %83)
  store i32 628458943, i32* %17
  br label %85

; <label>:85:                                     ; preds = %77, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZSt6fill_nIPcmcET_S1_T0_RKT1_(i8*, i64, i8* dereferenceable(1)) #0 comdat {
  %4 = alloca i8*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.351
  %8 = load i32, i32* @y.352
  %9 = sub i32 %7, 695316069
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 695316069
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -504996147, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %88
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -504996147, label %21
    i32 1286260662, label %41
    i32 1886529072, label %77
    i32 734489045, label %79
  ]

; <label>:20:                                     ; preds = %18
  br label %88

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1286260662, i32 734489045
  store i32 %40, i32* %17
  br label %88

; <label>:41:                                     ; preds = %18
  %42 = alloca i8*, align 8
  %43 = alloca i64, align 8
  %44 = alloca i8*, align 8
  store i8* %0, i8** %42, align 8
  store i64 %1, i64* %43, align 8
  store i8* %2, i8** %44, align 8
  %45 = load i8*, i8** %42, align 8
  %46 = call i8* @_ZSt12__niter_baseIPcENSt11_Niter_baseIT_E13iterator_typeES2_(i8* %45)
  %47 = load i64, i64* %43, align 8
  %48 = load i8*, i8** %44, align 8
  %49 = call i8* @_ZSt10__fill_n_aImcEN9__gnu_cxx11__enable_ifIXsr9__is_byteIT0_EE7__valueEPS2_E6__typeES3_T_RKS2_(i8* %46, i64 %47, i8* dereferenceable(1) %48)
  store i8* %49, i8** %4
  %50 = load i32, i32* @x.351
  %51 = load i32, i32* @y.352
  %52 = sub i32 %50, 1417344544
  %53 = sub i32 %52, 1
  %54 = add i32 %53, 1417344544
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 1886529072, i32 734489045
  store i32 %76, i32* %17
  br label %88

; <label>:77:                                     ; preds = %18
  %78 = load volatile i8*, i8** %4
  ret i8* %78

; <label>:79:                                     ; preds = %18
  %80 = alloca i8*, align 8
  %81 = alloca i64, align 8
  %82 = alloca i8*, align 8
  store i8* %0, i8** %80, align 8
  store i64 %1, i64* %81, align 8
  store i8* %2, i8** %82, align 8
  %83 = load i8*, i8** %80, align 8
  %84 = call i8* @_ZSt12__niter_baseIPcENSt11_Niter_baseIT_E13iterator_typeES2_(i8* %83)
  %85 = load i64, i64* %81, align 8
  %86 = load i8*, i8** %82, align 8
  %87 = call i8* @_ZSt10__fill_n_aImcEN9__gnu_cxx11__enable_ifIXsr9__is_byteIT0_EE7__valueEPS2_E6__typeES3_T_RKS2_(i8* %84, i64 %85, i8* dereferenceable(1) %86)
  store i32 1286260662, i32* %17
  br label %88

; <label>:88:                                     ; preds = %79, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZSt10__fill_n_aImcEN9__gnu_cxx11__enable_ifIXsr9__is_byteIT0_EE7__valueEPS2_E6__typeES3_T_RKS2_(i8*, i64, i8* dereferenceable(1)) #0 comdat {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load i8*, i8** %4, align 8
  %8 = load i8*, i8** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 %9
  %11 = load i8*, i8** %6, align 8
  call void @_ZSt8__fill_aIcEN9__gnu_cxx11__enable_ifIXsr9__is_byteIT_EE7__valueEvE6__typeEPS2_S5_RKS2_(i8* %7, i8* %10, i8* dereferenceable(1) %11)
  %12 = load i8*, i8** %4, align 8
  %13 = load i64, i64* %5, align 8
  %14 = getelementptr inbounds i8, i8* %12, i64 %13
  ret i8* %14
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZSt12__niter_baseIPcENSt11_Niter_baseIT_E13iterator_typeES2_(i8*) #0 comdat {
  %2 = alloca i8*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.355
  %6 = load i32, i32* @y.356
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1341858343, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %63
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1341858343, label %18
    i32 -811639210, label %26
    i32 -1193348915, label %57
    i32 -398011515, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %63

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -811639210, i32 -398011515
  store i32 %25, i32* %14
  br label %63

; <label>:26:                                     ; preds = %15
  %27 = alloca i8*, align 8
  store i8* %0, i8** %27, align 8
  %28 = load i8*, i8** %27, align 8
  %29 = call i8* @_ZNSt10_Iter_baseIPcLb0EE7_S_baseES0_(i8* %28)
  store i8* %29, i8** %2
  %30 = load i32, i32* @x.355
  %31 = load i32, i32* @y.356
  %32 = sub i32 %30, 1621171389
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 1621171389
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -1193348915, i32 -398011515
  store i32 %56, i32* %14
  br label %63

; <label>:57:                                     ; preds = %15
  %58 = load volatile i8*, i8** %2
  ret i8* %58

; <label>:59:                                     ; preds = %15
  %60 = alloca i8*, align 8
  store i8* %0, i8** %60, align 8
  %61 = load i8*, i8** %60, align 8
  %62 = call i8* @_ZNSt10_Iter_baseIPcLb0EE7_S_baseES0_(i8* %61)
  store i32 -811639210, i32* %14
  br label %63

; <label>:63:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIcEN9__gnu_cxx11__enable_ifIXsr9__is_byteIT_EE7__valueEvE6__typeEPS2_S5_RKS2_(i8*, i8*, i8* dereferenceable(1)) #4 comdat {
  %4 = alloca i64
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8, align 1
  %9 = alloca i64, align 8
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  %10 = load i8*, i8** %7, align 8
  %11 = load i8, i8* %10, align 1
  store i8 %11, i8* %8, align 1
  %12 = load i8*, i8** %6, align 8
  %13 = load i8*, i8** %5, align 8
  %14 = ptrtoint i8* %12 to i64
  %15 = ptrtoint i8* %13 to i64
  %16 = sub i64 0, %15
  %17 = add i64 %14, %16
  %18 = sub i64 %14, %15
  store i64 %17, i64* %9, align 8
  %19 = load i64, i64* %9, align 8
  store i64 %19, i64* %4
  %20 = alloca i32
  store i32 -743900149, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %35
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -743900149, label %24
    i32 1364753338, label %28
    i32 -1133819315, label %34
  ]

; <label>:23:                                     ; preds = %21
  br label %35

; <label>:24:                                     ; preds = %21
  %25 = load volatile i64, i64* %4
  %26 = icmp ne i64 %25, 0
  %27 = select i1 %26, i32 1364753338, i32 -1133819315
  store i32 %27, i32* %20
  br label %35

; <label>:28:                                     ; preds = %21
  %29 = load i8*, i8** %5, align 8
  %30 = load i8, i8* %8, align 1
  %31 = zext i8 %30 to i32
  %32 = trunc i32 %31 to i8
  %33 = load i64, i64* %9, align 8
  call void @llvm.memset.p0i8.i64(i8* %29, i8 %32, i64 %33, i32 1, i1 false)
  store i32 -1133819315, i32* %20
  br label %35

; <label>:34:                                     ; preds = %21
  ret void

; <label>:35:                                     ; preds = %28, %24, %23
  br label %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #7

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNSt10_Iter_baseIPcLb0EE7_S_baseES0_(i8*) #4 comdat align 2 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm(%"struct.std::_Vector_base.7"*, i8*, i64) #0 comdat align 2 {
  %4 = alloca i8*
  %5 = alloca %"struct.std::_Vector_base.7"*
  %6 = alloca %"struct.std::_Vector_base.7"*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %6, align 8
  store i8* %1, i8** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %6, align 8
  store %"struct.std::_Vector_base.7"* %9, %"struct.std::_Vector_base.7"** %5
  %10 = load i8*, i8** %7, align 8
  store i8* %10, i8** %4
  %11 = alloca i32
  store i32 -225435799, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -225435799, label %15
    i32 277879558, label %19
    i32 -618159951, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile i8*, i8** %4
  %17 = icmp ne i8* %16, null
  %18 = select i1 %17, i32 277879558, i32 -618159951
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %21 to %"class.std::allocator.8"*
  %23 = load i8*, i8** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm(%"class.std::allocator.8"* dereferenceable(1) %22, i8* %23, i64 %24)
  store i32 -618159951, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm(%"class.std::allocator.8"* dereferenceable(1), i8*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.8"*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.8"* %0, %"class.std::allocator.8"** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %4, align 8
  %8 = bitcast %"class.std::allocator.8"* %7 to %"class.__gnu_cxx::new_allocator.9"*
  %9 = load i8*, i8** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm(%"class.__gnu_cxx::new_allocator.9"* %8, i8* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm(%"class.__gnu_cxx::new_allocator.9"*, i8*, i64) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.365
  %7 = load i32, i32* @y.366
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1782018869, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1782018869, label %19
    i32 -1997869073, label %39
    i32 -192604235, label %71
    i32 252330774, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1997869073, i32 252330774
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  %41 = alloca i8*, align 8
  %42 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %40, align 8
  store i8* %1, i8** %41, align 8
  store i64 %2, i64* %42, align 8
  %43 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %40, align 8
  %44 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %44) #3
  %45 = load i32, i32* @x.365
  %46 = load i32, i32* @y.366
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -192604235, i32 252330774
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  ret void

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.__gnu_cxx::new_allocator.9"*, align 8
  %74 = alloca i8*, align 8
  %75 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.9"* %0, %"class.__gnu_cxx::new_allocator.9"** %73, align 8
  store i8* %1, i8** %74, align 8
  store i64 %2, i64* %75, align 8
  %76 = load %"class.__gnu_cxx::new_allocator.9"*, %"class.__gnu_cxx::new_allocator.9"** %73, align 8
  %77 = load i8*, i8** %74, align 8
  call void @_ZdlPv(i8* %77) #3
  store i32 -1997869073, i32* %15
  br label %78

; <label>:78:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPccEvT_S1_RSaIT0_E(i8*, i8*, %"class.std::allocator.8"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.367
  %7 = load i32, i32* @y.368
  %8 = sub i32 %6, 893031251
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 893031251
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1829926806, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %80
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1829926806, label %20
    i32 204415543, label %40
    i32 -1714261974, label %73
    i32 -1370229566, label %74
  ]

; <label>:19:                                     ; preds = %17
  br label %80

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 204415543, i32 -1370229566
  store i32 %39, i32* %16
  br label %80

; <label>:40:                                     ; preds = %17
  %41 = alloca i8*, align 8
  %42 = alloca i8*, align 8
  %43 = alloca %"class.std::allocator.8"*, align 8
  store i8* %0, i8** %41, align 8
  store i8* %1, i8** %42, align 8
  store %"class.std::allocator.8"* %2, %"class.std::allocator.8"** %43, align 8
  %44 = load i8*, i8** %41, align 8
  %45 = load i8*, i8** %42, align 8
  call void @_ZSt8_DestroyIPcEvT_S1_(i8* %44, i8* %45)
  %46 = load i32, i32* @x.367
  %47 = load i32, i32* @y.368
  %48 = sub i32 %46, 1916992391
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 1916992391
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -1714261974, i32 -1370229566
  store i32 %72, i32* %16
  br label %80

; <label>:73:                                     ; preds = %17
  ret void

; <label>:74:                                     ; preds = %17
  %75 = alloca i8*, align 8
  %76 = alloca i8*, align 8
  %77 = alloca %"class.std::allocator.8"*, align 8
  store i8* %0, i8** %75, align 8
  store i8* %1, i8** %76, align 8
  store %"class.std::allocator.8"* %2, %"class.std::allocator.8"** %77, align 8
  %78 = load i8*, i8** %75, align 8
  %79 = load i8*, i8** %76, align 8
  call void @_ZSt8_DestroyIPcEvT_S1_(i8* %78, i8* %79)
  store i32 204415543, i32* %16
  br label %80

; <label>:80:                                     ; preds = %74, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPcEvT_S1_(i8*, i8*) #0 comdat {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load i8*, i8** %3, align 8
  %6 = load i8*, i8** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_(i8* %5, i8* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_(i8*, i8*) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.371
  %6 = load i32, i32* @y.372
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 665612533, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %59
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 665612533, label %18
    i32 -142665586, label %38
    i32 -1517440542, label %55
    i32 -507288768, label %56
  ]

; <label>:17:                                     ; preds = %15
  br label %59

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -142665586, i32 -507288768
  store i32 %37, i32* %14
  br label %59

; <label>:38:                                     ; preds = %15
  %39 = alloca i8*, align 8
  %40 = alloca i8*, align 8
  store i8* %0, i8** %39, align 8
  store i8* %1, i8** %40, align 8
  %41 = load i32, i32* @x.371
  %42 = load i32, i32* @y.372
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -1517440542, i32 -507288768
  store i32 %54, i32* %14
  br label %59

; <label>:55:                                     ; preds = %15
  ret void

; <label>:56:                                     ; preds = %15
  %57 = alloca i8*, align 8
  %58 = alloca i8*, align 8
  store i8* %0, i8** %57, align 8
  store i8* %1, i8** %58, align 8
  store i32 -142665586, i32* %14
  br label %59

; <label>:59:                                     ; preds = %56, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEEC2Ev(%"class.__gnu_cxx::new_allocator.4"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.373
  %5 = load i32, i32* @y.374
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -993365669, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %59
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -993365669, label %17
    i32 154053482, label %37
    i32 -1723875434, label %55
    i32 -1831895957, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %59

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 154053482, i32 -1831895957
  store i32 %36, i32* %13
  br label %59

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator.4"*, align 8
  store %"class.__gnu_cxx::new_allocator.4"* %0, %"class.__gnu_cxx::new_allocator.4"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.4"*, %"class.__gnu_cxx::new_allocator.4"** %38, align 8
  %40 = load i32, i32* @x.373
  %41 = load i32, i32* @y.374
  %42 = add i32 %40, -1445078443
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -1445078443
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -1723875434, i32 -1831895957
  store i32 %54, i32* %13
  br label %59

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %"class.__gnu_cxx::new_allocator.4"*, align 8
  store %"class.__gnu_cxx::new_allocator.4"* %0, %"class.__gnu_cxx::new_allocator.4"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.4"*, %"class.__gnu_cxx::new_allocator.4"** %57, align 8
  store i32 154053482, i32* %13
  br label %59

; <label>:59:                                     ; preds = %56, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEED2Ev(%"class.__gnu_cxx::new_allocator.4"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.4"*, align 8
  store %"class.__gnu_cxx::new_allocator.4"* %0, %"class.__gnu_cxx::new_allocator.4"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.4"*, %"class.__gnu_cxx::new_allocator.4"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base"*, i64, %"class.std::allocator.3"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.377
  %5 = load i32, i32* @y.378
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %5, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %105

; <label>:29:                                     ; preds = %3, %105
  %30 = alloca %"struct.std::_Vector_base"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"class.std::allocator.3"*, align 8
  %33 = alloca i8*
  %34 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %30, align 8
  store i64 %1, i64* %31, align 8
  store %"class.std::allocator.3"* %2, %"class.std::allocator.3"** %32, align 8
  %35 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %30, align 8
  %36 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %35, i32 0, i32 0
  %37 = load %"class.std::allocator.3"*, %"class.std::allocator.3"** %32, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %36, %"class.std::allocator.3"* dereferenceable(1) %37) #3
  %38 = load i64, i64* %31, align 8
  %39 = load i32, i32* @x.377
  %40 = load i32, i32* @y.378
  %41 = add i32 %39, 1271434236
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, 1271434236
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  br i1 %51, label %53, label %105

; <label>:53:                                     ; preds = %29
  invoke void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base"* %35, i64 %38)
          to label %54 unwind label %96

; <label>:54:                                     ; preds = %53
  %55 = load i32, i32* @x.377
  %56 = load i32, i32* @y.378
  %57 = sub i32 %55, -778136794
  %58 = sub i32 %57, 1
  %59 = add i32 %58, -778136794
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 false, true
  %68 = and i1 %65, false
  %69 = and i1 %63, %67
  %70 = and i1 %66, false
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 false, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  br i1 %79, label %81, label %115

; <label>:81:                                     ; preds = %54, %115
  %82 = load i32, i32* @x.377
  %83 = load i32, i32* @y.378
  %84 = sub i32 0, 1
  %85 = add i32 %82, %84
  %86 = sub i32 %82, 1
  %87 = mul i32 %82, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %83, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  br i1 %93, label %95, label %115

; <label>:95:                                     ; preds = %81
  ret void

; <label>:96:                                     ; preds = %53
  %97 = landingpad { i8*, i32 }
          cleanup
  %98 = extractvalue { i8*, i32 } %97, 0
  store i8* %98, i8** %33, align 8
  %99 = extractvalue { i8*, i32 } %97, 1
  store i32 %99, i32* %34, align 4
  call void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %36) #3
  br label %100

; <label>:100:                                    ; preds = %96
  %101 = load i8*, i8** %33, align 8
  %102 = load i32, i32* %34, align 4
  %103 = insertvalue { i8*, i32 } undef, i8* %101, 0
  %104 = insertvalue { i8*, i32 } %103, i32 %102, 1
  resume { i8*, i32 } %104

; <label>:105:                                    ; preds = %29, %3
  %106 = alloca %"struct.std::_Vector_base"*, align 8
  %107 = alloca i64, align 8
  %108 = alloca %"class.std::allocator.3"*, align 8
  %109 = alloca i8*
  %110 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %106, align 8
  store i64 %1, i64* %107, align 8
  store %"class.std::allocator.3"* %2, %"class.std::allocator.3"** %108, align 8
  %111 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %106, align 8
  %112 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %111, i32 0, i32 0
  %113 = load %"class.std::allocator.3"*, %"class.std::allocator.3"** %108, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %112, %"class.std::allocator.3"* dereferenceable(1) %113) #3
  %114 = load i64, i64* %107, align 8
  br label %29

; <label>:115:                                    ; preds = %81, %54
  br label %81
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IcSaIcEESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector"*, i64, %"class.std::vector.6"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.6"* %2, %"class.std::vector.6"** %6, align 8
  %7 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %8 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::vector.6"*, %"class.std::vector.6"** %10, align 8
  %12 = load i64, i64* %5, align 8
  %13 = load %"class.std::vector.6"*, %"class.std::vector.6"** %6, align 8
  %14 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator.3"* @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %14) #3
  %16 = call %"class.std::vector.6"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIcSaIcEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector.6"* %11, i64 %12, %"class.std::vector.6"* dereferenceable(24) %13, %"class.std::allocator.3"* dereferenceable(1) %15)
  %17 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %18, i32 0, i32 1
  store %"class.std::vector.6"* %16, %"class.std::vector.6"** %19, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::vector.6"*, %"class.std::vector.6"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::vector.6"*, %"class.std::vector.6"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::vector.6"*, %"class.std::vector.6"** %13, align 8
  %15 = ptrtoint %"class.std::vector.6"* %11 to i64
  %16 = ptrtoint %"class.std::vector.6"* %14 to i64
  %17 = sub i64 0, %16
  %18 = add i64 %15, %17
  %19 = sub i64 %15, %16
  %20 = sdiv exact i64 %18, 24
  invoke void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base"* %5, %"class.std::vector.6"* %8, i64 %20)
          to label %21 unwind label %76

; <label>:21:                                     ; preds = %1
  %22 = load i32, i32* @x.381
  %23 = load i32, i32* @y.382
  %24 = sub i32 0, 1
  %25 = add i32 %22, %24
  %26 = sub i32 %22, 1
  %27 = mul i32 %22, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %23, 10
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 true, true
  %34 = and i1 %31, true
  %35 = and i1 %29, %33
  %36 = and i1 %32, true
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 true, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  br i1 %45, label %47, label %83

; <label>:47:                                     ; preds = %21, %83
  %48 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %48) #3
  %49 = load i32, i32* @x.381
  %50 = load i32, i32* @y.382
  %51 = sub i32 %49, -1394555476
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -1394555476
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  br i1 %73, label %75, label %83

; <label>:75:                                     ; preds = %47
  ret void

; <label>:76:                                     ; preds = %1
  %77 = landingpad { i8*, i32 }
          catch i8* null
  %78 = extractvalue { i8*, i32 } %77, 0
  store i8* %78, i8** %3, align 8
  %79 = extractvalue { i8*, i32 } %77, 1
  store i32 %79, i32* %4, align 4
  %80 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %80) #3
  br label %81

; <label>:81:                                     ; preds = %76
  %82 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %82) #13
  unreachable

; <label>:83:                                     ; preds = %47, %21
  %84 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %84) #3
  br label %47
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"*, %"class.std::allocator.3"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.3"*, align 8
  store %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.3"* %1, %"class.std::allocator.3"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %5 to %"class.std::allocator.3"*
  %7 = load %"class.std::allocator.3"*, %"class.std::allocator.3"** %4, align 8
  call void @_ZNSaISt6vectorIcSaIcEEEC2ERKS2_(%"class.std::allocator.3"* %6, %"class.std::allocator.3"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %5, i32 0, i32 0
  store %"class.std::vector.6"* null, %"class.std::vector.6"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %5, i32 0, i32 1
  store %"class.std::vector.6"* null, %"class.std::vector.6"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %5, i32 0, i32 2
  store %"class.std::vector.6"* null, %"class.std::vector.6"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.385
  %6 = load i32, i32* @y.386
  %7 = add i32 %5, 2055091483
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 2055091483
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1200633586, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %107
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1200633586, label %19
    i32 -481250568, label %39
    i32 -1340663014, label %86
    i32 559451270, label %87
  ]

; <label>:18:                                     ; preds = %16
  br label %107

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -481250568, i32 559451270
  store i32 %38, i32* %15
  br label %107

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base"*, align 8
  %41 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %40, align 8
  %43 = load i64, i64* %41, align 8
  %44 = call %"class.std::vector.6"* @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base"* %42, i64 %43)
  %45 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %42, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %45, i32 0, i32 0
  store %"class.std::vector.6"* %44, %"class.std::vector.6"** %46, align 8
  %47 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %42, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %47, i32 0, i32 0
  %49 = load %"class.std::vector.6"*, %"class.std::vector.6"** %48, align 8
  %50 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %42, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %50, i32 0, i32 1
  store %"class.std::vector.6"* %49, %"class.std::vector.6"** %51, align 8
  %52 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %42, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %52, i32 0, i32 0
  %54 = load %"class.std::vector.6"*, %"class.std::vector.6"** %53, align 8
  %55 = load i64, i64* %41, align 8
  %56 = getelementptr inbounds %"class.std::vector.6", %"class.std::vector.6"* %54, i64 %55
  %57 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %42, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %57, i32 0, i32 2
  store %"class.std::vector.6"* %56, %"class.std::vector.6"** %58, align 8
  %59 = load i32, i32* @x.385
  %60 = load i32, i32* @y.386
  %61 = add i32 %59, -583856033
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, -583856033
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 true, true
  %72 = and i1 %69, true
  %73 = and i1 %67, %71
  %74 = and i1 %70, true
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 true, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  %85 = select i1 %83, i32 -1340663014, i32 559451270
  store i32 %85, i32* %15
  br label %107

; <label>:86:                                     ; preds = %16
  ret void

; <label>:87:                                     ; preds = %16
  %88 = alloca %"struct.std::_Vector_base"*, align 8
  %89 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %88, align 8
  store i64 %1, i64* %89, align 8
  %90 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %88, align 8
  %91 = load i64, i64* %89, align 8
  %92 = call %"class.std::vector.6"* @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base"* %90, i64 %91)
  %93 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %90, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %93, i32 0, i32 0
  store %"class.std::vector.6"* %92, %"class.std::vector.6"** %94, align 8
  %95 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %90, i32 0, i32 0
  %96 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %95, i32 0, i32 0
  %97 = load %"class.std::vector.6"*, %"class.std::vector.6"** %96, align 8
  %98 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %90, i32 0, i32 0
  %99 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %98, i32 0, i32 1
  store %"class.std::vector.6"* %97, %"class.std::vector.6"** %99, align 8
  %100 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %90, i32 0, i32 0
  %101 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %100, i32 0, i32 0
  %102 = load %"class.std::vector.6"*, %"class.std::vector.6"** %101, align 8
  %103 = load i64, i64* %89, align 8
  %104 = getelementptr inbounds %"class.std::vector.6", %"class.std::vector.6"* %102, i64 %103
  %105 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %90, i32 0, i32 0
  %106 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %105, i32 0, i32 2
  store %"class.std::vector.6"* %104, %"class.std::vector.6"** %106, align 8
  store i32 -481250568, i32* %15
  br label %107

; <label>:107:                                    ; preds = %87, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.387
  %5 = load i32, i32* @y.388
  %6 = add i32 %4, -1472304859
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1472304859
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -783481693, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -783481693, label %18
    i32 -1656933543, label %26
    i32 -260539861, label %57
    i32 -901456344, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1656933543, i32 -901456344
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"** %27, align 8
  %28 = load %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"** %27, align 8
  %29 = bitcast %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %28 to %"class.std::allocator.3"*
  call void @_ZNSaISt6vectorIcSaIcEEED2Ev(%"class.std::allocator.3"* %29) #3
  %30 = load i32, i32* @x.387
  %31 = load i32, i32* @y.388
  %32 = sub i32 %30, 1709649053
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 1709649053
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -260539861, i32 -901456344
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"** %59, align 8
  %60 = load %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"** %59, align 8
  %61 = bitcast %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %60 to %"class.std::allocator.3"*
  call void @_ZNSaISt6vectorIcSaIcEEED2Ev(%"class.std::allocator.3"* %61) #3
  store i32 -1656933543, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIcSaIcEEEC2ERKS2_(%"class.std::allocator.3"*, %"class.std::allocator.3"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.389
  %6 = load i32, i32* @y.390
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -347238492, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %79
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -347238492, label %18
    i32 586520811, label %38
    i32 -1156001982, label %71
    i32 -1404429812, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %79

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 586520811, i32 -1404429812
  store i32 %37, i32* %14
  br label %79

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.3"*, align 8
  %40 = alloca %"class.std::allocator.3"*, align 8
  store %"class.std::allocator.3"* %0, %"class.std::allocator.3"** %39, align 8
  store %"class.std::allocator.3"* %1, %"class.std::allocator.3"** %40, align 8
  %41 = load %"class.std::allocator.3"*, %"class.std::allocator.3"** %39, align 8
  %42 = bitcast %"class.std::allocator.3"* %41 to %"class.__gnu_cxx::new_allocator.4"*
  %43 = load %"class.std::allocator.3"*, %"class.std::allocator.3"** %40, align 8
  %44 = bitcast %"class.std::allocator.3"* %43 to %"class.__gnu_cxx::new_allocator.4"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.4"* %42, %"class.__gnu_cxx::new_allocator.4"* dereferenceable(1) %44) #3
  %45 = load i32, i32* @x.389
  %46 = load i32, i32* @y.390
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -1156001982, i32 -1404429812
  store i32 %70, i32* %14
  br label %79

; <label>:71:                                     ; preds = %15
  ret void

; <label>:72:                                     ; preds = %15
  %73 = alloca %"class.std::allocator.3"*, align 8
  %74 = alloca %"class.std::allocator.3"*, align 8
  store %"class.std::allocator.3"* %0, %"class.std::allocator.3"** %73, align 8
  store %"class.std::allocator.3"* %1, %"class.std::allocator.3"** %74, align 8
  %75 = load %"class.std::allocator.3"*, %"class.std::allocator.3"** %73, align 8
  %76 = bitcast %"class.std::allocator.3"* %75 to %"class.__gnu_cxx::new_allocator.4"*
  %77 = load %"class.std::allocator.3"*, %"class.std::allocator.3"** %74, align 8
  %78 = bitcast %"class.std::allocator.3"* %77 to %"class.__gnu_cxx::new_allocator.4"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.4"* %76, %"class.__gnu_cxx::new_allocator.4"* dereferenceable(1) %78) #3
  store i32 586520811, i32* %14
  br label %79

; <label>:79:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.4"*, %"class.__gnu_cxx::new_allocator.4"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.4"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.4"*, align 8
  store %"class.__gnu_cxx::new_allocator.4"* %0, %"class.__gnu_cxx::new_allocator.4"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.4"* %1, %"class.__gnu_cxx::new_allocator.4"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.4"*, %"class.__gnu_cxx::new_allocator.4"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.6"* @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"struct.std::_Vector_base"*
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.393
  %9 = load i32, i32* @y.394
  %10 = add i32 %8, -1972196128
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -1972196128
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -1694062981, i32* %18
  %19 = alloca %"class.std::vector.6"*
  br label %20

; <label>:20:                                     ; preds = %2, %106
  %21 = load i32, i32* %18
  switch i32 %21, label %22 [
    i32 -1694062981, label %23
    i32 1643665423, label %31
    i32 377291108, label %54
    i32 966651837, label %57
    i32 -301300374, label %64
    i32 383065879, label %80
    i32 -673407479, label %96
    i32 -164744495, label %97
    i32 -1593595294, label %99
    i32 1720378843, label %105
  ]

; <label>:22:                                     ; preds = %20
  br label %106

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %7
  %25 = load volatile i1, i1* %6
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 1643665423, i32 -1593595294
  store i32 %30, i32* %18
  br label %106

; <label>:31:                                     ; preds = %20
  %32 = alloca %"struct.std::_Vector_base"*, align 8
  %33 = alloca i64, align 8
  store i64* %33, i64** %5
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %32, align 8
  %34 = load volatile i64*, i64** %5
  store i64 %1, i64* %34, align 8
  %35 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %32, align 8
  store %"struct.std::_Vector_base"* %35, %"struct.std::_Vector_base"** %4
  %36 = load volatile i64*, i64** %5
  %37 = load i64, i64* %36, align 8
  %38 = icmp ne i64 %37, 0
  store i1 %38, i1* %3
  %39 = load i32, i32* @x.393
  %40 = load i32, i32* @y.394
  %41 = add i32 %39, 206684821
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, 206684821
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 377291108, i32 -1593595294
  store i32 %53, i32* %18
  br label %106

; <label>:54:                                     ; preds = %20
  %55 = load volatile i1, i1* %3
  %56 = select i1 %55, i32 966651837, i32 -301300374
  store i32 %56, i32* %18
  br label %106

; <label>:57:                                     ; preds = %20
  %58 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4
  %59 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %58, i32 0, i32 0
  %60 = bitcast %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %59 to %"class.std::allocator.3"*
  %61 = load volatile i64*, i64** %5
  %62 = load i64, i64* %61, align 8
  %63 = call %"class.std::vector.6"* @_ZNSt16allocator_traitsISaISt6vectorIcSaIcEEEE8allocateERS3_m(%"class.std::allocator.3"* dereferenceable(1) %60, i64 %62)
  store i32 -164744495, i32* %18
  store %"class.std::vector.6"* %63, %"class.std::vector.6"** %19
  br label %106

; <label>:64:                                     ; preds = %20
  %65 = load i32, i32* @x.393
  %66 = load i32, i32* @y.394
  %67 = add i32 %65, 197572435
  %68 = sub i32 %67, 1
  %69 = sub i32 %68, 197572435
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = and i1 %73, %74
  %76 = xor i1 %73, %74
  %77 = or i1 %75, %76
  %78 = or i1 %73, %74
  %79 = select i1 %77, i32 383065879, i32 1720378843
  store i32 %79, i32* %18
  br label %106

; <label>:80:                                     ; preds = %20
  %81 = load i32, i32* @x.393
  %82 = load i32, i32* @y.394
  %83 = sub i32 %81, 1808540582
  %84 = sub i32 %83, 1
  %85 = add i32 %84, 1808540582
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  %95 = select i1 %93, i32 -673407479, i32 1720378843
  store i32 %95, i32* %18
  br label %106

; <label>:96:                                     ; preds = %20
  store i32 -164744495, i32* %18
  store %"class.std::vector.6"* null, %"class.std::vector.6"** %19
  br label %106

; <label>:97:                                     ; preds = %20
  %98 = load %"class.std::vector.6"*, %"class.std::vector.6"** %19
  ret %"class.std::vector.6"* %98

; <label>:99:                                     ; preds = %20
  %100 = alloca %"struct.std::_Vector_base"*, align 8
  %101 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %100, align 8
  store i64 %1, i64* %101, align 8
  %102 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %100, align 8
  %103 = load i64, i64* %101, align 8
  %104 = icmp ne i64 %103, 0
  store i32 1643665423, i32* %18
  br label %106

; <label>:105:                                    ; preds = %20
  store i32 383065879, i32* %18
  br label %106

; <label>:106:                                    ; preds = %105, %99, %96, %80, %64, %57, %54, %31, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.6"* @_ZNSt16allocator_traitsISaISt6vectorIcSaIcEEEE8allocateERS3_m(%"class.std::allocator.3"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.3"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.3"* %0, %"class.std::allocator.3"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.3"*, %"class.std::allocator.3"** %3, align 8
  %6 = bitcast %"class.std::allocator.3"* %5 to %"class.__gnu_cxx::new_allocator.4"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::vector.6"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.4"* %6, i64 %7, i8* null)
  ret %"class.std::vector.6"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.6"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.4"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.6"*
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator.4"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.4"* %0, %"class.__gnu_cxx::new_allocator.4"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator.4"*, %"class.__gnu_cxx::new_allocator.4"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.4"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 826628785, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %109
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 826628785, label %17
    i32 611782202, label %22
    i32 575782734, label %23
    i32 -1490816798, label %51
    i32 1714656926, label %71
    i32 -729554940, label %73
  ]

; <label>:16:                                     ; preds = %14
  br label %109

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 611782202, i32 575782734
  store i32 %21, i32* %13
  br label %109

; <label>:22:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #15
  unreachable

; <label>:23:                                     ; preds = %14
  %24 = load i32, i32* @x.397
  %25 = load i32, i32* @y.398
  %26 = add i32 %24, -551596282
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, -551596282
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 true, true
  %37 = and i1 %34, true
  %38 = and i1 %32, %36
  %39 = and i1 %35, true
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 true, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  %50 = select i1 %48, i32 -1490816798, i32 -729554940
  store i32 %50, i32* %13
  br label %109

; <label>:51:                                     ; preds = %14
  %52 = load i64, i64* %8, align 8
  %53 = mul i64 %52, 24
  %54 = call i8* @_Znwm(i64 %53)
  %55 = bitcast i8* %54 to %"class.std::vector.6"*
  store %"class.std::vector.6"* %55, %"class.std::vector.6"** %4
  %56 = load i32, i32* @x.397
  %57 = load i32, i32* @y.398
  %58 = add i32 %56, 643813955
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, 643813955
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 1714656926, i32 -729554940
  store i32 %70, i32* %13
  br label %109

; <label>:71:                                     ; preds = %14
  %72 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %4
  ret %"class.std::vector.6"* %72

; <label>:73:                                     ; preds = %14
  %74 = load i64, i64* %8, align 8
  %75 = add i64 0, 4398719024999052969
  %76 = sub i64 %75, %74
  %77 = sub i64 %76, 4398719024999052969
  %78 = sub i64 0, %74
  %79 = sub i64 0, %77
  %80 = sub i64 0, 24
  %81 = add i64 %79, %80
  %82 = sub i64 0, %81
  %83 = add i64 %77, 24
  %84 = sub i64 %74, -5765583491481419615
  %85 = sub i64 %84, 24
  %86 = add i64 %85, -5765583491481419615
  %87 = sub i64 %74, 24
  %88 = mul i64 %86, 24
  %89 = add i64 0, 175240385211987906
  %90 = sub i64 %89, %74
  %91 = sub i64 %90, 175240385211987906
  %92 = sub i64 0, %74
  %93 = sub i64 0, %91
  %94 = sub i64 0, 24
  %95 = add i64 %93, %94
  %96 = sub i64 0, %95
  %97 = add i64 %91, 24
  %98 = shl i64 %74, 24
  %99 = sub i64 0, %74
  %100 = add i64 0, %99
  %101 = sub i64 0, %74
  %102 = sub i64 %100, 7280312795503281974
  %103 = add i64 %102, 24
  %104 = add i64 %103, 7280312795503281974
  %105 = add i64 %100, 24
  %106 = mul i64 %74, 24
  %107 = call i8* @_Znwm(i64 %106)
  %108 = bitcast i8* %107 to %"class.std::vector.6"*
  store i32 -1490816798, i32* %13
  br label %109

; <label>:109:                                    ; preds = %73, %51, %23, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.4"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.4"*, align 8
  store %"class.__gnu_cxx::new_allocator.4"* %0, %"class.__gnu_cxx::new_allocator.4"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.4"*, %"class.__gnu_cxx::new_allocator.4"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.6"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIcSaIcEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector.6"*, i64, %"class.std::vector.6"* dereferenceable(24), %"class.std::allocator.3"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.6"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.401
  %9 = load i32, i32* @y.402
  %10 = add i32 %8, 1485604801
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, 1485604801
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -769844507, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %76
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -769844507, label %22
    i32 -393048004, label %30
    i32 -1254463172, label %65
    i32 -1902181830, label %67
  ]

; <label>:21:                                     ; preds = %19
  br label %76

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -393048004, i32 -1902181830
  store i32 %29, i32* %18
  br label %76

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::vector.6"*, align 8
  %32 = alloca i64, align 8
  %33 = alloca %"class.std::vector.6"*, align 8
  %34 = alloca %"class.std::allocator.3"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %31, align 8
  store i64 %1, i64* %32, align 8
  store %"class.std::vector.6"* %2, %"class.std::vector.6"** %33, align 8
  store %"class.std::allocator.3"* %3, %"class.std::allocator.3"** %34, align 8
  %35 = load %"class.std::vector.6"*, %"class.std::vector.6"** %31, align 8
  %36 = load i64, i64* %32, align 8
  %37 = load %"class.std::vector.6"*, %"class.std::vector.6"** %33, align 8
  %38 = call %"class.std::vector.6"* @_ZSt20uninitialized_fill_nIPSt6vectorIcSaIcEEmS2_ET_S4_T0_RKT1_(%"class.std::vector.6"* %35, i64 %36, %"class.std::vector.6"* dereferenceable(24) %37)
  store %"class.std::vector.6"* %38, %"class.std::vector.6"** %5
  %39 = load i32, i32* @x.401
  %40 = load i32, i32* @y.402
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 -1254463172, i32 -1902181830
  store i32 %64, i32* %18
  br label %76

; <label>:65:                                     ; preds = %19
  %66 = load volatile %"class.std::vector.6"*, %"class.std::vector.6"** %5
  ret %"class.std::vector.6"* %66

; <label>:67:                                     ; preds = %19
  %68 = alloca %"class.std::vector.6"*, align 8
  %69 = alloca i64, align 8
  %70 = alloca %"class.std::vector.6"*, align 8
  %71 = alloca %"class.std::allocator.3"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %68, align 8
  store i64 %1, i64* %69, align 8
  store %"class.std::vector.6"* %2, %"class.std::vector.6"** %70, align 8
  store %"class.std::allocator.3"* %3, %"class.std::allocator.3"** %71, align 8
  %72 = load %"class.std::vector.6"*, %"class.std::vector.6"** %68, align 8
  %73 = load i64, i64* %69, align 8
  %74 = load %"class.std::vector.6"*, %"class.std::vector.6"** %70, align 8
  %75 = call %"class.std::vector.6"* @_ZSt20uninitialized_fill_nIPSt6vectorIcSaIcEEmS2_ET_S4_T0_RKT1_(%"class.std::vector.6"* %72, i64 %73, %"class.std::vector.6"* dereferenceable(24) %74)
  store i32 -393048004, i32* %18
  br label %76

; <label>:76:                                     ; preds = %67, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.3"* @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.3"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.403
  %6 = load i32, i32* @y.404
  %7 = add i32 %5, -1198251226
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1198251226
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1987047486, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1987047486, label %19
    i32 -734681448, label %39
    i32 617847166, label %59
    i32 1442357934, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -734681448, i32 1442357934
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %40, align 8
  %41 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %42 to %"class.std::allocator.3"*
  store %"class.std::allocator.3"* %43, %"class.std::allocator.3"** %2
  %44 = load i32, i32* @x.403
  %45 = load i32, i32* @y.404
  %46 = add i32 %44, 1451491898
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 1451491898
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 617847166, i32 1442357934
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"class.std::allocator.3"*, %"class.std::allocator.3"** %2
  ret %"class.std::allocator.3"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %62, align 8
  %63 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %63, i32 0, i32 0
  %65 = bitcast %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %64 to %"class.std::allocator.3"*
  store i32 -734681448, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.6"* @_ZSt20uninitialized_fill_nIPSt6vectorIcSaIcEEmS2_ET_S4_T0_RKT1_(%"class.std::vector.6"*, i64, %"class.std::vector.6"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector.6"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.6"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.6"* %2, %"class.std::vector.6"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"class.std::vector.6"*, %"class.std::vector.6"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %"class.std::vector.6"*, %"class.std::vector.6"** %6, align 8
  %11 = call %"class.std::vector.6"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIcSaIcEEmS4_EET_S6_T0_RKT1_(%"class.std::vector.6"* %8, i64 %9, %"class.std::vector.6"* dereferenceable(24) %10)
  ret %"class.std::vector.6"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.6"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIcSaIcEEmS4_EET_S6_T0_RKT1_(%"class.std::vector.6"*, i64, %"class.std::vector.6"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.407
  %5 = load i32, i32* @y.408
  %6 = sub i32 %4, -422730546
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -422730546
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 true, true
  %17 = and i1 %14, true
  %18 = and i1 %12, %16
  %19 = and i1 %15, true
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 true, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %412

; <label>:30:                                     ; preds = %3, %412
  %31 = alloca %"class.std::vector.6"*, align 8
  %32 = alloca i64, align 8
  %33 = alloca %"class.std::vector.6"*, align 8
  %34 = alloca %"class.std::vector.6"*, align 8
  %35 = alloca i8*
  %36 = alloca i32
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %31, align 8
  store i64 %1, i64* %32, align 8
  store %"class.std::vector.6"* %2, %"class.std::vector.6"** %33, align 8
  %37 = load %"class.std::vector.6"*, %"class.std::vector.6"** %31, align 8
  store %"class.std::vector.6"* %37, %"class.std::vector.6"** %34, align 8
  %38 = load i32, i32* @x.407
  %39 = load i32, i32* @y.408
  %40 = sub i32 %38, -356971427
  %41 = sub i32 %40, 1
  %42 = add i32 %41, -356971427
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  br i1 %62, label %64, label %412

; <label>:64:                                     ; preds = %30
  br label %65

; <label>:65:                                     ; preds = %168, %64
  %66 = load i32, i32* @x.407
  %67 = load i32, i32* @y.408
  %68 = add i32 %66, -2112317013
  %69 = sub i32 %68, 1
  %70 = sub i32 %69, -2112317013
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = and i1 %74, %75
  %77 = xor i1 %74, %75
  %78 = or i1 %76, %77
  %79 = or i1 %74, %75
  br i1 %78, label %80, label %420

; <label>:80:                                     ; preds = %65, %420
  %81 = load i64, i64* %32, align 8
  %82 = icmp ugt i64 %81, 0
  %83 = load i32, i32* @x.407
  %84 = load i32, i32* @y.408
  %85 = sub i32 0, 1
  %86 = add i32 %83, %85
  %87 = sub i32 %83, 1
  %88 = mul i32 %83, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %84, 10
  %92 = xor i1 %90, true
  %93 = xor i1 %91, true
  %94 = xor i1 true, true
  %95 = and i1 %92, true
  %96 = and i1 %90, %94
  %97 = and i1 %93, true
  %98 = and i1 %91, %94
  %99 = or i1 %95, %96
  %100 = or i1 %97, %98
  %101 = xor i1 %99, %100
  %102 = or i1 %92, %93
  %103 = xor i1 %102, true
  %104 = or i1 true, %94
  %105 = and i1 %103, %104
  %106 = or i1 %101, %105
  %107 = or i1 %90, %91
  br i1 %106, label %108, label %420

; <label>:108:                                    ; preds = %80
  br i1 %82, label %109, label %228

; <label>:109:                                    ; preds = %108
  %110 = load %"class.std::vector.6"*, %"class.std::vector.6"** %34, align 8
  %111 = call %"class.std::vector.6"* @_ZSt11__addressofISt6vectorIcSaIcEEEPT_RS3_(%"class.std::vector.6"* dereferenceable(24) %110) #3
  %112 = load %"class.std::vector.6"*, %"class.std::vector.6"** %33, align 8
  invoke void @_ZSt10_ConstructISt6vectorIcSaIcEEJRKS2_EEvPT_DpOT0_(%"class.std::vector.6"* %111, %"class.std::vector.6"* dereferenceable(24) %112)
          to label %113 unwind label %176

; <label>:113:                                    ; preds = %109
  %114 = load i32, i32* @x.407
  %115 = load i32, i32* @y.408
  %116 = sub i32 %114, 657782726
  %117 = sub i32 %116, 1
  %118 = add i32 %117, 657782726
  %119 = sub i32 %114, 1
  %120 = mul i32 %114, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %115, 10
  %124 = xor i1 %122, true
  %125 = xor i1 %123, true
  %126 = xor i1 false, true
  %127 = and i1 %124, false
  %128 = and i1 %122, %126
  %129 = and i1 %125, false
  %130 = and i1 %123, %126
  %131 = or i1 %127, %128
  %132 = or i1 %129, %130
  %133 = xor i1 %131, %132
  %134 = or i1 %124, %125
  %135 = xor i1 %134, true
  %136 = or i1 false, %126
  %137 = and i1 %135, %136
  %138 = or i1 %133, %137
  %139 = or i1 %122, %123
  br i1 %138, label %140, label %423

; <label>:140:                                    ; preds = %113, %423
  %141 = load i32, i32* @x.407
  %142 = load i32, i32* @y.408
  %143 = sub i32 %141, -176499836
  %144 = sub i32 %143, 1
  %145 = add i32 %144, -176499836
  %146 = sub i32 %141, 1
  %147 = mul i32 %141, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %142, 10
  %151 = xor i1 %149, true
  %152 = xor i1 %150, true
  %153 = xor i1 false, true
  %154 = and i1 %151, false
  %155 = and i1 %149, %153
  %156 = and i1 %152, false
  %157 = and i1 %150, %153
  %158 = or i1 %154, %155
  %159 = or i1 %156, %157
  %160 = xor i1 %158, %159
  %161 = or i1 %151, %152
  %162 = xor i1 %161, true
  %163 = or i1 false, %153
  %164 = and i1 %162, %163
  %165 = or i1 %160, %164
  %166 = or i1 %149, %150
  br i1 %165, label %167, label %423

; <label>:167:                                    ; preds = %140
  br label %168

; <label>:168:                                    ; preds = %167
  %169 = load i64, i64* %32, align 8
  %170 = sub i64 %169, -7509864325056469028
  %171 = add i64 %170, -1
  %172 = add i64 %171, -7509864325056469028
  %173 = add i64 %169, -1
  store i64 %172, i64* %32, align 8
  %174 = load %"class.std::vector.6"*, %"class.std::vector.6"** %34, align 8
  %175 = getelementptr inbounds %"class.std::vector.6", %"class.std::vector.6"* %174, i32 1
  store %"class.std::vector.6"* %175, %"class.std::vector.6"** %34, align 8
  br label %65

; <label>:176:                                    ; preds = %109
  %177 = load i32, i32* @x.407
  %178 = load i32, i32* @y.408
  %179 = add i32 %177, 663067809
  %180 = sub i32 %179, 1
  %181 = sub i32 %180, 663067809
  %182 = sub i32 %177, 1
  %183 = mul i32 %177, %181
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %178, 10
  %187 = xor i1 %185, true
  %188 = xor i1 %186, true
  %189 = xor i1 false, true
  %190 = and i1 %187, false
  %191 = and i1 %185, %189
  %192 = and i1 %188, false
  %193 = and i1 %186, %189
  %194 = or i1 %190, %191
  %195 = or i1 %192, %193
  %196 = xor i1 %194, %195
  %197 = or i1 %187, %188
  %198 = xor i1 %197, true
  %199 = or i1 false, %189
  %200 = and i1 %198, %199
  %201 = or i1 %196, %200
  %202 = or i1 %185, %186
  br i1 %201, label %203, label %424

; <label>:203:                                    ; preds = %176, %424
  %204 = landingpad { i8*, i32 }
          catch i8* null
  %205 = extractvalue { i8*, i32 } %204, 0
  store i8* %205, i8** %35, align 8
  %206 = extractvalue { i8*, i32 } %204, 1
  store i32 %206, i32* %36, align 4
  %207 = load i32, i32* @x.407
  %208 = load i32, i32* @y.408
  %209 = sub i32 %207, -475035910
  %210 = sub i32 %209, 1
  %211 = add i32 %210, -475035910
  %212 = sub i32 %207, 1
  %213 = mul i32 %207, %211
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %208, 10
  %217 = and i1 %215, %216
  %218 = xor i1 %215, %216
  %219 = or i1 %217, %218
  %220 = or i1 %215, %216
  br i1 %219, label %221, label %424

; <label>:221:                                    ; preds = %203
  br label %222

; <label>:222:                                    ; preds = %221
  %223 = load i8*, i8** %35, align 8
  %224 = call i8* @__cxa_begin_catch(i8* %223) #3
  %225 = load %"class.std::vector.6"*, %"class.std::vector.6"** %31, align 8
  %226 = load %"class.std::vector.6"*, %"class.std::vector.6"** %34, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorIcSaIcEEEvT_S4_(%"class.std::vector.6"* %225, %"class.std::vector.6"* %226)
          to label %227 unwind label %230

; <label>:227:                                    ; preds = %222
  invoke void @__cxa_rethrow() #15
          to label %411 unwind label %230

; <label>:228:                                    ; preds = %108
  %229 = load %"class.std::vector.6"*, %"class.std::vector.6"** %34, align 8
  ret %"class.std::vector.6"* %229

; <label>:230:                                    ; preds = %227, %222
  %231 = load i32, i32* @x.407
  %232 = load i32, i32* @y.408
  %233 = sub i32 0, 1
  %234 = add i32 %231, %233
  %235 = sub i32 %231, 1
  %236 = mul i32 %231, %234
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %232, 10
  %240 = and i1 %238, %239
  %241 = xor i1 %238, %239
  %242 = or i1 %240, %241
  %243 = or i1 %238, %239
  br i1 %242, label %244, label %428

; <label>:244:                                    ; preds = %230, %428
  %245 = landingpad { i8*, i32 }
          cleanup
  %246 = extractvalue { i8*, i32 } %245, 0
  store i8* %246, i8** %35, align 8
  %247 = extractvalue { i8*, i32 } %245, 1
  store i32 %247, i32* %36, align 4
  %248 = load i32, i32* @x.407
  %249 = load i32, i32* @y.408
  %250 = add i32 %248, 2075996286
  %251 = sub i32 %250, 1
  %252 = sub i32 %251, 2075996286
  %253 = sub i32 %248, 1
  %254 = mul i32 %248, %252
  %255 = urem i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %249, 10
  %258 = and i1 %256, %257
  %259 = xor i1 %256, %257
  %260 = or i1 %258, %259
  %261 = or i1 %256, %257
  br i1 %260, label %262, label %428

; <label>:262:                                    ; preds = %244
  invoke void @__cxa_end_catch()
          to label %263 unwind label %366

; <label>:263:                                    ; preds = %262
  %264 = load i32, i32* @x.407
  %265 = load i32, i32* @y.408
  %266 = sub i32 %264, 670714220
  %267 = sub i32 %266, 1
  %268 = add i32 %267, 670714220
  %269 = sub i32 %264, 1
  %270 = mul i32 %264, %268
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %265, 10
  %274 = and i1 %272, %273
  %275 = xor i1 %272, %273
  %276 = or i1 %274, %275
  %277 = or i1 %272, %273
  br i1 %276, label %278, label %432

; <label>:278:                                    ; preds = %263, %432
  %279 = load i32, i32* @x.407
  %280 = load i32, i32* @y.408
  %281 = sub i32 %279, 484492859
  %282 = sub i32 %281, 1
  %283 = add i32 %282, 484492859
  %284 = sub i32 %279, 1
  %285 = mul i32 %279, %283
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %280, 10
  %289 = xor i1 %287, true
  %290 = xor i1 %288, true
  %291 = xor i1 true, true
  %292 = and i1 %289, true
  %293 = and i1 %287, %291
  %294 = and i1 %290, true
  %295 = and i1 %288, %291
  %296 = or i1 %292, %293
  %297 = or i1 %294, %295
  %298 = xor i1 %296, %297
  %299 = or i1 %289, %290
  %300 = xor i1 %299, true
  %301 = or i1 true, %291
  %302 = and i1 %300, %301
  %303 = or i1 %298, %302
  %304 = or i1 %287, %288
  br i1 %303, label %305, label %432

; <label>:305:                                    ; preds = %278
  br label %307
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:307:                                    ; preds = %305
  %308 = load i32, i32* @x.407
  %309 = load i32, i32* @y.408
  %310 = sub i32 %308, -1523501896
  %311 = sub i32 %310, 1
  %312 = add i32 %311, -1523501896
  %313 = sub i32 %308, 1
  %314 = mul i32 %308, %312
  %315 = urem i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %309, 10
  %318 = xor i1 %316, true
  %319 = xor i1 %317, true
  %320 = xor i1 false, true
  %321 = and i1 %318, false
  %322 = and i1 %316, %320
  %323 = and i1 %319, false
  %324 = and i1 %317, %320
  %325 = or i1 %321, %322
  %326 = or i1 %323, %324
  %327 = xor i1 %325, %326
  %328 = or i1 %318, %319
  %329 = xor i1 %328, true
  %330 = or i1 false, %320
  %331 = and i1 %329, %330
  %332 = or i1 %327, %331
  %333 = or i1 %316, %317
  br i1 %332, label %334, label %433

; <label>:334:                                    ; preds = %307, %433
  %335 = load i8*, i8** %35, align 8
  %336 = load i32, i32* %36, align 4
  %337 = insertvalue { i8*, i32 } undef, i8* %335, 0
  %338 = insertvalue { i8*, i32 } %337, i32 %336, 1
  %339 = load i32, i32* @x.407
  %340 = load i32, i32* @y.408
  %341 = add i32 %339, -620217819
  %342 = sub i32 %341, 1
  %343 = sub i32 %342, -620217819
  %344 = sub i32 %339, 1
  %345 = mul i32 %339, %343
  %346 = urem i32 %345, 2
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %340, 10
  %349 = xor i1 %347, true
  %350 = xor i1 %348, true
  %351 = xor i1 false, true
  %352 = and i1 %349, false
  %353 = and i1 %347, %351
  %354 = and i1 %350, false
  %355 = and i1 %348, %351
  %356 = or i1 %352, %353
  %357 = or i1 %354, %355
  %358 = xor i1 %356, %357
  %359 = or i1 %349, %350
  %360 = xor i1 %359, true
  %361 = or i1 false, %351
  %362 = and i1 %360, %361
  %363 = or i1 %358, %362
  %364 = or i1 %347, %348
  br i1 %363, label %365, label %433

; <label>:365:                                    ; preds = %334
  resume { i8*, i32 } %338

; <label>:366:                                    ; preds = %262
  %367 = load i32, i32* @x.407
  %368 = load i32, i32* @y.408
  %369 = add i32 %367, -2020209969
  %370 = sub i32 %369, 1
  %371 = sub i32 %370, -2020209969
  %372 = sub i32 %367, 1
  %373 = mul i32 %367, %371
  %374 = urem i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %368, 10
  %377 = xor i1 %375, true
  %378 = xor i1 %376, true
  %379 = xor i1 false, true
  %380 = and i1 %377, false
  %381 = and i1 %375, %379
  %382 = and i1 %378, false
  %383 = and i1 %376, %379
  %384 = or i1 %380, %381
  %385 = or i1 %382, %383
  %386 = xor i1 %384, %385
  %387 = or i1 %377, %378
  %388 = xor i1 %387, true
  %389 = or i1 false, %379
  %390 = and i1 %388, %389
  %391 = or i1 %386, %390
  %392 = or i1 %375, %376
  br i1 %391, label %393, label %438

; <label>:393:                                    ; preds = %366, %438
  %394 = landingpad { i8*, i32 }
          catch i8* null
  %395 = extractvalue { i8*, i32 } %394, 0
  call void @__clang_call_terminate(i8* %395) #13
  %396 = load i32, i32* @x.407
  %397 = load i32, i32* @y.408
  %398 = add i32 %396, 558082800
  %399 = sub i32 %398, 1
  %400 = sub i32 %399, 558082800
  %401 = sub i32 %396, 1
  %402 = mul i32 %396, %400
  %403 = urem i32 %402, 2
  %404 = icmp eq i32 %403, 0
  %405 = icmp slt i32 %397, 10
  %406 = and i1 %404, %405
  %407 = xor i1 %404, %405
  %408 = or i1 %406, %407
  %409 = or i1 %404, %405
  br i1 %408, label %410, label %438

; <label>:410:                                    ; preds = %393
  unreachable

; <label>:411:                                    ; preds = %227
  unreachable

; <label>:412:                                    ; preds = %30, %3
  %413 = alloca %"class.std::vector.6"*, align 8
  %414 = alloca i64, align 8
  %415 = alloca %"class.std::vector.6"*, align 8
  %416 = alloca %"class.std::vector.6"*, align 8
  %417 = alloca i8*
  %418 = alloca i32
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %413, align 8
  store i64 %1, i64* %414, align 8
  store %"class.std::vector.6"* %2, %"class.std::vector.6"** %415, align 8
  %419 = load %"class.std::vector.6"*, %"class.std::vector.6"** %413, align 8
  store %"class.std::vector.6"* %419, %"class.std::vector.6"** %416, align 8
  br label %30

; <label>:420:                                    ; preds = %80, %65
  %421 = load i64, i64* %32, align 8
  %422 = icmp ugt i64 %421, 0
  br label %80

; <label>:423:                                    ; preds = %140, %113
  br label %140

; <label>:424:                                    ; preds = %203, %176
  %425 = landingpad { i8*, i32 }
          catch i8* null
  %426 = extractvalue { i8*, i32 } %425, 0
  store i8* %426, i8** %35, align 8
  %427 = extractvalue { i8*, i32 } %425, 1
  store i32 %427, i32* %36, align 4
  br label %203

; <label>:428:                                    ; preds = %244, %230
  %429 = landingpad { i8*, i32 }
          cleanup
  %430 = extractvalue { i8*, i32 } %429, 0
  store i8* %430, i8** %35, align 8
  %431 = extractvalue { i8*, i32 } %429, 1
  store i32 %431, i32* %36, align 4
  br label %244

; <label>:432:                                    ; preds = %278, %263
  br label %278

; <label>:433:                                    ; preds = %334, %307
  %434 = load i8*, i8** %35, align 8
  %435 = load i32, i32* %36, align 4
  %436 = insertvalue { i8*, i32 } undef, i8* %434, 0
  %437 = insertvalue { i8*, i32 } %436, i32 %435, 1
  br label %334

; <label>:438:                                    ; preds = %393, %366
  %439 = landingpad { i8*, i32 }
          catch i8* null
  %440 = extractvalue { i8*, i32 } %439, 0
  call void @__clang_call_terminate(i8* %440) #13
  br label %393
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIcSaIcEEJRKS2_EEvPT_DpOT0_(%"class.std::vector.6"*, %"class.std::vector.6"* dereferenceable(24)) #0 comdat {
  %3 = alloca %"class.std::vector.6"*, align 8
  %4 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %3, align 8
  store %"class.std::vector.6"* %1, %"class.std::vector.6"** %4, align 8
  %5 = load %"class.std::vector.6"*, %"class.std::vector.6"** %3, align 8
  %6 = bitcast %"class.std::vector.6"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::vector.6"*
  %8 = load %"class.std::vector.6"*, %"class.std::vector.6"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector.6"* @_ZSt7forwardIRKSt6vectorIcSaIcEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector.6"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorIcSaIcEEC2ERKS1_(%"class.std::vector.6"* %7, %"class.std::vector.6"* dereferenceable(24) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.6"* @_ZSt11__addressofISt6vectorIcSaIcEEEPT_RS3_(%"class.std::vector.6"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %2, align 8
  %3 = load %"class.std::vector.6"*, %"class.std::vector.6"** %2, align 8
  %4 = bitcast %"class.std::vector.6"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector.6"*
  ret %"class.std::vector.6"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIcSaIcEEEvT_S4_(%"class.std::vector.6"*, %"class.std::vector.6"*) #0 comdat {
  %3 = alloca %"class.std::vector.6"*, align 8
  %4 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %3, align 8
  store %"class.std::vector.6"* %1, %"class.std::vector.6"** %4, align 8
  %5 = load %"class.std::vector.6"*, %"class.std::vector.6"** %3, align 8
  %6 = load %"class.std::vector.6"*, %"class.std::vector.6"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIcSaIcEEEEvT_S6_(%"class.std::vector.6"* %5, %"class.std::vector.6"* %6)
  ret void
}

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #13

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.6"* @_ZSt7forwardIRKSt6vectorIcSaIcEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector.6"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %2, align 8
  %3 = load %"class.std::vector.6"*, %"class.std::vector.6"** %2, align 8
  ret %"class.std::vector.6"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIcSaIcEEC2ERKS1_(%"class.std::vector.6"*, %"class.std::vector.6"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.6"*, align 8
  %4 = alloca %"class.std::vector.6"*, align 8
  %5 = alloca %"class.std::allocator.8", align 1
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %3, align 8
  store %"class.std::vector.6"* %1, %"class.std::vector.6"** %4, align 8
  %10 = load %"class.std::vector.6"*, %"class.std::vector.6"** %3, align 8
  %11 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %12 = load %"class.std::vector.6"*, %"class.std::vector.6"** %4, align 8
  %13 = call i64 @_ZNKSt6vectorIcSaIcEE4sizeEv(%"class.std::vector.6"* %12) #3
  %14 = load %"class.std::vector.6"*, %"class.std::vector.6"** %4, align 8
  %15 = bitcast %"class.std::vector.6"* %14 to %"struct.std::_Vector_base.7"*
  %16 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNKSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %15) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIcEE17_S_select_on_copyERKS1_(%"class.std::allocator.8"* sret %5, %"class.std::allocator.8"* dereferenceable(1) %16)
  invoke void @_ZNSt12_Vector_baseIcSaIcEEC2EmRKS0_(%"struct.std::_Vector_base.7"* %11, i64 %13, %"class.std::allocator.8"* dereferenceable(1) %5)
          to label %17 unwind label %68

; <label>:17:                                     ; preds = %2
  call void @_ZNSaIcED1Ev(%"class.std::allocator.8"* %5) #3
  %18 = load %"class.std::vector.6"*, %"class.std::vector.6"** %4, align 8
  %19 = call i8* @_ZNKSt6vectorIcSaIcEE5beginEv(%"class.std::vector.6"* %18) #3
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %8, i32 0, i32 0
  store i8* %19, i8** %20, align 8
  %21 = load %"class.std::vector.6"*, %"class.std::vector.6"** %4, align 8
  %22 = call i8* @_ZNKSt6vectorIcSaIcEE3endEv(%"class.std::vector.6"* %21) #3
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %9, i32 0, i32 0
  store i8* %22, i8** %23, align 8
  %24 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %25, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %29 = call dereferenceable(1) %"class.std::allocator.8"* @_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"* %28) #3
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %8, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %9, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = invoke i8* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEPccET0_T_SA_S9_RSaIT1_E(i8* %31, i8* %33, i8* %27, %"class.std::allocator.8"* dereferenceable(1) %29)
          to label %35 unwind label %72

; <label>:35:                                     ; preds = %17
  %36 = load i32, i32* @x.417
  %37 = load i32, i32* @y.418
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  br i1 %47, label %49, label %124

; <label>:49:                                     ; preds = %35, %124
  %50 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %51 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %50, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %51, i32 0, i32 1
  store i8* %34, i8** %52, align 8
  %53 = load i32, i32* @x.417
  %54 = load i32, i32* @y.418
  %55 = add i32 %53, 685369323
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, 685369323
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  br i1 %65, label %67, label %124

; <label>:67:                                     ; preds = %49
  ret void

; <label>:68:                                     ; preds = %2
  %69 = landingpad { i8*, i32 }
          cleanup
  %70 = extractvalue { i8*, i32 } %69, 0
  store i8* %70, i8** %6, align 8
  %71 = extractvalue { i8*, i32 } %69, 1
  store i32 %71, i32* %7, align 4
  call void @_ZNSaIcED1Ev(%"class.std::allocator.8"* %5) #3
  br label %77

; <label>:72:                                     ; preds = %17
  %73 = landingpad { i8*, i32 }
          cleanup
  %74 = extractvalue { i8*, i32 } %73, 0
  store i8* %74, i8** %6, align 8
  %75 = extractvalue { i8*, i32 } %73, 1
  store i32 %75, i32* %7, align 4
  %76 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  call void @_ZNSt12_Vector_baseIcSaIcEED2Ev(%"struct.std::_Vector_base.7"* %76) #3
  br label %77

; <label>:77:                                     ; preds = %72, %68
  %78 = load i32, i32* @x.417
  %79 = load i32, i32* @y.418
  %80 = sub i32 %78, 113978798
  %81 = sub i32 %80, 1
  %82 = add i32 %81, 113978798
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = and i1 %86, %87
  %89 = xor i1 %86, %87
  %90 = or i1 %88, %89
  %91 = or i1 %86, %87
  br i1 %90, label %92, label %128

; <label>:92:                                     ; preds = %77, %128
  %93 = load i8*, i8** %6, align 8
  %94 = load i32, i32* %7, align 4
  %95 = insertvalue { i8*, i32 } undef, i8* %93, 0
  %96 = insertvalue { i8*, i32 } %95, i32 %94, 1
  %97 = load i32, i32* @x.417
  %98 = load i32, i32* @y.418
  %99 = sub i32 %97, 486071823
  %100 = sub i32 %99, 1
  %101 = add i32 %100, 486071823
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = xor i1 %105, true
  %108 = xor i1 %106, true
  %109 = xor i1 true, true
  %110 = and i1 %107, true
  %111 = and i1 %105, %109
  %112 = and i1 %108, true
  %113 = and i1 %106, %109
  %114 = or i1 %110, %111
  %115 = or i1 %112, %113
  %116 = xor i1 %114, %115
  %117 = or i1 %107, %108
  %118 = xor i1 %117, true
  %119 = or i1 true, %109
  %120 = and i1 %118, %119
  %121 = or i1 %116, %120
  %122 = or i1 %105, %106
  br i1 %121, label %123, label %128

; <label>:123:                                    ; preds = %92
  resume { i8*, i32 } %96

; <label>:124:                                    ; preds = %49, %35
  %125 = bitcast %"class.std::vector.6"* %10 to %"struct.std::_Vector_base.7"*
  %126 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %125, i32 0, i32 0
  %127 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %126, i32 0, i32 1
  store i8* %34, i8** %127, align 8
  br label %49

; <label>:128:                                    ; preds = %92, %77
  %129 = load i8*, i8** %6, align 8
  %130 = load i32, i32* %7, align 4
  %131 = insertvalue { i8*, i32 } undef, i8* %129, 0
  %132 = insertvalue { i8*, i32 } %131, i32 %130, 1
  br label %92
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIcSaIcEE4sizeEv(%"class.std::vector.6"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %2, align 8
  %3 = load %"class.std::vector.6"*, %"class.std::vector.6"** %2, align 8
  %4 = bitcast %"class.std::vector.6"* %3 to %"struct.std::_Vector_base.7"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast %"class.std::vector.6"* %3 to %"struct.std::_Vector_base.7"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = ptrtoint i8* %7 to i64
  %13 = ptrtoint i8* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  ret i64 %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIcEE17_S_select_on_copyERKS1_(%"class.std::allocator.8"* noalias sret, %"class.std::allocator.8"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.8"* %1, %"class.std::allocator.8"** %3, align 8
  %4 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %3, align 8
  call void @_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator.8"* sret %0, %"class.std::allocator.8"* dereferenceable(1) %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.8"* @_ZNKSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.7"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.7"*, align 8
  store %"struct.std::_Vector_base.7"* %0, %"struct.std::_Vector_base.7"** %2, align 8
  %3 = load %"struct.std::_Vector_base.7"*, %"struct.std::_Vector_base.7"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %4 to %"class.std::allocator.8"*
  ret %"class.std::allocator.8"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEPccET0_T_SA_S9_RSaIT1_E(i8*, i8*, i8*, %"class.std::allocator.8"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %7 = alloca i8*, align 8
  %8 = alloca %"class.std::allocator.8"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %5, i32 0, i32 0
  store i8* %0, i8** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %6, i32 0, i32 0
  store i8* %1, i8** %12, align 8
  store i8* %2, i8** %7, align 8
  store %"class.std::allocator.8"* %3, %"class.std::allocator.8"** %8, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.42"* %9 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.42"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.42"* %10 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.42"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load i8*, i8** %7, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %9, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %10, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = call i8* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEPcET0_T_SA_S9_(i8* %19, i8* %21, i8* %17)
  ret i8* %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNKSt6vectorIcSaIcEE5beginEv(%"class.std::vector.6"*) #4 comdat align 2 {
  %2 = alloca i8*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.427
  %6 = load i32, i32* @y.428
  %7 = add i32 %5, 669275969
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 669275969
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1698971673, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %89
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1698971673, label %19
    i32 -1404157247, label %39
    i32 1980366687, label %76
    i32 -1594300842, label %78
  ]

; <label>:18:                                     ; preds = %16
  br label %89

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1404157247, i32 -1594300842
  store i32 %38, i32* %15
  br label %89

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %41 = alloca %"class.std::vector.6"*, align 8
  %42 = alloca i8*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %41, align 8
  %43 = load %"class.std::vector.6"*, %"class.std::vector.6"** %41, align 8
  %44 = bitcast %"class.std::vector.6"* %43 to %"struct.std::_Vector_base.7"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %45, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  store i8* %47, i8** %42, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.42"* %40, i8** dereferenceable(8) %42) #3
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %40, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  store i8* %49, i8** %2
  %50 = load i32, i32* @x.427
  %51 = load i32, i32* @y.428
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 1980366687, i32 -1594300842
  store i32 %75, i32* %15
  br label %89

; <label>:76:                                     ; preds = %16
  %77 = load volatile i8*, i8** %2
  ret i8* %77

; <label>:78:                                     ; preds = %16
  %79 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %80 = alloca %"class.std::vector.6"*, align 8
  %81 = alloca i8*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %80, align 8
  %82 = load %"class.std::vector.6"*, %"class.std::vector.6"** %80, align 8
  %83 = bitcast %"class.std::vector.6"* %82 to %"struct.std::_Vector_base.7"*
  %84 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %83, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %84, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  store i8* %86, i8** %81, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.42"* %79, i8** dereferenceable(8) %81) #3
  %87 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %79, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  store i32 -1404157247, i32* %15
  br label %89

; <label>:89:                                     ; preds = %78, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNKSt6vectorIcSaIcEE3endEv(%"class.std::vector.6"*) #4 comdat align 2 {
  %2 = alloca i8*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.429
  %6 = load i32, i32* @y.430
  %7 = sub i32 %5, 506896237
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 506896237
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1389182962, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1389182962, label %19
    i32 174717932, label %27
    i32 586620929, label %52
    i32 -1723802811, label %54
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 174717932, i32 -1723802811
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %29 = alloca %"class.std::vector.6"*, align 8
  %30 = alloca i8*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %29, align 8
  %31 = load %"class.std::vector.6"*, %"class.std::vector.6"** %29, align 8
  %32 = bitcast %"class.std::vector.6"* %31 to %"struct.std::_Vector_base.7"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %33, i32 0, i32 1
  %35 = load i8*, i8** %34, align 8
  store i8* %35, i8** %30, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.42"* %28, i8** dereferenceable(8) %30) #3
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %28, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  store i8* %37, i8** %2
  %38 = load i32, i32* @x.429
  %39 = load i32, i32* @y.430
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 586620929, i32 -1723802811
  store i32 %51, i32* %15
  br label %65

; <label>:52:                                     ; preds = %16
  %53 = load volatile i8*, i8** %2
  ret i8* %53

; <label>:54:                                     ; preds = %16
  %55 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %56 = alloca %"class.std::vector.6"*, align 8
  %57 = alloca i8*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %56, align 8
  %58 = load %"class.std::vector.6"*, %"class.std::vector.6"** %56, align 8
  %59 = bitcast %"class.std::vector.6"* %58 to %"struct.std::_Vector_base.7"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base.7", %"struct.std::_Vector_base.7"* %59, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %60, i32 0, i32 1
  %62 = load i8*, i8** %61, align 8
  store i8* %62, i8** %57, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.42"* %55, i8** dereferenceable(8) %57) #3
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %55, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  store i32 174717932, i32* %15
  br label %65

; <label>:65:                                     ; preds = %54, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator.8"* noalias sret, %"class.std::allocator.8"* dereferenceable(1)) #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.8"*, align 8
  store %"class.std::allocator.8"* %1, %"class.std::allocator.8"** %3, align 8
  %4 = load %"class.std::allocator.8"*, %"class.std::allocator.8"** %3, align 8
  call void @_ZNSaIcEC1ERKS_(%"class.std::allocator.8"* %0, %"class.std::allocator.8"* dereferenceable(1) %4) #3
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSaIcEC1ERKS_(%"class.std::allocator.8"*, %"class.std::allocator.8"* dereferenceable(1)) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEPcET0_T_SA_S9_(i8*, i8*, i8*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %4, i32 0, i32 0
  store i8* %0, i8** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %5, i32 0, i32 0
  store i8* %1, i8** %11, align 8
  store i8* %2, i8** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.42"* %8 to i8*
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.42"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.42"* %9 to i8*
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.42"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load i8*, i8** %6, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %8, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %9, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = call i8* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEPcEET0_T_SC_SB_(i8* %18, i8* %20, i8* %16)
  ret i8* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEPcEET0_T_SC_SB_(i8*, i8*, i8*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %6 = alloca i8*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %4, i32 0, i32 0
  store i8* %0, i8** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %5, i32 0, i32 0
  store i8* %1, i8** %10, align 8
  store i8* %2, i8** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.42"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.42"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.42"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.42"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load i8*, i8** %6, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %7, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %8, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = call i8* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEPcET0_T_SA_S9_(i8* %17, i8* %19, i8* %15)
  ret i8* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEPcET0_T_SA_S9_(i8*, i8*, i8*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %6 = alloca i8*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %4, i32 0, i32 0
  store i8* %0, i8** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %5, i32 0, i32 0
  store i8* %1, i8** %12, align 8
  store i8* %2, i8** %6, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.42"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.42"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %8, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = call i8* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i8* %16)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %7, i32 0, i32 0
  store i8* %17, i8** %18, align 8
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator.42"* %10 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.42"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %10, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = call i8* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i8* %22)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %9, i32 0, i32 0
  store i8* %23, i8** %24, align 8
  %25 = load i8*, i8** %6, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %7, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %9, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = call i8* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEPcET1_T0_SA_S9_(i8* %27, i8* %29, i8* %25)
  ret i8* %30
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEPcET1_T0_SA_S9_(i8*, i8*, i8*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %6 = alloca i8*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %4, i32 0, i32 0
  store i8* %0, i8** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %5, i32 0, i32 0
  store i8* %1, i8** %10, align 8
  store i8* %2, i8** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.42"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.42"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %7, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = call i8* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i8* %14)
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.42"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.42"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %8, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = call i8* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i8* %19)
  %21 = load i8*, i8** %6, align 8
  %22 = call i8* @_ZSt12__niter_baseIPcENSt11_Niter_baseIT_E13iterator_typeES2_(i8* %21)
  %23 = call i8* @_ZSt13__copy_move_aILb0EPKcPcET1_T0_S4_S3_(i8* %15, i8* %20, i8* %22)
  ret i8* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i8*) #0 comdat {
  %2 = alloca i8*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.441
  %6 = load i32, i32* @y.442
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -182848609, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %92
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -182848609, label %18
    i32 461797535, label %38
    i32 333986525, label %77
    i32 1900696065, label %79
  ]

; <label>:17:                                     ; preds = %15
  br label %92

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 461797535, i32 1900696065
  store i32 %37, i32* %14
  br label %92

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %40, i32 0, i32 0
  store i8* %0, i8** %42, align 8
  %43 = bitcast %"class.__gnu_cxx::__normal_iterator.42"* %41 to i8*
  %44 = bitcast %"class.__gnu_cxx::__normal_iterator.42"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 8, i32 8, i1 false)
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %41, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = call i8* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEELb0EE7_S_baseES7_(i8* %46)
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %39, i32 0, i32 0
  store i8* %47, i8** %48, align 8
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %39, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  store i8* %50, i8** %2
  %51 = load i32, i32* @x.441
  %52 = load i32, i32* @y.442
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 333986525, i32 1900696065
  store i32 %76, i32* %14
  br label %92

; <label>:77:                                     ; preds = %15
  %78 = load volatile i8*, i8** %2
  ret i8* %78

; <label>:79:                                     ; preds = %15
  %80 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %81 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %82 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %83 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %81, i32 0, i32 0
  store i8* %0, i8** %83, align 8
  %84 = bitcast %"class.__gnu_cxx::__normal_iterator.42"* %82 to i8*
  %85 = bitcast %"class.__gnu_cxx::__normal_iterator.42"* %81 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %84, i8* %85, i64 8, i32 8, i1 false)
  %86 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %82, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  %88 = call i8* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEELb0EE7_S_baseES7_(i8* %87)
  %89 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %80, i32 0, i32 0
  store i8* %88, i8** %89, align 8
  %90 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %80, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  store i32 461797535, i32* %14
  br label %92

; <label>:92:                                     ; preds = %79, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZSt13__copy_move_aILb0EPKcPcET1_T0_S4_S3_(i8*, i8*, i8*) #0 comdat {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8, align 1
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i8*, i8** %4, align 8
  %9 = load i8*, i8** %5, align 8
  %10 = load i8*, i8** %6, align 8
  %11 = call i8* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIcEEPT_PKS3_S6_S4_(i8* %8, i8* %9, i8* %10)
  ret i8* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i8*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %2, i32 0, i32 0
  store i8* %0, i8** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.42"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.42"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %3, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = call i8* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEELb1EE7_S_baseES7_(i8* %8)
  ret i8* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIcEEPT_PKS3_S6_S4_(i8*, i8*, i8*) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i8**
  %7 = alloca i8**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.447
  %11 = load i32, i32* @y.448
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 -937441206, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %108
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -937441206, label %23
    i32 865552587, label %31
    i32 1463532883, label %77
    i32 646107519, label %80
    i32 825345635, label %88
    i32 -1683051851, label %94
  ]

; <label>:22:                                     ; preds = %20
  br label %108

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 865552587, i32 -1683051851
  store i32 %30, i32* %19
  br label %108

; <label>:31:                                     ; preds = %20
  %32 = alloca i8*, align 8
  store i8** %32, i8*** %7
  %33 = alloca i8*, align 8
  %34 = alloca i8*, align 8
  store i8** %34, i8*** %6
  %35 = alloca i64, align 8
  store i64* %35, i64** %5
  %36 = load volatile i8**, i8*** %7
  store i8* %0, i8** %36, align 8
  store i8* %1, i8** %33, align 8
  %37 = load volatile i8**, i8*** %6
  store i8* %2, i8** %37, align 8
  %38 = load i8*, i8** %33, align 8
  %39 = load volatile i8**, i8*** %7
  %40 = load i8*, i8** %39, align 8
  %41 = ptrtoint i8* %38 to i64
  %42 = ptrtoint i8* %40 to i64
  %43 = sub i64 0, %42
  %44 = add i64 %41, %43
  %45 = sub i64 %41, %42
  %46 = load volatile i64*, i64** %5
  store i64 %44, i64* %46, align 8
  %47 = load volatile i64*, i64** %5
  %48 = load i64, i64* %47, align 8
  %49 = icmp ne i64 %48, 0
  store i1 %49, i1* %4
  %50 = load i32, i32* @x.447
  %51 = load i32, i32* @y.448
  %52 = add i32 %50, -1663795149
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -1663795149
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 1463532883, i32 -1683051851
  store i32 %76, i32* %19
  br label %108

; <label>:77:                                     ; preds = %20
  %78 = load volatile i1, i1* %4
  %79 = select i1 %78, i32 646107519, i32 825345635
  store i32 %79, i32* %19
  br label %108

; <label>:80:                                     ; preds = %20
  %81 = load volatile i8**, i8*** %6
  %82 = load i8*, i8** %81, align 8
  %83 = load volatile i8**, i8*** %7
  %84 = load i8*, i8** %83, align 8
  %85 = load volatile i64*, i64** %5
  %86 = load i64, i64* %85, align 8
  %87 = mul i64 1, %86
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %82, i8* %84, i64 %87, i32 1, i1 false)
  store i32 825345635, i32* %19
  br label %108

; <label>:88:                                     ; preds = %20
  %89 = load volatile i8**, i8*** %6
  %90 = load i8*, i8** %89, align 8
  %91 = load volatile i64*, i64** %5
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds i8, i8* %90, i64 %92
  ret i8* %93

; <label>:94:                                     ; preds = %20
  %95 = alloca i8*, align 8
  %96 = alloca i8*, align 8
  %97 = alloca i8*, align 8
  %98 = alloca i64, align 8
  store i8* %0, i8** %95, align 8
  store i8* %1, i8** %96, align 8
  store i8* %2, i8** %97, align 8
  %99 = load i8*, i8** %96, align 8
  %100 = load i8*, i8** %95, align 8
  %101 = ptrtoint i8* %99 to i64
  %102 = ptrtoint i8* %100 to i64
  %103 = sub i64 0, %102
  %104 = add i64 %101, %103
  %105 = sub i64 %101, %102
  store i64 %104, i64* %98, align 8
  %106 = load i64, i64* %98, align 8
  %107 = icmp ne i64 %106, 0
  store i32 865552587, i32* %19
  br label %108

; <label>:108:                                    ; preds = %94, %80, %77, %31, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEELb1EE7_S_baseES7_(i8*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %2, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = call dereferenceable(8) i8** @_ZNK9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.42"* %2) #3
  %5 = load i8*, i8** %4, align 8
  ret i8* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i8** @_ZNK9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.42"*) #4 comdat align 2 {
  %2 = alloca i8**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.451
  %6 = load i32, i32* @y.452
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1549455893, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1549455893, label %18
    i32 -787115780, label %38
    i32 820729665, label %56
    i32 1626216129, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -787115780, i32 1626216129
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.42"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.42"* %0, %"class.__gnu_cxx::__normal_iterator.42"** %39, align 8
  %40 = load %"class.__gnu_cxx::__normal_iterator.42"*, %"class.__gnu_cxx::__normal_iterator.42"** %39, align 8
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %40, i32 0, i32 0
  store i8** %41, i8*** %2
  %42 = load i32, i32* @x.451
  %43 = load i32, i32* @y.452
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 820729665, i32 1626216129
  store i32 %55, i32* %14
  br label %62

; <label>:56:                                     ; preds = %15
  %57 = load volatile i8**, i8*** %2
  ret i8** %57

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.__gnu_cxx::__normal_iterator.42"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.42"* %0, %"class.__gnu_cxx::__normal_iterator.42"** %59, align 8
  %60 = load %"class.__gnu_cxx::__normal_iterator.42"*, %"class.__gnu_cxx::__normal_iterator.42"** %59, align 8
  %61 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %60, i32 0, i32 0
  store i32 -787115780, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEELb0EE7_S_baseES7_(i8*) #4 comdat align 2 {
  %2 = alloca i8*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.453
  %6 = load i32, i32* @y.454
  %7 = sub i32 %5, 982605109
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 982605109
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -25741063, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %72
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -25741063, label %19
    i32 -606174711, label %27
    i32 -557876072, label %62
    i32 1365443579, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %72

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -606174711, i32 1365443579
  store i32 %26, i32* %15
  br label %72

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %29, i32 0, i32 0
  store i8* %0, i8** %30, align 8
  %31 = bitcast %"class.__gnu_cxx::__normal_iterator.42"* %28 to i8*
  %32 = bitcast %"class.__gnu_cxx::__normal_iterator.42"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 8, i32 8, i1 false)
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %28, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  store i8* %34, i8** %2
  %35 = load i32, i32* @x.453
  %36 = load i32, i32* @y.454
  %37 = sub i32 %35, -1551937144
  %38 = sub i32 %37, 1
  %39 = add i32 %38, -1551937144
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 -557876072, i32 1365443579
  store i32 %61, i32* %15
  br label %72

; <label>:62:                                     ; preds = %16
  %63 = load volatile i8*, i8** %2
  ret i8* %63

; <label>:64:                                     ; preds = %16
  %65 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %66 = alloca %"class.__gnu_cxx::__normal_iterator.42", align 8
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %66, i32 0, i32 0
  store i8* %0, i8** %67, align 8
  %68 = bitcast %"class.__gnu_cxx::__normal_iterator.42"* %65 to i8*
  %69 = bitcast %"class.__gnu_cxx::__normal_iterator.42"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %68, i8* %69, i64 8, i32 8, i1 false)
  %70 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %65, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  store i32 -606174711, i32* %15
  br label %72

; <label>:72:                                     ; preds = %64, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKcSt6vectorIcSaIcEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.42"*, i8** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.42"*, align 8
  %4 = alloca i8**, align 8
  store %"class.__gnu_cxx::__normal_iterator.42"* %0, %"class.__gnu_cxx::__normal_iterator.42"** %3, align 8
  store i8** %1, i8*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.42"*, %"class.__gnu_cxx::__normal_iterator.42"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.42", %"class.__gnu_cxx::__normal_iterator.42"* %5, i32 0, i32 0
  %7 = load i8**, i8*** %4, align 8
  %8 = load i8*, i8** %7, align 8
  store i8* %8, i8** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIcSaIcEEEEvT_S6_(%"class.std::vector.6"*, %"class.std::vector.6"*) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.6"**
  %4 = alloca %"class.std::vector.6"**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.457
  %8 = load i32, i32* @y.458
  %9 = add i32 %7, 513942897
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 513942897
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -14600148, i32* %17
  br label %18

; <label>:18:                                     ; preds = %2, %131
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -14600148, label %21
    i32 1878044064, label %41
    i32 -1834513189, label %61
    i32 527789382, label %62
    i32 508403764, label %69
    i32 -1814848796, label %73
    i32 2065512687, label %101
    i32 -2086859379, label %121
    i32 -301966872, label %122
    i32 -82238455, label %123
    i32 -1617362173, label %126
  ]

; <label>:20:                                     ; preds = %18
  br label %131

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1878044064, i32 -82238455
  store i32 %40, i32* %17
  br label %131

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::vector.6"** %42, %"class.std::vector.6"*** %4
  %43 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::vector.6"** %43, %"class.std::vector.6"*** %3
  %44 = load volatile %"class.std::vector.6"**, %"class.std::vector.6"*** %4
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %44, align 8
  %45 = load volatile %"class.std::vector.6"**, %"class.std::vector.6"*** %3
  store %"class.std::vector.6"* %1, %"class.std::vector.6"** %45, align 8
  %46 = load i32, i32* @x.457
  %47 = load i32, i32* @y.458
  %48 = sub i32 %46, 1234862424
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 1234862424
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -1834513189, i32 -82238455
  store i32 %60, i32* %17
  br label %131

; <label>:61:                                     ; preds = %18
  store i32 527789382, i32* %17
  br label %131

; <label>:62:                                     ; preds = %18
  %63 = load volatile %"class.std::vector.6"**, %"class.std::vector.6"*** %4
  %64 = load %"class.std::vector.6"*, %"class.std::vector.6"** %63, align 8
  %65 = load volatile %"class.std::vector.6"**, %"class.std::vector.6"*** %3
  %66 = load %"class.std::vector.6"*, %"class.std::vector.6"** %65, align 8
  %67 = icmp ne %"class.std::vector.6"* %64, %66
  %68 = select i1 %67, i32 508403764, i32 -301966872
  store i32 %68, i32* %17
  br label %131

; <label>:69:                                     ; preds = %18
  %70 = load volatile %"class.std::vector.6"**, %"class.std::vector.6"*** %4
  %71 = load %"class.std::vector.6"*, %"class.std::vector.6"** %70, align 8
  %72 = call %"class.std::vector.6"* @_ZSt11__addressofISt6vectorIcSaIcEEEPT_RS3_(%"class.std::vector.6"* dereferenceable(24) %71) #3
  call void @_ZSt8_DestroyISt6vectorIcSaIcEEEvPT_(%"class.std::vector.6"* %72)
  store i32 -1814848796, i32* %17
  br label %131

; <label>:73:                                     ; preds = %18
  %74 = load i32, i32* @x.457
  %75 = load i32, i32* @y.458
  %76 = sub i32 %74, 128394640
  %77 = sub i32 %76, 1
  %78 = add i32 %77, 128394640
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = xor i1 %82, true
  %85 = xor i1 %83, true
  %86 = xor i1 true, true
  %87 = and i1 %84, true
  %88 = and i1 %82, %86
  %89 = and i1 %85, true
  %90 = and i1 %83, %86
  %91 = or i1 %87, %88
  %92 = or i1 %89, %90
  %93 = xor i1 %91, %92
  %94 = or i1 %84, %85
  %95 = xor i1 %94, true
  %96 = or i1 true, %86
  %97 = and i1 %95, %96
  %98 = or i1 %93, %97
  %99 = or i1 %82, %83
  %100 = select i1 %98, i32 2065512687, i32 -1617362173
  store i32 %100, i32* %17
  br label %131

; <label>:101:                                    ; preds = %18
  %102 = load volatile %"class.std::vector.6"**, %"class.std::vector.6"*** %4
  %103 = load %"class.std::vector.6"*, %"class.std::vector.6"** %102, align 8
  %104 = getelementptr inbounds %"class.std::vector.6", %"class.std::vector.6"* %103, i32 1
  %105 = load volatile %"class.std::vector.6"**, %"class.std::vector.6"*** %4
  store %"class.std::vector.6"* %104, %"class.std::vector.6"** %105, align 8
  %106 = load i32, i32* @x.457
  %107 = load i32, i32* @y.458
  %108 = sub i32 %106, 944985634
  %109 = sub i32 %108, 1
  %110 = add i32 %109, 944985634
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = and i1 %114, %115
  %117 = xor i1 %114, %115
  %118 = or i1 %116, %117
  %119 = or i1 %114, %115
  %120 = select i1 %118, i32 -2086859379, i32 -1617362173
  store i32 %120, i32* %17
  br label %131

; <label>:121:                                    ; preds = %18
  store i32 527789382, i32* %17
  br label %131

; <label>:122:                                    ; preds = %18
  ret void

; <label>:123:                                    ; preds = %18
  %124 = alloca %"class.std::vector.6"*, align 8
  %125 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %124, align 8
  store %"class.std::vector.6"* %1, %"class.std::vector.6"** %125, align 8
  store i32 1878044064, i32* %17
  br label %131

; <label>:126:                                    ; preds = %18
  %127 = load volatile %"class.std::vector.6"**, %"class.std::vector.6"*** %4
  %128 = load %"class.std::vector.6"*, %"class.std::vector.6"** %127, align 8
  %129 = getelementptr inbounds %"class.std::vector.6", %"class.std::vector.6"* %128, i32 1
  %130 = load volatile %"class.std::vector.6"**, %"class.std::vector.6"*** %4
  store %"class.std::vector.6"* %129, %"class.std::vector.6"** %130, align 8
  store i32 2065512687, i32* %17
  br label %131

; <label>:131:                                    ; preds = %126, %123, %121, %101, %73, %69, %62, %61, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorIcSaIcEEEvPT_(%"class.std::vector.6"*) #4 comdat {
  %2 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %2, align 8
  %3 = load %"class.std::vector.6"*, %"class.std::vector.6"** %2, align 8
  call void @_ZNSt6vectorIcSaIcEED2Ev(%"class.std::vector.6"* %3) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIcSaIcEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base"*, %"class.std::vector.6"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca i64*
  %7 = alloca %"class.std::vector.6"**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.461
  %11 = load i32, i32* @y.462
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 -1613701125, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %139
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1613701125, label %23
    i32 125905988, label %43
    i32 1444167305, label %80
    i32 106469623, label %83
    i32 -1043436855, label %99
    i32 -1365964524, label %122
    i32 1449749487, label %123
    i32 1027043302, label %124
    i32 487379883, label %131
  ]

; <label>:22:                                     ; preds = %20
  br label %139

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 125905988, i32 1027043302
  store i32 %42, i32* %19
  br label %139

; <label>:43:                                     ; preds = %20
  %44 = alloca %"struct.std::_Vector_base"*, align 8
  %45 = alloca %"class.std::vector.6"*, align 8
  store %"class.std::vector.6"** %45, %"class.std::vector.6"*** %7
  %46 = alloca i64, align 8
  store i64* %46, i64** %6
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %44, align 8
  %47 = load volatile %"class.std::vector.6"**, %"class.std::vector.6"*** %7
  store %"class.std::vector.6"* %1, %"class.std::vector.6"** %47, align 8
  %48 = load volatile i64*, i64** %6
  store i64 %2, i64* %48, align 8
  %49 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %44, align 8
  store %"struct.std::_Vector_base"* %49, %"struct.std::_Vector_base"** %5
  %50 = load volatile %"class.std::vector.6"**, %"class.std::vector.6"*** %7
  %51 = load %"class.std::vector.6"*, %"class.std::vector.6"** %50, align 8
  %52 = icmp ne %"class.std::vector.6"* %51, null
  store i1 %52, i1* %4
  %53 = load i32, i32* @x.461
  %54 = load i32, i32* @y.462
  %55 = add i32 %53, -1229051382
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, -1229051382
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 false, true
  %66 = and i1 %63, false
  %67 = and i1 %61, %65
  %68 = and i1 %64, false
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 false, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 1444167305, i32 1027043302
  store i32 %79, i32* %19
  br label %139

; <label>:80:                                     ; preds = %20
  %81 = load volatile i1, i1* %4
  %82 = select i1 %81, i32 106469623, i32 1449749487
  store i32 %82, i32* %19
  br label %139

; <label>:83:                                     ; preds = %20
  %84 = load i32, i32* @x.461
  %85 = load i32, i32* @y.462
  %86 = add i32 %84, -1652228513
  %87 = sub i32 %86, 1
  %88 = sub i32 %87, -1652228513
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = and i1 %92, %93
  %95 = xor i1 %92, %93
  %96 = or i1 %94, %95
  %97 = or i1 %92, %93
  %98 = select i1 %96, i32 -1043436855, i32 487379883
  store i32 %98, i32* %19
  br label %139

; <label>:99:                                     ; preds = %20
  %100 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %101 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %100, i32 0, i32 0
  %102 = bitcast %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %101 to %"class.std::allocator.3"*
  %103 = load volatile %"class.std::vector.6"**, %"class.std::vector.6"*** %7
  %104 = load %"class.std::vector.6"*, %"class.std::vector.6"** %103, align 8
  %105 = load volatile i64*, i64** %6
  %106 = load i64, i64* %105, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIcSaIcEEEE10deallocateERS3_PS2_m(%"class.std::allocator.3"* dereferenceable(1) %102, %"class.std::vector.6"* %104, i64 %106)
  %107 = load i32, i32* @x.461
  %108 = load i32, i32* @y.462
  %109 = add i32 %107, 1625096896
  %110 = sub i32 %109, 1
  %111 = sub i32 %110, 1625096896
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = and i1 %115, %116
  %118 = xor i1 %115, %116
  %119 = or i1 %117, %118
  %120 = or i1 %115, %116
  %121 = select i1 %119, i32 -1365964524, i32 487379883
  store i32 %121, i32* %19
  br label %139

; <label>:122:                                    ; preds = %20
  store i32 1449749487, i32* %19
  br label %139

; <label>:123:                                    ; preds = %20
  ret void

; <label>:124:                                    ; preds = %20
  %125 = alloca %"struct.std::_Vector_base"*, align 8
  %126 = alloca %"class.std::vector.6"*, align 8
  %127 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %125, align 8
  store %"class.std::vector.6"* %1, %"class.std::vector.6"** %126, align 8
  store i64 %2, i64* %127, align 8
  %128 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %125, align 8
  %129 = load %"class.std::vector.6"*, %"class.std::vector.6"** %126, align 8
  %130 = icmp ne %"class.std::vector.6"* %129, null
  store i32 125905988, i32* %19
  br label %139

; <label>:131:                                    ; preds = %20
  %132 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %133 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %132, i32 0, i32 0
  %134 = bitcast %"struct.std::_Vector_base<std::vector<char, std::allocator<char> >, std::allocator<std::vector<char, std::allocator<char> > > >::_Vector_impl"* %133 to %"class.std::allocator.3"*
  %135 = load volatile %"class.std::vector.6"**, %"class.std::vector.6"*** %7
  %136 = load %"class.std::vector.6"*, %"class.std::vector.6"** %135, align 8
  %137 = load volatile i64*, i64** %6
  %138 = load i64, i64* %137, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIcSaIcEEEE10deallocateERS3_PS2_m(%"class.std::allocator.3"* dereferenceable(1) %134, %"class.std::vector.6"* %136, i64 %138)
  store i32 -1043436855, i32* %19
  br label %139

; <label>:139:                                    ; preds = %131, %124, %122, %99, %83, %80, %43, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorIcSaIcEEEE10deallocateERS3_PS2_m(%"class.std::allocator.3"* dereferenceable(1), %"class.std::vector.6"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.3"*, align 8
  %5 = alloca %"class.std::vector.6"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.3"* %0, %"class.std::allocator.3"** %4, align 8
  store %"class.std::vector.6"* %1, %"class.std::vector.6"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.3"*, %"class.std::allocator.3"** %4, align 8
  %8 = bitcast %"class.std::allocator.3"* %7 to %"class.__gnu_cxx::new_allocator.4"*
  %9 = load %"class.std::vector.6"*, %"class.std::vector.6"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.4"* %8, %"class.std::vector.6"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIcSaIcEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.4"*, %"class.std::vector.6"*, i64) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.465
  %7 = load i32, i32* @y.466
  %8 = sub i32 %6, 1736403885
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1736403885
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1195732575, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1195732575, label %20
    i32 -1652830363, label %28
    i32 -1229515153, label %62
    i32 -540510279, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1652830363, i32 -540510279
  store i32 %27, i32* %16
  br label %70

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator.4"*, align 8
  %30 = alloca %"class.std::vector.6"*, align 8
  %31 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.4"* %0, %"class.__gnu_cxx::new_allocator.4"** %29, align 8
  store %"class.std::vector.6"* %1, %"class.std::vector.6"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator.4"*, %"class.__gnu_cxx::new_allocator.4"** %29, align 8
  %33 = load %"class.std::vector.6"*, %"class.std::vector.6"** %30, align 8
  %34 = bitcast %"class.std::vector.6"* %33 to i8*
  call void @_ZdlPv(i8* %34) #3
  %35 = load i32, i32* @x.465
  %36 = load i32, i32* @y.466
  %37 = add i32 %35, 738636121
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 738636121
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 -1229515153, i32 -540510279
  store i32 %61, i32* %16
  br label %70

; <label>:62:                                     ; preds = %17
  ret void

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.__gnu_cxx::new_allocator.4"*, align 8
  %65 = alloca %"class.std::vector.6"*, align 8
  %66 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.4"* %0, %"class.__gnu_cxx::new_allocator.4"** %64, align 8
  store %"class.std::vector.6"* %1, %"class.std::vector.6"** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"class.__gnu_cxx::new_allocator.4"*, %"class.__gnu_cxx::new_allocator.4"** %64, align 8
  %68 = load %"class.std::vector.6"*, %"class.std::vector.6"** %65, align 8
  %69 = bitcast %"class.std::vector.6"* %68 to i8*
  call void @_ZdlPv(i8* %69) #3
  store i32 -1652830363, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIcSaIcEES2_EvT_S4_RSaIT0_E(%"class.std::vector.6"*, %"class.std::vector.6"*, %"class.std::allocator.3"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.6"*, align 8
  %5 = alloca %"class.std::vector.6"*, align 8
  %6 = alloca %"class.std::allocator.3"*, align 8
  store %"class.std::vector.6"* %0, %"class.std::vector.6"** %4, align 8
  store %"class.std::vector.6"* %1, %"class.std::vector.6"** %5, align 8
  store %"class.std::allocator.3"* %2, %"class.std::allocator.3"** %6, align 8
  %7 = load %"class.std::vector.6"*, %"class.std::vector.6"** %4, align 8
  %8 = load %"class.std::vector.6"*, %"class.std::vector.6"** %5, align 8
  call void @_ZSt8_DestroyIPSt6vectorIcSaIcEEEvT_S4_(%"class.std::vector.6"* %7, %"class.std::vector.6"* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base.17"*, i64, %"class.std::allocator.0"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.469
  %5 = load i32, i32* @y.470
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %5, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %160

; <label>:29:                                     ; preds = %3, %160
  %30 = alloca %"struct.std::_Vector_base.17"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"class.std::allocator.0"*, align 8
  %33 = alloca i8*
  %34 = alloca i32
  store %"struct.std::_Vector_base.17"* %0, %"struct.std::_Vector_base.17"** %30, align 8
  store i64 %1, i64* %31, align 8
  store %"class.std::allocator.0"* %2, %"class.std::allocator.0"** %32, align 8
  %35 = load %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %30, align 8
  %36 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %35, i32 0, i32 0
  %37 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %32, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %36, %"class.std::allocator.0"* dereferenceable(1) %37) #3
  %38 = load i64, i64* %31, align 8
  %39 = load i32, i32* @x.469
  %40 = load i32, i32* @y.470
  %41 = add i32 %39, 197650623
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, 197650623
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  br i1 %63, label %65, label %160

; <label>:65:                                     ; preds = %29
  invoke void @_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::_Vector_base.17"* %35, i64 %38)
          to label %66 unwind label %67

; <label>:66:                                     ; preds = %65
  ret void

; <label>:67:                                     ; preds = %65
  %68 = load i32, i32* @x.469
  %69 = load i32, i32* @y.470
  %70 = sub i32 %68, 687062846
  %71 = sub i32 %70, 1
  %72 = add i32 %71, 687062846
  %73 = sub i32 %68, 1
  %74 = mul i32 %68, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %69, 10
  %78 = xor i1 %76, true
  %79 = xor i1 %77, true
  %80 = xor i1 true, true
  %81 = and i1 %78, true
  %82 = and i1 %76, %80
  %83 = and i1 %79, true
  %84 = and i1 %77, %80
  %85 = or i1 %81, %82
  %86 = or i1 %83, %84
  %87 = xor i1 %85, %86
  %88 = or i1 %78, %79
  %89 = xor i1 %88, true
  %90 = or i1 true, %80
  %91 = and i1 %89, %90
  %92 = or i1 %87, %91
  %93 = or i1 %76, %77
  br i1 %92, label %94, label %170

; <label>:94:                                     ; preds = %67, %170
  %95 = landingpad { i8*, i32 }
          cleanup
  %96 = extractvalue { i8*, i32 } %95, 0
  store i8* %96, i8** %33, align 8
  %97 = extractvalue { i8*, i32 } %95, 1
  store i32 %97, i32* %34, align 4
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %36) #3
  %98 = load i32, i32* @x.469
  %99 = load i32, i32* @y.470
  %100 = sub i32 %98, 1272361351
  %101 = sub i32 %100, 1
  %102 = add i32 %101, 1272361351
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = and i1 %106, %107
  %109 = xor i1 %106, %107
  %110 = or i1 %108, %109
  %111 = or i1 %106, %107
  br i1 %110, label %112, label %170

; <label>:112:                                    ; preds = %94
  br label %113

; <label>:113:                                    ; preds = %112
  %114 = load i32, i32* @x.469
  %115 = load i32, i32* @y.470
  %116 = add i32 %114, 2105735862
  %117 = sub i32 %116, 1
  %118 = sub i32 %117, 2105735862
  %119 = sub i32 %114, 1
  %120 = mul i32 %114, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %115, 10
  %124 = and i1 %122, %123
  %125 = xor i1 %122, %123
  %126 = or i1 %124, %125
  %127 = or i1 %122, %123
  br i1 %126, label %128, label %174

; <label>:128:                                    ; preds = %113, %174
  %129 = load i8*, i8** %33, align 8
  %130 = load i32, i32* %34, align 4
  %131 = insertvalue { i8*, i32 } undef, i8* %129, 0
  %132 = insertvalue { i8*, i32 } %131, i32 %130, 1
  %133 = load i32, i32* @x.469
  %134 = load i32, i32* @y.470
  %135 = sub i32 %133, -350274461
  %136 = sub i32 %135, 1
  %137 = add i32 %136, -350274461
  %138 = sub i32 %133, 1
  %139 = mul i32 %133, %137
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %134, 10
  %143 = xor i1 %141, true
  %144 = xor i1 %142, true
  %145 = xor i1 false, true
  %146 = and i1 %143, false
  %147 = and i1 %141, %145
  %148 = and i1 %144, false
  %149 = and i1 %142, %145
  %150 = or i1 %146, %147
  %151 = or i1 %148, %149
  %152 = xor i1 %150, %151
  %153 = or i1 %143, %144
  %154 = xor i1 %153, true
  %155 = or i1 false, %145
  %156 = and i1 %154, %155
  %157 = or i1 %152, %156
  %158 = or i1 %141, %142
  br i1 %157, label %159, label %174

; <label>:159:                                    ; preds = %128
  resume { i8*, i32 } %132

; <label>:160:                                    ; preds = %29, %3
  %161 = alloca %"struct.std::_Vector_base.17"*, align 8
  %162 = alloca i64, align 8
  %163 = alloca %"class.std::allocator.0"*, align 8
  %164 = alloca i8*
  %165 = alloca i32
  store %"struct.std::_Vector_base.17"* %0, %"struct.std::_Vector_base.17"** %161, align 8
  store i64 %1, i64* %162, align 8
  store %"class.std::allocator.0"* %2, %"class.std::allocator.0"** %163, align 8
  %166 = load %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %161, align 8
  %167 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %166, i32 0, i32 0
  %168 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %163, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %167, %"class.std::allocator.0"* dereferenceable(1) %168) #3
  %169 = load i64, i64* %162, align 8
  br label %29

; <label>:170:                                    ; preds = %94, %67
  %171 = landingpad { i8*, i32 }
          cleanup
  %172 = extractvalue { i8*, i32 } %171, 0
  store i8* %172, i8** %33, align 8
  %173 = extractvalue { i8*, i32 } %171, 1
  store i32 %173, i32* %34, align 4
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %36) #3
  br label %94

; <label>:174:                                    ; preds = %128, %113
  %175 = load i8*, i8** %33, align 8
  %176 = load i32, i32* %34, align 4
  %177 = insertvalue { i8*, i32 } undef, i8* %175, 0
  %178 = insertvalue { i8*, i32 } %177, i32 %176, 1
  br label %128
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi(%"class.std::vector.16"*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.16"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.std::vector.16"*, %"class.std::vector.16"** %4, align 8
  %8 = bitcast %"class.std::vector.16"* %7 to %"struct.std::_Vector_base.17"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = load i64, i64* %5, align 8
  %13 = load i32*, i32** %6, align 8
  %14 = bitcast %"class.std::vector.16"* %7 to %"struct.std::_Vector_base.17"*
  %15 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.17"* %14) #3
  %16 = call i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32* %11, i64 %12, i32* dereferenceable(4) %13, %"class.std::allocator.0"* dereferenceable(1) %15)
  %17 = bitcast %"class.std::vector.16"* %7 to %"struct.std::_Vector_base.17"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %18, i32 0, i32 1
  store i32* %16, i32** %19, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.17"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.17"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.17"* %0, %"struct.std::_Vector_base.17"** %2, align 8
  %5 = load %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = ptrtoint i32* %11 to i64
  %16 = ptrtoint i32* %14 to i64
  %17 = add i64 %15, 4520886350410286797
  %18 = sub i64 %17, %16
  %19 = sub i64 %18, 4520886350410286797
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 4
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.17"* %5, i32* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %28) #3
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %30) #13
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"class.std::allocator.0"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.0"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %4, align 8
  %5 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5 to %"class.std::allocator.0"*
  %7 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %4, align 8
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.0"* %6, %"class.std::allocator.0"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 0
  store i32* null, i32** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 1
  store i32* null, i32** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 2
  store i32* null, i32** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::_Vector_base.17"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.477
  %6 = load i32, i32* @y.478
  %7 = sub i32 %5, 305046408
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 305046408
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1355654527, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %94
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1355654527, label %19
    i32 242992894, label %39
    i32 663919485, label %73
    i32 -1701600339, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %94

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 242992894, i32 -1701600339
  store i32 %38, i32* %15
  br label %94

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base.17"*, align 8
  %41 = alloca i64, align 8
  store %"struct.std::_Vector_base.17"* %0, %"struct.std::_Vector_base.17"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %40, align 8
  %43 = load i64, i64* %41, align 8
  %44 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.17"* %42, i64 %43)
  %45 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %42, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %45, i32 0, i32 0
  store i32* %44, i32** %46, align 8
  %47 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %42, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %47, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %42, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %50, i32 0, i32 1
  store i32* %49, i32** %51, align 8
  %52 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %42, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %52, i32 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = load i64, i64* %41, align 8
  %56 = getelementptr inbounds i32, i32* %54, i64 %55
  %57 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %42, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %57, i32 0, i32 2
  store i32* %56, i32** %58, align 8
  %59 = load i32, i32* @x.477
  %60 = load i32, i32* @y.478
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  %72 = select i1 %70, i32 663919485, i32 -1701600339
  store i32 %72, i32* %15
  br label %94

; <label>:73:                                     ; preds = %16
  ret void

; <label>:74:                                     ; preds = %16
  %75 = alloca %"struct.std::_Vector_base.17"*, align 8
  %76 = alloca i64, align 8
  store %"struct.std::_Vector_base.17"* %0, %"struct.std::_Vector_base.17"** %75, align 8
  store i64 %1, i64* %76, align 8
  %77 = load %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %75, align 8
  %78 = load i64, i64* %76, align 8
  %79 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.17"* %77, i64 %78)
  %80 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %77, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %80, i32 0, i32 0
  store i32* %79, i32** %81, align 8
  %82 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %77, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %82, i32 0, i32 0
  %84 = load i32*, i32** %83, align 8
  %85 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %77, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %85, i32 0, i32 1
  store i32* %84, i32** %86, align 8
  %87 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %77, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %87, i32 0, i32 0
  %89 = load i32*, i32** %88, align 8
  %90 = load i64, i64* %76, align 8
  %91 = getelementptr inbounds i32, i32* %89, i64 %90
  %92 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %77, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %92, i32 0, i32 2
  store i32* %91, i32** %93, align 8
  store i32 242992894, i32* %15
  br label %94

; <label>:94:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.479
  %5 = load i32, i32* @y.480
  %6 = sub i32 %4, 958268645
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 958268645
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1721634961, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1721634961, label %18
    i32 644367736, label %38
    i32 -147868834, label %56
    i32 -933986458, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 644367736, i32 -933986458
  store i32 %37, i32* %14
  br label %61

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %39, align 8
  %40 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %39, align 8
  %41 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %40 to %"class.std::allocator.0"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.0"* %41) #3
  %42 = load i32, i32* @x.479
  %43 = load i32, i32* @y.480
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -147868834, i32 -933986458
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %58, align 8
  %59 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %58, align 8
  %60 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %59 to %"class.std::allocator.0"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.0"* %60) #3
  store i32 644367736, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.481
  %6 = load i32, i32* @y.482
  %7 = sub i32 %5, -296153074
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -296153074
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 141258922, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 141258922, label %19
    i32 1849655756, label %27
    i32 -35596568, label %58
    i32 -249944170, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1849655756, i32 -249944170
  store i32 %26, i32* %15
  br label %63

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %29 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %28, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %1, %"class.__gnu_cxx::new_allocator.1"** %29, align 8
  %30 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %28, align 8
  %31 = load i32, i32* @x.481
  %32 = load i32, i32* @y.482
  %33 = sub i32 %31, 591363422
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 591363422
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -35596568, i32 -249944170
  store i32 %57, i32* %15
  br label %63

; <label>:58:                                     ; preds = %16
  ret void

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %61 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %60, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %1, %"class.__gnu_cxx::new_allocator.1"** %61, align 8
  %62 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %60, align 8
  store i32 1849655756, i32* %15
  br label %63

; <label>:63:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.17"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base.17"*
  %5 = alloca %"struct.std::_Vector_base.17"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.17"* %0, %"struct.std::_Vector_base.17"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %5, align 8
  store %"struct.std::_Vector_base.17"* %7, %"struct.std::_Vector_base.17"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 -1819388440, i32* %9
  %10 = alloca i32*
  br label %11

; <label>:11:                                     ; preds = %2, %27
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 -1819388440, label %14
    i32 -977415278, label %18
    i32 -1428911253, label %24
    i32 -367172702, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %27

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 -977415278, i32 -1428911253
  store i32 %17, i32* %9
  br label %27

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %20 to %"class.std::allocator.0"*
  %22 = load i64, i64* %6, align 8
  %23 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.0"* dereferenceable(1) %21, i64 %22)
  store i32 -367172702, i32* %9
  store i32* %23, i32** %10
  br label %27

; <label>:24:                                     ; preds = %11
  store i32 -367172702, i32* %9
  store i32* null, i32** %10
  br label %27

; <label>:25:                                     ; preds = %11
  %26 = load i32*, i32** %10
  ret i32* %26

; <label>:27:                                     ; preds = %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32*, i64, i32* dereferenceable(4), %"class.std::allocator.0"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.0"*, align 8
  store i32* %0, i32** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %8, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = call i32* @_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_(i32* %9, i64 %10, i32* dereferenceable(4) %11)
  ret i32* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.17"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.17"*, align 8
  store %"struct.std::_Vector_base.17"* %0, %"struct.std::_Vector_base.17"** %2, align 8
  %3 = load %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %4 to %"class.std::allocator.0"*
  ret %"class.std::allocator.0"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_(i32* %8, i64 %9, i32* dereferenceable(4) %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %7, i64 %8, i32* dereferenceable(4) %9)
  ret i32* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32* %8, i64 %9, i32* dereferenceable(4) %10)
  ret i32* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32*, i64, i32* dereferenceable(4)) #4 comdat {
  %4 = alloca i32*
  %5 = alloca i64*
  %6 = alloca i32*
  %7 = alloca i32**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.495
  %11 = load i32, i32* @y.496
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 342845131, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %226
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 342845131, label %23
    i32 -1343932936, label %43
    i32 68441041, label %82
    i32 1914886095, label %83
    i32 -647880734, label %88
    i32 1553635922, label %93
    i32 21920342, label %109
    i32 -1735729349, label %147
    i32 -1457258373, label %148
    i32 -1005686080, label %164
    i32 -1661879234, label %193
    i32 1572044891, label %195
    i32 -2141566394, label %204
    i32 -2009849924, label %223
  ]

; <label>:22:                                     ; preds = %20
  br label %226

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 false, true
  %29 = and i1 %26, false
  %30 = and i1 %24, %28
  %31 = and i1 %27, false
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 false, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 -1343932936, i32 1572044891
  store i32 %42, i32* %19
  br label %226

; <label>:43:                                     ; preds = %20
  %44 = alloca i32*, align 8
  store i32** %44, i32*** %7
  %45 = alloca i64, align 8
  %46 = alloca i32*, align 8
  %47 = alloca i32, align 4
  store i32* %47, i32** %6
  %48 = alloca i64, align 8
  store i64* %48, i64** %5
  %49 = load volatile i32**, i32*** %7
  store i32* %0, i32** %49, align 8
  store i64 %1, i64* %45, align 8
  store i32* %2, i32** %46, align 8
  %50 = load i32*, i32** %46, align 8
  %51 = load i32, i32* %50, align 4
  %52 = load volatile i32*, i32** %6
  store i32 %51, i32* %52, align 4
  %53 = load i64, i64* %45, align 8
  %54 = load volatile i64*, i64** %5
  store i64 %53, i64* %54, align 8
  %55 = load i32, i32* @x.495
  %56 = load i32, i32* @y.496
  %57 = add i32 %55, 13824376
  %58 = sub i32 %57, 1
  %59 = sub i32 %58, 13824376
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 false, true
  %68 = and i1 %65, false
  %69 = and i1 %63, %67
  %70 = and i1 %66, false
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 false, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  %81 = select i1 %79, i32 68441041, i32 1572044891
  store i32 %81, i32* %19
  br label %226

; <label>:82:                                     ; preds = %20
  store i32 1914886095, i32* %19
  br label %226

; <label>:83:                                     ; preds = %20
  %84 = load volatile i64*, i64** %5
  %85 = load i64, i64* %84, align 8
  %86 = icmp ugt i64 %85, 0
  %87 = select i1 %86, i32 -647880734, i32 -1457258373
  store i32 %87, i32* %19
  br label %226

; <label>:88:                                     ; preds = %20
  %89 = load volatile i32*, i32** %6
  %90 = load i32, i32* %89, align 4
  %91 = load volatile i32**, i32*** %7
  %92 = load i32*, i32** %91, align 8
  store i32 %90, i32* %92, align 4
  store i32 1553635922, i32* %19
  br label %226

; <label>:93:                                     ; preds = %20
  %94 = load i32, i32* @x.495
  %95 = load i32, i32* @y.496
  %96 = add i32 %94, 2074135319
  %97 = sub i32 %96, 1
  %98 = sub i32 %97, 2074135319
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = and i1 %102, %103
  %105 = xor i1 %102, %103
  %106 = or i1 %104, %105
  %107 = or i1 %102, %103
  %108 = select i1 %106, i32 21920342, i32 -2141566394
  store i32 %108, i32* %19
  br label %226

; <label>:109:                                    ; preds = %20
  %110 = load volatile i64*, i64** %5
  %111 = load i64, i64* %110, align 8
  %112 = sub i64 0, -1
  %113 = sub i64 %111, %112
  %114 = add i64 %111, -1
  %115 = load volatile i64*, i64** %5
  store i64 %113, i64* %115, align 8
  %116 = load volatile i32**, i32*** %7
  %117 = load i32*, i32** %116, align 8
  %118 = getelementptr inbounds i32, i32* %117, i32 1
  %119 = load volatile i32**, i32*** %7
  store i32* %118, i32** %119, align 8
  %120 = load i32, i32* @x.495
  %121 = load i32, i32* @y.496
  %122 = add i32 %120, -1337619880
  %123 = sub i32 %122, 1
  %124 = sub i32 %123, -1337619880
  %125 = sub i32 %120, 1
  %126 = mul i32 %120, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %121, 10
  %130 = xor i1 %128, true
  %131 = xor i1 %129, true
  %132 = xor i1 false, true
  %133 = and i1 %130, false
  %134 = and i1 %128, %132
  %135 = and i1 %131, false
  %136 = and i1 %129, %132
  %137 = or i1 %133, %134
  %138 = or i1 %135, %136
  %139 = xor i1 %137, %138
  %140 = or i1 %130, %131
  %141 = xor i1 %140, true
  %142 = or i1 false, %132
  %143 = and i1 %141, %142
  %144 = or i1 %139, %143
  %145 = or i1 %128, %129
  %146 = select i1 %144, i32 -1735729349, i32 -2141566394
  store i32 %146, i32* %19
  br label %226

; <label>:147:                                    ; preds = %20
  store i32 1914886095, i32* %19
  br label %226

; <label>:148:                                    ; preds = %20
  %149 = load i32, i32* @x.495
  %150 = load i32, i32* @y.496
  %151 = sub i32 %149, -49518516
  %152 = sub i32 %151, 1
  %153 = add i32 %152, -49518516
  %154 = sub i32 %149, 1
  %155 = mul i32 %149, %153
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %150, 10
  %159 = and i1 %157, %158
  %160 = xor i1 %157, %158
  %161 = or i1 %159, %160
  %162 = or i1 %157, %158
  %163 = select i1 %161, i32 -1005686080, i32 -2009849924
  store i32 %163, i32* %19
  br label %226

; <label>:164:                                    ; preds = %20
  %165 = load volatile i32**, i32*** %7
  %166 = load i32*, i32** %165, align 8
  store i32* %166, i32** %4
  %167 = load i32, i32* @x.495
  %168 = load i32, i32* @y.496
  %169 = sub i32 0, 1
  %170 = add i32 %167, %169
  %171 = sub i32 %167, 1
  %172 = mul i32 %167, %170
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %168, 10
  %176 = xor i1 %174, true
  %177 = xor i1 %175, true
  %178 = xor i1 true, true
  %179 = and i1 %176, true
  %180 = and i1 %174, %178
  %181 = and i1 %177, true
  %182 = and i1 %175, %178
  %183 = or i1 %179, %180
  %184 = or i1 %181, %182
  %185 = xor i1 %183, %184
  %186 = or i1 %176, %177
  %187 = xor i1 %186, true
  %188 = or i1 true, %178
  %189 = and i1 %187, %188
  %190 = or i1 %185, %189
  %191 = or i1 %174, %175
  %192 = select i1 %190, i32 -1661879234, i32 -2009849924
  store i32 %192, i32* %19
  br label %226

; <label>:193:                                    ; preds = %20
  %194 = load volatile i32*, i32** %4
  ret i32* %194

; <label>:195:                                    ; preds = %20
  %196 = alloca i32*, align 8
  %197 = alloca i64, align 8
  %198 = alloca i32*, align 8
  %199 = alloca i32, align 4
  %200 = alloca i64, align 8
  store i32* %0, i32** %196, align 8
  store i64 %1, i64* %197, align 8
  store i32* %2, i32** %198, align 8
  %201 = load i32*, i32** %198, align 8
  %202 = load i32, i32* %201, align 4
  store i32 %202, i32* %199, align 4
  %203 = load i64, i64* %197, align 8
  store i64 %203, i64* %200, align 8
  store i32 -1343932936, i32* %19
  br label %226

; <label>:204:                                    ; preds = %20
  %205 = load volatile i64*, i64** %5
  %206 = load i64, i64* %205, align 8
  %207 = sub i64 %206, -6807677272541514453
  %208 = sub i64 %207, -1
  %209 = add i64 %208, -6807677272541514453
  %210 = sub i64 %206, -1
  %211 = mul i64 %209, -1
  %212 = shl i64 %206, -1
  %213 = shl i64 %206, -1
  %214 = add i64 %206, 2266983734252296477
  %215 = add i64 %214, -1
  %216 = sub i64 %215, 2266983734252296477
  %217 = add i64 %206, -1
  %218 = load volatile i64*, i64** %5
  store i64 %216, i64* %218, align 8
  %219 = load volatile i32**, i32*** %7
  %220 = load i32*, i32** %219, align 8
  %221 = getelementptr inbounds i32, i32* %220, i32 1
  %222 = load volatile i32**, i32*** %7
  store i32* %221, i32** %222, align 8
  store i32 21920342, i32* %19
  br label %226

; <label>:223:                                    ; preds = %20
  %224 = load volatile i32**, i32*** %7
  %225 = load i32*, i32** %224, align 8
  store i32 -1005686080, i32* %19
  br label %226

; <label>:226:                                    ; preds = %223, %204, %195, %164, %148, %147, %109, %93, %88, %83, %82, %43, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32*) #0 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  %4 = call i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %3)
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32*) #4 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.499
  %6 = load i32, i32* @y.500
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1208548413, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1208548413, label %18
    i32 260019433, label %38
    i32 1486726607, label %67
    i32 96204244, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 260019433, i32 96204244
  store i32 %37, i32* %14
  br label %72

; <label>:38:                                     ; preds = %15
  %39 = alloca i32*, align 8
  store i32* %0, i32** %39, align 8
  %40 = load i32*, i32** %39, align 8
  store i32* %40, i32** %2
  %41 = load i32, i32* @x.499
  %42 = load i32, i32* @y.500
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 1486726607, i32 96204244
  store i32 %66, i32* %14
  br label %72

; <label>:67:                                     ; preds = %15
  %68 = load volatile i32*, i32** %2
  ret i32* %68

; <label>:69:                                     ; preds = %15
  %70 = alloca i32*, align 8
  store i32* %0, i32** %70, align 8
  %71 = load i32*, i32** %70, align 8
  store i32 260019433, i32* %14
  br label %72

; <label>:72:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.17"*, i32*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.17"*
  %6 = alloca i64*
  %7 = alloca i32**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.501
  %11 = load i32, i32* @y.502
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 -1535805860, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %125
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1535805860, label %23
    i32 1593472335, label %31
    i32 1351564534, label %55
    i32 831872852, label %58
    i32 180525111, label %85
    i32 342452504, label %108
    i32 1244460911, label %109
    i32 566439438, label %110
    i32 230059293, label %117
  ]

; <label>:22:                                     ; preds = %20
  br label %125

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 1593472335, i32 566439438
  store i32 %30, i32* %19
  br label %125

; <label>:31:                                     ; preds = %20
  %32 = alloca %"struct.std::_Vector_base.17"*, align 8
  %33 = alloca i32*, align 8
  store i32** %33, i32*** %7
  %34 = alloca i64, align 8
  store i64* %34, i64** %6
  store %"struct.std::_Vector_base.17"* %0, %"struct.std::_Vector_base.17"** %32, align 8
  %35 = load volatile i32**, i32*** %7
  store i32* %1, i32** %35, align 8
  %36 = load volatile i64*, i64** %6
  store i64 %2, i64* %36, align 8
  %37 = load %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %32, align 8
  store %"struct.std::_Vector_base.17"* %37, %"struct.std::_Vector_base.17"** %5
  %38 = load volatile i32**, i32*** %7
  %39 = load i32*, i32** %38, align 8
  %40 = icmp ne i32* %39, null
  store i1 %40, i1* %4
  %41 = load i32, i32* @x.501
  %42 = load i32, i32* @y.502
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 1351564534, i32 566439438
  store i32 %54, i32* %19
  br label %125

; <label>:55:                                     ; preds = %20
  %56 = load volatile i1, i1* %4
  %57 = select i1 %56, i32 831872852, i32 1244460911
  store i32 %57, i32* %19
  br label %125

; <label>:58:                                     ; preds = %20
  %59 = load i32, i32* @x.501
  %60 = load i32, i32* @y.502
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 true, true
  %71 = and i1 %68, true
  %72 = and i1 %66, %70
  %73 = and i1 %69, true
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 true, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 180525111, i32 230059293
  store i32 %84, i32* %19
  br label %125

; <label>:85:                                     ; preds = %20
  %86 = load volatile %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %5
  %87 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %86, i32 0, i32 0
  %88 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %87 to %"class.std::allocator.0"*
  %89 = load volatile i32**, i32*** %7
  %90 = load i32*, i32** %89, align 8
  %91 = load volatile i64*, i64** %6
  %92 = load i64, i64* %91, align 8
  call void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.0"* dereferenceable(1) %88, i32* %90, i64 %92)
  %93 = load i32, i32* @x.501
  %94 = load i32, i32* @y.502
  %95 = sub i32 %93, -1099737404
  %96 = sub i32 %95, 1
  %97 = add i32 %96, -1099737404
  %98 = sub i32 %93, 1
  %99 = mul i32 %93, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %94, 10
  %103 = and i1 %101, %102
  %104 = xor i1 %101, %102
  %105 = or i1 %103, %104
  %106 = or i1 %101, %102
  %107 = select i1 %105, i32 342452504, i32 230059293
  store i32 %107, i32* %19
  br label %125

; <label>:108:                                    ; preds = %20
  store i32 1244460911, i32* %19
  br label %125

; <label>:109:                                    ; preds = %20
  ret void

; <label>:110:                                    ; preds = %20
  %111 = alloca %"struct.std::_Vector_base.17"*, align 8
  %112 = alloca i32*, align 8
  %113 = alloca i64, align 8
  store %"struct.std::_Vector_base.17"* %0, %"struct.std::_Vector_base.17"** %111, align 8
  store i32* %1, i32** %112, align 8
  store i64 %2, i64* %113, align 8
  %114 = load %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %111, align 8
  %115 = load i32*, i32** %112, align 8
  %116 = icmp ne i32* %115, null
  store i32 1593472335, i32* %19
  br label %125

; <label>:117:                                    ; preds = %20
  %118 = load volatile %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %5
  %119 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %118, i32 0, i32 0
  %120 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %119 to %"class.std::allocator.0"*
  %121 = load volatile i32**, i32*** %7
  %122 = load i32*, i32** %121, align 8
  %123 = load volatile i64*, i64** %6
  %124 = load i64, i64* %123, align 8
  call void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.0"* dereferenceable(1) %120, i32* %122, i64 %124)
  store i32 180525111, i32* %19
  br label %125

; <label>:125:                                    ; preds = %117, %110, %108, %85, %58, %55, %31, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32*, i32*, %"class.std::allocator.0"* dereferenceable(1)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca %"class.std::allocator.0"*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store %"class.std::allocator.0"* %2, %"class.std::allocator.0"** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i32*, i32** %5, align 8
  call void @_ZSt8_DestroyIPiEvT_S1_(i32* %7, i32* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiEvT_S1_(i32*, i32*) #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load i32*, i32** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32* %5, i32* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32*, i32*) #4 comdat align 2 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2Ev(%"class.__gnu_cxx::new_allocator.14"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.509
  %5 = load i32, i32* @y.510
  %6 = sub i32 %4, 544658801
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 544658801
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 660936176, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %47
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 660936176, label %18
    i32 501553451, label %26
    i32 -59138349, label %43
    i32 -1027679537, label %44
  ]

; <label>:17:                                     ; preds = %15
  br label %47

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 501553451, i32 -1027679537
  store i32 %25, i32* %14
  br label %47

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %27, align 8
  %29 = load i32, i32* @x.509
  %30 = load i32, i32* @y.510
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 -59138349, i32 -1027679537
  store i32 %42, i32* %14
  br label %47

; <label>:43:                                     ; preds = %15
  ret void

; <label>:44:                                     ; preds = %15
  %45 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %45, align 8
  %46 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %45, align 8
  store i32 501553451, i32* %14
  br label %47

; <label>:47:                                     ; preds = %44, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEED2Ev(%"class.__gnu_cxx::new_allocator.14"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.12"*, i64, %"class.std::allocator.13"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.12"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.13"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.12"* %0, %"struct.std::_Vector_base.12"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.13"* %2, %"class.std::allocator.13"** %6, align 8
  %9 = load %"struct.std::_Vector_base.12"*, %"struct.std::_Vector_base.12"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %6, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %10, %"class.std::allocator.13"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.12"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = load i32, i32* @x.513
  %16 = load i32, i32* @y.514
  %17 = sub i32 0, 1
  %18 = add i32 %15, %17
  %19 = sub i32 %15, 1
  %20 = mul i32 %15, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %16, 10
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  br i1 %26, label %28, label %116

; <label>:28:                                     ; preds = %14, %116
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  store i8* %30, i8** %7, align 8
  %31 = extractvalue { i8*, i32 } %29, 1
  store i32 %31, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %10) #3
  %32 = load i32, i32* @x.513
  %33 = load i32, i32* @y.514
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  br i1 %55, label %57, label %116

; <label>:57:                                     ; preds = %28
  br label %58

; <label>:58:                                     ; preds = %57
  %59 = load i32, i32* @x.513
  %60 = load i32, i32* @y.514
  %61 = sub i32 %59, 1802375532
  %62 = sub i32 %61, 1
  %63 = add i32 %62, 1802375532
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 false, true
  %72 = and i1 %69, false
  %73 = and i1 %67, %71
  %74 = and i1 %70, false
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 false, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  br i1 %83, label %85, label %120

; <label>:85:                                     ; preds = %58, %120
  %86 = load i8*, i8** %7, align 8
  %87 = load i32, i32* %8, align 4
  %88 = insertvalue { i8*, i32 } undef, i8* %86, 0
  %89 = insertvalue { i8*, i32 } %88, i32 %87, 1
  %90 = load i32, i32* @x.513
  %91 = load i32, i32* @y.514
  %92 = sub i32 0, 1
  %93 = add i32 %90, %92
  %94 = sub i32 %90, 1
  %95 = mul i32 %90, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %91, 10
  %99 = xor i1 %97, true
  %100 = xor i1 %98, true
  %101 = xor i1 true, true
  %102 = and i1 %99, true
  %103 = and i1 %97, %101
  %104 = and i1 %100, true
  %105 = and i1 %98, %101
  %106 = or i1 %102, %103
  %107 = or i1 %104, %105
  %108 = xor i1 %106, %107
  %109 = or i1 %99, %100
  %110 = xor i1 %109, true
  %111 = or i1 true, %101
  %112 = and i1 %110, %111
  %113 = or i1 %108, %112
  %114 = or i1 %97, %98
  br i1 %113, label %115, label %120

; <label>:115:                                    ; preds = %85
  resume { i8*, i32 } %89

; <label>:116:                                    ; preds = %28, %14
  %117 = landingpad { i8*, i32 }
          cleanup
  %118 = extractvalue { i8*, i32 } %117, 0
  store i8* %118, i8** %7, align 8
  %119 = extractvalue { i8*, i32 } %117, 1
  store i32 %119, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %10) #3
  br label %28

; <label>:120:                                    ; preds = %85, %58
  %121 = load i8*, i8** %7, align 8
  %122 = load i32, i32* %8, align 4
  %123 = insertvalue { i8*, i32 } undef, i8* %121, 0
  %124 = insertvalue { i8*, i32 } %123, i32 %122, 1
  br label %85
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE18_M_fill_initializeEmRKS1_(%"class.std::vector.11"*, i64, %"class.std::vector.16"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.515
  %7 = load i32, i32* @y.516
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1233608088, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %101
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1233608088, label %19
    i32 -1550892956, label %39
    i32 -1822993835, label %83
    i32 261493005, label %84
  ]

; <label>:18:                                     ; preds = %16
  br label %101

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1550892956, i32 261493005
  store i32 %38, i32* %15
  br label %101

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.11"*, align 8
  %41 = alloca i64, align 8
  %42 = alloca %"class.std::vector.16"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %40, align 8
  store i64 %1, i64* %41, align 8
  store %"class.std::vector.16"* %2, %"class.std::vector.16"** %42, align 8
  %43 = load %"class.std::vector.11"*, %"class.std::vector.11"** %40, align 8
  %44 = bitcast %"class.std::vector.11"* %43 to %"struct.std::_Vector_base.12"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %45, i32 0, i32 0
  %47 = load %"class.std::vector.16"*, %"class.std::vector.16"** %46, align 8
  %48 = load i64, i64* %41, align 8
  %49 = load %"class.std::vector.16"*, %"class.std::vector.16"** %42, align 8
  %50 = bitcast %"class.std::vector.11"* %43 to %"struct.std::_Vector_base.12"*
  %51 = call dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %50) #3
  %52 = call %"class.std::vector.16"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIiSaIiEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector.16"* %47, i64 %48, %"class.std::vector.16"* dereferenceable(24) %49, %"class.std::allocator.13"* dereferenceable(1) %51)
  %53 = bitcast %"class.std::vector.11"* %43 to %"struct.std::_Vector_base.12"*
  %54 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %54, i32 0, i32 1
  store %"class.std::vector.16"* %52, %"class.std::vector.16"** %55, align 8
  %56 = load i32, i32* @x.515
  %57 = load i32, i32* @y.516
  %58 = add i32 %56, -1002161655
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, -1002161655
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 false, true
  %69 = and i1 %66, false
  %70 = and i1 %64, %68
  %71 = and i1 %67, false
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 false, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  %82 = select i1 %80, i32 -1822993835, i32 261493005
  store i32 %82, i32* %15
  br label %101

; <label>:83:                                     ; preds = %16
  ret void

; <label>:84:                                     ; preds = %16
  %85 = alloca %"class.std::vector.11"*, align 8
  %86 = alloca i64, align 8
  %87 = alloca %"class.std::vector.16"*, align 8
  store %"class.std::vector.11"* %0, %"class.std::vector.11"** %85, align 8
  store i64 %1, i64* %86, align 8
  store %"class.std::vector.16"* %2, %"class.std::vector.16"** %87, align 8
  %88 = load %"class.std::vector.11"*, %"class.std::vector.11"** %85, align 8
  %89 = bitcast %"class.std::vector.11"* %88 to %"struct.std::_Vector_base.12"*
  %90 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %89, i32 0, i32 0
  %91 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %90, i32 0, i32 0
  %92 = load %"class.std::vector.16"*, %"class.std::vector.16"** %91, align 8
  %93 = load i64, i64* %86, align 8
  %94 = load %"class.std::vector.16"*, %"class.std::vector.16"** %87, align 8
  %95 = bitcast %"class.std::vector.11"* %88 to %"struct.std::_Vector_base.12"*
  %96 = call dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"* %95) #3
  %97 = call %"class.std::vector.16"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIiSaIiEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector.16"* %92, i64 %93, %"class.std::vector.16"* dereferenceable(24) %94, %"class.std::allocator.13"* dereferenceable(1) %96)
  %98 = bitcast %"class.std::vector.11"* %88 to %"struct.std::_Vector_base.12"*
  %99 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %98, i32 0, i32 0
  %100 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %99, i32 0, i32 1
  store %"class.std::vector.16"* %97, %"class.std::vector.16"** %100, align 8
  store i32 -1550892956, i32* %15
  br label %101

; <label>:101:                                    ; preds = %84, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base.12"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.12"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.12"* %0, %"struct.std::_Vector_base.12"** %2, align 8
  %5 = load %"struct.std::_Vector_base.12"*, %"struct.std::_Vector_base.12"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::vector.16"*, %"class.std::vector.16"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::vector.16"*, %"class.std::vector.16"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::vector.16"*, %"class.std::vector.16"** %13, align 8
  %15 = ptrtoint %"class.std::vector.16"* %11 to i64
  %16 = ptrtoint %"class.std::vector.16"* %14 to i64
  %17 = sub i64 0, %16
  %18 = add i64 %15, %17
  %19 = sub i64 %15, %16
  %20 = sdiv exact i64 %18, 24
  invoke void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.12"* %5, %"class.std::vector.16"* %8, i64 %20)
          to label %21 unwind label %23

; <label>:21:                                     ; preds = %1
  %22 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %22) #3
  ret void

; <label>:23:                                     ; preds = %1
  %24 = load i32, i32* @x.517
  %25 = load i32, i32* @y.518
  %26 = add i32 %24, 36761905
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, 36761905
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 true, true
  %37 = and i1 %34, true
  %38 = and i1 %32, %36
  %39 = and i1 %35, true
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 true, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  br i1 %48, label %50, label %126

; <label>:50:                                     ; preds = %23, %126
  %51 = landingpad { i8*, i32 }
          catch i8* null
  %52 = extractvalue { i8*, i32 } %51, 0
  store i8* %52, i8** %3, align 8
  %53 = extractvalue { i8*, i32 } %51, 1
  store i32 %53, i32* %4, align 4
  %54 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %54) #3
  %55 = load i32, i32* @x.517
  %56 = load i32, i32* @y.518
  %57 = add i32 %55, -674647724
  %58 = sub i32 %57, 1
  %59 = sub i32 %58, -674647724
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  br i1 %67, label %69, label %126

; <label>:69:                                     ; preds = %50
  br label %70

; <label>:70:                                     ; preds = %69
  %71 = load i32, i32* @x.517
  %72 = load i32, i32* @y.518
  %73 = sub i32 %71, 869264765
  %74 = sub i32 %73, 1
  %75 = add i32 %74, 869264765
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 true, true
  %84 = and i1 %81, true
  %85 = and i1 %79, %83
  %86 = and i1 %82, true
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 true, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  br i1 %95, label %97, label %131

; <label>:97:                                     ; preds = %70, %131
  %98 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %98) #13
  %99 = load i32, i32* @x.517
  %100 = load i32, i32* @y.518
  %101 = add i32 %99, -1300693508
  %102 = sub i32 %101, 1
  %103 = sub i32 %102, -1300693508
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = xor i1 %107, true
  %110 = xor i1 %108, true
  %111 = xor i1 false, true
  %112 = and i1 %109, false
  %113 = and i1 %107, %111
  %114 = and i1 %110, false
  %115 = and i1 %108, %111
  %116 = or i1 %112, %113
  %117 = or i1 %114, %115
  %118 = xor i1 %116, %117
  %119 = or i1 %109, %110
  %120 = xor i1 %119, true
  %121 = or i1 false, %111
  %122 = and i1 %120, %121
  %123 = or i1 %118, %122
  %124 = or i1 %107, %108
  br i1 %123, label %125, label %131

; <label>:125:                                    ; preds = %97
  unreachable

; <label>:126:                                    ; preds = %50, %23
  %127 = landingpad { i8*, i32 }
          catch i8* null
  %128 = extractvalue { i8*, i32 } %127, 0
  store i8* %128, i8** %3, align 8
  %129 = extractvalue { i8*, i32 } %127, 1
  store i32 %129, i32* %4, align 4
  %130 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %130) #3
  br label %50

; <label>:131:                                    ; preds = %97, %70
  %132 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %132) #13
  br label %97
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"class.std::allocator.13"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.13"*, align 8
  store %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.13"* %1, %"class.std::allocator.13"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %5 to %"class.std::allocator.13"*
  %7 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %4, align 8
  call void @_ZNSaISt6vectorIiSaIiEEEC2ERKS2_(%"class.std::allocator.13"* %6, %"class.std::allocator.13"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %5, i32 0, i32 0
  store %"class.std::vector.16"* null, %"class.std::vector.16"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %5, i32 0, i32 1
  store %"class.std::vector.16"* null, %"class.std::vector.16"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %5, i32 0, i32 2
  store %"class.std::vector.16"* null, %"class.std::vector.16"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.12"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.12"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.12"* %0, %"struct.std::_Vector_base.12"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.12"*, %"struct.std::_Vector_base.12"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"class.std::vector.16"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.12"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %8, i32 0, i32 0
  store %"class.std::vector.16"* %7, %"class.std::vector.16"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"class.std::vector.16"*, %"class.std::vector.16"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %13, i32 0, i32 1
  store %"class.std::vector.16"* %12, %"class.std::vector.16"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"class.std::vector.16"*, %"class.std::vector.16"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"class.std::vector.16", %"class.std::vector.16"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %20, i32 0, i32 2
  store %"class.std::vector.16"* %19, %"class.std::vector.16"** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %3 to %"class.std::allocator.13"*
  call void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.13"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIiSaIiEEEC2ERKS2_(%"class.std::allocator.13"*, %"class.std::allocator.13"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.13"*, align 8
  %4 = alloca %"class.std::allocator.13"*, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %3, align 8
  store %"class.std::allocator.13"* %1, %"class.std::allocator.13"** %4, align 8
  %5 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %3, align 8
  %6 = bitcast %"class.std::allocator.13"* %5 to %"class.__gnu_cxx::new_allocator.14"*
  %7 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %4, align 8
  %8 = bitcast %"class.std::allocator.13"* %7 to %"class.__gnu_cxx::new_allocator.14"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.14"* %6, %"class.__gnu_cxx::new_allocator.14"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %1, %"class.__gnu_cxx::new_allocator.14"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.16"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.12"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"struct.std::_Vector_base.12"*
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.529
  %9 = load i32, i32* @y.530
  %10 = add i32 %8, 1886523388
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, 1886523388
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 255150357, i32* %18
  %19 = alloca %"class.std::vector.16"*
  br label %20

; <label>:20:                                     ; preds = %2, %72
  %21 = load i32, i32* %18
  switch i32 %21, label %22 [
    i32 255150357, label %23
    i32 -1945651875, label %31
    i32 454301215, label %53
    i32 -1749133419, label %56
    i32 1013056266, label %63
    i32 1839156039, label %64
    i32 -427509990, label %66
  ]

; <label>:22:                                     ; preds = %20
  br label %72

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %7
  %25 = load volatile i1, i1* %6
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 -1945651875, i32 -427509990
  store i32 %30, i32* %18
  br label %72

; <label>:31:                                     ; preds = %20
  %32 = alloca %"struct.std::_Vector_base.12"*, align 8
  %33 = alloca i64, align 8
  store i64* %33, i64** %5
  store %"struct.std::_Vector_base.12"* %0, %"struct.std::_Vector_base.12"** %32, align 8
  %34 = load volatile i64*, i64** %5
  store i64 %1, i64* %34, align 8
  %35 = load %"struct.std::_Vector_base.12"*, %"struct.std::_Vector_base.12"** %32, align 8
  store %"struct.std::_Vector_base.12"* %35, %"struct.std::_Vector_base.12"** %4
  %36 = load volatile i64*, i64** %5
  %37 = load i64, i64* %36, align 8
  %38 = icmp ne i64 %37, 0
  store i1 %38, i1* %3
  %39 = load i32, i32* @x.529
  %40 = load i32, i32* @y.530
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 454301215, i32 -427509990
  store i32 %52, i32* %18
  br label %72

; <label>:53:                                     ; preds = %20
  %54 = load volatile i1, i1* %3
  %55 = select i1 %54, i32 -1749133419, i32 1013056266
  store i32 %55, i32* %18
  br label %72

; <label>:56:                                     ; preds = %20
  %57 = load volatile %"struct.std::_Vector_base.12"*, %"struct.std::_Vector_base.12"** %4
  %58 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %57, i32 0, i32 0
  %59 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %58 to %"class.std::allocator.13"*
  %60 = load volatile i64*, i64** %5
  %61 = load i64, i64* %60, align 8
  %62 = call %"class.std::vector.16"* @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8allocateERS3_m(%"class.std::allocator.13"* dereferenceable(1) %59, i64 %61)
  store i32 1839156039, i32* %18
  store %"class.std::vector.16"* %62, %"class.std::vector.16"** %19
  br label %72

; <label>:63:                                     ; preds = %20
  store i32 1839156039, i32* %18
  store %"class.std::vector.16"* null, %"class.std::vector.16"** %19
  br label %72

; <label>:64:                                     ; preds = %20
  %65 = load %"class.std::vector.16"*, %"class.std::vector.16"** %19
  ret %"class.std::vector.16"* %65

; <label>:66:                                     ; preds = %20
  %67 = alloca %"struct.std::_Vector_base.12"*, align 8
  %68 = alloca i64, align 8
  store %"struct.std::_Vector_base.12"* %0, %"struct.std::_Vector_base.12"** %67, align 8
  store i64 %1, i64* %68, align 8
  %69 = load %"struct.std::_Vector_base.12"*, %"struct.std::_Vector_base.12"** %67, align 8
  %70 = load i64, i64* %68, align 8
  %71 = icmp ne i64 %70, 0
  store i32 -1945651875, i32* %18
  br label %72

; <label>:72:                                     ; preds = %66, %63, %56, %53, %31, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.16"* @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8allocateERS3_m(%"class.std::allocator.13"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.13"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %3, align 8
  %6 = bitcast %"class.std::allocator.13"* %5 to %"class.__gnu_cxx::new_allocator.14"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::vector.16"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.14"* %6, i64 %7, i8* null)
  ret %"class.std::vector.16"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.16"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.14"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.14"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -1802414060, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %83
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1802414060, label %16
    i32 810543234, label %21
    i32 -1051132436, label %48
    i32 -895711669, label %76
    i32 -1725801307, label %77
    i32 -1043382719, label %82
  ]

; <label>:15:                                     ; preds = %13
  br label %83

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 810543234, i32 -1725801307
  store i32 %20, i32* %12
  br label %83

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.533
  %23 = load i32, i32* @y.534
  %24 = sub i32 0, 1
  %25 = add i32 %22, %24
  %26 = sub i32 %22, 1
  %27 = mul i32 %22, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %23, 10
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 false, true
  %34 = and i1 %31, false
  %35 = and i1 %29, %33
  %36 = and i1 %32, false
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 false, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  %47 = select i1 %45, i32 -1051132436, i32 -1043382719
  store i32 %47, i32* %12
  br label %83

; <label>:48:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #15
  %49 = load i32, i32* @x.533
  %50 = load i32, i32* @y.534
  %51 = sub i32 %49, -1707435894
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -1707435894
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -895711669, i32 -1043382719
  store i32 %75, i32* %12
  br label %83

; <label>:76:                                     ; preds = %13
  unreachable

; <label>:77:                                     ; preds = %13
  %78 = load i64, i64* %7, align 8
  %79 = mul i64 %78, 24
  %80 = call i8* @_Znwm(i64 %79)
  %81 = bitcast i8* %80 to %"class.std::vector.16"*
  ret %"class.std::vector.16"* %81

; <label>:82:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #15
  store i32 -1051132436, i32* %12
  br label %83

; <label>:83:                                     ; preds = %82, %48, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.14"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.16"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIiSaIiEEmS2_S2_ET_S4_T0_RKT1_RSaIT2_E(%"class.std::vector.16"*, i64, %"class.std::vector.16"* dereferenceable(24), %"class.std::allocator.13"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.16"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector.16"*, align 8
  %8 = alloca %"class.std::allocator.13"*, align 8
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector.16"* %2, %"class.std::vector.16"** %7, align 8
  store %"class.std::allocator.13"* %3, %"class.std::allocator.13"** %8, align 8
  %9 = load %"class.std::vector.16"*, %"class.std::vector.16"** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load %"class.std::vector.16"*, %"class.std::vector.16"** %7, align 8
  %12 = call %"class.std::vector.16"* @_ZSt20uninitialized_fill_nIPSt6vectorIiSaIiEEmS2_ET_S4_T0_RKT1_(%"class.std::vector.16"* %9, i64 %10, %"class.std::vector.16"* dereferenceable(24) %11)
  ret %"class.std::vector.16"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.13"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.12"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.12"*, align 8
  store %"struct.std::_Vector_base.12"* %0, %"struct.std::_Vector_base.12"** %2, align 8
  %3 = load %"struct.std::_Vector_base.12"*, %"struct.std::_Vector_base.12"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %4 to %"class.std::allocator.13"*
  ret %"class.std::allocator.13"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.16"* @_ZSt20uninitialized_fill_nIPSt6vectorIiSaIiEEmS2_ET_S4_T0_RKT1_(%"class.std::vector.16"*, i64, %"class.std::vector.16"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector.16"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.16"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.16"* %2, %"class.std::vector.16"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"class.std::vector.16"*, %"class.std::vector.16"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %"class.std::vector.16"*, %"class.std::vector.16"** %6, align 8
  %11 = call %"class.std::vector.16"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIiSaIiEEmS4_EET_S6_T0_RKT1_(%"class.std::vector.16"* %8, i64 %9, %"class.std::vector.16"* dereferenceable(24) %10)
  ret %"class.std::vector.16"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.16"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIiSaIiEEmS4_EET_S6_T0_RKT1_(%"class.std::vector.16"*, i64, %"class.std::vector.16"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.16"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.16"*, align 8
  %7 = alloca %"class.std::vector.16"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.16"* %2, %"class.std::vector.16"** %6, align 8
  %10 = load %"class.std::vector.16"*, %"class.std::vector.16"** %4, align 8
  store %"class.std::vector.16"* %10, %"class.std::vector.16"** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %49, %3
  %12 = load i64, i64* %5, align 8
  %13 = icmp ugt i64 %12, 0
  br i1 %13, label %14, label %66

; <label>:14:                                     ; preds = %11
  %15 = load i32, i32* @x.543
  %16 = load i32, i32* @y.544
  %17 = sub i32 %15, 394177780
  %18 = sub i32 %17, 1
  %19 = add i32 %18, 394177780
  %20 = sub i32 %15, 1
  %21 = mul i32 %15, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %16, 10
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  br i1 %27, label %29, label %179

; <label>:29:                                     ; preds = %14, %179
  %30 = load %"class.std::vector.16"*, %"class.std::vector.16"** %7, align 8
  %31 = call %"class.std::vector.16"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector.16"* dereferenceable(24) %30) #3
  %32 = load %"class.std::vector.16"*, %"class.std::vector.16"** %6, align 8
  %33 = load i32, i32* @x.543
  %34 = load i32, i32* @y.544
  %35 = add i32 %33, 1002255590
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 1002255590
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  br i1 %45, label %47, label %179

; <label>:47:                                     ; preds = %29
  invoke void @_ZSt10_ConstructISt6vectorIiSaIiEEJRKS2_EEvPT_DpOT0_(%"class.std::vector.16"* %31, %"class.std::vector.16"* dereferenceable(24) %32)
          to label %48 unwind label %56

; <label>:48:                                     ; preds = %47
  br label %49

; <label>:49:                                     ; preds = %48
  %50 = load i64, i64* %5, align 8
  %51 = sub i64 0, -1
  %52 = sub i64 %50, %51
  %53 = add i64 %50, -1
  store i64 %52, i64* %5, align 8
  %54 = load %"class.std::vector.16"*, %"class.std::vector.16"** %7, align 8
  %55 = getelementptr inbounds %"class.std::vector.16", %"class.std::vector.16"* %54, i32 1
  store %"class.std::vector.16"* %55, %"class.std::vector.16"** %7, align 8
  br label %11

; <label>:56:                                     ; preds = %47
  %57 = landingpad { i8*, i32 }
          catch i8* null
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %8, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %9, align 4
  br label %60

; <label>:60:                                     ; preds = %56
  %61 = load i8*, i8** %8, align 8
  %62 = call i8* @__cxa_begin_catch(i8* %61) #3
  %63 = load %"class.std::vector.16"*, %"class.std::vector.16"** %4, align 8
  %64 = load %"class.std::vector.16"*, %"class.std::vector.16"** %7, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_(%"class.std::vector.16"* %63, %"class.std::vector.16"* %64)
          to label %65 unwind label %122

; <label>:65:                                     ; preds = %60
  invoke void @__cxa_rethrow() #15
          to label %178 unwind label %122

; <label>:66:                                     ; preds = %11
  %67 = load i32, i32* @x.543
  %68 = load i32, i32* @y.544
  %69 = sub i32 %67, 288774873
  %70 = sub i32 %69, 1
  %71 = add i32 %70, 288774873
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = xor i1 %75, true
  %78 = xor i1 %76, true
  %79 = xor i1 false, true
  %80 = and i1 %77, false
  %81 = and i1 %75, %79
  %82 = and i1 %78, false
  %83 = and i1 %76, %79
  %84 = or i1 %80, %81
  %85 = or i1 %82, %83
  %86 = xor i1 %84, %85
  %87 = or i1 %77, %78
  %88 = xor i1 %87, true
  %89 = or i1 false, %79
  %90 = and i1 %88, %89
  %91 = or i1 %86, %90
  %92 = or i1 %75, %76
  br i1 %91, label %93, label %183

; <label>:93:                                     ; preds = %66, %183
  %94 = load %"class.std::vector.16"*, %"class.std::vector.16"** %7, align 8
  %95 = load i32, i32* @x.543
  %96 = load i32, i32* @y.544
  %97 = sub i32 %95, 400047312
  %98 = sub i32 %97, 1
  %99 = add i32 %98, 400047312
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = xor i1 %103, true
  %106 = xor i1 %104, true
  %107 = xor i1 true, true
  %108 = and i1 %105, true
  %109 = and i1 %103, %107
  %110 = and i1 %106, true
  %111 = and i1 %104, %107
  %112 = or i1 %108, %109
  %113 = or i1 %110, %111
  %114 = xor i1 %112, %113
  %115 = or i1 %105, %106
  %116 = xor i1 %115, true
  %117 = or i1 true, %107
  %118 = and i1 %116, %117
  %119 = or i1 %114, %118
  %120 = or i1 %103, %104
  br i1 %119, label %121, label %183

; <label>:121:                                    ; preds = %93
  ret %"class.std::vector.16"* %94

; <label>:122:                                    ; preds = %65, %60
  %123 = landingpad { i8*, i32 }
          cleanup
  %124 = extractvalue { i8*, i32 } %123, 0
  store i8* %124, i8** %8, align 8
  %125 = extractvalue { i8*, i32 } %123, 1
  store i32 %125, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %126 unwind label %175

; <label>:126:                                    ; preds = %122
  br label %128
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:128:                                    ; preds = %126
  %129 = load i32, i32* @x.543
  %130 = load i32, i32* @y.544
  %131 = sub i32 %129, -2111548715
  %132 = sub i32 %131, 1
  %133 = add i32 %132, -2111548715
  %134 = sub i32 %129, 1
  %135 = mul i32 %129, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %130, 10
  %139 = xor i1 %137, true
  %140 = xor i1 %138, true
  %141 = xor i1 true, true
  %142 = and i1 %139, true
  %143 = and i1 %137, %141
  %144 = and i1 %140, true
  %145 = and i1 %138, %141
  %146 = or i1 %142, %143
  %147 = or i1 %144, %145
  %148 = xor i1 %146, %147
  %149 = or i1 %139, %140
  %150 = xor i1 %149, true
  %151 = or i1 true, %141
  %152 = and i1 %150, %151
  %153 = or i1 %148, %152
  %154 = or i1 %137, %138
  br i1 %153, label %155, label %185

; <label>:155:                                    ; preds = %128, %185
  %156 = load i8*, i8** %8, align 8
  %157 = load i32, i32* %9, align 4
  %158 = insertvalue { i8*, i32 } undef, i8* %156, 0
  %159 = insertvalue { i8*, i32 } %158, i32 %157, 1
  %160 = load i32, i32* @x.543
  %161 = load i32, i32* @y.544
  %162 = add i32 %160, -2019517340
  %163 = sub i32 %162, 1
  %164 = sub i32 %163, -2019517340
  %165 = sub i32 %160, 1
  %166 = mul i32 %160, %164
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %161, 10
  %170 = and i1 %168, %169
  %171 = xor i1 %168, %169
  %172 = or i1 %170, %171
  %173 = or i1 %168, %169
  br i1 %172, label %174, label %185

; <label>:174:                                    ; preds = %155
  resume { i8*, i32 } %159

; <label>:175:                                    ; preds = %122
  %176 = landingpad { i8*, i32 }
          catch i8* null
  %177 = extractvalue { i8*, i32 } %176, 0
  call void @__clang_call_terminate(i8* %177) #13
  unreachable

; <label>:178:                                    ; preds = %65
  unreachable

; <label>:179:                                    ; preds = %29, %14
  %180 = load %"class.std::vector.16"*, %"class.std::vector.16"** %7, align 8
  %181 = call %"class.std::vector.16"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector.16"* dereferenceable(24) %180) #3
  %182 = load %"class.std::vector.16"*, %"class.std::vector.16"** %6, align 8
  br label %29

; <label>:183:                                    ; preds = %93, %66
  %184 = load %"class.std::vector.16"*, %"class.std::vector.16"** %7, align 8
  br label %93

; <label>:185:                                    ; preds = %155, %128
  %186 = load i8*, i8** %8, align 8
  %187 = load i32, i32* %9, align 4
  %188 = insertvalue { i8*, i32 } undef, i8* %186, 0
  %189 = insertvalue { i8*, i32 } %188, i32 %187, 1
  br label %155
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIiSaIiEEJRKS2_EEvPT_DpOT0_(%"class.std::vector.16"*, %"class.std::vector.16"* dereferenceable(24)) #0 comdat {
  %3 = alloca %"class.std::vector.16"*, align 8
  %4 = alloca %"class.std::vector.16"*, align 8
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %3, align 8
  store %"class.std::vector.16"* %1, %"class.std::vector.16"** %4, align 8
  %5 = load %"class.std::vector.16"*, %"class.std::vector.16"** %3, align 8
  %6 = bitcast %"class.std::vector.16"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::vector.16"*
  %8 = load %"class.std::vector.16"*, %"class.std::vector.16"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector.16"* @_ZSt7forwardIRKSt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector.16"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorIiSaIiEEC2ERKS1_(%"class.std::vector.16"* %7, %"class.std::vector.16"* dereferenceable(24) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.16"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector.16"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector.16"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.547
  %6 = load i32, i32* @y.548
  %7 = add i32 %5, 2109846271
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 2109846271
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1746832280, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %53
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1746832280, label %19
    i32 607957293, label %27
    i32 1899655101, label %46
    i32 -1011590690, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %53

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 607957293, i32 -1011590690
  store i32 %26, i32* %15
  br label %53

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.16"*, align 8
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %28, align 8
  %29 = load %"class.std::vector.16"*, %"class.std::vector.16"** %28, align 8
  %30 = bitcast %"class.std::vector.16"* %29 to i8*
  %31 = bitcast i8* %30 to %"class.std::vector.16"*
  store %"class.std::vector.16"* %31, %"class.std::vector.16"** %2
  %32 = load i32, i32* @x.547
  %33 = load i32, i32* @y.548
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 1899655101, i32 -1011590690
  store i32 %45, i32* %15
  br label %53

; <label>:46:                                     ; preds = %16
  %47 = load volatile %"class.std::vector.16"*, %"class.std::vector.16"** %2
  ret %"class.std::vector.16"* %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"class.std::vector.16"*, align 8
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %49, align 8
  %50 = load %"class.std::vector.16"*, %"class.std::vector.16"** %49, align 8
  %51 = bitcast %"class.std::vector.16"* %50 to i8*
  %52 = bitcast i8* %51 to %"class.std::vector.16"*
  store i32 607957293, i32* %15
  br label %53

; <label>:53:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_(%"class.std::vector.16"*, %"class.std::vector.16"*) #0 comdat {
  %3 = alloca %"class.std::vector.16"*, align 8
  %4 = alloca %"class.std::vector.16"*, align 8
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %3, align 8
  store %"class.std::vector.16"* %1, %"class.std::vector.16"** %4, align 8
  %5 = load %"class.std::vector.16"*, %"class.std::vector.16"** %3, align 8
  %6 = load %"class.std::vector.16"*, %"class.std::vector.16"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIiSaIiEEEEvT_S6_(%"class.std::vector.16"* %5, %"class.std::vector.16"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.16"* @_ZSt7forwardIRKSt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector.16"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector.16"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.551
  %6 = load i32, i32* @y.552
  %7 = add i32 %5, 1748727036
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1748727036
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1237465524, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1237465524, label %19
    i32 -2073763310, label %27
    i32 -306144348, label %56
    i32 -939273183, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -2073763310, i32 -939273183
  store i32 %26, i32* %15
  br label %61

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.16"*, align 8
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %28, align 8
  %29 = load %"class.std::vector.16"*, %"class.std::vector.16"** %28, align 8
  store %"class.std::vector.16"* %29, %"class.std::vector.16"** %2
  %30 = load i32, i32* @x.551
  %31 = load i32, i32* @y.552
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -306144348, i32 -939273183
  store i32 %55, i32* %15
  br label %61

; <label>:56:                                     ; preds = %16
  %57 = load volatile %"class.std::vector.16"*, %"class.std::vector.16"** %2
  ret %"class.std::vector.16"* %57

; <label>:58:                                     ; preds = %16
  %59 = alloca %"class.std::vector.16"*, align 8
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %59, align 8
  %60 = load %"class.std::vector.16"*, %"class.std::vector.16"** %59, align 8
  store i32 -2073763310, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2ERKS1_(%"class.std::vector.16"*, %"class.std::vector.16"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.553
  %4 = load i32, i32* @y.554
  %5 = sub i32 %3, -757832256
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -757832256
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %166

; <label>:17:                                     ; preds = %2, %166
  %18 = alloca %"class.std::vector.16"*, align 8
  %19 = alloca %"class.std::vector.16"*, align 8
  %20 = alloca %"class.std::allocator.0", align 1
  %21 = alloca i8*
  %22 = alloca i32
  %23 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %24 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %18, align 8
  store %"class.std::vector.16"* %1, %"class.std::vector.16"** %19, align 8
  %25 = load %"class.std::vector.16"*, %"class.std::vector.16"** %18, align 8
  %26 = bitcast %"class.std::vector.16"* %25 to %"struct.std::_Vector_base.17"*
  %27 = load %"class.std::vector.16"*, %"class.std::vector.16"** %19, align 8
  %28 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.16"* %27) #3
  %29 = load %"class.std::vector.16"*, %"class.std::vector.16"** %19, align 8
  %30 = bitcast %"class.std::vector.16"* %29 to %"struct.std::_Vector_base.17"*
  %31 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.17"* %30) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIiEE17_S_select_on_copyERKS1_(%"class.std::allocator.0"* sret %20, %"class.std::allocator.0"* dereferenceable(1) %31)
  %32 = load i32, i32* @x.553
  %33 = load i32, i32* @y.554
  %34 = sub i32 %32, -1977587859
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -1977587859
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  br i1 %56, label %58, label %166

; <label>:58:                                     ; preds = %17
  invoke void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base.17"* %26, i64 %28, %"class.std::allocator.0"* dereferenceable(1) %20)
          to label %59 unwind label %152

; <label>:59:                                     ; preds = %58
  %60 = load i32, i32* @x.553
  %61 = load i32, i32* @y.554
  %62 = add i32 %60, -1965393056
  %63 = sub i32 %62, 1
  %64 = sub i32 %63, -1965393056
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  br i1 %72, label %74, label %181

; <label>:74:                                     ; preds = %59, %181
  call void @_ZNSaIiED2Ev(%"class.std::allocator.0"* %20) #3
  %75 = load %"class.std::vector.16"*, %"class.std::vector.16"** %19, align 8
  %76 = call i32* @_ZNKSt6vectorIiSaIiEE5beginEv(%"class.std::vector.16"* %75) #3
  %77 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %23, i32 0, i32 0
  store i32* %76, i32** %77, align 8
  %78 = load %"class.std::vector.16"*, %"class.std::vector.16"** %19, align 8
  %79 = call i32* @_ZNKSt6vectorIiSaIiEE3endEv(%"class.std::vector.16"* %78) #3
  %80 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %24, i32 0, i32 0
  store i32* %79, i32** %80, align 8
  %81 = bitcast %"class.std::vector.16"* %25 to %"struct.std::_Vector_base.17"*
  %82 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %81, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %82, i32 0, i32 0
  %84 = load i32*, i32** %83, align 8
  %85 = bitcast %"class.std::vector.16"* %25 to %"struct.std::_Vector_base.17"*
  %86 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.17"* %85) #3
  %87 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %23, i32 0, i32 0
  %88 = load i32*, i32** %87, align 8
  %89 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %24, i32 0, i32 0
  %90 = load i32*, i32** %89, align 8
  %91 = load i32, i32* @x.553
  %92 = load i32, i32* @y.554
  %93 = sub i32 %91, -1078056292
  %94 = sub i32 %93, 1
  %95 = add i32 %94, -1078056292
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = xor i1 %99, true
  %102 = xor i1 %100, true
  %103 = xor i1 false, true
  %104 = and i1 %101, false
  %105 = and i1 %99, %103
  %106 = and i1 %102, false
  %107 = and i1 %100, %103
  %108 = or i1 %104, %105
  %109 = or i1 %106, %107
  %110 = xor i1 %108, %109
  %111 = or i1 %101, %102
  %112 = xor i1 %111, true
  %113 = or i1 false, %103
  %114 = and i1 %112, %113
  %115 = or i1 %110, %114
  %116 = or i1 %99, %100
  br i1 %115, label %117, label %181

; <label>:117:                                    ; preds = %74
  %118 = invoke i32* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E(i32* %88, i32* %90, i32* %84, %"class.std::allocator.0"* dereferenceable(1) %86)
          to label %119 unwind label %156

; <label>:119:                                    ; preds = %117
  %120 = load i32, i32* @x.553
  %121 = load i32, i32* @y.554
  %122 = sub i32 0, 1
  %123 = add i32 %120, %122
  %124 = sub i32 %120, 1
  %125 = mul i32 %120, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %121, 10
  %129 = and i1 %127, %128
  %130 = xor i1 %127, %128
  %131 = or i1 %129, %130
  %132 = or i1 %127, %128
  br i1 %131, label %133, label %198

; <label>:133:                                    ; preds = %119, %198
  %134 = bitcast %"class.std::vector.16"* %25 to %"struct.std::_Vector_base.17"*
  %135 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %134, i32 0, i32 0
  %136 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %135, i32 0, i32 1
  store i32* %118, i32** %136, align 8
  %137 = load i32, i32* @x.553
  %138 = load i32, i32* @y.554
  %139 = add i32 %137, 257959640
  %140 = sub i32 %139, 1
  %141 = sub i32 %140, 257959640
  %142 = sub i32 %137, 1
  %143 = mul i32 %137, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %138, 10
  %147 = and i1 %145, %146
  %148 = xor i1 %145, %146
  %149 = or i1 %147, %148
  %150 = or i1 %145, %146
  br i1 %149, label %151, label %198

; <label>:151:                                    ; preds = %133
  ret void

; <label>:152:                                    ; preds = %58
  %153 = landingpad { i8*, i32 }
          cleanup
  %154 = extractvalue { i8*, i32 } %153, 0
  store i8* %154, i8** %21, align 8
  %155 = extractvalue { i8*, i32 } %153, 1
  store i32 %155, i32* %22, align 4
  call void @_ZNSaIiED2Ev(%"class.std::allocator.0"* %20) #3
  br label %161

; <label>:156:                                    ; preds = %117
  %157 = landingpad { i8*, i32 }
          cleanup
  %158 = extractvalue { i8*, i32 } %157, 0
  store i8* %158, i8** %21, align 8
  %159 = extractvalue { i8*, i32 } %157, 1
  store i32 %159, i32* %22, align 4
  %160 = bitcast %"class.std::vector.16"* %25 to %"struct.std::_Vector_base.17"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.17"* %160) #3
  br label %161

; <label>:161:                                    ; preds = %156, %152
  %162 = load i8*, i8** %21, align 8
  %163 = load i32, i32* %22, align 4
  %164 = insertvalue { i8*, i32 } undef, i8* %162, 0
  %165 = insertvalue { i8*, i32 } %164, i32 %163, 1
  resume { i8*, i32 } %165

; <label>:166:                                    ; preds = %17, %2
  %167 = alloca %"class.std::vector.16"*, align 8
  %168 = alloca %"class.std::vector.16"*, align 8
  %169 = alloca %"class.std::allocator.0", align 1
  %170 = alloca i8*
  %171 = alloca i32
  %172 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %173 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %167, align 8
  store %"class.std::vector.16"* %1, %"class.std::vector.16"** %168, align 8
  %174 = load %"class.std::vector.16"*, %"class.std::vector.16"** %167, align 8
  %175 = bitcast %"class.std::vector.16"* %174 to %"struct.std::_Vector_base.17"*
  %176 = load %"class.std::vector.16"*, %"class.std::vector.16"** %168, align 8
  %177 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.16"* %176) #3
  %178 = load %"class.std::vector.16"*, %"class.std::vector.16"** %168, align 8
  %179 = bitcast %"class.std::vector.16"* %178 to %"struct.std::_Vector_base.17"*
  %180 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.17"* %179) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIiEE17_S_select_on_copyERKS1_(%"class.std::allocator.0"* sret %169, %"class.std::allocator.0"* dereferenceable(1) %180)
  br label %17

; <label>:181:                                    ; preds = %74, %59
  call void @_ZNSaIiED2Ev(%"class.std::allocator.0"* %20) #3
  %182 = load %"class.std::vector.16"*, %"class.std::vector.16"** %19, align 8
  %183 = call i32* @_ZNKSt6vectorIiSaIiEE5beginEv(%"class.std::vector.16"* %182) #3
  %184 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %23, i32 0, i32 0
  store i32* %183, i32** %184, align 8
  %185 = load %"class.std::vector.16"*, %"class.std::vector.16"** %19, align 8
  %186 = call i32* @_ZNKSt6vectorIiSaIiEE3endEv(%"class.std::vector.16"* %185) #3
  %187 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %24, i32 0, i32 0
  store i32* %186, i32** %187, align 8
  %188 = bitcast %"class.std::vector.16"* %25 to %"struct.std::_Vector_base.17"*
  %189 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %188, i32 0, i32 0
  %190 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %189, i32 0, i32 0
  %191 = load i32*, i32** %190, align 8
  %192 = bitcast %"class.std::vector.16"* %25 to %"struct.std::_Vector_base.17"*
  %193 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.17"* %192) #3
  %194 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %23, i32 0, i32 0
  %195 = load i32*, i32** %194, align 8
  %196 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %24, i32 0, i32 0
  %197 = load i32*, i32** %196, align 8
  br label %74

; <label>:198:                                    ; preds = %133, %119
  %199 = bitcast %"class.std::vector.16"* %25 to %"struct.std::_Vector_base.17"*
  %200 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %199, i32 0, i32 0
  %201 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %200, i32 0, i32 1
  store i32* %118, i32** %201, align 8
  br label %133
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.16"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.555
  %6 = load i32, i32* @y.556
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1212234362, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %101
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1212234362, label %18
    i32 1199089918, label %26
    i32 1154249901, label %59
    i32 -527579490, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %101

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1199089918, i32 -527579490
  store i32 %25, i32* %14
  br label %101

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.16"*, align 8
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %27, align 8
  %28 = load %"class.std::vector.16"*, %"class.std::vector.16"** %27, align 8
  %29 = bitcast %"class.std::vector.16"* %28 to %"struct.std::_Vector_base.17"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %30, i32 0, i32 1
  %32 = load i32*, i32** %31, align 8
  %33 = bitcast %"class.std::vector.16"* %28 to %"struct.std::_Vector_base.17"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = ptrtoint i32* %32 to i64
  %38 = ptrtoint i32* %36 to i64
  %39 = add i64 %37, -7505302570349856281
  %40 = sub i64 %39, %38
  %41 = sub i64 %40, -7505302570349856281
  %42 = sub i64 %37, %38
  %43 = sdiv exact i64 %41, 4
  store i64 %43, i64* %2
  %44 = load i32, i32* @x.555
  %45 = load i32, i32* @y.556
  %46 = add i32 %44, -1804037582
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -1804037582
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1154249901, i32 -527579490
  store i32 %58, i32* %14
  br label %101

; <label>:59:                                     ; preds = %15
  %60 = load volatile i64, i64* %2
  ret i64 %60

; <label>:61:                                     ; preds = %15
  %62 = alloca %"class.std::vector.16"*, align 8
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %62, align 8
  %63 = load %"class.std::vector.16"*, %"class.std::vector.16"** %62, align 8
  %64 = bitcast %"class.std::vector.16"* %63 to %"struct.std::_Vector_base.17"*
  %65 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %64, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %65, i32 0, i32 1
  %67 = load i32*, i32** %66, align 8
  %68 = bitcast %"class.std::vector.16"* %63 to %"struct.std::_Vector_base.17"*
  %69 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %68, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %69, i32 0, i32 0
  %71 = load i32*, i32** %70, align 8
  %72 = ptrtoint i32* %67 to i64
  %73 = ptrtoint i32* %71 to i64
  %74 = sub i64 %72, 3743772856771373815
  %75 = sub i64 %74, %73
  %76 = add i64 %75, 3743772856771373815
  %77 = sub i64 %72, %73
  %78 = add i64 0, -1867752888801130240
  %79 = sub i64 %78, %76
  %80 = sub i64 %79, -1867752888801130240
  %81 = sub i64 0, %76
  %82 = sub i64 0, %80
  %83 = sub i64 0, 4
  %84 = add i64 %82, %83
  %85 = sub i64 0, %84
  %86 = add i64 %80, 4
  %87 = add i64 0, 4739546772168587723
  %88 = sub i64 %87, %76
  %89 = sub i64 %88, 4739546772168587723
  %90 = sub i64 0, %76
  %91 = sub i64 0, %89
  %92 = sub i64 0, 4
  %93 = add i64 %91, %92
  %94 = sub i64 0, %93
  %95 = add i64 %89, 4
  %96 = sub i64 0, 4
  %97 = add i64 %76, %96
  %98 = sub i64 %76, 4
  %99 = mul i64 %97, 4
  %100 = sdiv exact i64 %76, 4
  store i32 1199089918, i32* %14
  br label %101

; <label>:101:                                    ; preds = %61, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIiEE17_S_select_on_copyERKS1_(%"class.std::allocator.0"* noalias sret, %"class.std::allocator.0"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %3, align 8
  %4 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %3, align 8
  call void @_ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator.0"* sret %0, %"class.std::allocator.0"* dereferenceable(1) %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.17"*) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.0"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.559
  %6 = load i32, i32* @y.560
  %7 = sub i32 %5, -652664843
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -652664843
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1764191100, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1764191100, label %19
    i32 -1946896148, label %27
    i32 1637799571, label %47
    i32 -1217129527, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1946896148, i32 -1217129527
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base.17"*, align 8
  store %"struct.std::_Vector_base.17"* %0, %"struct.std::_Vector_base.17"** %28, align 8
  %29 = load %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %30 to %"class.std::allocator.0"*
  store %"class.std::allocator.0"* %31, %"class.std::allocator.0"** %2
  %32 = load i32, i32* @x.559
  %33 = load i32, i32* @y.560
  %34 = add i32 %32, -1493720401
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -1493720401
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 1637799571, i32 -1217129527
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile %"class.std::allocator.0"*, %"class.std::allocator.0"** %2
  ret %"class.std::allocator.0"* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"struct.std::_Vector_base.17"*, align 8
  store %"struct.std::_Vector_base.17"* %0, %"struct.std::_Vector_base.17"** %50, align 8
  %51 = load %"struct.std::_Vector_base.17"*, %"struct.std::_Vector_base.17"** %50, align 8
  %52 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %51, i32 0, i32 0
  %53 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %52 to %"class.std::allocator.0"*
  store i32 -1946896148, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiiET0_T_SA_S9_RSaIT1_E(i32*, i32*, i32*, %"class.std::allocator.0"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.561
  %9 = load i32, i32* @y.562
  %10 = add i32 %8, 292412927
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, 292412927
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 635790387, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %84
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 635790387, label %22
    i32 -1190857794, label %30
    i32 -187899393, label %63
    i32 -1285691002, label %65
  ]

; <label>:21:                                     ; preds = %19
  br label %84

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -1190857794, i32 -1285691002
  store i32 %29, i32* %18
  br label %84

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %32 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %33 = alloca i32*, align 8
  %34 = alloca %"class.std::allocator.0"*, align 8
  %35 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %36 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %31, i32 0, i32 0
  store i32* %0, i32** %37, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %32, i32 0, i32 0
  store i32* %1, i32** %38, align 8
  store i32* %2, i32** %33, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %34, align 8
  %39 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %35 to i8*
  %40 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 8, i1 false)
  %41 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %36 to i8*
  %42 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = load i32*, i32** %33, align 8
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %35, i32 0, i32 0
  %45 = load i32*, i32** %44, align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %36, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  %48 = call i32* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_(i32* %45, i32* %47, i32* %43)
  store i32* %48, i32** %5
  %49 = load i32, i32* @x.561
  %50 = load i32, i32* @y.562
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -187899393, i32 -1285691002
  store i32 %62, i32* %18
  br label %84

; <label>:63:                                     ; preds = %19
  %64 = load volatile i32*, i32** %5
  ret i32* %64

; <label>:65:                                     ; preds = %19
  %66 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %67 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %68 = alloca i32*, align 8
  %69 = alloca %"class.std::allocator.0"*, align 8
  %70 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %71 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %72 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %66, i32 0, i32 0
  store i32* %0, i32** %72, align 8
  %73 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %67, i32 0, i32 0
  store i32* %1, i32** %73, align 8
  store i32* %2, i32** %68, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %69, align 8
  %74 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %70 to i8*
  %75 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %74, i8* %75, i64 8, i32 8, i1 false)
  %76 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %71 to i8*
  %77 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %76, i8* %77, i64 8, i32 8, i1 false)
  %78 = load i32*, i32** %68, align 8
  %79 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %70, i32 0, i32 0
  %80 = load i32*, i32** %79, align 8
  %81 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %71, i32 0, i32 0
  %82 = load i32*, i32** %81, align 8
  %83 = call i32* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_(i32* %80, i32* %82, i32* %78)
  store i32 -1190857794, i32* %18
  br label %84

; <label>:84:                                     ; preds = %65, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNKSt6vectorIiSaIiEE5beginEv(%"class.std::vector.16"*) #4 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.563
  %6 = load i32, i32* @y.564
  %7 = add i32 %5, -1726683897
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1726683897
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -974600665, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -974600665, label %19
    i32 -726382840, label %27
    i32 866019099, label %53
    i32 -1864752251, label %55
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -726382840, i32 -1864752251
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %29 = alloca %"class.std::vector.16"*, align 8
  %30 = alloca i32*, align 8
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %29, align 8
  %31 = load %"class.std::vector.16"*, %"class.std::vector.16"** %29, align 8
  %32 = bitcast %"class.std::vector.16"* %31 to %"struct.std::_Vector_base.17"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  store i32* %35, i32** %30, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.43"* %28, i32** dereferenceable(8) %30) #3
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %28, i32 0, i32 0
  %37 = load i32*, i32** %36, align 8
  store i32* %37, i32** %2
  %38 = load i32, i32* @x.563
  %39 = load i32, i32* @y.564
  %40 = add i32 %38, 278311864
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 278311864
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 866019099, i32 -1864752251
  store i32 %52, i32* %15
  br label %66

; <label>:53:                                     ; preds = %16
  %54 = load volatile i32*, i32** %2
  ret i32* %54

; <label>:55:                                     ; preds = %16
  %56 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %57 = alloca %"class.std::vector.16"*, align 8
  %58 = alloca i32*, align 8
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %57, align 8
  %59 = load %"class.std::vector.16"*, %"class.std::vector.16"** %57, align 8
  %60 = bitcast %"class.std::vector.16"* %59 to %"struct.std::_Vector_base.17"*
  %61 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %60, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %61, i32 0, i32 0
  %63 = load i32*, i32** %62, align 8
  store i32* %63, i32** %58, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.43"* %56, i32** dereferenceable(8) %58) #3
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %56, i32 0, i32 0
  %65 = load i32*, i32** %64, align 8
  store i32 -726382840, i32* %15
  br label %66

; <label>:66:                                     ; preds = %55, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNKSt6vectorIiSaIiEE3endEv(%"class.std::vector.16"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %3 = alloca %"class.std::vector.16"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %3, align 8
  %5 = load %"class.std::vector.16"*, %"class.std::vector.16"** %3, align 8
  %6 = bitcast %"class.std::vector.16"* %5 to %"struct.std::_Vector_base.17"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.17", %"struct.std::_Vector_base.17"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 1
  %9 = load i32*, i32** %8, align 8
  store i32* %9, i32** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.43"* %2, i32** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %2, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  ret i32* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator.0"* noalias sret, %"class.std::allocator.0"* dereferenceable(1)) #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %3, align 8
  %4 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %3, align 8
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.0"* %0, %"class.std::allocator.0"* dereferenceable(1) %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2ERKS_(%"class.std::allocator.0"*, %"class.std::allocator.0"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.0"*, align 8
  %4 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %3, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %4, align 8
  %5 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %3, align 8
  %6 = bitcast %"class.std::allocator.0"* %5 to %"class.__gnu_cxx::new_allocator.1"*
  %7 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %4, align 8
  %8 = bitcast %"class.std::allocator.0"* %7 to %"class.__gnu_cxx::new_allocator.1"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.1"* %6, %"class.__gnu_cxx::new_allocator.1"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.571
  %8 = load i32, i32* @y.572
  %9 = add i32 %7, 848627384
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 848627384
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -905354499, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %95
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -905354499, label %21
    i32 333968557, label %29
    i32 1447248797, label %74
    i32 -32343504, label %76
  ]

; <label>:20:                                     ; preds = %18
  br label %95

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 333968557, i32 -32343504
  store i32 %28, i32* %17
  br label %95

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %32 = alloca i32*, align 8
  %33 = alloca i8, align 1
  %34 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %35 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %30, i32 0, i32 0
  store i32* %0, i32** %36, align 8
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %31, i32 0, i32 0
  store i32* %1, i32** %37, align 8
  store i32* %2, i32** %32, align 8
  store i8 1, i8* %33, align 1
  %38 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %34 to i8*
  %39 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 8, i32 8, i1 false)
  %40 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %35 to i8*
  %41 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 8, i32 8, i1 false)
  %42 = load i32*, i32** %32, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %34, i32 0, i32 0
  %44 = load i32*, i32** %43, align 8
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %35, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  %47 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_(i32* %44, i32* %46, i32* %42)
  store i32* %47, i32** %4
  %48 = load i32, i32* @x.571
  %49 = load i32, i32* @y.572
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 1447248797, i32 -32343504
  store i32 %73, i32* %17
  br label %95

; <label>:74:                                     ; preds = %18
  %75 = load volatile i32*, i32** %4
  ret i32* %75

; <label>:76:                                     ; preds = %18
  %77 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %78 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %79 = alloca i32*, align 8
  %80 = alloca i8, align 1
  %81 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %82 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %83 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %77, i32 0, i32 0
  store i32* %0, i32** %83, align 8
  %84 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %78, i32 0, i32 0
  store i32* %1, i32** %84, align 8
  store i32* %2, i32** %79, align 8
  store i8 1, i8* %80, align 1
  %85 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %81 to i8*
  %86 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 8, i32 8, i1 false)
  %87 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %82 to i8*
  %88 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %87, i8* %88, i64 8, i32 8, i1 false)
  %89 = load i32*, i32** %79, align 8
  %90 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %81, i32 0, i32 0
  %91 = load i32*, i32** %90, align 8
  %92 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %82, i32 0, i32 0
  %93 = load i32*, i32** %92, align 8
  %94 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_(i32* %91, i32* %93, i32* %89)
  store i32 333968557, i32* %17
  br label %95

; <label>:95:                                     ; preds = %76, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiEET0_T_SC_SB_(i32*, i32*, i32*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %4, i32 0, i32 0
  store i32* %0, i32** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %5, i32 0, i32 0
  store i32* %1, i32** %10, align 8
  store i32* %2, i32** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load i32*, i32** %6, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %7, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %8, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = call i32* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_(i32* %17, i32* %19, i32* %15)
  ret i32* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET0_T_SA_S9_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %4, i32 0, i32 0
  store i32* %0, i32** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %5, i32 0, i32 0
  store i32* %1, i32** %12, align 8
  store i32* %2, i32** %6, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %8, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i32* %16)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %7, i32 0, i32 0
  store i32* %17, i32** %18, align 8
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %10 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %10, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = call i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i32* %22)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %9, i32 0, i32 0
  store i32* %23, i32** %24, align 8
  %25 = load i32*, i32** %6, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %7, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %9, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = call i32* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_(i32* %27, i32* %29, i32* %25)
  ret i32* %30
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEPiET1_T0_SA_S9_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %4, i32 0, i32 0
  store i32* %0, i32** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %5, i32 0, i32 0
  store i32* %1, i32** %10, align 8
  store i32* %2, i32** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %7, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i32* %14)
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %8, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i32* %19)
  %21 = load i32*, i32** %6, align 8
  %22 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %21)
  %23 = call i32* @_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_(i32* %15, i32* %20, i32* %22)
  ret i32* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i32*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %3, i32 0, i32 0
  store i32* %0, i32** %5, align 8
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %4 to i8*
  %7 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 8, i32 8, i1 false)
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %4, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = call i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEELb0EE7_S_baseES7_(i32* %9)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %2, i32 0, i32 0
  store i32* %10, i32** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %2, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  ret i32* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.581
  %8 = load i32, i32* @y.582
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 377337168, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %74
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 377337168, label %20
    i32 -2118101396, label %28
    i32 -494705162, label %63
    i32 -1154041647, label %65
  ]

; <label>:19:                                     ; preds = %17
  br label %74

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -2118101396, i32 -1154041647
  store i32 %27, i32* %16
  br label %74

; <label>:28:                                     ; preds = %17
  %29 = alloca i32*, align 8
  %30 = alloca i32*, align 8
  %31 = alloca i32*, align 8
  %32 = alloca i8, align 1
  store i32* %0, i32** %29, align 8
  store i32* %1, i32** %30, align 8
  store i32* %2, i32** %31, align 8
  store i8 1, i8* %32, align 1
  %33 = load i32*, i32** %29, align 8
  %34 = load i32*, i32** %30, align 8
  %35 = load i32*, i32** %31, align 8
  %36 = call i32* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32* %33, i32* %34, i32* %35)
  store i32* %36, i32** %4
  %37 = load i32, i32* @x.581
  %38 = load i32, i32* @y.582
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 -494705162, i32 -1154041647
  store i32 %62, i32* %16
  br label %74

; <label>:63:                                     ; preds = %17
  %64 = load volatile i32*, i32** %4
  ret i32* %64

; <label>:65:                                     ; preds = %17
  %66 = alloca i32*, align 8
  %67 = alloca i32*, align 8
  %68 = alloca i32*, align 8
  %69 = alloca i8, align 1
  store i32* %0, i32** %66, align 8
  store i32* %1, i32** %67, align 8
  store i32* %2, i32** %68, align 8
  store i8 1, i8* %69, align 1
  %70 = load i32*, i32** %66, align 8
  %71 = load i32*, i32** %67, align 8
  %72 = load i32*, i32** %68, align 8
  %73 = call i32* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32* %70, i32* %71, i32* %72)
  store i32 -2118101396, i32* %16
  br label %74

; <label>:74:                                     ; preds = %65, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i32*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %2, i32 0, i32 0
  store i32* %0, i32** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %3, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = call i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEELb1EE7_S_baseES7_(i32* %8)
  ret i32* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32*, i32*, i32*) #4 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i64, align 8
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = load i32*, i32** %5, align 8
  %11 = ptrtoint i32* %9 to i64
  %12 = ptrtoint i32* %10 to i64
  %13 = add i64 %11, 472820758814962516
  %14 = sub i64 %13, %12
  %15 = sub i64 %14, 472820758814962516
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 4
  store i64 %17, i64* %8, align 8
  %18 = load i64, i64* %8, align 8
  store i64 %18, i64* %4
  %19 = alloca i32
  store i32 667018539, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %38
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 667018539, label %23
    i32 -434345671, label %27
    i32 -161236729, label %34
  ]

; <label>:22:                                     ; preds = %20
  br label %38

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %4
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 -434345671, i32 -161236729
  store i32 %26, i32* %19
  br label %38

; <label>:27:                                     ; preds = %20
  %28 = load i32*, i32** %7, align 8
  %29 = bitcast i32* %28 to i8*
  %30 = load i32*, i32** %5, align 8
  %31 = bitcast i32* %30 to i8*
  %32 = load i64, i64* %8, align 8
  %33 = mul i64 4, %32
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %29, i8* %31, i64 %33, i32 4, i1 false)
  store i32 -161236729, i32* %19
  br label %38

; <label>:34:                                     ; preds = %20
  %35 = load i32*, i32** %7, align 8
  %36 = load i64, i64* %8, align 8
  %37 = getelementptr inbounds i32, i32* %35, i64 %36
  ret i32* %37

; <label>:38:                                     ; preds = %27, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEELb1EE7_S_baseES7_(i32*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %2, i32 0, i32 0
  store i32* %0, i32** %3, align 8
  %4 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.43"* %2) #3
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.43"*) #4 comdat align 2 {
  %2 = alloca i32**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.589
  %6 = load i32, i32* @y.590
  %7 = add i32 %5, -1080618621
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1080618621
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 700329242, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %76
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 700329242, label %19
    i32 -1930366870, label %39
    i32 -864905160, label %70
    i32 1609573453, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %76

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1930366870, i32 1609573453
  store i32 %38, i32* %15
  br label %76

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.43"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.43"* %0, %"class.__gnu_cxx::__normal_iterator.43"** %40, align 8
  %41 = load %"class.__gnu_cxx::__normal_iterator.43"*, %"class.__gnu_cxx::__normal_iterator.43"** %40, align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %41, i32 0, i32 0
  store i32** %42, i32*** %2
  %43 = load i32, i32* @x.589
  %44 = load i32, i32* @y.590
  %45 = sub i32 %43, -2095894132
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -2095894132
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -864905160, i32 1609573453
  store i32 %69, i32* %15
  br label %76

; <label>:70:                                     ; preds = %16
  %71 = load volatile i32**, i32*** %2
  ret i32** %71

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.__gnu_cxx::__normal_iterator.43"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.43"* %0, %"class.__gnu_cxx::__normal_iterator.43"** %73, align 8
  %74 = load %"class.__gnu_cxx::__normal_iterator.43"*, %"class.__gnu_cxx::__normal_iterator.43"** %73, align 8
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %74, i32 0, i32 0
  store i32 -1930366870, i32* %15
  br label %76

; <label>:76:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEELb0EE7_S_baseES7_(i32*) #4 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.591
  %6 = load i32, i32* @y.592
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1633823646, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %59
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1633823646, label %18
    i32 1710600817, label %26
    i32 266982088, label %49
    i32 1096877958, label %51
  ]

; <label>:17:                                     ; preds = %15
  br label %59

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1710600817, i32 1096877958
  store i32 %25, i32* %14
  br label %59

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %28, i32 0, i32 0
  store i32* %0, i32** %29, align 8
  %30 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %27 to i8*
  %31 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 8, i32 8, i1 false)
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %27, i32 0, i32 0
  %33 = load i32*, i32** %32, align 8
  store i32* %33, i32** %2
  %34 = load i32, i32* @x.591
  %35 = load i32, i32* @y.592
  %36 = sub i32 %34, -1712496709
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -1712496709
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 266982088, i32 1096877958
  store i32 %48, i32* %14
  br label %59

; <label>:49:                                     ; preds = %15
  %50 = load volatile i32*, i32** %2
  ret i32* %50

; <label>:51:                                     ; preds = %15
  %52 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %53 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %53, i32 0, i32 0
  store i32* %0, i32** %54, align 8
  %55 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %52 to i8*
  %56 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %55, i8* %56, i64 8, i32 8, i1 false)
  %57 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %52, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  store i32 1710600817, i32* %14
  br label %59

; <label>:59:                                     ; preds = %51, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.43"*, i32** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.593
  %6 = load i32, i32* @y.594
  %7 = add i32 %5, 1457302249
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1457302249
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -964501589, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -964501589, label %19
    i32 -753182033, label %27
    i32 -30907208, label %61
    i32 736837962, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -753182033, i32 736837962
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.43"*, align 8
  %29 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator.43"* %0, %"class.__gnu_cxx::__normal_iterator.43"** %28, align 8
  store i32** %1, i32*** %29, align 8
  %30 = load %"class.__gnu_cxx::__normal_iterator.43"*, %"class.__gnu_cxx::__normal_iterator.43"** %28, align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %30, i32 0, i32 0
  %32 = load i32**, i32*** %29, align 8
  %33 = load i32*, i32** %32, align 8
  store i32* %33, i32** %31, align 8
  %34 = load i32, i32* @x.593
  %35 = load i32, i32* @y.594
  %36 = sub i32 %34, 192197241
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 192197241
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -30907208, i32 736837962
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.__gnu_cxx::__normal_iterator.43"*, align 8
  %64 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator.43"* %0, %"class.__gnu_cxx::__normal_iterator.43"** %63, align 8
  store i32** %1, i32*** %64, align 8
  %65 = load %"class.__gnu_cxx::__normal_iterator.43"*, %"class.__gnu_cxx::__normal_iterator.43"** %63, align 8
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %65, i32 0, i32 0
  %67 = load i32**, i32*** %64, align 8
  %68 = load i32*, i32** %67, align 8
  store i32* %68, i32** %66, align 8
  store i32 -753182033, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIiSaIiEEEEvT_S6_(%"class.std::vector.16"*, %"class.std::vector.16"*) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.16"*, align 8
  %4 = alloca %"class.std::vector.16"*, align 8
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %3, align 8
  store %"class.std::vector.16"* %1, %"class.std::vector.16"** %4, align 8
  %5 = alloca i32
  store i32 -1697321795, i32* %5
  br label %6

; <label>:6:                                      ; preds = %2, %54
  %7 = load i32, i32* %5
  switch i32 %7, label %8 [
    i32 -1697321795, label %9
    i32 -1317836556, label %14
    i32 -732117841, label %17
    i32 1189216071, label %20
    i32 1543140804, label %36
    i32 1301301086, label %52
    i32 -1866509421, label %53
  ]

; <label>:8:                                      ; preds = %6
  br label %54

; <label>:9:                                      ; preds = %6
  %10 = load %"class.std::vector.16"*, %"class.std::vector.16"** %3, align 8
  %11 = load %"class.std::vector.16"*, %"class.std::vector.16"** %4, align 8
  %12 = icmp ne %"class.std::vector.16"* %10, %11
  %13 = select i1 %12, i32 -1317836556, i32 1189216071
  store i32 %13, i32* %5
  br label %54

; <label>:14:                                     ; preds = %6
  %15 = load %"class.std::vector.16"*, %"class.std::vector.16"** %3, align 8
  %16 = call %"class.std::vector.16"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector.16"* dereferenceable(24) %15) #3
  call void @_ZSt8_DestroyISt6vectorIiSaIiEEEvPT_(%"class.std::vector.16"* %16)
  store i32 -732117841, i32* %5
  br label %54

; <label>:17:                                     ; preds = %6
  %18 = load %"class.std::vector.16"*, %"class.std::vector.16"** %3, align 8
  %19 = getelementptr inbounds %"class.std::vector.16", %"class.std::vector.16"* %18, i32 1
  store %"class.std::vector.16"* %19, %"class.std::vector.16"** %3, align 8
  store i32 -1697321795, i32* %5
  br label %54

; <label>:20:                                     ; preds = %6
  %21 = load i32, i32* @x.595
  %22 = load i32, i32* @y.596
  %23 = add i32 %21, 1775432044
  %24 = sub i32 %23, 1
  %25 = sub i32 %24, 1775432044
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  %35 = select i1 %33, i32 1543140804, i32 -1866509421
  store i32 %35, i32* %5
  br label %54

; <label>:36:                                     ; preds = %6
  %37 = load i32, i32* @x.595
  %38 = load i32, i32* @y.596
  %39 = sub i32 %37, 1146416590
  %40 = sub i32 %39, 1
  %41 = add i32 %40, 1146416590
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 1301301086, i32 -1866509421
  store i32 %51, i32* %5
  br label %54

; <label>:52:                                     ; preds = %6
  ret void

; <label>:53:                                     ; preds = %6
  store i32 1543140804, i32* %5
  br label %54

; <label>:54:                                     ; preds = %53, %36, %20, %17, %14, %9, %8
  br label %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorIiSaIiEEEvPT_(%"class.std::vector.16"*) #4 comdat {
  %2 = alloca %"class.std::vector.16"*, align 8
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %2, align 8
  %3 = load %"class.std::vector.16"*, %"class.std::vector.16"** %2, align 8
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.16"* %3) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.12"*, %"class.std::vector.16"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.16"*
  %5 = alloca %"struct.std::_Vector_base.12"*
  %6 = alloca %"struct.std::_Vector_base.12"*, align 8
  %7 = alloca %"class.std::vector.16"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.12"* %0, %"struct.std::_Vector_base.12"** %6, align 8
  store %"class.std::vector.16"* %1, %"class.std::vector.16"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.12"*, %"struct.std::_Vector_base.12"** %6, align 8
  store %"struct.std::_Vector_base.12"* %9, %"struct.std::_Vector_base.12"** %5
  %10 = load %"class.std::vector.16"*, %"class.std::vector.16"** %7, align 8
  store %"class.std::vector.16"* %10, %"class.std::vector.16"** %4
  %11 = alloca i32
  store i32 1564427636, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1564427636, label %15
    i32 -715639621, label %19
    i32 268060864, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::vector.16"*, %"class.std::vector.16"** %4
  %17 = icmp ne %"class.std::vector.16"* %16, null
  %18 = select i1 %17, i32 -715639621, i32 268060864
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.12"*, %"struct.std::_Vector_base.12"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.12", %"struct.std::_Vector_base.12"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %21 to %"class.std::allocator.13"*
  %23 = load %"class.std::vector.16"*, %"class.std::vector.16"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE10deallocateERS3_PS2_m(%"class.std::allocator.13"* dereferenceable(1) %22, %"class.std::vector.16"* %23, i64 %24)
  store i32 268060864, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE10deallocateERS3_PS2_m(%"class.std::allocator.13"* dereferenceable(1), %"class.std::vector.16"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.13"*, align 8
  %5 = alloca %"class.std::vector.16"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %4, align 8
  store %"class.std::vector.16"* %1, %"class.std::vector.16"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %4, align 8
  %8 = bitcast %"class.std::allocator.13"* %7 to %"class.__gnu_cxx::new_allocator.14"*
  %9 = load %"class.std::vector.16"*, %"class.std::vector.16"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.14"* %8, %"class.std::vector.16"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.14"*, %"class.std::vector.16"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  %5 = alloca %"class.std::vector.16"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %4, align 8
  store %"class.std::vector.16"* %1, %"class.std::vector.16"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %4, align 8
  %8 = load %"class.std::vector.16"*, %"class.std::vector.16"** %5, align 8
  %9 = bitcast %"class.std::vector.16"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::vector.16"*, %"class.std::vector.16"*, %"class.std::allocator.13"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.605
  %7 = load i32, i32* @y.606
  %8 = sub i32 %6, -381159433
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -381159433
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1717558879, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %67
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1717558879, label %20
    i32 707423176, label %40
    i32 -1327222865, label %60
    i32 -1753637922, label %61
  ]

; <label>:19:                                     ; preds = %17
  br label %67

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 707423176, i32 -1753637922
  store i32 %39, i32* %16
  br label %67

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector.16"*, align 8
  %42 = alloca %"class.std::vector.16"*, align 8
  %43 = alloca %"class.std::allocator.13"*, align 8
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %41, align 8
  store %"class.std::vector.16"* %1, %"class.std::vector.16"** %42, align 8
  store %"class.std::allocator.13"* %2, %"class.std::allocator.13"** %43, align 8
  %44 = load %"class.std::vector.16"*, %"class.std::vector.16"** %41, align 8
  %45 = load %"class.std::vector.16"*, %"class.std::vector.16"** %42, align 8
  call void @_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_(%"class.std::vector.16"* %44, %"class.std::vector.16"* %45)
  %46 = load i32, i32* @x.605
  %47 = load i32, i32* @y.606
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -1327222865, i32 -1753637922
  store i32 %59, i32* %16
  br label %67

; <label>:60:                                     ; preds = %17
  ret void

; <label>:61:                                     ; preds = %17
  %62 = alloca %"class.std::vector.16"*, align 8
  %63 = alloca %"class.std::vector.16"*, align 8
  %64 = alloca %"class.std::allocator.13"*, align 8
  store %"class.std::vector.16"* %0, %"class.std::vector.16"** %62, align 8
  store %"class.std::vector.16"* %1, %"class.std::vector.16"** %63, align 8
  store %"class.std::allocator.13"* %2, %"class.std::allocator.13"** %64, align 8
  %65 = load %"class.std::vector.16"*, %"class.std::vector.16"** %62, align 8
  %66 = load %"class.std::vector.16"*, %"class.std::vector.16"** %63, align 8
  call void @_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_(%"class.std::vector.16"* %65, %"class.std::vector.16"* %66)
  store i32 707423176, i32* %16
  br label %67

; <label>:67:                                     ; preds = %61, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define internal void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EEC2Ev(%"class.std::_Deque_base.21"*) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::_Deque_base.21"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::_Deque_base.21"* %0, %"class.std::_Deque_base.21"** %2, align 8
  %5 = load %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %2, align 8
  %6 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %5, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE11_Deque_implC2Ev(%"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %6)
  invoke void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE17_M_initialize_mapEm(%"class.std::_Deque_base.21"* %5, i64 0)
          to label %7 unwind label %8

; <label>:7:                                      ; preds = %1
  ret void

; <label>:8:                                      ; preds = %1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  store i8* %10, i8** %3, align 8
  %11 = extractvalue { i8*, i32 } %9, 1
  store i32 %11, i32* %4, align 4
  call void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE11_Deque_implD2Ev(%"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %6) #3
  br label %12

; <label>:12:                                     ; preds = %8
  %13 = load i8*, i8** %3, align 8
  %14 = load i32, i32* %4, align 4
  %15 = insertvalue { i8*, i32 } undef, i8* %13, 0
  %16 = insertvalue { i8*, i32 } %15, i32 %14, 1
  resume { i8*, i32 } %16
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE11_Deque_implC2Ev(%"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"*) unnamed_addr #4 align 2 {
  %2 = alloca %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %0, %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"** %2, align 8
  %3 = load %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"*, %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %3 to %"class.std::allocator.22"*
  call void @_ZNSaIZ4mainE5PointEC2Ev(%"class.std::allocator.22"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %3, i32 0, i32 0
  store %struct.Point** null, %struct.Point*** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %3, i32 0, i32 1
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %3, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIZ4mainE5PointRS0_PS0_EC2Ev(%"struct.std::_Deque_iterator.25"* %7) #3
  %8 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %3, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIZ4mainE5PointRS0_PS0_EC2Ev(%"struct.std::_Deque_iterator.25"* %8) #3
  ret void
}

; Function Attrs: noinline uwtable
define internal void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE17_M_initialize_mapEm(%"class.std::_Deque_base.21"*, i64) #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base.21"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.Point**, align 8
  %9 = alloca %struct.Point**, align 8
  %10 = alloca i8*
  %11 = alloca i32
  store %"class.std::_Deque_base.21"* %0, %"class.std::_Deque_base.21"** %3, align 8
  store i64 %1, i64* %4, align 8
  %12 = load %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %3, align 8
  %13 = load i64, i64* %4, align 8
  %14 = call i64 @_ZSt16__deque_buf_sizem(i64 24)
  %15 = udiv i64 %13, %14
  %16 = sub i64 0, 1
  %17 = sub i64 %15, %16
  %18 = add i64 %15, 1
  store i64 %17, i64* %5, align 8
  store i64 8, i64* %6, align 8
  %19 = load i64, i64* %5, align 8
  %20 = sub i64 %19, -4181342488503812311
  %21 = add i64 %20, 2
  %22 = add i64 %21, -4181342488503812311
  %23 = add i64 %19, 2
  store i64 %22, i64* %7, align 8
  %24 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %6, i64* dereferenceable(8) %7)
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %12, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %26, i32 0, i32 1
  store i64 %25, i64* %27, align 8
  %28 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %12, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %28, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = call %struct.Point** @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE15_M_allocate_mapEm(%"class.std::_Deque_base.21"* %12, i64 %30)
  %32 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %12, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %32, i32 0, i32 0
  store %struct.Point** %31, %struct.Point*** %33, align 8
  %34 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %12, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %34, i32 0, i32 0
  %36 = load %struct.Point**, %struct.Point*** %35, align 8
  %37 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %12, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %37, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = load i64, i64* %5, align 8
  %41 = sub i64 0, %40
  %42 = add i64 %39, %41
  %43 = sub i64 %39, %40
  %44 = udiv i64 %42, 2
  %45 = getelementptr inbounds %struct.Point*, %struct.Point** %36, i64 %44
  store %struct.Point** %45, %struct.Point*** %8, align 8
  %46 = load %struct.Point**, %struct.Point*** %8, align 8
  %47 = load i64, i64* %5, align 8
  %48 = getelementptr inbounds %struct.Point*, %struct.Point** %46, i64 %47
  store %struct.Point** %48, %struct.Point*** %9, align 8
  %49 = load %struct.Point**, %struct.Point*** %8, align 8
  %50 = load %struct.Point**, %struct.Point*** %9, align 8
  invoke void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE15_M_create_nodesEPPS0_S4_(%"class.std::_Deque_base.21"* %12, %struct.Point** %49, %struct.Point** %50)
          to label %51 unwind label %52

; <label>:51:                                     ; preds = %2
  br label %74

; <label>:52:                                     ; preds = %2
  %53 = landingpad { i8*, i32 }
          catch i8* null
  %54 = extractvalue { i8*, i32 } %53, 0
  store i8* %54, i8** %10, align 8
  %55 = extractvalue { i8*, i32 } %53, 1
  store i32 %55, i32* %11, align 4
  br label %56

; <label>:56:                                     ; preds = %52
  %57 = load i8*, i8** %10, align 8
  %58 = call i8* @__cxa_begin_catch(i8* %57) #3
  %59 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %12, i32 0, i32 0
  %60 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %59, i32 0, i32 0
  %61 = load %struct.Point**, %struct.Point*** %60, align 8
  %62 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %12, i32 0, i32 0
  %63 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %62, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  call void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE17_M_deallocate_mapEPPS0_m(%"class.std::_Deque_base.21"* %12, %struct.Point** %61, i64 %64) #3
  %65 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %12, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %65, i32 0, i32 0
  store %struct.Point** null, %struct.Point*** %66, align 8
  %67 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %12, i32 0, i32 0
  %68 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %67, i32 0, i32 1
  store i64 0, i64* %68, align 8
  invoke void @__cxa_rethrow() #15
          to label %150 unwind label %69

; <label>:69:                                     ; preds = %56
  %70 = landingpad { i8*, i32 }
          cleanup
  %71 = extractvalue { i8*, i32 } %70, 0
  store i8* %71, i8** %10, align 8
  %72 = extractvalue { i8*, i32 } %70, 1
  store i32 %72, i32* %11, align 4
  invoke void @__cxa_end_catch()
          to label %73 unwind label %147

; <label>:73:                                     ; preds = %69
  br label %100

; <label>:74:                                     ; preds = %51
  %75 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %12, i32 0, i32 0
  %76 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %75, i32 0, i32 2
  %77 = load %struct.Point**, %struct.Point*** %8, align 8
  call void @_ZNSt15_Deque_iteratorIZ4mainE5PointRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator.25"* %76, %struct.Point** %77) #3
  %78 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %12, i32 0, i32 0
  %79 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %78, i32 0, i32 3
  %80 = load %struct.Point**, %struct.Point*** %9, align 8
  %81 = getelementptr inbounds %struct.Point*, %struct.Point** %80, i64 -1
  call void @_ZNSt15_Deque_iteratorIZ4mainE5PointRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator.25"* %79, %struct.Point** %81) #3
  %82 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %12, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %82, i32 0, i32 2
  %84 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %83, i32 0, i32 1
  %85 = load %struct.Point*, %struct.Point** %84, align 8
  %86 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %12, i32 0, i32 0
  %87 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %86, i32 0, i32 2
  %88 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %87, i32 0, i32 0
  store %struct.Point* %85, %struct.Point** %88, align 8
  %89 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %12, i32 0, i32 0
  %90 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %89, i32 0, i32 3
  %91 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %90, i32 0, i32 1
  %92 = load %struct.Point*, %struct.Point** %91, align 8
  %93 = load i64, i64* %4, align 8
  %94 = call i64 @_ZSt16__deque_buf_sizem(i64 24)
  %95 = urem i64 %93, %94
  %96 = getelementptr inbounds %struct.Point, %struct.Point* %92, i64 %95
  %97 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %12, i32 0, i32 0
  %98 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %97, i32 0, i32 3
  %99 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %98, i32 0, i32 0
  store %struct.Point* %96, %struct.Point** %99, align 8
  ret void

; <label>:100:                                    ; preds = %73
  %101 = load i32, i32* @x.611
  %102 = load i32, i32* @y.612
  %103 = add i32 %101, 1389548606
  %104 = sub i32 %103, 1
  %105 = sub i32 %104, 1389548606
  %106 = sub i32 %101, 1
  %107 = mul i32 %101, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %102, 10
  %111 = and i1 %109, %110
  %112 = xor i1 %109, %110
  %113 = or i1 %111, %112
  %114 = or i1 %109, %110
  br i1 %113, label %115, label %151

; <label>:115:                                    ; preds = %100, %151
  %116 = load i8*, i8** %10, align 8
  %117 = load i32, i32* %11, align 4
  %118 = insertvalue { i8*, i32 } undef, i8* %116, 0
  %119 = insertvalue { i8*, i32 } %118, i32 %117, 1
  %120 = load i32, i32* @x.611
  %121 = load i32, i32* @y.612
  %122 = sub i32 %120, 576757090
  %123 = sub i32 %122, 1
  %124 = add i32 %123, 576757090
  %125 = sub i32 %120, 1
  %126 = mul i32 %120, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %121, 10
  %130 = xor i1 %128, true
  %131 = xor i1 %129, true
  %132 = xor i1 true, true
  %133 = and i1 %130, true
  %134 = and i1 %128, %132
  %135 = and i1 %131, true
  %136 = and i1 %129, %132
  %137 = or i1 %133, %134
  %138 = or i1 %135, %136
  %139 = xor i1 %137, %138
  %140 = or i1 %130, %131
  %141 = xor i1 %140, true
  %142 = or i1 true, %132
  %143 = and i1 %141, %142
  %144 = or i1 %139, %143
  %145 = or i1 %128, %129
  br i1 %144, label %146, label %151

; <label>:146:                                    ; preds = %115
  resume { i8*, i32 } %119

; <label>:147:                                    ; preds = %69
  %148 = landingpad { i8*, i32 }
          catch i8* null
  %149 = extractvalue { i8*, i32 } %148, 0
  call void @__clang_call_terminate(i8* %149) #13
  unreachable

; <label>:150:                                    ; preds = %56
  unreachable

; <label>:151:                                    ; preds = %115, %100
  %152 = load i8*, i8** %10, align 8
  %153 = load i32, i32* %11, align 4
  %154 = insertvalue { i8*, i32 } undef, i8* %152, 0
  %155 = insertvalue { i8*, i32 } %154, i32 %153, 1
  br label %115
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE11_Deque_implD2Ev(%"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"*) unnamed_addr #4 align 2 {
  %2 = alloca %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %0, %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"** %2, align 8
  %3 = load %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"*, %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %3 to %"class.std::allocator.22"*
  call void @_ZNSaIZ4mainE5PointED2Ev(%"class.std::allocator.22"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSaIZ4mainE5PointEC2Ev(%"class.std::allocator.22"*) unnamed_addr #4 align 2 {
  %2 = alloca %"class.std::allocator.22"*, align 8
  store %"class.std::allocator.22"* %0, %"class.std::allocator.22"** %2, align 8
  %3 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %2, align 8
  %4 = bitcast %"class.std::allocator.22"* %3 to %"class.__gnu_cxx::new_allocator.23"*
  call void @_ZN9__gnu_cxx13new_allocatorIZ4mainE5PointEC2Ev(%"class.__gnu_cxx::new_allocator.23"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSt15_Deque_iteratorIZ4mainE5PointRS0_PS0_EC2Ev(%"struct.std::_Deque_iterator.25"*) unnamed_addr #4 align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.617
  %5 = load i32, i32* @y.618
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 548509421, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %79
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 548509421, label %17
    i32 1682209230, label %37
    i32 -273162390, label %71
    i32 -7397027, label %72
  ]

; <label>:16:                                     ; preds = %14
  br label %79

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 1682209230, i32 -7397027
  store i32 %36, i32* %13
  br label %79

; <label>:37:                                     ; preds = %14
  %38 = alloca %"struct.std::_Deque_iterator.25"*, align 8
  store %"struct.std::_Deque_iterator.25"* %0, %"struct.std::_Deque_iterator.25"** %38, align 8
  %39 = load %"struct.std::_Deque_iterator.25"*, %"struct.std::_Deque_iterator.25"** %38, align 8
  %40 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %39, i32 0, i32 0
  store %struct.Point* null, %struct.Point** %40, align 8
  %41 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %39, i32 0, i32 1
  store %struct.Point* null, %struct.Point** %41, align 8
  %42 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %39, i32 0, i32 2
  store %struct.Point* null, %struct.Point** %42, align 8
  %43 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %39, i32 0, i32 3
  store %struct.Point** null, %struct.Point*** %43, align 8
  %44 = load i32, i32* @x.617
  %45 = load i32, i32* @y.618
  %46 = add i32 %44, 551006902
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 551006902
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -273162390, i32 -7397027
  store i32 %70, i32* %13
  br label %79

; <label>:71:                                     ; preds = %14
  ret void

; <label>:72:                                     ; preds = %14
  %73 = alloca %"struct.std::_Deque_iterator.25"*, align 8
  store %"struct.std::_Deque_iterator.25"* %0, %"struct.std::_Deque_iterator.25"** %73, align 8
  %74 = load %"struct.std::_Deque_iterator.25"*, %"struct.std::_Deque_iterator.25"** %73, align 8
  %75 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %74, i32 0, i32 0
  store %struct.Point* null, %struct.Point** %75, align 8
  %76 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %74, i32 0, i32 1
  store %struct.Point* null, %struct.Point** %76, align 8
  %77 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %74, i32 0, i32 2
  store %struct.Point* null, %struct.Point** %77, align 8
  %78 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %74, i32 0, i32 3
  store %struct.Point** null, %struct.Point*** %78, align 8
  store i32 1682209230, i32* %13
  br label %79

; <label>:79:                                     ; preds = %72, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZN9__gnu_cxx13new_allocatorIZ4mainE5PointEC2Ev(%"class.__gnu_cxx::new_allocator.23"*) unnamed_addr #4 align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %0, %"class.__gnu_cxx::new_allocator.23"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.23"*, %"class.__gnu_cxx::new_allocator.23"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define internal %struct.Point** @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE15_M_allocate_mapEm(%"class.std::_Deque_base.21"*, i64) #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base.21"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::allocator.44", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::_Deque_base.21"* %0, %"class.std::_Deque_base.21"** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = load %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %3, align 8
  call void @_ZNKSt11_Deque_baseIZ4mainE5PointSaIS0_EE20_M_get_map_allocatorEv(%"class.std::allocator.44"* sret %5, %"class.std::_Deque_base.21"* %8) #3
  %9 = load i64, i64* %4, align 8
  %10 = invoke %struct.Point** @_ZNSt16allocator_traitsISaIPZ4mainE5PointEE8allocateERS2_m(%"class.std::allocator.44"* dereferenceable(1) %5, i64 %9)
          to label %11 unwind label %52

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* @x.621
  %13 = load i32, i32* @y.622
  %14 = sub i32 0, 1
  %15 = add i32 %12, %14
  %16 = sub i32 %12, 1
  %17 = mul i32 %12, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %13, 10
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  br i1 %35, label %37, label %61

; <label>:37:                                     ; preds = %11, %61
  call void @_ZNSaIPZ4mainE5PointED2Ev(%"class.std::allocator.44"* %5) #3
  %38 = load i32, i32* @x.621
  %39 = load i32, i32* @y.622
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  br i1 %49, label %51, label %61

; <label>:51:                                     ; preds = %37
  ret %struct.Point** %10

; <label>:52:                                     ; preds = %2
  %53 = landingpad { i8*, i32 }
          cleanup
  %54 = extractvalue { i8*, i32 } %53, 0
  store i8* %54, i8** %6, align 8
  %55 = extractvalue { i8*, i32 } %53, 1
  store i32 %55, i32* %7, align 4
  call void @_ZNSaIPZ4mainE5PointED2Ev(%"class.std::allocator.44"* %5) #3
  br label %56

; <label>:56:                                     ; preds = %52
  %57 = load i8*, i8** %6, align 8
  %58 = load i32, i32* %7, align 4
  %59 = insertvalue { i8*, i32 } undef, i8* %57, 0
  %60 = insertvalue { i8*, i32 } %59, i32 %58, 1
  resume { i8*, i32 } %60

; <label>:61:                                     ; preds = %37, %11
  call void @_ZNSaIPZ4mainE5PointED2Ev(%"class.std::allocator.44"* %5) #3
  br label %37
}

; Function Attrs: noinline uwtable
define internal void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE15_M_create_nodesEPPS0_S4_(%"class.std::_Deque_base.21"*, %struct.Point**, %struct.Point**) #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.623
  %5 = load i32, i32* @y.624
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %5, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %430

; <label>:17:                                     ; preds = %3, %430
  %18 = alloca %"class.std::_Deque_base.21"*, align 8
  %19 = alloca %struct.Point**, align 8
  %20 = alloca %struct.Point**, align 8
  %21 = alloca %struct.Point**, align 8
  %22 = alloca i8*
  %23 = alloca i32
  store %"class.std::_Deque_base.21"* %0, %"class.std::_Deque_base.21"** %18, align 8
  store %struct.Point** %1, %struct.Point*** %19, align 8
  store %struct.Point** %2, %struct.Point*** %20, align 8
  %24 = load %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %18, align 8
  %25 = load %struct.Point**, %struct.Point*** %19, align 8
  store %struct.Point** %25, %struct.Point*** %21, align 8
  %26 = load i32, i32* @x.623
  %27 = load i32, i32* @y.624
  %28 = sub i32 %26, -1779742624
  %29 = sub i32 %28, 1
  %30 = add i32 %29, -1779742624
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 true, true
  %39 = and i1 %36, true
  %40 = and i1 %34, %38
  %41 = and i1 %37, true
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 true, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  br i1 %50, label %52, label %430

; <label>:52:                                     ; preds = %17
  br label %53

; <label>:53:                                     ; preds = %198, %52
  %54 = load i32, i32* @x.623
  %55 = load i32, i32* @y.624
  %56 = add i32 %54, -1645671870
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, -1645671870
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  br i1 %66, label %68, label %439

; <label>:68:                                     ; preds = %53, %439
  %69 = load %struct.Point**, %struct.Point*** %21, align 8
  %70 = load %struct.Point**, %struct.Point*** %20, align 8
  %71 = icmp ult %struct.Point** %69, %70
  %72 = load i32, i32* @x.623
  %73 = load i32, i32* @y.624
  %74 = sub i32 0, 1
  %75 = add i32 %72, %74
  %76 = sub i32 %72, 1
  %77 = mul i32 %72, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %73, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  br i1 %83, label %85, label %439

; <label>:85:                                     ; preds = %68
  br i1 %71, label %86, label %208

; <label>:86:                                     ; preds = %85
  %87 = invoke %struct.Point* @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE16_M_allocate_nodeEv(%"class.std::_Deque_base.21"* %24)
          to label %88 unwind label %199

; <label>:88:                                     ; preds = %86
  %89 = load i32, i32* @x.623
  %90 = load i32, i32* @y.624
  %91 = sub i32 0, 1
  %92 = add i32 %89, %91
  %93 = sub i32 %89, 1
  %94 = mul i32 %89, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %90, 10
  %98 = xor i1 %96, true
  %99 = xor i1 %97, true
  %100 = xor i1 true, true
  %101 = and i1 %98, true
  %102 = and i1 %96, %100
  %103 = and i1 %99, true
  %104 = and i1 %97, %100
  %105 = or i1 %101, %102
  %106 = or i1 %103, %104
  %107 = xor i1 %105, %106
  %108 = or i1 %98, %99
  %109 = xor i1 %108, true
  %110 = or i1 true, %100
  %111 = and i1 %109, %110
  %112 = or i1 %107, %111
  %113 = or i1 %96, %97
  br i1 %112, label %114, label %443

; <label>:114:                                    ; preds = %88, %443
  %115 = load %struct.Point**, %struct.Point*** %21, align 8
  store %struct.Point* %87, %struct.Point** %115, align 8
  %116 = load i32, i32* @x.623
  %117 = load i32, i32* @y.624
  %118 = sub i32 0, 1
  %119 = add i32 %116, %118
  %120 = sub i32 %116, 1
  %121 = mul i32 %116, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %117, 10
  %125 = xor i1 %123, true
  %126 = xor i1 %124, true
  %127 = xor i1 false, true
  %128 = and i1 %125, false
  %129 = and i1 %123, %127
  %130 = and i1 %126, false
  %131 = and i1 %124, %127
  %132 = or i1 %128, %129
  %133 = or i1 %130, %131
  %134 = xor i1 %132, %133
  %135 = or i1 %125, %126
  %136 = xor i1 %135, true
  %137 = or i1 false, %127
  %138 = and i1 %136, %137
  %139 = or i1 %134, %138
  %140 = or i1 %123, %124
  br i1 %139, label %141, label %443

; <label>:141:                                    ; preds = %114
  br label %142

; <label>:142:                                    ; preds = %141
  %143 = load i32, i32* @x.623
  %144 = load i32, i32* @y.624
  %145 = add i32 %143, -807153190
  %146 = sub i32 %145, 1
  %147 = sub i32 %146, -807153190
  %148 = sub i32 %143, 1
  %149 = mul i32 %143, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %144, 10
  %153 = xor i1 %151, true
  %154 = xor i1 %152, true
  %155 = xor i1 true, true
  %156 = and i1 %153, true
  %157 = and i1 %151, %155
  %158 = and i1 %154, true
  %159 = and i1 %152, %155
  %160 = or i1 %156, %157
  %161 = or i1 %158, %159
  %162 = xor i1 %160, %161
  %163 = or i1 %153, %154
  %164 = xor i1 %163, true
  %165 = or i1 true, %155
  %166 = and i1 %164, %165
  %167 = or i1 %162, %166
  %168 = or i1 %151, %152
  br i1 %167, label %169, label %445

; <label>:169:                                    ; preds = %142, %445
  %170 = load %struct.Point**, %struct.Point*** %21, align 8
  %171 = getelementptr inbounds %struct.Point*, %struct.Point** %170, i32 1
  store %struct.Point** %171, %struct.Point*** %21, align 8
  %172 = load i32, i32* @x.623
  %173 = load i32, i32* @y.624
  %174 = add i32 %172, -512899071
  %175 = sub i32 %174, 1
  %176 = sub i32 %175, -512899071
  %177 = sub i32 %172, 1
  %178 = mul i32 %172, %176
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %173, 10
  %182 = xor i1 %180, true
  %183 = xor i1 %181, true
  %184 = xor i1 false, true
  %185 = and i1 %182, false
  %186 = and i1 %180, %184
  %187 = and i1 %183, false
  %188 = and i1 %181, %184
  %189 = or i1 %185, %186
  %190 = or i1 %187, %188
  %191 = xor i1 %189, %190
  %192 = or i1 %182, %183
  %193 = xor i1 %192, true
  %194 = or i1 false, %184
  %195 = and i1 %193, %194
  %196 = or i1 %191, %195
  %197 = or i1 %180, %181
  br i1 %196, label %198, label %445

; <label>:198:                                    ; preds = %169
  br label %53

; <label>:199:                                    ; preds = %86
  %200 = landingpad { i8*, i32 }
          catch i8* null
  %201 = extractvalue { i8*, i32 } %200, 0
  store i8* %201, i8** %22, align 8
  %202 = extractvalue { i8*, i32 } %200, 1
  store i32 %202, i32* %23, align 4
  br label %203

; <label>:203:                                    ; preds = %199
  %204 = load i8*, i8** %22, align 8
  %205 = call i8* @__cxa_begin_catch(i8* %204) #3
  %206 = load %struct.Point**, %struct.Point*** %19, align 8
  %207 = load %struct.Point**, %struct.Point*** %21, align 8
  call void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE16_M_destroy_nodesEPPS0_S4_(%"class.std::_Deque_base.21"* %24, %struct.Point** %206, %struct.Point** %207) #3
  invoke void @__cxa_rethrow() #15
          to label %376 unwind label %250

; <label>:208:                                    ; preds = %85
  %209 = load i32, i32* @x.623
  %210 = load i32, i32* @y.624
  %211 = add i32 %209, 1340350664
  %212 = sub i32 %211, 1
  %213 = sub i32 %212, 1340350664
  %214 = sub i32 %209, 1
  %215 = mul i32 %209, %213
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %210, 10
  %219 = and i1 %217, %218
  %220 = xor i1 %217, %218
  %221 = or i1 %219, %220
  %222 = or i1 %217, %218
  br i1 %221, label %223, label %448

; <label>:223:                                    ; preds = %208, %448
  %224 = load i32, i32* @x.623
  %225 = load i32, i32* @y.624
  %226 = sub i32 0, 1
  %227 = add i32 %224, %226
  %228 = sub i32 %224, 1
  %229 = mul i32 %224, %227
  %230 = urem i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %225, 10
  %233 = xor i1 %231, true
  %234 = xor i1 %232, true
  %235 = xor i1 false, true
  %236 = and i1 %233, false
  %237 = and i1 %231, %235
  %238 = and i1 %234, false
  %239 = and i1 %232, %235
  %240 = or i1 %236, %237
  %241 = or i1 %238, %239
  %242 = xor i1 %240, %241
  %243 = or i1 %233, %234
  %244 = xor i1 %243, true
  %245 = or i1 false, %235
  %246 = and i1 %244, %245
  %247 = or i1 %242, %246
  %248 = or i1 %231, %232
  br i1 %247, label %249, label %448

; <label>:249:                                    ; preds = %223
  br label %296

; <label>:250:                                    ; preds = %203
  %251 = load i32, i32* @x.623
  %252 = load i32, i32* @y.624
  %253 = sub i32 0, 1
  %254 = add i32 %251, %253
  %255 = sub i32 %251, 1
  %256 = mul i32 %251, %254
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %252, 10
  %260 = xor i1 %258, true
  %261 = xor i1 %259, true
  %262 = xor i1 false, true
  %263 = and i1 %260, false
  %264 = and i1 %258, %262
  %265 = and i1 %261, false
  %266 = and i1 %259, %262
  %267 = or i1 %263, %264
  %268 = or i1 %265, %266
  %269 = xor i1 %267, %268
  %270 = or i1 %260, %261
  %271 = xor i1 %270, true
  %272 = or i1 false, %262
  %273 = and i1 %271, %272
  %274 = or i1 %269, %273
  %275 = or i1 %258, %259
  br i1 %274, label %276, label %449

; <label>:276:                                    ; preds = %250, %449
  %277 = landingpad { i8*, i32 }
          cleanup
  %278 = extractvalue { i8*, i32 } %277, 0
  store i8* %278, i8** %22, align 8
  %279 = extractvalue { i8*, i32 } %277, 1
  store i32 %279, i32* %23, align 4
  %280 = load i32, i32* @x.623
  %281 = load i32, i32* @y.624
  %282 = add i32 %280, -670525145
  %283 = sub i32 %282, 1
  %284 = sub i32 %283, -670525145
  %285 = sub i32 %280, 1
  %286 = mul i32 %280, %284
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %281, 10
  %290 = and i1 %288, %289
  %291 = xor i1 %288, %289
  %292 = or i1 %290, %291
  %293 = or i1 %288, %289
  br i1 %292, label %294, label %449

; <label>:294:                                    ; preds = %276
  invoke void @__cxa_end_catch()
          to label %295 unwind label %331

; <label>:295:                                    ; preds = %294
  br label %297

; <label>:296:                                    ; preds = %249
  ret void

; <label>:297:                                    ; preds = %295
  %298 = load i32, i32* @x.623
  %299 = load i32, i32* @y.624
  %300 = sub i32 %298, 1521168543
  %301 = sub i32 %300, 1
  %302 = add i32 %301, 1521168543
  %303 = sub i32 %298, 1
  %304 = mul i32 %298, %302
  %305 = urem i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %299, 10
  %308 = and i1 %306, %307
  %309 = xor i1 %306, %307
  %310 = or i1 %308, %309
  %311 = or i1 %306, %307
  br i1 %310, label %312, label %453

; <label>:312:                                    ; preds = %297, %453
  %313 = load i8*, i8** %22, align 8
  %314 = load i32, i32* %23, align 4
  %315 = insertvalue { i8*, i32 } undef, i8* %313, 0
  %316 = insertvalue { i8*, i32 } %315, i32 %314, 1
  %317 = load i32, i32* @x.623
  %318 = load i32, i32* @y.624
  %319 = sub i32 0, 1
  %320 = add i32 %317, %319
  %321 = sub i32 %317, 1
  %322 = mul i32 %317, %320
  %323 = urem i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %318, 10
  %326 = and i1 %324, %325
  %327 = xor i1 %324, %325
  %328 = or i1 %326, %327
  %329 = or i1 %324, %325
  br i1 %328, label %330, label %453

; <label>:330:                                    ; preds = %312
  resume { i8*, i32 } %316

; <label>:331:                                    ; preds = %294
  %332 = load i32, i32* @x.623
  %333 = load i32, i32* @y.624
  %334 = add i32 %332, -1067474869
  %335 = sub i32 %334, 1
  %336 = sub i32 %335, -1067474869
  %337 = sub i32 %332, 1
  %338 = mul i32 %332, %336
  %339 = urem i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %333, 10
  %342 = xor i1 %340, true
  %343 = xor i1 %341, true
  %344 = xor i1 true, true
  %345 = and i1 %342, true
  %346 = and i1 %340, %344
  %347 = and i1 %343, true
  %348 = and i1 %341, %344
  %349 = or i1 %345, %346
  %350 = or i1 %347, %348
  %351 = xor i1 %349, %350
  %352 = or i1 %342, %343
  %353 = xor i1 %352, true
  %354 = or i1 true, %344
  %355 = and i1 %353, %354
  %356 = or i1 %351, %355
  %357 = or i1 %340, %341
  br i1 %356, label %358, label %458

; <label>:358:                                    ; preds = %331, %458
  %359 = landingpad { i8*, i32 }
          catch i8* null
  %360 = extractvalue { i8*, i32 } %359, 0
  call void @__clang_call_terminate(i8* %360) #13
  %361 = load i32, i32* @x.623
  %362 = load i32, i32* @y.624
  %363 = add i32 %361, 917303314
  %364 = sub i32 %363, 1
  %365 = sub i32 %364, 917303314
  %366 = sub i32 %361, 1
  %367 = mul i32 %361, %365
  %368 = urem i32 %367, 2
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %362, 10
  %371 = and i1 %369, %370
  %372 = xor i1 %369, %370
  %373 = or i1 %371, %372
  %374 = or i1 %369, %370
  br i1 %373, label %375, label %458

; <label>:375:                                    ; preds = %358
  unreachable

; <label>:376:                                    ; preds = %203
  %377 = load i32, i32* @x.623
  %378 = load i32, i32* @y.624
  %379 = sub i32 0, 1
  %380 = add i32 %377, %379
  %381 = sub i32 %377, 1
  %382 = mul i32 %377, %380
  %383 = urem i32 %382, 2
  %384 = icmp eq i32 %383, 0
  %385 = icmp slt i32 %378, 10
  %386 = xor i1 %384, true
  %387 = xor i1 %385, true
  %388 = xor i1 true, true
  %389 = and i1 %386, true
  %390 = and i1 %384, %388
  %391 = and i1 %387, true
  %392 = and i1 %385, %388
  %393 = or i1 %389, %390
  %394 = or i1 %391, %392
  %395 = xor i1 %393, %394
  %396 = or i1 %386, %387
  %397 = xor i1 %396, true
  %398 = or i1 true, %388
  %399 = and i1 %397, %398
  %400 = or i1 %395, %399
  %401 = or i1 %384, %385
  br i1 %400, label %402, label %461

; <label>:402:                                    ; preds = %376, %461
  %403 = load i32, i32* @x.623
  %404 = load i32, i32* @y.624
  %405 = sub i32 %403, 172446455
  %406 = sub i32 %405, 1
  %407 = add i32 %406, 172446455
  %408 = sub i32 %403, 1
  %409 = mul i32 %403, %407
  %410 = urem i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %404, 10
  %413 = xor i1 %411, true
  %414 = xor i1 %412, true
  %415 = xor i1 false, true
  %416 = and i1 %413, false
  %417 = and i1 %411, %415
  %418 = and i1 %414, false
  %419 = and i1 %412, %415
  %420 = or i1 %416, %417
  %421 = or i1 %418, %419
  %422 = xor i1 %420, %421
  %423 = or i1 %413, %414
  %424 = xor i1 %423, true
  %425 = or i1 false, %415
  %426 = and i1 %424, %425
  %427 = or i1 %422, %426
  %428 = or i1 %411, %412
  br i1 %427, label %429, label %461

; <label>:429:                                    ; preds = %402
  unreachable

; <label>:430:                                    ; preds = %17, %3
  %431 = alloca %"class.std::_Deque_base.21"*, align 8
  %432 = alloca %struct.Point**, align 8
  %433 = alloca %struct.Point**, align 8
  %434 = alloca %struct.Point**, align 8
  %435 = alloca i8*
  %436 = alloca i32
  store %"class.std::_Deque_base.21"* %0, %"class.std::_Deque_base.21"** %431, align 8
  store %struct.Point** %1, %struct.Point*** %432, align 8
  store %struct.Point** %2, %struct.Point*** %433, align 8
  %437 = load %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %431, align 8
  %438 = load %struct.Point**, %struct.Point*** %432, align 8
  store %struct.Point** %438, %struct.Point*** %434, align 8
  br label %17

; <label>:439:                                    ; preds = %68, %53
  %440 = load %struct.Point**, %struct.Point*** %21, align 8
  %441 = load %struct.Point**, %struct.Point*** %20, align 8
  %442 = icmp ult %struct.Point** %440, %441
  br label %68

; <label>:443:                                    ; preds = %114, %88
  %444 = load %struct.Point**, %struct.Point*** %21, align 8
  store %struct.Point* %87, %struct.Point** %444, align 8
  br label %114

; <label>:445:                                    ; preds = %169, %142
  %446 = load %struct.Point**, %struct.Point*** %21, align 8
  %447 = getelementptr inbounds %struct.Point*, %struct.Point** %446, i32 1
  store %struct.Point** %447, %struct.Point*** %21, align 8
  br label %169

; <label>:448:                                    ; preds = %223, %208
  br label %223

; <label>:449:                                    ; preds = %276, %250
  %450 = landingpad { i8*, i32 }
          cleanup
  %451 = extractvalue { i8*, i32 } %450, 0
  store i8* %451, i8** %22, align 8
  %452 = extractvalue { i8*, i32 } %450, 1
  store i32 %452, i32* %23, align 4
  br label %276

; <label>:453:                                    ; preds = %312, %297
  %454 = load i8*, i8** %22, align 8
  %455 = load i32, i32* %23, align 4
  %456 = insertvalue { i8*, i32 } undef, i8* %454, 0
  %457 = insertvalue { i8*, i32 } %456, i32 %455, 1
  br label %312

; <label>:458:                                    ; preds = %358, %331
  %459 = landingpad { i8*, i32 }
          catch i8* null
  %460 = extractvalue { i8*, i32 } %459, 0
  call void @__clang_call_terminate(i8* %460) #13
  br label %358

; <label>:461:                                    ; preds = %402, %376
  br label %402
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE17_M_deallocate_mapEPPS0_m(%"class.std::_Deque_base.21"*, %struct.Point**, i64) #4 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.625
  %5 = load i32, i32* @y.626
  %6 = add i32 %4, 1487618012
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1487618012
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 true, true
  %17 = and i1 %14, true
  %18 = and i1 %12, %16
  %19 = and i1 %15, true
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 true, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %115

; <label>:30:                                     ; preds = %3, %115
  %31 = alloca %"class.std::_Deque_base.21"*, align 8
  %32 = alloca %struct.Point**, align 8
  %33 = alloca i64, align 8
  %34 = alloca %"class.std::allocator.44", align 1
  %35 = alloca i8*
  %36 = alloca i32
  store %"class.std::_Deque_base.21"* %0, %"class.std::_Deque_base.21"** %31, align 8
  store %struct.Point** %1, %struct.Point*** %32, align 8
  store i64 %2, i64* %33, align 8
  %37 = load %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %31, align 8
  call void @_ZNKSt11_Deque_baseIZ4mainE5PointSaIS0_EE20_M_get_map_allocatorEv(%"class.std::allocator.44"* sret %34, %"class.std::_Deque_base.21"* %37) #3
  %38 = load %struct.Point**, %struct.Point*** %32, align 8
  %39 = load i64, i64* %33, align 8
  %40 = load i32, i32* @x.625
  %41 = load i32, i32* @y.626
  %42 = add i32 %40, -515883758
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -515883758
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  br i1 %52, label %54, label %115

; <label>:54:                                     ; preds = %30
  invoke void @_ZNSt16allocator_traitsISaIPZ4mainE5PointEE10deallocateERS2_PS1_m(%"class.std::allocator.44"* dereferenceable(1) %34, %struct.Point** %38, i64 %39)
          to label %55 unwind label %109

; <label>:55:                                     ; preds = %54
  %56 = load i32, i32* @x.625
  %57 = load i32, i32* @y.626
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 false, true
  %68 = and i1 %65, false
  %69 = and i1 %63, %67
  %70 = and i1 %66, false
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 false, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  br i1 %79, label %81, label %125

; <label>:81:                                     ; preds = %55, %125
  call void @_ZNSaIPZ4mainE5PointED2Ev(%"class.std::allocator.44"* %34) #3
  %82 = load i32, i32* @x.625
  %83 = load i32, i32* @y.626
  %84 = add i32 %82, 26570312
  %85 = sub i32 %84, 1
  %86 = sub i32 %85, 26570312
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = xor i1 %90, true
  %93 = xor i1 %91, true
  %94 = xor i1 false, true
  %95 = and i1 %92, false
  %96 = and i1 %90, %94
  %97 = and i1 %93, false
  %98 = and i1 %91, %94
  %99 = or i1 %95, %96
  %100 = or i1 %97, %98
  %101 = xor i1 %99, %100
  %102 = or i1 %92, %93
  %103 = xor i1 %102, true
  %104 = or i1 false, %94
  %105 = and i1 %103, %104
  %106 = or i1 %101, %105
  %107 = or i1 %90, %91
  br i1 %106, label %108, label %125

; <label>:108:                                    ; preds = %81
  ret void

; <label>:109:                                    ; preds = %54
  %110 = landingpad { i8*, i32 }
          catch i8* null
  %111 = extractvalue { i8*, i32 } %110, 0
  store i8* %111, i8** %35, align 8
  %112 = extractvalue { i8*, i32 } %110, 1
  store i32 %112, i32* %36, align 4
  call void @_ZNSaIPZ4mainE5PointED2Ev(%"class.std::allocator.44"* %34) #3
  br label %113

; <label>:113:                                    ; preds = %109
  %114 = load i8*, i8** %35, align 8
  call void @__clang_call_terminate(i8* %114) #13
  unreachable

; <label>:115:                                    ; preds = %30, %3
  %116 = alloca %"class.std::_Deque_base.21"*, align 8
  %117 = alloca %struct.Point**, align 8
  %118 = alloca i64, align 8
  %119 = alloca %"class.std::allocator.44", align 1
  %120 = alloca i8*
  %121 = alloca i32
  store %"class.std::_Deque_base.21"* %0, %"class.std::_Deque_base.21"** %116, align 8
  store %struct.Point** %1, %struct.Point*** %117, align 8
  store i64 %2, i64* %118, align 8
  %122 = load %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %116, align 8
  call void @_ZNKSt11_Deque_baseIZ4mainE5PointSaIS0_EE20_M_get_map_allocatorEv(%"class.std::allocator.44"* sret %119, %"class.std::_Deque_base.21"* %122) #3
  %123 = load %struct.Point**, %struct.Point*** %117, align 8
  %124 = load i64, i64* %118, align 8
  br label %30

; <label>:125:                                    ; preds = %81, %55
  call void @_ZNSaIPZ4mainE5PointED2Ev(%"class.std::allocator.44"* %34) #3
  br label %81
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSt15_Deque_iteratorIZ4mainE5PointRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator.25"*, %struct.Point**) #4 align 2 {
  %3 = alloca %"struct.std::_Deque_iterator.25"*, align 8
  %4 = alloca %struct.Point**, align 8
  store %"struct.std::_Deque_iterator.25"* %0, %"struct.std::_Deque_iterator.25"** %3, align 8
  store %struct.Point** %1, %struct.Point*** %4, align 8
  %5 = load %"struct.std::_Deque_iterator.25"*, %"struct.std::_Deque_iterator.25"** %3, align 8
  %6 = load %struct.Point**, %struct.Point*** %4, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %5, i32 0, i32 3
  store %struct.Point** %6, %struct.Point*** %7, align 8
  %8 = load %struct.Point**, %struct.Point*** %4, align 8
  %9 = load %struct.Point*, %struct.Point** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %5, i32 0, i32 1
  store %struct.Point* %9, %struct.Point** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %5, i32 0, i32 1
  %12 = load %struct.Point*, %struct.Point** %11, align 8
  %13 = call i64 @_ZNSt15_Deque_iteratorIZ4mainE5PointRS0_PS0_E14_S_buffer_sizeEv() #3
  %14 = getelementptr inbounds %struct.Point, %struct.Point* %12, i64 %13
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %5, i32 0, i32 2
  store %struct.Point* %14, %struct.Point** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNKSt11_Deque_baseIZ4mainE5PointSaIS0_EE20_M_get_map_allocatorEv(%"class.std::allocator.44"* noalias sret, %"class.std::_Deque_base.21"*) #4 align 2 {
  %3 = alloca %"class.std::_Deque_base.21"*, align 8
  store %"class.std::_Deque_base.21"* %1, %"class.std::_Deque_base.21"** %3, align 8
  %4 = load %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %3, align 8
  %5 = call dereferenceable(1) %"class.std::allocator.22"* @_ZNKSt11_Deque_baseIZ4mainE5PointSaIS0_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base.21"* %4) #3
  call void @_ZNSaIPZ4mainE5PointEC2IS_EERKSaIT_E(%"class.std::allocator.44"* %0, %"class.std::allocator.22"* dereferenceable(1) %5) #3
  ret void
}

; Function Attrs: noinline uwtable
define internal %struct.Point** @_ZNSt16allocator_traitsISaIPZ4mainE5PointEE8allocateERS2_m(%"class.std::allocator.44"* dereferenceable(1), i64) #0 align 2 {
  %3 = alloca %"class.std::allocator.44"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.44"* %0, %"class.std::allocator.44"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.44"*, %"class.std::allocator.44"** %3, align 8
  %6 = bitcast %"class.std::allocator.44"* %5 to %"class.__gnu_cxx::new_allocator.45"*
  %7 = load i64, i64* %4, align 8
  %8 = call %struct.Point** @_ZN9__gnu_cxx13new_allocatorIPZ4mainE5PointE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.45"* %6, i64 %7, i8* null)
  ret %struct.Point** %8
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSaIPZ4mainE5PointED2Ev(%"class.std::allocator.44"*) unnamed_addr #4 align 2 {
  %2 = alloca %"class.std::allocator.44"*, align 8
  store %"class.std::allocator.44"* %0, %"class.std::allocator.44"** %2, align 8
  %3 = load %"class.std::allocator.44"*, %"class.std::allocator.44"** %2, align 8
  %4 = bitcast %"class.std::allocator.44"* %3 to %"class.__gnu_cxx::new_allocator.45"*
  call void @_ZN9__gnu_cxx13new_allocatorIPZ4mainE5PointED2Ev(%"class.__gnu_cxx::new_allocator.45"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(1) %"class.std::allocator.22"* @_ZNKSt11_Deque_baseIZ4mainE5PointSaIS0_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base.21"*) #4 align 2 {
  %2 = alloca %"class.std::_Deque_base.21"*, align 8
  store %"class.std::_Deque_base.21"* %0, %"class.std::_Deque_base.21"** %2, align 8
  %3 = load %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %4 to %"class.std::allocator.22"*
  ret %"class.std::allocator.22"* %5
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSaIPZ4mainE5PointEC2IS_EERKSaIT_E(%"class.std::allocator.44"*, %"class.std::allocator.22"* dereferenceable(1)) unnamed_addr #4 align 2 {
  %3 = alloca %"class.std::allocator.44"*, align 8
  %4 = alloca %"class.std::allocator.22"*, align 8
  store %"class.std::allocator.44"* %0, %"class.std::allocator.44"** %3, align 8
  store %"class.std::allocator.22"* %1, %"class.std::allocator.22"** %4, align 8
  %5 = load %"class.std::allocator.44"*, %"class.std::allocator.44"** %3, align 8
  %6 = bitcast %"class.std::allocator.44"* %5 to %"class.__gnu_cxx::new_allocator.45"*
  call void @_ZN9__gnu_cxx13new_allocatorIPZ4mainE5PointEC2Ev(%"class.__gnu_cxx::new_allocator.45"* %6) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZN9__gnu_cxx13new_allocatorIPZ4mainE5PointEC2Ev(%"class.__gnu_cxx::new_allocator.45"*) unnamed_addr #4 align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.45"*, align 8
  store %"class.__gnu_cxx::new_allocator.45"* %0, %"class.__gnu_cxx::new_allocator.45"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.45"*, %"class.__gnu_cxx::new_allocator.45"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define internal %struct.Point** @_ZN9__gnu_cxx13new_allocatorIPZ4mainE5PointE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.45"*, i64, i8*) #0 align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.45"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.45"* %0, %"class.__gnu_cxx::new_allocator.45"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.45"*, %"class.__gnu_cxx::new_allocator.45"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIPZ4mainE5PointE8max_sizeEv(%"class.__gnu_cxx::new_allocator.45"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -647291191, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -647291191, label %16
    i32 2047456588, label %21
    i32 1565660105, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 2047456588, i32 1565660105
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #15
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 8
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %struct.Point**
  ret %struct.Point** %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @_ZNK9__gnu_cxx13new_allocatorIPZ4mainE5PointE8max_sizeEv(%"class.__gnu_cxx::new_allocator.45"*) #4 align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.45"*, align 8
  store %"class.__gnu_cxx::new_allocator.45"* %0, %"class.__gnu_cxx::new_allocator.45"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.45"*, %"class.__gnu_cxx::new_allocator.45"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZN9__gnu_cxx13new_allocatorIPZ4mainE5PointED2Ev(%"class.__gnu_cxx::new_allocator.45"*) unnamed_addr #4 align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.645
  %5 = load i32, i32* @y.646
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1351993887, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %70
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1351993887, label %17
    i32 -2058766474, label %37
    i32 -725092089, label %66
    i32 1272840634, label %67
  ]

; <label>:16:                                     ; preds = %14
  br label %70

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -2058766474, i32 1272840634
  store i32 %36, i32* %13
  br label %70

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator.45"*, align 8
  store %"class.__gnu_cxx::new_allocator.45"* %0, %"class.__gnu_cxx::new_allocator.45"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.45"*, %"class.__gnu_cxx::new_allocator.45"** %38, align 8
  %40 = load i32, i32* @x.645
  %41 = load i32, i32* @y.646
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 -725092089, i32 1272840634
  store i32 %65, i32* %13
  br label %70

; <label>:66:                                     ; preds = %14
  ret void

; <label>:67:                                     ; preds = %14
  %68 = alloca %"class.__gnu_cxx::new_allocator.45"*, align 8
  store %"class.__gnu_cxx::new_allocator.45"* %0, %"class.__gnu_cxx::new_allocator.45"** %68, align 8
  %69 = load %"class.__gnu_cxx::new_allocator.45"*, %"class.__gnu_cxx::new_allocator.45"** %68, align 8
  store i32 -2058766474, i32* %13
  br label %70

; <label>:70:                                     ; preds = %67, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define internal %struct.Point* @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE16_M_allocate_nodeEv(%"class.std::_Deque_base.21"*) #0 align 2 {
  %2 = alloca %"class.std::_Deque_base.21"*, align 8
  store %"class.std::_Deque_base.21"* %0, %"class.std::_Deque_base.21"** %2, align 8
  %3 = load %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %4 to %"class.std::allocator.22"*
  %6 = call i64 @_ZSt16__deque_buf_sizem(i64 24)
  %7 = call %struct.Point* @_ZNSt16allocator_traitsISaIZ4mainE5PointEE8allocateERS1_m(%"class.std::allocator.22"* dereferenceable(1) %5, i64 %6)
  ret %struct.Point* %7
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE16_M_destroy_nodesEPPS0_S4_(%"class.std::_Deque_base.21"*, %struct.Point**, %struct.Point**) #4 align 2 {
  %4 = alloca %"class.std::_Deque_base.21"*
  %5 = alloca %"class.std::_Deque_base.21"*, align 8
  %6 = alloca %struct.Point**, align 8
  %7 = alloca %struct.Point**, align 8
  %8 = alloca %struct.Point**, align 8
  store %"class.std::_Deque_base.21"* %0, %"class.std::_Deque_base.21"** %5, align 8
  store %struct.Point** %1, %struct.Point*** %6, align 8
  store %struct.Point** %2, %struct.Point*** %7, align 8
  %9 = load %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %5, align 8
  store %"class.std::_Deque_base.21"* %9, %"class.std::_Deque_base.21"** %4
  %10 = load %struct.Point**, %struct.Point*** %6, align 8
  store %struct.Point** %10, %struct.Point*** %8, align 8
  %11 = alloca i32
  store i32 -824892918, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %71
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -824892918, label %15
    i32 -1931196128, label %20
    i32 1391288581, label %24
    i32 -1357963418, label %27
    i32 546243496, label %42
    i32 695493390, label %69
    i32 2095396107, label %70
  ]

; <label>:14:                                     ; preds = %12
  br label %71

; <label>:15:                                     ; preds = %12
  %16 = load %struct.Point**, %struct.Point*** %8, align 8
  %17 = load %struct.Point**, %struct.Point*** %7, align 8
  %18 = icmp ult %struct.Point** %16, %17
  %19 = select i1 %18, i32 -1931196128, i32 -1357963418
  store i32 %19, i32* %11
  br label %71

; <label>:20:                                     ; preds = %12
  %21 = load %struct.Point**, %struct.Point*** %8, align 8
  %22 = load %struct.Point*, %struct.Point** %21, align 8
  %23 = load volatile %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %4
  call void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE18_M_deallocate_nodeEPS0_(%"class.std::_Deque_base.21"* %23, %struct.Point* %22) #3
  store i32 1391288581, i32* %11
  br label %71

; <label>:24:                                     ; preds = %12
  %25 = load %struct.Point**, %struct.Point*** %8, align 8
  %26 = getelementptr inbounds %struct.Point*, %struct.Point** %25, i32 1
  store %struct.Point** %26, %struct.Point*** %8, align 8
  store i32 -824892918, i32* %11
  br label %71

; <label>:27:                                     ; preds = %12
  %28 = load i32, i32* @x.649
  %29 = load i32, i32* @y.650
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  %41 = select i1 %39, i32 546243496, i32 2095396107
  store i32 %41, i32* %11
  br label %71

; <label>:42:                                     ; preds = %12
  %43 = load i32, i32* @x.649
  %44 = load i32, i32* @y.650
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 695493390, i32 2095396107
  store i32 %68, i32* %11
  br label %71

; <label>:69:                                     ; preds = %12
  ret void

; <label>:70:                                     ; preds = %12
  store i32 546243496, i32* %11
  br label %71

; <label>:71:                                     ; preds = %70, %42, %27, %24, %20, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define internal %struct.Point* @_ZNSt16allocator_traitsISaIZ4mainE5PointEE8allocateERS1_m(%"class.std::allocator.22"* dereferenceable(1), i64) #0 align 2 {
  %3 = alloca %struct.Point*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.651
  %7 = load i32, i32* @y.652
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -628415071, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -628415071, label %19
    i32 -865454806, label %39
    i32 38191920, label %60
    i32 656672449, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -865454806, i32 656672449
  store i32 %38, i32* %15
  br label %69

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.22"*, align 8
  %41 = alloca i64, align 8
  store %"class.std::allocator.22"* %0, %"class.std::allocator.22"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %40, align 8
  %43 = bitcast %"class.std::allocator.22"* %42 to %"class.__gnu_cxx::new_allocator.23"*
  %44 = load i64, i64* %41, align 8
  %45 = call %struct.Point* @_ZN9__gnu_cxx13new_allocatorIZ4mainE5PointE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.23"* %43, i64 %44, i8* null)
  store %struct.Point* %45, %struct.Point** %3
  %46 = load i32, i32* @x.651
  %47 = load i32, i32* @y.652
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 38191920, i32 656672449
  store i32 %59, i32* %15
  br label %69

; <label>:60:                                     ; preds = %16
  %61 = load volatile %struct.Point*, %struct.Point** %3
  ret %struct.Point* %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::allocator.22"*, align 8
  %64 = alloca i64, align 8
  store %"class.std::allocator.22"* %0, %"class.std::allocator.22"** %63, align 8
  store i64 %1, i64* %64, align 8
  %65 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %63, align 8
  %66 = bitcast %"class.std::allocator.22"* %65 to %"class.__gnu_cxx::new_allocator.23"*
  %67 = load i64, i64* %64, align 8
  %68 = call %struct.Point* @_ZN9__gnu_cxx13new_allocatorIZ4mainE5PointE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.23"* %66, i64 %67, i8* null)
  store i32 -865454806, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define internal %struct.Point* @_ZN9__gnu_cxx13new_allocatorIZ4mainE5PointE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.23"*, i64, i8*) #0 align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.653
  %9 = load i32, i32* @y.654
  %10 = sub i32 %8, 2051659612
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 2051659612
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -1913623671, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %142
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1913623671, label %22
    i32 -901187655, label %42
    i32 56038064, label %67
    i32 1409092934, label %70
    i32 -915986703, label %98
    i32 -1955557439, label %126
    i32 -2415793, label %127
    i32 739830445, label %133
    i32 -388663414, label %141
  ]

; <label>:21:                                     ; preds = %19
  br label %142

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -901187655, i32 739830445
  store i32 %41, i32* %18
  br label %142

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  %44 = alloca i64, align 8
  store i64* %44, i64** %5
  %45 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %0, %"class.__gnu_cxx::new_allocator.23"** %43, align 8
  %46 = load volatile i64*, i64** %5
  store i64 %1, i64* %46, align 8
  store i8* %2, i8** %45, align 8
  %47 = load %"class.__gnu_cxx::new_allocator.23"*, %"class.__gnu_cxx::new_allocator.23"** %43, align 8
  %48 = load volatile i64*, i64** %5
  %49 = load i64, i64* %48, align 8
  %50 = call i64 @_ZNK9__gnu_cxx13new_allocatorIZ4mainE5PointE8max_sizeEv(%"class.__gnu_cxx::new_allocator.23"* %47) #3
  %51 = icmp ugt i64 %49, %50
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.653
  %53 = load i32, i32* @y.654
  %54 = add i32 %52, -610751579
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, -610751579
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 56038064, i32 739830445
  store i32 %66, i32* %18
  br label %142

; <label>:67:                                     ; preds = %19
  %68 = load volatile i1, i1* %4
  %69 = select i1 %68, i32 1409092934, i32 -2415793
  store i32 %69, i32* %18
  br label %142

; <label>:70:                                     ; preds = %19
  %71 = load i32, i32* @x.653
  %72 = load i32, i32* @y.654
  %73 = sub i32 %71, 1107624502
  %74 = sub i32 %73, 1
  %75 = add i32 %74, 1107624502
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 false, true
  %84 = and i1 %81, false
  %85 = and i1 %79, %83
  %86 = and i1 %82, false
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 false, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  %97 = select i1 %95, i32 -915986703, i32 -388663414
  store i32 %97, i32* %18
  br label %142

; <label>:98:                                     ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #15
  %99 = load i32, i32* @x.653
  %100 = load i32, i32* @y.654
  %101 = sub i32 %99, 221533440
  %102 = sub i32 %101, 1
  %103 = add i32 %102, 221533440
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = xor i1 %107, true
  %110 = xor i1 %108, true
  %111 = xor i1 false, true
  %112 = and i1 %109, false
  %113 = and i1 %107, %111
  %114 = and i1 %110, false
  %115 = and i1 %108, %111
  %116 = or i1 %112, %113
  %117 = or i1 %114, %115
  %118 = xor i1 %116, %117
  %119 = or i1 %109, %110
  %120 = xor i1 %119, true
  %121 = or i1 false, %111
  %122 = and i1 %120, %121
  %123 = or i1 %118, %122
  %124 = or i1 %107, %108
  %125 = select i1 %123, i32 -1955557439, i32 -388663414
  store i32 %125, i32* %18
  br label %142

; <label>:126:                                    ; preds = %19
  unreachable

; <label>:127:                                    ; preds = %19
  %128 = load volatile i64*, i64** %5
  %129 = load i64, i64* %128, align 8
  %130 = mul i64 %129, 24
  %131 = call i8* @_Znwm(i64 %130)
  %132 = bitcast i8* %131 to %struct.Point*
  ret %struct.Point* %132

; <label>:133:                                    ; preds = %19
  %134 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  %135 = alloca i64, align 8
  %136 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %0, %"class.__gnu_cxx::new_allocator.23"** %134, align 8
  store i64 %1, i64* %135, align 8
  store i8* %2, i8** %136, align 8
  %137 = load %"class.__gnu_cxx::new_allocator.23"*, %"class.__gnu_cxx::new_allocator.23"** %134, align 8
  %138 = load i64, i64* %135, align 8
  %139 = call i64 @_ZNK9__gnu_cxx13new_allocatorIZ4mainE5PointE8max_sizeEv(%"class.__gnu_cxx::new_allocator.23"* %137) #3
  %140 = icmp ugt i64 %138, %139
  store i32 -901187655, i32* %18
  br label %142

; <label>:141:                                    ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #15
  store i32 -915986703, i32* %18
  br label %142

; <label>:142:                                    ; preds = %141, %133, %98, %70, %67, %42, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @_ZNK9__gnu_cxx13new_allocatorIZ4mainE5PointE8max_sizeEv(%"class.__gnu_cxx::new_allocator.23"*) #4 align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.655
  %5 = load i32, i32* @y.656
  %6 = sub i32 %4, -1695961508
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1695961508
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -985856395, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -985856395, label %18
    i32 -1668623585, label %38
    i32 -174297925, label %56
    i32 -1499828317, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1668623585, i32 -1499828317
  store i32 %37, i32* %14
  br label %60

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %0, %"class.__gnu_cxx::new_allocator.23"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.23"*, %"class.__gnu_cxx::new_allocator.23"** %39, align 8
  %41 = load i32, i32* @x.655
  %42 = load i32, i32* @y.656
  %43 = add i32 %41, -378270905
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -378270905
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -174297925, i32 -1499828317
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret i64 768614336404564650

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %0, %"class.__gnu_cxx::new_allocator.23"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.23"*, %"class.__gnu_cxx::new_allocator.23"** %58, align 8
  store i32 -1668623585, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE18_M_deallocate_nodeEPS0_(%"class.std::_Deque_base.21"*, %struct.Point*) #4 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base.21"*, align 8
  %4 = alloca %struct.Point*, align 8
  store %"class.std::_Deque_base.21"* %0, %"class.std::_Deque_base.21"** %3, align 8
  store %struct.Point* %1, %struct.Point** %4, align 8
  %5 = load %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %3, align 8
  %6 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %6 to %"class.std::allocator.22"*
  %8 = load %struct.Point*, %struct.Point** %4, align 8
  %9 = invoke i64 @_ZSt16__deque_buf_sizem(i64 24)
          to label %10 unwind label %54

; <label>:10:                                     ; preds = %2
  %11 = load i32, i32* @x.657
  %12 = load i32, i32* @y.658
  %13 = add i32 %11, -25746655
  %14 = sub i32 %13, 1
  %15 = sub i32 %14, -25746655
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %12, 10
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  br i1 %23, label %25, label %57

; <label>:25:                                     ; preds = %10, %57
  %26 = load i32, i32* @x.657
  %27 = load i32, i32* @y.658
  %28 = sub i32 %26, 967743018
  %29 = sub i32 %28, 1
  %30 = add i32 %29, 967743018
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 true, true
  %39 = and i1 %36, true
  %40 = and i1 %34, %38
  %41 = and i1 %37, true
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 true, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  br i1 %50, label %52, label %57

; <label>:52:                                     ; preds = %25
  invoke void @_ZNSt16allocator_traitsISaIZ4mainE5PointEE10deallocateERS1_PS0_m(%"class.std::allocator.22"* dereferenceable(1) %7, %struct.Point* %8, i64 %9)
          to label %53 unwind label %54

; <label>:53:                                     ; preds = %52
  ret void

; <label>:54:                                     ; preds = %52, %2
  %55 = landingpad { i8*, i32 }
          catch i8* null
  %56 = extractvalue { i8*, i32 } %55, 0
  call void @__clang_call_terminate(i8* %56) #13
  unreachable

; <label>:57:                                     ; preds = %25, %10
  br label %25
}

; Function Attrs: noinline uwtable
define internal void @_ZNSt16allocator_traitsISaIZ4mainE5PointEE10deallocateERS1_PS0_m(%"class.std::allocator.22"* dereferenceable(1), %struct.Point*, i64) #0 align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.659
  %7 = load i32, i32* @y.660
  %8 = add i32 %6, 2080320684
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 2080320684
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 421780432, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %72
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 421780432, label %20
    i32 579139768, label %28
    i32 1015065138, label %63
    i32 -696695091, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %72

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 579139768, i32 -696695091
  store i32 %27, i32* %16
  br label %72

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.22"*, align 8
  %30 = alloca %struct.Point*, align 8
  %31 = alloca i64, align 8
  store %"class.std::allocator.22"* %0, %"class.std::allocator.22"** %29, align 8
  store %struct.Point* %1, %struct.Point** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %29, align 8
  %33 = bitcast %"class.std::allocator.22"* %32 to %"class.__gnu_cxx::new_allocator.23"*
  %34 = load %struct.Point*, %struct.Point** %30, align 8
  %35 = load i64, i64* %31, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIZ4mainE5PointE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.23"* %33, %struct.Point* %34, i64 %35)
  %36 = load i32, i32* @x.659
  %37 = load i32, i32* @y.660
  %38 = add i32 %36, 88478173
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, 88478173
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 1015065138, i32 -696695091
  store i32 %62, i32* %16
  br label %72

; <label>:63:                                     ; preds = %17
  ret void

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::allocator.22"*, align 8
  %66 = alloca %struct.Point*, align 8
  %67 = alloca i64, align 8
  store %"class.std::allocator.22"* %0, %"class.std::allocator.22"** %65, align 8
  store %struct.Point* %1, %struct.Point** %66, align 8
  store i64 %2, i64* %67, align 8
  %68 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %65, align 8
  %69 = bitcast %"class.std::allocator.22"* %68 to %"class.__gnu_cxx::new_allocator.23"*
  %70 = load %struct.Point*, %struct.Point** %66, align 8
  %71 = load i64, i64* %67, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIZ4mainE5PointE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.23"* %69, %struct.Point* %70, i64 %71)
  store i32 579139768, i32* %16
  br label %72

; <label>:72:                                     ; preds = %64, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZN9__gnu_cxx13new_allocatorIZ4mainE5PointE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.23"*, %struct.Point*, i64) #4 align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  %5 = alloca %struct.Point*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %0, %"class.__gnu_cxx::new_allocator.23"** %4, align 8
  store %struct.Point* %1, %struct.Point** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.23"*, %"class.__gnu_cxx::new_allocator.23"** %4, align 8
  %8 = load %struct.Point*, %struct.Point** %5, align 8
  %9 = bitcast %struct.Point* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define internal void @_ZNSt16allocator_traitsISaIPZ4mainE5PointEE10deallocateERS2_PS1_m(%"class.std::allocator.44"* dereferenceable(1), %struct.Point**, i64) #0 align 2 {
  %4 = alloca %"class.std::allocator.44"*, align 8
  %5 = alloca %struct.Point**, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.44"* %0, %"class.std::allocator.44"** %4, align 8
  store %struct.Point** %1, %struct.Point*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.44"*, %"class.std::allocator.44"** %4, align 8
  %8 = bitcast %"class.std::allocator.44"* %7 to %"class.__gnu_cxx::new_allocator.45"*
  %9 = load %struct.Point**, %struct.Point*** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPZ4mainE5PointE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.45"* %8, %struct.Point** %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZN9__gnu_cxx13new_allocatorIPZ4mainE5PointE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.45"*, %struct.Point**, i64) #4 align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.45"*, align 8
  %5 = alloca %struct.Point**, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.45"* %0, %"class.__gnu_cxx::new_allocator.45"** %4, align 8
  store %struct.Point** %1, %struct.Point*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.45"*, %"class.__gnu_cxx::new_allocator.45"** %4, align 8
  %8 = load %struct.Point**, %struct.Point*** %5, align 8
  %9 = bitcast %struct.Point** %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @_ZNSt15_Deque_iteratorIZ4mainE5PointRS0_PS0_E14_S_buffer_sizeEv() #4 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = invoke i64 @_ZSt16__deque_buf_sizem(i64 24)
          to label %2 unwind label %3

; <label>:2:                                      ; preds = %0
  ret i64 %1

; <label>:3:                                      ; preds = %0
  %4 = landingpad { i8*, i32 }
          catch i8* null
  %5 = extractvalue { i8*, i32 } %4, 0
  call void @__clang_call_terminate(i8* %5) #13
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSaIZ4mainE5PointED2Ev(%"class.std::allocator.22"*) unnamed_addr #4 align 2 {
  %2 = alloca %"class.std::allocator.22"*, align 8
  store %"class.std::allocator.22"* %0, %"class.std::allocator.22"** %2, align 8
  %3 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %2, align 8
  %4 = bitcast %"class.std::allocator.22"* %3 to %"class.__gnu_cxx::new_allocator.23"*
  call void @_ZN9__gnu_cxx13new_allocatorIZ4mainE5PointED2Ev(%"class.__gnu_cxx::new_allocator.23"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZN9__gnu_cxx13new_allocatorIZ4mainE5PointED2Ev(%"class.__gnu_cxx::new_allocator.23"*) unnamed_addr #4 align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %0, %"class.__gnu_cxx::new_allocator.23"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.23"*, %"class.__gnu_cxx::new_allocator.23"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSt5dequeIZ4mainE5PointSaIS0_EE15_M_destroy_dataESt15_Deque_iteratorIS0_RS0_PS0_ES6_RKS1_(%"class.std::deque.20"*, %"struct.std::_Deque_iterator.25"*, %"struct.std::_Deque_iterator.25"*, %"class.std::allocator.22"* dereferenceable(1)) #4 align 2 {
  %5 = alloca %"class.std::deque.20"*, align 8
  %6 = alloca %"class.std::allocator.22"*, align 8
  store %"class.std::deque.20"* %0, %"class.std::deque.20"** %5, align 8
  store %"class.std::allocator.22"* %3, %"class.std::allocator.22"** %6, align 8
  %7 = load %"class.std::deque.20"*, %"class.std::deque.20"** %5, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSt5dequeIZ4mainE5PointSaIS0_EE5beginEv(%"struct.std::_Deque_iterator.25"* noalias sret, %"class.std::deque.20"*) #4 align 2 {
  %3 = alloca %"class.std::deque.20"*, align 8
  store %"class.std::deque.20"* %1, %"class.std::deque.20"** %3, align 8
  %4 = load %"class.std::deque.20"*, %"class.std::deque.20"** %3, align 8
  %5 = bitcast %"class.std::deque.20"* %4 to %"class.std::_Deque_base.21"*
  %6 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %6, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIZ4mainE5PointRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator.25"* %0, %"struct.std::_Deque_iterator.25"* dereferenceable(32) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSt5dequeIZ4mainE5PointSaIS0_EE3endEv(%"struct.std::_Deque_iterator.25"* noalias sret, %"class.std::deque.20"*) #4 align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.677
  %6 = load i32, i32* @y.678
  %7 = add i32 %5, -359102835
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -359102835
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1309846318, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %79
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1309846318, label %19
    i32 -1422451174, label %39
    i32 1535764028, label %72
    i32 -1344530836, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %79

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1422451174, i32 -1344530836
  store i32 %38, i32* %15
  br label %79

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::deque.20"*, align 8
  store %"class.std::deque.20"* %1, %"class.std::deque.20"** %40, align 8
  %41 = load %"class.std::deque.20"*, %"class.std::deque.20"** %40, align 8
  %42 = bitcast %"class.std::deque.20"* %41 to %"class.std::_Deque_base.21"*
  %43 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %43, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIZ4mainE5PointRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator.25"* %0, %"struct.std::_Deque_iterator.25"* dereferenceable(32) %44) #3
  %45 = load i32, i32* @x.677
  %46 = load i32, i32* @y.678
  %47 = add i32 %45, -247354438
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -247354438
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 1535764028, i32 -1344530836
  store i32 %71, i32* %15
  br label %79

; <label>:72:                                     ; preds = %16
  ret void

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::deque.20"*, align 8
  store %"class.std::deque.20"* %1, %"class.std::deque.20"** %74, align 8
  %75 = load %"class.std::deque.20"*, %"class.std::deque.20"** %74, align 8
  %76 = bitcast %"class.std::deque.20"* %75 to %"class.std::_Deque_base.21"*
  %77 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %77, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIZ4mainE5PointRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator.25"* %0, %"struct.std::_Deque_iterator.25"* dereferenceable(32) %78) #3
  store i32 -1422451174, i32* %15
  br label %79

; <label>:79:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(1) %"class.std::allocator.22"* @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base.21"*) #4 align 2 {
  %2 = alloca %"class.std::_Deque_base.21"*, align 8
  store %"class.std::_Deque_base.21"* %0, %"class.std::_Deque_base.21"** %2, align 8
  %3 = load %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %4 to %"class.std::allocator.22"*
  ret %"class.std::allocator.22"* %5
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EED2Ev(%"class.std::_Deque_base.21"*) unnamed_addr #4 align 2 {
  %2 = alloca i1
  %3 = alloca %"class.std::_Deque_base.21"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.681
  %7 = load i32, i32* @y.682
  %8 = add i32 %6, 308881439
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 308881439
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -611642983, i32* %16
  br label %17

; <label>:17:                                     ; preds = %1, %98
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -611642983, label %20
    i32 -1389146433, label %28
    i32 1897667154, label %63
    i32 -821292167, label %66
    i32 -580189535, label %88
    i32 -2105554652, label %91
  ]

; <label>:19:                                     ; preds = %17
  br label %98

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1389146433, i32 -2105554652
  store i32 %27, i32* %16
  br label %98

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::_Deque_base.21"*, align 8
  store %"class.std::_Deque_base.21"* %0, %"class.std::_Deque_base.21"** %29, align 8
  %30 = load %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %29, align 8
  store %"class.std::_Deque_base.21"* %30, %"class.std::_Deque_base.21"** %3
  %31 = load volatile %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %3
  %32 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %32, i32 0, i32 0
  %34 = load %struct.Point**, %struct.Point*** %33, align 8
  %35 = icmp ne %struct.Point** %34, null
  store i1 %35, i1* %2
  %36 = load i32, i32* @x.681
  %37 = load i32, i32* @y.682
  %38 = sub i32 %36, -1150682827
  %39 = sub i32 %38, 1
  %40 = add i32 %39, -1150682827
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 1897667154, i32 -2105554652
  store i32 %62, i32* %16
  br label %98

; <label>:63:                                     ; preds = %17
  %64 = load volatile i1, i1* %2
  %65 = select i1 %64, i32 -821292167, i32 -580189535
  store i32 %65, i32* %16
  br label %98

; <label>:66:                                     ; preds = %17
  %67 = load volatile %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %3
  %68 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %67, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %68, i32 0, i32 2
  %70 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %69, i32 0, i32 3
  %71 = load %struct.Point**, %struct.Point*** %70, align 8
  %72 = load volatile %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %3
  %73 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %72, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %73, i32 0, i32 3
  %75 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %74, i32 0, i32 3
  %76 = load %struct.Point**, %struct.Point*** %75, align 8
  %77 = getelementptr inbounds %struct.Point*, %struct.Point** %76, i64 1
  %78 = load volatile %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %3
  call void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE16_M_destroy_nodesEPPS0_S4_(%"class.std::_Deque_base.21"* %78, %struct.Point** %71, %struct.Point** %77) #3
  %79 = load volatile %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %3
  %80 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %79, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %80, i32 0, i32 0
  %82 = load %struct.Point**, %struct.Point*** %81, align 8
  %83 = load volatile %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %3
  %84 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %83, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %84, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = load volatile %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %3
  call void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE17_M_deallocate_mapEPPS0_m(%"class.std::_Deque_base.21"* %87, %struct.Point** %82, i64 %86) #3
  store i32 -580189535, i32* %16
  br label %98

; <label>:88:                                     ; preds = %17
  %89 = load volatile %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %3
  %90 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %89, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE11_Deque_implD2Ev(%"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %90) #3
  ret void

; <label>:91:                                     ; preds = %17
  %92 = alloca %"class.std::_Deque_base.21"*, align 8
  store %"class.std::_Deque_base.21"* %0, %"class.std::_Deque_base.21"** %92, align 8
  %93 = load %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %92, align 8
  %94 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %93, i32 0, i32 0
  %95 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %94, i32 0, i32 0
  %96 = load %struct.Point**, %struct.Point*** %95, align 8
  %97 = icmp ne %struct.Point** %96, null
  store i32 -1389146433, i32* %16
  br label %98

; <label>:98:                                     ; preds = %91, %66, %63, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSt15_Deque_iteratorIZ4mainE5PointRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator.25"*, %"struct.std::_Deque_iterator.25"* dereferenceable(32)) unnamed_addr #4 align 2 {
  %3 = alloca %"struct.std::_Deque_iterator.25"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator.25"*, align 8
  store %"struct.std::_Deque_iterator.25"* %0, %"struct.std::_Deque_iterator.25"** %3, align 8
  store %"struct.std::_Deque_iterator.25"* %1, %"struct.std::_Deque_iterator.25"** %4, align 8
  %5 = load %"struct.std::_Deque_iterator.25"*, %"struct.std::_Deque_iterator.25"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Deque_iterator.25"*, %"struct.std::_Deque_iterator.25"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %7, i32 0, i32 0
  %9 = load %struct.Point*, %struct.Point** %8, align 8
  store %struct.Point* %9, %struct.Point** %6, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %5, i32 0, i32 1
  %11 = load %"struct.std::_Deque_iterator.25"*, %"struct.std::_Deque_iterator.25"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %11, i32 0, i32 1
  %13 = load %struct.Point*, %struct.Point** %12, align 8
  store %struct.Point* %13, %struct.Point** %10, align 8
  %14 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %5, i32 0, i32 2
  %15 = load %"struct.std::_Deque_iterator.25"*, %"struct.std::_Deque_iterator.25"** %4, align 8
  %16 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %15, i32 0, i32 2
  %17 = load %struct.Point*, %struct.Point** %16, align 8
  store %struct.Point* %17, %struct.Point** %14, align 8
  %18 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %5, i32 0, i32 3
  %19 = load %"struct.std::_Deque_iterator.25"*, %"struct.std::_Deque_iterator.25"** %4, align 8
  %20 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %19, i32 0, i32 3
  %21 = load %struct.Point**, %struct.Point*** %20, align 8
  store %struct.Point** %21, %struct.Point*** %18, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(80) %"class.std::deque.20"* @_ZSt4moveIRSt5dequeIZ4mainE5PointSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::deque.20"* dereferenceable(80)) #4 {
  %2 = alloca %"class.std::deque.20"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.685
  %6 = load i32, i32* @y.686
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1451078870, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1451078870, label %18
    i32 -869775882, label %38
    i32 -515848701, label %56
    i32 771842213, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -869775882, i32 771842213
  store i32 %37, i32* %14
  br label %61

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::deque.20"*, align 8
  store %"class.std::deque.20"* %0, %"class.std::deque.20"** %39, align 8
  %40 = load %"class.std::deque.20"*, %"class.std::deque.20"** %39, align 8
  store %"class.std::deque.20"* %40, %"class.std::deque.20"** %2
  %41 = load i32, i32* @x.685
  %42 = load i32, i32* @y.686
  %43 = sub i32 %41, 408597428
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 408597428
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -515848701, i32 771842213
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  %57 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %2
  ret %"class.std::deque.20"* %57

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::deque.20"*, align 8
  store %"class.std::deque.20"* %0, %"class.std::deque.20"** %59, align 8
  %60 = load %"class.std::deque.20"*, %"class.std::deque.20"** %59, align 8
  store i32 -869775882, i32* %14
  br label %61

; <label>:61:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define internal void @_ZNSt5dequeIZ4mainE5PointSaIS0_EEC2EOS2_(%"class.std::deque.20"*, %"class.std::deque.20"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::deque.20"*, align 8
  %4 = alloca %"class.std::deque.20"*, align 8
  store %"class.std::deque.20"* %0, %"class.std::deque.20"** %3, align 8
  store %"class.std::deque.20"* %1, %"class.std::deque.20"** %4, align 8
  %5 = load %"class.std::deque.20"*, %"class.std::deque.20"** %3, align 8
  %6 = bitcast %"class.std::deque.20"* %5 to %"class.std::_Deque_base.21"*
  %7 = load %"class.std::deque.20"*, %"class.std::deque.20"** %4, align 8
  %8 = call dereferenceable(80) %"class.std::deque.20"* @_ZSt4moveIRSt5dequeIZ4mainE5PointSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::deque.20"* dereferenceable(80) %7) #3
  %9 = bitcast %"class.std::deque.20"* %8 to %"class.std::_Deque_base.21"*
  call void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EEC2EOS2_(%"class.std::_Deque_base.21"* %6, %"class.std::_Deque_base.21"* dereferenceable(80) %9)
  ret void
}

; Function Attrs: noinline uwtable
define internal void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EEC2EOS2_(%"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::_Deque_base.21"*, align 8
  %4 = alloca %"class.std::_Deque_base.21"*, align 8
  %5 = alloca %"struct.std::integral_constant", align 1
  %6 = alloca %"struct.__gnu_cxx::__allocator_always_compares_equal", align 1
  store %"class.std::_Deque_base.21"* %0, %"class.std::_Deque_base.21"** %3, align 8
  store %"class.std::_Deque_base.21"* %1, %"class.std::_Deque_base.21"** %4, align 8
  %7 = load %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %3, align 8
  %8 = load %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %4, align 8
  %9 = call dereferenceable(80) %"class.std::_Deque_base.21"* @_ZSt4moveIRSt11_Deque_baseIZ4mainE5PointSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::_Deque_base.21"* dereferenceable(80) %8) #3
  %10 = bitcast %"struct.__gnu_cxx::__allocator_always_compares_equal"* %6 to %"struct.std::integral_constant"*
  call void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EEC2EOS2_St17integral_constantIbLb1EE(%"class.std::_Deque_base.21"* %7, %"class.std::_Deque_base.21"* dereferenceable(80) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(80) %"class.std::_Deque_base.21"* @_ZSt4moveIRSt11_Deque_baseIZ4mainE5PointSaIS1_EEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::_Deque_base.21"* dereferenceable(80)) #4 {
  %2 = alloca %"class.std::_Deque_base.21"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.691
  %6 = load i32, i32* @y.692
  %7 = sub i32 %5, -464850771
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -464850771
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 308984195, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 308984195, label %19
    i32 2089980072, label %39
    i32 54369985, label %57
    i32 -1425463202, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 2089980072, i32 -1425463202
  store i32 %38, i32* %15
  br label %62

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Deque_base.21"*, align 8
  store %"class.std::_Deque_base.21"* %0, %"class.std::_Deque_base.21"** %40, align 8
  %41 = load %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %40, align 8
  store %"class.std::_Deque_base.21"* %41, %"class.std::_Deque_base.21"** %2
  %42 = load i32, i32* @x.691
  %43 = load i32, i32* @y.692
  %44 = add i32 %42, 49966111
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 49966111
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 54369985, i32 -1425463202
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %2
  ret %"class.std::_Deque_base.21"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.std::_Deque_base.21"*, align 8
  store %"class.std::_Deque_base.21"* %0, %"class.std::_Deque_base.21"** %60, align 8
  %61 = load %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %60, align 8
  store i32 2089980072, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define internal void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EEC2EOS2_St17integral_constantIbLb1EE(%"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"* dereferenceable(80)) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.693
  %4 = load i32, i32* @y.694
  %5 = sub i32 %3, -1533612157
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -1533612157
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %105

; <label>:29:                                     ; preds = %2, %105
  %30 = alloca %"struct.std::integral_constant", align 1
  %31 = alloca %"class.std::_Deque_base.21"*, align 8
  %32 = alloca %"class.std::_Deque_base.21"*, align 8
  %33 = alloca i8*
  %34 = alloca i32
  store %"class.std::_Deque_base.21"* %0, %"class.std::_Deque_base.21"** %31, align 8
  store %"class.std::_Deque_base.21"* %1, %"class.std::_Deque_base.21"** %32, align 8
  %35 = load %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %31, align 8
  %36 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %35, i32 0, i32 0
  %37 = load %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %32, align 8
  %38 = call dereferenceable(1) %"class.std::allocator.22"* @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base.21"* %37) #3
  %39 = call dereferenceable(1) %"class.std::allocator.22"* @_ZSt4moveIRSaIZ4mainE5PointEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::allocator.22"* dereferenceable(1) %38) #3
  call void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE11_Deque_implC2EOS1_(%"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %36, %"class.std::allocator.22"* dereferenceable(1) %39) #3
  %40 = load i32, i32* @x.693
  %41 = load i32, i32* @y.694
  %42 = add i32 %40, 2105862725
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, 2105862725
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  br i1 %52, label %54, label %105

; <label>:54:                                     ; preds = %29
  invoke void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE17_M_initialize_mapEm(%"class.std::_Deque_base.21"* %35, i64 0)
          to label %55 unwind label %65

; <label>:55:                                     ; preds = %54
  %56 = load %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %32, align 8
  %57 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %56, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %57, i32 0, i32 0
  %59 = load %struct.Point**, %struct.Point*** %58, align 8
  %60 = icmp ne %struct.Point** %59, null
  br i1 %60, label %61, label %69

; <label>:61:                                     ; preds = %55
  %62 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %35, i32 0, i32 0
  %63 = load %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %32, align 8
  %64 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %63, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE11_Deque_impl12_M_swap_dataERS3_(%"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %62, %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* dereferenceable(80) %64) #3
  br label %69

; <label>:65:                                     ; preds = %54
  %66 = landingpad { i8*, i32 }
          cleanup
  %67 = extractvalue { i8*, i32 } %66, 0
  store i8* %67, i8** %33, align 8
  %68 = extractvalue { i8*, i32 } %66, 1
  store i32 %68, i32* %34, align 4
  call void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE11_Deque_implD2Ev(%"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %36) #3
  br label %100

; <label>:69:                                     ; preds = %61, %55
  %70 = load i32, i32* @x.693
  %71 = load i32, i32* @y.694
  %72 = add i32 %70, 1481861803
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, 1481861803
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  br i1 %82, label %84, label %116

; <label>:84:                                     ; preds = %69, %116
  %85 = load i32, i32* @x.693
  %86 = load i32, i32* @y.694
  %87 = sub i32 %85, -757837970
  %88 = sub i32 %87, 1
  %89 = add i32 %88, -757837970
  %90 = sub i32 %85, 1
  %91 = mul i32 %85, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %86, 10
  %95 = and i1 %93, %94
  %96 = xor i1 %93, %94
  %97 = or i1 %95, %96
  %98 = or i1 %93, %94
  br i1 %97, label %99, label %116

; <label>:99:                                     ; preds = %84
  ret void

; <label>:100:                                    ; preds = %65
  %101 = load i8*, i8** %33, align 8
  %102 = load i32, i32* %34, align 4
  %103 = insertvalue { i8*, i32 } undef, i8* %101, 0
  %104 = insertvalue { i8*, i32 } %103, i32 %102, 1
  resume { i8*, i32 } %104

; <label>:105:                                    ; preds = %29, %2
  %106 = alloca %"struct.std::integral_constant", align 1
  %107 = alloca %"class.std::_Deque_base.21"*, align 8
  %108 = alloca %"class.std::_Deque_base.21"*, align 8
  %109 = alloca i8*
  %110 = alloca i32
  store %"class.std::_Deque_base.21"* %0, %"class.std::_Deque_base.21"** %107, align 8
  store %"class.std::_Deque_base.21"* %1, %"class.std::_Deque_base.21"** %108, align 8
  %111 = load %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %107, align 8
  %112 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %111, i32 0, i32 0
  %113 = load %"class.std::_Deque_base.21"*, %"class.std::_Deque_base.21"** %108, align 8
  %114 = call dereferenceable(1) %"class.std::allocator.22"* @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base.21"* %113) #3
  %115 = call dereferenceable(1) %"class.std::allocator.22"* @_ZSt4moveIRSaIZ4mainE5PointEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::allocator.22"* dereferenceable(1) %114) #3
  call void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE11_Deque_implC2EOS1_(%"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %112, %"class.std::allocator.22"* dereferenceable(1) %115) #3
  br label %29

; <label>:116:                                    ; preds = %84, %69
  br label %84
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(1) %"class.std::allocator.22"* @_ZSt4moveIRSaIZ4mainE5PointEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::allocator.22"* dereferenceable(1)) #4 {
  %2 = alloca %"class.std::allocator.22"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.695
  %6 = load i32, i32* @y.696
  %7 = add i32 %5, 698975282
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 698975282
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1945666872, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %49
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1945666872, label %19
    i32 623986519, label %27
    i32 -937686229, label %44
    i32 1919887952, label %46
  ]

; <label>:18:                                     ; preds = %16
  br label %49

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 623986519, i32 1919887952
  store i32 %26, i32* %15
  br label %49

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.22"*, align 8
  store %"class.std::allocator.22"* %0, %"class.std::allocator.22"** %28, align 8
  %29 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %28, align 8
  store %"class.std::allocator.22"* %29, %"class.std::allocator.22"** %2
  %30 = load i32, i32* @x.695
  %31 = load i32, i32* @y.696
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -937686229, i32 1919887952
  store i32 %43, i32* %15
  br label %49

; <label>:44:                                     ; preds = %16
  %45 = load volatile %"class.std::allocator.22"*, %"class.std::allocator.22"** %2
  ret %"class.std::allocator.22"* %45

; <label>:46:                                     ; preds = %16
  %47 = alloca %"class.std::allocator.22"*, align 8
  store %"class.std::allocator.22"* %0, %"class.std::allocator.22"** %47, align 8
  %48 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %47, align 8
  store i32 623986519, i32* %15
  br label %49

; <label>:49:                                     ; preds = %46, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE11_Deque_implC2EOS1_(%"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"*, %"class.std::allocator.22"* dereferenceable(1)) unnamed_addr #4 align 2 {
  %3 = alloca %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"*, align 8
  %4 = alloca %"class.std::allocator.22"*, align 8
  store %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %0, %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"** %3, align 8
  store %"class.std::allocator.22"* %1, %"class.std::allocator.22"** %4, align 8
  %5 = load %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"*, %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %5 to %"class.std::allocator.22"*
  %7 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.22"* @_ZSt4moveIRSaIZ4mainE5PointEEONSt16remove_referenceIT_E4typeEOS4_(%"class.std::allocator.22"* dereferenceable(1) %7) #3
  call void @_ZNSaIZ4mainE5PointEC2ERKS0_(%"class.std::allocator.22"* %6, %"class.std::allocator.22"* dereferenceable(1) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %5, i32 0, i32 0
  store %struct.Point** null, %struct.Point*** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %5, i32 0, i32 1
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %5, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIZ4mainE5PointRS0_PS0_EC2Ev(%"struct.std::_Deque_iterator.25"* %11) #3
  %12 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %5, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIZ4mainE5PointRS0_PS0_EC2Ev(%"struct.std::_Deque_iterator.25"* %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE11_Deque_impl12_M_swap_dataERS3_(%"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"*, %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* dereferenceable(80)) #4 align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.699
  %6 = load i32, i32* @y.700
  %7 = sub i32 %5, -451564929
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -451564929
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1151906206, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %99
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1151906206, label %19
    i32 1010468493, label %39
    i32 1563048241, label %82
    i32 -2045429616, label %83
  ]

; <label>:18:                                     ; preds = %16
  br label %99

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1010468493, i32 -2045429616
  store i32 %38, i32* %15
  br label %99

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"*, align 8
  %41 = alloca %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %0, %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"** %40, align 8
  store %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %1, %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"** %41, align 8
  %42 = load %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"*, %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"** %40, align 8
  %43 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %42, i32 0, i32 2
  %44 = load %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"*, %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"** %41, align 8
  %45 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %44, i32 0, i32 2
  call void @_ZSt4swapISt15_Deque_iteratorIZ4mainE5PointRS1_PS1_EEvRT_S6_(%"struct.std::_Deque_iterator.25"* dereferenceable(32) %43, %"struct.std::_Deque_iterator.25"* dereferenceable(32) %45) #3
  %46 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %42, i32 0, i32 3
  %47 = load %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"*, %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"** %41, align 8
  %48 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %47, i32 0, i32 3
  call void @_ZSt4swapISt15_Deque_iteratorIZ4mainE5PointRS1_PS1_EEvRT_S6_(%"struct.std::_Deque_iterator.25"* dereferenceable(32) %46, %"struct.std::_Deque_iterator.25"* dereferenceable(32) %48) #3
  %49 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %42, i32 0, i32 0
  %50 = load %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"*, %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"** %41, align 8
  %51 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %50, i32 0, i32 0
  call void @_ZSt4swapIPPZ4mainE5PointEvRT_S4_(%struct.Point*** dereferenceable(8) %49, %struct.Point*** dereferenceable(8) %51) #3
  %52 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %42, i32 0, i32 1
  %53 = load %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"*, %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"** %41, align 8
  %54 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %53, i32 0, i32 1
  call void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8) %52, i64* dereferenceable(8) %54) #3
  %55 = load i32, i32* @x.699
  %56 = load i32, i32* @y.700
  %57 = sub i32 %55, -1068115158
  %58 = sub i32 %57, 1
  %59 = add i32 %58, -1068115158
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 false, true
  %68 = and i1 %65, false
  %69 = and i1 %63, %67
  %70 = and i1 %66, false
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 false, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  %81 = select i1 %79, i32 1563048241, i32 -2045429616
  store i32 %81, i32* %15
  br label %99

; <label>:82:                                     ; preds = %16
  ret void

; <label>:83:                                     ; preds = %16
  %84 = alloca %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"*, align 8
  %85 = alloca %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %0, %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"** %84, align 8
  store %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %1, %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"** %85, align 8
  %86 = load %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"*, %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"** %84, align 8
  %87 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %86, i32 0, i32 2
  %88 = load %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"*, %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"** %85, align 8
  %89 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %88, i32 0, i32 2
  call void @_ZSt4swapISt15_Deque_iteratorIZ4mainE5PointRS1_PS1_EEvRT_S6_(%"struct.std::_Deque_iterator.25"* dereferenceable(32) %87, %"struct.std::_Deque_iterator.25"* dereferenceable(32) %89) #3
  %90 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %86, i32 0, i32 3
  %91 = load %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"*, %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"** %85, align 8
  %92 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %91, i32 0, i32 3
  call void @_ZSt4swapISt15_Deque_iteratorIZ4mainE5PointRS1_PS1_EEvRT_S6_(%"struct.std::_Deque_iterator.25"* dereferenceable(32) %90, %"struct.std::_Deque_iterator.25"* dereferenceable(32) %92) #3
  %93 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %86, i32 0, i32 0
  %94 = load %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"*, %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"** %85, align 8
  %95 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %94, i32 0, i32 0
  call void @_ZSt4swapIPPZ4mainE5PointEvRT_S4_(%struct.Point*** dereferenceable(8) %93, %struct.Point*** dereferenceable(8) %95) #3
  %96 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %86, i32 0, i32 1
  %97 = load %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"*, %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"** %85, align 8
  %98 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %97, i32 0, i32 1
  call void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8) %96, i64* dereferenceable(8) %98) #3
  store i32 1010468493, i32* %15
  br label %99

; <label>:99:                                     ; preds = %83, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSaIZ4mainE5PointEC2ERKS0_(%"class.std::allocator.22"*, %"class.std::allocator.22"* dereferenceable(1)) unnamed_addr #4 align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.701
  %6 = load i32, i32* @y.702
  %7 = sub i32 %5, 1307128829
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1307128829
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1767100551, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1767100551, label %19
    i32 279227987, label %39
    i32 -1157368195, label %61
    i32 1941511861, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 279227987, i32 1941511861
  store i32 %38, i32* %15
  br label %69

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.22"*, align 8
  %41 = alloca %"class.std::allocator.22"*, align 8
  store %"class.std::allocator.22"* %0, %"class.std::allocator.22"** %40, align 8
  store %"class.std::allocator.22"* %1, %"class.std::allocator.22"** %41, align 8
  %42 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %40, align 8
  %43 = bitcast %"class.std::allocator.22"* %42 to %"class.__gnu_cxx::new_allocator.23"*
  %44 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %41, align 8
  %45 = bitcast %"class.std::allocator.22"* %44 to %"class.__gnu_cxx::new_allocator.23"*
  call void @_ZN9__gnu_cxx13new_allocatorIZ4mainE5PointEC2ERKS2_(%"class.__gnu_cxx::new_allocator.23"* %43, %"class.__gnu_cxx::new_allocator.23"* dereferenceable(1) %45) #3
  %46 = load i32, i32* @x.701
  %47 = load i32, i32* @y.702
  %48 = sub i32 %46, -1365339507
  %49 = sub i32 %48, 1
  %50 = add i32 %49, -1365339507
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -1157368195, i32 1941511861
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::allocator.22"*, align 8
  %64 = alloca %"class.std::allocator.22"*, align 8
  store %"class.std::allocator.22"* %0, %"class.std::allocator.22"** %63, align 8
  store %"class.std::allocator.22"* %1, %"class.std::allocator.22"** %64, align 8
  %65 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %63, align 8
  %66 = bitcast %"class.std::allocator.22"* %65 to %"class.__gnu_cxx::new_allocator.23"*
  %67 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %64, align 8
  %68 = bitcast %"class.std::allocator.22"* %67 to %"class.__gnu_cxx::new_allocator.23"*
  call void @_ZN9__gnu_cxx13new_allocatorIZ4mainE5PointEC2ERKS2_(%"class.__gnu_cxx::new_allocator.23"* %66, %"class.__gnu_cxx::new_allocator.23"* dereferenceable(1) %68) #3
  store i32 279227987, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZN9__gnu_cxx13new_allocatorIZ4mainE5PointEC2ERKS2_(%"class.__gnu_cxx::new_allocator.23"*, %"class.__gnu_cxx::new_allocator.23"* dereferenceable(1)) unnamed_addr #4 align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.703
  %6 = load i32, i32* @y.704
  %7 = add i32 %5, 1230542732
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1230542732
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -744507141, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %75
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -744507141, label %19
    i32 1036602017, label %39
    i32 -400528509, label %70
    i32 843030428, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %75

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1036602017, i32 843030428
  store i32 %38, i32* %15
  br label %75

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  %41 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %0, %"class.__gnu_cxx::new_allocator.23"** %40, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %1, %"class.__gnu_cxx::new_allocator.23"** %41, align 8
  %42 = load %"class.__gnu_cxx::new_allocator.23"*, %"class.__gnu_cxx::new_allocator.23"** %40, align 8
  %43 = load i32, i32* @x.703
  %44 = load i32, i32* @y.704
  %45 = sub i32 %43, -59182405
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -59182405
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -400528509, i32 843030428
  store i32 %69, i32* %15
  br label %75

; <label>:70:                                     ; preds = %16
  ret void

; <label>:71:                                     ; preds = %16
  %72 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  %73 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %0, %"class.__gnu_cxx::new_allocator.23"** %72, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %1, %"class.__gnu_cxx::new_allocator.23"** %73, align 8
  %74 = load %"class.__gnu_cxx::new_allocator.23"*, %"class.__gnu_cxx::new_allocator.23"** %72, align 8
  store i32 1036602017, i32* %15
  br label %75

; <label>:75:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZSt4swapISt15_Deque_iteratorIZ4mainE5PointRS1_PS1_EEvRT_S6_(%"struct.std::_Deque_iterator.25"* dereferenceable(32), %"struct.std::_Deque_iterator.25"* dereferenceable(32)) #4 {
  %3 = alloca %"struct.std::_Deque_iterator.25"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator.25"*, align 8
  %5 = alloca %"struct.std::_Deque_iterator.25", align 8
  store %"struct.std::_Deque_iterator.25"* %0, %"struct.std::_Deque_iterator.25"** %3, align 8
  store %"struct.std::_Deque_iterator.25"* %1, %"struct.std::_Deque_iterator.25"** %4, align 8
  %6 = load %"struct.std::_Deque_iterator.25"*, %"struct.std::_Deque_iterator.25"** %3, align 8
  %7 = call dereferenceable(32) %"struct.std::_Deque_iterator.25"* @_ZSt4moveIRSt15_Deque_iteratorIZ4mainE5PointRS1_PS1_EEONSt16remove_referenceIT_E4typeEOS7_(%"struct.std::_Deque_iterator.25"* dereferenceable(32) %6) #3
  call void @_ZNSt15_Deque_iteratorIZ4mainE5PointRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator.25"* %5, %"struct.std::_Deque_iterator.25"* dereferenceable(32) %7) #3
  %8 = load %"struct.std::_Deque_iterator.25"*, %"struct.std::_Deque_iterator.25"** %4, align 8
  %9 = call dereferenceable(32) %"struct.std::_Deque_iterator.25"* @_ZSt4moveIRSt15_Deque_iteratorIZ4mainE5PointRS1_PS1_EEONSt16remove_referenceIT_E4typeEOS7_(%"struct.std::_Deque_iterator.25"* dereferenceable(32) %8) #3
  %10 = load %"struct.std::_Deque_iterator.25"*, %"struct.std::_Deque_iterator.25"** %3, align 8
  %11 = bitcast %"struct.std::_Deque_iterator.25"* %10 to i8*
  %12 = bitcast %"struct.std::_Deque_iterator.25"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 32, i32 8, i1 false)
  %13 = call dereferenceable(32) %"struct.std::_Deque_iterator.25"* @_ZSt4moveIRSt15_Deque_iteratorIZ4mainE5PointRS1_PS1_EEONSt16remove_referenceIT_E4typeEOS7_(%"struct.std::_Deque_iterator.25"* dereferenceable(32) %5) #3
  %14 = load %"struct.std::_Deque_iterator.25"*, %"struct.std::_Deque_iterator.25"** %4, align 8
  %15 = bitcast %"struct.std::_Deque_iterator.25"* %14 to i8*
  %16 = bitcast %"struct.std::_Deque_iterator.25"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 32, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZSt4swapIPPZ4mainE5PointEvRT_S4_(%struct.Point*** dereferenceable(8), %struct.Point*** dereferenceable(8)) #4 {
  %3 = alloca %struct.Point***, align 8
  %4 = alloca %struct.Point***, align 8
  %5 = alloca %struct.Point**, align 8
  store %struct.Point*** %0, %struct.Point**** %3, align 8
  store %struct.Point*** %1, %struct.Point**** %4, align 8
  %6 = load %struct.Point***, %struct.Point**** %3, align 8
  %7 = call dereferenceable(8) %struct.Point*** @_ZSt4moveIRPPZ4mainE5PointEONSt16remove_referenceIT_E4typeEOS5_(%struct.Point*** dereferenceable(8) %6) #3
  %8 = load %struct.Point**, %struct.Point*** %7, align 8
  store %struct.Point** %8, %struct.Point*** %5, align 8
  %9 = load %struct.Point***, %struct.Point**** %4, align 8
  %10 = call dereferenceable(8) %struct.Point*** @_ZSt4moveIRPPZ4mainE5PointEONSt16remove_referenceIT_E4typeEOS5_(%struct.Point*** dereferenceable(8) %9) #3
  %11 = load %struct.Point**, %struct.Point*** %10, align 8
  %12 = load %struct.Point***, %struct.Point**** %3, align 8
  store %struct.Point** %11, %struct.Point*** %12, align 8
  %13 = call dereferenceable(8) %struct.Point*** @_ZSt4moveIRPPZ4mainE5PointEONSt16remove_referenceIT_E4typeEOS5_(%struct.Point*** dereferenceable(8) %5) #3
  %14 = load %struct.Point**, %struct.Point*** %13, align 8
  %15 = load %struct.Point***, %struct.Point**** %4, align 8
  store %struct.Point** %14, %struct.Point*** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  %6 = load i64*, i64** %3, align 8
  %7 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %6) #3
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %5, align 8
  %9 = load i64*, i64** %4, align 8
  %10 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %9) #3
  %11 = load i64, i64* %10, align 8
  %12 = load i64*, i64** %3, align 8
  store i64 %11, i64* %12, align 8
  %13 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %5) #3
  %14 = load i64, i64* %13, align 8
  %15 = load i64*, i64** %4, align 8
  store i64 %14, i64* %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(32) %"struct.std::_Deque_iterator.25"* @_ZSt4moveIRSt15_Deque_iteratorIZ4mainE5PointRS1_PS1_EEONSt16remove_referenceIT_E4typeEOS7_(%"struct.std::_Deque_iterator.25"* dereferenceable(32)) #4 {
  %2 = alloca %"struct.std::_Deque_iterator.25"*, align 8
  store %"struct.std::_Deque_iterator.25"* %0, %"struct.std::_Deque_iterator.25"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator.25"*, %"struct.std::_Deque_iterator.25"** %2, align 8
  ret %"struct.std::_Deque_iterator.25"* %3
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(8) %struct.Point*** @_ZSt4moveIRPPZ4mainE5PointEONSt16remove_referenceIT_E4typeEOS5_(%struct.Point*** dereferenceable(8)) #4 {
  %2 = alloca %struct.Point***
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.713
  %6 = load i32, i32* @y.714
  %7 = sub i32 %5, -990133690
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -990133690
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1319409787, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1319409787, label %19
    i32 -517661992, label %39
    i32 -2142839518, label %57
    i32 -2053944438, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -517661992, i32 -2053944438
  store i32 %38, i32* %15
  br label %62

; <label>:39:                                     ; preds = %16
  %40 = alloca %struct.Point***, align 8
  store %struct.Point*** %0, %struct.Point**** %40, align 8
  %41 = load %struct.Point***, %struct.Point**** %40, align 8
  store %struct.Point*** %41, %struct.Point**** %2
  %42 = load i32, i32* @x.713
  %43 = load i32, i32* @y.714
  %44 = sub i32 %42, -1037540127
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -1037540127
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -2142839518, i32 -2053944438
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %struct.Point***, %struct.Point**** %2
  ret %struct.Point*** %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %struct.Point***, align 8
  store %struct.Point*** %0, %struct.Point**** %60, align 8
  %61 = load %struct.Point***, %struct.Point**** %60, align 8
  store i32 -517661992, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define internal void @_ZNSt5dequeIZ4mainE5PointSaIS0_EE9push_backEOS0_(%"class.std::deque.20"*, %struct.Point* dereferenceable(24)) #0 align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.717
  %6 = load i32, i32* @y.718
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1833480384, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %66
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1833480384, label %18
    i32 -1645303619, label %26
    i32 -2041955376, label %59
    i32 -364120358, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %66

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1645303619, i32 -364120358
  store i32 %25, i32* %14
  br label %66

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::deque.20"*, align 8
  %28 = alloca %struct.Point*, align 8
  store %"class.std::deque.20"* %0, %"class.std::deque.20"** %27, align 8
  store %struct.Point* %1, %struct.Point** %28, align 8
  %29 = load %"class.std::deque.20"*, %"class.std::deque.20"** %27, align 8
  %30 = load %struct.Point*, %struct.Point** %28, align 8
  %31 = call dereferenceable(24) %struct.Point* @_ZSt4moveIRZ4mainE5PointEONSt16remove_referenceIT_E4typeEOS3_(%struct.Point* dereferenceable(24) %30) #3
  call void @_ZNSt5dequeIZ4mainE5PointSaIS0_EE12emplace_backIJS0_EEEvDpOT_(%"class.std::deque.20"* %29, %struct.Point* dereferenceable(24) %31)
  %32 = load i32, i32* @x.717
  %33 = load i32, i32* @y.718
  %34 = sub i32 %32, 489371961
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 489371961
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -2041955376, i32 -364120358
  store i32 %58, i32* %14
  br label %66

; <label>:59:                                     ; preds = %15
  ret void

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::deque.20"*, align 8
  %62 = alloca %struct.Point*, align 8
  store %"class.std::deque.20"* %0, %"class.std::deque.20"** %61, align 8
  store %struct.Point* %1, %struct.Point** %62, align 8
  %63 = load %"class.std::deque.20"*, %"class.std::deque.20"** %61, align 8
  %64 = load %struct.Point*, %struct.Point** %62, align 8
  %65 = call dereferenceable(24) %struct.Point* @_ZSt4moveIRZ4mainE5PointEONSt16remove_referenceIT_E4typeEOS3_(%struct.Point* dereferenceable(24) %64) #3
  call void @_ZNSt5dequeIZ4mainE5PointSaIS0_EE12emplace_backIJS0_EEEvDpOT_(%"class.std::deque.20"* %63, %struct.Point* dereferenceable(24) %65)
  store i32 -1645303619, i32* %14
  br label %66

; <label>:66:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(24) %struct.Point* @_ZSt4moveIRZ4mainE5PointEONSt16remove_referenceIT_E4typeEOS3_(%struct.Point* dereferenceable(24)) #4 {
  %2 = alloca %struct.Point*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.719
  %6 = load i32, i32* @y.720
  %7 = add i32 %5, -1668927062
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1668927062
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -800691662, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -800691662, label %19
    i32 -25127444, label %27
    i32 -1737829770, label %57
    i32 -1430157153, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -25127444, i32 -1430157153
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca %struct.Point*, align 8
  store %struct.Point* %0, %struct.Point** %28, align 8
  %29 = load %struct.Point*, %struct.Point** %28, align 8
  store %struct.Point* %29, %struct.Point** %2
  %30 = load i32, i32* @x.719
  %31 = load i32, i32* @y.720
  %32 = add i32 %30, 2096886975
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 2096886975
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -1737829770, i32 -1430157153
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %struct.Point*, %struct.Point** %2
  ret %struct.Point* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %struct.Point*, align 8
  store %struct.Point* %0, %struct.Point** %60, align 8
  %61 = load %struct.Point*, %struct.Point** %60, align 8
  store i32 -25127444, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define internal void @_ZNSt5dequeIZ4mainE5PointSaIS0_EE12emplace_backIJS0_EEEvDpOT_(%"class.std::deque.20"*, %struct.Point* dereferenceable(24)) #0 align 2 {
  %3 = alloca %struct.Point*
  %4 = alloca %struct.Point*
  %5 = alloca %"class.std::deque.20"*
  %6 = alloca %"class.std::deque.20"*, align 8
  %7 = alloca %struct.Point*, align 8
  store %"class.std::deque.20"* %0, %"class.std::deque.20"** %6, align 8
  store %struct.Point* %1, %struct.Point** %7, align 8
  %8 = load %"class.std::deque.20"*, %"class.std::deque.20"** %6, align 8
  store %"class.std::deque.20"* %8, %"class.std::deque.20"** %5
  %9 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %5
  %10 = bitcast %"class.std::deque.20"* %9 to %"class.std::_Deque_base.21"*
  %11 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %11, i32 0, i32 3
  %13 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %12, i32 0, i32 0
  %14 = load %struct.Point*, %struct.Point** %13, align 8
  store %struct.Point* %14, %struct.Point** %4
  %15 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %5
  %16 = bitcast %"class.std::deque.20"* %15 to %"class.std::_Deque_base.21"*
  %17 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %16, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %17, i32 0, i32 3
  %19 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %18, i32 0, i32 2
  %20 = load %struct.Point*, %struct.Point** %19, align 8
  %21 = getelementptr inbounds %struct.Point, %struct.Point* %20, i64 -1
  store %struct.Point* %21, %struct.Point** %3
  %22 = alloca i32
  store i32 -468661759, i32* %22
  br label %23

; <label>:23:                                     ; preds = %2, %116
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 -468661759, label %26
    i32 372799746, label %31
    i32 -1072128570, label %51
    i32 587645796, label %79
    i32 37521556, label %110
    i32 -1645264569, label %111
    i32 45019479, label %112
  ]

; <label>:25:                                     ; preds = %23
  br label %116

; <label>:26:                                     ; preds = %23
  %27 = load volatile %struct.Point*, %struct.Point** %4
  %28 = load volatile %struct.Point*, %struct.Point** %3
  %29 = icmp ne %struct.Point* %27, %28
  %30 = select i1 %29, i32 372799746, i32 -1072128570
  store i32 %30, i32* %22
  br label %116

; <label>:31:                                     ; preds = %23
  %32 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %5
  %33 = bitcast %"class.std::deque.20"* %32 to %"class.std::_Deque_base.21"*
  %34 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %33, i32 0, i32 0
  %35 = bitcast %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %34 to %"class.std::allocator.22"*
  %36 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %5
  %37 = bitcast %"class.std::deque.20"* %36 to %"class.std::_Deque_base.21"*
  %38 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %38, i32 0, i32 3
  %40 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %39, i32 0, i32 0
  %41 = load %struct.Point*, %struct.Point** %40, align 8
  %42 = load %struct.Point*, %struct.Point** %7, align 8
  %43 = call dereferenceable(24) %struct.Point* @_ZSt7forwardIZ4mainE5PointEOT_RNSt16remove_referenceIS1_E4typeE(%struct.Point* dereferenceable(24) %42) #3
  call void @_ZNSt16allocator_traitsISaIZ4mainE5PointEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator.22"* dereferenceable(1) %35, %struct.Point* %41, %struct.Point* dereferenceable(24) %43)
  %44 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %5
  %45 = bitcast %"class.std::deque.20"* %44 to %"class.std::_Deque_base.21"*
  %46 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %46, i32 0, i32 3
  %48 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %47, i32 0, i32 0
  %49 = load %struct.Point*, %struct.Point** %48, align 8
  %50 = getelementptr inbounds %struct.Point, %struct.Point* %49, i32 1
  store %struct.Point* %50, %struct.Point** %48, align 8
  store i32 -1645264569, i32* %22
  br label %116

; <label>:51:                                     ; preds = %23
  %52 = load i32, i32* @x.721
  %53 = load i32, i32* @y.722
  %54 = sub i32 %52, -2065390695
  %55 = sub i32 %54, 1
  %56 = add i32 %55, -2065390695
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 587645796, i32 45019479
  store i32 %78, i32* %22
  br label %116

; <label>:79:                                     ; preds = %23
  %80 = load %struct.Point*, %struct.Point** %7, align 8
  %81 = call dereferenceable(24) %struct.Point* @_ZSt7forwardIZ4mainE5PointEOT_RNSt16remove_referenceIS1_E4typeE(%struct.Point* dereferenceable(24) %80) #3
  %82 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %5
  call void @_ZNSt5dequeIZ4mainE5PointSaIS0_EE16_M_push_back_auxIJS0_EEEvDpOT_(%"class.std::deque.20"* %82, %struct.Point* dereferenceable(24) %81)
  %83 = load i32, i32* @x.721
  %84 = load i32, i32* @y.722
  %85 = add i32 %83, 1120384673
  %86 = sub i32 %85, 1
  %87 = sub i32 %86, 1120384673
  %88 = sub i32 %83, 1
  %89 = mul i32 %83, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %84, 10
  %93 = xor i1 %91, true
  %94 = xor i1 %92, true
  %95 = xor i1 false, true
  %96 = and i1 %93, false
  %97 = and i1 %91, %95
  %98 = and i1 %94, false
  %99 = and i1 %92, %95
  %100 = or i1 %96, %97
  %101 = or i1 %98, %99
  %102 = xor i1 %100, %101
  %103 = or i1 %93, %94
  %104 = xor i1 %103, true
  %105 = or i1 false, %95
  %106 = and i1 %104, %105
  %107 = or i1 %102, %106
  %108 = or i1 %91, %92
  %109 = select i1 %107, i32 37521556, i32 45019479
  store i32 %109, i32* %22
  br label %116

; <label>:110:                                    ; preds = %23
  store i32 -1645264569, i32* %22
  br label %116

; <label>:111:                                    ; preds = %23
  ret void

; <label>:112:                                    ; preds = %23
  %113 = load %struct.Point*, %struct.Point** %7, align 8
  %114 = call dereferenceable(24) %struct.Point* @_ZSt7forwardIZ4mainE5PointEOT_RNSt16remove_referenceIS1_E4typeE(%struct.Point* dereferenceable(24) %113) #3
  %115 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %5
  call void @_ZNSt5dequeIZ4mainE5PointSaIS0_EE16_M_push_back_auxIJS0_EEEvDpOT_(%"class.std::deque.20"* %115, %struct.Point* dereferenceable(24) %114)
  store i32 587645796, i32* %22
  br label %116

; <label>:116:                                    ; preds = %112, %110, %79, %51, %31, %26, %25
  br label %23
}

; Function Attrs: noinline uwtable
define internal void @_ZNSt16allocator_traitsISaIZ4mainE5PointEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator.22"* dereferenceable(1), %struct.Point*, %struct.Point* dereferenceable(24)) #0 align 2 {
  %4 = alloca %"class.std::allocator.22"*, align 8
  %5 = alloca %struct.Point*, align 8
  %6 = alloca %struct.Point*, align 8
  store %"class.std::allocator.22"* %0, %"class.std::allocator.22"** %4, align 8
  store %struct.Point* %1, %struct.Point** %5, align 8
  store %struct.Point* %2, %struct.Point** %6, align 8
  %7 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %4, align 8
  %8 = bitcast %"class.std::allocator.22"* %7 to %"class.__gnu_cxx::new_allocator.23"*
  %9 = load %struct.Point*, %struct.Point** %5, align 8
  %10 = load %struct.Point*, %struct.Point** %6, align 8
  %11 = call dereferenceable(24) %struct.Point* @_ZSt7forwardIZ4mainE5PointEOT_RNSt16remove_referenceIS1_E4typeE(%struct.Point* dereferenceable(24) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIZ4mainE5PointE9constructIS1_JS1_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.23"* %8, %struct.Point* %9, %struct.Point* dereferenceable(24) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(24) %struct.Point* @_ZSt7forwardIZ4mainE5PointEOT_RNSt16remove_referenceIS1_E4typeE(%struct.Point* dereferenceable(24)) #4 {
  %2 = alloca %struct.Point*, align 8
  store %struct.Point* %0, %struct.Point** %2, align 8
  %3 = load %struct.Point*, %struct.Point** %2, align 8
  ret %struct.Point* %3
}

; Function Attrs: noinline uwtable
define internal void @_ZNSt5dequeIZ4mainE5PointSaIS0_EE16_M_push_back_auxIJS0_EEEvDpOT_(%"class.std::deque.20"*, %struct.Point* dereferenceable(24)) #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::deque.20"*, align 8
  %4 = alloca %struct.Point*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"class.std::deque.20"* %0, %"class.std::deque.20"** %3, align 8
  store %struct.Point* %1, %struct.Point** %4, align 8
  %7 = load %"class.std::deque.20"*, %"class.std::deque.20"** %3, align 8
  call void @_ZNSt5dequeIZ4mainE5PointSaIS0_EE22_M_reserve_map_at_backEm(%"class.std::deque.20"* %7, i64 1)
  %8 = bitcast %"class.std::deque.20"* %7 to %"class.std::_Deque_base.21"*
  %9 = call %struct.Point* @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE16_M_allocate_nodeEv(%"class.std::_Deque_base.21"* %8)
  %10 = bitcast %"class.std::deque.20"* %7 to %"class.std::_Deque_base.21"*
  %11 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %11, i32 0, i32 3
  %13 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %12, i32 0, i32 3
  %14 = load %struct.Point**, %struct.Point*** %13, align 8
  %15 = getelementptr inbounds %struct.Point*, %struct.Point** %14, i64 1
  store %struct.Point* %9, %struct.Point** %15, align 8
  %16 = bitcast %"class.std::deque.20"* %7 to %"class.std::_Deque_base.21"*
  %17 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %17 to %"class.std::allocator.22"*
  %19 = bitcast %"class.std::deque.20"* %7 to %"class.std::_Deque_base.21"*
  %20 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %20, i32 0, i32 3
  %22 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %21, i32 0, i32 0
  %23 = load %struct.Point*, %struct.Point** %22, align 8
  %24 = load %struct.Point*, %struct.Point** %4, align 8
  %25 = call dereferenceable(24) %struct.Point* @_ZSt7forwardIZ4mainE5PointEOT_RNSt16remove_referenceIS1_E4typeE(%struct.Point* dereferenceable(24) %24) #3
  invoke void @_ZNSt16allocator_traitsISaIZ4mainE5PointEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_(%"class.std::allocator.22"* dereferenceable(1) %18, %struct.Point* %23, %struct.Point* dereferenceable(24) %25)
          to label %26 unwind label %87

; <label>:26:                                     ; preds = %2
  %27 = load i32, i32* @x.727
  %28 = load i32, i32* @y.728
  %29 = sub i32 %27, 1934163860
  %30 = sub i32 %29, 1
  %31 = add i32 %30, 1934163860
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 true, true
  %40 = and i1 %37, true
  %41 = and i1 %35, %39
  %42 = and i1 %38, true
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 true, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  br i1 %51, label %53, label %281

; <label>:53:                                     ; preds = %26, %281
  %54 = bitcast %"class.std::deque.20"* %7 to %"class.std::_Deque_base.21"*
  %55 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %54, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %55, i32 0, i32 3
  %57 = bitcast %"class.std::deque.20"* %7 to %"class.std::_Deque_base.21"*
  %58 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %57, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %58, i32 0, i32 3
  %60 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %59, i32 0, i32 3
  %61 = load %struct.Point**, %struct.Point*** %60, align 8
  %62 = getelementptr inbounds %struct.Point*, %struct.Point** %61, i64 1
  call void @_ZNSt15_Deque_iteratorIZ4mainE5PointRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator.25"* %56, %struct.Point** %62) #3
  %63 = bitcast %"class.std::deque.20"* %7 to %"class.std::_Deque_base.21"*
  %64 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %64, i32 0, i32 3
  %66 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %65, i32 0, i32 1
  %67 = load %struct.Point*, %struct.Point** %66, align 8
  %68 = bitcast %"class.std::deque.20"* %7 to %"class.std::_Deque_base.21"*
  %69 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %68, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %69, i32 0, i32 3
  %71 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %70, i32 0, i32 0
  store %struct.Point* %67, %struct.Point** %71, align 8
  %72 = load i32, i32* @x.727
  %73 = load i32, i32* @y.728
  %74 = sub i32 %72, 394348078
  %75 = sub i32 %74, 1
  %76 = add i32 %75, 394348078
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  br i1 %84, label %86, label %281

; <label>:86:                                     ; preds = %53
  br label %200

; <label>:87:                                     ; preds = %2
  %88 = landingpad { i8*, i32 }
          catch i8* null
  %89 = extractvalue { i8*, i32 } %88, 0
  store i8* %89, i8** %5, align 8
  %90 = extractvalue { i8*, i32 } %88, 1
  store i32 %90, i32* %6, align 4
  br label %91

; <label>:91:                                     ; preds = %87
  %92 = load i32, i32* @x.727
  %93 = load i32, i32* @y.728
  %94 = add i32 %92, -864164799
  %95 = sub i32 %94, 1
  %96 = sub i32 %95, -864164799
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 false, true
  %105 = and i1 %102, false
  %106 = and i1 %100, %104
  %107 = and i1 %103, false
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 false, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  br i1 %116, label %118, label %300

; <label>:118:                                    ; preds = %91, %300
  %119 = load i8*, i8** %5, align 8
  %120 = call i8* @__cxa_begin_catch(i8* %119) #3
  %121 = bitcast %"class.std::deque.20"* %7 to %"class.std::_Deque_base.21"*
  %122 = bitcast %"class.std::deque.20"* %7 to %"class.std::_Deque_base.21"*
  %123 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %122, i32 0, i32 0
  %124 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %123, i32 0, i32 3
  %125 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %124, i32 0, i32 3
  %126 = load %struct.Point**, %struct.Point*** %125, align 8
  %127 = getelementptr inbounds %struct.Point*, %struct.Point** %126, i64 1
  %128 = load %struct.Point*, %struct.Point** %127, align 8
  call void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE18_M_deallocate_nodeEPS0_(%"class.std::_Deque_base.21"* %121, %struct.Point* %128) #3
  %129 = load i32, i32* @x.727
  %130 = load i32, i32* @y.728
  %131 = sub i32 0, 1
  %132 = add i32 %129, %131
  %133 = sub i32 %129, 1
  %134 = mul i32 %129, %132
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %130, 10
  %138 = xor i1 %136, true
  %139 = xor i1 %137, true
  %140 = xor i1 true, true
  %141 = and i1 %138, true
  %142 = and i1 %136, %140
  %143 = and i1 %139, true
  %144 = and i1 %137, %140
  %145 = or i1 %141, %142
  %146 = or i1 %143, %144
  %147 = xor i1 %145, %146
  %148 = or i1 %138, %139
  %149 = xor i1 %148, true
  %150 = or i1 true, %140
  %151 = and i1 %149, %150
  %152 = or i1 %147, %151
  %153 = or i1 %136, %137
  br i1 %152, label %154, label %300

; <label>:154:                                    ; preds = %118
  invoke void @__cxa_rethrow() #15
          to label %238 unwind label %155

; <label>:155:                                    ; preds = %154
  %156 = load i32, i32* @x.727
  %157 = load i32, i32* @y.728
  %158 = sub i32 0, 1
  %159 = add i32 %156, %158
  %160 = sub i32 %156, 1
  %161 = mul i32 %156, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %157, 10
  %165 = and i1 %163, %164
  %166 = xor i1 %163, %164
  %167 = or i1 %165, %166
  %168 = or i1 %163, %164
  br i1 %167, label %169, label %311

; <label>:169:                                    ; preds = %155, %311
  %170 = landingpad { i8*, i32 }
          cleanup
  %171 = extractvalue { i8*, i32 } %170, 0
  store i8* %171, i8** %5, align 8
  %172 = extractvalue { i8*, i32 } %170, 1
  store i32 %172, i32* %6, align 4
  %173 = load i32, i32* @x.727
  %174 = load i32, i32* @y.728
  %175 = sub i32 0, 1
  %176 = add i32 %173, %175
  %177 = sub i32 %173, 1
  %178 = mul i32 %173, %176
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %174, 10
  %182 = xor i1 %180, true
  %183 = xor i1 %181, true
  %184 = xor i1 false, true
  %185 = and i1 %182, false
  %186 = and i1 %180, %184
  %187 = and i1 %183, false
  %188 = and i1 %181, %184
  %189 = or i1 %185, %186
  %190 = or i1 %187, %188
  %191 = xor i1 %189, %190
  %192 = or i1 %182, %183
  %193 = xor i1 %192, true
  %194 = or i1 false, %184
  %195 = and i1 %193, %194
  %196 = or i1 %191, %195
  %197 = or i1 %180, %181
  br i1 %196, label %198, label %311

; <label>:198:                                    ; preds = %169
  invoke void @__cxa_end_catch()
          to label %199 unwind label %235

; <label>:199:                                    ; preds = %198
  br label %201

; <label>:200:                                    ; preds = %86
  ret void

; <label>:201:                                    ; preds = %199
  %202 = load i32, i32* @x.727
  %203 = load i32, i32* @y.728
  %204 = sub i32 %202, -398031627
  %205 = sub i32 %204, 1
  %206 = add i32 %205, -398031627
  %207 = sub i32 %202, 1
  %208 = mul i32 %202, %206
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %203, 10
  %212 = and i1 %210, %211
  %213 = xor i1 %210, %211
  %214 = or i1 %212, %213
  %215 = or i1 %210, %211
  br i1 %214, label %216, label %315

; <label>:216:                                    ; preds = %201, %315
  %217 = load i8*, i8** %5, align 8
  %218 = load i32, i32* %6, align 4
  %219 = insertvalue { i8*, i32 } undef, i8* %217, 0
  %220 = insertvalue { i8*, i32 } %219, i32 %218, 1
  %221 = load i32, i32* @x.727
  %222 = load i32, i32* @y.728
  %223 = sub i32 0, 1
  %224 = add i32 %221, %223
  %225 = sub i32 %221, 1
  %226 = mul i32 %221, %224
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %222, 10
  %230 = and i1 %228, %229
  %231 = xor i1 %228, %229
  %232 = or i1 %230, %231
  %233 = or i1 %228, %229
  br i1 %232, label %234, label %315

; <label>:234:                                    ; preds = %216
  resume { i8*, i32 } %220

; <label>:235:                                    ; preds = %198
  %236 = landingpad { i8*, i32 }
          catch i8* null
  %237 = extractvalue { i8*, i32 } %236, 0
  call void @__clang_call_terminate(i8* %237) #13
  unreachable

; <label>:238:                                    ; preds = %154
  %239 = load i32, i32* @x.727
  %240 = load i32, i32* @y.728
  %241 = sub i32 %239, -414298267
  %242 = sub i32 %241, 1
  %243 = add i32 %242, -414298267
  %244 = sub i32 %239, 1
  %245 = mul i32 %239, %243
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %240, 10
  %249 = xor i1 %247, true
  %250 = xor i1 %248, true
  %251 = xor i1 false, true
  %252 = and i1 %249, false
  %253 = and i1 %247, %251
  %254 = and i1 %250, false
  %255 = and i1 %248, %251
  %256 = or i1 %252, %253
  %257 = or i1 %254, %255
  %258 = xor i1 %256, %257
  %259 = or i1 %249, %250
  %260 = xor i1 %259, true
  %261 = or i1 false, %251
  %262 = and i1 %260, %261
  %263 = or i1 %258, %262
  %264 = or i1 %247, %248
  br i1 %263, label %265, label %320

; <label>:265:                                    ; preds = %238, %320
  %266 = load i32, i32* @x.727
  %267 = load i32, i32* @y.728
  %268 = sub i32 %266, 1464918780
  %269 = sub i32 %268, 1
  %270 = add i32 %269, 1464918780
  %271 = sub i32 %266, 1
  %272 = mul i32 %266, %270
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %267, 10
  %276 = and i1 %274, %275
  %277 = xor i1 %274, %275
  %278 = or i1 %276, %277
  %279 = or i1 %274, %275
  br i1 %278, label %280, label %320

; <label>:280:                                    ; preds = %265
  unreachable

; <label>:281:                                    ; preds = %53, %26
  %282 = bitcast %"class.std::deque.20"* %7 to %"class.std::_Deque_base.21"*
  %283 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %282, i32 0, i32 0
  %284 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %283, i32 0, i32 3
  %285 = bitcast %"class.std::deque.20"* %7 to %"class.std::_Deque_base.21"*
  %286 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %285, i32 0, i32 0
  %287 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %286, i32 0, i32 3
  %288 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %287, i32 0, i32 3
  %289 = load %struct.Point**, %struct.Point*** %288, align 8
  %290 = getelementptr inbounds %struct.Point*, %struct.Point** %289, i64 1
  call void @_ZNSt15_Deque_iteratorIZ4mainE5PointRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator.25"* %284, %struct.Point** %290) #3
  %291 = bitcast %"class.std::deque.20"* %7 to %"class.std::_Deque_base.21"*
  %292 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %291, i32 0, i32 0
  %293 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %292, i32 0, i32 3
  %294 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %293, i32 0, i32 1
  %295 = load %struct.Point*, %struct.Point** %294, align 8
  %296 = bitcast %"class.std::deque.20"* %7 to %"class.std::_Deque_base.21"*
  %297 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %296, i32 0, i32 0
  %298 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %297, i32 0, i32 3
  %299 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %298, i32 0, i32 0
  store %struct.Point* %295, %struct.Point** %299, align 8
  br label %53

; <label>:300:                                    ; preds = %118, %91
  %301 = load i8*, i8** %5, align 8
  %302 = call i8* @__cxa_begin_catch(i8* %301) #3
  %303 = bitcast %"class.std::deque.20"* %7 to %"class.std::_Deque_base.21"*
  %304 = bitcast %"class.std::deque.20"* %7 to %"class.std::_Deque_base.21"*
  %305 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %304, i32 0, i32 0
  %306 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %305, i32 0, i32 3
  %307 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %306, i32 0, i32 3
  %308 = load %struct.Point**, %struct.Point*** %307, align 8
  %309 = getelementptr inbounds %struct.Point*, %struct.Point** %308, i64 1
  %310 = load %struct.Point*, %struct.Point** %309, align 8
  call void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE18_M_deallocate_nodeEPS0_(%"class.std::_Deque_base.21"* %303, %struct.Point* %310) #3
  br label %118

; <label>:311:                                    ; preds = %169, %155
  %312 = landingpad { i8*, i32 }
          cleanup
  %313 = extractvalue { i8*, i32 } %312, 0
  store i8* %313, i8** %5, align 8
  %314 = extractvalue { i8*, i32 } %312, 1
  store i32 %314, i32* %6, align 4
  br label %169

; <label>:315:                                    ; preds = %216, %201
  %316 = load i8*, i8** %5, align 8
  %317 = load i32, i32* %6, align 4
  %318 = insertvalue { i8*, i32 } undef, i8* %316, 0
  %319 = insertvalue { i8*, i32 } %318, i32 %317, 1
  br label %216

; <label>:320:                                    ; preds = %265, %238
  br label %265
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZN9__gnu_cxx13new_allocatorIZ4mainE5PointE9constructIS1_JS1_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.23"*, %struct.Point*, %struct.Point* dereferenceable(24)) #4 align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  %5 = alloca %struct.Point*, align 8
  %6 = alloca %struct.Point*, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %0, %"class.__gnu_cxx::new_allocator.23"** %4, align 8
  store %struct.Point* %1, %struct.Point** %5, align 8
  store %struct.Point* %2, %struct.Point** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.23"*, %"class.__gnu_cxx::new_allocator.23"** %4, align 8
  %8 = load %struct.Point*, %struct.Point** %5, align 8
  %9 = bitcast %struct.Point* %8 to i8*
  %10 = bitcast i8* %9 to %struct.Point*
  %11 = load %struct.Point*, %struct.Point** %6, align 8
  %12 = call dereferenceable(24) %struct.Point* @_ZSt7forwardIZ4mainE5PointEOT_RNSt16remove_referenceIS1_E4typeE(%struct.Point* dereferenceable(24) %11) #3
  %13 = bitcast %struct.Point* %10 to i8*
  %14 = bitcast %struct.Point* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 24, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline uwtable
define internal void @_ZNSt5dequeIZ4mainE5PointSaIS0_EE22_M_reserve_map_at_backEm(%"class.std::deque.20"*, i64) #0 align 2 {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca %"class.std::deque.20"*
  %6 = alloca %"class.std::deque.20"*, align 8
  %7 = alloca i64, align 8
  store %"class.std::deque.20"* %0, %"class.std::deque.20"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"class.std::deque.20"*, %"class.std::deque.20"** %6, align 8
  store %"class.std::deque.20"* %8, %"class.std::deque.20"** %5
  %9 = load i64, i64* %7, align 8
  %10 = add i64 %9, 6917752830486543345
  %11 = add i64 %10, 1
  %12 = sub i64 %11, 6917752830486543345
  %13 = add i64 %9, 1
  store i64 %12, i64* %4
  %14 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %5
  %15 = bitcast %"class.std::deque.20"* %14 to %"class.std::_Deque_base.21"*
  %16 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %16, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %5
  %20 = bitcast %"class.std::deque.20"* %19 to %"class.std::_Deque_base.21"*
  %21 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %21, i32 0, i32 3
  %23 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %22, i32 0, i32 3
  %24 = load %struct.Point**, %struct.Point*** %23, align 8
  %25 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %5
  %26 = bitcast %"class.std::deque.20"* %25 to %"class.std::_Deque_base.21"*
  %27 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %26, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %27, i32 0, i32 0
  %29 = load %struct.Point**, %struct.Point*** %28, align 8
  %30 = ptrtoint %struct.Point** %24 to i64
  %31 = ptrtoint %struct.Point** %29 to i64
  %32 = sub i64 0, %31
  %33 = add i64 %30, %32
  %34 = sub i64 %30, %31
  %35 = sdiv exact i64 %33, 8
  %36 = sub i64 %18, -8890973854893269584
  %37 = sub i64 %36, %35
  %38 = add i64 %37, -8890973854893269584
  %39 = sub i64 %18, %35
  store i64 %38, i64* %3
  %40 = alloca i32
  store i32 -199281241, i32* %40
  br label %41

; <label>:41:                                     ; preds = %2, %53
  %42 = load i32, i32* %40
  switch i32 %42, label %43 [
    i32 -199281241, label %44
    i32 1755264339, label %49
    i32 -1103349378, label %52
  ]

; <label>:43:                                     ; preds = %41
  br label %53

; <label>:44:                                     ; preds = %41
  %45 = load volatile i64, i64* %4
  %46 = load volatile i64, i64* %3
  %47 = icmp ugt i64 %45, %46
  %48 = select i1 %47, i32 1755264339, i32 -1103349378
  store i32 %48, i32* %40
  br label %53

; <label>:49:                                     ; preds = %41
  %50 = load i64, i64* %7, align 8
  %51 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %5
  call void @_ZNSt5dequeIZ4mainE5PointSaIS0_EE17_M_reallocate_mapEmb(%"class.std::deque.20"* %51, i64 %50, i1 zeroext false)
  store i32 -1103349378, i32* %40
  br label %53

; <label>:52:                                     ; preds = %41
  ret void

; <label>:53:                                     ; preds = %49, %44, %43
  br label %41
}

; Function Attrs: noinline uwtable
define internal void @_ZNSt5dequeIZ4mainE5PointSaIS0_EE17_M_reallocate_mapEmb(%"class.std::deque.20"*, i64, i1 zeroext) #0 align 2 {
  %4 = alloca i64
  %5 = alloca i1
  %6 = alloca %struct.Point**
  %7 = alloca i1
  %8 = alloca %struct.Point**
  %9 = alloca i64
  %10 = alloca i64
  %11 = alloca %"class.std::deque.20"*
  %12 = alloca %"class.std::deque.20"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8, align 1
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca %struct.Point**, align 8
  %18 = alloca i64, align 8
  %19 = alloca %struct.Point**, align 8
  store %"class.std::deque.20"* %0, %"class.std::deque.20"** %12, align 8
  store i64 %1, i64* %13, align 8
  %20 = zext i1 %2 to i8
  store i8 %20, i8* %14, align 1
  %21 = load %"class.std::deque.20"*, %"class.std::deque.20"** %12, align 8
  store %"class.std::deque.20"* %21, %"class.std::deque.20"** %11
  %22 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %11
  %23 = bitcast %"class.std::deque.20"* %22 to %"class.std::_Deque_base.21"*
  %24 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %23, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %24, i32 0, i32 3
  %26 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %25, i32 0, i32 3
  %27 = load %struct.Point**, %struct.Point*** %26, align 8
  %28 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %11
  %29 = bitcast %"class.std::deque.20"* %28 to %"class.std::_Deque_base.21"*
  %30 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %30, i32 0, i32 2
  %32 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %31, i32 0, i32 3
  %33 = load %struct.Point**, %struct.Point*** %32, align 8
  %34 = ptrtoint %struct.Point** %27 to i64
  %35 = ptrtoint %struct.Point** %33 to i64
  %36 = add i64 %34, -2770575694925874608
  %37 = sub i64 %36, %35
  %38 = sub i64 %37, -2770575694925874608
  %39 = sub i64 %34, %35
  %40 = sdiv exact i64 %38, 8
  %41 = sub i64 0, %40
  %42 = sub i64 0, 1
  %43 = add i64 %41, %42
  %44 = sub i64 0, %43
  %45 = add nsw i64 %40, 1
  store i64 %44, i64* %15, align 8
  %46 = load i64, i64* %15, align 8
  %47 = load i64, i64* %13, align 8
  %48 = sub i64 %46, -2964606163217242458
  %49 = add i64 %48, %47
  %50 = add i64 %49, -2964606163217242458
  %51 = add i64 %46, %47
  store i64 %50, i64* %16, align 8
  %52 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %11
  %53 = bitcast %"class.std::deque.20"* %52 to %"class.std::_Deque_base.21"*
  %54 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %54, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %10
  %57 = load i64, i64* %16, align 8
  %58 = mul i64 2, %57
  store i64 %58, i64* %9
  %59 = alloca i32
  store i32 -1441504648, i32* %59
  %60 = alloca i64
  %61 = alloca i64
  br label %62

; <label>:62:                                     ; preds = %3, %661
  %63 = load i32, i32* %59
  switch i32 %63, label %64 [
    i32 -1441504648, label %65
    i32 -1981937417, label %70
    i32 -1658757748, label %98
    i32 102152292, label %133
    i32 -1251514787, label %136
    i32 2016089549, label %138
    i32 697906304, label %139
    i32 -1981597726, label %152
    i32 1683107504, label %168
    i32 -494856727, label %186
    i32 -1785369685, label %202
    i32 934467129, label %218
    i32 1082610357, label %219
    i32 1924206443, label %247
    i32 1269667862, label %294
    i32 441031092, label %297
    i32 562374193, label %325
    i32 -1985932830, label %342
    i32 305835992, label %344
    i32 1678940074, label %345
    i32 1421230088, label %386
    i32 -1828359098, label %402
    i32 -1282901831, label %443
    i32 -1154041290, label %444
    i32 653677870, label %507
    i32 -2133931027, label %508
    i32 182686496, label %645
    i32 -822136096, label %647
  ]

; <label>:64:                                     ; preds = %62
  br label %661

; <label>:65:                                     ; preds = %62
  %66 = load volatile i64, i64* %10
  %67 = load volatile i64, i64* %9
  %68 = icmp ugt i64 %66, %67
  %69 = select i1 %68, i32 -1981937417, i32 1082610357
  store i32 %69, i32* %59
  br label %661

; <label>:70:                                     ; preds = %62
  %71 = load i32, i32* @x.733
  %72 = load i32, i32* @y.734
  %73 = sub i32 %71, 289711539
  %74 = sub i32 %73, 1
  %75 = add i32 %74, 289711539
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 false, true
  %84 = and i1 %81, false
  %85 = and i1 %79, %83
  %86 = and i1 %82, false
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 false, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  %97 = select i1 %95, i32 -1658757748, i32 -1154041290
  store i32 %97, i32* %59
  br label %661

; <label>:98:                                     ; preds = %62
  %99 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %11
  %100 = bitcast %"class.std::deque.20"* %99 to %"class.std::_Deque_base.21"*
  %101 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %100, i32 0, i32 0
  %102 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %101, i32 0, i32 0
  %103 = load %struct.Point**, %struct.Point*** %102, align 8
  %104 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %11
  %105 = bitcast %"class.std::deque.20"* %104 to %"class.std::_Deque_base.21"*
  %106 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %105, i32 0, i32 0
  %107 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %106, i32 0, i32 1
  %108 = load i64, i64* %107, align 8
  %109 = load i64, i64* %16, align 8
  %110 = add i64 %108, -5716718243157441410
  %111 = sub i64 %110, %109
  %112 = sub i64 %111, -5716718243157441410
  %113 = sub i64 %108, %109
  %114 = udiv i64 %112, 2
  %115 = getelementptr inbounds %struct.Point*, %struct.Point** %103, i64 %114
  store %struct.Point** %115, %struct.Point*** %8
  %116 = load i8, i8* %14, align 1
  %117 = trunc i8 %116 to i1
  store i1 %117, i1* %7
  %118 = load i32, i32* @x.733
  %119 = load i32, i32* @y.734
  %120 = sub i32 %118, 1104229056
  %121 = sub i32 %120, 1
  %122 = add i32 %121, 1104229056
  %123 = sub i32 %118, 1
  %124 = mul i32 %118, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %119, 10
  %128 = and i1 %126, %127
  %129 = xor i1 %126, %127
  %130 = or i1 %128, %129
  %131 = or i1 %126, %127
  %132 = select i1 %130, i32 102152292, i32 -1154041290
  store i32 %132, i32* %59
  br label %661

; <label>:133:                                    ; preds = %62
  %134 = load volatile i1, i1* %7
  %135 = select i1 %134, i32 -1251514787, i32 2016089549
  store i32 %135, i32* %59
  br label %661

; <label>:136:                                    ; preds = %62
  %137 = load i64, i64* %13, align 8
  store i32 697906304, i32* %59
  store i64 %137, i64* %60
  br label %661

; <label>:138:                                    ; preds = %62
  store i32 697906304, i32* %59
  store i64 0, i64* %60
  br label %661

; <label>:139:                                    ; preds = %62
  %140 = load i64, i64* %60
  %141 = load volatile %struct.Point**, %struct.Point*** %8
  %142 = getelementptr inbounds %struct.Point*, %struct.Point** %141, i64 %140
  store %struct.Point** %142, %struct.Point*** %17, align 8
  %143 = load %struct.Point**, %struct.Point*** %17, align 8
  %144 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %11
  %145 = bitcast %"class.std::deque.20"* %144 to %"class.std::_Deque_base.21"*
  %146 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %145, i32 0, i32 0
  %147 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %146, i32 0, i32 2
  %148 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %147, i32 0, i32 3
  %149 = load %struct.Point**, %struct.Point*** %148, align 8
  %150 = icmp ult %struct.Point** %143, %149
  %151 = select i1 %150, i32 -1981597726, i32 1683107504
  store i32 %151, i32* %59
  br label %661

; <label>:152:                                    ; preds = %62
  %153 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %11
  %154 = bitcast %"class.std::deque.20"* %153 to %"class.std::_Deque_base.21"*
  %155 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %154, i32 0, i32 0
  %156 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %155, i32 0, i32 2
  %157 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %156, i32 0, i32 3
  %158 = load %struct.Point**, %struct.Point*** %157, align 8
  %159 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %11
  %160 = bitcast %"class.std::deque.20"* %159 to %"class.std::_Deque_base.21"*
  %161 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %160, i32 0, i32 0
  %162 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %161, i32 0, i32 3
  %163 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %162, i32 0, i32 3
  %164 = load %struct.Point**, %struct.Point*** %163, align 8
  %165 = getelementptr inbounds %struct.Point*, %struct.Point** %164, i64 1
  %166 = load %struct.Point**, %struct.Point*** %17, align 8
  %167 = call %struct.Point** @_ZSt4copyIPPZ4mainE5PointS2_ET0_T_S4_S3_(%struct.Point** %158, %struct.Point** %165, %struct.Point** %166)
  store i32 -494856727, i32* %59
  br label %661

; <label>:168:                                    ; preds = %62
  %169 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %11
  %170 = bitcast %"class.std::deque.20"* %169 to %"class.std::_Deque_base.21"*
  %171 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %170, i32 0, i32 0
  %172 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %171, i32 0, i32 2
  %173 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %172, i32 0, i32 3
  %174 = load %struct.Point**, %struct.Point*** %173, align 8
  %175 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %11
  %176 = bitcast %"class.std::deque.20"* %175 to %"class.std::_Deque_base.21"*
  %177 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %176, i32 0, i32 0
  %178 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %177, i32 0, i32 3
  %179 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %178, i32 0, i32 3
  %180 = load %struct.Point**, %struct.Point*** %179, align 8
  %181 = getelementptr inbounds %struct.Point*, %struct.Point** %180, i64 1
  %182 = load %struct.Point**, %struct.Point*** %17, align 8
  %183 = load i64, i64* %15, align 8
  %184 = getelementptr inbounds %struct.Point*, %struct.Point** %182, i64 %183
  %185 = call %struct.Point** @_ZSt13copy_backwardIPPZ4mainE5PointS2_ET0_T_S4_S3_(%struct.Point** %174, %struct.Point** %181, %struct.Point** %184)
  store i32 -494856727, i32* %59
  br label %661

; <label>:186:                                    ; preds = %62
  %187 = load i32, i32* @x.733
  %188 = load i32, i32* @y.734
  %189 = add i32 %187, -277180391
  %190 = sub i32 %189, 1
  %191 = sub i32 %190, -277180391
  %192 = sub i32 %187, 1
  %193 = mul i32 %187, %191
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %188, 10
  %197 = and i1 %195, %196
  %198 = xor i1 %195, %196
  %199 = or i1 %197, %198
  %200 = or i1 %195, %196
  %201 = select i1 %199, i32 -1785369685, i32 653677870
  store i32 %201, i32* %59
  br label %661

; <label>:202:                                    ; preds = %62
  %203 = load i32, i32* @x.733
  %204 = load i32, i32* @y.734
  %205 = sub i32 %203, -247585836
  %206 = sub i32 %205, 1
  %207 = add i32 %206, -247585836
  %208 = sub i32 %203, 1
  %209 = mul i32 %203, %207
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %204, 10
  %213 = and i1 %211, %212
  %214 = xor i1 %211, %212
  %215 = or i1 %213, %214
  %216 = or i1 %211, %212
  %217 = select i1 %215, i32 934467129, i32 653677870
  store i32 %217, i32* %59
  br label %661

; <label>:218:                                    ; preds = %62
  store i32 1421230088, i32* %59
  br label %661

; <label>:219:                                    ; preds = %62
  %220 = load i32, i32* @x.733
  %221 = load i32, i32* @y.734
  %222 = add i32 %220, 457400057
  %223 = sub i32 %222, 1
  %224 = sub i32 %223, 457400057
  %225 = sub i32 %220, 1
  %226 = mul i32 %220, %224
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %221, 10
  %230 = xor i1 %228, true
  %231 = xor i1 %229, true
  %232 = xor i1 true, true
  %233 = and i1 %230, true
  %234 = and i1 %228, %232
  %235 = and i1 %231, true
  %236 = and i1 %229, %232
  %237 = or i1 %233, %234
  %238 = or i1 %235, %236
  %239 = xor i1 %237, %238
  %240 = or i1 %230, %231
  %241 = xor i1 %240, true
  %242 = or i1 true, %232
  %243 = and i1 %241, %242
  %244 = or i1 %239, %243
  %245 = or i1 %228, %229
  %246 = select i1 %244, i32 1924206443, i32 -2133931027
  store i32 %246, i32* %59
  br label %661

; <label>:247:                                    ; preds = %62
  %248 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %11
  %249 = bitcast %"class.std::deque.20"* %248 to %"class.std::_Deque_base.21"*
  %250 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %249, i32 0, i32 0
  %251 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %250, i32 0, i32 1
  %252 = load i64, i64* %251, align 8
  %253 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %11
  %254 = bitcast %"class.std::deque.20"* %253 to %"class.std::_Deque_base.21"*
  %255 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %254, i32 0, i32 0
  %256 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %255, i32 0, i32 1
  %257 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %256, i64* dereferenceable(8) %13)
  %258 = load i64, i64* %257, align 8
  %259 = sub i64 0, %258
  %260 = sub i64 %252, %259
  %261 = add i64 %252, %258
  %262 = sub i64 %260, 1363016381306842095
  %263 = add i64 %262, 2
  %264 = add i64 %263, 1363016381306842095
  %265 = add i64 %260, 2
  store i64 %264, i64* %18, align 8
  %266 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %11
  %267 = bitcast %"class.std::deque.20"* %266 to %"class.std::_Deque_base.21"*
  %268 = load i64, i64* %18, align 8
  %269 = call %struct.Point** @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE15_M_allocate_mapEm(%"class.std::_Deque_base.21"* %267, i64 %268)
  store %struct.Point** %269, %struct.Point*** %19, align 8
  %270 = load %struct.Point**, %struct.Point*** %19, align 8
  %271 = load i64, i64* %18, align 8
  %272 = load i64, i64* %16, align 8
  %273 = sub i64 0, %272
  %274 = add i64 %271, %273
  %275 = sub i64 %271, %272
  %276 = udiv i64 %274, 2
  %277 = getelementptr inbounds %struct.Point*, %struct.Point** %270, i64 %276
  store %struct.Point** %277, %struct.Point*** %6
  %278 = load i8, i8* %14, align 1
  %279 = trunc i8 %278 to i1
  store i1 %279, i1* %5
  %280 = load i32, i32* @x.733
  %281 = load i32, i32* @y.734
  %282 = sub i32 0, 1
  %283 = add i32 %280, %282
  %284 = sub i32 %280, 1
  %285 = mul i32 %280, %283
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %281, 10
  %289 = and i1 %287, %288
  %290 = xor i1 %287, %288
  %291 = or i1 %289, %290
  %292 = or i1 %287, %288
  %293 = select i1 %291, i32 1269667862, i32 -2133931027
  store i32 %293, i32* %59
  br label %661

; <label>:294:                                    ; preds = %62
  %295 = load volatile i1, i1* %5
  %296 = select i1 %295, i32 441031092, i32 305835992
  store i32 %296, i32* %59
  br label %661

; <label>:297:                                    ; preds = %62
  %298 = load i32, i32* @x.733
  %299 = load i32, i32* @y.734
  %300 = add i32 %298, 1622348654
  %301 = sub i32 %300, 1
  %302 = sub i32 %301, 1622348654
  %303 = sub i32 %298, 1
  %304 = mul i32 %298, %302
  %305 = urem i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %299, 10
  %308 = xor i1 %306, true
  %309 = xor i1 %307, true
  %310 = xor i1 true, true
  %311 = and i1 %308, true
  %312 = and i1 %306, %310
  %313 = and i1 %309, true
  %314 = and i1 %307, %310
  %315 = or i1 %311, %312
  %316 = or i1 %313, %314
  %317 = xor i1 %315, %316
  %318 = or i1 %308, %309
  %319 = xor i1 %318, true
  %320 = or i1 true, %310
  %321 = and i1 %319, %320
  %322 = or i1 %317, %321
  %323 = or i1 %306, %307
  %324 = select i1 %322, i32 562374193, i32 182686496
  store i32 %324, i32* %59
  br label %661

; <label>:325:                                    ; preds = %62
  %326 = load i64, i64* %13, align 8
  store i64 %326, i64* %4
  %327 = load i32, i32* @x.733
  %328 = load i32, i32* @y.734
  %329 = sub i32 %327, -874173302
  %330 = sub i32 %329, 1
  %331 = add i32 %330, -874173302
  %332 = sub i32 %327, 1
  %333 = mul i32 %327, %331
  %334 = urem i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %328, 10
  %337 = and i1 %335, %336
  %338 = xor i1 %335, %336
  %339 = or i1 %337, %338
  %340 = or i1 %335, %336
  %341 = select i1 %339, i32 -1985932830, i32 182686496
  store i32 %341, i32* %59
  br label %661

; <label>:342:                                    ; preds = %62
  store i32 1678940074, i32* %59
  %343 = load volatile i64, i64* %4
  store i64 %343, i64* %61
  br label %661

; <label>:344:                                    ; preds = %62
  store i32 1678940074, i32* %59
  store i64 0, i64* %61
  br label %661

; <label>:345:                                    ; preds = %62
  %346 = load i64, i64* %61
  %347 = load volatile %struct.Point**, %struct.Point*** %6
  %348 = getelementptr inbounds %struct.Point*, %struct.Point** %347, i64 %346
  store %struct.Point** %348, %struct.Point*** %17, align 8
  %349 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %11
  %350 = bitcast %"class.std::deque.20"* %349 to %"class.std::_Deque_base.21"*
  %351 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %350, i32 0, i32 0
  %352 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %351, i32 0, i32 2
  %353 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %352, i32 0, i32 3
  %354 = load %struct.Point**, %struct.Point*** %353, align 8
  %355 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %11
  %356 = bitcast %"class.std::deque.20"* %355 to %"class.std::_Deque_base.21"*
  %357 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %356, i32 0, i32 0
  %358 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %357, i32 0, i32 3
  %359 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %358, i32 0, i32 3
  %360 = load %struct.Point**, %struct.Point*** %359, align 8
  %361 = getelementptr inbounds %struct.Point*, %struct.Point** %360, i64 1
  %362 = load %struct.Point**, %struct.Point*** %17, align 8
  %363 = call %struct.Point** @_ZSt4copyIPPZ4mainE5PointS2_ET0_T_S4_S3_(%struct.Point** %354, %struct.Point** %361, %struct.Point** %362)
  %364 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %11
  %365 = bitcast %"class.std::deque.20"* %364 to %"class.std::_Deque_base.21"*
  %366 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %11
  %367 = bitcast %"class.std::deque.20"* %366 to %"class.std::_Deque_base.21"*
  %368 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %367, i32 0, i32 0
  %369 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %368, i32 0, i32 0
  %370 = load %struct.Point**, %struct.Point*** %369, align 8
  %371 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %11
  %372 = bitcast %"class.std::deque.20"* %371 to %"class.std::_Deque_base.21"*
  %373 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %372, i32 0, i32 0
  %374 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %373, i32 0, i32 1
  %375 = load i64, i64* %374, align 8
  call void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE17_M_deallocate_mapEPPS0_m(%"class.std::_Deque_base.21"* %365, %struct.Point** %370, i64 %375) #3
  %376 = load %struct.Point**, %struct.Point*** %19, align 8
  %377 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %11
  %378 = bitcast %"class.std::deque.20"* %377 to %"class.std::_Deque_base.21"*
  %379 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %378, i32 0, i32 0
  %380 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %379, i32 0, i32 0
  store %struct.Point** %376, %struct.Point*** %380, align 8
  %381 = load i64, i64* %18, align 8
  %382 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %11
  %383 = bitcast %"class.std::deque.20"* %382 to %"class.std::_Deque_base.21"*
  %384 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %383, i32 0, i32 0
  %385 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %384, i32 0, i32 1
  store i64 %381, i64* %385, align 8
  store i32 1421230088, i32* %59
  br label %661

; <label>:386:                                    ; preds = %62
  %387 = load i32, i32* @x.733
  %388 = load i32, i32* @y.734
  %389 = add i32 %387, -1112185595
  %390 = sub i32 %389, 1
  %391 = sub i32 %390, -1112185595
  %392 = sub i32 %387, 1
  %393 = mul i32 %387, %391
  %394 = urem i32 %393, 2
  %395 = icmp eq i32 %394, 0
  %396 = icmp slt i32 %388, 10
  %397 = and i1 %395, %396
  %398 = xor i1 %395, %396
  %399 = or i1 %397, %398
  %400 = or i1 %395, %396
  %401 = select i1 %399, i32 -1828359098, i32 -822136096
  store i32 %401, i32* %59
  br label %661

; <label>:402:                                    ; preds = %62
  %403 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %11
  %404 = bitcast %"class.std::deque.20"* %403 to %"class.std::_Deque_base.21"*
  %405 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %404, i32 0, i32 0
  %406 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %405, i32 0, i32 2
  %407 = load %struct.Point**, %struct.Point*** %17, align 8
  call void @_ZNSt15_Deque_iteratorIZ4mainE5PointRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator.25"* %406, %struct.Point** %407) #3
  %408 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %11
  %409 = bitcast %"class.std::deque.20"* %408 to %"class.std::_Deque_base.21"*
  %410 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %409, i32 0, i32 0
  %411 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %410, i32 0, i32 3
  %412 = load %struct.Point**, %struct.Point*** %17, align 8
  %413 = load i64, i64* %15, align 8
  %414 = getelementptr inbounds %struct.Point*, %struct.Point** %412, i64 %413
  %415 = getelementptr inbounds %struct.Point*, %struct.Point** %414, i64 -1
  call void @_ZNSt15_Deque_iteratorIZ4mainE5PointRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator.25"* %411, %struct.Point** %415) #3
  %416 = load i32, i32* @x.733
  %417 = load i32, i32* @y.734
  %418 = add i32 %416, 632058889
  %419 = sub i32 %418, 1
  %420 = sub i32 %419, 632058889
  %421 = sub i32 %416, 1
  %422 = mul i32 %416, %420
  %423 = urem i32 %422, 2
  %424 = icmp eq i32 %423, 0
  %425 = icmp slt i32 %417, 10
  %426 = xor i1 %424, true
  %427 = xor i1 %425, true
  %428 = xor i1 false, true
  %429 = and i1 %426, false
  %430 = and i1 %424, %428
  %431 = and i1 %427, false
  %432 = and i1 %425, %428
  %433 = or i1 %429, %430
  %434 = or i1 %431, %432
  %435 = xor i1 %433, %434
  %436 = or i1 %426, %427
  %437 = xor i1 %436, true
  %438 = or i1 false, %428
  %439 = and i1 %437, %438
  %440 = or i1 %435, %439
  %441 = or i1 %424, %425
  %442 = select i1 %440, i32 -1282901831, i32 -822136096
  store i32 %442, i32* %59
  br label %661

; <label>:443:                                    ; preds = %62
  ret void

; <label>:444:                                    ; preds = %62
  %445 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %11
  %446 = bitcast %"class.std::deque.20"* %445 to %"class.std::_Deque_base.21"*
  %447 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %446, i32 0, i32 0
  %448 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %447, i32 0, i32 0
  %449 = load %struct.Point**, %struct.Point*** %448, align 8
  %450 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %11
  %451 = bitcast %"class.std::deque.20"* %450 to %"class.std::_Deque_base.21"*
  %452 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %451, i32 0, i32 0
  %453 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %452, i32 0, i32 1
  %454 = load i64, i64* %453, align 8
  %455 = load i64, i64* %16, align 8
  %456 = sub i64 0, %454
  %457 = add i64 0, %456
  %458 = sub i64 0, %454
  %459 = add i64 %457, 868220889728271279
  %460 = add i64 %459, %455
  %461 = sub i64 %460, 868220889728271279
  %462 = add i64 %457, %455
  %463 = add i64 0, 5627208635809296258
  %464 = sub i64 %463, %454
  %465 = sub i64 %464, 5627208635809296258
  %466 = sub i64 0, %454
  %467 = add i64 %465, -4172190755666083451
  %468 = add i64 %467, %455
  %469 = sub i64 %468, -4172190755666083451
  %470 = add i64 %465, %455
  %471 = shl i64 %454, %455
  %472 = shl i64 %454, %455
  %473 = shl i64 %454, %455
  %474 = sub i64 0, %455
  %475 = add i64 %454, %474
  %476 = sub i64 %454, %455
  %477 = add i64 %475, 8665330269429409194
  %478 = sub i64 %477, 2
  %479 = sub i64 %478, 8665330269429409194
  %480 = sub i64 %475, 2
  %481 = mul i64 %479, 2
  %482 = sub i64 0, -5865175128515649004
  %483 = sub i64 %482, %475
  %484 = add i64 %483, -5865175128515649004
  %485 = sub i64 0, %475
  %486 = sub i64 0, %484
  %487 = sub i64 0, 2
  %488 = add i64 %486, %487
  %489 = sub i64 0, %488
  %490 = add i64 %484, 2
  %491 = shl i64 %475, 2
  %492 = sub i64 0, -6137046172013627187
  %493 = sub i64 %492, %475
  %494 = add i64 %493, -6137046172013627187
  %495 = sub i64 0, %475
  %496 = sub i64 0, %494
  %497 = sub i64 0, 2
  %498 = add i64 %496, %497
  %499 = sub i64 0, %498
  %500 = add i64 %494, 2
  %501 = shl i64 %475, 2
  %502 = shl i64 %475, 2
  %503 = udiv i64 %475, 2
  %504 = getelementptr inbounds %struct.Point*, %struct.Point** %449, i64 %503
  %505 = load i8, i8* %14, align 1
  %506 = trunc i8 %505 to i1
  store i32 -1658757748, i32* %59
  br label %661

; <label>:507:                                    ; preds = %62
  store i32 -1785369685, i32* %59
  br label %661

; <label>:508:                                    ; preds = %62
  %509 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %11
  %510 = bitcast %"class.std::deque.20"* %509 to %"class.std::_Deque_base.21"*
  %511 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %510, i32 0, i32 0
  %512 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %511, i32 0, i32 1
  %513 = load i64, i64* %512, align 8
  %514 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %11
  %515 = bitcast %"class.std::deque.20"* %514 to %"class.std::_Deque_base.21"*
  %516 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %515, i32 0, i32 0
  %517 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %516, i32 0, i32 1
  %518 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %517, i64* dereferenceable(8) %13)
  %519 = load i64, i64* %518, align 8
  %520 = sub i64 0, %513
  %521 = add i64 0, %520
  %522 = sub i64 0, %513
  %523 = sub i64 0, %519
  %524 = sub i64 %521, %523
  %525 = add i64 %521, %519
  %526 = sub i64 0, 6529149159454839207
  %527 = sub i64 %526, %513
  %528 = add i64 %527, 6529149159454839207
  %529 = sub i64 0, %513
  %530 = sub i64 %528, -1674668294530571752
  %531 = add i64 %530, %519
  %532 = add i64 %531, -1674668294530571752
  %533 = add i64 %528, %519
  %534 = add i64 %513, -4247740897622861212
  %535 = sub i64 %534, %519
  %536 = sub i64 %535, -4247740897622861212
  %537 = sub i64 %513, %519
  %538 = mul i64 %536, %519
  %539 = sub i64 0, 3681827170886307071
  %540 = sub i64 %539, %513
  %541 = add i64 %540, 3681827170886307071
  %542 = sub i64 0, %513
  %543 = sub i64 0, %519
  %544 = sub i64 %541, %543
  %545 = add i64 %541, %519
  %546 = shl i64 %513, %519
  %547 = shl i64 %513, %519
  %548 = shl i64 %513, %519
  %549 = sub i64 0, %519
  %550 = add i64 %513, %549
  %551 = sub i64 %513, %519
  %552 = mul i64 %550, %519
  %553 = add i64 %513, -7504334472787316885
  %554 = add i64 %553, %519
  %555 = sub i64 %554, -7504334472787316885
  %556 = add i64 %513, %519
  %557 = shl i64 %555, 2
  %558 = sub i64 %555, -3746926559337698357
  %559 = sub i64 %558, 2
  %560 = add i64 %559, -3746926559337698357
  %561 = sub i64 %555, 2
  %562 = mul i64 %560, 2
  %563 = add i64 0, 9210594569822407898
  %564 = sub i64 %563, %555
  %565 = sub i64 %564, 9210594569822407898
  %566 = sub i64 0, %555
  %567 = sub i64 %565, -4736148806274445423
  %568 = add i64 %567, 2
  %569 = add i64 %568, -4736148806274445423
  %570 = add i64 %565, 2
  %571 = shl i64 %555, 2
  %572 = add i64 0, 6685627981914214183
  %573 = sub i64 %572, %555
  %574 = sub i64 %573, 6685627981914214183
  %575 = sub i64 0, %555
  %576 = sub i64 %574, 319237892868886985
  %577 = add i64 %576, 2
  %578 = add i64 %577, 319237892868886985
  %579 = add i64 %574, 2
  %580 = shl i64 %555, 2
  %581 = sub i64 %555, 5668203447364464483
  %582 = sub i64 %581, 2
  %583 = add i64 %582, 5668203447364464483
  %584 = sub i64 %555, 2
  %585 = mul i64 %583, 2
  %586 = sub i64 %555, -2373850682476044316
  %587 = sub i64 %586, 2
  %588 = add i64 %587, -2373850682476044316
  %589 = sub i64 %555, 2
  %590 = mul i64 %588, 2
  %591 = add i64 0, 1111704925148801429
  %592 = sub i64 %591, %555
  %593 = sub i64 %592, 1111704925148801429
  %594 = sub i64 0, %555
  %595 = sub i64 %593, 6046208027813192664
  %596 = add i64 %595, 2
  %597 = add i64 %596, 6046208027813192664
  %598 = add i64 %593, 2
  %599 = sub i64 %555, 5246371544061285881
  %600 = add i64 %599, 2
  %601 = add i64 %600, 5246371544061285881
  %602 = add i64 %555, 2
  store i64 %601, i64* %18, align 8
  %603 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %11
  %604 = bitcast %"class.std::deque.20"* %603 to %"class.std::_Deque_base.21"*
  %605 = load i64, i64* %18, align 8
  %606 = call %struct.Point** @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE15_M_allocate_mapEm(%"class.std::_Deque_base.21"* %604, i64 %605)
  store %struct.Point** %606, %struct.Point*** %19, align 8
  %607 = load %struct.Point**, %struct.Point*** %19, align 8
  %608 = load i64, i64* %18, align 8
  %609 = load i64, i64* %16, align 8
  %610 = shl i64 %608, %609
  %611 = sub i64 0, %609
  %612 = add i64 %608, %611
  %613 = sub i64 %608, %609
  %614 = mul i64 %612, %609
  %615 = sub i64 0, %608
  %616 = add i64 0, %615
  %617 = sub i64 0, %608
  %618 = add i64 %616, 8433075501173463827
  %619 = add i64 %618, %609
  %620 = sub i64 %619, 8433075501173463827
  %621 = add i64 %616, %609
  %622 = sub i64 0, %608
  %623 = add i64 0, %622
  %624 = sub i64 0, %608
  %625 = add i64 %623, 1427670183439429281
  %626 = add i64 %625, %609
  %627 = sub i64 %626, 1427670183439429281
  %628 = add i64 %623, %609
  %629 = sub i64 0, %609
  %630 = add i64 %608, %629
  %631 = sub i64 %608, %609
  %632 = sub i64 0, 1008485943404078261
  %633 = sub i64 %632, %630
  %634 = add i64 %633, 1008485943404078261
  %635 = sub i64 0, %630
  %636 = sub i64 0, %634
  %637 = sub i64 0, 2
  %638 = add i64 %636, %637
  %639 = sub i64 0, %638
  %640 = add i64 %634, 2
  %641 = udiv i64 %630, 2
  %642 = getelementptr inbounds %struct.Point*, %struct.Point** %607, i64 %641
  %643 = load i8, i8* %14, align 1
  %644 = trunc i8 %643 to i1
  store i32 1924206443, i32* %59
  br label %661

; <label>:645:                                    ; preds = %62
  %646 = load i64, i64* %13, align 8
  store i32 562374193, i32* %59
  br label %661

; <label>:647:                                    ; preds = %62
  %648 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %11
  %649 = bitcast %"class.std::deque.20"* %648 to %"class.std::_Deque_base.21"*
  %650 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %649, i32 0, i32 0
  %651 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %650, i32 0, i32 2
  %652 = load %struct.Point**, %struct.Point*** %17, align 8
  call void @_ZNSt15_Deque_iteratorIZ4mainE5PointRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator.25"* %651, %struct.Point** %652) #3
  %653 = load volatile %"class.std::deque.20"*, %"class.std::deque.20"** %11
  %654 = bitcast %"class.std::deque.20"* %653 to %"class.std::_Deque_base.21"*
  %655 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %654, i32 0, i32 0
  %656 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %655, i32 0, i32 3
  %657 = load %struct.Point**, %struct.Point*** %17, align 8
  %658 = load i64, i64* %15, align 8
  %659 = getelementptr inbounds %struct.Point*, %struct.Point** %657, i64 %658
  %660 = getelementptr inbounds %struct.Point*, %struct.Point** %659, i64 -1
  call void @_ZNSt15_Deque_iteratorIZ4mainE5PointRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator.25"* %656, %struct.Point** %660) #3
  store i32 -1828359098, i32* %59
  br label %661

; <label>:661:                                    ; preds = %647, %645, %508, %507, %444, %402, %386, %345, %344, %342, %325, %297, %294, %247, %219, %218, %202, %186, %168, %152, %139, %138, %136, %133, %98, %70, %65, %64
  br label %62
}

; Function Attrs: noinline uwtable
define internal %struct.Point** @_ZSt4copyIPPZ4mainE5PointS2_ET0_T_S4_S3_(%struct.Point**, %struct.Point**, %struct.Point**) #0 {
  %4 = alloca %struct.Point**, align 8
  %5 = alloca %struct.Point**, align 8
  %6 = alloca %struct.Point**, align 8
  store %struct.Point** %0, %struct.Point*** %4, align 8
  store %struct.Point** %1, %struct.Point*** %5, align 8
  store %struct.Point** %2, %struct.Point*** %6, align 8
  %7 = load %struct.Point**, %struct.Point*** %4, align 8
  %8 = call %struct.Point** @_ZSt12__miter_baseIPPZ4mainE5PointENSt11_Miter_baseIT_E13iterator_typeES4_(%struct.Point** %7)
  %9 = load %struct.Point**, %struct.Point*** %5, align 8
  %10 = call %struct.Point** @_ZSt12__miter_baseIPPZ4mainE5PointENSt11_Miter_baseIT_E13iterator_typeES4_(%struct.Point** %9)
  %11 = load %struct.Point**, %struct.Point*** %6, align 8
  %12 = call %struct.Point** @_ZSt14__copy_move_a2ILb0EPPZ4mainE5PointS2_ET1_T0_S4_S3_(%struct.Point** %8, %struct.Point** %10, %struct.Point** %11)
  ret %struct.Point** %12
}

; Function Attrs: noinline uwtable
define internal %struct.Point** @_ZSt13copy_backwardIPPZ4mainE5PointS2_ET0_T_S4_S3_(%struct.Point**, %struct.Point**, %struct.Point**) #0 {
  %4 = alloca %struct.Point**, align 8
  %5 = alloca %struct.Point**, align 8
  %6 = alloca %struct.Point**, align 8
  store %struct.Point** %0, %struct.Point*** %4, align 8
  store %struct.Point** %1, %struct.Point*** %5, align 8
  store %struct.Point** %2, %struct.Point*** %6, align 8
  %7 = load %struct.Point**, %struct.Point*** %4, align 8
  %8 = call %struct.Point** @_ZSt12__miter_baseIPPZ4mainE5PointENSt11_Miter_baseIT_E13iterator_typeES4_(%struct.Point** %7)
  %9 = load %struct.Point**, %struct.Point*** %5, align 8
  %10 = call %struct.Point** @_ZSt12__miter_baseIPPZ4mainE5PointENSt11_Miter_baseIT_E13iterator_typeES4_(%struct.Point** %9)
  %11 = load %struct.Point**, %struct.Point*** %6, align 8
  %12 = call %struct.Point** @_ZSt23__copy_move_backward_a2ILb0EPPZ4mainE5PointS2_ET1_T0_S4_S3_(%struct.Point** %8, %struct.Point** %10, %struct.Point** %11)
  ret %struct.Point** %12
}

; Function Attrs: noinline uwtable
define internal %struct.Point** @_ZSt14__copy_move_a2ILb0EPPZ4mainE5PointS2_ET1_T0_S4_S3_(%struct.Point**, %struct.Point**, %struct.Point**) #0 {
  %4 = alloca %struct.Point**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.739
  %8 = load i32, i32* @y.740
  %9 = add i32 %7, 1867550612
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 1867550612
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1048652904, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %80
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1048652904, label %21
    i32 -1971913659, label %29
    i32 -1772841404, label %67
    i32 1933636648, label %69
  ]

; <label>:20:                                     ; preds = %18
  br label %80

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1971913659, i32 1933636648
  store i32 %28, i32* %17
  br label %80

; <label>:29:                                     ; preds = %18
  %30 = alloca %struct.Point**, align 8
  %31 = alloca %struct.Point**, align 8
  %32 = alloca %struct.Point**, align 8
  store %struct.Point** %0, %struct.Point*** %30, align 8
  store %struct.Point** %1, %struct.Point*** %31, align 8
  store %struct.Point** %2, %struct.Point*** %32, align 8
  %33 = load %struct.Point**, %struct.Point*** %30, align 8
  %34 = call %struct.Point** @_ZSt12__niter_baseIPPZ4mainE5PointENSt11_Niter_baseIT_E13iterator_typeES4_(%struct.Point** %33)
  %35 = load %struct.Point**, %struct.Point*** %31, align 8
  %36 = call %struct.Point** @_ZSt12__niter_baseIPPZ4mainE5PointENSt11_Niter_baseIT_E13iterator_typeES4_(%struct.Point** %35)
  %37 = load %struct.Point**, %struct.Point*** %32, align 8
  %38 = call %struct.Point** @_ZSt12__niter_baseIPPZ4mainE5PointENSt11_Niter_baseIT_E13iterator_typeES4_(%struct.Point** %37)
  %39 = call %struct.Point** @_ZSt13__copy_move_aILb0EPPZ4mainE5PointS2_ET1_T0_S4_S3_(%struct.Point** %34, %struct.Point** %36, %struct.Point** %38)
  store %struct.Point** %39, %struct.Point*** %4
  %40 = load i32, i32* @x.739
  %41 = load i32, i32* @y.740
  %42 = add i32 %40, -1691214060
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -1691214060
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -1772841404, i32 1933636648
  store i32 %66, i32* %17
  br label %80

; <label>:67:                                     ; preds = %18
  %68 = load volatile %struct.Point**, %struct.Point*** %4
  ret %struct.Point** %68

; <label>:69:                                     ; preds = %18
  %70 = alloca %struct.Point**, align 8
  %71 = alloca %struct.Point**, align 8
  %72 = alloca %struct.Point**, align 8
  store %struct.Point** %0, %struct.Point*** %70, align 8
  store %struct.Point** %1, %struct.Point*** %71, align 8
  store %struct.Point** %2, %struct.Point*** %72, align 8
  %73 = load %struct.Point**, %struct.Point*** %70, align 8
  %74 = call %struct.Point** @_ZSt12__niter_baseIPPZ4mainE5PointENSt11_Niter_baseIT_E13iterator_typeES4_(%struct.Point** %73)
  %75 = load %struct.Point**, %struct.Point*** %71, align 8
  %76 = call %struct.Point** @_ZSt12__niter_baseIPPZ4mainE5PointENSt11_Niter_baseIT_E13iterator_typeES4_(%struct.Point** %75)
  %77 = load %struct.Point**, %struct.Point*** %72, align 8
  %78 = call %struct.Point** @_ZSt12__niter_baseIPPZ4mainE5PointENSt11_Niter_baseIT_E13iterator_typeES4_(%struct.Point** %77)
  %79 = call %struct.Point** @_ZSt13__copy_move_aILb0EPPZ4mainE5PointS2_ET1_T0_S4_S3_(%struct.Point** %74, %struct.Point** %76, %struct.Point** %78)
  store i32 -1971913659, i32* %17
  br label %80

; <label>:80:                                     ; preds = %69, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.Point** @_ZSt12__miter_baseIPPZ4mainE5PointENSt11_Miter_baseIT_E13iterator_typeES4_(%struct.Point**) #4 {
  %2 = alloca %struct.Point**, align 8
  store %struct.Point** %0, %struct.Point*** %2, align 8
  %3 = load %struct.Point**, %struct.Point*** %2, align 8
  %4 = call %struct.Point** @_ZNSt10_Iter_baseIPPZ4mainE5PointLb0EE7_S_baseES2_(%struct.Point** %3)
  ret %struct.Point** %4
}

; Function Attrs: noinline uwtable
define internal %struct.Point** @_ZSt13__copy_move_aILb0EPPZ4mainE5PointS2_ET1_T0_S4_S3_(%struct.Point**, %struct.Point**, %struct.Point**) #0 {
  %4 = alloca %struct.Point**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.743
  %8 = load i32, i32* @y.744
  %9 = add i32 %7, -1861682900
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -1861682900
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 950651517, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %63
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 950651517, label %21
    i32 -1742685728, label %29
    i32 -1991627420, label %52
    i32 709260952, label %54
  ]

; <label>:20:                                     ; preds = %18
  br label %63

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1742685728, i32 709260952
  store i32 %28, i32* %17
  br label %63

; <label>:29:                                     ; preds = %18
  %30 = alloca %struct.Point**, align 8
  %31 = alloca %struct.Point**, align 8
  %32 = alloca %struct.Point**, align 8
  %33 = alloca i8, align 1
  store %struct.Point** %0, %struct.Point*** %30, align 8
  store %struct.Point** %1, %struct.Point*** %31, align 8
  store %struct.Point** %2, %struct.Point*** %32, align 8
  store i8 1, i8* %33, align 1
  %34 = load %struct.Point**, %struct.Point*** %30, align 8
  %35 = load %struct.Point**, %struct.Point*** %31, align 8
  %36 = load %struct.Point**, %struct.Point*** %32, align 8
  %37 = call %struct.Point** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPZ4mainE5PointEEPT_PKS5_S8_S6_(%struct.Point** %34, %struct.Point** %35, %struct.Point** %36)
  store %struct.Point** %37, %struct.Point*** %4
  %38 = load i32, i32* @x.743
  %39 = load i32, i32* @y.744
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 -1991627420, i32 709260952
  store i32 %51, i32* %17
  br label %63

; <label>:52:                                     ; preds = %18
  %53 = load volatile %struct.Point**, %struct.Point*** %4
  ret %struct.Point** %53

; <label>:54:                                     ; preds = %18
  %55 = alloca %struct.Point**, align 8
  %56 = alloca %struct.Point**, align 8
  %57 = alloca %struct.Point**, align 8
  %58 = alloca i8, align 1
  store %struct.Point** %0, %struct.Point*** %55, align 8
  store %struct.Point** %1, %struct.Point*** %56, align 8
  store %struct.Point** %2, %struct.Point*** %57, align 8
  store i8 1, i8* %58, align 1
  %59 = load %struct.Point**, %struct.Point*** %55, align 8
  %60 = load %struct.Point**, %struct.Point*** %56, align 8
  %61 = load %struct.Point**, %struct.Point*** %57, align 8
  %62 = call %struct.Point** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPZ4mainE5PointEEPT_PKS5_S8_S6_(%struct.Point** %59, %struct.Point** %60, %struct.Point** %61)
  store i32 -1742685728, i32* %17
  br label %63

; <label>:63:                                     ; preds = %54, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define internal %struct.Point** @_ZSt12__niter_baseIPPZ4mainE5PointENSt11_Niter_baseIT_E13iterator_typeES4_(%struct.Point**) #0 {
  %2 = alloca %struct.Point**, align 8
  store %struct.Point** %0, %struct.Point*** %2, align 8
  %3 = load %struct.Point**, %struct.Point*** %2, align 8
  %4 = call %struct.Point** @_ZNSt10_Iter_baseIPPZ4mainE5PointLb0EE7_S_baseES2_(%struct.Point** %3)
  ret %struct.Point** %4
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.Point** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPZ4mainE5PointEEPT_PKS5_S8_S6_(%struct.Point**, %struct.Point**, %struct.Point**) #4 align 2 {
  %4 = alloca i64
  %5 = alloca %struct.Point**, align 8
  %6 = alloca %struct.Point**, align 8
  %7 = alloca %struct.Point**, align 8
  %8 = alloca i64, align 8
  store %struct.Point** %0, %struct.Point*** %5, align 8
  store %struct.Point** %1, %struct.Point*** %6, align 8
  store %struct.Point** %2, %struct.Point*** %7, align 8
  %9 = load %struct.Point**, %struct.Point*** %6, align 8
  %10 = load %struct.Point**, %struct.Point*** %5, align 8
  %11 = ptrtoint %struct.Point** %9 to i64
  %12 = ptrtoint %struct.Point** %10 to i64
  %13 = sub i64 %11, 5923700299694980426
  %14 = sub i64 %13, %12
  %15 = add i64 %14, 5923700299694980426
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 8
  store i64 %17, i64* %8, align 8
  %18 = load i64, i64* %8, align 8
  store i64 %18, i64* %4
  %19 = alloca i32
  store i32 934257259, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %38
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 934257259, label %23
    i32 -235762837, label %27
    i32 2027575620, label %34
  ]

; <label>:22:                                     ; preds = %20
  br label %38

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %4
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 -235762837, i32 2027575620
  store i32 %26, i32* %19
  br label %38

; <label>:27:                                     ; preds = %20
  %28 = load %struct.Point**, %struct.Point*** %7, align 8
  %29 = bitcast %struct.Point** %28 to i8*
  %30 = load %struct.Point**, %struct.Point*** %5, align 8
  %31 = bitcast %struct.Point** %30 to i8*
  %32 = load i64, i64* %8, align 8
  %33 = mul i64 8, %32
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %29, i8* %31, i64 %33, i32 8, i1 false)
  store i32 2027575620, i32* %19
  br label %38

; <label>:34:                                     ; preds = %20
  %35 = load %struct.Point**, %struct.Point*** %7, align 8
  %36 = load i64, i64* %8, align 8
  %37 = getelementptr inbounds %struct.Point*, %struct.Point** %35, i64 %36
  ret %struct.Point** %37

; <label>:38:                                     ; preds = %27, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.Point** @_ZNSt10_Iter_baseIPPZ4mainE5PointLb0EE7_S_baseES2_(%struct.Point**) #4 align 2 {
  %2 = alloca %struct.Point**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.749
  %6 = load i32, i32* @y.750
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1582825610, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1582825610, label %18
    i32 -269439068, label %38
    i32 -305485476, label %55
    i32 1369899009, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -269439068, i32 1369899009
  store i32 %37, i32* %14
  br label %60

; <label>:38:                                     ; preds = %15
  %39 = alloca %struct.Point**, align 8
  store %struct.Point** %0, %struct.Point*** %39, align 8
  %40 = load %struct.Point**, %struct.Point*** %39, align 8
  store %struct.Point** %40, %struct.Point*** %2
  %41 = load i32, i32* @x.749
  %42 = load i32, i32* @y.750
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -305485476, i32 1369899009
  store i32 %54, i32* %14
  br label %60

; <label>:55:                                     ; preds = %15
  %56 = load volatile %struct.Point**, %struct.Point*** %2
  ret %struct.Point** %56

; <label>:57:                                     ; preds = %15
  %58 = alloca %struct.Point**, align 8
  store %struct.Point** %0, %struct.Point*** %58, align 8
  %59 = load %struct.Point**, %struct.Point*** %58, align 8
  store i32 -269439068, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define internal %struct.Point** @_ZSt23__copy_move_backward_a2ILb0EPPZ4mainE5PointS2_ET1_T0_S4_S3_(%struct.Point**, %struct.Point**, %struct.Point**) #0 {
  %4 = alloca %struct.Point**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.751
  %8 = load i32, i32* @y.752
  %9 = add i32 %7, 790853550
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 790853550
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -976987835, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %91
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -976987835, label %21
    i32 -1587496734, label %41
    i32 1634542154, label %78
    i32 -277767065, label %80
  ]

; <label>:20:                                     ; preds = %18
  br label %91

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1587496734, i32 -277767065
  store i32 %40, i32* %17
  br label %91

; <label>:41:                                     ; preds = %18
  %42 = alloca %struct.Point**, align 8
  %43 = alloca %struct.Point**, align 8
  %44 = alloca %struct.Point**, align 8
  store %struct.Point** %0, %struct.Point*** %42, align 8
  store %struct.Point** %1, %struct.Point*** %43, align 8
  store %struct.Point** %2, %struct.Point*** %44, align 8
  %45 = load %struct.Point**, %struct.Point*** %42, align 8
  %46 = call %struct.Point** @_ZSt12__niter_baseIPPZ4mainE5PointENSt11_Niter_baseIT_E13iterator_typeES4_(%struct.Point** %45)
  %47 = load %struct.Point**, %struct.Point*** %43, align 8
  %48 = call %struct.Point** @_ZSt12__niter_baseIPPZ4mainE5PointENSt11_Niter_baseIT_E13iterator_typeES4_(%struct.Point** %47)
  %49 = load %struct.Point**, %struct.Point*** %44, align 8
  %50 = call %struct.Point** @_ZSt12__niter_baseIPPZ4mainE5PointENSt11_Niter_baseIT_E13iterator_typeES4_(%struct.Point** %49)
  %51 = call %struct.Point** @_ZSt22__copy_move_backward_aILb0EPPZ4mainE5PointS2_ET1_T0_S4_S3_(%struct.Point** %46, %struct.Point** %48, %struct.Point** %50)
  store %struct.Point** %51, %struct.Point*** %4
  %52 = load i32, i32* @x.751
  %53 = load i32, i32* @y.752
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 1634542154, i32 -277767065
  store i32 %77, i32* %17
  br label %91

; <label>:78:                                     ; preds = %18
  %79 = load volatile %struct.Point**, %struct.Point*** %4
  ret %struct.Point** %79

; <label>:80:                                     ; preds = %18
  %81 = alloca %struct.Point**, align 8
  %82 = alloca %struct.Point**, align 8
  %83 = alloca %struct.Point**, align 8
  store %struct.Point** %0, %struct.Point*** %81, align 8
  store %struct.Point** %1, %struct.Point*** %82, align 8
  store %struct.Point** %2, %struct.Point*** %83, align 8
  %84 = load %struct.Point**, %struct.Point*** %81, align 8
  %85 = call %struct.Point** @_ZSt12__niter_baseIPPZ4mainE5PointENSt11_Niter_baseIT_E13iterator_typeES4_(%struct.Point** %84)
  %86 = load %struct.Point**, %struct.Point*** %82, align 8
  %87 = call %struct.Point** @_ZSt12__niter_baseIPPZ4mainE5PointENSt11_Niter_baseIT_E13iterator_typeES4_(%struct.Point** %86)
  %88 = load %struct.Point**, %struct.Point*** %83, align 8
  %89 = call %struct.Point** @_ZSt12__niter_baseIPPZ4mainE5PointENSt11_Niter_baseIT_E13iterator_typeES4_(%struct.Point** %88)
  %90 = call %struct.Point** @_ZSt22__copy_move_backward_aILb0EPPZ4mainE5PointS2_ET1_T0_S4_S3_(%struct.Point** %85, %struct.Point** %87, %struct.Point** %89)
  store i32 -1587496734, i32* %17
  br label %91

; <label>:91:                                     ; preds = %80, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define internal %struct.Point** @_ZSt22__copy_move_backward_aILb0EPPZ4mainE5PointS2_ET1_T0_S4_S3_(%struct.Point**, %struct.Point**, %struct.Point**) #0 {
  %4 = alloca %struct.Point**, align 8
  %5 = alloca %struct.Point**, align 8
  %6 = alloca %struct.Point**, align 8
  %7 = alloca i8, align 1
  store %struct.Point** %0, %struct.Point*** %4, align 8
  store %struct.Point** %1, %struct.Point*** %5, align 8
  store %struct.Point** %2, %struct.Point*** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %struct.Point**, %struct.Point*** %4, align 8
  %9 = load %struct.Point**, %struct.Point*** %5, align 8
  %10 = load %struct.Point**, %struct.Point*** %6, align 8
  %11 = call %struct.Point** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPZ4mainE5PointEEPT_PKS5_S8_S6_(%struct.Point** %8, %struct.Point** %9, %struct.Point** %10)
  ret %struct.Point** %11
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.Point** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPZ4mainE5PointEEPT_PKS5_S8_S6_(%struct.Point**, %struct.Point**, %struct.Point**) #4 align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca %struct.Point***
  %7 = alloca %struct.Point***
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.755
  %11 = load i32, i32* @y.756
  %12 = add i32 %10, 928781543
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, 928781543
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -228933063, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %223
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -228933063, label %24
    i32 1360701588, label %32
    i32 1002653405, label %80
    i32 643814995, label %83
    i32 -1753048385, label %98
    i32 902405917, label %129
    i32 2008099292, label %130
    i32 -1027470301, label %140
    i32 -131383948, label %200
  ]

; <label>:23:                                     ; preds = %21
  br label %223

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 1360701588, i32 -1027470301
  store i32 %31, i32* %20
  br label %223

; <label>:32:                                     ; preds = %21
  %33 = alloca %struct.Point**, align 8
  store %struct.Point*** %33, %struct.Point**** %7
  %34 = alloca %struct.Point**, align 8
  %35 = alloca %struct.Point**, align 8
  store %struct.Point*** %35, %struct.Point**** %6
  %36 = alloca i64, align 8
  store i64* %36, i64** %5
  %37 = load volatile %struct.Point***, %struct.Point**** %7
  store %struct.Point** %0, %struct.Point*** %37, align 8
  store %struct.Point** %1, %struct.Point*** %34, align 8
  %38 = load volatile %struct.Point***, %struct.Point**** %6
  store %struct.Point** %2, %struct.Point*** %38, align 8
  %39 = load %struct.Point**, %struct.Point*** %34, align 8
  %40 = load volatile %struct.Point***, %struct.Point**** %7
  %41 = load %struct.Point**, %struct.Point*** %40, align 8
  %42 = ptrtoint %struct.Point** %39 to i64
  %43 = ptrtoint %struct.Point** %41 to i64
  %44 = add i64 %42, -7197302510614279697
  %45 = sub i64 %44, %43
  %46 = sub i64 %45, -7197302510614279697
  %47 = sub i64 %42, %43
  %48 = sdiv exact i64 %46, 8
  %49 = load volatile i64*, i64** %5
  store i64 %48, i64* %49, align 8
  %50 = load volatile i64*, i64** %5
  %51 = load i64, i64* %50, align 8
  %52 = icmp ne i64 %51, 0
  store i1 %52, i1* %4
  %53 = load i32, i32* @x.755
  %54 = load i32, i32* @y.756
  %55 = add i32 %53, 1563981525
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, 1563981525
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 false, true
  %66 = and i1 %63, false
  %67 = and i1 %61, %65
  %68 = and i1 %64, false
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 false, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 1002653405, i32 -1027470301
  store i32 %79, i32* %20
  br label %223

; <label>:80:                                     ; preds = %21
  %81 = load volatile i1, i1* %4
  %82 = select i1 %81, i32 643814995, i32 2008099292
  store i32 %82, i32* %20
  br label %223

; <label>:83:                                     ; preds = %21
  %84 = load i32, i32* @x.755
  %85 = load i32, i32* @y.756
  %86 = sub i32 0, 1
  %87 = add i32 %84, %86
  %88 = sub i32 %84, 1
  %89 = mul i32 %84, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %85, 10
  %93 = and i1 %91, %92
  %94 = xor i1 %91, %92
  %95 = or i1 %93, %94
  %96 = or i1 %91, %92
  %97 = select i1 %95, i32 -1753048385, i32 -131383948
  store i32 %97, i32* %20
  br label %223

; <label>:98:                                     ; preds = %21
  %99 = load volatile %struct.Point***, %struct.Point**** %6
  %100 = load %struct.Point**, %struct.Point*** %99, align 8
  %101 = load volatile i64*, i64** %5
  %102 = load i64, i64* %101, align 8
  %103 = sub i64 0, -9213721273071506858
  %104 = sub i64 %103, %102
  %105 = add i64 %104, -9213721273071506858
  %106 = sub i64 0, %102
  %107 = getelementptr inbounds %struct.Point*, %struct.Point** %100, i64 %105
  %108 = bitcast %struct.Point** %107 to i8*
  %109 = load volatile %struct.Point***, %struct.Point**** %7
  %110 = load %struct.Point**, %struct.Point*** %109, align 8
  %111 = bitcast %struct.Point** %110 to i8*
  %112 = load volatile i64*, i64** %5
  %113 = load i64, i64* %112, align 8
  %114 = mul i64 8, %113
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %108, i8* %111, i64 %114, i32 8, i1 false)
  %115 = load i32, i32* @x.755
  %116 = load i32, i32* @y.756
  %117 = sub i32 0, 1
  %118 = add i32 %115, %117
  %119 = sub i32 %115, 1
  %120 = mul i32 %115, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %116, 10
  %124 = and i1 %122, %123
  %125 = xor i1 %122, %123
  %126 = or i1 %124, %125
  %127 = or i1 %122, %123
  %128 = select i1 %126, i32 902405917, i32 -131383948
  store i32 %128, i32* %20
  br label %223

; <label>:129:                                    ; preds = %21
  store i32 2008099292, i32* %20
  br label %223

; <label>:130:                                    ; preds = %21
  %131 = load volatile %struct.Point***, %struct.Point**** %6
  %132 = load %struct.Point**, %struct.Point*** %131, align 8
  %133 = load volatile i64*, i64** %5
  %134 = load i64, i64* %133, align 8
  %135 = add i64 0, 1759167789433157297
  %136 = sub i64 %135, %134
  %137 = sub i64 %136, 1759167789433157297
  %138 = sub i64 0, %134
  %139 = getelementptr inbounds %struct.Point*, %struct.Point** %132, i64 %137
  ret %struct.Point** %139

; <label>:140:                                    ; preds = %21
  %141 = alloca %struct.Point**, align 8
  %142 = alloca %struct.Point**, align 8
  %143 = alloca %struct.Point**, align 8
  %144 = alloca i64, align 8
  store %struct.Point** %0, %struct.Point*** %141, align 8
  store %struct.Point** %1, %struct.Point*** %142, align 8
  store %struct.Point** %2, %struct.Point*** %143, align 8
  %145 = load %struct.Point**, %struct.Point*** %142, align 8
  %146 = load %struct.Point**, %struct.Point*** %141, align 8
  %147 = ptrtoint %struct.Point** %145 to i64
  %148 = ptrtoint %struct.Point** %146 to i64
  %149 = sub i64 0, %148
  %150 = add i64 %147, %149
  %151 = sub i64 %147, %148
  %152 = mul i64 %150, %148
  %153 = sub i64 0, %147
  %154 = add i64 0, %153
  %155 = sub i64 0, %147
  %156 = add i64 %154, 1700948205135651533
  %157 = add i64 %156, %148
  %158 = sub i64 %157, 1700948205135651533
  %159 = add i64 %154, %148
  %160 = sub i64 %147, -4238599476972291500
  %161 = sub i64 %160, %148
  %162 = add i64 %161, -4238599476972291500
  %163 = sub i64 %147, %148
  %164 = mul i64 %162, %148
  %165 = sub i64 0, -8028711966428092730
  %166 = sub i64 %165, %147
  %167 = add i64 %166, -8028711966428092730
  %168 = sub i64 0, %147
  %169 = sub i64 %167, -2255458435955789706
  %170 = add i64 %169, %148
  %171 = add i64 %170, -2255458435955789706
  %172 = add i64 %167, %148
  %173 = sub i64 0, %148
  %174 = add i64 %147, %173
  %175 = sub i64 %147, %148
  %176 = shl i64 %174, 8
  %177 = add i64 0, -8947794579622737855
  %178 = sub i64 %177, %174
  %179 = sub i64 %178, -8947794579622737855
  %180 = sub i64 0, %174
  %181 = sub i64 0, 8
  %182 = sub i64 %179, %181
  %183 = add i64 %179, 8
  %184 = sub i64 %174, 2518135272739805176
  %185 = sub i64 %184, 8
  %186 = add i64 %185, 2518135272739805176
  %187 = sub i64 %174, 8
  %188 = mul i64 %186, 8
  %189 = sub i64 0, -2321106967132314837
  %190 = sub i64 %189, %174
  %191 = add i64 %190, -2321106967132314837
  %192 = sub i64 0, %174
  %193 = sub i64 %191, -5751656458910418001
  %194 = add i64 %193, 8
  %195 = add i64 %194, -5751656458910418001
  %196 = add i64 %191, 8
  %197 = sdiv exact i64 %174, 8
  store i64 %197, i64* %144, align 8
  %198 = load i64, i64* %144, align 8
  %199 = icmp ne i64 %198, 0
  store i32 1360701588, i32* %20
  br label %223

; <label>:200:                                    ; preds = %21
  %201 = load volatile %struct.Point***, %struct.Point**** %6
  %202 = load %struct.Point**, %struct.Point*** %201, align 8
  %203 = load volatile i64*, i64** %5
  %204 = load i64, i64* %203, align 8
  %205 = sub i64 0, %204
  %206 = add i64 0, %205
  %207 = sub i64 0, %204
  %208 = mul i64 %206, %204
  %209 = shl i64 0, %204
  %210 = sub i64 0, -8161078239314132054
  %211 = sub i64 %210, %204
  %212 = add i64 %211, -8161078239314132054
  %213 = sub i64 0, %204
  %214 = getelementptr inbounds %struct.Point*, %struct.Point** %202, i64 %212
  %215 = bitcast %struct.Point** %214 to i8*
  %216 = load volatile %struct.Point***, %struct.Point**** %7
  %217 = load %struct.Point**, %struct.Point*** %216, align 8
  %218 = bitcast %struct.Point** %217 to i8*
  %219 = load volatile i64*, i64** %5
  %220 = load i64, i64* %219, align 8
  %221 = shl i64 8, %220
  %222 = mul i64 8, %220
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %215, i8* %218, i64 %222, i32 8, i1 false)
  store i32 -1753048385, i32* %20
  br label %223

; <label>:223:                                    ; preds = %200, %140, %129, %98, %83, %80, %32, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZN9__gnu_cxx13new_allocatorIZ4mainE9DirectionEC2Ev(%"class.__gnu_cxx::new_allocator.30"*) unnamed_addr #4 align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.757
  %5 = load i32, i32* @y.758
  %6 = sub i32 %4, -1300229806
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1300229806
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1913524909, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %71
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1913524909, label %18
    i32 1087544362, label %38
    i32 7148542, label %67
    i32 869567204, label %68
  ]

; <label>:17:                                     ; preds = %15
  br label %71

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1087544362, i32 869567204
  store i32 %37, i32* %14
  br label %71

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.30"*, align 8
  store %"class.__gnu_cxx::new_allocator.30"* %0, %"class.__gnu_cxx::new_allocator.30"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.30"*, %"class.__gnu_cxx::new_allocator.30"** %39, align 8
  %41 = load i32, i32* @x.757
  %42 = load i32, i32* @y.758
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 7148542, i32 869567204
  store i32 %66, i32* %14
  br label %71

; <label>:67:                                     ; preds = %15
  ret void

; <label>:68:                                     ; preds = %15
  %69 = alloca %"class.__gnu_cxx::new_allocator.30"*, align 8
  store %"class.__gnu_cxx::new_allocator.30"* %0, %"class.__gnu_cxx::new_allocator.30"** %69, align 8
  %70 = load %"class.__gnu_cxx::new_allocator.30"*, %"class.__gnu_cxx::new_allocator.30"** %69, align 8
  store i32 1087544362, i32* %14
  br label %71

; <label>:71:                                     ; preds = %68, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZN9__gnu_cxx13new_allocatorIZ4mainE9DirectionED2Ev(%"class.__gnu_cxx::new_allocator.30"*) unnamed_addr #4 align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.30"*, align 8
  store %"class.__gnu_cxx::new_allocator.30"* %0, %"class.__gnu_cxx::new_allocator.30"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.30"*, %"class.__gnu_cxx::new_allocator.30"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSt12_Vector_baseIZ4mainE9DirectionSaIS0_EEC2ERKS1_(%"struct.std::_Vector_base.28"*, %"class.std::allocator.29"* dereferenceable(1)) unnamed_addr #4 align 2 {
  %3 = alloca %"struct.std::_Vector_base.28"*, align 8
  %4 = alloca %"class.std::allocator.29"*, align 8
  store %"struct.std::_Vector_base.28"* %0, %"struct.std::_Vector_base.28"** %3, align 8
  store %"class.std::allocator.29"* %1, %"class.std::allocator.29"** %4, align 8
  %5 = load %"struct.std::_Vector_base.28"*, %"struct.std::_Vector_base.28"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.28", %"struct.std::_Vector_base.28"* %5, i32 0, i32 0
  %7 = load %"class.std::allocator.29"*, %"class.std::allocator.29"** %4, align 8
  call void @_ZNSt12_Vector_baseIZ4mainE9DirectionSaIS0_EE12_Vector_implC2ERKS1_(%"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"* %6, %"class.std::allocator.29"* dereferenceable(1) %7) #3
  ret void
}

; Function Attrs: noinline uwtable
define internal void @_ZNSt6vectorIZ4mainE9DirectionSaIS0_EE19_M_range_initializeIPKS0_EEvT_S6_St20forward_iterator_tag(%"class.std::vector.27"*, %struct.Direction*, %struct.Direction*) #0 align 2 {
  %4 = alloca %"struct.std::forward_iterator_tag", align 1
  %5 = alloca %"class.std::vector.27"*, align 8
  %6 = alloca %struct.Direction*, align 8
  %7 = alloca %struct.Direction*, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector.27"* %0, %"class.std::vector.27"** %5, align 8
  store %struct.Direction* %1, %struct.Direction** %6, align 8
  store %struct.Direction* %2, %struct.Direction** %7, align 8
  %9 = load %"class.std::vector.27"*, %"class.std::vector.27"** %5, align 8
  %10 = load %struct.Direction*, %struct.Direction** %6, align 8
  %11 = load %struct.Direction*, %struct.Direction** %7, align 8
  %12 = call i64 @_ZSt8distanceIPKZ4mainE9DirectionENSt15iterator_traitsIT_E15difference_typeES4_S4_(%struct.Direction* %10, %struct.Direction* %11)
  store i64 %12, i64* %8, align 8
  %13 = bitcast %"class.std::vector.27"* %9 to %"struct.std::_Vector_base.28"*
  %14 = load i64, i64* %8, align 8
  %15 = call %struct.Direction* @_ZNSt12_Vector_baseIZ4mainE9DirectionSaIS0_EE11_M_allocateEm(%"struct.std::_Vector_base.28"* %13, i64 %14)
  %16 = bitcast %"class.std::vector.27"* %9 to %"struct.std::_Vector_base.28"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.28", %"struct.std::_Vector_base.28"* %16, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl", %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"* %17, i32 0, i32 0
  store %struct.Direction* %15, %struct.Direction** %18, align 8
  %19 = bitcast %"class.std::vector.27"* %9 to %"struct.std::_Vector_base.28"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base.28", %"struct.std::_Vector_base.28"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl", %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"* %20, i32 0, i32 0
  %22 = load %struct.Direction*, %struct.Direction** %21, align 8
  %23 = load i64, i64* %8, align 8
  %24 = getelementptr inbounds %struct.Direction, %struct.Direction* %22, i64 %23
  %25 = bitcast %"class.std::vector.27"* %9 to %"struct.std::_Vector_base.28"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.28", %"struct.std::_Vector_base.28"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl", %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"* %26, i32 0, i32 2
  store %struct.Direction* %24, %struct.Direction** %27, align 8
  %28 = load %struct.Direction*, %struct.Direction** %6, align 8
  %29 = load %struct.Direction*, %struct.Direction** %7, align 8
  %30 = bitcast %"class.std::vector.27"* %9 to %"struct.std::_Vector_base.28"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.28", %"struct.std::_Vector_base.28"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl", %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"* %31, i32 0, i32 0
  %33 = load %struct.Direction*, %struct.Direction** %32, align 8
  %34 = bitcast %"class.std::vector.27"* %9 to %"struct.std::_Vector_base.28"*
  %35 = call dereferenceable(1) %"class.std::allocator.29"* @_ZNSt12_Vector_baseIZ4mainE9DirectionSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.28"* %34) #3
  %36 = call %struct.Direction* @_ZSt22__uninitialized_copy_aIPKZ4mainE9DirectionPS0_S0_ET0_T_S5_S4_RSaIT1_E(%struct.Direction* %28, %struct.Direction* %29, %struct.Direction* %33, %"class.std::allocator.29"* dereferenceable(1) %35)
  %37 = bitcast %"class.std::vector.27"* %9 to %"struct.std::_Vector_base.28"*
  %38 = getelementptr inbounds %"struct.std::_Vector_base.28", %"struct.std::_Vector_base.28"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl", %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"* %38, i32 0, i32 1
  store %struct.Direction* %36, %struct.Direction** %39, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.Direction* @_ZNKSt16initializer_listIZ4mainE9DirectionE5beginEv(%"class.std::initializer_list"*) #4 align 2 {
  %2 = alloca %struct.Direction*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.765
  %6 = load i32, i32* @y.766
  %7 = sub i32 %5, 913904729
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 913904729
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1511354034, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1511354034, label %19
    i32 -358885193, label %27
    i32 1007345721, label %59
    i32 -409523596, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -358885193, i32 -409523596
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::initializer_list"*, align 8
  store %"class.std::initializer_list"* %0, %"class.std::initializer_list"** %28, align 8
  %29 = load %"class.std::initializer_list"*, %"class.std::initializer_list"** %28, align 8
  %30 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %29, i32 0, i32 0
  %31 = load %struct.Direction*, %struct.Direction** %30, align 8
  store %struct.Direction* %31, %struct.Direction** %2
  %32 = load i32, i32* @x.765
  %33 = load i32, i32* @y.766
  %34 = add i32 %32, -609041824
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -609041824
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 1007345721, i32 -409523596
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %struct.Direction*, %struct.Direction** %2
  ret %struct.Direction* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::initializer_list"*, align 8
  store %"class.std::initializer_list"* %0, %"class.std::initializer_list"** %62, align 8
  %63 = load %"class.std::initializer_list"*, %"class.std::initializer_list"** %62, align 8
  %64 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %63, i32 0, i32 0
  %65 = load %struct.Direction*, %struct.Direction** %64, align 8
  store i32 -358885193, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.Direction* @_ZNKSt16initializer_listIZ4mainE9DirectionE3endEv(%"class.std::initializer_list"*) #4 align 2 {
  %2 = alloca %"class.std::initializer_list"*, align 8
  store %"class.std::initializer_list"* %0, %"class.std::initializer_list"** %2, align 8
  %3 = load %"class.std::initializer_list"*, %"class.std::initializer_list"** %2, align 8
  %4 = call %struct.Direction* @_ZNKSt16initializer_listIZ4mainE9DirectionE5beginEv(%"class.std::initializer_list"* %3) #3
  %5 = call i64 @_ZNKSt16initializer_listIZ4mainE9DirectionE4sizeEv(%"class.std::initializer_list"* %3) #3
  %6 = getelementptr inbounds %struct.Direction, %struct.Direction* %4, i64 %5
  ret %struct.Direction* %6
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSt12_Vector_baseIZ4mainE9DirectionSaIS0_EED2Ev(%"struct.std::_Vector_base.28"*) unnamed_addr #4 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.28"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.28"* %0, %"struct.std::_Vector_base.28"** %2, align 8
  %5 = load %"struct.std::_Vector_base.28"*, %"struct.std::_Vector_base.28"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.28", %"struct.std::_Vector_base.28"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl", %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %struct.Direction*, %struct.Direction** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.28", %"struct.std::_Vector_base.28"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl", %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %struct.Direction*, %struct.Direction** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.28", %"struct.std::_Vector_base.28"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl", %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %struct.Direction*, %struct.Direction** %13, align 8
  %15 = ptrtoint %struct.Direction* %11 to i64
  %16 = ptrtoint %struct.Direction* %14 to i64
  %17 = add i64 %15, -8806660310437119123
  %18 = sub i64 %17, %16
  %19 = sub i64 %18, -8806660310437119123
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 8
  invoke void @_ZNSt12_Vector_baseIZ4mainE9DirectionSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base.28"* %5, %struct.Direction* %8, i64 %21)
          to label %22 unwind label %53

; <label>:22:                                     ; preds = %1
  %23 = load i32, i32* @x.769
  %24 = load i32, i32* @y.770
  %25 = sub i32 0, 1
  %26 = add i32 %23, %25
  %27 = sub i32 %23, 1
  %28 = mul i32 %23, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %24, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  br i1 %34, label %36, label %154

; <label>:36:                                     ; preds = %22, %154
  %37 = getelementptr inbounds %"struct.std::_Vector_base.28", %"struct.std::_Vector_base.28"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIZ4mainE9DirectionSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"* %37) #3
  %38 = load i32, i32* @x.769
  %39 = load i32, i32* @y.770
  %40 = sub i32 %38, 1093146478
  %41 = sub i32 %40, 1
  %42 = add i32 %41, 1093146478
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %154

; <label>:52:                                     ; preds = %36
  ret void

; <label>:53:                                     ; preds = %1
  %54 = load i32, i32* @x.769
  %55 = load i32, i32* @y.770
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  br i1 %77, label %79, label %156

; <label>:79:                                     ; preds = %53, %156
  %80 = landingpad { i8*, i32 }
          catch i8* null
  %81 = extractvalue { i8*, i32 } %80, 0
  store i8* %81, i8** %3, align 8
  %82 = extractvalue { i8*, i32 } %80, 1
  store i32 %82, i32* %4, align 4
  %83 = getelementptr inbounds %"struct.std::_Vector_base.28", %"struct.std::_Vector_base.28"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIZ4mainE9DirectionSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"* %83) #3
  %84 = load i32, i32* @x.769
  %85 = load i32, i32* @y.770
  %86 = sub i32 0, 1
  %87 = add i32 %84, %86
  %88 = sub i32 %84, 1
  %89 = mul i32 %84, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %85, 10
  %93 = xor i1 %91, true
  %94 = xor i1 %92, true
  %95 = xor i1 false, true
  %96 = and i1 %93, false
  %97 = and i1 %91, %95
  %98 = and i1 %94, false
  %99 = and i1 %92, %95
  %100 = or i1 %96, %97
  %101 = or i1 %98, %99
  %102 = xor i1 %100, %101
  %103 = or i1 %93, %94
  %104 = xor i1 %103, true
  %105 = or i1 false, %95
  %106 = and i1 %104, %105
  %107 = or i1 %102, %106
  %108 = or i1 %91, %92
  br i1 %107, label %109, label %156

; <label>:109:                                    ; preds = %79
  br label %110

; <label>:110:                                    ; preds = %109
  %111 = load i32, i32* @x.769
  %112 = load i32, i32* @y.770
  %113 = add i32 %111, -1928432819
  %114 = sub i32 %113, 1
  %115 = sub i32 %114, -1928432819
  %116 = sub i32 %111, 1
  %117 = mul i32 %111, %115
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %112, 10
  %121 = xor i1 %119, true
  %122 = xor i1 %120, true
  %123 = xor i1 true, true
  %124 = and i1 %121, true
  %125 = and i1 %119, %123
  %126 = and i1 %122, true
  %127 = and i1 %120, %123
  %128 = or i1 %124, %125
  %129 = or i1 %126, %127
  %130 = xor i1 %128, %129
  %131 = or i1 %121, %122
  %132 = xor i1 %131, true
  %133 = or i1 true, %123
  %134 = and i1 %132, %133
  %135 = or i1 %130, %134
  %136 = or i1 %119, %120
  br i1 %135, label %137, label %161

; <label>:137:                                    ; preds = %110, %161
  %138 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %138) #13
  %139 = load i32, i32* @x.769
  %140 = load i32, i32* @y.770
  %141 = sub i32 %139, -1177619749
  %142 = sub i32 %141, 1
  %143 = add i32 %142, -1177619749
  %144 = sub i32 %139, 1
  %145 = mul i32 %139, %143
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %140, 10
  %149 = and i1 %147, %148
  %150 = xor i1 %147, %148
  %151 = or i1 %149, %150
  %152 = or i1 %147, %148
  br i1 %151, label %153, label %161

; <label>:153:                                    ; preds = %137
  unreachable

; <label>:154:                                    ; preds = %36, %22
  %155 = getelementptr inbounds %"struct.std::_Vector_base.28", %"struct.std::_Vector_base.28"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIZ4mainE9DirectionSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"* %155) #3
  br label %36

; <label>:156:                                    ; preds = %79, %53
  %157 = landingpad { i8*, i32 }
          catch i8* null
  %158 = extractvalue { i8*, i32 } %157, 0
  store i8* %158, i8** %3, align 8
  %159 = extractvalue { i8*, i32 } %157, 1
  store i32 %159, i32* %4, align 4
  %160 = getelementptr inbounds %"struct.std::_Vector_base.28", %"struct.std::_Vector_base.28"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIZ4mainE9DirectionSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"* %160) #3
  br label %79

; <label>:161:                                    ; preds = %137, %110
  %162 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %162) #13
  br label %137
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSt12_Vector_baseIZ4mainE9DirectionSaIS0_EE12_Vector_implC2ERKS1_(%"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"*, %"class.std::allocator.29"* dereferenceable(1)) unnamed_addr #4 align 2 {
  %3 = alloca %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.29"*, align 8
  store %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.29"* %1, %"class.std::allocator.29"** %4, align 8
  %5 = load %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"*, %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"* %5 to %"class.std::allocator.29"*
  %7 = load %"class.std::allocator.29"*, %"class.std::allocator.29"** %4, align 8
  call void @_ZNSaIZ4mainE9DirectionEC2ERKS0_(%"class.std::allocator.29"* %6, %"class.std::allocator.29"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl", %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"* %5, i32 0, i32 0
  store %struct.Direction* null, %struct.Direction** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl", %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"* %5, i32 0, i32 1
  store %struct.Direction* null, %struct.Direction** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl", %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"* %5, i32 0, i32 2
  store %struct.Direction* null, %struct.Direction** %10, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSaIZ4mainE9DirectionEC2ERKS0_(%"class.std::allocator.29"*, %"class.std::allocator.29"* dereferenceable(1)) unnamed_addr #4 align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.773
  %6 = load i32, i32* @y.774
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -960807999, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %79
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -960807999, label %18
    i32 -967899811, label %38
    i32 -1032372424, label %71
    i32 -340999857, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %79

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -967899811, i32 -340999857
  store i32 %37, i32* %14
  br label %79

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.29"*, align 8
  %40 = alloca %"class.std::allocator.29"*, align 8
  store %"class.std::allocator.29"* %0, %"class.std::allocator.29"** %39, align 8
  store %"class.std::allocator.29"* %1, %"class.std::allocator.29"** %40, align 8
  %41 = load %"class.std::allocator.29"*, %"class.std::allocator.29"** %39, align 8
  %42 = bitcast %"class.std::allocator.29"* %41 to %"class.__gnu_cxx::new_allocator.30"*
  %43 = load %"class.std::allocator.29"*, %"class.std::allocator.29"** %40, align 8
  %44 = bitcast %"class.std::allocator.29"* %43 to %"class.__gnu_cxx::new_allocator.30"*
  call void @_ZN9__gnu_cxx13new_allocatorIZ4mainE9DirectionEC2ERKS2_(%"class.__gnu_cxx::new_allocator.30"* %42, %"class.__gnu_cxx::new_allocator.30"* dereferenceable(1) %44) #3
  %45 = load i32, i32* @x.773
  %46 = load i32, i32* @y.774
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -1032372424, i32 -340999857
  store i32 %70, i32* %14
  br label %79

; <label>:71:                                     ; preds = %15
  ret void

; <label>:72:                                     ; preds = %15
  %73 = alloca %"class.std::allocator.29"*, align 8
  %74 = alloca %"class.std::allocator.29"*, align 8
  store %"class.std::allocator.29"* %0, %"class.std::allocator.29"** %73, align 8
  store %"class.std::allocator.29"* %1, %"class.std::allocator.29"** %74, align 8
  %75 = load %"class.std::allocator.29"*, %"class.std::allocator.29"** %73, align 8
  %76 = bitcast %"class.std::allocator.29"* %75 to %"class.__gnu_cxx::new_allocator.30"*
  %77 = load %"class.std::allocator.29"*, %"class.std::allocator.29"** %74, align 8
  %78 = bitcast %"class.std::allocator.29"* %77 to %"class.__gnu_cxx::new_allocator.30"*
  call void @_ZN9__gnu_cxx13new_allocatorIZ4mainE9DirectionEC2ERKS2_(%"class.__gnu_cxx::new_allocator.30"* %76, %"class.__gnu_cxx::new_allocator.30"* dereferenceable(1) %78) #3
  store i32 -967899811, i32* %14
  br label %79

; <label>:79:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZN9__gnu_cxx13new_allocatorIZ4mainE9DirectionEC2ERKS2_(%"class.__gnu_cxx::new_allocator.30"*, %"class.__gnu_cxx::new_allocator.30"* dereferenceable(1)) unnamed_addr #4 align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.775
  %6 = load i32, i32* @y.776
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1393509306, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1393509306, label %18
    i32 1498992218, label %38
    i32 -404061531, label %57
    i32 89519797, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1498992218, i32 89519797
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.30"*, align 8
  %40 = alloca %"class.__gnu_cxx::new_allocator.30"*, align 8
  store %"class.__gnu_cxx::new_allocator.30"* %0, %"class.__gnu_cxx::new_allocator.30"** %39, align 8
  store %"class.__gnu_cxx::new_allocator.30"* %1, %"class.__gnu_cxx::new_allocator.30"** %40, align 8
  %41 = load %"class.__gnu_cxx::new_allocator.30"*, %"class.__gnu_cxx::new_allocator.30"** %39, align 8
  %42 = load i32, i32* @x.775
  %43 = load i32, i32* @y.776
  %44 = sub i32 %42, -1093869000
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -1093869000
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -404061531, i32 89519797
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.__gnu_cxx::new_allocator.30"*, align 8
  %60 = alloca %"class.__gnu_cxx::new_allocator.30"*, align 8
  store %"class.__gnu_cxx::new_allocator.30"* %0, %"class.__gnu_cxx::new_allocator.30"** %59, align 8
  store %"class.__gnu_cxx::new_allocator.30"* %1, %"class.__gnu_cxx::new_allocator.30"** %60, align 8
  %61 = load %"class.__gnu_cxx::new_allocator.30"*, %"class.__gnu_cxx::new_allocator.30"** %59, align 8
  store i32 1498992218, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define internal i64 @_ZSt8distanceIPKZ4mainE9DirectionENSt15iterator_traitsIT_E15difference_typeES4_S4_(%struct.Direction*, %struct.Direction*) #0 {
  %3 = alloca %struct.Direction*, align 8
  %4 = alloca %struct.Direction*, align 8
  %5 = alloca %"struct.std::random_access_iterator_tag", align 1
  %6 = alloca %"struct.std::random_access_iterator_tag", align 1
  store %struct.Direction* %0, %struct.Direction** %3, align 8
  store %struct.Direction* %1, %struct.Direction** %4, align 8
  %7 = load %struct.Direction*, %struct.Direction** %3, align 8
  %8 = load %struct.Direction*, %struct.Direction** %4, align 8
  call void @_ZSt19__iterator_categoryIPKZ4mainE9DirectionENSt15iterator_traitsIT_E17iterator_categoryERKS4_(%struct.Direction** dereferenceable(8) %3)
  %9 = call i64 @_ZSt10__distanceIPKZ4mainE9DirectionENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag(%struct.Direction* %7, %struct.Direction* %8)
  ret i64 %9
}

; Function Attrs: noinline uwtable
define internal %struct.Direction* @_ZNSt12_Vector_baseIZ4mainE9DirectionSaIS0_EE11_M_allocateEm(%"struct.std::_Vector_base.28"*, i64) #0 align 2 {
  %3 = alloca %struct.Direction*
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.28"*
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.779
  %10 = load i32, i32* @y.780
  %11 = sub i32 %9, 1572236963
  %12 = sub i32 %11, 1
  %13 = add i32 %12, 1572236963
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 878370152, i32* %19
  %20 = alloca %struct.Direction*
  br label %21

; <label>:21:                                     ; preds = %2, %186
  %22 = load i32, i32* %19
  switch i32 %22, label %23 [
    i32 878370152, label %24
    i32 -2064543333, label %44
    i32 -1491894493, label %66
    i32 -1949326671, label %69
    i32 2131780333, label %76
    i32 -1330603808, label %92
    i32 -1283720093, label %119
    i32 1708182287, label %120
    i32 310377929, label %149
    i32 2137293706, label %176
    i32 -1721225425, label %178
    i32 1820758068, label %184
    i32 1292986196, label %185
  ]

; <label>:23:                                     ; preds = %21
  br label %186

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %8
  %26 = load volatile i1, i1* %7
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 true, true
  %30 = and i1 %27, true
  %31 = and i1 %25, %29
  %32 = and i1 %28, true
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 true, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 -2064543333, i32 -1721225425
  store i32 %43, i32* %19
  br label %186

; <label>:44:                                     ; preds = %21
  %45 = alloca %"struct.std::_Vector_base.28"*, align 8
  %46 = alloca i64, align 8
  store i64* %46, i64** %6
  store %"struct.std::_Vector_base.28"* %0, %"struct.std::_Vector_base.28"** %45, align 8
  %47 = load volatile i64*, i64** %6
  store i64 %1, i64* %47, align 8
  %48 = load %"struct.std::_Vector_base.28"*, %"struct.std::_Vector_base.28"** %45, align 8
  store %"struct.std::_Vector_base.28"* %48, %"struct.std::_Vector_base.28"** %5
  %49 = load volatile i64*, i64** %6
  %50 = load i64, i64* %49, align 8
  %51 = icmp ne i64 %50, 0
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.779
  %53 = load i32, i32* @y.780
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 -1491894493, i32 -1721225425
  store i32 %65, i32* %19
  br label %186

; <label>:66:                                     ; preds = %21
  %67 = load volatile i1, i1* %4
  %68 = select i1 %67, i32 -1949326671, i32 2131780333
  store i32 %68, i32* %19
  br label %186

; <label>:69:                                     ; preds = %21
  %70 = load volatile %"struct.std::_Vector_base.28"*, %"struct.std::_Vector_base.28"** %5
  %71 = getelementptr inbounds %"struct.std::_Vector_base.28", %"struct.std::_Vector_base.28"* %70, i32 0, i32 0
  %72 = bitcast %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"* %71 to %"class.std::allocator.29"*
  %73 = load volatile i64*, i64** %6
  %74 = load i64, i64* %73, align 8
  %75 = call %struct.Direction* @_ZNSt16allocator_traitsISaIZ4mainE9DirectionEE8allocateERS1_m(%"class.std::allocator.29"* dereferenceable(1) %72, i64 %74)
  store i32 1708182287, i32* %19
  store %struct.Direction* %75, %struct.Direction** %20
  br label %186

; <label>:76:                                     ; preds = %21
  %77 = load i32, i32* @x.779
  %78 = load i32, i32* @y.780
  %79 = add i32 %77, -314841442
  %80 = sub i32 %79, 1
  %81 = sub i32 %80, -314841442
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = and i1 %85, %86
  %88 = xor i1 %85, %86
  %89 = or i1 %87, %88
  %90 = or i1 %85, %86
  %91 = select i1 %89, i32 -1330603808, i32 1820758068
  store i32 %91, i32* %19
  br label %186

; <label>:92:                                     ; preds = %21
  %93 = load i32, i32* @x.779
  %94 = load i32, i32* @y.780
  %95 = sub i32 0, 1
  %96 = add i32 %93, %95
  %97 = sub i32 %93, 1
  %98 = mul i32 %93, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %94, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 false, true
  %105 = and i1 %102, false
  %106 = and i1 %100, %104
  %107 = and i1 %103, false
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 false, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  %118 = select i1 %116, i32 -1283720093, i32 1820758068
  store i32 %118, i32* %19
  br label %186

; <label>:119:                                    ; preds = %21
  store i32 1708182287, i32* %19
  store %struct.Direction* null, %struct.Direction** %20
  br label %186

; <label>:120:                                    ; preds = %21
  %121 = load %struct.Direction*, %struct.Direction** %20
  store %struct.Direction* %121, %struct.Direction** %3
  %122 = load i32, i32* @x.779
  %123 = load i32, i32* @y.780
  %124 = sub i32 %122, -487555908
  %125 = sub i32 %124, 1
  %126 = add i32 %125, -487555908
  %127 = sub i32 %122, 1
  %128 = mul i32 %122, %126
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %123, 10
  %132 = xor i1 %130, true
  %133 = xor i1 %131, true
  %134 = xor i1 false, true
  %135 = and i1 %132, false
  %136 = and i1 %130, %134
  %137 = and i1 %133, false
  %138 = and i1 %131, %134
  %139 = or i1 %135, %136
  %140 = or i1 %137, %138
  %141 = xor i1 %139, %140
  %142 = or i1 %132, %133
  %143 = xor i1 %142, true
  %144 = or i1 false, %134
  %145 = and i1 %143, %144
  %146 = or i1 %141, %145
  %147 = or i1 %130, %131
  %148 = select i1 %146, i32 310377929, i32 1292986196
  store i32 %148, i32* %19
  br label %186

; <label>:149:                                    ; preds = %21
  %150 = load i32, i32* @x.779
  %151 = load i32, i32* @y.780
  %152 = sub i32 0, 1
  %153 = add i32 %150, %152
  %154 = sub i32 %150, 1
  %155 = mul i32 %150, %153
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %151, 10
  %159 = xor i1 %157, true
  %160 = xor i1 %158, true
  %161 = xor i1 true, true
  %162 = and i1 %159, true
  %163 = and i1 %157, %161
  %164 = and i1 %160, true
  %165 = and i1 %158, %161
  %166 = or i1 %162, %163
  %167 = or i1 %164, %165
  %168 = xor i1 %166, %167
  %169 = or i1 %159, %160
  %170 = xor i1 %169, true
  %171 = or i1 true, %161
  %172 = and i1 %170, %171
  %173 = or i1 %168, %172
  %174 = or i1 %157, %158
  %175 = select i1 %173, i32 2137293706, i32 1292986196
  store i32 %175, i32* %19
  br label %186

; <label>:176:                                    ; preds = %21
  %177 = load volatile %struct.Direction*, %struct.Direction** %3
  ret %struct.Direction* %177

; <label>:178:                                    ; preds = %21
  %179 = alloca %"struct.std::_Vector_base.28"*, align 8
  %180 = alloca i64, align 8
  store %"struct.std::_Vector_base.28"* %0, %"struct.std::_Vector_base.28"** %179, align 8
  store i64 %1, i64* %180, align 8
  %181 = load %"struct.std::_Vector_base.28"*, %"struct.std::_Vector_base.28"** %179, align 8
  %182 = load i64, i64* %180, align 8
  %183 = icmp ne i64 %182, 0
  store i32 -2064543333, i32* %19
  br label %186

; <label>:184:                                    ; preds = %21
  store i32 -1330603808, i32* %19
  br label %186

; <label>:185:                                    ; preds = %21
  store i32 310377929, i32* %19
  br label %186

; <label>:186:                                    ; preds = %185, %184, %178, %149, %120, %119, %92, %76, %69, %66, %44, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define internal %struct.Direction* @_ZSt22__uninitialized_copy_aIPKZ4mainE9DirectionPS0_S0_ET0_T_S5_S4_RSaIT1_E(%struct.Direction*, %struct.Direction*, %struct.Direction*, %"class.std::allocator.29"* dereferenceable(1)) #0 {
  %5 = alloca %struct.Direction*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.781
  %9 = load i32, i32* @y.782
  %10 = sub i32 %8, 62127767
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 62127767
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -369288610, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %76
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -369288610, label %22
    i32 -376019687, label %30
    i32 -864922178, label %65
    i32 353042175, label %67
  ]

; <label>:21:                                     ; preds = %19
  br label %76

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -376019687, i32 353042175
  store i32 %29, i32* %18
  br label %76

; <label>:30:                                     ; preds = %19
  %31 = alloca %struct.Direction*, align 8
  %32 = alloca %struct.Direction*, align 8
  %33 = alloca %struct.Direction*, align 8
  %34 = alloca %"class.std::allocator.29"*, align 8
  store %struct.Direction* %0, %struct.Direction** %31, align 8
  store %struct.Direction* %1, %struct.Direction** %32, align 8
  store %struct.Direction* %2, %struct.Direction** %33, align 8
  store %"class.std::allocator.29"* %3, %"class.std::allocator.29"** %34, align 8
  %35 = load %struct.Direction*, %struct.Direction** %31, align 8
  %36 = load %struct.Direction*, %struct.Direction** %32, align 8
  %37 = load %struct.Direction*, %struct.Direction** %33, align 8
  %38 = call %struct.Direction* @_ZSt18uninitialized_copyIPKZ4mainE9DirectionPS0_ET0_T_S5_S4_(%struct.Direction* %35, %struct.Direction* %36, %struct.Direction* %37)
  store %struct.Direction* %38, %struct.Direction** %5
  %39 = load i32, i32* @x.781
  %40 = load i32, i32* @y.782
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 -864922178, i32 353042175
  store i32 %64, i32* %18
  br label %76

; <label>:65:                                     ; preds = %19
  %66 = load volatile %struct.Direction*, %struct.Direction** %5
  ret %struct.Direction* %66

; <label>:67:                                     ; preds = %19
  %68 = alloca %struct.Direction*, align 8
  %69 = alloca %struct.Direction*, align 8
  %70 = alloca %struct.Direction*, align 8
  %71 = alloca %"class.std::allocator.29"*, align 8
  store %struct.Direction* %0, %struct.Direction** %68, align 8
  store %struct.Direction* %1, %struct.Direction** %69, align 8
  store %struct.Direction* %2, %struct.Direction** %70, align 8
  store %"class.std::allocator.29"* %3, %"class.std::allocator.29"** %71, align 8
  %72 = load %struct.Direction*, %struct.Direction** %68, align 8
  %73 = load %struct.Direction*, %struct.Direction** %69, align 8
  %74 = load %struct.Direction*, %struct.Direction** %70, align 8
  %75 = call %struct.Direction* @_ZSt18uninitialized_copyIPKZ4mainE9DirectionPS0_ET0_T_S5_S4_(%struct.Direction* %72, %struct.Direction* %73, %struct.Direction* %74)
  store i32 -376019687, i32* %18
  br label %76

; <label>:76:                                     ; preds = %67, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(1) %"class.std::allocator.29"* @_ZNSt12_Vector_baseIZ4mainE9DirectionSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.28"*) #4 align 2 {
  %2 = alloca %"struct.std::_Vector_base.28"*, align 8
  store %"struct.std::_Vector_base.28"* %0, %"struct.std::_Vector_base.28"** %2, align 8
  %3 = load %"struct.std::_Vector_base.28"*, %"struct.std::_Vector_base.28"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.28", %"struct.std::_Vector_base.28"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"* %4 to %"class.std::allocator.29"*
  ret %"class.std::allocator.29"* %5
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @_ZSt10__distanceIPKZ4mainE9DirectionENSt15iterator_traitsIT_E15difference_typeES4_S4_St26random_access_iterator_tag(%struct.Direction*, %struct.Direction*) #4 {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.785
  %7 = load i32, i32* @y.786
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -767316858, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %127
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -767316858, label %19
    i32 -1357910346, label %39
    i32 41038988, label %66
    i32 602630668, label %68
  ]

; <label>:18:                                     ; preds = %16
  br label %127

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1357910346, i32 602630668
  store i32 %38, i32* %15
  br label %127

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::random_access_iterator_tag", align 1
  %41 = alloca %struct.Direction*, align 8
  %42 = alloca %struct.Direction*, align 8
  store %struct.Direction* %0, %struct.Direction** %41, align 8
  store %struct.Direction* %1, %struct.Direction** %42, align 8
  %43 = load %struct.Direction*, %struct.Direction** %42, align 8
  %44 = load %struct.Direction*, %struct.Direction** %41, align 8
  %45 = ptrtoint %struct.Direction* %43 to i64
  %46 = ptrtoint %struct.Direction* %44 to i64
  %47 = add i64 %45, 7146634822470894238
  %48 = sub i64 %47, %46
  %49 = sub i64 %48, 7146634822470894238
  %50 = sub i64 %45, %46
  %51 = sdiv exact i64 %49, 8
  store i64 %51, i64* %3
  %52 = load i32, i32* @x.785
  %53 = load i32, i32* @y.786
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 41038988, i32 602630668
  store i32 %65, i32* %15
  br label %127

; <label>:66:                                     ; preds = %16
  %67 = load volatile i64, i64* %3
  ret i64 %67

; <label>:68:                                     ; preds = %16
  %69 = alloca %"struct.std::random_access_iterator_tag", align 1
  %70 = alloca %struct.Direction*, align 8
  %71 = alloca %struct.Direction*, align 8
  store %struct.Direction* %0, %struct.Direction** %70, align 8
  store %struct.Direction* %1, %struct.Direction** %71, align 8
  %72 = load %struct.Direction*, %struct.Direction** %71, align 8
  %73 = load %struct.Direction*, %struct.Direction** %70, align 8
  %74 = ptrtoint %struct.Direction* %72 to i64
  %75 = ptrtoint %struct.Direction* %73 to i64
  %76 = sub i64 0, %74
  %77 = add i64 0, %76
  %78 = sub i64 0, %74
  %79 = sub i64 %77, 3994275243073497966
  %80 = add i64 %79, %75
  %81 = add i64 %80, 3994275243073497966
  %82 = add i64 %77, %75
  %83 = add i64 0, -2036863574978590962
  %84 = sub i64 %83, %74
  %85 = sub i64 %84, -2036863574978590962
  %86 = sub i64 0, %74
  %87 = add i64 %85, 8687432483113240056
  %88 = add i64 %87, %75
  %89 = sub i64 %88, 8687432483113240056
  %90 = add i64 %85, %75
  %91 = sub i64 0, 4033871945135726151
  %92 = sub i64 %91, %74
  %93 = add i64 %92, 4033871945135726151
  %94 = sub i64 0, %74
  %95 = sub i64 0, %93
  %96 = sub i64 0, %75
  %97 = add i64 %95, %96
  %98 = sub i64 0, %97
  %99 = add i64 %93, %75
  %100 = sub i64 %74, 2762687989780002212
  %101 = sub i64 %100, %75
  %102 = add i64 %101, 2762687989780002212
  %103 = sub i64 %74, %75
  %104 = mul i64 %102, %75
  %105 = sub i64 0, %75
  %106 = add i64 %74, %105
  %107 = sub i64 %74, %75
  %108 = mul i64 %106, %75
  %109 = sub i64 0, 5137755581264439892
  %110 = sub i64 %109, %74
  %111 = add i64 %110, 5137755581264439892
  %112 = sub i64 0, %74
  %113 = sub i64 0, %111
  %114 = sub i64 0, %75
  %115 = add i64 %113, %114
  %116 = sub i64 0, %115
  %117 = add i64 %111, %75
  %118 = sub i64 0, %75
  %119 = add i64 %74, %118
  %120 = sub i64 %74, %75
  %121 = mul i64 %119, %75
  %122 = add i64 %74, -4274861646247838444
  %123 = sub i64 %122, %75
  %124 = sub i64 %123, -4274861646247838444
  %125 = sub i64 %74, %75
  %126 = sdiv exact i64 %124, 8
  store i32 -1357910346, i32* %15
  br label %127

; <label>:127:                                    ; preds = %68, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZSt19__iterator_categoryIPKZ4mainE9DirectionENSt15iterator_traitsIT_E17iterator_categoryERKS4_(%struct.Direction** dereferenceable(8)) #4 {
  %2 = alloca %"struct.std::random_access_iterator_tag", align 1
  %3 = alloca %struct.Direction**, align 8
  store %struct.Direction** %0, %struct.Direction*** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define internal %struct.Direction* @_ZNSt16allocator_traitsISaIZ4mainE9DirectionEE8allocateERS1_m(%"class.std::allocator.29"* dereferenceable(1), i64) #0 align 2 {
  %3 = alloca %struct.Direction*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.789
  %7 = load i32, i32* @y.790
  %8 = add i32 %6, -1284402151
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1284402151
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 371979478, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %71
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 371979478, label %20
    i32 -87310687, label %28
    i32 122138199, label %62
    i32 1745205793, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %71

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -87310687, i32 1745205793
  store i32 %27, i32* %16
  br label %71

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.29"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::allocator.29"* %0, %"class.std::allocator.29"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::allocator.29"*, %"class.std::allocator.29"** %29, align 8
  %32 = bitcast %"class.std::allocator.29"* %31 to %"class.__gnu_cxx::new_allocator.30"*
  %33 = load i64, i64* %30, align 8
  %34 = call %struct.Direction* @_ZN9__gnu_cxx13new_allocatorIZ4mainE9DirectionE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.30"* %32, i64 %33, i8* null)
  store %struct.Direction* %34, %struct.Direction** %3
  %35 = load i32, i32* @x.789
  %36 = load i32, i32* @y.790
  %37 = add i32 %35, -713555326
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -713555326
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 122138199, i32 1745205793
  store i32 %61, i32* %16
  br label %71

; <label>:62:                                     ; preds = %17
  %63 = load volatile %struct.Direction*, %struct.Direction** %3
  ret %struct.Direction* %63

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::allocator.29"*, align 8
  %66 = alloca i64, align 8
  store %"class.std::allocator.29"* %0, %"class.std::allocator.29"** %65, align 8
  store i64 %1, i64* %66, align 8
  %67 = load %"class.std::allocator.29"*, %"class.std::allocator.29"** %65, align 8
  %68 = bitcast %"class.std::allocator.29"* %67 to %"class.__gnu_cxx::new_allocator.30"*
  %69 = load i64, i64* %66, align 8
  %70 = call %struct.Direction* @_ZN9__gnu_cxx13new_allocatorIZ4mainE9DirectionE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.30"* %68, i64 %69, i8* null)
  store i32 -87310687, i32* %16
  br label %71

; <label>:71:                                     ; preds = %64, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define internal %struct.Direction* @_ZN9__gnu_cxx13new_allocatorIZ4mainE9DirectionE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.30"*, i64, i8*) #0 align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.30"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.30"* %0, %"class.__gnu_cxx::new_allocator.30"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.30"*, %"class.__gnu_cxx::new_allocator.30"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIZ4mainE9DirectionE8max_sizeEv(%"class.__gnu_cxx::new_allocator.30"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -1907003568, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %71
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1907003568, label %16
    i32 47506306, label %21
    i32 -1072048812, label %37
    i32 383125464, label %64
    i32 -600263910, label %65
    i32 -1348649258, label %70
  ]

; <label>:15:                                     ; preds = %13
  br label %71

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 47506306, i32 -600263910
  store i32 %20, i32* %12
  br label %71

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.791
  %23 = load i32, i32* @y.792
  %24 = add i32 %22, -1264542843
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, -1264542843
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  %36 = select i1 %34, i32 -1072048812, i32 -1348649258
  store i32 %36, i32* %12
  br label %71

; <label>:37:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #15
  %38 = load i32, i32* @x.791
  %39 = load i32, i32* @y.792
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 383125464, i32 -1348649258
  store i32 %63, i32* %12
  br label %71

; <label>:64:                                     ; preds = %13
  unreachable

; <label>:65:                                     ; preds = %13
  %66 = load i64, i64* %7, align 8
  %67 = mul i64 %66, 8
  %68 = call i8* @_Znwm(i64 %67)
  %69 = bitcast i8* %68 to %struct.Direction*
  ret %struct.Direction* %69

; <label>:70:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #15
  store i32 -1072048812, i32* %12
  br label %71

; <label>:71:                                     ; preds = %70, %37, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @_ZNK9__gnu_cxx13new_allocatorIZ4mainE9DirectionE8max_sizeEv(%"class.__gnu_cxx::new_allocator.30"*) #4 align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.30"*, align 8
  store %"class.__gnu_cxx::new_allocator.30"* %0, %"class.__gnu_cxx::new_allocator.30"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.30"*, %"class.__gnu_cxx::new_allocator.30"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline uwtable
define internal %struct.Direction* @_ZSt18uninitialized_copyIPKZ4mainE9DirectionPS0_ET0_T_S5_S4_(%struct.Direction*, %struct.Direction*, %struct.Direction*) #0 {
  %4 = alloca %struct.Direction*, align 8
  %5 = alloca %struct.Direction*, align 8
  %6 = alloca %struct.Direction*, align 8
  %7 = alloca i8, align 1
  store %struct.Direction* %0, %struct.Direction** %4, align 8
  store %struct.Direction* %1, %struct.Direction** %5, align 8
  store %struct.Direction* %2, %struct.Direction** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %struct.Direction*, %struct.Direction** %4, align 8
  %9 = load %struct.Direction*, %struct.Direction** %5, align 8
  %10 = load %struct.Direction*, %struct.Direction** %6, align 8
  %11 = call %struct.Direction* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKZ4mainE9DirectionPS2_EET0_T_S7_S6_(%struct.Direction* %8, %struct.Direction* %9, %struct.Direction* %10)
  ret %struct.Direction* %11
}

; Function Attrs: noinline uwtable
define internal %struct.Direction* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKZ4mainE9DirectionPS2_EET0_T_S7_S6_(%struct.Direction*, %struct.Direction*, %struct.Direction*) #0 align 2 {
  %4 = alloca %struct.Direction*, align 8
  %5 = alloca %struct.Direction*, align 8
  %6 = alloca %struct.Direction*, align 8
  store %struct.Direction* %0, %struct.Direction** %4, align 8
  store %struct.Direction* %1, %struct.Direction** %5, align 8
  store %struct.Direction* %2, %struct.Direction** %6, align 8
  %7 = load %struct.Direction*, %struct.Direction** %4, align 8
  %8 = load %struct.Direction*, %struct.Direction** %5, align 8
  %9 = load %struct.Direction*, %struct.Direction** %6, align 8
  %10 = call %struct.Direction* @_ZSt4copyIPKZ4mainE9DirectionPS0_ET0_T_S5_S4_(%struct.Direction* %7, %struct.Direction* %8, %struct.Direction* %9)
  ret %struct.Direction* %10
}

; Function Attrs: noinline uwtable
define internal %struct.Direction* @_ZSt4copyIPKZ4mainE9DirectionPS0_ET0_T_S5_S4_(%struct.Direction*, %struct.Direction*, %struct.Direction*) #0 {
  %4 = alloca %struct.Direction*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.799
  %8 = load i32, i32* @y.800
  %9 = sub i32 %7, -2031351930
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -2031351930
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 2080475991, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %66
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 2080475991, label %21
    i32 1475057273, label %29
    i32 -1285315555, label %54
    i32 -299373665, label %56
  ]

; <label>:20:                                     ; preds = %18
  br label %66

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 1475057273, i32 -299373665
  store i32 %28, i32* %17
  br label %66

; <label>:29:                                     ; preds = %18
  %30 = alloca %struct.Direction*, align 8
  %31 = alloca %struct.Direction*, align 8
  %32 = alloca %struct.Direction*, align 8
  store %struct.Direction* %0, %struct.Direction** %30, align 8
  store %struct.Direction* %1, %struct.Direction** %31, align 8
  store %struct.Direction* %2, %struct.Direction** %32, align 8
  %33 = load %struct.Direction*, %struct.Direction** %30, align 8
  %34 = call %struct.Direction* @_ZSt12__miter_baseIPKZ4mainE9DirectionENSt11_Miter_baseIT_E13iterator_typeES4_(%struct.Direction* %33)
  %35 = load %struct.Direction*, %struct.Direction** %31, align 8
  %36 = call %struct.Direction* @_ZSt12__miter_baseIPKZ4mainE9DirectionENSt11_Miter_baseIT_E13iterator_typeES4_(%struct.Direction* %35)
  %37 = load %struct.Direction*, %struct.Direction** %32, align 8
  %38 = call %struct.Direction* @_ZSt14__copy_move_a2ILb0EPKZ4mainE9DirectionPS0_ET1_T0_S5_S4_(%struct.Direction* %34, %struct.Direction* %36, %struct.Direction* %37)
  store %struct.Direction* %38, %struct.Direction** %4
  %39 = load i32, i32* @x.799
  %40 = load i32, i32* @y.800
  %41 = sub i32 %39, 197303793
  %42 = sub i32 %41, 1
  %43 = add i32 %42, 197303793
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -1285315555, i32 -299373665
  store i32 %53, i32* %17
  br label %66

; <label>:54:                                     ; preds = %18
  %55 = load volatile %struct.Direction*, %struct.Direction** %4
  ret %struct.Direction* %55

; <label>:56:                                     ; preds = %18
  %57 = alloca %struct.Direction*, align 8
  %58 = alloca %struct.Direction*, align 8
  %59 = alloca %struct.Direction*, align 8
  store %struct.Direction* %0, %struct.Direction** %57, align 8
  store %struct.Direction* %1, %struct.Direction** %58, align 8
  store %struct.Direction* %2, %struct.Direction** %59, align 8
  %60 = load %struct.Direction*, %struct.Direction** %57, align 8
  %61 = call %struct.Direction* @_ZSt12__miter_baseIPKZ4mainE9DirectionENSt11_Miter_baseIT_E13iterator_typeES4_(%struct.Direction* %60)
  %62 = load %struct.Direction*, %struct.Direction** %58, align 8
  %63 = call %struct.Direction* @_ZSt12__miter_baseIPKZ4mainE9DirectionENSt11_Miter_baseIT_E13iterator_typeES4_(%struct.Direction* %62)
  %64 = load %struct.Direction*, %struct.Direction** %59, align 8
  %65 = call %struct.Direction* @_ZSt14__copy_move_a2ILb0EPKZ4mainE9DirectionPS0_ET1_T0_S5_S4_(%struct.Direction* %61, %struct.Direction* %63, %struct.Direction* %64)
  store i32 1475057273, i32* %17
  br label %66

; <label>:66:                                     ; preds = %56, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define internal %struct.Direction* @_ZSt14__copy_move_a2ILb0EPKZ4mainE9DirectionPS0_ET1_T0_S5_S4_(%struct.Direction*, %struct.Direction*, %struct.Direction*) #0 {
  %4 = alloca %struct.Direction*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.801
  %8 = load i32, i32* @y.802
  %9 = sub i32 %7, -1874253510
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -1874253510
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1120997137, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %91
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1120997137, label %21
    i32 -51221570, label %41
    i32 -175444000, label %78
    i32 184153382, label %80
  ]

; <label>:20:                                     ; preds = %18
  br label %91

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -51221570, i32 184153382
  store i32 %40, i32* %17
  br label %91

; <label>:41:                                     ; preds = %18
  %42 = alloca %struct.Direction*, align 8
  %43 = alloca %struct.Direction*, align 8
  %44 = alloca %struct.Direction*, align 8
  store %struct.Direction* %0, %struct.Direction** %42, align 8
  store %struct.Direction* %1, %struct.Direction** %43, align 8
  store %struct.Direction* %2, %struct.Direction** %44, align 8
  %45 = load %struct.Direction*, %struct.Direction** %42, align 8
  %46 = call %struct.Direction* @_ZSt12__niter_baseIPKZ4mainE9DirectionENSt11_Niter_baseIT_E13iterator_typeES4_(%struct.Direction* %45)
  %47 = load %struct.Direction*, %struct.Direction** %43, align 8
  %48 = call %struct.Direction* @_ZSt12__niter_baseIPKZ4mainE9DirectionENSt11_Niter_baseIT_E13iterator_typeES4_(%struct.Direction* %47)
  %49 = load %struct.Direction*, %struct.Direction** %44, align 8
  %50 = call %struct.Direction* @_ZSt12__niter_baseIPZ4mainE9DirectionENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.Direction* %49)
  %51 = call %struct.Direction* @_ZSt13__copy_move_aILb0EPKZ4mainE9DirectionPS0_ET1_T0_S5_S4_(%struct.Direction* %46, %struct.Direction* %48, %struct.Direction* %50)
  store %struct.Direction* %51, %struct.Direction** %4
  %52 = load i32, i32* @x.801
  %53 = load i32, i32* @y.802
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 -175444000, i32 184153382
  store i32 %77, i32* %17
  br label %91

; <label>:78:                                     ; preds = %18
  %79 = load volatile %struct.Direction*, %struct.Direction** %4
  ret %struct.Direction* %79

; <label>:80:                                     ; preds = %18
  %81 = alloca %struct.Direction*, align 8
  %82 = alloca %struct.Direction*, align 8
  %83 = alloca %struct.Direction*, align 8
  store %struct.Direction* %0, %struct.Direction** %81, align 8
  store %struct.Direction* %1, %struct.Direction** %82, align 8
  store %struct.Direction* %2, %struct.Direction** %83, align 8
  %84 = load %struct.Direction*, %struct.Direction** %81, align 8
  %85 = call %struct.Direction* @_ZSt12__niter_baseIPKZ4mainE9DirectionENSt11_Niter_baseIT_E13iterator_typeES4_(%struct.Direction* %84)
  %86 = load %struct.Direction*, %struct.Direction** %82, align 8
  %87 = call %struct.Direction* @_ZSt12__niter_baseIPKZ4mainE9DirectionENSt11_Niter_baseIT_E13iterator_typeES4_(%struct.Direction* %86)
  %88 = load %struct.Direction*, %struct.Direction** %83, align 8
  %89 = call %struct.Direction* @_ZSt12__niter_baseIPZ4mainE9DirectionENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.Direction* %88)
  %90 = call %struct.Direction* @_ZSt13__copy_move_aILb0EPKZ4mainE9DirectionPS0_ET1_T0_S5_S4_(%struct.Direction* %85, %struct.Direction* %87, %struct.Direction* %89)
  store i32 -51221570, i32* %17
  br label %91

; <label>:91:                                     ; preds = %80, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.Direction* @_ZSt12__miter_baseIPKZ4mainE9DirectionENSt11_Miter_baseIT_E13iterator_typeES4_(%struct.Direction*) #4 {
  %2 = alloca %struct.Direction*, align 8
  store %struct.Direction* %0, %struct.Direction** %2, align 8
  %3 = load %struct.Direction*, %struct.Direction** %2, align 8
  %4 = call %struct.Direction* @_ZNSt10_Iter_baseIPKZ4mainE9DirectionLb0EE7_S_baseES2_(%struct.Direction* %3)
  ret %struct.Direction* %4
}

; Function Attrs: noinline uwtable
define internal %struct.Direction* @_ZSt13__copy_move_aILb0EPKZ4mainE9DirectionPS0_ET1_T0_S5_S4_(%struct.Direction*, %struct.Direction*, %struct.Direction*) #0 {
  %4 = alloca %struct.Direction*, align 8
  %5 = alloca %struct.Direction*, align 8
  %6 = alloca %struct.Direction*, align 8
  %7 = alloca i8, align 1
  store %struct.Direction* %0, %struct.Direction** %4, align 8
  store %struct.Direction* %1, %struct.Direction** %5, align 8
  store %struct.Direction* %2, %struct.Direction** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %struct.Direction*, %struct.Direction** %4, align 8
  %9 = load %struct.Direction*, %struct.Direction** %5, align 8
  %10 = load %struct.Direction*, %struct.Direction** %6, align 8
  %11 = call %struct.Direction* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIZ4mainE9DirectionEEPT_PKS4_S7_S5_(%struct.Direction* %8, %struct.Direction* %9, %struct.Direction* %10)
  ret %struct.Direction* %11
}

; Function Attrs: noinline uwtable
define internal %struct.Direction* @_ZSt12__niter_baseIPKZ4mainE9DirectionENSt11_Niter_baseIT_E13iterator_typeES4_(%struct.Direction*) #0 {
  %2 = alloca %struct.Direction*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.807
  %6 = load i32, i32* @y.808
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1860256565, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1860256565, label %18
    i32 420880822, label %26
    i32 -791498941, label %56
    i32 -2107498553, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 420880822, i32 -2107498553
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %struct.Direction*, align 8
  store %struct.Direction* %0, %struct.Direction** %27, align 8
  %28 = load %struct.Direction*, %struct.Direction** %27, align 8
  %29 = call %struct.Direction* @_ZNSt10_Iter_baseIPKZ4mainE9DirectionLb0EE7_S_baseES2_(%struct.Direction* %28)
  store %struct.Direction* %29, %struct.Direction** %2
  %30 = load i32, i32* @x.807
  %31 = load i32, i32* @y.808
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -791498941, i32 -2107498553
  store i32 %55, i32* %14
  br label %62

; <label>:56:                                     ; preds = %15
  %57 = load volatile %struct.Direction*, %struct.Direction** %2
  ret %struct.Direction* %57

; <label>:58:                                     ; preds = %15
  %59 = alloca %struct.Direction*, align 8
  store %struct.Direction* %0, %struct.Direction** %59, align 8
  %60 = load %struct.Direction*, %struct.Direction** %59, align 8
  %61 = call %struct.Direction* @_ZNSt10_Iter_baseIPKZ4mainE9DirectionLb0EE7_S_baseES2_(%struct.Direction* %60)
  store i32 420880822, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define internal %struct.Direction* @_ZSt12__niter_baseIPZ4mainE9DirectionENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.Direction*) #0 {
  %2 = alloca %struct.Direction*, align 8
  store %struct.Direction* %0, %struct.Direction** %2, align 8
  %3 = load %struct.Direction*, %struct.Direction** %2, align 8
  %4 = call %struct.Direction* @_ZNSt10_Iter_baseIPZ4mainE9DirectionLb0EE7_S_baseES1_(%struct.Direction* %3)
  ret %struct.Direction* %4
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.Direction* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIZ4mainE9DirectionEEPT_PKS4_S7_S5_(%struct.Direction*, %struct.Direction*, %struct.Direction*) #4 align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca %struct.Direction**
  %7 = alloca %struct.Direction**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.811
  %11 = load i32, i32* @y.812
  %12 = add i32 %10, 1025996180
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, 1025996180
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -2031778537, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %138
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -2031778537, label %24
    i32 -826389222, label %44
    i32 1200283088, label %79
    i32 -906987087, label %82
    i32 -1232404692, label %92
    i32 1616436081, label %98
  ]

; <label>:23:                                     ; preds = %21
  br label %138

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 true, true
  %30 = and i1 %27, true
  %31 = and i1 %25, %29
  %32 = and i1 %28, true
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 true, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 -826389222, i32 1616436081
  store i32 %43, i32* %20
  br label %138

; <label>:44:                                     ; preds = %21
  %45 = alloca %struct.Direction*, align 8
  store %struct.Direction** %45, %struct.Direction*** %7
  %46 = alloca %struct.Direction*, align 8
  %47 = alloca %struct.Direction*, align 8
  store %struct.Direction** %47, %struct.Direction*** %6
  %48 = alloca i64, align 8
  store i64* %48, i64** %5
  %49 = load volatile %struct.Direction**, %struct.Direction*** %7
  store %struct.Direction* %0, %struct.Direction** %49, align 8
  store %struct.Direction* %1, %struct.Direction** %46, align 8
  %50 = load volatile %struct.Direction**, %struct.Direction*** %6
  store %struct.Direction* %2, %struct.Direction** %50, align 8
  %51 = load %struct.Direction*, %struct.Direction** %46, align 8
  %52 = load volatile %struct.Direction**, %struct.Direction*** %7
  %53 = load %struct.Direction*, %struct.Direction** %52, align 8
  %54 = ptrtoint %struct.Direction* %51 to i64
  %55 = ptrtoint %struct.Direction* %53 to i64
  %56 = sub i64 %54, 2410649265719525523
  %57 = sub i64 %56, %55
  %58 = add i64 %57, 2410649265719525523
  %59 = sub i64 %54, %55
  %60 = sdiv exact i64 %58, 8
  %61 = load volatile i64*, i64** %5
  store i64 %60, i64* %61, align 8
  %62 = load volatile i64*, i64** %5
  %63 = load i64, i64* %62, align 8
  %64 = icmp ne i64 %63, 0
  store i1 %64, i1* %4
  %65 = load i32, i32* @x.811
  %66 = load i32, i32* @y.812
  %67 = sub i32 0, 1
  %68 = add i32 %65, %67
  %69 = sub i32 %65, 1
  %70 = mul i32 %65, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %66, 10
  %74 = and i1 %72, %73
  %75 = xor i1 %72, %73
  %76 = or i1 %74, %75
  %77 = or i1 %72, %73
  %78 = select i1 %76, i32 1200283088, i32 1616436081
  store i32 %78, i32* %20
  br label %138

; <label>:79:                                     ; preds = %21
  %80 = load volatile i1, i1* %4
  %81 = select i1 %80, i32 -906987087, i32 -1232404692
  store i32 %81, i32* %20
  br label %138

; <label>:82:                                     ; preds = %21
  %83 = load volatile %struct.Direction**, %struct.Direction*** %6
  %84 = load %struct.Direction*, %struct.Direction** %83, align 8
  %85 = bitcast %struct.Direction* %84 to i8*
  %86 = load volatile %struct.Direction**, %struct.Direction*** %7
  %87 = load %struct.Direction*, %struct.Direction** %86, align 8
  %88 = bitcast %struct.Direction* %87 to i8*
  %89 = load volatile i64*, i64** %5
  %90 = load i64, i64* %89, align 8
  %91 = mul i64 8, %90
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %85, i8* %88, i64 %91, i32 4, i1 false)
  store i32 -1232404692, i32* %20
  br label %138

; <label>:92:                                     ; preds = %21
  %93 = load volatile %struct.Direction**, %struct.Direction*** %6
  %94 = load %struct.Direction*, %struct.Direction** %93, align 8
  %95 = load volatile i64*, i64** %5
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %struct.Direction, %struct.Direction* %94, i64 %96
  ret %struct.Direction* %97

; <label>:98:                                     ; preds = %21
  %99 = alloca %struct.Direction*, align 8
  %100 = alloca %struct.Direction*, align 8
  %101 = alloca %struct.Direction*, align 8
  %102 = alloca i64, align 8
  store %struct.Direction* %0, %struct.Direction** %99, align 8
  store %struct.Direction* %1, %struct.Direction** %100, align 8
  store %struct.Direction* %2, %struct.Direction** %101, align 8
  %103 = load %struct.Direction*, %struct.Direction** %100, align 8
  %104 = load %struct.Direction*, %struct.Direction** %99, align 8
  %105 = ptrtoint %struct.Direction* %103 to i64
  %106 = ptrtoint %struct.Direction* %104 to i64
  %107 = shl i64 %105, %106
  %108 = add i64 %105, 2252678737069102365
  %109 = sub i64 %108, %106
  %110 = sub i64 %109, 2252678737069102365
  %111 = sub i64 %105, %106
  %112 = mul i64 %110, %106
  %113 = add i64 0, 9046002937944600879
  %114 = sub i64 %113, %105
  %115 = sub i64 %114, 9046002937944600879
  %116 = sub i64 0, %105
  %117 = sub i64 0, %115
  %118 = sub i64 0, %106
  %119 = add i64 %117, %118
  %120 = sub i64 0, %119
  %121 = add i64 %115, %106
  %122 = add i64 %105, 5176532423956564540
  %123 = sub i64 %122, %106
  %124 = sub i64 %123, 5176532423956564540
  %125 = sub i64 %105, %106
  %126 = add i64 0, -4451565524628951777
  %127 = sub i64 %126, %124
  %128 = sub i64 %127, -4451565524628951777
  %129 = sub i64 0, %124
  %130 = sub i64 0, 8
  %131 = sub i64 %128, %130
  %132 = add i64 %128, 8
  %133 = shl i64 %124, 8
  %134 = shl i64 %124, 8
  %135 = sdiv exact i64 %124, 8
  store i64 %135, i64* %102, align 8
  %136 = load i64, i64* %102, align 8
  %137 = icmp ne i64 %136, 0
  store i32 -826389222, i32* %20
  br label %138

; <label>:138:                                    ; preds = %98, %82, %79, %44, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.Direction* @_ZNSt10_Iter_baseIPKZ4mainE9DirectionLb0EE7_S_baseES2_(%struct.Direction*) #4 align 2 {
  %2 = alloca %struct.Direction*, align 8
  store %struct.Direction* %0, %struct.Direction** %2, align 8
  %3 = load %struct.Direction*, %struct.Direction** %2, align 8
  ret %struct.Direction* %3
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.Direction* @_ZNSt10_Iter_baseIPZ4mainE9DirectionLb0EE7_S_baseES1_(%struct.Direction*) #4 align 2 {
  %2 = alloca %struct.Direction*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.815
  %6 = load i32, i32* @y.816
  %7 = add i32 %5, -896275006
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -896275006
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 281006725, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 281006725, label %19
    i32 430437081, label %39
    i32 346721178, label %56
    i32 1505595206, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 430437081, i32 1505595206
  store i32 %38, i32* %15
  br label %61

; <label>:39:                                     ; preds = %16
  %40 = alloca %struct.Direction*, align 8
  store %struct.Direction* %0, %struct.Direction** %40, align 8
  %41 = load %struct.Direction*, %struct.Direction** %40, align 8
  store %struct.Direction* %41, %struct.Direction** %2
  %42 = load i32, i32* @x.815
  %43 = load i32, i32* @y.816
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 346721178, i32 1505595206
  store i32 %55, i32* %15
  br label %61

; <label>:56:                                     ; preds = %16
  %57 = load volatile %struct.Direction*, %struct.Direction** %2
  ret %struct.Direction* %57

; <label>:58:                                     ; preds = %16
  %59 = alloca %struct.Direction*, align 8
  store %struct.Direction* %0, %struct.Direction** %59, align 8
  %60 = load %struct.Direction*, %struct.Direction** %59, align 8
  store i32 430437081, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @_ZNKSt16initializer_listIZ4mainE9DirectionE4sizeEv(%"class.std::initializer_list"*) #4 align 2 {
  %2 = alloca %"class.std::initializer_list"*, align 8
  store %"class.std::initializer_list"* %0, %"class.std::initializer_list"** %2, align 8
  %3 = load %"class.std::initializer_list"*, %"class.std::initializer_list"** %2, align 8
  %4 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %3, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; Function Attrs: noinline uwtable
define internal void @_ZNSt12_Vector_baseIZ4mainE9DirectionSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base.28"*, %struct.Direction*, i64) #0 align 2 {
  %4 = alloca %struct.Direction*
  %5 = alloca %"struct.std::_Vector_base.28"*
  %6 = alloca %"struct.std::_Vector_base.28"*, align 8
  %7 = alloca %struct.Direction*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.28"* %0, %"struct.std::_Vector_base.28"** %6, align 8
  store %struct.Direction* %1, %struct.Direction** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.28"*, %"struct.std::_Vector_base.28"** %6, align 8
  store %"struct.std::_Vector_base.28"* %9, %"struct.std::_Vector_base.28"** %5
  %10 = load %struct.Direction*, %struct.Direction** %7, align 8
  store %struct.Direction* %10, %struct.Direction** %4
  %11 = alloca i32
  store i32 1205732176, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %71
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1205732176, label %15
    i32 1341262567, label %19
    i32 -985978351, label %25
    i32 1334253202, label %41
    i32 1597782134, label %69
    i32 -1689819980, label %70
  ]

; <label>:14:                                     ; preds = %12
  br label %71

; <label>:15:                                     ; preds = %12
  %16 = load volatile %struct.Direction*, %struct.Direction** %4
  %17 = icmp ne %struct.Direction* %16, null
  %18 = select i1 %17, i32 1341262567, i32 -985978351
  store i32 %18, i32* %11
  br label %71

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.28"*, %"struct.std::_Vector_base.28"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.28", %"struct.std::_Vector_base.28"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"* %21 to %"class.std::allocator.29"*
  %23 = load %struct.Direction*, %struct.Direction** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIZ4mainE9DirectionEE10deallocateERS1_PS0_m(%"class.std::allocator.29"* dereferenceable(1) %22, %struct.Direction* %23, i64 %24)
  store i32 -985978351, i32* %11
  br label %71

; <label>:25:                                     ; preds = %12
  %26 = load i32, i32* @x.819
  %27 = load i32, i32* @y.820
  %28 = add i32 %26, -162692567
  %29 = sub i32 %28, 1
  %30 = sub i32 %29, -162692567
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  %40 = select i1 %38, i32 1334253202, i32 -1689819980
  store i32 %40, i32* %11
  br label %71

; <label>:41:                                     ; preds = %12
  %42 = load i32, i32* @x.819
  %43 = load i32, i32* @y.820
  %44 = sub i32 %42, 698797188
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 698797188
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 1597782134, i32 -1689819980
  store i32 %68, i32* %11
  br label %71

; <label>:69:                                     ; preds = %12
  ret void

; <label>:70:                                     ; preds = %12
  store i32 1334253202, i32* %11
  br label %71

; <label>:71:                                     ; preds = %70, %41, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSt12_Vector_baseIZ4mainE9DirectionSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"*) unnamed_addr #4 align 2 {
  %2 = alloca %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"*, %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Direction, std::allocator<Direction> >::_Vector_impl"* %3 to %"class.std::allocator.29"*
  call void @_ZNSaIZ4mainE9DirectionED2Ev(%"class.std::allocator.29"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define internal void @_ZNSt16allocator_traitsISaIZ4mainE9DirectionEE10deallocateERS1_PS0_m(%"class.std::allocator.29"* dereferenceable(1), %struct.Direction*, i64) #0 align 2 {
  %4 = alloca %"class.std::allocator.29"*, align 8
  %5 = alloca %struct.Direction*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.29"* %0, %"class.std::allocator.29"** %4, align 8
  store %struct.Direction* %1, %struct.Direction** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.29"*, %"class.std::allocator.29"** %4, align 8
  %8 = bitcast %"class.std::allocator.29"* %7 to %"class.__gnu_cxx::new_allocator.30"*
  %9 = load %struct.Direction*, %struct.Direction** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIZ4mainE9DirectionE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.30"* %8, %struct.Direction* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZN9__gnu_cxx13new_allocatorIZ4mainE9DirectionE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.30"*, %struct.Direction*, i64) #4 align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.30"*, align 8
  %5 = alloca %struct.Direction*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.30"* %0, %"class.__gnu_cxx::new_allocator.30"** %4, align 8
  store %struct.Direction* %1, %struct.Direction** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.30"*, %"class.__gnu_cxx::new_allocator.30"** %4, align 8
  %8 = load %struct.Direction*, %struct.Direction** %5, align 8
  %9 = bitcast %struct.Direction* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define internal void @_ZSt8_DestroyIPZ4mainE9DirectionS0_EvT_S2_RSaIT0_E(%struct.Direction*, %struct.Direction*, %"class.std::allocator.29"* dereferenceable(1)) #0 {
  %4 = alloca %struct.Direction*, align 8
  %5 = alloca %struct.Direction*, align 8
  %6 = alloca %"class.std::allocator.29"*, align 8
  store %struct.Direction* %0, %struct.Direction** %4, align 8
  store %struct.Direction* %1, %struct.Direction** %5, align 8
  store %"class.std::allocator.29"* %2, %"class.std::allocator.29"** %6, align 8
  %7 = load %struct.Direction*, %struct.Direction** %4, align 8
  %8 = load %struct.Direction*, %struct.Direction** %5, align 8
  call void @_ZSt8_DestroyIPZ4mainE9DirectionEvT_S2_(%struct.Direction* %7, %struct.Direction* %8)
  ret void
}

; Function Attrs: noinline uwtable
define internal void @_ZSt8_DestroyIPZ4mainE9DirectionEvT_S2_(%struct.Direction*, %struct.Direction*) #0 {
  %3 = alloca %struct.Direction*, align 8
  %4 = alloca %struct.Direction*, align 8
  store %struct.Direction* %0, %struct.Direction** %3, align 8
  store %struct.Direction* %1, %struct.Direction** %4, align 8
  %5 = load %struct.Direction*, %struct.Direction** %3, align 8
  %6 = load %struct.Direction*, %struct.Direction** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPZ4mainE9DirectionEEvT_S4_(%struct.Direction* %5, %struct.Direction* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSt12_Destroy_auxILb1EE9__destroyIPZ4mainE9DirectionEEvT_S4_(%struct.Direction*, %struct.Direction*) #4 align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.831
  %6 = load i32, i32* @y.832
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 268207698, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 268207698, label %18
    i32 -672134776, label %26
    i32 1574380514, label %56
    i32 1870468223, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -672134776, i32 1870468223
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca %struct.Direction*, align 8
  %28 = alloca %struct.Direction*, align 8
  store %struct.Direction* %0, %struct.Direction** %27, align 8
  store %struct.Direction* %1, %struct.Direction** %28, align 8
  %29 = load i32, i32* @x.831
  %30 = load i32, i32* @y.832
  %31 = add i32 %29, -320574919
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, -320574919
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 1574380514, i32 1870468223
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %struct.Direction*, align 8
  %59 = alloca %struct.Direction*, align 8
  store %struct.Direction* %0, %struct.Direction** %58, align 8
  store %struct.Direction* %1, %struct.Direction** %59, align 8
  store i32 -672134776, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @_ZNKSt5dequeIZ4mainE5PointSaIS0_EE5emptyEv(%"class.std::deque.20"*) #4 align 2 {
  %2 = alloca %"class.std::deque.20"*, align 8
  store %"class.std::deque.20"* %0, %"class.std::deque.20"** %2, align 8
  %3 = load %"class.std::deque.20"*, %"class.std::deque.20"** %2, align 8
  %4 = bitcast %"class.std::deque.20"* %3 to %"class.std::_Deque_base.21"*
  %5 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %5, i32 0, i32 3
  %7 = bitcast %"class.std::deque.20"* %3 to %"class.std::_Deque_base.21"*
  %8 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %8, i32 0, i32 2
  %10 = call zeroext i1 @_ZSteqIZ4mainE5PointRS0_PS0_EbRKSt15_Deque_iteratorIT_T0_T1_ES9_(%"struct.std::_Deque_iterator.25"* dereferenceable(32) %6, %"struct.std::_Deque_iterator.25"* dereferenceable(32) %9) #3
  ret i1 %10
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @_ZSteqIZ4mainE5PointRS0_PS0_EbRKSt15_Deque_iteratorIT_T0_T1_ES9_(%"struct.std::_Deque_iterator.25"* dereferenceable(32), %"struct.std::_Deque_iterator.25"* dereferenceable(32)) #4 {
  %3 = alloca %"struct.std::_Deque_iterator.25"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator.25"*, align 8
  store %"struct.std::_Deque_iterator.25"* %0, %"struct.std::_Deque_iterator.25"** %3, align 8
  store %"struct.std::_Deque_iterator.25"* %1, %"struct.std::_Deque_iterator.25"** %4, align 8
  %5 = load %"struct.std::_Deque_iterator.25"*, %"struct.std::_Deque_iterator.25"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %5, i32 0, i32 0
  %7 = load %struct.Point*, %struct.Point** %6, align 8
  %8 = load %"struct.std::_Deque_iterator.25"*, %"struct.std::_Deque_iterator.25"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %8, i32 0, i32 0
  %10 = load %struct.Point*, %struct.Point** %9, align 8
  %11 = icmp eq %struct.Point* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(24) %struct.Point* @_ZNSt5dequeIZ4mainE5PointSaIS0_EE5frontEv(%"class.std::deque.20"*) #4 align 2 {
  %2 = alloca %"class.std::deque.20"*, align 8
  %3 = alloca %"struct.std::_Deque_iterator.25", align 8
  store %"class.std::deque.20"* %0, %"class.std::deque.20"** %2, align 8
  %4 = load %"class.std::deque.20"*, %"class.std::deque.20"** %2, align 8
  call void @_ZNSt5dequeIZ4mainE5PointSaIS0_EE5beginEv(%"struct.std::_Deque_iterator.25"* sret %3, %"class.std::deque.20"* %4) #3
  %5 = call dereferenceable(24) %struct.Point* @_ZNKSt15_Deque_iteratorIZ4mainE5PointRS0_PS0_EdeEv(%"struct.std::_Deque_iterator.25"* %3) #3
  ret %struct.Point* %5
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(24) %struct.Point* @_ZNKSt15_Deque_iteratorIZ4mainE5PointRS0_PS0_EdeEv(%"struct.std::_Deque_iterator.25"*) #4 align 2 {
  %2 = alloca %struct.Point*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.839
  %6 = load i32, i32* @y.840
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1775059055, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1775059055, label %18
    i32 -2143713899, label %26
    i32 -1217909914, label %58
    i32 -43085181, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -2143713899, i32 -43085181
  store i32 %25, i32* %14
  br label %65

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Deque_iterator.25"*, align 8
  store %"struct.std::_Deque_iterator.25"* %0, %"struct.std::_Deque_iterator.25"** %27, align 8
  %28 = load %"struct.std::_Deque_iterator.25"*, %"struct.std::_Deque_iterator.25"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %28, i32 0, i32 0
  %30 = load %struct.Point*, %struct.Point** %29, align 8
  store %struct.Point* %30, %struct.Point** %2
  %31 = load i32, i32* @x.839
  %32 = load i32, i32* @y.840
  %33 = add i32 %31, 356891265
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 356891265
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -1217909914, i32 -43085181
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile %struct.Point*, %struct.Point** %2
  ret %struct.Point* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"struct.std::_Deque_iterator.25"*, align 8
  store %"struct.std::_Deque_iterator.25"* %0, %"struct.std::_Deque_iterator.25"** %61, align 8
  %62 = load %"struct.std::_Deque_iterator.25"*, %"struct.std::_Deque_iterator.25"** %61, align 8
  %63 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %62, i32 0, i32 0
  %64 = load %struct.Point*, %struct.Point** %63, align 8
  store i32 -2143713899, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZNSt5dequeIZ4mainE5PointSaIS0_EE9pop_frontEv(%"class.std::deque.20"*) #4 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.841
  %3 = load i32, i32* @y.842
  %4 = add i32 %2, -1474229189
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -1474229189
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %79

; <label>:28:                                     ; preds = %1, %79
  %29 = alloca %"class.std::deque.20"*, align 8
  store %"class.std::deque.20"* %0, %"class.std::deque.20"** %29, align 8
  %30 = load %"class.std::deque.20"*, %"class.std::deque.20"** %29, align 8
  %31 = bitcast %"class.std::deque.20"* %30 to %"class.std::_Deque_base.21"*
  %32 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %32, i32 0, i32 2
  %34 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %33, i32 0, i32 0
  %35 = load %struct.Point*, %struct.Point** %34, align 8
  %36 = bitcast %"class.std::deque.20"* %30 to %"class.std::_Deque_base.21"*
  %37 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %37, i32 0, i32 2
  %39 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %38, i32 0, i32 2
  %40 = load %struct.Point*, %struct.Point** %39, align 8
  %41 = getelementptr inbounds %struct.Point, %struct.Point* %40, i64 -1
  %42 = icmp ne %struct.Point* %35, %41
  %43 = load i32, i32* @x.841
  %44 = load i32, i32* @y.842
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  br i1 %54, label %56, label %79

; <label>:56:                                     ; preds = %28
  br i1 %42, label %57, label %73

; <label>:57:                                     ; preds = %56
  %58 = bitcast %"class.std::deque.20"* %30 to %"class.std::_Deque_base.21"*
  %59 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %58, i32 0, i32 0
  %60 = bitcast %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %59 to %"class.std::allocator.22"*
  %61 = bitcast %"class.std::deque.20"* %30 to %"class.std::_Deque_base.21"*
  %62 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %61, i32 0, i32 0
  %63 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %62, i32 0, i32 2
  %64 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %63, i32 0, i32 0
  %65 = load %struct.Point*, %struct.Point** %64, align 8
  invoke void @_ZNSt16allocator_traitsISaIZ4mainE5PointEE7destroyIS0_EEvRS1_PT_(%"class.std::allocator.22"* dereferenceable(1) %60, %struct.Point* %65)
          to label %66 unwind label %76

; <label>:66:                                     ; preds = %57
  %67 = bitcast %"class.std::deque.20"* %30 to %"class.std::_Deque_base.21"*
  %68 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %67, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %68, i32 0, i32 2
  %70 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %69, i32 0, i32 0
  %71 = load %struct.Point*, %struct.Point** %70, align 8
  %72 = getelementptr inbounds %struct.Point, %struct.Point* %71, i32 1
  store %struct.Point* %72, %struct.Point** %70, align 8
  br label %75

; <label>:73:                                     ; preds = %56
  invoke void @_ZNSt5dequeIZ4mainE5PointSaIS0_EE16_M_pop_front_auxEv(%"class.std::deque.20"* %30)
          to label %74 unwind label %76

; <label>:74:                                     ; preds = %73
  br label %75

; <label>:75:                                     ; preds = %74, %66
  ret void

; <label>:76:                                     ; preds = %73, %57
  %77 = landingpad { i8*, i32 }
          catch i8* null
  %78 = extractvalue { i8*, i32 } %77, 0
  call void @__clang_call_terminate(i8* %78) #13
  unreachable

; <label>:79:                                     ; preds = %28, %1
  %80 = alloca %"class.std::deque.20"*, align 8
  store %"class.std::deque.20"* %0, %"class.std::deque.20"** %80, align 8
  %81 = load %"class.std::deque.20"*, %"class.std::deque.20"** %80, align 8
  %82 = bitcast %"class.std::deque.20"* %81 to %"class.std::_Deque_base.21"*
  %83 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %82, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %83, i32 0, i32 2
  %85 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %84, i32 0, i32 0
  %86 = load %struct.Point*, %struct.Point** %85, align 8
  %87 = bitcast %"class.std::deque.20"* %81 to %"class.std::_Deque_base.21"*
  %88 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %87, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %88, i32 0, i32 2
  %90 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %89, i32 0, i32 2
  %91 = load %struct.Point*, %struct.Point** %90, align 8
  %92 = getelementptr inbounds %struct.Point, %struct.Point* %91, i64 -1
  %93 = icmp ne %struct.Point* %86, %92
  br label %28
}

; Function Attrs: noinline uwtable
define internal void @_ZNSt16allocator_traitsISaIZ4mainE5PointEE7destroyIS0_EEvRS1_PT_(%"class.std::allocator.22"* dereferenceable(1), %struct.Point*) #0 align 2 {
  %3 = alloca %"class.std::allocator.22"*, align 8
  %4 = alloca %struct.Point*, align 8
  store %"class.std::allocator.22"* %0, %"class.std::allocator.22"** %3, align 8
  store %struct.Point* %1, %struct.Point** %4, align 8
  %5 = load %"class.std::allocator.22"*, %"class.std::allocator.22"** %3, align 8
  %6 = bitcast %"class.std::allocator.22"* %5 to %"class.__gnu_cxx::new_allocator.23"*
  %7 = load %struct.Point*, %struct.Point** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIZ4mainE5PointE7destroyIS1_EEvPT_(%"class.__gnu_cxx::new_allocator.23"* %6, %struct.Point* %7)
  ret void
}

; Function Attrs: noinline uwtable
define internal void @_ZNSt5dequeIZ4mainE5PointSaIS0_EE16_M_pop_front_auxEv(%"class.std::deque.20"*) #0 align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.845
  %5 = load i32, i32* @y.846
  %6 = add i32 %4, 437531218
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 437531218
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -492153560, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %121
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -492153560, label %18
    i32 -299068218, label %38
    i32 -1291622296, label %86
    i32 -963933204, label %87
  ]

; <label>:17:                                     ; preds = %15
  br label %121

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -299068218, i32 -963933204
  store i32 %37, i32* %14
  br label %121

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::deque.20"*, align 8
  store %"class.std::deque.20"* %0, %"class.std::deque.20"** %39, align 8
  %40 = load %"class.std::deque.20"*, %"class.std::deque.20"** %39, align 8
  %41 = bitcast %"class.std::deque.20"* %40 to %"class.std::_Deque_base.21"*
  %42 = call dereferenceable(1) %"class.std::allocator.22"* @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base.21"* %41) #3
  %43 = bitcast %"class.std::deque.20"* %40 to %"class.std::_Deque_base.21"*
  %44 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %44, i32 0, i32 2
  %46 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %45, i32 0, i32 0
  %47 = load %struct.Point*, %struct.Point** %46, align 8
  call void @_ZNSt16allocator_traitsISaIZ4mainE5PointEE7destroyIS0_EEvRS1_PT_(%"class.std::allocator.22"* dereferenceable(1) %42, %struct.Point* %47)
  %48 = bitcast %"class.std::deque.20"* %40 to %"class.std::_Deque_base.21"*
  %49 = bitcast %"class.std::deque.20"* %40 to %"class.std::_Deque_base.21"*
  %50 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %49, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %50, i32 0, i32 2
  %52 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %51, i32 0, i32 1
  %53 = load %struct.Point*, %struct.Point** %52, align 8
  call void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE18_M_deallocate_nodeEPS0_(%"class.std::_Deque_base.21"* %48, %struct.Point* %53) #3
  %54 = bitcast %"class.std::deque.20"* %40 to %"class.std::_Deque_base.21"*
  %55 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %54, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %55, i32 0, i32 2
  %57 = bitcast %"class.std::deque.20"* %40 to %"class.std::_Deque_base.21"*
  %58 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %57, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %58, i32 0, i32 2
  %60 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %59, i32 0, i32 3
  %61 = load %struct.Point**, %struct.Point*** %60, align 8
  %62 = getelementptr inbounds %struct.Point*, %struct.Point** %61, i64 1
  call void @_ZNSt15_Deque_iteratorIZ4mainE5PointRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator.25"* %56, %struct.Point** %62) #3
  %63 = bitcast %"class.std::deque.20"* %40 to %"class.std::_Deque_base.21"*
  %64 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %64, i32 0, i32 2
  %66 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %65, i32 0, i32 1
  %67 = load %struct.Point*, %struct.Point** %66, align 8
  %68 = bitcast %"class.std::deque.20"* %40 to %"class.std::_Deque_base.21"*
  %69 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %68, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %69, i32 0, i32 2
  %71 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %70, i32 0, i32 0
  store %struct.Point* %67, %struct.Point** %71, align 8
  %72 = load i32, i32* @x.845
  %73 = load i32, i32* @y.846
  %74 = sub i32 0, 1
  %75 = add i32 %72, %74
  %76 = sub i32 %72, 1
  %77 = mul i32 %72, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %73, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  %85 = select i1 %83, i32 -1291622296, i32 -963933204
  store i32 %85, i32* %14
  br label %121

; <label>:86:                                     ; preds = %15
  ret void

; <label>:87:                                     ; preds = %15
  %88 = alloca %"class.std::deque.20"*, align 8
  store %"class.std::deque.20"* %0, %"class.std::deque.20"** %88, align 8
  %89 = load %"class.std::deque.20"*, %"class.std::deque.20"** %88, align 8
  %90 = bitcast %"class.std::deque.20"* %89 to %"class.std::_Deque_base.21"*
  %91 = call dereferenceable(1) %"class.std::allocator.22"* @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base.21"* %90) #3
  %92 = bitcast %"class.std::deque.20"* %89 to %"class.std::_Deque_base.21"*
  %93 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %92, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %93, i32 0, i32 2
  %95 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %94, i32 0, i32 0
  %96 = load %struct.Point*, %struct.Point** %95, align 8
  call void @_ZNSt16allocator_traitsISaIZ4mainE5PointEE7destroyIS0_EEvRS1_PT_(%"class.std::allocator.22"* dereferenceable(1) %91, %struct.Point* %96)
  %97 = bitcast %"class.std::deque.20"* %89 to %"class.std::_Deque_base.21"*
  %98 = bitcast %"class.std::deque.20"* %89 to %"class.std::_Deque_base.21"*
  %99 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %98, i32 0, i32 0
  %100 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %99, i32 0, i32 2
  %101 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %100, i32 0, i32 1
  %102 = load %struct.Point*, %struct.Point** %101, align 8
  call void @_ZNSt11_Deque_baseIZ4mainE5PointSaIS0_EE18_M_deallocate_nodeEPS0_(%"class.std::_Deque_base.21"* %97, %struct.Point* %102) #3
  %103 = bitcast %"class.std::deque.20"* %89 to %"class.std::_Deque_base.21"*
  %104 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %103, i32 0, i32 0
  %105 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %104, i32 0, i32 2
  %106 = bitcast %"class.std::deque.20"* %89 to %"class.std::_Deque_base.21"*
  %107 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %106, i32 0, i32 0
  %108 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %107, i32 0, i32 2
  %109 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %108, i32 0, i32 3
  %110 = load %struct.Point**, %struct.Point*** %109, align 8
  %111 = getelementptr inbounds %struct.Point*, %struct.Point** %110, i64 1
  call void @_ZNSt15_Deque_iteratorIZ4mainE5PointRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator.25"* %105, %struct.Point** %111) #3
  %112 = bitcast %"class.std::deque.20"* %89 to %"class.std::_Deque_base.21"*
  %113 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %112, i32 0, i32 0
  %114 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %113, i32 0, i32 2
  %115 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %114, i32 0, i32 1
  %116 = load %struct.Point*, %struct.Point** %115, align 8
  %117 = bitcast %"class.std::deque.20"* %89 to %"class.std::_Deque_base.21"*
  %118 = getelementptr inbounds %"class.std::_Deque_base.21", %"class.std::_Deque_base.21"* %117, i32 0, i32 0
  %119 = getelementptr inbounds %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl", %"struct.std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl"* %118, i32 0, i32 2
  %120 = getelementptr inbounds %"struct.std::_Deque_iterator.25", %"struct.std::_Deque_iterator.25"* %119, i32 0, i32 0
  store %struct.Point* %116, %struct.Point** %120, align 8
  store i32 -299068218, i32* %14
  br label %121

; <label>:121:                                    ; preds = %87, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZN9__gnu_cxx13new_allocatorIZ4mainE5PointE7destroyIS1_EEvPT_(%"class.__gnu_cxx::new_allocator.23"*, %struct.Point*) #4 align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.847
  %6 = load i32, i32* @y.848
  %7 = sub i32 %5, -694735370
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -694735370
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1510983239, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %52
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1510983239, label %19
    i32 1478936869, label %27
    i32 15962717, label %46
    i32 -1184175443, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %52

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1478936869, i32 -1184175443
  store i32 %26, i32* %15
  br label %52

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  %29 = alloca %struct.Point*, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %0, %"class.__gnu_cxx::new_allocator.23"** %28, align 8
  store %struct.Point* %1, %struct.Point** %29, align 8
  %30 = load %"class.__gnu_cxx::new_allocator.23"*, %"class.__gnu_cxx::new_allocator.23"** %28, align 8
  %31 = load %struct.Point*, %struct.Point** %29, align 8
  %32 = load i32, i32* @x.847
  %33 = load i32, i32* @y.848
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 15962717, i32 -1184175443
  store i32 %45, i32* %15
  br label %52

; <label>:46:                                     ; preds = %16
  ret void

; <label>:47:                                     ; preds = %16
  %48 = alloca %"class.__gnu_cxx::new_allocator.23"*, align 8
  %49 = alloca %struct.Point*, align 8
  store %"class.__gnu_cxx::new_allocator.23"* %0, %"class.__gnu_cxx::new_allocator.23"** %48, align 8
  store %struct.Point* %1, %struct.Point** %49, align 8
  %50 = load %"class.__gnu_cxx::new_allocator.23"*, %"class.__gnu_cxx::new_allocator.23"** %48, align 8
  %51 = load %struct.Point*, %struct.Point** %49, align 8
  store i32 1478936869, i32* %15
  br label %52

; <label>:52:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define internal void @_ZN9__gnu_cxx17__normal_iteratorIPZ4mainE9DirectionSt6vectorIS1_SaIS1_EEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator"*, %struct.Direction** dereferenceable(8)) unnamed_addr #4 align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %struct.Direction**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %struct.Direction** %1, %struct.Direction*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %7 = load %struct.Direction**, %struct.Direction*** %4, align 8
  %8 = load %struct.Direction*, %struct.Direction** %7, align 8
  store %struct.Direction* %8, %struct.Direction** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal dereferenceable(8) %struct.Direction** @_ZNK9__gnu_cxx17__normal_iteratorIPZ4mainE9DirectionSt6vectorIS1_SaIS1_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #4 align 2 {
  %2 = alloca %struct.Direction**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.851
  %6 = load i32, i32* @y.852
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1577301557, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %75
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1577301557, label %18
    i32 1103073042, label %38
    i32 1603468113, label %69
    i32 1296885663, label %71
  ]

; <label>:17:                                     ; preds = %15
  br label %75

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1103073042, i32 1296885663
  store i32 %37, i32* %14
  br label %75

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %39, align 8
  %40 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %39, align 8
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %40, i32 0, i32 0
  store %struct.Direction** %41, %struct.Direction*** %2
  %42 = load i32, i32* @x.851
  %43 = load i32, i32* @y.852
  %44 = sub i32 %42, 2147244711
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 2147244711
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 1603468113, i32 1296885663
  store i32 %68, i32* %14
  br label %75

; <label>:69:                                     ; preds = %15
  %70 = load volatile %struct.Direction**, %struct.Direction*** %2
  ret %struct.Direction** %70

; <label>:71:                                     ; preds = %15
  %72 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %72, align 8
  %73 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %72, align 8
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %73, i32 0, i32 0
  store i32 1103073042, i32* %14
  br label %75

; <label>:75:                                     ; preds = %71, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s387904247.cpp() #0 section ".text.startup" {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.853
  %4 = load i32, i32* @y.854
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %2
  %11 = icmp slt i32 %4, 10
  store i1 %11, i1* %1
  %12 = alloca i32
  store i32 -305616245, i32* %12
  br label %13

; <label>:13:                                     ; preds = %0, %66
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -305616245, label %16
    i32 334921589, label %36
    i32 -469059252, label %64
    i32 546553431, label %65
  ]

; <label>:15:                                     ; preds = %13
  br label %66

; <label>:16:                                     ; preds = %13
  %17 = load volatile i1, i1* %2
  %18 = load volatile i1, i1* %1
  %19 = xor i1 %17, true
  %20 = xor i1 %18, true
  %21 = xor i1 false, true
  %22 = and i1 %19, false
  %23 = and i1 %17, %21
  %24 = and i1 %20, false
  %25 = and i1 %18, %21
  %26 = or i1 %22, %23
  %27 = or i1 %24, %25
  %28 = xor i1 %26, %27
  %29 = or i1 %19, %20
  %30 = xor i1 %29, true
  %31 = or i1 false, %21
  %32 = and i1 %30, %31
  %33 = or i1 %28, %32
  %34 = or i1 %17, %18
  %35 = select i1 %33, i32 334921589, i32 546553431
  store i32 %35, i32* %12
  br label %66

; <label>:36:                                     ; preds = %13
  call void @__cxx_global_var_init()
  %37 = load i32, i32* @x.853
  %38 = load i32, i32* @y.854
  %39 = sub i32 %37, 598944760
  %40 = sub i32 %39, 1
  %41 = add i32 %40, 598944760
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -469059252, i32 546553431
  store i32 %63, i32* %12
  br label %66

; <label>:64:                                     ; preds = %13
  ret void

; <label>:65:                                     ; preds = %13
  call void @__cxx_global_var_init()
  store i32 334921589, i32* %12
  br label %66

; <label>:66:                                     ; preds = %65, %36, %16, %15
  br label %13
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline noreturn nounwind }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind readnone }
attributes #15 = { noreturn }
attributes #16 = { nounwind readonly }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
