; ModuleID = 'Project_CodeNet_C++1400/p03805/s397091922.cpp'
source_filename = "Project_CodeNet_C++1400/p03805/s397091922.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::__debug::vector" = type { %"class.__gnu_debug::_Safe_container.base", %"class.std::__cxx1998::vector", %"class.__gnu_debug::_Safe_vector" }
%"class.__gnu_debug::_Safe_container.base" = type { %"class.__gnu_debug::_Safe_sequence.base" }
%"class.__gnu_debug::_Safe_sequence.base" = type { %"class.__gnu_debug::_Safe_sequence_base.base" }
%"class.__gnu_debug::_Safe_sequence_base.base" = type <{ %"class.__gnu_debug::_Safe_iterator_base"*, %"class.__gnu_debug::_Safe_iterator_base"*, i32 }>
%"class.__gnu_debug::_Safe_iterator_base" = type { %"class.__gnu_debug::_Safe_sequence_base"*, i32, %"class.__gnu_debug::_Safe_iterator_base"*, %"class.__gnu_debug::_Safe_iterator_base"* }
%"class.__gnu_debug::_Safe_sequence_base" = type <{ %"class.__gnu_debug::_Safe_iterator_base"*, %"class.__gnu_debug::_Safe_iterator_base"*, i32, [4 x i8] }>
%"class.std::__cxx1998::vector" = type { %"struct.std::__cxx1998::_Vector_base" }
%"struct.std::__cxx1998::_Vector_base" = type { %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl" }
%"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl" = type { i32*, i32*, i32* }
%"class.__gnu_debug::_Safe_vector" = type { i64 }
%"class.std::allocator" = type { i8 }
%"class.std::__debug::vector.0" = type { %"class.__gnu_debug::_Safe_container.base.4", %"class.std::__cxx1998::vector.5", %"class.__gnu_debug::_Safe_vector.20" }
%"class.__gnu_debug::_Safe_container.base.4" = type { %"class.__gnu_debug::_Safe_sequence.base.3" }
%"class.__gnu_debug::_Safe_sequence.base.3" = type { %"class.__gnu_debug::_Safe_sequence_base.base" }
%"class.std::__cxx1998::vector.5" = type { %"struct.std::__cxx1998::_Vector_base.6" }
%"struct.std::__cxx1998::_Vector_base.6" = type { %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl" }
%"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl" = type { %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"* }
%"class.std::__debug::vector.10" = type { %"class.__gnu_debug::_Safe_container.base.14", %"class.std::__cxx1998::vector.15", %"class.__gnu_debug::_Safe_vector.19" }
%"class.__gnu_debug::_Safe_container.base.14" = type { %"class.__gnu_debug::_Safe_sequence.base.13" }
%"class.__gnu_debug::_Safe_sequence.base.13" = type { %"class.__gnu_debug::_Safe_sequence_base.base" }
%"class.std::__cxx1998::vector.15" = type { %"struct.std::__cxx1998::_Bvector_base" }
%"struct.std::__cxx1998::_Bvector_base" = type { %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl" }
%"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl" = type { %"struct.std::__cxx1998::_Bit_iterator", %"struct.std::__cxx1998::_Bit_iterator", i64* }
%"struct.std::__cxx1998::_Bit_iterator" = type { %"struct.std::__cxx1998::_Bit_iterator_base.base", [4 x i8] }
%"struct.std::__cxx1998::_Bit_iterator_base.base" = type <{ i64*, i32 }>
%"class.__gnu_debug::_Safe_vector.19" = type { i64 }
%"class.__gnu_debug::_Safe_vector.20" = type { i64 }
%"class.std::allocator.21" = type { i8 }
%"class.std::allocator.7" = type { i8 }
%"struct.std::__cxx1998::_Bit_reference" = type { i64*, i64 }
%"class.__gnu_debug::_Safe_iterator" = type { %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_debug::_Safe_iterator_base" }
%"class.__gnu_cxx::__normal_iterator" = type { i32* }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"class.__gnu_debug::_Safe_container" = type { %"class.__gnu_debug::_Safe_sequence.base", [4 x i8] }
%"class.__gnu_debug::_Error_formatter" = type <{ i8*, i64, [9 x %"struct.__gnu_debug::_Error_formatter::_Parameter"], i64, i8*, i64, i64, i8, i8, [6 x i8] }>
%"struct.__gnu_debug::_Error_formatter::_Parameter" = type { i32, %union.anon }
%union.anon = type { %struct.anon }
%struct.anon = type { i8*, i8*, %"class.std::type_info"*, i32, i32, i8*, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.__gnu_cxx::new_allocator.22" = type { i8 }
%"class.__gnu_debug::_Safe_container.11" = type { %"class.__gnu_debug::_Safe_sequence.base.13", [4 x i8] }
%"class.__gnu_cxx::new_allocator.8" = type { i8 }
%"class.__gnu_debug::_Safe_container.1" = type { %"class.__gnu_debug::_Safe_sequence.base.3", [4 x i8] }
%"struct.__gnu_cxx::__ops::_Iter_less_iter" = type { i8 }
%"class.__gnu_debug::_Safe_sequence.12" = type { %"class.__gnu_debug::_Safe_sequence_base.base", [4 x i8] }
%"struct.std::__cxx1998::_Bit_iterator_base" = type <{ i64*, i32, [4 x i8] }>
%"class.std::allocator.16" = type { i8 }
%"class.__gnu_cxx::new_allocator.17" = type { i8 }
%"class.__gnu_debug::_Safe_sequence" = type { %"class.__gnu_debug::_Safe_sequence_base.base", [4 x i8] }
%"class.__gnu_debug::_Safe_sequence.2" = type { %"class.__gnu_debug::_Safe_sequence_base.base", [4 x i8] }
%"struct.__gnu_debug::_Error_formatter::_Is_sequence" = type { i8 }
%struct.anon.24 = type { i8*, i8*, %"class.std::type_info"* }
%struct.anon.25 = type { i8*, i64 }
%"struct.std::iterator" = type { i8 }
%"struct.std::__false_type" = type { i8 }
%"struct.__gnu_debug::_Error_formatter::_Is_iterator" = type { i8 }
%"struct.std::random_access_iterator_tag" = type { i8 }
%"struct.std::__cxx1998::_Bit_const_iterator" = type { %"struct.std::__cxx1998::_Bit_iterator_base.base", [4 x i8] }
%"struct.std::pair" = type <{ i64, i32, [4 x i8] }>
%"class.__gnu_cxx::__scoped_lock" = type { %"class.__gnu_cxx::__mutex"* }
%"class.__gnu_cxx::__mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %"struct.(anonymous union)::__pthread_mutex_s" }
%"struct.(anonymous union)::__pthread_mutex_s" = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.__gnu_cxx::__concurrence_lock_error" = type { %"class.std::exception" }
%"class.std::exception" = type { i32 (...)** }
%"class.__gnu_cxx::__concurrence_unlock_error" = type { %"class.std::exception" }

$_ZNSaIiEC2Ev = comdat any

$_ZNSt7__debug6vectorIiSaIiEEC2EmRKS1_ = comdat any

$_ZNSaIiED2Ev = comdat any

$_ZNSt7__debug6vectorIiSaIiEEixEm = comdat any

$_ZNSaIbEC2Ev = comdat any

$_ZNSt7__debug6vectorIbSaIbEEC2EmRKbRKS1_ = comdat any

$_ZNSaINSt7__debug6vectorIbSaIbEEEEC2Ev = comdat any

$_ZNSt7__debug6vectorINS0_IbSaIbEEESaIS2_EEC2EmRKS2_RKS3_ = comdat any

$_ZNSaINSt7__debug6vectorIbSaIbEEEED2Ev = comdat any

$_ZNSt7__debug6vectorIbSaIbEED2Ev = comdat any

$_ZNSaIbED2Ev = comdat any

$_ZNSt7__debug6vectorINS0_IbSaIbEEESaIS2_EEixEm = comdat any

$_ZNSt7__debug6vectorIbSaIbEEixEm = comdat any

$_ZNSt9__cxx199814_Bit_referenceaSEb = comdat any

$_ZNKSt9__cxx199814_Bit_referencecvbEv = comdat any

$_ZSt16next_permutationIN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS7_EEEEEbT_SE_ = comdat any

$_ZNSt7__debug6vectorIiSaIiEE5beginEv = comdat any

$_ZNSt7__debug6vectorIiSaIiEE3endEv = comdat any

$_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev = comdat any

$_ZNSt7__debug6vectorIiSaIiEED2Ev = comdat any

$_ZNSt7__debug6vectorINS0_IbSaIbEEESaIS2_EED2Ev = comdat any

$_ZNSt9__cxx19986vectorIbSaIbEED2Ev = comdat any

$_ZN11__gnu_debug15_Safe_containerINSt7__debug6vectorIbSaIbEEES3_NS_14_Safe_sequenceELb1EED2Ev = comdat any

$_ZNSt9__cxx199813_Bvector_baseISaIbEED2Ev = comdat any

$_ZNSt9__cxx199813_Bvector_baseISaIbEE13_M_deallocateEv = comdat any

$_ZNSt9__cxx199813_Bvector_baseISaIbEE13_Bvector_implD2Ev = comdat any

$_ZNKSt9__cxx199813_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv = comdat any

$_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm = comdat any

$_ZSt11__addressofImEPT_RS0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm = comdat any

$_ZN9__gnu_cxx13new_allocatorImED2Ev = comdat any

$_ZN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorIbSaIbEEEED2Ev = comdat any

$_ZN11__gnu_debug19_Safe_sequence_baseD2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZN11__gnu_debug19_Safe_iterator_baseD2Ev = comdat any

$_ZNSt9__cxx19986vectorIiSaIiEED2Ev = comdat any

$_ZN11__gnu_debug15_Safe_containerINSt7__debug6vectorIiSaIiEEES3_NS_14_Safe_sequenceELb1EED2Ev = comdat any

$_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E = comdat any

$_ZNSt9__cxx199812_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt9__cxx199812_Vector_baseIiSaIiEED2Ev = comdat any

$_ZSt8_DestroyIPiEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_ = comdat any

$_ZNSt9__cxx199812_Vector_baseIiSaIiEE13_M_deallocateEPim = comdat any

$_ZNSt9__cxx199812_Vector_baseIiSaIiEE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim = comdat any

$_ZN9__gnu_cxx13new_allocatorIiED2Ev = comdat any

$_ZN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorIiSaIiEEEED2Ev = comdat any

$_ZNSt9__cxx19986vectorINSt7__debug6vectorIbSaIbEEESaIS4_EED2Ev = comdat any

$_ZN11__gnu_debug15_Safe_containerINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEES5_NS_14_Safe_sequenceELb1EED2Ev = comdat any

$_ZSt8_DestroyIPNSt7__debug6vectorIbSaIbEEES3_EvT_S5_RSaIT0_E = comdat any

$_ZNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EED2Ev = comdat any

$_ZSt8_DestroyIPNSt7__debug6vectorIbSaIbEEEEvT_S5_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__debug6vectorIbSaIbEEEEEvT_S7_ = comdat any

$_ZSt8_DestroyINSt7__debug6vectorIbSaIbEEEEvPT_ = comdat any

$_ZSt11__addressofINSt7__debug6vectorIbSaIbEEEEPT_RS4_ = comdat any

$_ZNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EE13_M_deallocateEPS4_m = comdat any

$_ZNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaINSt7__debug6vectorIbSaIbEEEEE10deallocateERS4_PS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__debug6vectorIbSaIbEEEE10deallocateEPS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__debug6vectorIbSaIbEEEED2Ev = comdat any

$_ZN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2Ev = comdat any

$_ZN11__gnu_debug15_Safe_containerINSt7__debug6vectorIiSaIiEEES3_NS_14_Safe_sequenceELb1EEC2Ev = comdat any

$_ZNSt9__cxx19986vectorIiSaIiEEC2EmRKS1_ = comdat any

$_ZN11__gnu_debug12_Safe_vectorINSt7__debug6vectorIiSaIiEEENSt9__cxx19986vectorIiS3_EEEC2Em = comdat any

$_ZN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorIiSaIiEEEEC2Ev = comdat any

$_ZN11__gnu_debug19_Safe_sequence_baseC2Ev = comdat any

$_ZNSt9__cxx199812_Vector_baseIiSaIiEEC2EmRKS1_ = comdat any

$_ZNSt9__cxx19986vectorIiSaIiEE21_M_default_initializeEm = comdat any

$_ZNSt9__cxx199812_Vector_baseIiSaIiEE12_Vector_implC2ERKS1_ = comdat any

$_ZNSt9__cxx199812_Vector_baseIiSaIiEE17_M_create_storageEm = comdat any

$_ZNSaIiEC2ERKS_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_ = comdat any

$_ZNSt9__cxx199812_Vector_baseIiSaIiEE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaIiEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv = comdat any

$_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E = comdat any

$_ZSt25__uninitialized_default_nIPimET_S1_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_ = comdat any

$_ZSt6fill_nIPimiET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_ = comdat any

$_ZNKSt9__cxx19986vectorIiSaIiEE4sizeEv = comdat any

$_ZN11__gnu_debug16_Error_formatter5_M_atEPKcm = comdat any

$_ZNK11__gnu_debug16_Error_formatter11_M_sequenceINSt7__debug6vectorIiSaIiEEEEERKS0_RKT_PKc = comdat any

$_ZNK11__gnu_debug16_Error_formatter10_M_integerElPKc = comdat any

$_ZNSt7__debug6vectorIiSaIiEE7_M_baseEv = comdat any

$_ZNSt9__cxx19986vectorIiSaIiEEixEm = comdat any

$_ZN11__gnu_debug16_Error_formatterC2EPKcm = comdat any

$_ZN11__gnu_debug16_Error_formatter10_ParameterC2Ev = comdat any

$_ZN11__gnu_debug16_Error_formatter10_ParameterC2INSt7__debug6vectorIiSaIiEEEEERKT_PKcNS0_12_Is_sequenceE = comdat any

$_ZN11__gnu_debug16_Error_formatter10_ParameterC2ElPKc = comdat any

$_ZN9__gnu_cxx13new_allocatorIbEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIbED2Ev = comdat any

$_ZN11__gnu_debug15_Safe_containerINSt7__debug6vectorIbSaIbEEES3_NS_14_Safe_sequenceELb1EEC2Ev = comdat any

$_ZNSt9__cxx19986vectorIbSaIbEEC2EmRKbRKS1_ = comdat any

$_ZN11__gnu_debug12_Safe_vectorINSt7__debug6vectorIbSaIbEEENSt9__cxx19986vectorIbS3_EEEC2Ev = comdat any

$_ZN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorIbSaIbEEEEC2Ev = comdat any

$_ZNSt9__cxx199813_Bvector_baseISaIbEEC2ERKS1_ = comdat any

$_ZNSt9__cxx19986vectorIbSaIbEE13_M_initializeEm = comdat any

$_ZSt4fillIPmiEvT_S1_RKT0_ = comdat any

$_ZNSaImEC2IbEERKSaIT_E = comdat any

$_ZNSt9__cxx199813_Bvector_baseISaIbEE13_Bvector_implC2EOSaImE = comdat any

$_ZNSaImED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorImEC2Ev = comdat any

$_ZSt4moveIRSaImEEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZNSt9__cxx199813_Bit_iteratorC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorImEC2ERKS1_ = comdat any

$_ZNSt9__cxx199818_Bit_iterator_baseC2EPmj = comdat any

$_ZNSt9__cxx199813_Bvector_baseISaIbEE11_M_allocateEm = comdat any

$_ZNSt9__cxx199813_Bvector_baseISaIbEE8_S_nwordEm = comdat any

$_ZNSt9__cxx199813_Bit_iteratorC2EPmj = comdat any

$_ZNKSt9__cxx199813_Bit_iteratorplEl = comdat any

$_ZNSt16allocator_traitsISaImEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv = comdat any

$_ZNSt9__cxx199813_Bit_iteratorpLEl = comdat any

$_ZNSt9__cxx199818_Bit_iterator_base7_M_incrEl = comdat any

$_ZN11__gnu_debug13__valid_rangeIPmEEbRKT_S4_ = comdat any

$_ZNK11__gnu_debug16_Error_formatter11_M_iteratorIPmEERKS0_RKT_PKc = comdat any

$_ZSt8__fill_aIPmiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZN11__gnu_debug17__valid_range_auxIPmEEbRKT_S4_St12__false_type = comdat any

$_ZN11__gnu_debug18__valid_range_aux2IPmEEbRKT_S4_St26random_access_iterator_tag = comdat any

$_ZSt19__iterator_categoryIPmENSt15iterator_traitsIT_E17iterator_categoryERKS2_ = comdat any

$_ZN11__gnu_debug16_Error_formatter10_ParameterC2IPmEERKT_PKcNS0_12_Is_iteratorE = comdat any

$_ZN11__gnu_debug16__check_singularIPmEEbRKT_ = comdat any

$_ZN11__gnu_debug20__check_singular_auxEPKv = comdat any

$_ZNSt10_Iter_baseIPmLb0EE7_S_baseES0_ = comdat any

$_ZN11__gnu_debug12_Safe_vectorINSt7__debug6vectorIbSaIbEEENSt9__cxx19986vectorIbS3_EEE29_M_update_guaranteed_capacityEv = comdat any

$_ZNK11__gnu_debug12_Safe_vectorINSt7__debug6vectorIbSaIbEEENSt9__cxx19986vectorIbS3_EEE6_M_seqEv = comdat any

$_ZNKSt9__cxx19986vectorIbSaIbEE4sizeEv = comdat any

$_ZNSt9__cxx1998miERKNS_18_Bit_iterator_baseES2_ = comdat any

$_ZNKSt9__cxx19986vectorIbSaIbEE3endEv = comdat any

$_ZNKSt9__cxx19986vectorIbSaIbEE5beginEv = comdat any

$_ZNSt9__cxx199819_Bit_const_iteratorC2ERKNS_13_Bit_iteratorE = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__debug6vectorIbSaIbEEEEC2Ev = comdat any

$_ZN11__gnu_debug15_Safe_containerINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEES5_NS_14_Safe_sequenceELb1EEC2Ev = comdat any

$_ZNSt9__cxx19986vectorINSt7__debug6vectorIbSaIbEEESaIS4_EEC2EmRKS4_RKS5_ = comdat any

$_ZN11__gnu_debug12_Safe_vectorINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEENSt9__cxx19986vectorIS4_S5_EEEC2Ev = comdat any

$_ZN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEEEC2Ev = comdat any

$_ZNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EEC2EmRKS5_ = comdat any

$_ZNSt9__cxx19986vectorINSt7__debug6vectorIbSaIbEEESaIS4_EE18_M_fill_initializeEmRKS4_ = comdat any

$_ZNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EE12_Vector_implC2ERKS5_ = comdat any

$_ZNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EE17_M_create_storageEm = comdat any

$_ZNSaINSt7__debug6vectorIbSaIbEEEEC2ERKS3_ = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__debug6vectorIbSaIbEEEEC2ERKS5_ = comdat any

$_ZNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaINSt7__debug6vectorIbSaIbEEEEE8allocateERS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__debug6vectorIbSaIbEEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorINSt7__debug6vectorIbSaIbEEEE8max_sizeEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPNSt7__debug6vectorIbSaIbEEEmS3_S3_ET_S5_T0_RKT1_RSaIT2_E = comdat any

$_ZSt20uninitialized_fill_nIPNSt7__debug6vectorIbSaIbEEEmS3_ET_S5_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPNSt7__debug6vectorIbSaIbEEEmS5_EET_S7_T0_RKT1_ = comdat any

$_ZSt10_ConstructINSt7__debug6vectorIbSaIbEEEJRKS3_EEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKNSt7__debug6vectorIbSaIbEEEEOT_RNSt16remove_referenceIS6_E4typeE = comdat any

$_ZNSt7__debug6vectorIbSaIbEEC2ERKS2_ = comdat any

$_ZN11__gnu_debug15_Safe_containerINSt7__debug6vectorIbSaIbEEES3_NS_14_Safe_sequenceELb1EEC2ERKS6_ = comdat any

$_ZNSt9__cxx19986vectorIbSaIbEEC2ERKS2_ = comdat any

$_ZN11__gnu_debug12_Safe_vectorINSt7__debug6vectorIbSaIbEEENSt9__cxx19986vectorIbS3_EEEC2ERKS8_ = comdat any

$_ZN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorIbSaIbEEEEC2ERKS5_ = comdat any

$_ZN11__gnu_debug19_Safe_sequence_baseC2ERKS0_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaImEE17_S_select_on_copyERKS1_ = comdat any

$_ZNKSt9__cxx199813_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv = comdat any

$_ZNSaIbEC2ImEERKSaIT_E = comdat any

$_ZNSt9__cxx19986vectorIbSaIbEE15_M_copy_alignedENS_19_Bit_const_iteratorES3_NS_13_Bit_iteratorE = comdat any

$_ZNSt16allocator_traitsISaImEE37select_on_container_copy_constructionERKS0_ = comdat any

$_ZNSaImEC2ERKS_ = comdat any

$_ZSt4copyIPmS0_ET0_T_S2_S1_ = comdat any

$_ZSt4copyINSt9__cxx199819_Bit_const_iteratorENS0_13_Bit_iteratorEET0_T_S4_S3_ = comdat any

$_ZNSt9__cxx199819_Bit_const_iteratorC2EPmj = comdat any

$_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseIPmENSt11_Miter_baseIT_E13iterator_typeES2_ = comdat any

$_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_ = comdat any

$_ZN11__gnu_debug13__valid_rangeINSt9__cxx199819_Bit_const_iteratorEEEbRKT_S5_ = comdat any

$_ZNK11__gnu_debug16_Error_formatter11_M_iteratorINSt9__cxx199819_Bit_const_iteratorEEERKS0_RKT_PKc = comdat any

$_ZSt14__copy_move_a2ILb0ENSt9__cxx199819_Bit_const_iteratorENS0_13_Bit_iteratorEET1_T0_S4_S3_ = comdat any

$_ZSt12__miter_baseINSt9__cxx199819_Bit_const_iteratorEENSt11_Miter_baseIT_E13iterator_typeES3_ = comdat any

$_ZN11__gnu_debug17__valid_range_auxINSt9__cxx199819_Bit_const_iteratorEEEbRKT_S5_St12__false_type = comdat any

$_ZN11__gnu_debug18__valid_range_aux2INSt9__cxx199819_Bit_const_iteratorEEEbRKT_S5_St26random_access_iterator_tag = comdat any

$_ZSt19__iterator_categoryINSt9__cxx199819_Bit_const_iteratorEENSt15iterator_traitsIT_E17iterator_categoryERKS3_ = comdat any

$_ZN11__gnu_debug16_Error_formatter10_ParameterC2INSt9__cxx199819_Bit_const_iteratorEEERKT_PKcNS0_12_Is_iteratorE = comdat any

$_ZN11__gnu_debug16__check_singularINSt9__cxx199819_Bit_const_iteratorEEEbRKT_ = comdat any

$_ZSt13__copy_move_aILb0ENSt9__cxx199819_Bit_const_iteratorENS0_13_Bit_iteratorEET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseINSt9__cxx199819_Bit_const_iteratorEENSt11_Niter_baseIT_E13iterator_typeES3_ = comdat any

$_ZSt12__niter_baseINSt9__cxx199813_Bit_iteratorEENSt11_Niter_baseIT_E13iterator_typeES3_ = comdat any

$_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mINSt9__cxx199819_Bit_const_iteratorENS3_13_Bit_iteratorEEET0_T_S7_S6_ = comdat any

$_ZNKSt9__cxx199819_Bit_const_iteratordeEv = comdat any

$_ZNKSt9__cxx199813_Bit_iteratordeEv = comdat any

$_ZNSt9__cxx199819_Bit_const_iteratorppEv = comdat any

$_ZNSt9__cxx199813_Bit_iteratorppEv = comdat any

$_ZNSt9__cxx199814_Bit_referenceC2EPmm = comdat any

$_ZNSt9__cxx199818_Bit_iterator_base10_M_bump_upEv = comdat any

$_ZNSt10_Iter_baseINSt9__cxx199819_Bit_const_iteratorELb0EE7_S_baseES1_ = comdat any

$_ZNSt10_Iter_baseINSt9__cxx199813_Bit_iteratorELb0EE7_S_baseES1_ = comdat any

$_ZN11__gnu_debug12_Safe_vectorINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEENSt9__cxx19986vectorIS4_S5_EEE29_M_update_guaranteed_capacityEv = comdat any

$_ZNK11__gnu_debug12_Safe_vectorINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEENSt9__cxx19986vectorIS4_S5_EEE6_M_seqEv = comdat any

$_ZNKSt9__cxx19986vectorINSt7__debug6vectorIbSaIbEEESaIS4_EE4sizeEv = comdat any

$_ZNK11__gnu_debug16_Error_formatter11_M_sequenceINSt7__debug6vectorINS3_IbSaIbEEESaIS5_EEEEERKS0_RKT_PKc = comdat any

$_ZNSt7__debug6vectorINS0_IbSaIbEEESaIS2_EE7_M_baseEv = comdat any

$_ZNSt9__cxx19986vectorINSt7__debug6vectorIbSaIbEEESaIS4_EEixEm = comdat any

$_ZN11__gnu_debug16_Error_formatter10_ParameterC2INSt7__debug6vectorINS4_IbSaIbEEESaIS6_EEEEERKT_PKcNS0_12_Is_sequenceE = comdat any

$_ZNK11__gnu_debug16_Error_formatter11_M_sequenceINSt7__debug6vectorIbSaIbEEEEERKS0_RKT_PKc = comdat any

$_ZNSt7__debug6vectorIbSaIbEE7_M_baseEv = comdat any

$_ZNSt9__cxx19986vectorIbSaIbEEixEm = comdat any

$_ZN11__gnu_debug16_Error_formatter10_ParameterC2INSt7__debug6vectorIbSaIbEEEEERKT_PKcNS0_12_Is_sequenceE = comdat any

$_ZNSt9__cxx19986vectorIiSaIiEE5beginEv = comdat any

$_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEC2ERKS8_PKNS_19_Safe_sequence_baseE = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEC2ERKS1_ = comdat any

$_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE11_M_constantEv = comdat any

$_ZN11__gnu_debug19_Safe_iterator_baseC2EPKNS_19_Safe_sequence_baseEb = comdat any

$_ZNK11__gnu_debug16_Error_formatter11_M_iteratorINS_14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS8_EEEEEERKS0_RKT_PKc = comdat any

$_ZN11__gnu_debug16_Error_formatter10_ParameterC2IN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS8_EEEERKNS_14_Safe_iteratorIT_T0_EEPKcNS0_12_Is_iteratorE = comdat any

$_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE15_M_get_sequenceEv = comdat any

$_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE18_M_is_before_beginEv = comdat any

$_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE9_M_is_endEv = comdat any

$_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE11_M_is_beginEv = comdat any

$_ZN11__gnu_debug18_BeforeBeginHelperINSt7__debug6vectorIiSaIiEEEE5_S_IsIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiS3_EEEEEEbRKNS_14_Safe_iteratorIT_S4_EE = comdat any

$_ZN9__gnu_cxxeqIPiNSt9__cxx19986vectorIiSaIiEEEEEbRKNS_17__normal_iteratorIT_T0_EESB_ = comdat any

$_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE4baseEv = comdat any

$_ZNSt9__cxx19986vectorIiSaIiEE3endEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEE4baseEv = comdat any

$_ZN11__gnu_debug13__valid_rangeIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEEbRKNS_14_Safe_iteratorIT_T0_EESH_ = comdat any

$_ZSt18__next_permutationIN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS7_EEEENS2_5__ops15_Iter_less_iterEEbT_SG_T0_ = comdat any

$_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEC2ERKSC_ = comdat any

$_ZN9__gnu_cxx5__ops16__iter_less_iterEv = comdat any

$_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE14_M_valid_rangeERKSC_ = comdat any

$_ZN11__gnu_debug14__get_distanceIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEEEESt4pairINSt15iterator_traitsIT_E15difference_typeENS_19_Distance_precisionEERKSB_SH_ = comdat any

$_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE15_M_is_beginnestEv = comdat any

$_ZN11__gnu_debug14__get_distanceIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEEEESt4pairINSt15iterator_traitsIT_E15difference_typeENS_19_Distance_precisionEERKSB_SH_St26random_access_iterator_tag = comdat any

$_ZSt9make_pairIlN11__gnu_debug19_Distance_precisionEESt4pairINSt17__decay_and_stripIT_E6__typeENS3_IT0_E6__typeEEOS4_OS7_ = comdat any

$_ZN9__gnu_cxxmiIPiNSt9__cxx19986vectorIiSaIiEEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_ = comdat any

$_ZSt7forwardIlEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZSt7forwardIN11__gnu_debug19_Distance_precisionEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt4pairIlN11__gnu_debug19_Distance_precisionEEC2IlS1_vEEOT_OT0_ = comdat any

$_ZN11__gnu_debug18_BeforeBeginHelperINSt7__debug6vectorIiSaIiEEEE15_S_Is_BeginnestIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiS3_EEEEEEbRKNS_14_Safe_iteratorIT_S4_EE = comdat any

$_ZN11__gnu_debugeqIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEEbRKNS_14_Safe_iteratorIT_T0_EESH_ = comdat any

$_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEppEv = comdat any

$_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEaSERKSC_ = comdat any

$_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEmmEv = comdat any

$_ZNK9__gnu_cxx5__ops15_Iter_less_iterclIN11__gnu_debug14_Safe_iteratorINS_17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS9_EEEESF_EEbT_T0_ = comdat any

$_ZSt9iter_swapIN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS7_EEEESD_EvT_T0_ = comdat any

$_ZSt9__reverseIN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS7_EEEEEvT_SE_St26random_access_iterator_tag = comdat any

$_ZSt19__iterator_categoryIN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS7_EEEEENSt15iterator_traitsIT_E17iterator_categoryERKSF_ = comdat any

$_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE16_M_incrementableEv = comdat any

$_ZN9__gnu_cxx13__scoped_lockC2ERNS_7__mutexE = comdat any

$_ZN9__gnu_cxx13__scoped_lockD2Ev = comdat any

$_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEppEv = comdat any

$_ZN9__gnu_cxx7__mutex4lockEv = comdat any

$_ZN9__gnu_cxx30__throw_concurrence_lock_errorEv = comdat any

$_ZN9__gnu_cxx24__concurrence_lock_errorC2Ev = comdat any

$_ZN9__gnu_cxx24__concurrence_lock_errorD2Ev = comdat any

$_ZNSt9exceptionC2Ev = comdat any

$_ZN9__gnu_cxx24__concurrence_lock_errorD0Ev = comdat any

$_ZNK9__gnu_cxx24__concurrence_lock_error4whatEv = comdat any

$_ZN9__gnu_cxx7__mutex6unlockEv = comdat any

$_ZN9__gnu_cxx32__throw_concurrence_unlock_errorEv = comdat any

$_ZN9__gnu_cxx26__concurrence_unlock_errorC2Ev = comdat any

$_ZN9__gnu_cxx26__concurrence_unlock_errorD2Ev = comdat any

$_ZN9__gnu_cxx26__concurrence_unlock_errorD0Ev = comdat any

$_ZNK9__gnu_cxx26__concurrence_unlock_error4whatEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEC2Ev = comdat any

$_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE9_M_attachEPNS_19_Safe_sequence_baseE = comdat any

$_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE16_M_decrementableEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEmmEv = comdat any

$_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEdeEv = comdat any

$_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE18_M_dereferenceableEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEdeEv = comdat any

$_ZSt4swapIiEvRT_S1_ = comdat any

$_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZN11__gnu_debugltIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEEbRKNS_14_Safe_iteratorIT_T0_EESH_ = comdat any

$_ZN9__gnu_cxxltIPiNSt9__cxx19986vectorIiSaIiEEEEEbRKNS_17__normal_iteratorIT_T0_EESB_ = comdat any

$_ZN11__gnu_debug19_Safe_iterator_baseC2Ev = comdat any

$_ZTSNSt7__debug6vectorIiSaIiEEE = comdat any

$_ZTSN11__gnu_debug15_Safe_containerINSt7__debug6vectorIiSaIiEEES3_NS_14_Safe_sequenceELb1EEE = comdat any

$_ZTSN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorIiSaIiEEEEE = comdat any

$_ZTSN11__gnu_debug19_Safe_sequence_baseE = comdat any

$_ZTIN11__gnu_debug19_Safe_sequence_baseE = comdat any

$_ZTIN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorIiSaIiEEEEE = comdat any

$_ZTIN11__gnu_debug15_Safe_containerINSt7__debug6vectorIiSaIiEEES3_NS_14_Safe_sequenceELb1EEE = comdat any

$_ZTSNSt9__cxx19986vectorIiSaIiEEE = comdat any

$_ZTSNSt9__cxx199812_Vector_baseIiSaIiEEE = comdat any

$_ZTINSt9__cxx199812_Vector_baseIiSaIiEEE = comdat any

$_ZTINSt9__cxx19986vectorIiSaIiEEE = comdat any

$_ZTSN11__gnu_debug12_Safe_vectorINSt7__debug6vectorIiSaIiEEENSt9__cxx19986vectorIiS3_EEEE = comdat any

$_ZTIN11__gnu_debug12_Safe_vectorINSt7__debug6vectorIiSaIiEEENSt9__cxx19986vectorIiS3_EEEE = comdat any

$_ZTINSt7__debug6vectorIiSaIiEEE = comdat any

$_ZTSNSt9__cxx199819_Bit_const_iteratorE = comdat any

$_ZTSNSt9__cxx199818_Bit_iterator_baseE = comdat any

$_ZTSSt8iteratorISt26random_access_iterator_tagblPbRbE = comdat any

$_ZTISt8iteratorISt26random_access_iterator_tagblPbRbE = comdat any

$_ZTINSt9__cxx199818_Bit_iterator_baseE = comdat any

$_ZTINSt9__cxx199819_Bit_const_iteratorE = comdat any

$_ZTSNSt7__debug6vectorINS0_IbSaIbEEESaIS2_EEE = comdat any

$_ZTSN11__gnu_debug15_Safe_containerINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEES5_NS_14_Safe_sequenceELb1EEE = comdat any

$_ZTSN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEEEE = comdat any

$_ZTIN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEEEE = comdat any

$_ZTIN11__gnu_debug15_Safe_containerINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEES5_NS_14_Safe_sequenceELb1EEE = comdat any

$_ZTSNSt9__cxx19986vectorINSt7__debug6vectorIbSaIbEEESaIS4_EEE = comdat any

$_ZTSNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EEE = comdat any

$_ZTINSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EEE = comdat any

$_ZTINSt9__cxx19986vectorINSt7__debug6vectorIbSaIbEEESaIS4_EEE = comdat any

$_ZTSN11__gnu_debug12_Safe_vectorINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEENSt9__cxx19986vectorIS4_S5_EEEE = comdat any

$_ZTIN11__gnu_debug12_Safe_vectorINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEENSt9__cxx19986vectorIS4_S5_EEEE = comdat any

$_ZTINSt7__debug6vectorINS0_IbSaIbEEESaIS2_EEE = comdat any

$_ZTSNSt7__debug6vectorIbSaIbEEE = comdat any

$_ZTSN11__gnu_debug15_Safe_containerINSt7__debug6vectorIbSaIbEEES3_NS_14_Safe_sequenceELb1EEE = comdat any

$_ZTSN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorIbSaIbEEEEE = comdat any

$_ZTIN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorIbSaIbEEEEE = comdat any

$_ZTIN11__gnu_debug15_Safe_containerINSt7__debug6vectorIbSaIbEEES3_NS_14_Safe_sequenceELb1EEE = comdat any

$_ZTSNSt9__cxx19986vectorIbSaIbEEE = comdat any

$_ZTSNSt9__cxx199813_Bvector_baseISaIbEEE = comdat any

$_ZTINSt9__cxx199813_Bvector_baseISaIbEEE = comdat any

$_ZTINSt9__cxx19986vectorIbSaIbEEE = comdat any

$_ZTSN11__gnu_debug12_Safe_vectorINSt7__debug6vectorIbSaIbEEENSt9__cxx19986vectorIbS3_EEEE = comdat any

$_ZTIN11__gnu_debug12_Safe_vectorINSt7__debug6vectorIbSaIbEEENSt9__cxx19986vectorIbS3_EEEE = comdat any

$_ZTINSt7__debug6vectorIbSaIbEEE = comdat any

$_ZTSN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEE = comdat any

$_ZTSN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEE = comdat any

$_ZTIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEE = comdat any

$_ZTSN11__gnu_debug19_Safe_iterator_baseE = comdat any

$_ZTIN11__gnu_debug19_Safe_iterator_baseE = comdat any

$_ZTIN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEE = comdat any

$_ZTSN9__gnu_cxx24__concurrence_lock_errorE = comdat any

$_ZTIN9__gnu_cxx24__concurrence_lock_errorE = comdat any

$_ZTVN9__gnu_cxx24__concurrence_lock_errorE = comdat any

$_ZTSN9__gnu_cxx26__concurrence_unlock_errorE = comdat any

$_ZTIN9__gnu_cxx26__concurrence_unlock_errorE = comdat any

$_ZTVN9__gnu_cxx26__concurrence_unlock_errorE = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [79 x i8] c"/usr/lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/debug/vector\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"this\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"__n\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@_ZTVN10__cxxabiv121__vmi_class_type_infoE = external global i8*
@_ZTSNSt7__debug6vectorIiSaIiEEE = linkonce_odr constant [28 x i8] c"NSt7__debug6vectorIiSaIiEEE\00", comdat
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTSN11__gnu_debug15_Safe_containerINSt7__debug6vectorIiSaIiEEES3_NS_14_Safe_sequenceELb1EEE = linkonce_odr constant [89 x i8] c"N11__gnu_debug15_Safe_containerINSt7__debug6vectorIiSaIiEEES3_NS_14_Safe_sequenceELb1EEE\00", comdat
@_ZTSN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorIiSaIiEEEEE = linkonce_odr constant [61 x i8] c"N11__gnu_debug14_Safe_sequenceINSt7__debug6vectorIiSaIiEEEEE\00", comdat
@_ZTVN10__cxxabiv117__class_type_infoE = external global i8*
@_ZTSN11__gnu_debug19_Safe_sequence_baseE = linkonce_odr constant [37 x i8] c"N11__gnu_debug19_Safe_sequence_baseE\00", comdat
@_ZTIN11__gnu_debug19_Safe_sequence_baseE = linkonce_odr constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @_ZTSN11__gnu_debug19_Safe_sequence_baseE, i32 0, i32 0) }, comdat
@_ZTIN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorIiSaIiEEEEE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @_ZTSN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorIiSaIiEEEEE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN11__gnu_debug19_Safe_sequence_baseE to i8*) }, comdat
@_ZTIN11__gnu_debug15_Safe_containerINSt7__debug6vectorIiSaIiEEES3_NS_14_Safe_sequenceELb1EEE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @_ZTSN11__gnu_debug15_Safe_containerINSt7__debug6vectorIiSaIiEEES3_NS_14_Safe_sequenceELb1EEE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorIiSaIiEEEEE to i8*) }, comdat
@_ZTSNSt9__cxx19986vectorIiSaIiEEE = linkonce_odr constant [30 x i8] c"NSt9__cxx19986vectorIiSaIiEEE\00", comdat
@_ZTSNSt9__cxx199812_Vector_baseIiSaIiEEE = linkonce_odr constant [37 x i8] c"NSt9__cxx199812_Vector_baseIiSaIiEEE\00", comdat
@_ZTINSt9__cxx199812_Vector_baseIiSaIiEEE = linkonce_odr constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @_ZTSNSt9__cxx199812_Vector_baseIiSaIiEEE, i32 0, i32 0) }, comdat
@_ZTINSt9__cxx19986vectorIiSaIiEEE = linkonce_odr constant { i8*, i8*, i32, i32, i8*, i64 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @_ZTSNSt9__cxx19986vectorIiSaIiEEE, i32 0, i32 0), i32 0, i32 1, i8* bitcast ({ i8*, i8* }* @_ZTINSt9__cxx199812_Vector_baseIiSaIiEEE to i8*), i64 0 }, comdat
@_ZTSN11__gnu_debug12_Safe_vectorINSt7__debug6vectorIiSaIiEEENSt9__cxx19986vectorIiS3_EEEE = linkonce_odr constant [86 x i8] c"N11__gnu_debug12_Safe_vectorINSt7__debug6vectorIiSaIiEEENSt9__cxx19986vectorIiS3_EEEE\00", comdat
@_ZTIN11__gnu_debug12_Safe_vectorINSt7__debug6vectorIiSaIiEEENSt9__cxx19986vectorIiS3_EEEE = linkonce_odr constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @_ZTSN11__gnu_debug12_Safe_vectorINSt7__debug6vectorIiSaIiEEENSt9__cxx19986vectorIiS3_EEEE, i32 0, i32 0) }, comdat
@_ZTINSt7__debug6vectorIiSaIiEEE = linkonce_odr constant { i8*, i8*, i32, i32, i8*, i64, i8*, i64, i8*, i64 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @_ZTSNSt7__debug6vectorIiSaIiEEE, i32 0, i32 0), i32 0, i32 3, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11__gnu_debug15_Safe_containerINSt7__debug6vectorIiSaIiEEES3_NS_14_Safe_sequenceELb1EEE to i8*), i64 2, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64 }* @_ZTINSt9__cxx19986vectorIiSaIiEEE to i8*), i64 6146, i8* bitcast ({ i8*, i8* }* @_ZTIN11__gnu_debug12_Safe_vectorINSt7__debug6vectorIiSaIiEEENSt9__cxx19986vectorIiS3_EEEE to i8*), i64 12290 }, comdat
@.str.4 = private unnamed_addr constant [86 x i8] c"/usr/lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/stl_algobase.h\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"__first\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"__last\00", align 1
@_ZTIPm = external constant i8*
@_ZTSNSt9__cxx199819_Bit_const_iteratorE = linkonce_odr constant [36 x i8] c"NSt9__cxx199819_Bit_const_iteratorE\00", comdat
@_ZTSNSt9__cxx199818_Bit_iterator_baseE = linkonce_odr constant [35 x i8] c"NSt9__cxx199818_Bit_iterator_baseE\00", comdat
@_ZTSSt8iteratorISt26random_access_iterator_tagblPbRbE = linkonce_odr constant [50 x i8] c"St8iteratorISt26random_access_iterator_tagblPbRbE\00", comdat
@_ZTISt8iteratorISt26random_access_iterator_tagblPbRbE = linkonce_odr constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @_ZTSSt8iteratorISt26random_access_iterator_tagblPbRbE, i32 0, i32 0) }, comdat
@_ZTINSt9__cxx199818_Bit_iterator_baseE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @_ZTSNSt9__cxx199818_Bit_iterator_baseE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTISt8iteratorISt26random_access_iterator_tagblPbRbE to i8*) }, comdat
@_ZTINSt9__cxx199819_Bit_const_iteratorE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @_ZTSNSt9__cxx199819_Bit_const_iteratorE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTINSt9__cxx199818_Bit_iterator_baseE to i8*) }, comdat
@_ZTSNSt7__debug6vectorINS0_IbSaIbEEESaIS2_EEE = linkonce_odr constant [42 x i8] c"NSt7__debug6vectorINS0_IbSaIbEEESaIS2_EEE\00", comdat
@_ZTSN11__gnu_debug15_Safe_containerINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEES5_NS_14_Safe_sequenceELb1EEE = linkonce_odr constant [103 x i8] c"N11__gnu_debug15_Safe_containerINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEES5_NS_14_Safe_sequenceELb1EEE\00", comdat
@_ZTSN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEEEE = linkonce_odr constant [75 x i8] c"N11__gnu_debug14_Safe_sequenceINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEEEE\00", comdat
@_ZTIN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEEEE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([75 x i8], [75 x i8]* @_ZTSN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEEEE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN11__gnu_debug19_Safe_sequence_baseE to i8*) }, comdat
@_ZTIN11__gnu_debug15_Safe_containerINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEES5_NS_14_Safe_sequenceELb1EEE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @_ZTSN11__gnu_debug15_Safe_containerINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEES5_NS_14_Safe_sequenceELb1EEE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEEEE to i8*) }, comdat
@_ZTSNSt9__cxx19986vectorINSt7__debug6vectorIbSaIbEEESaIS4_EEE = linkonce_odr constant [58 x i8] c"NSt9__cxx19986vectorINSt7__debug6vectorIbSaIbEEESaIS4_EEE\00", comdat
@_ZTSNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EEE = linkonce_odr constant [65 x i8] c"NSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EEE\00", comdat
@_ZTINSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EEE = linkonce_odr constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @_ZTSNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EEE, i32 0, i32 0) }, comdat
@_ZTINSt9__cxx19986vectorINSt7__debug6vectorIbSaIbEEESaIS4_EEE = linkonce_odr constant { i8*, i8*, i32, i32, i8*, i64 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @_ZTSNSt9__cxx19986vectorINSt7__debug6vectorIbSaIbEEESaIS4_EEE, i32 0, i32 0), i32 0, i32 1, i8* bitcast ({ i8*, i8* }* @_ZTINSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EEE to i8*), i64 0 }, comdat
@_ZTSN11__gnu_debug12_Safe_vectorINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEENSt9__cxx19986vectorIS4_S5_EEEE = linkonce_odr constant [102 x i8] c"N11__gnu_debug12_Safe_vectorINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEENSt9__cxx19986vectorIS4_S5_EEEE\00", comdat
@_ZTIN11__gnu_debug12_Safe_vectorINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEENSt9__cxx19986vectorIS4_S5_EEEE = linkonce_odr constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([102 x i8], [102 x i8]* @_ZTSN11__gnu_debug12_Safe_vectorINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEENSt9__cxx19986vectorIS4_S5_EEEE, i32 0, i32 0) }, comdat
@_ZTINSt7__debug6vectorINS0_IbSaIbEEESaIS2_EEE = linkonce_odr constant { i8*, i8*, i32, i32, i8*, i64, i8*, i64, i8*, i64 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @_ZTSNSt7__debug6vectorINS0_IbSaIbEEESaIS2_EEE, i32 0, i32 0), i32 0, i32 3, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11__gnu_debug15_Safe_containerINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEES5_NS_14_Safe_sequenceELb1EEE to i8*), i64 2, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64 }* @_ZTINSt9__cxx19986vectorINSt7__debug6vectorIbSaIbEEESaIS4_EEE to i8*), i64 6146, i8* bitcast ({ i8*, i8* }* @_ZTIN11__gnu_debug12_Safe_vectorINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEENSt9__cxx19986vectorIS4_S5_EEEE to i8*), i64 12290 }, comdat
@_ZTSNSt7__debug6vectorIbSaIbEEE = linkonce_odr constant [28 x i8] c"NSt7__debug6vectorIbSaIbEEE\00", comdat
@_ZTSN11__gnu_debug15_Safe_containerINSt7__debug6vectorIbSaIbEEES3_NS_14_Safe_sequenceELb1EEE = linkonce_odr constant [89 x i8] c"N11__gnu_debug15_Safe_containerINSt7__debug6vectorIbSaIbEEES3_NS_14_Safe_sequenceELb1EEE\00", comdat
@_ZTSN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorIbSaIbEEEEE = linkonce_odr constant [61 x i8] c"N11__gnu_debug14_Safe_sequenceINSt7__debug6vectorIbSaIbEEEEE\00", comdat
@_ZTIN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorIbSaIbEEEEE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @_ZTSN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorIbSaIbEEEEE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN11__gnu_debug19_Safe_sequence_baseE to i8*) }, comdat
@_ZTIN11__gnu_debug15_Safe_containerINSt7__debug6vectorIbSaIbEEES3_NS_14_Safe_sequenceELb1EEE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @_ZTSN11__gnu_debug15_Safe_containerINSt7__debug6vectorIbSaIbEEES3_NS_14_Safe_sequenceELb1EEE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorIbSaIbEEEEE to i8*) }, comdat
@_ZTSNSt9__cxx19986vectorIbSaIbEEE = linkonce_odr constant [30 x i8] c"NSt9__cxx19986vectorIbSaIbEEE\00", comdat
@_ZTSNSt9__cxx199813_Bvector_baseISaIbEEE = linkonce_odr constant [37 x i8] c"NSt9__cxx199813_Bvector_baseISaIbEEE\00", comdat
@_ZTINSt9__cxx199813_Bvector_baseISaIbEEE = linkonce_odr constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @_ZTSNSt9__cxx199813_Bvector_baseISaIbEEE, i32 0, i32 0) }, comdat
@_ZTINSt9__cxx19986vectorIbSaIbEEE = linkonce_odr constant { i8*, i8*, i32, i32, i8*, i64 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @_ZTSNSt9__cxx19986vectorIbSaIbEEE, i32 0, i32 0), i32 0, i32 1, i8* bitcast ({ i8*, i8* }* @_ZTINSt9__cxx199813_Bvector_baseISaIbEEE to i8*), i64 0 }, comdat
@_ZTSN11__gnu_debug12_Safe_vectorINSt7__debug6vectorIbSaIbEEENSt9__cxx19986vectorIbS3_EEEE = linkonce_odr constant [86 x i8] c"N11__gnu_debug12_Safe_vectorINSt7__debug6vectorIbSaIbEEENSt9__cxx19986vectorIbS3_EEEE\00", comdat
@_ZTIN11__gnu_debug12_Safe_vectorINSt7__debug6vectorIbSaIbEEENSt9__cxx19986vectorIbS3_EEEE = linkonce_odr constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @_ZTSN11__gnu_debug12_Safe_vectorINSt7__debug6vectorIbSaIbEEENSt9__cxx19986vectorIbS3_EEEE, i32 0, i32 0) }, comdat
@_ZTINSt7__debug6vectorIbSaIbEEE = linkonce_odr constant { i8*, i8*, i32, i32, i8*, i64, i8*, i64, i8*, i64 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @_ZTSNSt7__debug6vectorIbSaIbEEE, i32 0, i32 0), i32 0, i32 3, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN11__gnu_debug15_Safe_containerINSt7__debug6vectorIbSaIbEEES3_NS_14_Safe_sequenceELb1EEE to i8*), i64 2, i8* bitcast ({ i8*, i8*, i32, i32, i8*, i64 }* @_ZTINSt9__cxx19986vectorIbSaIbEEE to i8*), i64 6146, i8* bitcast ({ i8*, i8* }* @_ZTIN11__gnu_debug12_Safe_vectorINSt7__debug6vectorIbSaIbEEENSt9__cxx19986vectorIbS3_EEEE to i8*), i64 16386 }, comdat
@.str.7 = private unnamed_addr constant [88 x i8] c"/usr/lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/debug/safe_iterator.h\00", align 1
@_ZTSN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEE = linkonce_odr constant [123 x i8] c"N11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEE\00", comdat
@_ZTSN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEE = linkonce_odr constant [65 x i8] c"N9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEE\00", comdat
@_ZTIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEE = linkonce_odr constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @_ZTSN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEE, i32 0, i32 0) }, comdat
@_ZTSN11__gnu_debug19_Safe_iterator_baseE = linkonce_odr constant [37 x i8] c"N11__gnu_debug19_Safe_iterator_baseE\00", comdat
@_ZTIN11__gnu_debug19_Safe_iterator_baseE = linkonce_odr constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @_ZTSN11__gnu_debug19_Safe_iterator_baseE, i32 0, i32 0) }, comdat
@_ZTIN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEE = linkonce_odr constant { i8*, i8*, i32, i32, i8*, i64, i8*, i64 } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv121__vmi_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([123 x i8], [123 x i8]* @_ZTSN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEE, i32 0, i32 0), i32 0, i32 2, i8* bitcast ({ i8*, i8* }* @_ZTIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEE to i8*), i64 0, i8* bitcast ({ i8*, i8* }* @_ZTIN11__gnu_debug19_Safe_iterator_baseE to i8*), i64 2050 }, comdat
@.str.8 = private unnamed_addr constant [82 x i8] c"/usr/lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/stl_algo.h\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"lhs\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"rhs\00", align 1
@_ZZL18__gthread_active_pvE20__gthread_active_ptr = internal constant i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), align 8
@_ZTSN9__gnu_cxx24__concurrence_lock_errorE = linkonce_odr constant [39 x i8] c"N9__gnu_cxx24__concurrence_lock_errorE\00", comdat
@_ZTISt9exception = external constant i8*
@_ZTIN9__gnu_cxx24__concurrence_lock_errorE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @_ZTSN9__gnu_cxx24__concurrence_lock_errorE, i32 0, i32 0), i8* bitcast (i8** @_ZTISt9exception to i8*) }, comdat
@_ZTVN9__gnu_cxx24__concurrence_lock_errorE = linkonce_odr unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN9__gnu_cxx24__concurrence_lock_errorE to i8*), i8* bitcast (void (%"class.__gnu_cxx::__concurrence_lock_error"*)* @_ZN9__gnu_cxx24__concurrence_lock_errorD2Ev to i8*), i8* bitcast (void (%"class.__gnu_cxx::__concurrence_lock_error"*)* @_ZN9__gnu_cxx24__concurrence_lock_errorD0Ev to i8*), i8* bitcast (i8* (%"class.__gnu_cxx::__concurrence_lock_error"*)* @_ZNK9__gnu_cxx24__concurrence_lock_error4whatEv to i8*)] }, comdat, align 8
@_ZTVSt9exception = external unnamed_addr constant { [5 x i8*] }
@.str.11 = private unnamed_addr constant [36 x i8] c"__gnu_cxx::__concurrence_lock_error\00", align 1
@_ZTSN9__gnu_cxx26__concurrence_unlock_errorE = linkonce_odr constant [41 x i8] c"N9__gnu_cxx26__concurrence_unlock_errorE\00", comdat
@_ZTIN9__gnu_cxx26__concurrence_unlock_errorE = linkonce_odr constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @_ZTSN9__gnu_cxx26__concurrence_unlock_errorE, i32 0, i32 0), i8* bitcast (i8** @_ZTISt9exception to i8*) }, comdat
@_ZTVN9__gnu_cxx26__concurrence_unlock_errorE = linkonce_odr unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN9__gnu_cxx26__concurrence_unlock_errorE to i8*), i8* bitcast (void (%"class.__gnu_cxx::__concurrence_unlock_error"*)* @_ZN9__gnu_cxx26__concurrence_unlock_errorD2Ev to i8*), i8* bitcast (void (%"class.__gnu_cxx::__concurrence_unlock_error"*)* @_ZN9__gnu_cxx26__concurrence_unlock_errorD0Ev to i8*), i8* bitcast (i8* (%"class.__gnu_cxx::__concurrence_unlock_error"*)* @_ZNK9__gnu_cxx26__concurrence_unlock_error4whatEv to i8*)] }, comdat, align 8
@.str.12 = private unnamed_addr constant [38 x i8] c"__gnu_cxx::__concurrence_unlock_error\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"other\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s397091922.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.14 = common global i32 0
@y.15 = common global i32 0
@x.16 = common global i32 0
@y.17 = common global i32 0
@x.18 = common global i32 0
@y.19 = common global i32 0
@x.20 = common global i32 0
@y.21 = common global i32 0
@x.22 = common global i32 0
@y.23 = common global i32 0
@x.24 = common global i32 0
@y.25 = common global i32 0
@x.26 = common global i32 0
@y.27 = common global i32 0
@x.28 = common global i32 0
@y.29 = common global i32 0
@x.30 = common global i32 0
@y.31 = common global i32 0
@x.32 = common global i32 0
@y.33 = common global i32 0
@x.34 = common global i32 0
@y.35 = common global i32 0
@x.36 = common global i32 0
@y.37 = common global i32 0
@x.38 = common global i32 0
@y.39 = common global i32 0
@x.40 = common global i32 0
@y.41 = common global i32 0
@x.42 = common global i32 0
@y.43 = common global i32 0
@x.44 = common global i32 0
@y.45 = common global i32 0
@x.46 = common global i32 0
@y.47 = common global i32 0
@x.48 = common global i32 0
@y.49 = common global i32 0
@x.50 = common global i32 0
@y.51 = common global i32 0
@x.52 = common global i32 0
@y.53 = common global i32 0
@x.54 = common global i32 0
@y.55 = common global i32 0
@x.56 = common global i32 0
@y.57 = common global i32 0
@x.58 = common global i32 0
@y.59 = common global i32 0
@x.60 = common global i32 0
@y.61 = common global i32 0
@x.62 = common global i32 0
@y.63 = common global i32 0
@x.64 = common global i32 0
@y.65 = common global i32 0
@x.66 = common global i32 0
@y.67 = common global i32 0
@x.68 = common global i32 0
@y.69 = common global i32 0
@x.70 = common global i32 0
@y.71 = common global i32 0
@x.72 = common global i32 0
@y.73 = common global i32 0
@x.74 = common global i32 0
@y.75 = common global i32 0
@x.76 = common global i32 0
@y.77 = common global i32 0
@x.78 = common global i32 0
@y.79 = common global i32 0
@x.80 = common global i32 0
@y.81 = common global i32 0
@x.82 = common global i32 0
@y.83 = common global i32 0
@x.84 = common global i32 0
@y.85 = common global i32 0
@x.86 = common global i32 0
@y.87 = common global i32 0
@x.88 = common global i32 0
@y.89 = common global i32 0
@x.90 = common global i32 0
@y.91 = common global i32 0
@x.92 = common global i32 0
@y.93 = common global i32 0
@x.94 = common global i32 0
@y.95 = common global i32 0
@x.96 = common global i32 0
@y.97 = common global i32 0
@x.98 = common global i32 0
@y.99 = common global i32 0
@x.100 = common global i32 0
@y.101 = common global i32 0
@x.102 = common global i32 0
@y.103 = common global i32 0
@x.104 = common global i32 0
@y.105 = common global i32 0
@x.106 = common global i32 0
@y.107 = common global i32 0
@x.108 = common global i32 0
@y.109 = common global i32 0
@x.110 = common global i32 0
@y.111 = common global i32 0
@x.112 = common global i32 0
@y.113 = common global i32 0
@x.114 = common global i32 0
@y.115 = common global i32 0
@x.116 = common global i32 0
@y.117 = common global i32 0
@x.118 = common global i32 0
@y.119 = common global i32 0
@x.120 = common global i32 0
@y.121 = common global i32 0
@x.122 = common global i32 0
@y.123 = common global i32 0
@x.124 = common global i32 0
@y.125 = common global i32 0
@x.126 = common global i32 0
@y.127 = common global i32 0
@x.128 = common global i32 0
@y.129 = common global i32 0
@x.130 = common global i32 0
@y.131 = common global i32 0
@x.132 = common global i32 0
@y.133 = common global i32 0
@x.134 = common global i32 0
@y.135 = common global i32 0
@x.136 = common global i32 0
@y.137 = common global i32 0
@x.138 = common global i32 0
@y.139 = common global i32 0
@x.140 = common global i32 0
@y.141 = common global i32 0
@x.142 = common global i32 0
@y.143 = common global i32 0
@x.144 = common global i32 0
@y.145 = common global i32 0
@x.146 = common global i32 0
@y.147 = common global i32 0
@x.148 = common global i32 0
@y.149 = common global i32 0
@x.150 = common global i32 0
@y.151 = common global i32 0
@x.152 = common global i32 0
@y.153 = common global i32 0
@x.154 = common global i32 0
@y.155 = common global i32 0
@x.156 = common global i32 0
@y.157 = common global i32 0
@x.158 = common global i32 0
@y.159 = common global i32 0
@x.160 = common global i32 0
@y.161 = common global i32 0
@x.162 = common global i32 0
@y.163 = common global i32 0
@x.164 = common global i32 0
@y.165 = common global i32 0
@x.166 = common global i32 0
@y.167 = common global i32 0
@x.168 = common global i32 0
@y.169 = common global i32 0
@x.170 = common global i32 0
@y.171 = common global i32 0
@x.172 = common global i32 0
@y.173 = common global i32 0
@x.174 = common global i32 0
@y.175 = common global i32 0
@x.176 = common global i32 0
@y.177 = common global i32 0
@x.178 = common global i32 0
@y.179 = common global i32 0
@x.180 = common global i32 0
@y.181 = common global i32 0
@x.182 = common global i32 0
@y.183 = common global i32 0
@x.184 = common global i32 0
@y.185 = common global i32 0
@x.186 = common global i32 0
@y.187 = common global i32 0
@x.188 = common global i32 0
@y.189 = common global i32 0
@x.190 = common global i32 0
@y.191 = common global i32 0
@x.192 = common global i32 0
@y.193 = common global i32 0
@x.194 = common global i32 0
@y.195 = common global i32 0
@x.196 = common global i32 0
@y.197 = common global i32 0
@x.198 = common global i32 0
@y.199 = common global i32 0
@x.200 = common global i32 0
@y.201 = common global i32 0
@x.202 = common global i32 0
@y.203 = common global i32 0
@x.204 = common global i32 0
@y.205 = common global i32 0
@x.206 = common global i32 0
@y.207 = common global i32 0
@x.208 = common global i32 0
@y.209 = common global i32 0
@x.210 = common global i32 0
@y.211 = common global i32 0
@x.212 = common global i32 0
@y.213 = common global i32 0
@x.214 = common global i32 0
@y.215 = common global i32 0
@x.216 = common global i32 0
@y.217 = common global i32 0
@x.218 = common global i32 0
@y.219 = common global i32 0
@x.220 = common global i32 0
@y.221 = common global i32 0
@x.222 = common global i32 0
@y.223 = common global i32 0
@x.224 = common global i32 0
@y.225 = common global i32 0
@x.226 = common global i32 0
@y.227 = common global i32 0
@x.228 = common global i32 0
@y.229 = common global i32 0
@x.230 = common global i32 0
@y.231 = common global i32 0
@x.232 = common global i32 0
@y.233 = common global i32 0
@x.234 = common global i32 0
@y.235 = common global i32 0
@x.236 = common global i32 0
@y.237 = common global i32 0
@x.238 = common global i32 0
@y.239 = common global i32 0
@x.240 = common global i32 0
@y.241 = common global i32 0
@x.242 = common global i32 0
@y.243 = common global i32 0
@x.244 = common global i32 0
@y.245 = common global i32 0
@x.246 = common global i32 0
@y.247 = common global i32 0
@x.248 = common global i32 0
@y.249 = common global i32 0
@x.250 = common global i32 0
@y.251 = common global i32 0
@x.252 = common global i32 0
@y.253 = common global i32 0
@x.254 = common global i32 0
@y.255 = common global i32 0
@x.256 = common global i32 0
@y.257 = common global i32 0
@x.258 = common global i32 0
@y.259 = common global i32 0
@x.260 = common global i32 0
@y.261 = common global i32 0
@x.262 = common global i32 0
@y.263 = common global i32 0
@x.264 = common global i32 0
@y.265 = common global i32 0
@x.266 = common global i32 0
@y.267 = common global i32 0
@x.268 = common global i32 0
@y.269 = common global i32 0
@x.270 = common global i32 0
@y.271 = common global i32 0
@x.272 = common global i32 0
@y.273 = common global i32 0
@x.274 = common global i32 0
@y.275 = common global i32 0
@x.276 = common global i32 0
@y.277 = common global i32 0
@x.278 = common global i32 0
@y.279 = common global i32 0
@x.280 = common global i32 0
@y.281 = common global i32 0
@x.282 = common global i32 0
@y.283 = common global i32 0
@x.284 = common global i32 0
@y.285 = common global i32 0
@x.286 = common global i32 0
@y.287 = common global i32 0
@x.288 = common global i32 0
@y.289 = common global i32 0
@x.290 = common global i32 0
@y.291 = common global i32 0
@x.292 = common global i32 0
@y.293 = common global i32 0
@x.294 = common global i32 0
@y.295 = common global i32 0
@x.296 = common global i32 0
@y.297 = common global i32 0
@x.298 = common global i32 0
@y.299 = common global i32 0
@x.300 = common global i32 0
@y.301 = common global i32 0
@x.302 = common global i32 0
@y.303 = common global i32 0
@x.304 = common global i32 0
@y.305 = common global i32 0
@x.306 = common global i32 0
@y.307 = common global i32 0
@x.308 = common global i32 0
@y.309 = common global i32 0
@x.310 = common global i32 0
@y.311 = common global i32 0
@x.312 = common global i32 0
@y.313 = common global i32 0
@x.314 = common global i32 0
@y.315 = common global i32 0
@x.316 = common global i32 0
@y.317 = common global i32 0
@x.318 = common global i32 0
@y.319 = common global i32 0
@x.320 = common global i32 0
@y.321 = common global i32 0
@x.322 = common global i32 0
@y.323 = common global i32 0
@x.324 = common global i32 0
@y.325 = common global i32 0
@x.326 = common global i32 0
@y.327 = common global i32 0
@x.328 = common global i32 0
@y.329 = common global i32 0
@x.330 = common global i32 0
@y.331 = common global i32 0
@x.332 = common global i32 0
@y.333 = common global i32 0
@x.334 = common global i32 0
@y.335 = common global i32 0
@x.336 = common global i32 0
@y.337 = common global i32 0
@x.338 = common global i32 0
@y.339 = common global i32 0
@x.340 = common global i32 0
@y.341 = common global i32 0
@x.342 = common global i32 0
@y.343 = common global i32 0
@x.344 = common global i32 0
@y.345 = common global i32 0
@x.346 = common global i32 0
@y.347 = common global i32 0
@x.348 = common global i32 0
@y.349 = common global i32 0
@x.350 = common global i32 0
@y.351 = common global i32 0
@x.352 = common global i32 0
@y.353 = common global i32 0
@x.354 = common global i32 0
@y.355 = common global i32 0
@x.356 = common global i32 0
@y.357 = common global i32 0
@x.358 = common global i32 0
@y.359 = common global i32 0
@x.360 = common global i32 0
@y.361 = common global i32 0
@x.362 = common global i32 0
@y.363 = common global i32 0
@x.364 = common global i32 0
@y.365 = common global i32 0
@x.366 = common global i32 0
@y.367 = common global i32 0
@x.368 = common global i32 0
@y.369 = common global i32 0
@x.370 = common global i32 0
@y.371 = common global i32 0
@x.372 = common global i32 0
@y.373 = common global i32 0
@x.374 = common global i32 0
@y.375 = common global i32 0
@x.376 = common global i32 0
@y.377 = common global i32 0
@x.378 = common global i32 0
@y.379 = common global i32 0
@x.380 = common global i32 0
@y.381 = common global i32 0
@x.382 = common global i32 0
@y.383 = common global i32 0
@x.384 = common global i32 0
@y.385 = common global i32 0
@x.386 = common global i32 0
@y.387 = common global i32 0
@x.388 = common global i32 0
@y.389 = common global i32 0
@x.390 = common global i32 0
@y.391 = common global i32 0
@x.392 = common global i32 0
@y.393 = common global i32 0
@x.394 = common global i32 0
@y.395 = common global i32 0
@x.396 = common global i32 0
@y.397 = common global i32 0
@x.398 = common global i32 0
@y.399 = common global i32 0
@x.400 = common global i32 0
@y.401 = common global i32 0
@x.402 = common global i32 0
@y.403 = common global i32 0
@x.404 = common global i32 0
@y.405 = common global i32 0
@x.406 = common global i32 0
@y.407 = common global i32 0
@x.408 = common global i32 0
@y.409 = common global i32 0
@x.410 = common global i32 0
@y.411 = common global i32 0
@x.412 = common global i32 0
@y.413 = common global i32 0
@x.414 = common global i32 0
@y.415 = common global i32 0
@x.416 = common global i32 0
@y.417 = common global i32 0
@x.418 = common global i32 0
@y.419 = common global i32 0
@x.420 = common global i32 0
@y.421 = common global i32 0
@x.422 = common global i32 0
@y.423 = common global i32 0
@x.424 = common global i32 0
@y.425 = common global i32 0
@x.426 = common global i32 0
@y.427 = common global i32 0
@x.428 = common global i32 0
@y.429 = common global i32 0
@x.430 = common global i32 0
@y.431 = common global i32 0
@x.432 = common global i32 0
@y.433 = common global i32 0
@x.434 = common global i32 0
@y.435 = common global i32 0
@x.436 = common global i32 0
@y.437 = common global i32 0
@x.438 = common global i32 0
@y.439 = common global i32 0
@x.440 = common global i32 0
@y.441 = common global i32 0
@x.442 = common global i32 0
@y.443 = common global i32 0
@x.444 = common global i32 0
@y.445 = common global i32 0
@x.446 = common global i32 0
@y.447 = common global i32 0
@x.448 = common global i32 0
@y.449 = common global i32 0
@x.450 = common global i32 0
@y.451 = common global i32 0
@x.452 = common global i32 0
@y.453 = common global i32 0
@x.454 = common global i32 0
@y.455 = common global i32 0
@x.456 = common global i32 0
@y.457 = common global i32 0
@x.458 = common global i32 0
@y.459 = common global i32 0
@x.460 = common global i32 0
@y.461 = common global i32 0
@x.462 = common global i32 0
@y.463 = common global i32 0
@x.464 = common global i32 0
@y.465 = common global i32 0
@x.466 = common global i32 0
@y.467 = common global i32 0
@x.468 = common global i32 0
@y.469 = common global i32 0
@x.470 = common global i32 0
@y.471 = common global i32 0
@x.472 = common global i32 0
@y.473 = common global i32 0
@x.474 = common global i32 0
@y.475 = common global i32 0
@x.476 = common global i32 0
@y.477 = common global i32 0
@x.478 = common global i32 0
@y.479 = common global i32 0
@x.480 = common global i32 0
@y.481 = common global i32 0
@x.482 = common global i32 0
@y.483 = common global i32 0
@x.484 = common global i32 0
@y.485 = common global i32 0
@x.486 = common global i32 0
@y.487 = common global i32 0
@x.488 = common global i32 0
@y.489 = common global i32 0
@x.490 = common global i32 0
@y.491 = common global i32 0
@x.492 = common global i32 0
@y.493 = common global i32 0
@x.494 = common global i32 0
@y.495 = common global i32 0
@x.496 = common global i32 0
@y.497 = common global i32 0
@x.498 = common global i32 0
@y.499 = common global i32 0
@x.500 = common global i32 0
@y.501 = common global i32 0
@x.502 = common global i32 0
@y.503 = common global i32 0
@x.504 = common global i32 0
@y.505 = common global i32 0
@x.506 = common global i32 0
@y.507 = common global i32 0
@x.508 = common global i32 0
@y.509 = common global i32 0
@x.510 = common global i32 0
@y.511 = common global i32 0
@x.512 = common global i32 0
@y.513 = common global i32 0
@x.514 = common global i32 0
@y.515 = common global i32 0
@x.516 = common global i32 0
@y.517 = common global i32 0
@x.518 = common global i32 0
@y.519 = common global i32 0
@x.520 = common global i32 0
@y.521 = common global i32 0
@x.522 = common global i32 0
@y.523 = common global i32 0
@x.524 = common global i32 0
@y.525 = common global i32 0
@x.526 = common global i32 0
@y.527 = common global i32 0
@x.528 = common global i32 0
@y.529 = common global i32 0
@x.530 = common global i32 0
@y.531 = common global i32 0
@x.532 = common global i32 0
@y.533 = common global i32 0
@x.534 = common global i32 0
@y.535 = common global i32 0
@x.536 = common global i32 0
@y.537 = common global i32 0
@x.538 = common global i32 0
@y.539 = common global i32 0
@x.540 = common global i32 0
@y.541 = common global i32 0
@x.542 = common global i32 0
@y.543 = common global i32 0
@x.544 = common global i32 0
@y.545 = common global i32 0
@x.546 = common global i32 0
@y.547 = common global i32 0
@x.548 = common global i32 0
@y.549 = common global i32 0
@x.550 = common global i32 0
@y.551 = common global i32 0
@x.552 = common global i32 0
@y.553 = common global i32 0
@x.554 = common global i32 0
@y.555 = common global i32 0
@x.556 = common global i32 0
@y.557 = common global i32 0
@x.558 = common global i32 0
@y.559 = common global i32 0
@x.560 = common global i32 0
@y.561 = common global i32 0
@x.562 = common global i32 0
@y.563 = common global i32 0
@x.564 = common global i32 0
@y.565 = common global i32 0
@x.566 = common global i32 0
@y.567 = common global i32 0
@x.568 = common global i32 0
@y.569 = common global i32 0
@x.570 = common global i32 0
@y.571 = common global i32 0
@x.572 = common global i32 0
@y.573 = common global i32 0
@x.574 = common global i32 0
@y.575 = common global i32 0
@x.576 = common global i32 0
@y.577 = common global i32 0
@x.578 = common global i32 0
@y.579 = common global i32 0
@x.580 = common global i32 0
@y.581 = common global i32 0
@x.582 = common global i32 0
@y.583 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline uwtable
define void @_Z5solvev() #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = load i32, i32* @x.14
  %2 = load i32, i32* @y.15
  %3 = add i32 %1, 54626007
  %4 = sub i32 %3, 1
  %5 = sub i32 %4, 54626007
  %6 = sub i32 %1, 1
  %7 = mul i32 %1, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %2, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %906

; <label>:15:                                     ; preds = %0, %906
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %"class.std::__debug::vector", align 8
  %19 = alloca %"class.std::allocator", align 1
  %20 = alloca i8*
  %21 = alloca i32
  %22 = alloca %"class.std::__debug::vector", align 8
  %23 = alloca %"class.std::allocator", align 1
  %24 = alloca i32, align 4
  %25 = alloca %"class.std::__debug::vector.0", align 8
  %26 = alloca %"class.std::__debug::vector.10", align 8
  %27 = alloca i8, align 1
  %28 = alloca %"class.std::allocator.21", align 1
  %29 = alloca %"class.std::allocator.7", align 1
  %30 = alloca i32, align 4
  %31 = alloca %"struct.std::__cxx1998::_Bit_reference", align 8
  %32 = alloca %"struct.std::__cxx1998::_Bit_reference", align 8
  %33 = alloca %"class.std::__debug::vector", align 8
  %34 = alloca %"class.std::allocator", align 1
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i8, align 1
  %38 = alloca i32, align 4
  %39 = alloca %"struct.std::__cxx1998::_Bit_reference", align 8
  %40 = alloca %"class.__gnu_debug::_Safe_iterator", align 8
  %41 = alloca %"class.__gnu_debug::_Safe_iterator", align 8
  %42 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %16)
  %43 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %42, i32* dereferenceable(4) %17)
  %44 = load i32, i32* %17, align 4
  %45 = sext i32 %44 to i64
  call void @_ZNSaIiEC2Ev(%"class.std::allocator"* %19) #3
  %46 = load i32, i32* @x.14
  %47 = load i32, i32* @y.15
  %48 = add i32 %46, 1774656765
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, 1774656765
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  br i1 %58, label %60, label %906

; <label>:60:                                     ; preds = %15
  invoke void @_ZNSt7__debug6vectorIiSaIiEEC2EmRKS1_(%"class.std::__debug::vector"* %18, i64 %45, %"class.std::allocator"* dereferenceable(1) %19)
          to label %61 unwind label %140

; <label>:61:                                     ; preds = %60
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %19) #3
  %62 = load i32, i32* %17, align 4
  %63 = sext i32 %62 to i64
  call void @_ZNSaIiEC2Ev(%"class.std::allocator"* %23) #3
  invoke void @_ZNSt7__debug6vectorIiSaIiEEC2EmRKS1_(%"class.std::__debug::vector"* %22, i64 %63, %"class.std::allocator"* dereferenceable(1) %23)
          to label %64 unwind label %144

; <label>:64:                                     ; preds = %61
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %23) #3
  store i32 0, i32* %24, align 4
  br label %65

; <label>:65:                                     ; preds = %133, %64
  %66 = load i32, i32* %24, align 4
  %67 = load i32, i32* %17, align 4
  %68 = icmp slt i32 %66, %67
  br i1 %68, label %69, label %152

; <label>:69:                                     ; preds = %65
  %70 = load i32, i32* %24, align 4
  %71 = sext i32 %70 to i64
  %72 = call dereferenceable(4) i32* @_ZNSt7__debug6vectorIiSaIiEEixEm(%"class.std::__debug::vector"* %18, i64 %71) #3
  %73 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %72)
          to label %74 unwind label %148

; <label>:74:                                     ; preds = %69
  %75 = load i32, i32* @x.14
  %76 = load i32, i32* @y.15
  %77 = sub i32 0, 1
  %78 = add i32 %75, %77
  %79 = sub i32 %75, 1
  %80 = mul i32 %75, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %76, 10
  %84 = xor i1 %82, true
  %85 = xor i1 %83, true
  %86 = xor i1 false, true
  %87 = and i1 %84, false
  %88 = and i1 %82, %86
  %89 = and i1 %85, false
  %90 = and i1 %83, %86
  %91 = or i1 %87, %88
  %92 = or i1 %89, %90
  %93 = xor i1 %91, %92
  %94 = or i1 %84, %85
  %95 = xor i1 %94, true
  %96 = or i1 false, %86
  %97 = and i1 %95, %96
  %98 = or i1 %93, %97
  %99 = or i1 %82, %83
  br i1 %98, label %100, label %937

; <label>:100:                                    ; preds = %74, %937
  %101 = load i32, i32* %24, align 4
  %102 = sext i32 %101 to i64
  %103 = call dereferenceable(4) i32* @_ZNSt7__debug6vectorIiSaIiEEixEm(%"class.std::__debug::vector"* %22, i64 %102) #3
  %104 = load i32, i32* @x.14
  %105 = load i32, i32* @y.15
  %106 = sub i32 %104, -1586114862
  %107 = sub i32 %106, 1
  %108 = add i32 %107, -1586114862
  %109 = sub i32 %104, 1
  %110 = mul i32 %104, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %105, 10
  %114 = xor i1 %112, true
  %115 = xor i1 %113, true
  %116 = xor i1 false, true
  %117 = and i1 %114, false
  %118 = and i1 %112, %116
  %119 = and i1 %115, false
  %120 = and i1 %113, %116
  %121 = or i1 %117, %118
  %122 = or i1 %119, %120
  %123 = xor i1 %121, %122
  %124 = or i1 %114, %115
  %125 = xor i1 %124, true
  %126 = or i1 false, %116
  %127 = and i1 %125, %126
  %128 = or i1 %123, %127
  %129 = or i1 %112, %113
  br i1 %128, label %130, label %937

; <label>:130:                                    ; preds = %100
  %131 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %73, i32* dereferenceable(4) %103)
          to label %132 unwind label %148

; <label>:132:                                    ; preds = %130
  br label %133

; <label>:133:                                    ; preds = %132
  %134 = load i32, i32* %24, align 4
  %135 = sub i32 0, %134
  %136 = sub i32 0, 1
  %137 = add i32 %135, %136
  %138 = sub i32 0, %137
  %139 = add nsw i32 %134, 1
  store i32 %138, i32* %24, align 4
  br label %65

; <label>:140:                                    ; preds = %60
  %141 = landingpad { i8*, i32 }
          cleanup
  %142 = extractvalue { i8*, i32 } %141, 0
  store i8* %142, i8** %20, align 8
  %143 = extractvalue { i8*, i32 } %141, 1
  store i32 %143, i32* %21, align 4
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %19) #3
  br label %860

; <label>:144:                                    ; preds = %61
  %145 = landingpad { i8*, i32 }
          cleanup
  %146 = extractvalue { i8*, i32 } %145, 0
  store i8* %146, i8** %20, align 8
  %147 = extractvalue { i8*, i32 } %145, 1
  store i32 %147, i32* %21, align 4
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %23) #3
  br label %859

; <label>:148:                                    ; preds = %130, %69
  %149 = landingpad { i8*, i32 }
          cleanup
  %150 = extractvalue { i8*, i32 } %149, 0
  store i8* %150, i8** %20, align 8
  %151 = extractvalue { i8*, i32 } %149, 1
  store i32 %151, i32* %21, align 4
  br label %858

; <label>:152:                                    ; preds = %65
  %153 = load i32, i32* %16, align 4
  %154 = sext i32 %153 to i64
  %155 = load i32, i32* %16, align 4
  %156 = sext i32 %155 to i64
  store i8 0, i8* %27, align 1
  call void @_ZNSaIbEC2Ev(%"class.std::allocator.21"* %28) #3
  invoke void @_ZNSt7__debug6vectorIbSaIbEEC2EmRKbRKS1_(%"class.std::__debug::vector.10"* %26, i64 %156, i8* dereferenceable(1) %27, %"class.std::allocator.21"* dereferenceable(1) %28)
          to label %157 unwind label %331

; <label>:157:                                    ; preds = %152
  call void @_ZNSaINSt7__debug6vectorIbSaIbEEEEC2Ev(%"class.std::allocator.7"* %29) #3
  invoke void @_ZNSt7__debug6vectorINS0_IbSaIbEEESaIS2_EEC2EmRKS2_RKS3_(%"class.std::__debug::vector.0"* %25, i64 %154, %"class.std::__debug::vector.10"* dereferenceable(72) %26, %"class.std::allocator.7"* dereferenceable(1) %29)
          to label %158 unwind label %335

; <label>:158:                                    ; preds = %157
  %159 = load i32, i32* @x.14
  %160 = load i32, i32* @y.15
  %161 = sub i32 0, 1
  %162 = add i32 %159, %161
  %163 = sub i32 %159, 1
  %164 = mul i32 %159, %162
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %160, 10
  %168 = and i1 %166, %167
  %169 = xor i1 %166, %167
  %170 = or i1 %168, %169
  %171 = or i1 %166, %167
  br i1 %170, label %172, label %941

; <label>:172:                                    ; preds = %158, %941
  call void @_ZNSaINSt7__debug6vectorIbSaIbEEEED2Ev(%"class.std::allocator.7"* %29) #3
  call void @_ZNSt7__debug6vectorIbSaIbEED2Ev(%"class.std::__debug::vector.10"* %26) #3
  call void @_ZNSaIbED2Ev(%"class.std::allocator.21"* %28) #3
  store i32 0, i32* %30, align 4
  %173 = load i32, i32* @x.14
  %174 = load i32, i32* @y.15
  %175 = sub i32 %173, 116178818
  %176 = sub i32 %175, 1
  %177 = add i32 %176, 116178818
  %178 = sub i32 %173, 1
  %179 = mul i32 %173, %177
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %174, 10
  %183 = xor i1 %181, true
  %184 = xor i1 %182, true
  %185 = xor i1 false, true
  %186 = and i1 %183, false
  %187 = and i1 %181, %185
  %188 = and i1 %184, false
  %189 = and i1 %182, %185
  %190 = or i1 %186, %187
  %191 = or i1 %188, %189
  %192 = xor i1 %190, %191
  %193 = or i1 %183, %184
  %194 = xor i1 %193, true
  %195 = or i1 false, %185
  %196 = and i1 %194, %195
  %197 = or i1 %192, %196
  %198 = or i1 %181, %182
  br i1 %197, label %199, label %941

; <label>:199:                                    ; preds = %172
  br label %200

; <label>:200:                                    ; preds = %330, %199
  %201 = load i32, i32* %30, align 4
  %202 = load i32, i32* %17, align 4
  %203 = icmp slt i32 %201, %202
  br i1 %203, label %204, label %370

; <label>:204:                                    ; preds = %200
  %205 = load i32, i32* @x.14
  %206 = load i32, i32* @y.15
  %207 = sub i32 0, 1
  %208 = add i32 %205, %207
  %209 = sub i32 %205, 1
  %210 = mul i32 %205, %208
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %206, 10
  %214 = and i1 %212, %213
  %215 = xor i1 %212, %213
  %216 = or i1 %214, %215
  %217 = or i1 %212, %213
  br i1 %216, label %218, label %942

; <label>:218:                                    ; preds = %204, %942
  %219 = load i32, i32* %30, align 4
  %220 = sext i32 %219 to i64
  %221 = call dereferenceable(4) i32* @_ZNSt7__debug6vectorIiSaIiEEixEm(%"class.std::__debug::vector"* %18, i64 %220) #3
  %222 = load i32, i32* %221, align 4
  %223 = sub i32 0, 1
  %224 = add i32 %222, %223
  %225 = sub nsw i32 %222, 1
  %226 = sext i32 %224 to i64
  %227 = call dereferenceable(72) %"class.std::__debug::vector.10"* @_ZNSt7__debug6vectorINS0_IbSaIbEEESaIS2_EEixEm(%"class.std::__debug::vector.0"* %25, i64 %226) #3
  %228 = load i32, i32* %30, align 4
  %229 = sext i32 %228 to i64
  %230 = call dereferenceable(4) i32* @_ZNSt7__debug6vectorIiSaIiEEixEm(%"class.std::__debug::vector"* %22, i64 %229) #3
  %231 = load i32, i32* %230, align 4
  %232 = sub i32 0, 1
  %233 = add i32 %231, %232
  %234 = sub nsw i32 %231, 1
  %235 = sext i32 %233 to i64
  %236 = call { i64*, i64 } @_ZNSt7__debug6vectorIbSaIbEEixEm(%"class.std::__debug::vector.10"* %227, i64 %235) #3
  %237 = bitcast %"struct.std::__cxx1998::_Bit_reference"* %31 to { i64*, i64 }*
  %238 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %237, i32 0, i32 0
  %239 = extractvalue { i64*, i64 } %236, 0
  store i64* %239, i64** %238, align 8
  %240 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %237, i32 0, i32 1
  %241 = extractvalue { i64*, i64 } %236, 1
  store i64 %241, i64* %240, align 8
  %242 = call dereferenceable(16) %"struct.std::__cxx1998::_Bit_reference"* @_ZNSt9__cxx199814_Bit_referenceaSEb(%"struct.std::__cxx1998::_Bit_reference"* %31, i1 zeroext true) #3
  %243 = load i32, i32* %30, align 4
  %244 = sext i32 %243 to i64
  %245 = call dereferenceable(4) i32* @_ZNSt7__debug6vectorIiSaIiEEixEm(%"class.std::__debug::vector"* %22, i64 %244) #3
  %246 = load i32, i32* %245, align 4
  %247 = add i32 %246, 1766119864
  %248 = sub i32 %247, 1
  %249 = sub i32 %248, 1766119864
  %250 = sub nsw i32 %246, 1
  %251 = sext i32 %249 to i64
  %252 = call dereferenceable(72) %"class.std::__debug::vector.10"* @_ZNSt7__debug6vectorINS0_IbSaIbEEESaIS2_EEixEm(%"class.std::__debug::vector.0"* %25, i64 %251) #3
  %253 = load i32, i32* %30, align 4
  %254 = sext i32 %253 to i64
  %255 = call dereferenceable(4) i32* @_ZNSt7__debug6vectorIiSaIiEEixEm(%"class.std::__debug::vector"* %18, i64 %254) #3
  %256 = load i32, i32* %255, align 4
  %257 = add i32 %256, 181892933
  %258 = sub i32 %257, 1
  %259 = sub i32 %258, 181892933
  %260 = sub nsw i32 %256, 1
  %261 = sext i32 %259 to i64
  %262 = call { i64*, i64 } @_ZNSt7__debug6vectorIbSaIbEEixEm(%"class.std::__debug::vector.10"* %252, i64 %261) #3
  %263 = bitcast %"struct.std::__cxx1998::_Bit_reference"* %32 to { i64*, i64 }*
  %264 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %263, i32 0, i32 0
  %265 = extractvalue { i64*, i64 } %262, 0
  store i64* %265, i64** %264, align 8
  %266 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %263, i32 0, i32 1
  %267 = extractvalue { i64*, i64 } %262, 1
  store i64 %267, i64* %266, align 8
  %268 = call dereferenceable(16) %"struct.std::__cxx1998::_Bit_reference"* @_ZNSt9__cxx199814_Bit_referenceaSEb(%"struct.std::__cxx1998::_Bit_reference"* %32, i1 zeroext true) #3
  %269 = load i32, i32* @x.14
  %270 = load i32, i32* @y.15
  %271 = add i32 %269, 1949375453
  %272 = sub i32 %271, 1
  %273 = sub i32 %272, 1949375453
  %274 = sub i32 %269, 1
  %275 = mul i32 %269, %273
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %270, 10
  %279 = xor i1 %277, true
  %280 = xor i1 %278, true
  %281 = xor i1 false, true
  %282 = and i1 %279, false
  %283 = and i1 %277, %281
  %284 = and i1 %280, false
  %285 = and i1 %278, %281
  %286 = or i1 %282, %283
  %287 = or i1 %284, %285
  %288 = xor i1 %286, %287
  %289 = or i1 %279, %280
  %290 = xor i1 %289, true
  %291 = or i1 false, %281
  %292 = and i1 %290, %291
  %293 = or i1 %288, %292
  %294 = or i1 %277, %278
  br i1 %293, label %295, label %942

; <label>:295:                                    ; preds = %218
  br label %296

; <label>:296:                                    ; preds = %295
  %297 = load i32, i32* @x.14
  %298 = load i32, i32* @y.15
  %299 = add i32 %297, -806803206
  %300 = sub i32 %299, 1
  %301 = sub i32 %300, -806803206
  %302 = sub i32 %297, 1
  %303 = mul i32 %297, %301
  %304 = urem i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %298, 10
  %307 = and i1 %305, %306
  %308 = xor i1 %305, %306
  %309 = or i1 %307, %308
  %310 = or i1 %305, %306
  br i1 %309, label %311, label %1094

; <label>:311:                                    ; preds = %296, %1094
  %312 = load i32, i32* %30, align 4
  %313 = sub i32 0, 1
  %314 = sub i32 %312, %313
  %315 = add nsw i32 %312, 1
  store i32 %314, i32* %30, align 4
  %316 = load i32, i32* @x.14
  %317 = load i32, i32* @y.15
  %318 = sub i32 %316, -940217280
  %319 = sub i32 %318, 1
  %320 = add i32 %319, -940217280
  %321 = sub i32 %316, 1
  %322 = mul i32 %316, %320
  %323 = urem i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %317, 10
  %326 = and i1 %324, %325
  %327 = xor i1 %324, %325
  %328 = or i1 %326, %327
  %329 = or i1 %324, %325
  br i1 %328, label %330, label %1094

; <label>:330:                                    ; preds = %311
  br label %200

; <label>:331:                                    ; preds = %152
  %332 = landingpad { i8*, i32 }
          cleanup
  %333 = extractvalue { i8*, i32 } %332, 0
  store i8* %333, i8** %20, align 8
  %334 = extractvalue { i8*, i32 } %332, 1
  store i32 %334, i32* %21, align 4
  br label %369

; <label>:335:                                    ; preds = %157
  %336 = load i32, i32* @x.14
  %337 = load i32, i32* @y.15
  %338 = sub i32 %336, 1286790617
  %339 = sub i32 %338, 1
  %340 = add i32 %339, 1286790617
  %341 = sub i32 %336, 1
  %342 = mul i32 %336, %340
  %343 = urem i32 %342, 2
  %344 = icmp eq i32 %343, 0
  %345 = icmp slt i32 %337, 10
  %346 = and i1 %344, %345
  %347 = xor i1 %344, %345
  %348 = or i1 %346, %347
  %349 = or i1 %344, %345
  br i1 %348, label %350, label %1115

; <label>:350:                                    ; preds = %335, %1115
  %351 = landingpad { i8*, i32 }
          cleanup
  %352 = extractvalue { i8*, i32 } %351, 0
  store i8* %352, i8** %20, align 8
  %353 = extractvalue { i8*, i32 } %351, 1
  store i32 %353, i32* %21, align 4
  call void @_ZNSaINSt7__debug6vectorIbSaIbEEEED2Ev(%"class.std::allocator.7"* %29) #3
  call void @_ZNSt7__debug6vectorIbSaIbEED2Ev(%"class.std::__debug::vector.10"* %26) #3
  %354 = load i32, i32* @x.14
  %355 = load i32, i32* @y.15
  %356 = sub i32 %354, -321605699
  %357 = sub i32 %356, 1
  %358 = add i32 %357, -321605699
  %359 = sub i32 %354, 1
  %360 = mul i32 %354, %358
  %361 = urem i32 %360, 2
  %362 = icmp eq i32 %361, 0
  %363 = icmp slt i32 %355, 10
  %364 = and i1 %362, %363
  %365 = xor i1 %362, %363
  %366 = or i1 %364, %365
  %367 = or i1 %362, %363
  br i1 %366, label %368, label %1115

; <label>:368:                                    ; preds = %350
  br label %369

; <label>:369:                                    ; preds = %368, %331
  call void @_ZNSaIbED2Ev(%"class.std::allocator.21"* %28) #3
  br label %858

; <label>:370:                                    ; preds = %200
  %371 = load i32, i32* %16, align 4
  %372 = sext i32 %371 to i64
  call void @_ZNSaIiEC2Ev(%"class.std::allocator"* %34) #3
  invoke void @_ZNSt7__debug6vectorIiSaIiEEC2EmRKS1_(%"class.std::__debug::vector"* %33, i64 %372, %"class.std::allocator"* dereferenceable(1) %34)
          to label %373 unwind label %388

; <label>:373:                                    ; preds = %370
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %34) #3
  store i32 0, i32* %35, align 4
  br label %374

; <label>:374:                                    ; preds = %383, %373
  %375 = load i32, i32* %35, align 4
  %376 = load i32, i32* %16, align 4
  %377 = icmp slt i32 %375, %376
  br i1 %377, label %378, label %392

; <label>:378:                                    ; preds = %374
  %379 = load i32, i32* %35, align 4
  %380 = load i32, i32* %35, align 4
  %381 = sext i32 %380 to i64
  %382 = call dereferenceable(4) i32* @_ZNSt7__debug6vectorIiSaIiEEixEm(%"class.std::__debug::vector"* %33, i64 %381) #3
  store i32 %379, i32* %382, align 4
  br label %383

; <label>:383:                                    ; preds = %378
  %384 = load i32, i32* %35, align 4
  %385 = sub i32 0, 1
  %386 = sub i32 %384, %385
  %387 = add nsw i32 %384, 1
  store i32 %386, i32* %35, align 4
  br label %374

; <label>:388:                                    ; preds = %370
  %389 = landingpad { i8*, i32 }
          cleanup
  %390 = extractvalue { i8*, i32 } %389, 0
  store i8* %390, i8** %20, align 8
  %391 = extractvalue { i8*, i32 } %389, 1
  store i32 %391, i32* %21, align 4
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %34) #3
  br label %857

; <label>:392:                                    ; preds = %374
  %393 = load i32, i32* @x.14
  %394 = load i32, i32* @y.15
  %395 = sub i32 0, 1
  %396 = add i32 %393, %395
  %397 = sub i32 %393, 1
  %398 = mul i32 %393, %396
  %399 = urem i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %394, 10
  %402 = xor i1 %400, true
  %403 = xor i1 %401, true
  %404 = xor i1 true, true
  %405 = and i1 %402, true
  %406 = and i1 %400, %404
  %407 = and i1 %403, true
  %408 = and i1 %401, %404
  %409 = or i1 %405, %406
  %410 = or i1 %407, %408
  %411 = xor i1 %409, %410
  %412 = or i1 %402, %403
  %413 = xor i1 %412, true
  %414 = or i1 true, %404
  %415 = and i1 %413, %414
  %416 = or i1 %411, %415
  %417 = or i1 %400, %401
  br i1 %416, label %418, label %1119

; <label>:418:                                    ; preds = %392, %1119
  store i32 0, i32* %36, align 4
  %419 = load i32, i32* @x.14
  %420 = load i32, i32* @y.15
  %421 = sub i32 %419, -1006756315
  %422 = sub i32 %421, 1
  %423 = add i32 %422, -1006756315
  %424 = sub i32 %419, 1
  %425 = mul i32 %419, %423
  %426 = urem i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = icmp slt i32 %420, 10
  %429 = xor i1 %427, true
  %430 = xor i1 %428, true
  %431 = xor i1 true, true
  %432 = and i1 %429, true
  %433 = and i1 %427, %431
  %434 = and i1 %430, true
  %435 = and i1 %428, %431
  %436 = or i1 %432, %433
  %437 = or i1 %434, %435
  %438 = xor i1 %436, %437
  %439 = or i1 %429, %430
  %440 = xor i1 %439, true
  %441 = or i1 true, %431
  %442 = and i1 %440, %441
  %443 = or i1 %438, %442
  %444 = or i1 %427, %428
  br i1 %443, label %445, label %1119

; <label>:445:                                    ; preds = %418
  br label %446

; <label>:446:                                    ; preds = %771, %445
  %447 = load i32, i32* @x.14
  %448 = load i32, i32* @y.15
  %449 = add i32 %447, 1025279500
  %450 = sub i32 %449, 1
  %451 = sub i32 %450, 1025279500
  %452 = sub i32 %447, 1
  %453 = mul i32 %447, %451
  %454 = urem i32 %453, 2
  %455 = icmp eq i32 %454, 0
  %456 = icmp slt i32 %448, 10
  %457 = xor i1 %455, true
  %458 = xor i1 %456, true
  %459 = xor i1 true, true
  %460 = and i1 %457, true
  %461 = and i1 %455, %459
  %462 = and i1 %458, true
  %463 = and i1 %456, %459
  %464 = or i1 %460, %461
  %465 = or i1 %462, %463
  %466 = xor i1 %464, %465
  %467 = or i1 %457, %458
  %468 = xor i1 %467, true
  %469 = or i1 true, %459
  %470 = and i1 %468, %469
  %471 = or i1 %466, %470
  %472 = or i1 %455, %456
  br i1 %471, label %473, label %1120

; <label>:473:                                    ; preds = %446, %1120
  %474 = call dereferenceable(4) i32* @_ZNSt7__debug6vectorIiSaIiEEixEm(%"class.std::__debug::vector"* %33, i64 0) #3
  %475 = load i32, i32* %474, align 4
  %476 = icmp ne i32 %475, 0
  %477 = load i32, i32* @x.14
  %478 = load i32, i32* @y.15
  %479 = add i32 %477, 468251685
  %480 = sub i32 %479, 1
  %481 = sub i32 %480, 468251685
  %482 = sub i32 %477, 1
  %483 = mul i32 %477, %481
  %484 = urem i32 %483, 2
  %485 = icmp eq i32 %484, 0
  %486 = icmp slt i32 %478, 10
  %487 = xor i1 %485, true
  %488 = xor i1 %486, true
  %489 = xor i1 true, true
  %490 = and i1 %487, true
  %491 = and i1 %485, %489
  %492 = and i1 %488, true
  %493 = and i1 %486, %489
  %494 = or i1 %490, %491
  %495 = or i1 %492, %493
  %496 = xor i1 %494, %495
  %497 = or i1 %487, %488
  %498 = xor i1 %497, true
  %499 = or i1 true, %489
  %500 = and i1 %498, %499
  %501 = or i1 %496, %500
  %502 = or i1 %485, %486
  br i1 %501, label %503, label %1120

; <label>:503:                                    ; preds = %473
  br i1 %476, label %504, label %545

; <label>:504:                                    ; preds = %503
  %505 = load i32, i32* @x.14
  %506 = load i32, i32* @y.15
  %507 = sub i32 0, 1
  %508 = add i32 %505, %507
  %509 = sub i32 %505, 1
  %510 = mul i32 %505, %508
  %511 = urem i32 %510, 2
  %512 = icmp eq i32 %511, 0
  %513 = icmp slt i32 %506, 10
  %514 = and i1 %512, %513
  %515 = xor i1 %512, %513
  %516 = or i1 %514, %515
  %517 = or i1 %512, %513
  br i1 %516, label %518, label %1124

; <label>:518:                                    ; preds = %504, %1124
  %519 = load i32, i32* @x.14
  %520 = load i32, i32* @y.15
  %521 = sub i32 0, 1
  %522 = add i32 %519, %521
  %523 = sub i32 %519, 1
  %524 = mul i32 %519, %522
  %525 = urem i32 %524, 2
  %526 = icmp eq i32 %525, 0
  %527 = icmp slt i32 %520, 10
  %528 = xor i1 %526, true
  %529 = xor i1 %527, true
  %530 = xor i1 false, true
  %531 = and i1 %528, false
  %532 = and i1 %526, %530
  %533 = and i1 %529, false
  %534 = and i1 %527, %530
  %535 = or i1 %531, %532
  %536 = or i1 %533, %534
  %537 = xor i1 %535, %536
  %538 = or i1 %528, %529
  %539 = xor i1 %538, true
  %540 = or i1 false, %530
  %541 = and i1 %539, %540
  %542 = or i1 %537, %541
  %543 = or i1 %526, %527
  br i1 %542, label %544, label %1124

; <label>:544:                                    ; preds = %518
  br label %772

; <label>:545:                                    ; preds = %503
  store i8 1, i8* %37, align 1
  store i32 0, i32* %38, align 4
  br label %546

; <label>:546:                                    ; preds = %660, %545
  %547 = load i32, i32* @x.14
  %548 = load i32, i32* @y.15
  %549 = sub i32 0, 1
  %550 = add i32 %547, %549
  %551 = sub i32 %547, 1
  %552 = mul i32 %547, %550
  %553 = urem i32 %552, 2
  %554 = icmp eq i32 %553, 0
  %555 = icmp slt i32 %548, 10
  %556 = and i1 %554, %555
  %557 = xor i1 %554, %555
  %558 = or i1 %556, %557
  %559 = or i1 %554, %555
  br i1 %558, label %560, label %1125

; <label>:560:                                    ; preds = %546, %1125
  %561 = load i32, i32* %38, align 4
  %562 = load i32, i32* %16, align 4
  %563 = sub i32 %562, 129532362
  %564 = sub i32 %563, 1
  %565 = add i32 %564, 129532362
  %566 = sub nsw i32 %562, 1
  %567 = icmp slt i32 %561, %565
  %568 = load i32, i32* @x.14
  %569 = load i32, i32* @y.15
  %570 = sub i32 0, 1
  %571 = add i32 %568, %570
  %572 = sub i32 %568, 1
  %573 = mul i32 %568, %571
  %574 = urem i32 %573, 2
  %575 = icmp eq i32 %574, 0
  %576 = icmp slt i32 %569, 10
  %577 = xor i1 %575, true
  %578 = xor i1 %576, true
  %579 = xor i1 false, true
  %580 = and i1 %577, false
  %581 = and i1 %575, %579
  %582 = and i1 %578, false
  %583 = and i1 %576, %579
  %584 = or i1 %580, %581
  %585 = or i1 %582, %583
  %586 = xor i1 %584, %585
  %587 = or i1 %577, %578
  %588 = xor i1 %587, true
  %589 = or i1 false, %579
  %590 = and i1 %588, %589
  %591 = or i1 %586, %590
  %592 = or i1 %575, %576
  br i1 %591, label %593, label %1125

; <label>:593:                                    ; preds = %560
  br i1 %567, label %594, label %666

; <label>:594:                                    ; preds = %593
  %595 = load i32, i32* %38, align 4
  %596 = sext i32 %595 to i64
  %597 = call dereferenceable(4) i32* @_ZNSt7__debug6vectorIiSaIiEEixEm(%"class.std::__debug::vector"* %33, i64 %596) #3
  %598 = load i32, i32* %597, align 4
  %599 = sext i32 %598 to i64
  %600 = call dereferenceable(72) %"class.std::__debug::vector.10"* @_ZNSt7__debug6vectorINS0_IbSaIbEEESaIS2_EEixEm(%"class.std::__debug::vector.0"* %25, i64 %599) #3
  %601 = load i32, i32* %38, align 4
  %602 = add i32 %601, 419688810
  %603 = add i32 %602, 1
  %604 = sub i32 %603, 419688810
  %605 = add nsw i32 %601, 1
  %606 = sext i32 %604 to i64
  %607 = call dereferenceable(4) i32* @_ZNSt7__debug6vectorIiSaIiEEixEm(%"class.std::__debug::vector"* %33, i64 %606) #3
  %608 = load i32, i32* %607, align 4
  %609 = sext i32 %608 to i64
  %610 = call { i64*, i64 } @_ZNSt7__debug6vectorIbSaIbEEixEm(%"class.std::__debug::vector.10"* %600, i64 %609) #3
  %611 = bitcast %"struct.std::__cxx1998::_Bit_reference"* %39 to { i64*, i64 }*
  %612 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %611, i32 0, i32 0
  %613 = extractvalue { i64*, i64 } %610, 0
  store i64* %613, i64** %612, align 8
  %614 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %611, i32 0, i32 1
  %615 = extractvalue { i64*, i64 } %610, 1
  store i64 %615, i64* %614, align 8
  %616 = call zeroext i1 @_ZNKSt9__cxx199814_Bit_referencecvbEv(%"struct.std::__cxx1998::_Bit_reference"* %39) #3
  br i1 %616, label %659, label %617

; <label>:617:                                    ; preds = %594
  %618 = load i32, i32* @x.14
  %619 = load i32, i32* @y.15
  %620 = sub i32 0, 1
  %621 = add i32 %618, %620
  %622 = sub i32 %618, 1
  %623 = mul i32 %618, %621
  %624 = urem i32 %623, 2
  %625 = icmp eq i32 %624, 0
  %626 = icmp slt i32 %619, 10
  %627 = and i1 %625, %626
  %628 = xor i1 %625, %626
  %629 = or i1 %627, %628
  %630 = or i1 %625, %626
  br i1 %629, label %631, label %1156

; <label>:631:                                    ; preds = %617, %1156
  store i8 0, i8* %37, align 1
  %632 = load i32, i32* @x.14
  %633 = load i32, i32* @y.15
  %634 = sub i32 %632, -216248142
  %635 = sub i32 %634, 1
  %636 = add i32 %635, -216248142
  %637 = sub i32 %632, 1
  %638 = mul i32 %632, %636
  %639 = urem i32 %638, 2
  %640 = icmp eq i32 %639, 0
  %641 = icmp slt i32 %633, 10
  %642 = xor i1 %640, true
  %643 = xor i1 %641, true
  %644 = xor i1 false, true
  %645 = and i1 %642, false
  %646 = and i1 %640, %644
  %647 = and i1 %643, false
  %648 = and i1 %641, %644
  %649 = or i1 %645, %646
  %650 = or i1 %647, %648
  %651 = xor i1 %649, %650
  %652 = or i1 %642, %643
  %653 = xor i1 %652, true
  %654 = or i1 false, %644
  %655 = and i1 %653, %654
  %656 = or i1 %651, %655
  %657 = or i1 %640, %641
  br i1 %656, label %658, label %1156

; <label>:658:                                    ; preds = %631
  br label %659

; <label>:659:                                    ; preds = %658, %594
  br label %660

; <label>:660:                                    ; preds = %659
  %661 = load i32, i32* %38, align 4
  %662 = sub i32 %661, -477081068
  %663 = add i32 %662, 1
  %664 = add i32 %663, -477081068
  %665 = add nsw i32 %661, 1
  store i32 %664, i32* %38, align 4
  br label %546

; <label>:666:                                    ; preds = %593
  %667 = load i32, i32* @x.14
  %668 = load i32, i32* @y.15
  %669 = sub i32 0, 1
  %670 = add i32 %667, %669
  %671 = sub i32 %667, 1
  %672 = mul i32 %667, %670
  %673 = urem i32 %672, 2
  %674 = icmp eq i32 %673, 0
  %675 = icmp slt i32 %668, 10
  %676 = xor i1 %674, true
  %677 = xor i1 %675, true
  %678 = xor i1 true, true
  %679 = and i1 %676, true
  %680 = and i1 %674, %678
  %681 = and i1 %677, true
  %682 = and i1 %675, %678
  %683 = or i1 %679, %680
  %684 = or i1 %681, %682
  %685 = xor i1 %683, %684
  %686 = or i1 %676, %677
  %687 = xor i1 %686, true
  %688 = or i1 true, %678
  %689 = and i1 %687, %688
  %690 = or i1 %685, %689
  %691 = or i1 %674, %675
  br i1 %690, label %692, label %1157

; <label>:692:                                    ; preds = %666, %1157
  %693 = load i8, i8* %37, align 1
  %694 = trunc i8 %693 to i1
  %695 = load i32, i32* @x.14
  %696 = load i32, i32* @y.15
  %697 = sub i32 0, 1
  %698 = add i32 %695, %697
  %699 = sub i32 %695, 1
  %700 = mul i32 %695, %698
  %701 = urem i32 %700, 2
  %702 = icmp eq i32 %701, 0
  %703 = icmp slt i32 %696, 10
  %704 = xor i1 %702, true
  %705 = xor i1 %703, true
  %706 = xor i1 false, true
  %707 = and i1 %704, false
  %708 = and i1 %702, %706
  %709 = and i1 %705, false
  %710 = and i1 %703, %706
  %711 = or i1 %707, %708
  %712 = or i1 %709, %710
  %713 = xor i1 %711, %712
  %714 = or i1 %704, %705
  %715 = xor i1 %714, true
  %716 = or i1 false, %706
  %717 = and i1 %715, %716
  %718 = or i1 %713, %717
  %719 = or i1 %702, %703
  br i1 %718, label %720, label %1157

; <label>:720:                                    ; preds = %692
  br i1 %694, label %721, label %727

; <label>:721:                                    ; preds = %720
  %722 = load i32, i32* %36, align 4
  %723 = sub i32 %722, 256616886
  %724 = add i32 %723, 1
  %725 = add i32 %724, 256616886
  %726 = add nsw i32 %722, 1
  store i32 %725, i32* %36, align 4
  br label %727

; <label>:727:                                    ; preds = %721, %720
  br label %728

; <label>:728:                                    ; preds = %727
  call void @_ZNSt7__debug6vectorIiSaIiEE5beginEv(%"class.__gnu_debug::_Safe_iterator"* sret %40, %"class.std::__debug::vector"* %33) #3
  call void @_ZNSt7__debug6vectorIiSaIiEE3endEv(%"class.__gnu_debug::_Safe_iterator"* sret %41, %"class.std::__debug::vector"* %33) #3
  %729 = invoke zeroext i1 @_ZSt16next_permutationIN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS7_EEEEEbT_SE_(%"class.__gnu_debug::_Safe_iterator"* %40, %"class.__gnu_debug::_Safe_iterator"* %41)
          to label %730 unwind label %819

; <label>:730:                                    ; preds = %728
  %731 = load i32, i32* @x.14
  %732 = load i32, i32* @y.15
  %733 = add i32 %731, 666760439
  %734 = sub i32 %733, 1
  %735 = sub i32 %734, 666760439
  %736 = sub i32 %731, 1
  %737 = mul i32 %731, %735
  %738 = urem i32 %737, 2
  %739 = icmp eq i32 %738, 0
  %740 = icmp slt i32 %732, 10
  %741 = and i1 %739, %740
  %742 = xor i1 %739, %740
  %743 = or i1 %741, %742
  %744 = or i1 %739, %740
  br i1 %743, label %745, label %1160

; <label>:745:                                    ; preds = %730, %1160
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %41) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %40) #3
  %746 = load i32, i32* @x.14
  %747 = load i32, i32* @y.15
  %748 = sub i32 0, 1
  %749 = add i32 %746, %748
  %750 = sub i32 %746, 1
  %751 = mul i32 %746, %749
  %752 = urem i32 %751, 2
  %753 = icmp eq i32 %752, 0
  %754 = icmp slt i32 %747, 10
  %755 = xor i1 %753, true
  %756 = xor i1 %754, true
  %757 = xor i1 false, true
  %758 = and i1 %755, false
  %759 = and i1 %753, %757
  %760 = and i1 %756, false
  %761 = and i1 %754, %757
  %762 = or i1 %758, %759
  %763 = or i1 %760, %761
  %764 = xor i1 %762, %763
  %765 = or i1 %755, %756
  %766 = xor i1 %765, true
  %767 = or i1 false, %757
  %768 = and i1 %766, %767
  %769 = or i1 %764, %768
  %770 = or i1 %753, %754
  br i1 %769, label %771, label %1160

; <label>:771:                                    ; preds = %745
  br i1 %729, label %446, label %772

; <label>:772:                                    ; preds = %771, %544
  %773 = load i32, i32* @x.14
  %774 = load i32, i32* @y.15
  %775 = sub i32 0, 1
  %776 = add i32 %773, %775
  %777 = sub i32 %773, 1
  %778 = mul i32 %773, %776
  %779 = urem i32 %778, 2
  %780 = icmp eq i32 %779, 0
  %781 = icmp slt i32 %774, 10
  %782 = and i1 %780, %781
  %783 = xor i1 %780, %781
  %784 = or i1 %782, %783
  %785 = or i1 %780, %781
  br i1 %784, label %786, label %1161

; <label>:786:                                    ; preds = %772, %1161
  %787 = load i32, i32* %36, align 4
  %788 = load i32, i32* @x.14
  %789 = load i32, i32* @y.15
  %790 = add i32 %788, 1209252377
  %791 = sub i32 %790, 1
  %792 = sub i32 %791, 1209252377
  %793 = sub i32 %788, 1
  %794 = mul i32 %788, %792
  %795 = urem i32 %794, 2
  %796 = icmp eq i32 %795, 0
  %797 = icmp slt i32 %789, 10
  %798 = xor i1 %796, true
  %799 = xor i1 %797, true
  %800 = xor i1 true, true
  %801 = and i1 %798, true
  %802 = and i1 %796, %800
  %803 = and i1 %799, true
  %804 = and i1 %797, %800
  %805 = or i1 %801, %802
  %806 = or i1 %803, %804
  %807 = xor i1 %805, %806
  %808 = or i1 %798, %799
  %809 = xor i1 %808, true
  %810 = or i1 true, %800
  %811 = and i1 %809, %810
  %812 = or i1 %807, %811
  %813 = or i1 %796, %797
  br i1 %812, label %814, label %1161

; <label>:814:                                    ; preds = %786
  %815 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* @_ZSt4cout, i32 %787)
          to label %816 unwind label %823

; <label>:816:                                    ; preds = %814
  %817 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %815, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %818 unwind label %823

; <label>:818:                                    ; preds = %816
  call void @_ZNSt7__debug6vectorIiSaIiEED2Ev(%"class.std::__debug::vector"* %33) #3
  call void @_ZNSt7__debug6vectorINS0_IbSaIbEEESaIS2_EED2Ev(%"class.std::__debug::vector.0"* %25) #3
  call void @_ZNSt7__debug6vectorIiSaIiEED2Ev(%"class.std::__debug::vector"* %22) #3
  call void @_ZNSt7__debug6vectorIiSaIiEED2Ev(%"class.std::__debug::vector"* %18) #3
  ret void

; <label>:819:                                    ; preds = %728
  %820 = landingpad { i8*, i32 }
          cleanup
  %821 = extractvalue { i8*, i32 } %820, 0
  store i8* %821, i8** %20, align 8
  %822 = extractvalue { i8*, i32 } %820, 1
  store i32 %822, i32* %21, align 4
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %41) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %40) #3
  br label %827

; <label>:823:                                    ; preds = %816, %814
  %824 = landingpad { i8*, i32 }
          cleanup
  %825 = extractvalue { i8*, i32 } %824, 0
  store i8* %825, i8** %20, align 8
  %826 = extractvalue { i8*, i32 } %824, 1
  store i32 %826, i32* %21, align 4
  br label %827

; <label>:827:                                    ; preds = %823, %819
  %828 = load i32, i32* @x.14
  %829 = load i32, i32* @y.15
  %830 = sub i32 0, 1
  %831 = add i32 %828, %830
  %832 = sub i32 %828, 1
  %833 = mul i32 %828, %831
  %834 = urem i32 %833, 2
  %835 = icmp eq i32 %834, 0
  %836 = icmp slt i32 %829, 10
  %837 = and i1 %835, %836
  %838 = xor i1 %835, %836
  %839 = or i1 %837, %838
  %840 = or i1 %835, %836
  br i1 %839, label %841, label %1163

; <label>:841:                                    ; preds = %827, %1163
  call void @_ZNSt7__debug6vectorIiSaIiEED2Ev(%"class.std::__debug::vector"* %33) #3
  %842 = load i32, i32* @x.14
  %843 = load i32, i32* @y.15
  %844 = add i32 %842, -812411896
  %845 = sub i32 %844, 1
  %846 = sub i32 %845, -812411896
  %847 = sub i32 %842, 1
  %848 = mul i32 %842, %846
  %849 = urem i32 %848, 2
  %850 = icmp eq i32 %849, 0
  %851 = icmp slt i32 %843, 10
  %852 = and i1 %850, %851
  %853 = xor i1 %850, %851
  %854 = or i1 %852, %853
  %855 = or i1 %850, %851
  br i1 %854, label %856, label %1163

; <label>:856:                                    ; preds = %841
  br label %857

; <label>:857:                                    ; preds = %856, %388
  call void @_ZNSt7__debug6vectorINS0_IbSaIbEEESaIS2_EED2Ev(%"class.std::__debug::vector.0"* %25) #3
  br label %858

; <label>:858:                                    ; preds = %857, %369, %148
  call void @_ZNSt7__debug6vectorIiSaIiEED2Ev(%"class.std::__debug::vector"* %22) #3
  br label %859

; <label>:859:                                    ; preds = %858, %144
  call void @_ZNSt7__debug6vectorIiSaIiEED2Ev(%"class.std::__debug::vector"* %18) #3
  br label %860

; <label>:860:                                    ; preds = %859, %140
  %861 = load i32, i32* @x.14
  %862 = load i32, i32* @y.15
  %863 = sub i32 0, 1
  %864 = add i32 %861, %863
  %865 = sub i32 %861, 1
  %866 = mul i32 %861, %864
  %867 = urem i32 %866, 2
  %868 = icmp eq i32 %867, 0
  %869 = icmp slt i32 %862, 10
  %870 = xor i1 %868, true
  %871 = xor i1 %869, true
  %872 = xor i1 true, true
  %873 = and i1 %870, true
  %874 = and i1 %868, %872
  %875 = and i1 %871, true
  %876 = and i1 %869, %872
  %877 = or i1 %873, %874
  %878 = or i1 %875, %876
  %879 = xor i1 %877, %878
  %880 = or i1 %870, %871
  %881 = xor i1 %880, true
  %882 = or i1 true, %872
  %883 = and i1 %881, %882
  %884 = or i1 %879, %883
  %885 = or i1 %868, %869
  br i1 %884, label %886, label %1164

; <label>:886:                                    ; preds = %860, %1164
  %887 = load i8*, i8** %20, align 8
  %888 = load i32, i32* %21, align 4
  %889 = insertvalue { i8*, i32 } undef, i8* %887, 0
  %890 = insertvalue { i8*, i32 } %889, i32 %888, 1
  %891 = load i32, i32* @x.14
  %892 = load i32, i32* @y.15
  %893 = add i32 %891, 1282641540
  %894 = sub i32 %893, 1
  %895 = sub i32 %894, 1282641540
  %896 = sub i32 %891, 1
  %897 = mul i32 %891, %895
  %898 = urem i32 %897, 2
  %899 = icmp eq i32 %898, 0
  %900 = icmp slt i32 %892, 10
  %901 = and i1 %899, %900
  %902 = xor i1 %899, %900
  %903 = or i1 %901, %902
  %904 = or i1 %899, %900
  br i1 %903, label %905, label %1164

; <label>:905:                                    ; preds = %886
  resume { i8*, i32 } %890

; <label>:906:                                    ; preds = %15, %0
  %907 = alloca i32, align 4
  %908 = alloca i32, align 4
  %909 = alloca %"class.std::__debug::vector", align 8
  %910 = alloca %"class.std::allocator", align 1
  %911 = alloca i8*
  %912 = alloca i32
  %913 = alloca %"class.std::__debug::vector", align 8
  %914 = alloca %"class.std::allocator", align 1
  %915 = alloca i32, align 4
  %916 = alloca %"class.std::__debug::vector.0", align 8
  %917 = alloca %"class.std::__debug::vector.10", align 8
  %918 = alloca i8, align 1
  %919 = alloca %"class.std::allocator.21", align 1
  %920 = alloca %"class.std::allocator.7", align 1
  %921 = alloca i32, align 4
  %922 = alloca %"struct.std::__cxx1998::_Bit_reference", align 8
  %923 = alloca %"struct.std::__cxx1998::_Bit_reference", align 8
  %924 = alloca %"class.std::__debug::vector", align 8
  %925 = alloca %"class.std::allocator", align 1
  %926 = alloca i32, align 4
  %927 = alloca i32, align 4
  %928 = alloca i8, align 1
  %929 = alloca i32, align 4
  %930 = alloca %"struct.std::__cxx1998::_Bit_reference", align 8
  %931 = alloca %"class.__gnu_debug::_Safe_iterator", align 8
  %932 = alloca %"class.__gnu_debug::_Safe_iterator", align 8
  %933 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %907)
  %934 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %933, i32* dereferenceable(4) %908)
  %935 = load i32, i32* %908, align 4
  %936 = sext i32 %935 to i64
  call void @_ZNSaIiEC2Ev(%"class.std::allocator"* %910) #3
  br label %15

; <label>:937:                                    ; preds = %100, %74
  %938 = load i32, i32* %24, align 4
  %939 = sext i32 %938 to i64
  %940 = call dereferenceable(4) i32* @_ZNSt7__debug6vectorIiSaIiEEixEm(%"class.std::__debug::vector"* %22, i64 %939) #3
  br label %100

; <label>:941:                                    ; preds = %172, %158
  call void @_ZNSaINSt7__debug6vectorIbSaIbEEEED2Ev(%"class.std::allocator.7"* %29) #3
  call void @_ZNSt7__debug6vectorIbSaIbEED2Ev(%"class.std::__debug::vector.10"* %26) #3
  call void @_ZNSaIbED2Ev(%"class.std::allocator.21"* %28) #3
  store i32 0, i32* %30, align 4
  br label %172

; <label>:942:                                    ; preds = %218, %204
  %943 = load i32, i32* %30, align 4
  %944 = sext i32 %943 to i64
  %945 = call dereferenceable(4) i32* @_ZNSt7__debug6vectorIiSaIiEEixEm(%"class.std::__debug::vector"* %18, i64 %944) #3
  %946 = load i32, i32* %945, align 4
  %947 = shl i32 %946, 1
  %948 = sub i32 0, -529923450
  %949 = sub i32 %948, %946
  %950 = add i32 %949, -529923450
  %951 = sub i32 0, %946
  %952 = sub i32 0, %950
  %953 = sub i32 0, 1
  %954 = add i32 %952, %953
  %955 = sub i32 0, %954
  %956 = add i32 %950, 1
  %957 = shl i32 %946, 1
  %958 = sub i32 0, %946
  %959 = add i32 0, %958
  %960 = sub i32 0, %946
  %961 = sub i32 0, 1
  %962 = sub i32 %959, %961
  %963 = add i32 %959, 1
  %964 = sub i32 0, %946
  %965 = add i32 0, %964
  %966 = sub i32 0, %946
  %967 = sub i32 %965, 1817100435
  %968 = add i32 %967, 1
  %969 = add i32 %968, 1817100435
  %970 = add i32 %965, 1
  %971 = sub i32 0, 1
  %972 = add i32 %946, %971
  %973 = sub i32 %946, 1
  %974 = mul i32 %972, 1
  %975 = add i32 %946, -917876092
  %976 = sub i32 %975, 1
  %977 = sub i32 %976, -917876092
  %978 = sub nsw i32 %946, 1
  %979 = sext i32 %977 to i64
  %980 = call dereferenceable(72) %"class.std::__debug::vector.10"* @_ZNSt7__debug6vectorINS0_IbSaIbEEESaIS2_EEixEm(%"class.std::__debug::vector.0"* %25, i64 %979) #3
  %981 = load i32, i32* %30, align 4
  %982 = sext i32 %981 to i64
  %983 = call dereferenceable(4) i32* @_ZNSt7__debug6vectorIiSaIiEEixEm(%"class.std::__debug::vector"* %22, i64 %982) #3
  %984 = load i32, i32* %983, align 4
  %985 = sub i32 0, 1
  %986 = add i32 %984, %985
  %987 = sub i32 %984, 1
  %988 = mul i32 %986, 1
  %989 = sub i32 0, %984
  %990 = add i32 0, %989
  %991 = sub i32 0, %984
  %992 = sub i32 0, 1
  %993 = sub i32 %990, %992
  %994 = add i32 %990, 1
  %995 = sub i32 0, -251537372
  %996 = sub i32 %995, %984
  %997 = add i32 %996, -251537372
  %998 = sub i32 0, %984
  %999 = add i32 %997, -137413881
  %1000 = add i32 %999, 1
  %1001 = sub i32 %1000, -137413881
  %1002 = add i32 %997, 1
  %1003 = shl i32 %984, 1
  %1004 = sub i32 %984, 658111328
  %1005 = sub i32 %1004, 1
  %1006 = add i32 %1005, 658111328
  %1007 = sub nsw i32 %984, 1
  %1008 = sext i32 %1006 to i64
  %1009 = call { i64*, i64 } @_ZNSt7__debug6vectorIbSaIbEEixEm(%"class.std::__debug::vector.10"* %980, i64 %1008) #3
  %1010 = bitcast %"struct.std::__cxx1998::_Bit_reference"* %31 to { i64*, i64 }*
  %1011 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1010, i32 0, i32 0
  %1012 = extractvalue { i64*, i64 } %1009, 0
  store i64* %1012, i64** %1011, align 8
  %1013 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1010, i32 0, i32 1
  %1014 = extractvalue { i64*, i64 } %1009, 1
  store i64 %1014, i64* %1013, align 8
  %1015 = call dereferenceable(16) %"struct.std::__cxx1998::_Bit_reference"* @_ZNSt9__cxx199814_Bit_referenceaSEb(%"struct.std::__cxx1998::_Bit_reference"* %31, i1 zeroext true) #3
  %1016 = load i32, i32* %30, align 4
  %1017 = sext i32 %1016 to i64
  %1018 = call dereferenceable(4) i32* @_ZNSt7__debug6vectorIiSaIiEEixEm(%"class.std::__debug::vector"* %22, i64 %1017) #3
  %1019 = load i32, i32* %1018, align 4
  %1020 = sub i32 0, 113305162
  %1021 = sub i32 %1020, %1019
  %1022 = add i32 %1021, 113305162
  %1023 = sub i32 0, %1019
  %1024 = add i32 %1022, -1691355648
  %1025 = add i32 %1024, 1
  %1026 = sub i32 %1025, -1691355648
  %1027 = add i32 %1022, 1
  %1028 = add i32 %1019, 875767452
  %1029 = sub i32 %1028, 1
  %1030 = sub i32 %1029, 875767452
  %1031 = sub i32 %1019, 1
  %1032 = mul i32 %1030, 1
  %1033 = shl i32 %1019, 1
  %1034 = sub i32 0, 1764880912
  %1035 = sub i32 %1034, %1019
  %1036 = add i32 %1035, 1764880912
  %1037 = sub i32 0, %1019
  %1038 = add i32 %1036, -198501888
  %1039 = add i32 %1038, 1
  %1040 = sub i32 %1039, -198501888
  %1041 = add i32 %1036, 1
  %1042 = sub i32 %1019, -1635797649
  %1043 = sub i32 %1042, 1
  %1044 = add i32 %1043, -1635797649
  %1045 = sub nsw i32 %1019, 1
  %1046 = sext i32 %1044 to i64
  %1047 = call dereferenceable(72) %"class.std::__debug::vector.10"* @_ZNSt7__debug6vectorINS0_IbSaIbEEESaIS2_EEixEm(%"class.std::__debug::vector.0"* %25, i64 %1046) #3
  %1048 = load i32, i32* %30, align 4
  %1049 = sext i32 %1048 to i64
  %1050 = call dereferenceable(4) i32* @_ZNSt7__debug6vectorIiSaIiEEixEm(%"class.std::__debug::vector"* %18, i64 %1049) #3
  %1051 = load i32, i32* %1050, align 4
  %1052 = shl i32 %1051, 1
  %1053 = sub i32 %1051, -128781607
  %1054 = sub i32 %1053, 1
  %1055 = add i32 %1054, -128781607
  %1056 = sub i32 %1051, 1
  %1057 = mul i32 %1055, 1
  %1058 = add i32 0, -369372506
  %1059 = sub i32 %1058, %1051
  %1060 = sub i32 %1059, -369372506
  %1061 = sub i32 0, %1051
  %1062 = sub i32 0, 1
  %1063 = sub i32 %1060, %1062
  %1064 = add i32 %1060, 1
  %1065 = sub i32 0, -234757931
  %1066 = sub i32 %1065, %1051
  %1067 = add i32 %1066, -234757931
  %1068 = sub i32 0, %1051
  %1069 = sub i32 %1067, 970228687
  %1070 = add i32 %1069, 1
  %1071 = add i32 %1070, 970228687
  %1072 = add i32 %1067, 1
  %1073 = sub i32 0, 1
  %1074 = add i32 %1051, %1073
  %1075 = sub i32 %1051, 1
  %1076 = mul i32 %1074, 1
  %1077 = add i32 %1051, -1008401519
  %1078 = sub i32 %1077, 1
  %1079 = sub i32 %1078, -1008401519
  %1080 = sub i32 %1051, 1
  %1081 = mul i32 %1079, 1
  %1082 = add i32 %1051, 1062556254
  %1083 = sub i32 %1082, 1
  %1084 = sub i32 %1083, 1062556254
  %1085 = sub nsw i32 %1051, 1
  %1086 = sext i32 %1084 to i64
  %1087 = call { i64*, i64 } @_ZNSt7__debug6vectorIbSaIbEEixEm(%"class.std::__debug::vector.10"* %1047, i64 %1086) #3
  %1088 = bitcast %"struct.std::__cxx1998::_Bit_reference"* %32 to { i64*, i64 }*
  %1089 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1088, i32 0, i32 0
  %1090 = extractvalue { i64*, i64 } %1087, 0
  store i64* %1090, i64** %1089, align 8
  %1091 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1088, i32 0, i32 1
  %1092 = extractvalue { i64*, i64 } %1087, 1
  store i64 %1092, i64* %1091, align 8
  %1093 = call dereferenceable(16) %"struct.std::__cxx1998::_Bit_reference"* @_ZNSt9__cxx199814_Bit_referenceaSEb(%"struct.std::__cxx1998::_Bit_reference"* %32, i1 zeroext true) #3
  br label %218

; <label>:1094:                                   ; preds = %311, %296
  %1095 = load i32, i32* %30, align 4
  %1096 = shl i32 %1095, 1
  %1097 = sub i32 0, 1617534044
  %1098 = sub i32 %1097, %1095
  %1099 = add i32 %1098, 1617534044
  %1100 = sub i32 0, %1095
  %1101 = sub i32 0, %1099
  %1102 = sub i32 0, 1
  %1103 = add i32 %1101, %1102
  %1104 = sub i32 0, %1103
  %1105 = add i32 %1099, 1
  %1106 = sub i32 %1095, -603248572
  %1107 = sub i32 %1106, 1
  %1108 = add i32 %1107, -603248572
  %1109 = sub i32 %1095, 1
  %1110 = mul i32 %1108, 1
  %1111 = add i32 %1095, 2008979313
  %1112 = add i32 %1111, 1
  %1113 = sub i32 %1112, 2008979313
  %1114 = add nsw i32 %1095, 1
  store i32 %1113, i32* %30, align 4
  br label %311

; <label>:1115:                                   ; preds = %350, %335
  %1116 = landingpad { i8*, i32 }
          cleanup
  %1117 = extractvalue { i8*, i32 } %1116, 0
  store i8* %1117, i8** %20, align 8
  %1118 = extractvalue { i8*, i32 } %1116, 1
  store i32 %1118, i32* %21, align 4
  call void @_ZNSaINSt7__debug6vectorIbSaIbEEEED2Ev(%"class.std::allocator.7"* %29) #3
  call void @_ZNSt7__debug6vectorIbSaIbEED2Ev(%"class.std::__debug::vector.10"* %26) #3
  br label %350

; <label>:1119:                                   ; preds = %418, %392
  store i32 0, i32* %36, align 4
  br label %418

; <label>:1120:                                   ; preds = %473, %446
  %1121 = call dereferenceable(4) i32* @_ZNSt7__debug6vectorIiSaIiEEixEm(%"class.std::__debug::vector"* %33, i64 0) #3
  %1122 = load i32, i32* %1121, align 4
  %1123 = icmp ne i32 %1122, 0
  br label %473

; <label>:1124:                                   ; preds = %518, %504
  br label %518

; <label>:1125:                                   ; preds = %560, %546
  %1126 = load i32, i32* %38, align 4
  %1127 = load i32, i32* %16, align 4
  %1128 = sub i32 0, 1227196182
  %1129 = sub i32 %1128, %1127
  %1130 = add i32 %1129, 1227196182
  %1131 = sub i32 0, %1127
  %1132 = sub i32 0, %1130
  %1133 = sub i32 0, 1
  %1134 = add i32 %1132, %1133
  %1135 = sub i32 0, %1134
  %1136 = add i32 %1130, 1
  %1137 = sub i32 0, -1125554600
  %1138 = sub i32 %1137, %1127
  %1139 = add i32 %1138, -1125554600
  %1140 = sub i32 0, %1127
  %1141 = sub i32 0, %1139
  %1142 = sub i32 0, 1
  %1143 = add i32 %1141, %1142
  %1144 = sub i32 0, %1143
  %1145 = add i32 %1139, 1
  %1146 = shl i32 %1127, 1
  %1147 = sub i32 0, 1
  %1148 = add i32 %1127, %1147
  %1149 = sub i32 %1127, 1
  %1150 = mul i32 %1148, 1
  %1151 = sub i32 %1127, 846934577
  %1152 = sub i32 %1151, 1
  %1153 = add i32 %1152, 846934577
  %1154 = sub nsw i32 %1127, 1
  %1155 = icmp slt i32 %1126, %1153
  br label %560

; <label>:1156:                                   ; preds = %631, %617
  store i8 0, i8* %37, align 1
  br label %631

; <label>:1157:                                   ; preds = %692, %666
  %1158 = load i8, i8* %37, align 1
  %1159 = trunc i8 %1158 to i1
  br label %692

; <label>:1160:                                   ; preds = %745, %730
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %41) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %40) #3
  br label %745

; <label>:1161:                                   ; preds = %786, %772
  %1162 = load i32, i32* %36, align 4
  br label %786

; <label>:1163:                                   ; preds = %841, %827
  call void @_ZNSt7__debug6vectorIiSaIiEED2Ev(%"class.std::__debug::vector"* %33) #3
  br label %841

; <label>:1164:                                   ; preds = %886, %860
  %1165 = load i8*, i8** %20, align 8
  %1166 = load i32, i32* %21, align 4
  %1167 = insertvalue { i8*, i32 } undef, i8* %1165, 0
  %1168 = insertvalue { i8*, i32 } %1167, i32 %1166, 1
  br label %886
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2Ev(%"class.std::allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.16
  %5 = load i32, i32* @y.17
  %6 = sub i32 %4, 1307180288
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1307180288
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1369278, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %49
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1369278, label %18
    i32 -1946290974, label %26
    i32 1438940329, label %44
    i32 1151323099, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %49

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1946290974, i32 1151323099
  store i32 %25, i32* %14
  br label %49

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %27, align 8
  %28 = load %"class.std::allocator"*, %"class.std::allocator"** %27, align 8
  %29 = bitcast %"class.std::allocator"* %28 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator"* %29) #3
  %30 = load i32, i32* @x.16
  %31 = load i32, i32* @y.17
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 1438940329, i32 1151323099
  store i32 %43, i32* %14
  br label %49

; <label>:44:                                     ; preds = %15
  ret void

; <label>:45:                                     ; preds = %15
  %46 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %46, align 8
  %47 = load %"class.std::allocator"*, %"class.std::allocator"** %46, align 8
  %48 = bitcast %"class.std::allocator"* %47 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator"* %48) #3
  store i32 -1946290974, i32* %14
  br label %49

; <label>:49:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt7__debug6vectorIiSaIiEEC2EmRKS1_(%"class.std::__debug::vector"*, i64, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.18
  %5 = load i32, i32* @y.19
  %6 = sub i32 %4, 372523819
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 372523819
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 true, true
  %17 = and i1 %14, true
  %18 = and i1 %12, %16
  %19 = and i1 %15, true
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 true, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %114

; <label>:30:                                     ; preds = %3, %114
  %31 = alloca %"class.std::__debug::vector"*, align 8
  %32 = alloca i64, align 8
  %33 = alloca %"class.std::allocator"*, align 8
  %34 = alloca i8*
  %35 = alloca i32
  store %"class.std::__debug::vector"* %0, %"class.std::__debug::vector"** %31, align 8
  store i64 %1, i64* %32, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %33, align 8
  %36 = load %"class.std::__debug::vector"*, %"class.std::__debug::vector"** %31, align 8
  %37 = bitcast %"class.std::__debug::vector"* %36 to %"class.__gnu_debug::_Safe_container"*
  call void @_ZN11__gnu_debug15_Safe_containerINSt7__debug6vectorIiSaIiEEES3_NS_14_Safe_sequenceELb1EEC2Ev(%"class.__gnu_debug::_Safe_container"* %37) #3
  %38 = bitcast %"class.std::__debug::vector"* %36 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 24
  %40 = bitcast i8* %39 to %"class.std::__cxx1998::vector"*
  %41 = load i64, i64* %32, align 8
  %42 = load %"class.std::allocator"*, %"class.std::allocator"** %33, align 8
  %43 = load i32, i32* @x.18
  %44 = load i32, i32* @y.19
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  br i1 %54, label %56, label %114

; <label>:56:                                     ; preds = %30
  invoke void @_ZNSt9__cxx19986vectorIiSaIiEEC2EmRKS1_(%"class.std::__cxx1998::vector"* %40, i64 %41, %"class.std::allocator"* dereferenceable(1) %42)
          to label %57 unwind label %62

; <label>:57:                                     ; preds = %56
  %58 = bitcast %"class.std::__debug::vector"* %36 to i8*
  %59 = getelementptr inbounds i8, i8* %58, i64 48
  %60 = bitcast i8* %59 to %"class.__gnu_debug::_Safe_vector"*
  %61 = load i64, i64* %32, align 8
  call void @_ZN11__gnu_debug12_Safe_vectorINSt7__debug6vectorIiSaIiEEENSt9__cxx19986vectorIiS3_EEEC2Em(%"class.__gnu_debug::_Safe_vector"* %60, i64 %61) #3
  ret void

; <label>:62:                                     ; preds = %56
  %63 = landingpad { i8*, i32 }
          cleanup
  %64 = extractvalue { i8*, i32 } %63, 0
  store i8* %64, i8** %34, align 8
  %65 = extractvalue { i8*, i32 } %63, 1
  store i32 %65, i32* %35, align 4
  %66 = bitcast %"class.std::__debug::vector"* %36 to %"class.__gnu_debug::_Safe_container"*
  call void @_ZN11__gnu_debug15_Safe_containerINSt7__debug6vectorIiSaIiEEES3_NS_14_Safe_sequenceELb1EED2Ev(%"class.__gnu_debug::_Safe_container"* %66) #3
  br label %67

; <label>:67:                                     ; preds = %62
  %68 = load i32, i32* @x.18
  %69 = load i32, i32* @y.19
  %70 = sub i32 %68, -739124503
  %71 = sub i32 %70, 1
  %72 = add i32 %71, -739124503
  %73 = sub i32 %68, 1
  %74 = mul i32 %68, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %69, 10
  %78 = and i1 %76, %77
  %79 = xor i1 %76, %77
  %80 = or i1 %78, %79
  %81 = or i1 %76, %77
  br i1 %80, label %82, label %127

; <label>:82:                                     ; preds = %67, %127
  %83 = load i8*, i8** %34, align 8
  %84 = load i32, i32* %35, align 4
  %85 = insertvalue { i8*, i32 } undef, i8* %83, 0
  %86 = insertvalue { i8*, i32 } %85, i32 %84, 1
  %87 = load i32, i32* @x.18
  %88 = load i32, i32* @y.19
  %89 = add i32 %87, -603536111
  %90 = sub i32 %89, 1
  %91 = sub i32 %90, -603536111
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 true, true
  %100 = and i1 %97, true
  %101 = and i1 %95, %99
  %102 = and i1 %98, true
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 true, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  br i1 %111, label %113, label %127

; <label>:113:                                    ; preds = %82
  resume { i8*, i32 } %86

; <label>:114:                                    ; preds = %30, %3
  %115 = alloca %"class.std::__debug::vector"*, align 8
  %116 = alloca i64, align 8
  %117 = alloca %"class.std::allocator"*, align 8
  %118 = alloca i8*
  %119 = alloca i32
  store %"class.std::__debug::vector"* %0, %"class.std::__debug::vector"** %115, align 8
  store i64 %1, i64* %116, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %117, align 8
  %120 = load %"class.std::__debug::vector"*, %"class.std::__debug::vector"** %115, align 8
  %121 = bitcast %"class.std::__debug::vector"* %120 to %"class.__gnu_debug::_Safe_container"*
  call void @_ZN11__gnu_debug15_Safe_containerINSt7__debug6vectorIiSaIiEEES3_NS_14_Safe_sequenceELb1EEC2Ev(%"class.__gnu_debug::_Safe_container"* %121) #3
  %122 = bitcast %"class.std::__debug::vector"* %120 to i8*
  %123 = getelementptr inbounds i8, i8* %122, i64 24
  %124 = bitcast i8* %123 to %"class.std::__cxx1998::vector"*
  %125 = load i64, i64* %116, align 8
  %126 = load %"class.std::allocator"*, %"class.std::allocator"** %117, align 8
  br label %30

; <label>:127:                                    ; preds = %82, %67
  %128 = load i8*, i8** %34, align 8
  %129 = load i32, i32* %35, align 4
  %130 = insertvalue { i8*, i32 } undef, i8* %128, 0
  %131 = insertvalue { i8*, i32 } %130, i32 %129, 1
  br label %82
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiED2Ev(%"class.std::allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt7__debug6vectorIiSaIiEEixEm(%"class.std::__debug::vector"*, i64) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::__debug::vector"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.__gnu_debug::_Error_formatter", align 8
  store %"class.std::__debug::vector"* %0, %"class.std::__debug::vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = load %"class.std::__debug::vector"*, %"class.std::__debug::vector"** %3, align 8
  br label %7

; <label>:7:                                      ; preds = %2
  %8 = load i64, i64* %4, align 8
  %9 = bitcast %"class.std::__debug::vector"* %6 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 24
  %11 = bitcast i8* %10 to %"class.std::__cxx1998::vector"*
  %12 = call i64 @_ZNKSt9__cxx19986vectorIiSaIiEE4sizeEv(%"class.std::__cxx1998::vector"* %11) #3
  %13 = icmp ult i64 %8, %12
  br i1 %13, label %29, label %14

; <label>:14:                                     ; preds = %7
  invoke void @_ZN11__gnu_debug16_Error_formatter5_M_atEPKcm(%"class.__gnu_debug::_Error_formatter"* sret %5, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str, i32 0, i32 0), i64 409)
          to label %15 unwind label %76

; <label>:15:                                     ; preds = %14
  %16 = call dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter10_M_messageENS_13_Debug_msg_idE(%"class.__gnu_debug::_Error_formatter"* %5, i32 5) #3
  %17 = invoke dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_sequenceINSt7__debug6vectorIiSaIiEEEEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"* %16, %"class.std::__debug::vector"* dereferenceable(56) %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0))
          to label %18 unwind label %76

; <label>:18:                                     ; preds = %15
  %19 = load i64, i64* %4, align 8
  %20 = invoke dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter10_M_integerElPKc(%"class.__gnu_debug::_Error_formatter"* %17, i64 %19, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0))
          to label %21 unwind label %76

; <label>:21:                                     ; preds = %18
  %22 = bitcast %"class.std::__debug::vector"* %6 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 24
  %24 = bitcast i8* %23 to %"class.std::__cxx1998::vector"*
  %25 = call i64 @_ZNKSt9__cxx19986vectorIiSaIiEE4sizeEv(%"class.std::__cxx1998::vector"* %24) #3
  %26 = invoke dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter10_M_integerElPKc(%"class.__gnu_debug::_Error_formatter"* %20, i64 %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0))
          to label %27 unwind label %76

; <label>:27:                                     ; preds = %21
  invoke void @_ZNK11__gnu_debug16_Error_formatter8_M_errorEv(%"class.__gnu_debug::_Error_formatter"* %26) #13
          to label %28 unwind label %76

; <label>:28:                                     ; preds = %27
  unreachable

; <label>:29:                                     ; preds = %7
  br label %30

; <label>:30:                                     ; preds = %29
  br label %31

; <label>:31:                                     ; preds = %30
  %32 = load i32, i32* @x.22
  %33 = load i32, i32* @y.23
  %34 = sub i32 %32, -961254478
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -961254478
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  br i1 %56, label %58, label %79

; <label>:58:                                     ; preds = %31, %79
  %59 = call dereferenceable(24) %"class.std::__cxx1998::vector"* @_ZNSt7__debug6vectorIiSaIiEE7_M_baseEv(%"class.std::__debug::vector"* %6) #3
  %60 = load i64, i64* %4, align 8
  %61 = call dereferenceable(4) i32* @_ZNSt9__cxx19986vectorIiSaIiEEixEm(%"class.std::__cxx1998::vector"* %59, i64 %60) #3
  %62 = load i32, i32* @x.22
  %63 = load i32, i32* @y.23
  %64 = sub i32 0, 1
  %65 = add i32 %62, %64
  %66 = sub i32 %62, 1
  %67 = mul i32 %62, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %63, 10
  %71 = and i1 %69, %70
  %72 = xor i1 %69, %70
  %73 = or i1 %71, %72
  %74 = or i1 %69, %70
  br i1 %73, label %75, label %79

; <label>:75:                                     ; preds = %58
  ret i32* %61

; <label>:76:                                     ; preds = %27, %21, %18, %15, %14
  %77 = landingpad { i8*, i32 }
          catch i8* null
  %78 = extractvalue { i8*, i32 } %77, 0
  call void @__clang_call_terminate(i8* %78) #11
  unreachable

; <label>:79:                                     ; preds = %58, %31
  %80 = call dereferenceable(24) %"class.std::__cxx1998::vector"* @_ZNSt7__debug6vectorIiSaIiEE7_M_baseEv(%"class.std::__debug::vector"* %6) #3
  %81 = load i64, i64* %4, align 8
  %82 = call dereferenceable(4) i32* @_ZNSt9__cxx19986vectorIiSaIiEEixEm(%"class.std::__cxx1998::vector"* %80, i64 %81) #3
  br label %58
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIbEC2Ev(%"class.std::allocator.21"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.21"*, align 8
  store %"class.std::allocator.21"* %0, %"class.std::allocator.21"** %2, align 8
  %3 = load %"class.std::allocator.21"*, %"class.std::allocator.21"** %2, align 8
  %4 = bitcast %"class.std::allocator.21"* %3 to %"class.__gnu_cxx::new_allocator.22"*
  call void @_ZN9__gnu_cxx13new_allocatorIbEC2Ev(%"class.__gnu_cxx::new_allocator.22"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt7__debug6vectorIbSaIbEEC2EmRKbRKS1_(%"class.std::__debug::vector.10"*, i64, i8* dereferenceable(1), %"class.std::allocator.21"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::__debug::vector.10"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %"class.std::allocator.21"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::__debug::vector.10"* %0, %"class.std::__debug::vector.10"** %5, align 8
  store i64 %1, i64* %6, align 8
  store i8* %2, i8** %7, align 8
  store %"class.std::allocator.21"* %3, %"class.std::allocator.21"** %8, align 8
  %11 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %5, align 8
  %12 = bitcast %"class.std::__debug::vector.10"* %11 to %"class.__gnu_debug::_Safe_container.11"*
  call void @_ZN11__gnu_debug15_Safe_containerINSt7__debug6vectorIbSaIbEEES3_NS_14_Safe_sequenceELb1EEC2Ev(%"class.__gnu_debug::_Safe_container.11"* %12) #3
  %13 = bitcast %"class.std::__debug::vector.10"* %11 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 24
  %15 = bitcast i8* %14 to %"class.std::__cxx1998::vector.15"*
  %16 = load i64, i64* %6, align 8
  %17 = load i8*, i8** %7, align 8
  %18 = load %"class.std::allocator.21"*, %"class.std::allocator.21"** %8, align 8
  invoke void @_ZNSt9__cxx19986vectorIbSaIbEEC2EmRKbRKS1_(%"class.std::__cxx1998::vector.15"* %15, i64 %16, i8* dereferenceable(1) %17, %"class.std::allocator.21"* dereferenceable(1) %18)
          to label %19 unwind label %23

; <label>:19:                                     ; preds = %4
  %20 = bitcast %"class.std::__debug::vector.10"* %11 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 64
  %22 = bitcast i8* %21 to %"class.__gnu_debug::_Safe_vector.19"*
  call void @_ZN11__gnu_debug12_Safe_vectorINSt7__debug6vectorIbSaIbEEENSt9__cxx19986vectorIbS3_EEEC2Ev(%"class.__gnu_debug::_Safe_vector.19"* %22) #3
  ret void

; <label>:23:                                     ; preds = %4
  %24 = landingpad { i8*, i32 }
          cleanup
  %25 = extractvalue { i8*, i32 } %24, 0
  store i8* %25, i8** %9, align 8
  %26 = extractvalue { i8*, i32 } %24, 1
  store i32 %26, i32* %10, align 4
  %27 = bitcast %"class.std::__debug::vector.10"* %11 to %"class.__gnu_debug::_Safe_container.11"*
  call void @_ZN11__gnu_debug15_Safe_containerINSt7__debug6vectorIbSaIbEEES3_NS_14_Safe_sequenceELb1EED2Ev(%"class.__gnu_debug::_Safe_container.11"* %27) #3
  br label %28

; <label>:28:                                     ; preds = %23
  %29 = load i8*, i8** %9, align 8
  %30 = load i32, i32* %10, align 4
  %31 = insertvalue { i8*, i32 } undef, i8* %29, 0
  %32 = insertvalue { i8*, i32 } %31, i32 %30, 1
  resume { i8*, i32 } %32
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaINSt7__debug6vectorIbSaIbEEEEC2Ev(%"class.std::allocator.7"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.28
  %5 = load i32, i32* @y.29
  %6 = sub i32 %4, -510819908
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -510819908
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1904431869, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1904431869, label %18
    i32 -46822058, label %38
    i32 -582249200, label %57
    i32 -631534699, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -46822058, i32 -631534699
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %39, align 8
  %40 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %39, align 8
  %41 = bitcast %"class.std::allocator.7"* %40 to %"class.__gnu_cxx::new_allocator.8"*
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__debug6vectorIbSaIbEEEEC2Ev(%"class.__gnu_cxx::new_allocator.8"* %41) #3
  %42 = load i32, i32* @x.28
  %43 = load i32, i32* @y.29
  %44 = add i32 %42, 1455006951
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 1455006951
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -582249200, i32 -631534699
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %59, align 8
  %60 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %59, align 8
  %61 = bitcast %"class.std::allocator.7"* %60 to %"class.__gnu_cxx::new_allocator.8"*
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__debug6vectorIbSaIbEEEEC2Ev(%"class.__gnu_cxx::new_allocator.8"* %61) #3
  store i32 -46822058, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt7__debug6vectorINS0_IbSaIbEEESaIS2_EEC2EmRKS2_RKS3_(%"class.std::__debug::vector.0"*, i64, %"class.std::__debug::vector.10"* dereferenceable(72), %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.30
  %6 = load i32, i32* @y.31
  %7 = add i32 %5, -1798572899
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1798572899
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %6, 10
  %15 = and i1 %13, %14
  %16 = xor i1 %13, %14
  %17 = or i1 %15, %16
  %18 = or i1 %13, %14
  br i1 %17, label %19, label %104

; <label>:19:                                     ; preds = %4, %104
  %20 = alloca %"class.std::__debug::vector.0"*, align 8
  %21 = alloca i64, align 8
  %22 = alloca %"class.std::__debug::vector.10"*, align 8
  %23 = alloca %"class.std::allocator.7"*, align 8
  %24 = alloca i8*
  %25 = alloca i32
  store %"class.std::__debug::vector.0"* %0, %"class.std::__debug::vector.0"** %20, align 8
  store i64 %1, i64* %21, align 8
  store %"class.std::__debug::vector.10"* %2, %"class.std::__debug::vector.10"** %22, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %23, align 8
  %26 = load %"class.std::__debug::vector.0"*, %"class.std::__debug::vector.0"** %20, align 8
  %27 = bitcast %"class.std::__debug::vector.0"* %26 to %"class.__gnu_debug::_Safe_container.1"*
  call void @_ZN11__gnu_debug15_Safe_containerINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEES5_NS_14_Safe_sequenceELb1EEC2Ev(%"class.__gnu_debug::_Safe_container.1"* %27) #3
  %28 = bitcast %"class.std::__debug::vector.0"* %26 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 24
  %30 = bitcast i8* %29 to %"class.std::__cxx1998::vector.5"*
  %31 = load i64, i64* %21, align 8
  %32 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %22, align 8
  %33 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %23, align 8
  %34 = load i32, i32* @x.30
  %35 = load i32, i32* @y.31
  %36 = sub i32 %34, 143304777
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 143304777
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  br i1 %58, label %60, label %104

; <label>:60:                                     ; preds = %19
  invoke void @_ZNSt9__cxx19986vectorINSt7__debug6vectorIbSaIbEEESaIS4_EEC2EmRKS4_RKS5_(%"class.std::__cxx1998::vector.5"* %30, i64 %31, %"class.std::__debug::vector.10"* dereferenceable(72) %32, %"class.std::allocator.7"* dereferenceable(1) %33)
          to label %61 unwind label %65

; <label>:61:                                     ; preds = %60
  %62 = bitcast %"class.std::__debug::vector.0"* %26 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 48
  %64 = bitcast i8* %63 to %"class.__gnu_debug::_Safe_vector.20"*
  call void @_ZN11__gnu_debug12_Safe_vectorINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEENSt9__cxx19986vectorIS4_S5_EEEC2Ev(%"class.__gnu_debug::_Safe_vector.20"* %64) #3
  ret void

; <label>:65:                                     ; preds = %60
  %66 = landingpad { i8*, i32 }
          cleanup
  %67 = extractvalue { i8*, i32 } %66, 0
  store i8* %67, i8** %24, align 8
  %68 = extractvalue { i8*, i32 } %66, 1
  store i32 %68, i32* %25, align 4
  %69 = bitcast %"class.std::__debug::vector.0"* %26 to %"class.__gnu_debug::_Safe_container.1"*
  call void @_ZN11__gnu_debug15_Safe_containerINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEES5_NS_14_Safe_sequenceELb1EED2Ev(%"class.__gnu_debug::_Safe_container.1"* %69) #3
  br label %70

; <label>:70:                                     ; preds = %65
  %71 = load i32, i32* @x.30
  %72 = load i32, i32* @y.31
  %73 = sub i32 %71, -484533148
  %74 = sub i32 %73, 1
  %75 = add i32 %74, -484533148
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  br i1 %83, label %85, label %119

; <label>:85:                                     ; preds = %70, %119
  %86 = load i8*, i8** %24, align 8
  %87 = load i32, i32* %25, align 4
  %88 = insertvalue { i8*, i32 } undef, i8* %86, 0
  %89 = insertvalue { i8*, i32 } %88, i32 %87, 1
  %90 = load i32, i32* @x.30
  %91 = load i32, i32* @y.31
  %92 = sub i32 0, 1
  %93 = add i32 %90, %92
  %94 = sub i32 %90, 1
  %95 = mul i32 %90, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %91, 10
  %99 = and i1 %97, %98
  %100 = xor i1 %97, %98
  %101 = or i1 %99, %100
  %102 = or i1 %97, %98
  br i1 %101, label %103, label %119

; <label>:103:                                    ; preds = %85
  resume { i8*, i32 } %89

; <label>:104:                                    ; preds = %19, %4
  %105 = alloca %"class.std::__debug::vector.0"*, align 8
  %106 = alloca i64, align 8
  %107 = alloca %"class.std::__debug::vector.10"*, align 8
  %108 = alloca %"class.std::allocator.7"*, align 8
  %109 = alloca i8*
  %110 = alloca i32
  store %"class.std::__debug::vector.0"* %0, %"class.std::__debug::vector.0"** %105, align 8
  store i64 %1, i64* %106, align 8
  store %"class.std::__debug::vector.10"* %2, %"class.std::__debug::vector.10"** %107, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %108, align 8
  %111 = load %"class.std::__debug::vector.0"*, %"class.std::__debug::vector.0"** %105, align 8
  %112 = bitcast %"class.std::__debug::vector.0"* %111 to %"class.__gnu_debug::_Safe_container.1"*
  call void @_ZN11__gnu_debug15_Safe_containerINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEES5_NS_14_Safe_sequenceELb1EEC2Ev(%"class.__gnu_debug::_Safe_container.1"* %112) #3
  %113 = bitcast %"class.std::__debug::vector.0"* %111 to i8*
  %114 = getelementptr inbounds i8, i8* %113, i64 24
  %115 = bitcast i8* %114 to %"class.std::__cxx1998::vector.5"*
  %116 = load i64, i64* %106, align 8
  %117 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %107, align 8
  %118 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %108, align 8
  br label %19

; <label>:119:                                    ; preds = %85, %70
  %120 = load i8*, i8** %24, align 8
  %121 = load i32, i32* %25, align 4
  %122 = insertvalue { i8*, i32 } undef, i8* %120, 0
  %123 = insertvalue { i8*, i32 } %122, i32 %121, 1
  br label %85
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaINSt7__debug6vectorIbSaIbEEEED2Ev(%"class.std::allocator.7"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %2, align 8
  %3 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %2, align 8
  %4 = bitcast %"class.std::allocator.7"* %3 to %"class.__gnu_cxx::new_allocator.8"*
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__debug6vectorIbSaIbEEEED2Ev(%"class.__gnu_cxx::new_allocator.8"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt7__debug6vectorIbSaIbEED2Ev(%"class.std::__debug::vector.10"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.34
  %5 = load i32, i32* @y.35
  %6 = sub i32 %4, 417450473
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 417450473
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 2069184820, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %80
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 2069184820, label %18
    i32 -1621913014, label %38
    i32 2061030221, label %72
    i32 -1809622731, label %73
  ]

; <label>:17:                                     ; preds = %15
  br label %80

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1621913014, i32 -1809622731
  store i32 %37, i32* %14
  br label %80

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::__debug::vector.10"*, align 8
  store %"class.std::__debug::vector.10"* %0, %"class.std::__debug::vector.10"** %39, align 8
  %40 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %39, align 8
  %41 = bitcast %"class.std::__debug::vector.10"* %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 24
  %43 = bitcast i8* %42 to %"class.std::__cxx1998::vector.15"*
  call void @_ZNSt9__cxx19986vectorIbSaIbEED2Ev(%"class.std::__cxx1998::vector.15"* %43) #3
  %44 = bitcast %"class.std::__debug::vector.10"* %40 to %"class.__gnu_debug::_Safe_container.11"*
  call void @_ZN11__gnu_debug15_Safe_containerINSt7__debug6vectorIbSaIbEEES3_NS_14_Safe_sequenceELb1EED2Ev(%"class.__gnu_debug::_Safe_container.11"* %44) #3
  %45 = load i32, i32* @x.34
  %46 = load i32, i32* @y.35
  %47 = add i32 %45, -2141012873
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -2141012873
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 2061030221, i32 -1809622731
  store i32 %71, i32* %14
  br label %80

; <label>:72:                                     ; preds = %15
  ret void

; <label>:73:                                     ; preds = %15
  %74 = alloca %"class.std::__debug::vector.10"*, align 8
  store %"class.std::__debug::vector.10"* %0, %"class.std::__debug::vector.10"** %74, align 8
  %75 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %74, align 8
  %76 = bitcast %"class.std::__debug::vector.10"* %75 to i8*
  %77 = getelementptr inbounds i8, i8* %76, i64 24
  %78 = bitcast i8* %77 to %"class.std::__cxx1998::vector.15"*
  call void @_ZNSt9__cxx19986vectorIbSaIbEED2Ev(%"class.std::__cxx1998::vector.15"* %78) #3
  %79 = bitcast %"class.std::__debug::vector.10"* %75 to %"class.__gnu_debug::_Safe_container.11"*
  call void @_ZN11__gnu_debug15_Safe_containerINSt7__debug6vectorIbSaIbEEES3_NS_14_Safe_sequenceELb1EED2Ev(%"class.__gnu_debug::_Safe_container.11"* %79) #3
  store i32 -1621913014, i32* %14
  br label %80

; <label>:80:                                     ; preds = %73, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIbED2Ev(%"class.std::allocator.21"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.21"*, align 8
  store %"class.std::allocator.21"* %0, %"class.std::allocator.21"** %2, align 8
  %3 = load %"class.std::allocator.21"*, %"class.std::allocator.21"** %2, align 8
  %4 = bitcast %"class.std::allocator.21"* %3 to %"class.__gnu_cxx::new_allocator.22"*
  call void @_ZN9__gnu_cxx13new_allocatorIbED2Ev(%"class.__gnu_cxx::new_allocator.22"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(72) %"class.std::__debug::vector.10"* @_ZNSt7__debug6vectorINS0_IbSaIbEEESaIS2_EEixEm(%"class.std::__debug::vector.0"*, i64) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::__debug::vector.0"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.__gnu_debug::_Error_formatter", align 8
  store %"class.std::__debug::vector.0"* %0, %"class.std::__debug::vector.0"** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = load %"class.std::__debug::vector.0"*, %"class.std::__debug::vector.0"** %3, align 8
  br label %7

; <label>:7:                                      ; preds = %2
  %8 = load i64, i64* %4, align 8
  %9 = bitcast %"class.std::__debug::vector.0"* %6 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 24
  %11 = bitcast i8* %10 to %"class.std::__cxx1998::vector.5"*
  %12 = call i64 @_ZNKSt9__cxx19986vectorINSt7__debug6vectorIbSaIbEEESaIS4_EE4sizeEv(%"class.std::__cxx1998::vector.5"* %11) #3
  %13 = icmp ult i64 %8, %12
  br i1 %13, label %153, label %14

; <label>:14:                                     ; preds = %7
  invoke void @_ZN11__gnu_debug16_Error_formatter5_M_atEPKcm(%"class.__gnu_debug::_Error_formatter"* sret %5, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str, i32 0, i32 0), i64 409)
          to label %15 unwind label %159

; <label>:15:                                     ; preds = %14
  %16 = call dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter10_M_messageENS_13_Debug_msg_idE(%"class.__gnu_debug::_Error_formatter"* %5, i32 5) #3
  %17 = invoke dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_sequenceINSt7__debug6vectorINS3_IbSaIbEEESaIS5_EEEEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"* %16, %"class.std::__debug::vector.0"* dereferenceable(56) %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0))
          to label %18 unwind label %159

; <label>:18:                                     ; preds = %15
  %19 = load i32, i32* @x.38
  %20 = load i32, i32* @y.39
  %21 = sub i32 %19, -1455567484
  %22 = sub i32 %21, 1
  %23 = add i32 %22, -1455567484
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 false, true
  %32 = and i1 %29, false
  %33 = and i1 %27, %31
  %34 = and i1 %30, false
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 false, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  br i1 %43, label %45, label %162

; <label>:45:                                     ; preds = %18, %162
  %46 = load i64, i64* %4, align 8
  %47 = load i32, i32* @x.38
  %48 = load i32, i32* @y.39
  %49 = add i32 %47, -1090634410
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -1090634410
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  br i1 %59, label %61, label %162

; <label>:61:                                     ; preds = %45
  %62 = invoke dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter10_M_integerElPKc(%"class.__gnu_debug::_Error_formatter"* %17, i64 %46, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0))
          to label %63 unwind label %159

; <label>:63:                                     ; preds = %61
  %64 = bitcast %"class.std::__debug::vector.0"* %6 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 24
  %66 = bitcast i8* %65 to %"class.std::__cxx1998::vector.5"*
  %67 = call i64 @_ZNKSt9__cxx19986vectorINSt7__debug6vectorIbSaIbEEESaIS4_EE4sizeEv(%"class.std::__cxx1998::vector.5"* %66) #3
  %68 = invoke dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter10_M_integerElPKc(%"class.__gnu_debug::_Error_formatter"* %62, i64 %67, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0))
          to label %69 unwind label %159

; <label>:69:                                     ; preds = %63
  %70 = load i32, i32* @x.38
  %71 = load i32, i32* @y.39
  %72 = sub i32 %70, -505081468
  %73 = sub i32 %72, 1
  %74 = add i32 %73, -505081468
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  br i1 %82, label %84, label %164

; <label>:84:                                     ; preds = %69, %164
  %85 = load i32, i32* @x.38
  %86 = load i32, i32* @y.39
  %87 = sub i32 0, 1
  %88 = add i32 %85, %87
  %89 = sub i32 %85, 1
  %90 = mul i32 %85, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %86, 10
  %94 = and i1 %92, %93
  %95 = xor i1 %92, %93
  %96 = or i1 %94, %95
  %97 = or i1 %92, %93
  br i1 %96, label %98, label %164

; <label>:98:                                     ; preds = %84
  invoke void @_ZNK11__gnu_debug16_Error_formatter8_M_errorEv(%"class.__gnu_debug::_Error_formatter"* %68) #13
          to label %99 unwind label %159

; <label>:99:                                     ; preds = %98
  %100 = load i32, i32* @x.38
  %101 = load i32, i32* @y.39
  %102 = sub i32 0, 1
  %103 = add i32 %100, %102
  %104 = sub i32 %100, 1
  %105 = mul i32 %100, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %101, 10
  %109 = xor i1 %107, true
  %110 = xor i1 %108, true
  %111 = xor i1 true, true
  %112 = and i1 %109, true
  %113 = and i1 %107, %111
  %114 = and i1 %110, true
  %115 = and i1 %108, %111
  %116 = or i1 %112, %113
  %117 = or i1 %114, %115
  %118 = xor i1 %116, %117
  %119 = or i1 %109, %110
  %120 = xor i1 %119, true
  %121 = or i1 true, %111
  %122 = and i1 %120, %121
  %123 = or i1 %118, %122
  %124 = or i1 %107, %108
  br i1 %123, label %125, label %165

; <label>:125:                                    ; preds = %99, %165
  %126 = load i32, i32* @x.38
  %127 = load i32, i32* @y.39
  %128 = add i32 %126, -86462606
  %129 = sub i32 %128, 1
  %130 = sub i32 %129, -86462606
  %131 = sub i32 %126, 1
  %132 = mul i32 %126, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %127, 10
  %136 = xor i1 %134, true
  %137 = xor i1 %135, true
  %138 = xor i1 true, true
  %139 = and i1 %136, true
  %140 = and i1 %134, %138
  %141 = and i1 %137, true
  %142 = and i1 %135, %138
  %143 = or i1 %139, %140
  %144 = or i1 %141, %142
  %145 = xor i1 %143, %144
  %146 = or i1 %136, %137
  %147 = xor i1 %146, true
  %148 = or i1 true, %138
  %149 = and i1 %147, %148
  %150 = or i1 %145, %149
  %151 = or i1 %134, %135
  br i1 %150, label %152, label %165

; <label>:152:                                    ; preds = %125
  unreachable

; <label>:153:                                    ; preds = %7
  br label %154

; <label>:154:                                    ; preds = %153
  br label %155

; <label>:155:                                    ; preds = %154
  %156 = call dereferenceable(24) %"class.std::__cxx1998::vector.5"* @_ZNSt7__debug6vectorINS0_IbSaIbEEESaIS2_EE7_M_baseEv(%"class.std::__debug::vector.0"* %6) #3
  %157 = load i64, i64* %4, align 8
  %158 = call dereferenceable(72) %"class.std::__debug::vector.10"* @_ZNSt9__cxx19986vectorINSt7__debug6vectorIbSaIbEEESaIS4_EEixEm(%"class.std::__cxx1998::vector.5"* %156, i64 %157) #3
  ret %"class.std::__debug::vector.10"* %158

; <label>:159:                                    ; preds = %98, %63, %61, %15, %14
  %160 = landingpad { i8*, i32 }
          catch i8* null
  %161 = extractvalue { i8*, i32 } %160, 0
  call void @__clang_call_terminate(i8* %161) #11
  unreachable

; <label>:162:                                    ; preds = %45, %18
  %163 = load i64, i64* %4, align 8
  br label %45

; <label>:164:                                    ; preds = %84, %69
  br label %84

; <label>:165:                                    ; preds = %125, %99
  br label %125
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i64 } @_ZNSt7__debug6vectorIbSaIbEEixEm(%"class.std::__debug::vector.10"*, i64) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.40
  %4 = load i32, i32* @y.41
  %5 = sub i32 %3, -1489110899
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -1489110899
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %189

; <label>:17:                                     ; preds = %2, %189
  %18 = alloca %"struct.std::__cxx1998::_Bit_reference", align 8
  %19 = alloca %"class.std::__debug::vector.10"*, align 8
  %20 = alloca i64, align 8
  %21 = alloca %"class.__gnu_debug::_Error_formatter", align 8
  store %"class.std::__debug::vector.10"* %0, %"class.std::__debug::vector.10"** %19, align 8
  store i64 %1, i64* %20, align 8
  %22 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %19, align 8
  %23 = load i32, i32* @x.40
  %24 = load i32, i32* @y.41
  %25 = sub i32 0, 1
  %26 = add i32 %23, %25
  %27 = sub i32 %23, 1
  %28 = mul i32 %23, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %24, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  br i1 %34, label %36, label %189

; <label>:36:                                     ; preds = %17
  br label %37

; <label>:37:                                     ; preds = %36
  %38 = load i32, i32* @x.40
  %39 = load i32, i32* @y.41
  %40 = sub i32 %38, 2096269679
  %41 = sub i32 %40, 1
  %42 = add i32 %41, 2096269679
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %195

; <label>:52:                                     ; preds = %37, %195
  %53 = load i64, i64* %20, align 8
  %54 = bitcast %"class.std::__debug::vector.10"* %22 to i8*
  %55 = getelementptr inbounds i8, i8* %54, i64 24
  %56 = bitcast i8* %55 to %"class.std::__cxx1998::vector.15"*
  %57 = call i64 @_ZNKSt9__cxx19986vectorIbSaIbEE4sizeEv(%"class.std::__cxx1998::vector.15"* %56) #3
  %58 = icmp ult i64 %53, %57
  %59 = load i32, i32* @x.40
  %60 = load i32, i32* @y.41
  %61 = add i32 %59, 1729334381
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, 1729334381
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  br i1 %71, label %73, label %195

; <label>:73:                                     ; preds = %52
  br i1 %58, label %89, label %74

; <label>:74:                                     ; preds = %73
  invoke void @_ZN11__gnu_debug16_Error_formatter5_M_atEPKcm(%"class.__gnu_debug::_Error_formatter"* sret %21, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str, i32 0, i32 0), i64 409)
          to label %75 unwind label %186

; <label>:75:                                     ; preds = %74
  %76 = call dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter10_M_messageENS_13_Debug_msg_idE(%"class.__gnu_debug::_Error_formatter"* %21, i32 5) #3
  %77 = invoke dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_sequenceINSt7__debug6vectorIbSaIbEEEEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"* %76, %"class.std::__debug::vector.10"* dereferenceable(72) %22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0))
          to label %78 unwind label %186

; <label>:78:                                     ; preds = %75
  %79 = load i64, i64* %20, align 8
  %80 = invoke dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter10_M_integerElPKc(%"class.__gnu_debug::_Error_formatter"* %77, i64 %79, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0))
          to label %81 unwind label %186

; <label>:81:                                     ; preds = %78
  %82 = bitcast %"class.std::__debug::vector.10"* %22 to i8*
  %83 = getelementptr inbounds i8, i8* %82, i64 24
  %84 = bitcast i8* %83 to %"class.std::__cxx1998::vector.15"*
  %85 = call i64 @_ZNKSt9__cxx19986vectorIbSaIbEE4sizeEv(%"class.std::__cxx1998::vector.15"* %84) #3
  %86 = invoke dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter10_M_integerElPKc(%"class.__gnu_debug::_Error_formatter"* %80, i64 %85, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0))
          to label %87 unwind label %186

; <label>:87:                                     ; preds = %81
  invoke void @_ZNK11__gnu_debug16_Error_formatter8_M_errorEv(%"class.__gnu_debug::_Error_formatter"* %86) #13
          to label %88 unwind label %186

; <label>:88:                                     ; preds = %87
  unreachable

; <label>:89:                                     ; preds = %73
  %90 = load i32, i32* @x.40
  %91 = load i32, i32* @y.41
  %92 = add i32 %90, -1218039599
  %93 = sub i32 %92, 1
  %94 = sub i32 %93, -1218039599
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = xor i1 %98, true
  %101 = xor i1 %99, true
  %102 = xor i1 false, true
  %103 = and i1 %100, false
  %104 = and i1 %98, %102
  %105 = and i1 %101, false
  %106 = and i1 %99, %102
  %107 = or i1 %103, %104
  %108 = or i1 %105, %106
  %109 = xor i1 %107, %108
  %110 = or i1 %100, %101
  %111 = xor i1 %110, true
  %112 = or i1 false, %102
  %113 = and i1 %111, %112
  %114 = or i1 %109, %113
  %115 = or i1 %98, %99
  br i1 %114, label %116, label %202

; <label>:116:                                    ; preds = %89, %202
  %117 = load i32, i32* @x.40
  %118 = load i32, i32* @y.41
  %119 = sub i32 %117, -1147031576
  %120 = sub i32 %119, 1
  %121 = add i32 %120, -1147031576
  %122 = sub i32 %117, 1
  %123 = mul i32 %117, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %118, 10
  %127 = and i1 %125, %126
  %128 = xor i1 %125, %126
  %129 = or i1 %127, %128
  %130 = or i1 %125, %126
  br i1 %129, label %131, label %202

; <label>:131:                                    ; preds = %116
  br label %132

; <label>:132:                                    ; preds = %131
  br label %133

; <label>:133:                                    ; preds = %132
  %134 = load i32, i32* @x.40
  %135 = load i32, i32* @y.41
  %136 = sub i32 %134, 1805270442
  %137 = sub i32 %136, 1
  %138 = add i32 %137, 1805270442
  %139 = sub i32 %134, 1
  %140 = mul i32 %134, %138
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %135, 10
  %144 = xor i1 %142, true
  %145 = xor i1 %143, true
  %146 = xor i1 true, true
  %147 = and i1 %144, true
  %148 = and i1 %142, %146
  %149 = and i1 %145, true
  %150 = and i1 %143, %146
  %151 = or i1 %147, %148
  %152 = or i1 %149, %150
  %153 = xor i1 %151, %152
  %154 = or i1 %144, %145
  %155 = xor i1 %154, true
  %156 = or i1 true, %146
  %157 = and i1 %155, %156
  %158 = or i1 %153, %157
  %159 = or i1 %142, %143
  br i1 %158, label %160, label %203

; <label>:160:                                    ; preds = %133, %203
  %161 = call dereferenceable(40) %"class.std::__cxx1998::vector.15"* @_ZNSt7__debug6vectorIbSaIbEE7_M_baseEv(%"class.std::__debug::vector.10"* %22) #3
  %162 = load i64, i64* %20, align 8
  %163 = load i32, i32* @x.40
  %164 = load i32, i32* @y.41
  %165 = sub i32 0, 1
  %166 = add i32 %163, %165
  %167 = sub i32 %163, 1
  %168 = mul i32 %163, %166
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %164, 10
  %172 = and i1 %170, %171
  %173 = xor i1 %170, %171
  %174 = or i1 %172, %173
  %175 = or i1 %170, %171
  br i1 %174, label %176, label %203

; <label>:176:                                    ; preds = %160
  %177 = invoke { i64*, i64 } @_ZNSt9__cxx19986vectorIbSaIbEEixEm(%"class.std::__cxx1998::vector.15"* %161, i64 %162)
          to label %178 unwind label %186

; <label>:178:                                    ; preds = %176
  %179 = bitcast %"struct.std::__cxx1998::_Bit_reference"* %18 to { i64*, i64 }*
  %180 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %179, i32 0, i32 0
  %181 = extractvalue { i64*, i64 } %177, 0
  store i64* %181, i64** %180, align 8
  %182 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %179, i32 0, i32 1
  %183 = extractvalue { i64*, i64 } %177, 1
  store i64 %183, i64* %182, align 8
  %184 = bitcast %"struct.std::__cxx1998::_Bit_reference"* %18 to { i64*, i64 }*
  %185 = load { i64*, i64 }, { i64*, i64 }* %184, align 8
  ret { i64*, i64 } %185

; <label>:186:                                    ; preds = %176, %87, %81, %78, %75, %74
  %187 = landingpad { i8*, i32 }
          catch i8* null
  %188 = extractvalue { i8*, i32 } %187, 0
  call void @__clang_call_terminate(i8* %188) #11
  unreachable

; <label>:189:                                    ; preds = %17, %2
  %190 = alloca %"struct.std::__cxx1998::_Bit_reference", align 8
  %191 = alloca %"class.std::__debug::vector.10"*, align 8
  %192 = alloca i64, align 8
  %193 = alloca %"class.__gnu_debug::_Error_formatter", align 8
  store %"class.std::__debug::vector.10"* %0, %"class.std::__debug::vector.10"** %191, align 8
  store i64 %1, i64* %192, align 8
  %194 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %191, align 8
  br label %17

; <label>:195:                                    ; preds = %52, %37
  %196 = load i64, i64* %20, align 8
  %197 = bitcast %"class.std::__debug::vector.10"* %22 to i8*
  %198 = getelementptr inbounds i8, i8* %197, i64 24
  %199 = bitcast i8* %198 to %"class.std::__cxx1998::vector.15"*
  %200 = call i64 @_ZNKSt9__cxx19986vectorIbSaIbEE4sizeEv(%"class.std::__cxx1998::vector.15"* %199) #3
  %201 = icmp ult i64 %196, %200
  br label %52

; <label>:202:                                    ; preds = %116, %89
  br label %116

; <label>:203:                                    ; preds = %160, %133
  %204 = call dereferenceable(40) %"class.std::__cxx1998::vector.15"* @_ZNSt7__debug6vectorIbSaIbEE7_M_baseEv(%"class.std::__debug::vector.10"* %22) #3
  %205 = load i64, i64* %20, align 8
  br label %160
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::__cxx1998::_Bit_reference"* @_ZNSt9__cxx199814_Bit_referenceaSEb(%"struct.std::__cxx1998::_Bit_reference"*, i1 zeroext) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"struct.std::__cxx1998::_Bit_reference"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.42
  %8 = load i32, i32* @y.43
  %9 = sub i32 %7, 1823370409
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 1823370409
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 22220793, i32* %17
  br label %18

; <label>:18:                                     ; preds = %2, %206
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 22220793, label %21
    i32 -1434986245, label %41
    i32 -401041681, label %74
    i32 1150793503, label %77
    i32 -404858579, label %101
    i32 -946419173, label %117
    i32 -326387086, label %149
    i32 -1648310990, label %150
    i32 1000439258, label %152
    i32 -280818437, label %159
  ]

; <label>:20:                                     ; preds = %18
  br label %206

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1434986245, i32 1000439258
  store i32 %40, i32* %17
  br label %206

; <label>:41:                                     ; preds = %18
  %42 = alloca %"struct.std::__cxx1998::_Bit_reference"*, align 8
  %43 = alloca i8, align 1
  store %"struct.std::__cxx1998::_Bit_reference"* %0, %"struct.std::__cxx1998::_Bit_reference"** %42, align 8
  %44 = zext i1 %1 to i8
  store i8 %44, i8* %43, align 1
  %45 = load %"struct.std::__cxx1998::_Bit_reference"*, %"struct.std::__cxx1998::_Bit_reference"** %42, align 8
  store %"struct.std::__cxx1998::_Bit_reference"* %45, %"struct.std::__cxx1998::_Bit_reference"** %4
  %46 = load i8, i8* %43, align 1
  %47 = trunc i8 %46 to i1
  store i1 %47, i1* %3
  %48 = load i32, i32* @x.42
  %49 = load i32, i32* @y.43
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -401041681, i32 1000439258
  store i32 %73, i32* %17
  br label %206

; <label>:74:                                     ; preds = %18
  %75 = load volatile i1, i1* %3
  %76 = select i1 %75, i32 1150793503, i32 -404858579
  store i32 %76, i32* %17
  br label %206

; <label>:77:                                     ; preds = %18
  %78 = load volatile %"struct.std::__cxx1998::_Bit_reference"*, %"struct.std::__cxx1998::_Bit_reference"** %4
  %79 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_reference", %"struct.std::__cxx1998::_Bit_reference"* %78, i32 0, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = load volatile %"struct.std::__cxx1998::_Bit_reference"*, %"struct.std::__cxx1998::_Bit_reference"** %4
  %82 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_reference", %"struct.std::__cxx1998::_Bit_reference"* %81, i32 0, i32 0
  %83 = load i64*, i64** %82, align 8
  %84 = load i64, i64* %83, align 8
  %85 = xor i64 %84, -1
  %86 = xor i64 %80, -1
  %87 = xor i64 -997559669732858074, -1
  %88 = and i64 %85, -997559669732858074
  %89 = and i64 %84, %87
  %90 = and i64 %86, -997559669732858074
  %91 = and i64 %80, %87
  %92 = or i64 %88, %89
  %93 = or i64 %90, %91
  %94 = xor i64 %92, %93
  %95 = or i64 %85, %86
  %96 = xor i64 %95, -1
  %97 = or i64 -997559669732858074, %87
  %98 = and i64 %96, %97
  %99 = or i64 %94, %98
  %100 = or i64 %84, %80
  store i64 %99, i64* %83, align 8
  store i32 -1648310990, i32* %17
  br label %206

; <label>:101:                                    ; preds = %18
  %102 = load i32, i32* @x.42
  %103 = load i32, i32* @y.43
  %104 = sub i32 %102, 1000760656
  %105 = sub i32 %104, 1
  %106 = add i32 %105, 1000760656
  %107 = sub i32 %102, 1
  %108 = mul i32 %102, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %103, 10
  %112 = and i1 %110, %111
  %113 = xor i1 %110, %111
  %114 = or i1 %112, %113
  %115 = or i1 %110, %111
  %116 = select i1 %114, i32 -946419173, i32 -280818437
  store i32 %116, i32* %17
  br label %206

; <label>:117:                                    ; preds = %18
  %118 = load volatile %"struct.std::__cxx1998::_Bit_reference"*, %"struct.std::__cxx1998::_Bit_reference"** %4
  %119 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_reference", %"struct.std::__cxx1998::_Bit_reference"* %118, i32 0, i32 1
  %120 = load i64, i64* %119, align 8
  %121 = xor i64 %120, -1
  %122 = and i64 -1, %121
  %123 = xor i64 -1, -1
  %124 = and i64 %120, %123
  %125 = or i64 %122, %124
  %126 = xor i64 %120, -1
  %127 = load volatile %"struct.std::__cxx1998::_Bit_reference"*, %"struct.std::__cxx1998::_Bit_reference"** %4
  %128 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_reference", %"struct.std::__cxx1998::_Bit_reference"* %127, i32 0, i32 0
  %129 = load i64*, i64** %128, align 8
  %130 = load i64, i64* %129, align 8
  %131 = xor i64 %125, -1
  %132 = xor i64 %130, %131
  %133 = and i64 %132, %130
  %134 = and i64 %130, %125
  store i64 %133, i64* %129, align 8
  %135 = load i32, i32* @x.42
  %136 = load i32, i32* @y.43
  %137 = sub i32 0, 1
  %138 = add i32 %135, %137
  %139 = sub i32 %135, 1
  %140 = mul i32 %135, %138
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %136, 10
  %144 = and i1 %142, %143
  %145 = xor i1 %142, %143
  %146 = or i1 %144, %145
  %147 = or i1 %142, %143
  %148 = select i1 %146, i32 -326387086, i32 -280818437
  store i32 %148, i32* %17
  br label %206

; <label>:149:                                    ; preds = %18
  store i32 -1648310990, i32* %17
  br label %206

; <label>:150:                                    ; preds = %18
  %151 = load volatile %"struct.std::__cxx1998::_Bit_reference"*, %"struct.std::__cxx1998::_Bit_reference"** %4
  ret %"struct.std::__cxx1998::_Bit_reference"* %151

; <label>:152:                                    ; preds = %18
  %153 = alloca %"struct.std::__cxx1998::_Bit_reference"*, align 8
  %154 = alloca i8, align 1
  store %"struct.std::__cxx1998::_Bit_reference"* %0, %"struct.std::__cxx1998::_Bit_reference"** %153, align 8
  %155 = zext i1 %1 to i8
  store i8 %155, i8* %154, align 1
  %156 = load %"struct.std::__cxx1998::_Bit_reference"*, %"struct.std::__cxx1998::_Bit_reference"** %153, align 8
  %157 = load i8, i8* %154, align 1
  %158 = trunc i8 %157 to i1
  store i32 -1434986245, i32* %17
  br label %206

; <label>:159:                                    ; preds = %18
  %160 = load volatile %"struct.std::__cxx1998::_Bit_reference"*, %"struct.std::__cxx1998::_Bit_reference"** %4
  %161 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_reference", %"struct.std::__cxx1998::_Bit_reference"* %160, i32 0, i32 1
  %162 = load i64, i64* %161, align 8
  %163 = sub i64 0, -1
  %164 = add i64 %162, %163
  %165 = sub i64 %162, -1
  %166 = mul i64 %164, -1
  %167 = sub i64 0, -1
  %168 = add i64 %162, %167
  %169 = sub i64 %162, -1
  %170 = mul i64 %168, -1
  %171 = sub i64 0, %162
  %172 = add i64 0, %171
  %173 = sub i64 0, %162
  %174 = add i64 %172, -6714964888272575199
  %175 = add i64 %174, -1
  %176 = sub i64 %175, -6714964888272575199
  %177 = add i64 %172, -1
  %178 = xor i64 %162, -1
  %179 = and i64 -162927546475631965, %178
  %180 = xor i64 -162927546475631965, -1
  %181 = and i64 %162, %180
  %182 = xor i64 -1, -1
  %183 = and i64 %182, -162927546475631965
  %184 = and i64 -1, %180
  %185 = or i64 %179, %181
  %186 = or i64 %183, %184
  %187 = xor i64 %185, %186
  %188 = xor i64 %162, -1
  %189 = load volatile %"struct.std::__cxx1998::_Bit_reference"*, %"struct.std::__cxx1998::_Bit_reference"** %4
  %190 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_reference", %"struct.std::__cxx1998::_Bit_reference"* %189, i32 0, i32 0
  %191 = load i64*, i64** %190, align 8
  %192 = load i64, i64* %191, align 8
  %193 = sub i64 %192, -870273342033855957
  %194 = sub i64 %193, %187
  %195 = add i64 %194, -870273342033855957
  %196 = sub i64 %192, %187
  %197 = mul i64 %195, %187
  %198 = xor i64 %192, -1
  %199 = xor i64 %187, -1
  %200 = xor i64 6679506992346297751, -1
  %201 = or i64 %198, %199
  %202 = or i64 6679506992346297751, %200
  %203 = xor i64 %201, -1
  %204 = and i64 %203, %202
  %205 = and i64 %192, %187
  store i64 %204, i64* %191, align 8
  store i32 -946419173, i32* %17
  br label %206

; <label>:206:                                    ; preds = %159, %152, %149, %117, %101, %77, %74, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt9__cxx199814_Bit_referencecvbEv(%"struct.std::__cxx1998::_Bit_reference"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::__cxx1998::_Bit_reference"*, align 8
  store %"struct.std::__cxx1998::_Bit_reference"* %0, %"struct.std::__cxx1998::_Bit_reference"** %2, align 8
  %3 = load %"struct.std::__cxx1998::_Bit_reference"*, %"struct.std::__cxx1998::_Bit_reference"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_reference", %"struct.std::__cxx1998::_Bit_reference"* %3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_reference", %"struct.std::__cxx1998::_Bit_reference"* %3, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = xor i64 %8, -1
  %10 = xor i64 %6, %9
  %11 = and i64 %10, %6
  %12 = and i64 %6, %8
  %13 = icmp ne i64 %11, 0
  %14 = xor i1 %13, true
  %15 = and i1 false, %14
  %16 = xor i1 false, true
  %17 = and i1 %13, %16
  %18 = xor i1 true, true
  %19 = and i1 %18, false
  %20 = and i1 true, %16
  %21 = or i1 %15, %17
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = xor i1 %13, true
  %25 = xor i1 %23, true
  %26 = and i1 false, %25
  %27 = xor i1 false, true
  %28 = and i1 %23, %27
  %29 = xor i1 true, true
  %30 = and i1 %29, false
  %31 = and i1 true, %27
  %32 = or i1 %26, %28
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = xor i1 %23, true
  ret i1 %34
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSt16next_permutationIN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS7_EEEEEbT_SE_(%"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"*) #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.46
  %4 = load i32, i32* @y.47
  %5 = sub i32 %3, 1683430305
  %6 = sub i32 %5, 1
  %7 = add i32 %6, 1683430305
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %249

; <label>:17:                                     ; preds = %2, %249
  %18 = alloca %"class.__gnu_debug::_Error_formatter", align 8
  %19 = alloca %"class.__gnu_debug::_Safe_iterator", align 8
  %20 = alloca %"class.__gnu_debug::_Safe_iterator", align 8
  %21 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %22 = alloca i8*
  %23 = alloca i32
  %24 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %25 = load i32, i32* @x.46
  %26 = load i32, i32* @y.47
  %27 = add i32 %25, -1276914442
  %28 = sub i32 %27, 1
  %29 = sub i32 %28, -1276914442
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 true, true
  %38 = and i1 %35, true
  %39 = and i1 %33, %37
  %40 = and i1 %36, true
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 true, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  br i1 %49, label %51, label %249

; <label>:51:                                     ; preds = %17
  br label %52

; <label>:52:                                     ; preds = %51
  %53 = call zeroext i1 @_ZN11__gnu_debug13__valid_rangeIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEEbRKNS_14_Safe_iteratorIT_T0_EESH_(%"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %0, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %1)
  br i1 %53, label %112, label %54

; <label>:54:                                     ; preds = %52
  %55 = load i32, i32* @x.46
  %56 = load i32, i32* @y.47
  %57 = sub i32 %55, -1037359090
  %58 = sub i32 %57, 1
  %59 = add i32 %58, -1037359090
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 true, true
  %68 = and i1 %65, true
  %69 = and i1 %63, %67
  %70 = and i1 %66, true
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 true, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  br i1 %79, label %81, label %257

; <label>:81:                                     ; preds = %54, %257
  call void @_ZN11__gnu_debug16_Error_formatter5_M_atEPKcm(%"class.__gnu_debug::_Error_formatter"* sret %18, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.8, i32 0, i32 0), i64 2965)
  %82 = call dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter10_M_messageENS_13_Debug_msg_idE(%"class.__gnu_debug::_Error_formatter"* %18, i32 0) #3
  %83 = call dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_iteratorINS_14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS8_EEEEEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"* %82, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i32 0, i32 0))
  %84 = call dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_iteratorINS_14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS8_EEEEEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"* %83, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i32 0, i32 0))
  call void @_ZNK11__gnu_debug16_Error_formatter8_M_errorEv(%"class.__gnu_debug::_Error_formatter"* %84) #13
  %85 = load i32, i32* @x.46
  %86 = load i32, i32* @y.47
  %87 = sub i32 %85, 1041265530
  %88 = sub i32 %87, 1
  %89 = add i32 %88, 1041265530
  %90 = sub i32 %85, 1
  %91 = mul i32 %85, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %86, 10
  %95 = xor i1 %93, true
  %96 = xor i1 %94, true
  %97 = xor i1 true, true
  %98 = and i1 %95, true
  %99 = and i1 %93, %97
  %100 = and i1 %96, true
  %101 = and i1 %94, %97
  %102 = or i1 %98, %99
  %103 = or i1 %100, %101
  %104 = xor i1 %102, %103
  %105 = or i1 %95, %96
  %106 = xor i1 %105, true
  %107 = or i1 true, %97
  %108 = and i1 %106, %107
  %109 = or i1 %104, %108
  %110 = or i1 %93, %94
  br i1 %109, label %111, label %257

; <label>:111:                                    ; preds = %81
  unreachable

; <label>:112:                                    ; preds = %52
  %113 = load i32, i32* @x.46
  %114 = load i32, i32* @y.47
  %115 = sub i32 %113, 1748668263
  %116 = sub i32 %115, 1
  %117 = add i32 %116, 1748668263
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = xor i1 %121, true
  %124 = xor i1 %122, true
  %125 = xor i1 true, true
  %126 = and i1 %123, true
  %127 = and i1 %121, %125
  %128 = and i1 %124, true
  %129 = and i1 %122, %125
  %130 = or i1 %126, %127
  %131 = or i1 %128, %129
  %132 = xor i1 %130, %131
  %133 = or i1 %123, %124
  %134 = xor i1 %133, true
  %135 = or i1 true, %125
  %136 = and i1 %134, %135
  %137 = or i1 %132, %136
  %138 = or i1 %121, %122
  br i1 %137, label %139, label %261

; <label>:139:                                    ; preds = %112, %261
  %140 = load i32, i32* @x.46
  %141 = load i32, i32* @y.47
  %142 = add i32 %140, 90566695
  %143 = sub i32 %142, 1
  %144 = sub i32 %143, 90566695
  %145 = sub i32 %140, 1
  %146 = mul i32 %140, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %141, 10
  %150 = and i1 %148, %149
  %151 = xor i1 %148, %149
  %152 = or i1 %150, %151
  %153 = or i1 %148, %149
  br i1 %152, label %154, label %261

; <label>:154:                                    ; preds = %139
  br label %155

; <label>:155:                                    ; preds = %154
  %156 = load i32, i32* @x.46
  %157 = load i32, i32* @y.47
  %158 = sub i32 0, 1
  %159 = add i32 %156, %158
  %160 = sub i32 %156, 1
  %161 = mul i32 %156, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %157, 10
  %165 = and i1 %163, %164
  %166 = xor i1 %163, %164
  %167 = or i1 %165, %166
  %168 = or i1 %163, %164
  br i1 %167, label %169, label %262

; <label>:169:                                    ; preds = %155, %262
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEC2ERKSC_(%"class.__gnu_debug::_Safe_iterator"* %19, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %0) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEC2ERKSC_(%"class.__gnu_debug::_Safe_iterator"* %20, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %1) #3
  %170 = load i32, i32* @x.46
  %171 = load i32, i32* @y.47
  %172 = add i32 %170, -101464824
  %173 = sub i32 %172, 1
  %174 = sub i32 %173, -101464824
  %175 = sub i32 %170, 1
  %176 = mul i32 %170, %174
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %171, 10
  %180 = and i1 %178, %179
  %181 = xor i1 %178, %179
  %182 = or i1 %180, %181
  %183 = or i1 %178, %179
  br i1 %182, label %184, label %262

; <label>:184:                                    ; preds = %169
  invoke void @_ZN9__gnu_cxx5__ops16__iter_less_iterEv()
          to label %185 unwind label %188

; <label>:185:                                    ; preds = %184
  %186 = invoke zeroext i1 @_ZSt18__next_permutationIN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS7_EEEENS2_5__ops15_Iter_less_iterEEbT_SG_T0_(%"class.__gnu_debug::_Safe_iterator"* %19, %"class.__gnu_debug::_Safe_iterator"* %20)
          to label %187 unwind label %188

; <label>:187:                                    ; preds = %185
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %20) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %19) #3
  ret i1 %186

; <label>:188:                                    ; preds = %185, %184
  %189 = landingpad { i8*, i32 }
          cleanup
  %190 = extractvalue { i8*, i32 } %189, 0
  store i8* %190, i8** %22, align 8
  %191 = extractvalue { i8*, i32 } %189, 1
  store i32 %191, i32* %23, align 4
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %20) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %19) #3
  br label %192

; <label>:192:                                    ; preds = %188
  %193 = load i32, i32* @x.46
  %194 = load i32, i32* @y.47
  %195 = sub i32 0, 1
  %196 = add i32 %193, %195
  %197 = sub i32 %193, 1
  %198 = mul i32 %193, %196
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %194, 10
  %202 = xor i1 %200, true
  %203 = xor i1 %201, true
  %204 = xor i1 true, true
  %205 = and i1 %202, true
  %206 = and i1 %200, %204
  %207 = and i1 %203, true
  %208 = and i1 %201, %204
  %209 = or i1 %205, %206
  %210 = or i1 %207, %208
  %211 = xor i1 %209, %210
  %212 = or i1 %202, %203
  %213 = xor i1 %212, true
  %214 = or i1 true, %204
  %215 = and i1 %213, %214
  %216 = or i1 %211, %215
  %217 = or i1 %200, %201
  br i1 %216, label %218, label %263

; <label>:218:                                    ; preds = %192, %263
  %219 = load i8*, i8** %22, align 8
  %220 = load i32, i32* %23, align 4
  %221 = insertvalue { i8*, i32 } undef, i8* %219, 0
  %222 = insertvalue { i8*, i32 } %221, i32 %220, 1
  %223 = load i32, i32* @x.46
  %224 = load i32, i32* @y.47
  %225 = sub i32 0, 1
  %226 = add i32 %223, %225
  %227 = sub i32 %223, 1
  %228 = mul i32 %223, %226
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %224, 10
  %232 = xor i1 %230, true
  %233 = xor i1 %231, true
  %234 = xor i1 false, true
  %235 = and i1 %232, false
  %236 = and i1 %230, %234
  %237 = and i1 %233, false
  %238 = and i1 %231, %234
  %239 = or i1 %235, %236
  %240 = or i1 %237, %238
  %241 = xor i1 %239, %240
  %242 = or i1 %232, %233
  %243 = xor i1 %242, true
  %244 = or i1 false, %234
  %245 = and i1 %243, %244
  %246 = or i1 %241, %245
  %247 = or i1 %230, %231
  br i1 %246, label %248, label %263

; <label>:248:                                    ; preds = %218
  resume { i8*, i32 } %222

; <label>:249:                                    ; preds = %17, %2
  %250 = alloca %"class.__gnu_debug::_Error_formatter", align 8
  %251 = alloca %"class.__gnu_debug::_Safe_iterator", align 8
  %252 = alloca %"class.__gnu_debug::_Safe_iterator", align 8
  %253 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %254 = alloca i8*
  %255 = alloca i32
  %256 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  br label %17

; <label>:257:                                    ; preds = %81, %54
  call void @_ZN11__gnu_debug16_Error_formatter5_M_atEPKcm(%"class.__gnu_debug::_Error_formatter"* sret %18, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.8, i32 0, i32 0), i64 2965)
  %258 = call dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter10_M_messageENS_13_Debug_msg_idE(%"class.__gnu_debug::_Error_formatter"* %18, i32 0) #3
  %259 = call dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_iteratorINS_14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS8_EEEEEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"* %258, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i32 0, i32 0))
  %260 = call dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_iteratorINS_14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS8_EEEEEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"* %259, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i32 0, i32 0))
  call void @_ZNK11__gnu_debug16_Error_formatter8_M_errorEv(%"class.__gnu_debug::_Error_formatter"* %260) #13
  br label %81

; <label>:261:                                    ; preds = %139, %112
  br label %139

; <label>:262:                                    ; preds = %169, %155
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEC2ERKSC_(%"class.__gnu_debug::_Safe_iterator"* %19, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %0) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEC2ERKSC_(%"class.__gnu_debug::_Safe_iterator"* %20, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %1) #3
  br label %169

; <label>:263:                                    ; preds = %218, %192
  %264 = load i8*, i8** %22, align 8
  %265 = load i32, i32* %23, align 4
  %266 = insertvalue { i8*, i32 } undef, i8* %264, 0
  %267 = insertvalue { i8*, i32 } %266, i32 %265, 1
  br label %218
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt7__debug6vectorIiSaIiEE5beginEv(%"class.__gnu_debug::_Safe_iterator"* noalias sret, %"class.std::__debug::vector"*) #4 comdat align 2 {
  %3 = alloca %"class.std::__debug::vector"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::__debug::vector"* %1, %"class.std::__debug::vector"** %3, align 8
  %5 = load %"class.std::__debug::vector"*, %"class.std::__debug::vector"** %3, align 8
  %6 = bitcast %"class.std::__debug::vector"* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 24
  %8 = bitcast i8* %7 to %"class.std::__cxx1998::vector"*
  %9 = call i32* @_ZNSt9__cxx19986vectorIiSaIiEE5beginEv(%"class.std::__cxx1998::vector"* %8) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store i32* %9, i32** %10, align 8
  %11 = bitcast %"class.std::__debug::vector"* %5 to %"class.__gnu_debug::_Safe_sequence_base"*
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEC2ERKS8_PKNS_19_Safe_sequence_baseE(%"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %4, %"class.__gnu_debug::_Safe_sequence_base"* %11) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt7__debug6vectorIiSaIiEE3endEv(%"class.__gnu_debug::_Safe_iterator"* noalias sret, %"class.std::__debug::vector"*) #4 comdat align 2 {
  %3 = alloca %"class.std::__debug::vector"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::__debug::vector"* %1, %"class.std::__debug::vector"** %3, align 8
  %5 = load %"class.std::__debug::vector"*, %"class.std::__debug::vector"** %3, align 8
  %6 = bitcast %"class.std::__debug::vector"* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 24
  %8 = bitcast i8* %7 to %"class.std::__cxx1998::vector"*
  %9 = call i32* @_ZNSt9__cxx19986vectorIiSaIiEE3endEv(%"class.std::__cxx1998::vector"* %8) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store i32* %9, i32** %10, align 8
  %11 = bitcast %"class.std::__debug::vector"* %5 to %"class.__gnu_debug::_Safe_sequence_base"*
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEC2ERKS8_PKNS_19_Safe_sequence_baseE(%"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %4, %"class.__gnu_debug::_Safe_sequence_base"* %11) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %2, align 8
  %3 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %2, align 8
  %4 = bitcast %"class.__gnu_debug::_Safe_iterator"* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 8
  %6 = bitcast i8* %5 to %"class.__gnu_debug::_Safe_iterator_base"*
  call void @_ZN11__gnu_debug19_Safe_iterator_baseD2Ev(%"class.__gnu_debug::_Safe_iterator_base"* %6) #3
  ret void
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt7__debug6vectorIiSaIiEED2Ev(%"class.std::__debug::vector"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.54
  %5 = load i32, i32* @y.55
  %6 = sub i32 %4, -670123522
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -670123522
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1032515586, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %67
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1032515586, label %18
    i32 -1776427012, label %26
    i32 -1390752455, label %59
    i32 284288250, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %67

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1776427012, i32 284288250
  store i32 %25, i32* %14
  br label %67

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::__debug::vector"*, align 8
  store %"class.std::__debug::vector"* %0, %"class.std::__debug::vector"** %27, align 8
  %28 = load %"class.std::__debug::vector"*, %"class.std::__debug::vector"** %27, align 8
  %29 = bitcast %"class.std::__debug::vector"* %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 24
  %31 = bitcast i8* %30 to %"class.std::__cxx1998::vector"*
  call void @_ZNSt9__cxx19986vectorIiSaIiEED2Ev(%"class.std::__cxx1998::vector"* %31) #3
  %32 = bitcast %"class.std::__debug::vector"* %28 to %"class.__gnu_debug::_Safe_container"*
  call void @_ZN11__gnu_debug15_Safe_containerINSt7__debug6vectorIiSaIiEEES3_NS_14_Safe_sequenceELb1EED2Ev(%"class.__gnu_debug::_Safe_container"* %32) #3
  %33 = load i32, i32* @x.54
  %34 = load i32, i32* @y.55
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -1390752455, i32 284288250
  store i32 %58, i32* %14
  br label %67

; <label>:59:                                     ; preds = %15
  ret void

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::__debug::vector"*, align 8
  store %"class.std::__debug::vector"* %0, %"class.std::__debug::vector"** %61, align 8
  %62 = load %"class.std::__debug::vector"*, %"class.std::__debug::vector"** %61, align 8
  %63 = bitcast %"class.std::__debug::vector"* %62 to i8*
  %64 = getelementptr inbounds i8, i8* %63, i64 24
  %65 = bitcast i8* %64 to %"class.std::__cxx1998::vector"*
  call void @_ZNSt9__cxx19986vectorIiSaIiEED2Ev(%"class.std::__cxx1998::vector"* %65) #3
  %66 = bitcast %"class.std::__debug::vector"* %62 to %"class.__gnu_debug::_Safe_container"*
  call void @_ZN11__gnu_debug15_Safe_containerINSt7__debug6vectorIiSaIiEEES3_NS_14_Safe_sequenceELb1EED2Ev(%"class.__gnu_debug::_Safe_container"* %66) #3
  store i32 -1776427012, i32* %14
  br label %67

; <label>:67:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt7__debug6vectorINS0_IbSaIbEEESaIS2_EED2Ev(%"class.std::__debug::vector.0"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::__debug::vector.0"*, align 8
  store %"class.std::__debug::vector.0"* %0, %"class.std::__debug::vector.0"** %2, align 8
  %3 = load %"class.std::__debug::vector.0"*, %"class.std::__debug::vector.0"** %2, align 8
  %4 = bitcast %"class.std::__debug::vector.0"* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 24
  %6 = bitcast i8* %5 to %"class.std::__cxx1998::vector.5"*
  call void @_ZNSt9__cxx19986vectorINSt7__debug6vectorIbSaIbEEESaIS4_EED2Ev(%"class.std::__cxx1998::vector.5"* %6) #3
  %7 = bitcast %"class.std::__debug::vector.0"* %3 to %"class.__gnu_debug::_Safe_container.1"*
  call void @_ZN11__gnu_debug15_Safe_containerINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEES5_NS_14_Safe_sequenceELb1EED2Ev(%"class.__gnu_debug::_Safe_container.1"* %7) #3
  ret void
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() #5 {
  %1 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  call void @_Z5solvev()
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt9__cxx19986vectorIbSaIbEED2Ev(%"class.std::__cxx1998::vector.15"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::__cxx1998::vector.15"*, align 8
  store %"class.std::__cxx1998::vector.15"* %0, %"class.std::__cxx1998::vector.15"** %2, align 8
  %3 = load %"class.std::__cxx1998::vector.15"*, %"class.std::__cxx1998::vector.15"** %2, align 8
  %4 = bitcast %"class.std::__cxx1998::vector.15"* %3 to %"struct.std::__cxx1998::_Bvector_base"*
  call void @_ZNSt9__cxx199813_Bvector_baseISaIbEED2Ev(%"struct.std::__cxx1998::_Bvector_base"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug15_Safe_containerINSt7__debug6vectorIbSaIbEEES3_NS_14_Safe_sequenceELb1EED2Ev(%"class.__gnu_debug::_Safe_container.11"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_debug::_Safe_container.11"*, align 8
  store %"class.__gnu_debug::_Safe_container.11"* %0, %"class.__gnu_debug::_Safe_container.11"** %2, align 8
  %3 = load %"class.__gnu_debug::_Safe_container.11"*, %"class.__gnu_debug::_Safe_container.11"** %2, align 8
  %4 = bitcast %"class.__gnu_debug::_Safe_container.11"* %3 to %"class.__gnu_debug::_Safe_sequence.12"*
  call void @_ZN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorIbSaIbEEEED2Ev(%"class.__gnu_debug::_Safe_sequence.12"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt9__cxx199813_Bvector_baseISaIbEED2Ev(%"struct.std::__cxx1998::_Bvector_base"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::__cxx1998::_Bvector_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::__cxx1998::_Bvector_base"* %0, %"struct.std::__cxx1998::_Bvector_base"** %2, align 8
  %5 = load %"struct.std::__cxx1998::_Bvector_base"*, %"struct.std::__cxx1998::_Bvector_base"** %2, align 8
  invoke void @_ZNSt9__cxx199813_Bvector_baseISaIbEE13_M_deallocateEv(%"struct.std::__cxx1998::_Bvector_base"* %5)
          to label %6 unwind label %8

; <label>:6:                                      ; preds = %1
  %7 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base", %"struct.std::__cxx1998::_Bvector_base"* %5, i32 0, i32 0
  call void @_ZNSt9__cxx199813_Bvector_baseISaIbEE13_Bvector_implD2Ev(%"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %7) #3
  ret void

; <label>:8:                                      ; preds = %1
  %9 = landingpad { i8*, i32 }
          cleanup
          filter [0 x i8*] zeroinitializer
  %10 = extractvalue { i8*, i32 } %9, 0
  store i8* %10, i8** %3, align 8
  %11 = extractvalue { i8*, i32 } %9, 1
  store i32 %11, i32* %4, align 4
  %12 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base", %"struct.std::__cxx1998::_Bvector_base"* %5, i32 0, i32 0
  call void @_ZNSt9__cxx199813_Bvector_baseISaIbEE13_Bvector_implD2Ev(%"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %12) #3
  br label %13

; <label>:13:                                     ; preds = %8
  %14 = load i32, i32* @x.64
  %15 = load i32, i32* @y.65
  %16 = add i32 %14, 319284710
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, 319284710
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  br i1 %26, label %28, label %57

; <label>:28:                                     ; preds = %13, %57
  %29 = load i8*, i8** %3, align 8
  call void @__cxa_call_unexpected(i8* %29) #13
  %30 = load i32, i32* @x.64
  %31 = load i32, i32* @y.65
  %32 = add i32 %30, -433746822
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -433746822
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  br i1 %54, label %56, label %57

; <label>:56:                                     ; preds = %28
  unreachable

; <label>:57:                                     ; preds = %28, %13
  %58 = load i8*, i8** %3, align 8
  call void @__cxa_call_unexpected(i8* %58) #13
  br label %28
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt9__cxx199813_Bvector_baseISaIbEE13_M_deallocateEv(%"struct.std::__cxx1998::_Bvector_base"*) #0 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca %"struct.std::__cxx1998::_Bvector_base"*
  %4 = alloca %"struct.std::__cxx1998::_Bvector_base"*, align 8
  %5 = alloca i64, align 8
  store %"struct.std::__cxx1998::_Bvector_base"* %0, %"struct.std::__cxx1998::_Bvector_base"** %4, align 8
  %6 = load %"struct.std::__cxx1998::_Bvector_base"*, %"struct.std::__cxx1998::_Bvector_base"** %4, align 8
  store %"struct.std::__cxx1998::_Bvector_base"* %6, %"struct.std::__cxx1998::_Bvector_base"** %3
  %7 = load volatile %"struct.std::__cxx1998::_Bvector_base"*, %"struct.std::__cxx1998::_Bvector_base"** %3
  %8 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base", %"struct.std::__cxx1998::_Bvector_base"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %8, i32 0, i32 0
  %10 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %9 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %11 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_iterator_base", %"struct.std::__cxx1998::_Bit_iterator_base"* %10, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8
  store i64* %12, i64** %2
  %13 = alloca i32
  store i32 -1616408271, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %144
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1616408271, label %17
    i32 -492962823, label %21
    i32 268654370, label %37
    i32 1343499656, label %83
    i32 397819248, label %84
    i32 -276173763, label %85
  ]

; <label>:16:                                     ; preds = %14
  br label %144

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64*, i64** %2
  %19 = icmp ne i64* %18, null
  %20 = select i1 %19, i32 -492962823, i32 397819248
  store i32 %20, i32* %13
  br label %144

; <label>:21:                                     ; preds = %14
  %22 = load i32, i32* @x.66
  %23 = load i32, i32* @y.67
  %24 = sub i32 %22, -1794047654
  %25 = sub i32 %24, 1
  %26 = add i32 %25, -1794047654
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  %36 = select i1 %34, i32 268654370, i32 -276173763
  store i32 %36, i32* %13
  br label %144

; <label>:37:                                     ; preds = %14
  %38 = load volatile %"struct.std::__cxx1998::_Bvector_base"*, %"struct.std::__cxx1998::_Bvector_base"** %3
  %39 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base", %"struct.std::__cxx1998::_Bvector_base"* %38, i32 0, i32 0
  %40 = call i64* @_ZNKSt9__cxx199813_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv(%"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %39) #3
  %41 = load volatile %"struct.std::__cxx1998::_Bvector_base"*, %"struct.std::__cxx1998::_Bvector_base"** %3
  %42 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base", %"struct.std::__cxx1998::_Bvector_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %42, i32 0, i32 0
  %44 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %43 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %45 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_iterator_base", %"struct.std::__cxx1998::_Bit_iterator_base"* %44, i32 0, i32 0
  %46 = load i64*, i64** %45, align 8
  %47 = ptrtoint i64* %40 to i64
  %48 = ptrtoint i64* %46 to i64
  %49 = sub i64 %47, -7837223925763421070
  %50 = sub i64 %49, %48
  %51 = add i64 %50, -7837223925763421070
  %52 = sub i64 %47, %48
  %53 = sdiv exact i64 %51, 8
  store i64 %53, i64* %5, align 8
  %54 = load volatile %"struct.std::__cxx1998::_Bvector_base"*, %"struct.std::__cxx1998::_Bvector_base"** %3
  %55 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base", %"struct.std::__cxx1998::_Bvector_base"* %54, i32 0, i32 0
  %56 = bitcast %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %55 to %"class.std::allocator.16"*
  %57 = load volatile %"struct.std::__cxx1998::_Bvector_base"*, %"struct.std::__cxx1998::_Bvector_base"** %3
  %58 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base", %"struct.std::__cxx1998::_Bvector_base"* %57, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %58, i32 0, i32 2
  %60 = load i64*, i64** %59, align 8
  %61 = load i64, i64* %5, align 8
  %62 = add i64 0, -8438731744137178316
  %63 = sub i64 %62, %61
  %64 = sub i64 %63, -8438731744137178316
  %65 = sub i64 0, %61
  %66 = getelementptr inbounds i64, i64* %60, i64 %64
  %67 = load i64, i64* %5, align 8
  call void @_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm(%"class.std::allocator.16"* dereferenceable(1) %56, i64* %66, i64 %67)
  %68 = load i32, i32* @x.66
  %69 = load i32, i32* @y.67
  %70 = sub i32 %68, 811117709
  %71 = sub i32 %70, 1
  %72 = add i32 %71, 811117709
  %73 = sub i32 %68, 1
  %74 = mul i32 %68, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %69, 10
  %78 = and i1 %76, %77
  %79 = xor i1 %76, %77
  %80 = or i1 %78, %79
  %81 = or i1 %76, %77
  %82 = select i1 %80, i32 1343499656, i32 -276173763
  store i32 %82, i32* %13
  br label %144

; <label>:83:                                     ; preds = %14
  store i32 397819248, i32* %13
  br label %144

; <label>:84:                                     ; preds = %14
  ret void

; <label>:85:                                     ; preds = %14
  %86 = load volatile %"struct.std::__cxx1998::_Bvector_base"*, %"struct.std::__cxx1998::_Bvector_base"** %3
  %87 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base", %"struct.std::__cxx1998::_Bvector_base"* %86, i32 0, i32 0
  %88 = call i64* @_ZNKSt9__cxx199813_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv(%"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %87) #3
  %89 = load volatile %"struct.std::__cxx1998::_Bvector_base"*, %"struct.std::__cxx1998::_Bvector_base"** %3
  %90 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base", %"struct.std::__cxx1998::_Bvector_base"* %89, i32 0, i32 0
  %91 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %90, i32 0, i32 0
  %92 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %91 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %93 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_iterator_base", %"struct.std::__cxx1998::_Bit_iterator_base"* %92, i32 0, i32 0
  %94 = load i64*, i64** %93, align 8
  %95 = ptrtoint i64* %88 to i64
  %96 = ptrtoint i64* %94 to i64
  %97 = add i64 %95, -2891374461530066667
  %98 = sub i64 %97, %96
  %99 = sub i64 %98, -2891374461530066667
  %100 = sub i64 %95, %96
  %101 = mul i64 %99, %96
  %102 = shl i64 %95, %96
  %103 = shl i64 %95, %96
  %104 = sub i64 0, %95
  %105 = add i64 0, %104
  %106 = sub i64 0, %95
  %107 = add i64 %105, 4824585268747383343
  %108 = add i64 %107, %96
  %109 = sub i64 %108, 4824585268747383343
  %110 = add i64 %105, %96
  %111 = sub i64 0, %96
  %112 = add i64 %95, %111
  %113 = sub i64 %95, %96
  %114 = mul i64 %112, %96
  %115 = shl i64 %95, %96
  %116 = shl i64 %95, %96
  %117 = shl i64 %95, %96
  %118 = sub i64 %95, 1032428579249690755
  %119 = sub i64 %118, %96
  %120 = add i64 %119, 1032428579249690755
  %121 = sub i64 %95, %96
  %122 = sub i64 0, %120
  %123 = add i64 0, %122
  %124 = sub i64 0, %120
  %125 = sub i64 0, 8
  %126 = sub i64 %123, %125
  %127 = add i64 %123, 8
  %128 = sdiv exact i64 %120, 8
  store i64 %128, i64* %5, align 8
  %129 = load volatile %"struct.std::__cxx1998::_Bvector_base"*, %"struct.std::__cxx1998::_Bvector_base"** %3
  %130 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base", %"struct.std::__cxx1998::_Bvector_base"* %129, i32 0, i32 0
  %131 = bitcast %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %130 to %"class.std::allocator.16"*
  %132 = load volatile %"struct.std::__cxx1998::_Bvector_base"*, %"struct.std::__cxx1998::_Bvector_base"** %3
  %133 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base", %"struct.std::__cxx1998::_Bvector_base"* %132, i32 0, i32 0
  %134 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %133, i32 0, i32 2
  %135 = load i64*, i64** %134, align 8
  %136 = load i64, i64* %5, align 8
  %137 = shl i64 0, %136
  %138 = shl i64 0, %136
  %139 = sub i64 0, %136
  %140 = add i64 0, %139
  %141 = sub i64 0, %136
  %142 = getelementptr inbounds i64, i64* %135, i64 %140
  %143 = load i64, i64* %5, align 8
  call void @_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm(%"class.std::allocator.16"* dereferenceable(1) %131, i64* %142, i64 %143)
  store i32 268654370, i32* %13
  br label %144

; <label>:144:                                    ; preds = %85, %83, %37, %21, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt9__cxx199813_Bvector_baseISaIbEE13_Bvector_implD2Ev(%"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.68
  %5 = load i32, i32* @y.69
  %6 = sub i32 %4, -995381187
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -995381187
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1372551090, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1372551090, label %18
    i32 1709056350, label %38
    i32 -2055649032, label %56
    i32 740322950, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1709056350, i32 740322950
  store i32 %37, i32* %14
  br label %61

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, align 8
  store %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %0, %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %39, align 8
  %40 = load %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %39, align 8
  %41 = bitcast %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %40 to %"class.std::allocator.16"*
  call void @_ZNSaImED2Ev(%"class.std::allocator.16"* %41) #3
  %42 = load i32, i32* @x.68
  %43 = load i32, i32* @y.69
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -2055649032, i32 740322950
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, align 8
  store %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %0, %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %58, align 8
  %59 = load %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %58, align 8
  %60 = bitcast %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %59 to %"class.std::allocator.16"*
  call void @_ZNSaImED2Ev(%"class.std::allocator.16"* %60) #3
  store i32 1709056350, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %38, %18, %17
  br label %15
}

declare void @__cxa_call_unexpected(i8*)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt9__cxx199813_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv(%"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*
  %4 = alloca i64*, align 8
  %5 = alloca %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, align 8
  store %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %0, %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %5, align 8
  %6 = load %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %5, align 8
  store %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %6, %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %3
  %7 = load volatile %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %3
  %8 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %7, i32 0, i32 2
  %9 = load i64*, i64** %8, align 8
  store i64* %9, i64** %2
  %10 = alloca i32
  store i32 -589993896, i32* %10
  br label %11

; <label>:11:                                     ; preds = %1, %28
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 -589993896, label %14
    i32 2085242668, label %18
    i32 1038799758, label %25
    i32 -1032263631, label %26
  ]

; <label>:13:                                     ; preds = %11
  br label %28

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64*, i64** %2
  %16 = icmp ne i64* %15, null
  %17 = select i1 %16, i32 2085242668, i32 1038799758
  store i32 %17, i32* %10
  br label %28

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %3
  %20 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %19, i32 0, i32 2
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds i64, i64* %21, i64 -1
  %23 = call i64* @_ZSt11__addressofImEPT_RS0_(i64* dereferenceable(8) %22) #3
  %24 = getelementptr inbounds i64, i64* %23, i64 1
  store i64* %24, i64** %4, align 8
  store i32 -1032263631, i32* %10
  br label %28

; <label>:25:                                     ; preds = %11
  store i64* null, i64** %4, align 8
  store i32 -1032263631, i32* %10
  br label %28

; <label>:26:                                     ; preds = %11
  %27 = load i64*, i64** %4, align 8
  ret i64* %27

; <label>:28:                                     ; preds = %25, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaImEE10deallocateERS0_Pmm(%"class.std::allocator.16"* dereferenceable(1), i64*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.16"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %4, align 8
  %8 = bitcast %"class.std::allocator.16"* %7 to %"class.__gnu_cxx::new_allocator.17"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm(%"class.__gnu_cxx::new_allocator.17"* %8, i64* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt11__addressofImEPT_RS0_(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.74
  %6 = load i32, i32* @y.75
  %7 = sub i32 %5, -459915579
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -459915579
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1196722471, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1196722471, label %19
    i32 771064524, label %27
    i32 -1200005585, label %59
    i32 1941780092, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 771064524, i32 1941780092
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca i64*, align 8
  store i64* %0, i64** %28, align 8
  %29 = load i64*, i64** %28, align 8
  %30 = bitcast i64* %29 to i8*
  %31 = bitcast i8* %30 to i64*
  store i64* %31, i64** %2
  %32 = load i32, i32* @x.74
  %33 = load i32, i32* @y.75
  %34 = add i32 %32, 1282261868
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 1282261868
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -1200005585, i32 1941780092
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile i64*, i64** %2
  ret i64* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca i64*, align 8
  store i64* %0, i64** %62, align 8
  %63 = load i64*, i64** %62, align 8
  %64 = bitcast i64* %63 to i8*
  %65 = bitcast i8* %64 to i64*
  store i32 771064524, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm(%"class.__gnu_cxx::new_allocator.17"*, i64*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = bitcast i64* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #6

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorImED2Ev(%"class.__gnu_cxx::new_allocator.17"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorIbSaIbEEEED2Ev(%"class.__gnu_debug::_Safe_sequence.12"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_debug::_Safe_sequence.12"*, align 8
  store %"class.__gnu_debug::_Safe_sequence.12"* %0, %"class.__gnu_debug::_Safe_sequence.12"** %2, align 8
  %3 = load %"class.__gnu_debug::_Safe_sequence.12"*, %"class.__gnu_debug::_Safe_sequence.12"** %2, align 8
  %4 = bitcast %"class.__gnu_debug::_Safe_sequence.12"* %3 to %"class.__gnu_debug::_Safe_sequence_base"*
  call void @_ZN11__gnu_debug19_Safe_sequence_baseD2Ev(%"class.__gnu_debug::_Safe_sequence_base"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug19_Safe_sequence_baseD2Ev(%"class.__gnu_debug::_Safe_sequence_base"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.82
  %3 = load i32, i32* @y.83
  %4 = sub i32 %2, -1623668220
  %5 = sub i32 %4, 1
  %6 = add i32 %5, -1623668220
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %80

; <label>:16:                                     ; preds = %1, %80
  %17 = alloca %"class.__gnu_debug::_Safe_sequence_base"*, align 8
  store %"class.__gnu_debug::_Safe_sequence_base"* %0, %"class.__gnu_debug::_Safe_sequence_base"** %17, align 8
  %18 = load %"class.__gnu_debug::_Safe_sequence_base"*, %"class.__gnu_debug::_Safe_sequence_base"** %17, align 8
  %19 = load i32, i32* @x.82
  %20 = load i32, i32* @y.83
  %21 = add i32 %19, -1043839478
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, -1043839478
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  br i1 %31, label %33, label %80

; <label>:33:                                     ; preds = %16
  invoke void @_ZN11__gnu_debug19_Safe_sequence_base13_M_detach_allEv(%"class.__gnu_debug::_Safe_sequence_base"* %18)
          to label %34 unwind label %35

; <label>:34:                                     ; preds = %33
  ret void

; <label>:35:                                     ; preds = %33
  %36 = load i32, i32* @x.82
  %37 = load i32, i32* @y.83
  %38 = add i32 %36, 548697922
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, 548697922
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  br i1 %48, label %50, label %83

; <label>:50:                                     ; preds = %35, %83
  %51 = landingpad { i8*, i32 }
          catch i8* null
  %52 = extractvalue { i8*, i32 } %51, 0
  call void @__clang_call_terminate(i8* %52) #11
  %53 = load i32, i32* @x.82
  %54 = load i32, i32* @y.83
  %55 = sub i32 %53, -1585581889
  %56 = sub i32 %55, 1
  %57 = add i32 %56, -1585581889
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  br i1 %77, label %79, label %83

; <label>:79:                                     ; preds = %50
  unreachable

; <label>:80:                                     ; preds = %16, %1
  %81 = alloca %"class.__gnu_debug::_Safe_sequence_base"*, align 8
  store %"class.__gnu_debug::_Safe_sequence_base"* %0, %"class.__gnu_debug::_Safe_sequence_base"** %81, align 8
  %82 = load %"class.__gnu_debug::_Safe_sequence_base"*, %"class.__gnu_debug::_Safe_sequence_base"** %81, align 8
  br label %16

; <label>:83:                                     ; preds = %50, %35
  %84 = landingpad { i8*, i32 }
          catch i8* null
  %85 = extractvalue { i8*, i32 } %84, 0
  call void @__clang_call_terminate(i8* %85) #11
  br label %50
}

declare void @_ZN11__gnu_debug19_Safe_sequence_base13_M_detach_allEv(%"class.__gnu_debug::_Safe_sequence_base"*) #1

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #7 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #11
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug19_Safe_iterator_baseD2Ev(%"class.__gnu_debug::_Safe_iterator_base"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.86
  %3 = load i32, i32* @y.87
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %119

; <label>:15:                                     ; preds = %1, %119
  %16 = alloca %"class.__gnu_debug::_Safe_iterator_base"*, align 8
  store %"class.__gnu_debug::_Safe_iterator_base"* %0, %"class.__gnu_debug::_Safe_iterator_base"** %16, align 8
  %17 = load %"class.__gnu_debug::_Safe_iterator_base"*, %"class.__gnu_debug::_Safe_iterator_base"** %16, align 8
  %18 = load i32, i32* @x.86
  %19 = load i32, i32* @y.87
  %20 = sub i32 0, 1
  %21 = add i32 %18, %20
  %22 = sub i32 %18, 1
  %23 = mul i32 %18, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %19, 10
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  br i1 %41, label %43, label %119

; <label>:43:                                     ; preds = %15
  invoke void @_ZN11__gnu_debug19_Safe_iterator_base9_M_detachEv(%"class.__gnu_debug::_Safe_iterator_base"* %17)
          to label %44 unwind label %74

; <label>:44:                                     ; preds = %43
  %45 = load i32, i32* @x.86
  %46 = load i32, i32* @y.87
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  br i1 %56, label %58, label %122

; <label>:58:                                     ; preds = %44, %122
  %59 = load i32, i32* @x.86
  %60 = load i32, i32* @y.87
  %61 = add i32 %59, 1835355174
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, 1835355174
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  br i1 %71, label %73, label %122

; <label>:73:                                     ; preds = %58
  ret void

; <label>:74:                                     ; preds = %43
  %75 = load i32, i32* @x.86
  %76 = load i32, i32* @y.87
  %77 = sub i32 %75, 1092869877
  %78 = sub i32 %77, 1
  %79 = add i32 %78, 1092869877
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = xor i1 %83, true
  %86 = xor i1 %84, true
  %87 = xor i1 false, true
  %88 = and i1 %85, false
  %89 = and i1 %83, %87
  %90 = and i1 %86, false
  %91 = and i1 %84, %87
  %92 = or i1 %88, %89
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = or i1 %85, %86
  %96 = xor i1 %95, true
  %97 = or i1 false, %87
  %98 = and i1 %96, %97
  %99 = or i1 %94, %98
  %100 = or i1 %83, %84
  br i1 %99, label %101, label %123

; <label>:101:                                    ; preds = %74, %123
  %102 = landingpad { i8*, i32 }
          catch i8* null
  %103 = extractvalue { i8*, i32 } %102, 0
  call void @__clang_call_terminate(i8* %103) #11
  %104 = load i32, i32* @x.86
  %105 = load i32, i32* @y.87
  %106 = sub i32 %104, -1010292378
  %107 = sub i32 %106, 1
  %108 = add i32 %107, -1010292378
  %109 = sub i32 %104, 1
  %110 = mul i32 %104, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %105, 10
  %114 = and i1 %112, %113
  %115 = xor i1 %112, %113
  %116 = or i1 %114, %115
  %117 = or i1 %112, %113
  br i1 %116, label %118, label %123

; <label>:118:                                    ; preds = %101
  unreachable

; <label>:119:                                    ; preds = %15, %1
  %120 = alloca %"class.__gnu_debug::_Safe_iterator_base"*, align 8
  store %"class.__gnu_debug::_Safe_iterator_base"* %0, %"class.__gnu_debug::_Safe_iterator_base"** %120, align 8
  %121 = load %"class.__gnu_debug::_Safe_iterator_base"*, %"class.__gnu_debug::_Safe_iterator_base"** %120, align 8
  br label %15

; <label>:122:                                    ; preds = %58, %44
  br label %58

; <label>:123:                                    ; preds = %101, %74
  %124 = landingpad { i8*, i32 }
          catch i8* null
  %125 = extractvalue { i8*, i32 } %124, 0
  call void @__clang_call_terminate(i8* %125) #11
  br label %101
}

declare void @_ZN11__gnu_debug19_Safe_iterator_base9_M_detachEv(%"class.__gnu_debug::_Safe_iterator_base"*) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt9__cxx19986vectorIiSaIiEED2Ev(%"class.std::__cxx1998::vector"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::__cxx1998::vector"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::__cxx1998::vector"* %0, %"class.std::__cxx1998::vector"** %2, align 8
  %5 = load %"class.std::__cxx1998::vector"*, %"class.std::__cxx1998::vector"** %2, align 8
  %6 = bitcast %"class.std::__cxx1998::vector"* %5 to %"struct.std::__cxx1998::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base", %"struct.std::__cxx1998::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = bitcast %"class.std::__cxx1998::vector"* %5 to %"struct.std::__cxx1998::_Vector_base"*
  %11 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base", %"struct.std::__cxx1998::_Vector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  %14 = bitcast %"class.std::__cxx1998::vector"* %5 to %"struct.std::__cxx1998::_Vector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt9__cxx199812_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::__cxx1998::_Vector_base"* %14) #3
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %9, i32* %13, %"class.std::allocator"* dereferenceable(1) %15)
          to label %16 unwind label %47

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.88
  %18 = load i32, i32* @y.89
  %19 = add i32 %17, -1521665259
  %20 = sub i32 %19, 1
  %21 = sub i32 %20, -1521665259
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  br i1 %29, label %31, label %96

; <label>:31:                                     ; preds = %16, %96
  %32 = bitcast %"class.std::__cxx1998::vector"* %5 to %"struct.std::__cxx1998::_Vector_base"*
  call void @_ZNSt9__cxx199812_Vector_baseIiSaIiEED2Ev(%"struct.std::__cxx1998::_Vector_base"* %32) #3
  %33 = load i32, i32* @x.88
  %34 = load i32, i32* @y.89
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %96

; <label>:46:                                     ; preds = %31
  ret void

; <label>:47:                                     ; preds = %1
  %48 = landingpad { i8*, i32 }
          catch i8* null
  %49 = extractvalue { i8*, i32 } %48, 0
  store i8* %49, i8** %3, align 8
  %50 = extractvalue { i8*, i32 } %48, 1
  store i32 %50, i32* %4, align 4
  %51 = bitcast %"class.std::__cxx1998::vector"* %5 to %"struct.std::__cxx1998::_Vector_base"*
  call void @_ZNSt9__cxx199812_Vector_baseIiSaIiEED2Ev(%"struct.std::__cxx1998::_Vector_base"* %51) #3
  br label %52

; <label>:52:                                     ; preds = %47
  %53 = load i32, i32* @x.88
  %54 = load i32, i32* @y.89
  %55 = sub i32 %53, -447745651
  %56 = sub i32 %55, 1
  %57 = add i32 %56, -447745651
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 false, true
  %66 = and i1 %63, false
  %67 = and i1 %61, %65
  %68 = and i1 %64, false
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 false, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  br i1 %77, label %79, label %98

; <label>:79:                                     ; preds = %52, %98
  %80 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %80) #11
  %81 = load i32, i32* @x.88
  %82 = load i32, i32* @y.89
  %83 = sub i32 %81, -54618865
  %84 = sub i32 %83, 1
  %85 = add i32 %84, -54618865
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  br i1 %93, label %95, label %98

; <label>:95:                                     ; preds = %79
  unreachable

; <label>:96:                                     ; preds = %31, %16
  %97 = bitcast %"class.std::__cxx1998::vector"* %5 to %"struct.std::__cxx1998::_Vector_base"*
  call void @_ZNSt9__cxx199812_Vector_baseIiSaIiEED2Ev(%"struct.std::__cxx1998::_Vector_base"* %97) #3
  br label %31

; <label>:98:                                     ; preds = %79, %52
  %99 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %99) #11
  br label %79
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug15_Safe_containerINSt7__debug6vectorIiSaIiEEES3_NS_14_Safe_sequenceELb1EED2Ev(%"class.__gnu_debug::_Safe_container"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_debug::_Safe_container"*, align 8
  store %"class.__gnu_debug::_Safe_container"* %0, %"class.__gnu_debug::_Safe_container"** %2, align 8
  %3 = load %"class.__gnu_debug::_Safe_container"*, %"class.__gnu_debug::_Safe_container"** %2, align 8
  %4 = bitcast %"class.__gnu_debug::_Safe_container"* %3 to %"class.__gnu_debug::_Safe_sequence"*
  call void @_ZN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorIiSaIiEEEED2Ev(%"class.__gnu_debug::_Safe_sequence"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32*, i32*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.92
  %7 = load i32, i32* @y.93
  %8 = sub i32 %6, 1928853249
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1928853249
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -512137325, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %68
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -512137325, label %20
    i32 -389896826, label %28
    i32 -1122092871, label %61
    i32 -938536338, label %62
  ]

; <label>:19:                                     ; preds = %17
  br label %68

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -389896826, i32 -938536338
  store i32 %27, i32* %16
  br label %68

; <label>:28:                                     ; preds = %17
  %29 = alloca i32*, align 8
  %30 = alloca i32*, align 8
  %31 = alloca %"class.std::allocator"*, align 8
  store i32* %0, i32** %29, align 8
  store i32* %1, i32** %30, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %31, align 8
  %32 = load i32*, i32** %29, align 8
  %33 = load i32*, i32** %30, align 8
  call void @_ZSt8_DestroyIPiEvT_S1_(i32* %32, i32* %33)
  %34 = load i32, i32* @x.92
  %35 = load i32, i32* @y.93
  %36 = add i32 %34, 911925837
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, 911925837
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -1122092871, i32 -938536338
  store i32 %60, i32* %16
  br label %68

; <label>:61:                                     ; preds = %17
  ret void

; <label>:62:                                     ; preds = %17
  %63 = alloca i32*, align 8
  %64 = alloca i32*, align 8
  %65 = alloca %"class.std::allocator"*, align 8
  store i32* %0, i32** %63, align 8
  store i32* %1, i32** %64, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %65, align 8
  %66 = load i32*, i32** %63, align 8
  %67 = load i32*, i32** %64, align 8
  call void @_ZSt8_DestroyIPiEvT_S1_(i32* %66, i32* %67)
  store i32 -389896826, i32* %16
  br label %68

; <label>:68:                                     ; preds = %62, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt9__cxx199812_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::__cxx1998::_Vector_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::__cxx1998::_Vector_base"*, align 8
  store %"struct.std::__cxx1998::_Vector_base"* %0, %"struct.std::__cxx1998::_Vector_base"** %2, align 8
  %3 = load %"struct.std::__cxx1998::_Vector_base"*, %"struct.std::__cxx1998::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base", %"struct.std::__cxx1998::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt9__cxx199812_Vector_baseIiSaIiEED2Ev(%"struct.std::__cxx1998::_Vector_base"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::__cxx1998::_Vector_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::__cxx1998::_Vector_base"* %0, %"struct.std::__cxx1998::_Vector_base"** %2, align 8
  %5 = load %"struct.std::__cxx1998::_Vector_base"*, %"struct.std::__cxx1998::_Vector_base"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base", %"struct.std::__cxx1998::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base", %"struct.std::__cxx1998::_Vector_base"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base", %"struct.std::__cxx1998::_Vector_base"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = ptrtoint i32* %11 to i64
  %16 = ptrtoint i32* %14 to i64
  %17 = add i64 %15, 6410706138138954544
  %18 = sub i64 %17, %16
  %19 = sub i64 %18, 6410706138138954544
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 4
  invoke void @_ZNSt9__cxx199812_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::__cxx1998::_Vector_base"* %5, i32* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base", %"struct.std::__cxx1998::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt9__cxx199812_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = load i32, i32* @x.96
  %26 = load i32, i32* @y.97
  %27 = sub i32 %25, 1114969235
  %28 = sub i32 %27, 1
  %29 = add i32 %28, 1114969235
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  br i1 %37, label %39, label %103

; <label>:39:                                     ; preds = %24, %103
  %40 = landingpad { i8*, i32 }
          catch i8* null
  %41 = extractvalue { i8*, i32 } %40, 0
  store i8* %41, i8** %3, align 8
  %42 = extractvalue { i8*, i32 } %40, 1
  store i32 %42, i32* %4, align 4
  %43 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base", %"struct.std::__cxx1998::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt9__cxx199812_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %43) #3
  %44 = load i32, i32* @x.96
  %45 = load i32, i32* @y.97
  %46 = sub i32 %44, -681316675
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -681316675
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  br i1 %56, label %58, label %103

; <label>:58:                                     ; preds = %39
  br label %59

; <label>:59:                                     ; preds = %58
  %60 = load i32, i32* @x.96
  %61 = load i32, i32* @y.97
  %62 = add i32 %60, 950162646
  %63 = sub i32 %62, 1
  %64 = sub i32 %63, 950162646
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 true, true
  %73 = and i1 %70, true
  %74 = and i1 %68, %72
  %75 = and i1 %71, true
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 true, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  br i1 %84, label %86, label %108

; <label>:86:                                     ; preds = %59, %108
  %87 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %87) #11
  %88 = load i32, i32* @x.96
  %89 = load i32, i32* @y.97
  %90 = add i32 %88, 205557978
  %91 = sub i32 %90, 1
  %92 = sub i32 %91, 205557978
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = and i1 %96, %97
  %99 = xor i1 %96, %97
  %100 = or i1 %98, %99
  %101 = or i1 %96, %97
  br i1 %100, label %102, label %108

; <label>:102:                                    ; preds = %86
  unreachable

; <label>:103:                                    ; preds = %39, %24
  %104 = landingpad { i8*, i32 }
          catch i8* null
  %105 = extractvalue { i8*, i32 } %104, 0
  store i8* %105, i8** %3, align 8
  %106 = extractvalue { i8*, i32 } %104, 1
  store i32 %106, i32* %4, align 4
  %107 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base", %"struct.std::__cxx1998::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt9__cxx199812_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %107) #3
  br label %39

; <label>:108:                                    ; preds = %86, %59
  %109 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %109) #11
  br label %86
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiEvT_S1_(i32*, i32*) #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load i32*, i32** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32* %5, i32* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32*, i32*) #4 comdat align 2 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt9__cxx199812_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::__cxx1998::_Vector_base"*, i32*, i64) #0 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca %"struct.std::__cxx1998::_Vector_base"*
  %6 = alloca %"struct.std::__cxx1998::_Vector_base"*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::__cxx1998::_Vector_base"* %0, %"struct.std::__cxx1998::_Vector_base"** %6, align 8
  store i32* %1, i32** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::__cxx1998::_Vector_base"*, %"struct.std::__cxx1998::_Vector_base"** %6, align 8
  store %"struct.std::__cxx1998::_Vector_base"* %9, %"struct.std::__cxx1998::_Vector_base"** %5
  %10 = load i32*, i32** %7, align 8
  store i32* %10, i32** %4
  %11 = alloca i32
  store i32 1339987352, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1339987352, label %15
    i32 889435495, label %19
    i32 655627225, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile i32*, i32** %4
  %17 = icmp ne i32* %16, null
  %18 = select i1 %17, i32 889435495, i32 655627225
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::__cxx1998::_Vector_base"*, %"struct.std::__cxx1998::_Vector_base"** %5
  %21 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base", %"struct.std::__cxx1998::_Vector_base"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %21 to %"class.std::allocator"*
  %23 = load i32*, i32** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator"* dereferenceable(1) %22, i32* %23, i64 %24)
  store i32 655627225, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt9__cxx199812_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator"* dereferenceable(1), i32*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator"* %8, i32* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator"*, i32*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = bitcast i32* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorIiSaIiEEEED2Ev(%"class.__gnu_debug::_Safe_sequence"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_debug::_Safe_sequence"*, align 8
  store %"class.__gnu_debug::_Safe_sequence"* %0, %"class.__gnu_debug::_Safe_sequence"** %2, align 8
  %3 = load %"class.__gnu_debug::_Safe_sequence"*, %"class.__gnu_debug::_Safe_sequence"** %2, align 8
  %4 = bitcast %"class.__gnu_debug::_Safe_sequence"* %3 to %"class.__gnu_debug::_Safe_sequence_base"*
  call void @_ZN11__gnu_debug19_Safe_sequence_baseD2Ev(%"class.__gnu_debug::_Safe_sequence_base"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt9__cxx19986vectorINSt7__debug6vectorIbSaIbEEESaIS4_EED2Ev(%"class.std::__cxx1998::vector.5"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::__cxx1998::vector.5"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::__cxx1998::vector.5"* %0, %"class.std::__cxx1998::vector.5"** %2, align 8
  %5 = load %"class.std::__cxx1998::vector.5"*, %"class.std::__cxx1998::vector.5"** %2, align 8
  %6 = bitcast %"class.std::__cxx1998::vector.5"* %5 to %"struct.std::__cxx1998::_Vector_base.6"*
  %7 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base.6", %"struct.std::__cxx1998::_Vector_base.6"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %8, align 8
  %10 = bitcast %"class.std::__cxx1998::vector.5"* %5 to %"struct.std::__cxx1998::_Vector_base.6"*
  %11 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base.6", %"struct.std::__cxx1998::_Vector_base.6"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %12, align 8
  %14 = bitcast %"class.std::__cxx1998::vector.5"* %5 to %"struct.std::__cxx1998::_Vector_base.6"*
  %15 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::__cxx1998::_Vector_base.6"* %14) #3
  invoke void @_ZSt8_DestroyIPNSt7__debug6vectorIbSaIbEEES3_EvT_S5_RSaIT0_E(%"class.std::__debug::vector.10"* %9, %"class.std::__debug::vector.10"* %13, %"class.std::allocator.7"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::__cxx1998::vector.5"* %5 to %"struct.std::__cxx1998::_Vector_base.6"*
  call void @_ZNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EED2Ev(%"struct.std::__cxx1998::_Vector_base.6"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::__cxx1998::vector.5"* %5 to %"struct.std::__cxx1998::_Vector_base.6"*
  call void @_ZNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EED2Ev(%"struct.std::__cxx1998::_Vector_base.6"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %24) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug15_Safe_containerINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEES5_NS_14_Safe_sequenceELb1EED2Ev(%"class.__gnu_debug::_Safe_container.1"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_debug::_Safe_container.1"*, align 8
  store %"class.__gnu_debug::_Safe_container.1"* %0, %"class.__gnu_debug::_Safe_container.1"** %2, align 8
  %3 = load %"class.__gnu_debug::_Safe_container.1"*, %"class.__gnu_debug::_Safe_container.1"** %2, align 8
  %4 = bitcast %"class.__gnu_debug::_Safe_container.1"* %3 to %"class.__gnu_debug::_Safe_sequence.2"*
  call void @_ZN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEEED2Ev(%"class.__gnu_debug::_Safe_sequence.2"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPNSt7__debug6vectorIbSaIbEEES3_EvT_S5_RSaIT0_E(%"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"*, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::__debug::vector.10"*, align 8
  %5 = alloca %"class.std::__debug::vector.10"*, align 8
  %6 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::__debug::vector.10"* %0, %"class.std::__debug::vector.10"** %4, align 8
  store %"class.std::__debug::vector.10"* %1, %"class.std::__debug::vector.10"** %5, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %6, align 8
  %7 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %4, align 8
  %8 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %5, align 8
  call void @_ZSt8_DestroyIPNSt7__debug6vectorIbSaIbEEEEvT_S5_(%"class.std::__debug::vector.10"* %7, %"class.std::__debug::vector.10"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.7"* @_ZNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::__cxx1998::_Vector_base.6"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::__cxx1998::_Vector_base.6"*, align 8
  store %"struct.std::__cxx1998::_Vector_base.6"* %0, %"struct.std::__cxx1998::_Vector_base.6"** %2, align 8
  %3 = load %"struct.std::__cxx1998::_Vector_base.6"*, %"struct.std::__cxx1998::_Vector_base.6"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base.6", %"struct.std::__cxx1998::_Vector_base.6"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %4 to %"class.std::allocator.7"*
  ret %"class.std::allocator.7"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EED2Ev(%"struct.std::__cxx1998::_Vector_base.6"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::__cxx1998::_Vector_base.6"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::__cxx1998::_Vector_base.6"* %0, %"struct.std::__cxx1998::_Vector_base.6"** %2, align 8
  %5 = load %"struct.std::__cxx1998::_Vector_base.6"*, %"struct.std::__cxx1998::_Vector_base.6"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base.6", %"struct.std::__cxx1998::_Vector_base.6"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base.6", %"struct.std::__cxx1998::_Vector_base.6"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base.6", %"struct.std::__cxx1998::_Vector_base.6"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %13, align 8
  %15 = ptrtoint %"class.std::__debug::vector.10"* %11 to i64
  %16 = ptrtoint %"class.std::__debug::vector.10"* %14 to i64
  %17 = sub i64 %15, -544031105646754455
  %18 = sub i64 %17, %16
  %19 = add i64 %18, -544031105646754455
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 72
  invoke void @_ZNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::__cxx1998::_Vector_base.6"* %5, %"class.std::__debug::vector.10"* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base.6", %"struct.std::__cxx1998::_Vector_base.6"* %5, i32 0, i32 0
  call void @_ZNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EE12_Vector_implD2Ev(%"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base.6", %"struct.std::__cxx1998::_Vector_base.6"* %5, i32 0, i32 0
  call void @_ZNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EE12_Vector_implD2Ev(%"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %28) #3
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %30) #11
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPNSt7__debug6vectorIbSaIbEEEEvT_S5_(%"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"*) #0 comdat {
  %3 = alloca %"class.std::__debug::vector.10"*, align 8
  %4 = alloca %"class.std::__debug::vector.10"*, align 8
  store %"class.std::__debug::vector.10"* %0, %"class.std::__debug::vector.10"** %3, align 8
  store %"class.std::__debug::vector.10"* %1, %"class.std::__debug::vector.10"** %4, align 8
  %5 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %3, align 8
  %6 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__debug6vectorIbSaIbEEEEEvT_S7_(%"class.std::__debug::vector.10"* %5, %"class.std::__debug::vector.10"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__debug6vectorIbSaIbEEEEEvT_S7_(%"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::__debug::vector.10"*, align 8
  %5 = alloca %"class.std::__debug::vector.10"*, align 8
  store %"class.std::__debug::vector.10"* %0, %"class.std::__debug::vector.10"** %4, align 8
  store %"class.std::__debug::vector.10"* %1, %"class.std::__debug::vector.10"** %5, align 8
  %6 = alloca i32
  store i32 1730244871, i32* %6
  br label %7

; <label>:7:                                      ; preds = %2, %88
  %8 = load i32, i32* %6
  switch i32 %8, label %9 [
    i32 1730244871, label %10
    i32 -1433786859, label %25
    i32 254454024, label %43
    i32 -358436261, label %46
    i32 -2074097974, label %49
    i32 -1715753443, label %52
    i32 1139072203, label %67
    i32 720313114, label %82
    i32 -1651740340, label %83
    i32 -1702510970, label %87
  ]

; <label>:9:                                      ; preds = %7
  br label %88

; <label>:10:                                     ; preds = %7
  %11 = load i32, i32* @x.126
  %12 = load i32, i32* @y.127
  %13 = sub i32 0, 1
  %14 = add i32 %11, %13
  %15 = sub i32 %11, 1
  %16 = mul i32 %11, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %12, 10
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -1433786859, i32 -1651740340
  store i32 %24, i32* %6
  br label %88

; <label>:25:                                     ; preds = %7
  %26 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %4, align 8
  %27 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %5, align 8
  %28 = icmp ne %"class.std::__debug::vector.10"* %26, %27
  store i1 %28, i1* %3
  %29 = load i32, i32* @x.126
  %30 = load i32, i32* @y.127
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 254454024, i32 -1651740340
  store i32 %42, i32* %6
  br label %88

; <label>:43:                                     ; preds = %7
  %44 = load volatile i1, i1* %3
  %45 = select i1 %44, i32 -358436261, i32 -1715753443
  store i32 %45, i32* %6
  br label %88

; <label>:46:                                     ; preds = %7
  %47 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %4, align 8
  %48 = call %"class.std::__debug::vector.10"* @_ZSt11__addressofINSt7__debug6vectorIbSaIbEEEEPT_RS4_(%"class.std::__debug::vector.10"* dereferenceable(72) %47) #3
  call void @_ZSt8_DestroyINSt7__debug6vectorIbSaIbEEEEvPT_(%"class.std::__debug::vector.10"* %48)
  store i32 -2074097974, i32* %6
  br label %88

; <label>:49:                                     ; preds = %7
  %50 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %4, align 8
  %51 = getelementptr inbounds %"class.std::__debug::vector.10", %"class.std::__debug::vector.10"* %50, i32 1
  store %"class.std::__debug::vector.10"* %51, %"class.std::__debug::vector.10"** %4, align 8
  store i32 1730244871, i32* %6
  br label %88

; <label>:52:                                     ; preds = %7
  %53 = load i32, i32* @x.126
  %54 = load i32, i32* @y.127
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 1139072203, i32 -1702510970
  store i32 %66, i32* %6
  br label %88

; <label>:67:                                     ; preds = %7
  %68 = load i32, i32* @x.126
  %69 = load i32, i32* @y.127
  %70 = sub i32 0, 1
  %71 = add i32 %68, %70
  %72 = sub i32 %68, 1
  %73 = mul i32 %68, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %69, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  %81 = select i1 %79, i32 720313114, i32 -1702510970
  store i32 %81, i32* %6
  br label %88

; <label>:82:                                     ; preds = %7
  ret void

; <label>:83:                                     ; preds = %7
  %84 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %4, align 8
  %85 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %5, align 8
  %86 = icmp ne %"class.std::__debug::vector.10"* %84, %85
  store i32 -1433786859, i32* %6
  br label %88

; <label>:87:                                     ; preds = %7
  store i32 1139072203, i32* %6
  br label %88

; <label>:88:                                     ; preds = %87, %83, %67, %52, %49, %46, %43, %25, %10, %9
  br label %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyINSt7__debug6vectorIbSaIbEEEEvPT_(%"class.std::__debug::vector.10"*) #4 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.128
  %5 = load i32, i32* @y.129
  %6 = add i32 %4, -1901282716
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1901282716
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1169344789, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1169344789, label %18
    i32 -1398405553, label %38
    i32 -601631134, label %68
    i32 -251925491, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1398405553, i32 -251925491
  store i32 %37, i32* %14
  br label %72

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::__debug::vector.10"*, align 8
  store %"class.std::__debug::vector.10"* %0, %"class.std::__debug::vector.10"** %39, align 8
  %40 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %39, align 8
  call void @_ZNSt7__debug6vectorIbSaIbEED2Ev(%"class.std::__debug::vector.10"* %40) #3
  %41 = load i32, i32* @x.128
  %42 = load i32, i32* @y.129
  %43 = sub i32 %41, -389266561
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -389266561
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -601631134, i32 -251925491
  store i32 %67, i32* %14
  br label %72

; <label>:68:                                     ; preds = %15
  ret void

; <label>:69:                                     ; preds = %15
  %70 = alloca %"class.std::__debug::vector.10"*, align 8
  store %"class.std::__debug::vector.10"* %0, %"class.std::__debug::vector.10"** %70, align 8
  %71 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %70, align 8
  call void @_ZNSt7__debug6vectorIbSaIbEED2Ev(%"class.std::__debug::vector.10"* %71) #3
  store i32 -1398405553, i32* %14
  br label %72

; <label>:72:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::__debug::vector.10"* @_ZSt11__addressofINSt7__debug6vectorIbSaIbEEEEPT_RS4_(%"class.std::__debug::vector.10"* dereferenceable(72)) #4 comdat {
  %2 = alloca %"class.std::__debug::vector.10"*, align 8
  store %"class.std::__debug::vector.10"* %0, %"class.std::__debug::vector.10"** %2, align 8
  %3 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %2, align 8
  %4 = bitcast %"class.std::__debug::vector.10"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::__debug::vector.10"*
  ret %"class.std::__debug::vector.10"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::__cxx1998::_Vector_base.6"*, %"class.std::__debug::vector.10"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::__debug::vector.10"*
  %5 = alloca %"struct.std::__cxx1998::_Vector_base.6"*
  %6 = alloca %"struct.std::__cxx1998::_Vector_base.6"*, align 8
  %7 = alloca %"class.std::__debug::vector.10"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::__cxx1998::_Vector_base.6"* %0, %"struct.std::__cxx1998::_Vector_base.6"** %6, align 8
  store %"class.std::__debug::vector.10"* %1, %"class.std::__debug::vector.10"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::__cxx1998::_Vector_base.6"*, %"struct.std::__cxx1998::_Vector_base.6"** %6, align 8
  store %"struct.std::__cxx1998::_Vector_base.6"* %9, %"struct.std::__cxx1998::_Vector_base.6"** %5
  %10 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %7, align 8
  store %"class.std::__debug::vector.10"* %10, %"class.std::__debug::vector.10"** %4
  %11 = alloca i32
  store i32 569473198, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 569473198, label %15
    i32 -359798843, label %19
    i32 -137095155, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %4
  %17 = icmp ne %"class.std::__debug::vector.10"* %16, null
  %18 = select i1 %17, i32 -359798843, i32 -137095155
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::__cxx1998::_Vector_base.6"*, %"struct.std::__cxx1998::_Vector_base.6"** %5
  %21 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base.6", %"struct.std::__cxx1998::_Vector_base.6"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %21 to %"class.std::allocator.7"*
  %23 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaINSt7__debug6vectorIbSaIbEEEEE10deallocateERS4_PS3_m(%"class.std::allocator.7"* dereferenceable(1) %22, %"class.std::__debug::vector.10"* %23, i64 %24)
  store i32 -137095155, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EE12_Vector_implD2Ev(%"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"*, align 8
  store %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %0, %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"*, %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %3 to %"class.std::allocator.7"*
  call void @_ZNSaINSt7__debug6vectorIbSaIbEEEED2Ev(%"class.std::allocator.7"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaINSt7__debug6vectorIbSaIbEEEEE10deallocateERS4_PS3_m(%"class.std::allocator.7"* dereferenceable(1), %"class.std::__debug::vector.10"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.7"*, align 8
  %5 = alloca %"class.std::__debug::vector.10"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %4, align 8
  store %"class.std::__debug::vector.10"* %1, %"class.std::__debug::vector.10"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %4, align 8
  %8 = bitcast %"class.std::allocator.7"* %7 to %"class.__gnu_cxx::new_allocator.8"*
  %9 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__debug6vectorIbSaIbEEEE10deallocateEPS4_m(%"class.__gnu_cxx::new_allocator.8"* %8, %"class.std::__debug::vector.10"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt7__debug6vectorIbSaIbEEEE10deallocateEPS4_m(%"class.__gnu_cxx::new_allocator.8"*, %"class.std::__debug::vector.10"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %5 = alloca %"class.std::__debug::vector.10"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %4, align 8
  store %"class.std::__debug::vector.10"* %1, %"class.std::__debug::vector.10"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %4, align 8
  %8 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %5, align 8
  %9 = bitcast %"class.std::__debug::vector.10"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt7__debug6vectorIbSaIbEEEED2Ev(%"class.__gnu_cxx::new_allocator.8"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEEED2Ev(%"class.__gnu_debug::_Safe_sequence.2"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_debug::_Safe_sequence.2"*, align 8
  store %"class.__gnu_debug::_Safe_sequence.2"* %0, %"class.__gnu_debug::_Safe_sequence.2"** %2, align 8
  %3 = load %"class.__gnu_debug::_Safe_sequence.2"*, %"class.__gnu_debug::_Safe_sequence.2"** %2, align 8
  %4 = bitcast %"class.__gnu_debug::_Safe_sequence.2"* %3 to %"class.__gnu_debug::_Safe_sequence_base"*
  call void @_ZN11__gnu_debug19_Safe_sequence_baseD2Ev(%"class.__gnu_debug::_Safe_sequence_base"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug15_Safe_containerINSt7__debug6vectorIiSaIiEEES3_NS_14_Safe_sequenceELb1EEC2Ev(%"class.__gnu_debug::_Safe_container"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_debug::_Safe_container"*, align 8
  store %"class.__gnu_debug::_Safe_container"* %0, %"class.__gnu_debug::_Safe_container"** %2, align 8
  %3 = load %"class.__gnu_debug::_Safe_container"*, %"class.__gnu_debug::_Safe_container"** %2, align 8
  %4 = bitcast %"class.__gnu_debug::_Safe_container"* %3 to %"class.__gnu_debug::_Safe_sequence"*
  call void @_ZN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorIiSaIiEEEEC2Ev(%"class.__gnu_debug::_Safe_sequence"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt9__cxx19986vectorIiSaIiEEC2EmRKS1_(%"class.std::__cxx1998::vector"*, i64, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::__cxx1998::vector"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"class.std::__cxx1998::vector"* %0, %"class.std::__cxx1998::vector"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %9 = load %"class.std::__cxx1998::vector"*, %"class.std::__cxx1998::vector"** %4, align 8
  %10 = bitcast %"class.std::__cxx1998::vector"* %9 to %"struct.std::__cxx1998::_Vector_base"*
  %11 = load i64, i64* %5, align 8
  %12 = load %"class.std::allocator"*, %"class.std::allocator"** %6, align 8
  call void @_ZNSt9__cxx199812_Vector_baseIiSaIiEEC2EmRKS1_(%"struct.std::__cxx1998::_Vector_base"* %10, i64 %11, %"class.std::allocator"* dereferenceable(1) %12)
  %13 = load i64, i64* %5, align 8
  invoke void @_ZNSt9__cxx19986vectorIiSaIiEE21_M_default_initializeEm(%"class.std::__cxx1998::vector"* %9, i64 %13)
          to label %14 unwind label %15

; <label>:14:                                     ; preds = %3
  ret void

; <label>:15:                                     ; preds = %3
  %16 = load i32, i32* @x.148
  %17 = load i32, i32* @y.149
  %18 = sub i32 %16, -1906524583
  %19 = sub i32 %18, 1
  %20 = add i32 %19, -1906524583
  %21 = sub i32 %16, 1
  %22 = mul i32 %16, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %17, 10
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  br i1 %28, label %30, label %97

; <label>:30:                                     ; preds = %15, %97
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  store i8* %32, i8** %7, align 8
  %33 = extractvalue { i8*, i32 } %31, 1
  store i32 %33, i32* %8, align 4
  %34 = bitcast %"class.std::__cxx1998::vector"* %9 to %"struct.std::__cxx1998::_Vector_base"*
  call void @_ZNSt9__cxx199812_Vector_baseIiSaIiEED2Ev(%"struct.std::__cxx1998::_Vector_base"* %34) #3
  %35 = load i32, i32* @x.148
  %36 = load i32, i32* @y.149
  %37 = add i32 %35, -2069370738
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -2069370738
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  br i1 %47, label %49, label %97

; <label>:49:                                     ; preds = %30
  br label %50

; <label>:50:                                     ; preds = %49
  %51 = load i32, i32* @x.148
  %52 = load i32, i32* @y.149
  %53 = sub i32 %51, -2000694972
  %54 = sub i32 %53, 1
  %55 = add i32 %54, -2000694972
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  br i1 %63, label %65, label %102

; <label>:65:                                     ; preds = %50, %102
  %66 = load i8*, i8** %7, align 8
  %67 = load i32, i32* %8, align 4
  %68 = insertvalue { i8*, i32 } undef, i8* %66, 0
  %69 = insertvalue { i8*, i32 } %68, i32 %67, 1
  %70 = load i32, i32* @x.148
  %71 = load i32, i32* @y.149
  %72 = add i32 %70, 1647754010
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, 1647754010
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 true, true
  %83 = and i1 %80, true
  %84 = and i1 %78, %82
  %85 = and i1 %81, true
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 true, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  br i1 %94, label %96, label %102

; <label>:96:                                     ; preds = %65
  resume { i8*, i32 } %69

; <label>:97:                                     ; preds = %30, %15
  %98 = landingpad { i8*, i32 }
          cleanup
  %99 = extractvalue { i8*, i32 } %98, 0
  store i8* %99, i8** %7, align 8
  %100 = extractvalue { i8*, i32 } %98, 1
  store i32 %100, i32* %8, align 4
  %101 = bitcast %"class.std::__cxx1998::vector"* %9 to %"struct.std::__cxx1998::_Vector_base"*
  call void @_ZNSt9__cxx199812_Vector_baseIiSaIiEED2Ev(%"struct.std::__cxx1998::_Vector_base"* %101) #3
  br label %30

; <label>:102:                                    ; preds = %65, %50
  %103 = load i8*, i8** %7, align 8
  %104 = load i32, i32* %8, align 4
  %105 = insertvalue { i8*, i32 } undef, i8* %103, 0
  %106 = insertvalue { i8*, i32 } %105, i32 %104, 1
  br label %65
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug12_Safe_vectorINSt7__debug6vectorIiSaIiEEENSt9__cxx19986vectorIiS3_EEEC2Em(%"class.__gnu_debug::_Safe_vector"*, i64) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_debug::_Safe_vector"*, align 8
  %4 = alloca i64, align 8
  store %"class.__gnu_debug::_Safe_vector"* %0, %"class.__gnu_debug::_Safe_vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.__gnu_debug::_Safe_vector"*, %"class.__gnu_debug::_Safe_vector"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_debug::_Safe_vector", %"class.__gnu_debug::_Safe_vector"* %5, i32 0, i32 0
  %7 = load i64, i64* %4, align 8
  store i64 %7, i64* %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorIiSaIiEEEEC2Ev(%"class.__gnu_debug::_Safe_sequence"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.152
  %5 = load i32, i32* @y.153
  %6 = sub i32 %4, 1076483271
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1076483271
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 955384500, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %50
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 955384500, label %18
    i32 -868308811, label %26
    i32 -1237122054, label %45
    i32 -1598281668, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %50

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -868308811, i32 -1598281668
  store i32 %25, i32* %14
  br label %50

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_debug::_Safe_sequence"*, align 8
  store %"class.__gnu_debug::_Safe_sequence"* %0, %"class.__gnu_debug::_Safe_sequence"** %27, align 8
  %28 = load %"class.__gnu_debug::_Safe_sequence"*, %"class.__gnu_debug::_Safe_sequence"** %27, align 8
  %29 = bitcast %"class.__gnu_debug::_Safe_sequence"* %28 to %"class.__gnu_debug::_Safe_sequence_base"*
  call void @_ZN11__gnu_debug19_Safe_sequence_baseC2Ev(%"class.__gnu_debug::_Safe_sequence_base"* %29) #3
  %30 = load i32, i32* @x.152
  %31 = load i32, i32* @y.153
  %32 = add i32 %30, -2006314570
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -2006314570
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -1237122054, i32 -1598281668
  store i32 %44, i32* %14
  br label %50

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca %"class.__gnu_debug::_Safe_sequence"*, align 8
  store %"class.__gnu_debug::_Safe_sequence"* %0, %"class.__gnu_debug::_Safe_sequence"** %47, align 8
  %48 = load %"class.__gnu_debug::_Safe_sequence"*, %"class.__gnu_debug::_Safe_sequence"** %47, align 8
  %49 = bitcast %"class.__gnu_debug::_Safe_sequence"* %48 to %"class.__gnu_debug::_Safe_sequence_base"*
  call void @_ZN11__gnu_debug19_Safe_sequence_baseC2Ev(%"class.__gnu_debug::_Safe_sequence_base"* %49) #3
  store i32 -868308811, i32* %14
  br label %50

; <label>:50:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug19_Safe_sequence_baseC2Ev(%"class.__gnu_debug::_Safe_sequence_base"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_debug::_Safe_sequence_base"*, align 8
  store %"class.__gnu_debug::_Safe_sequence_base"* %0, %"class.__gnu_debug::_Safe_sequence_base"** %2, align 8
  %3 = load %"class.__gnu_debug::_Safe_sequence_base"*, %"class.__gnu_debug::_Safe_sequence_base"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_debug::_Safe_sequence_base", %"class.__gnu_debug::_Safe_sequence_base"* %3, i32 0, i32 0
  store %"class.__gnu_debug::_Safe_iterator_base"* null, %"class.__gnu_debug::_Safe_iterator_base"** %4, align 8
  %5 = getelementptr inbounds %"class.__gnu_debug::_Safe_sequence_base", %"class.__gnu_debug::_Safe_sequence_base"* %3, i32 0, i32 1
  store %"class.__gnu_debug::_Safe_iterator_base"* null, %"class.__gnu_debug::_Safe_iterator_base"** %5, align 8
  %6 = getelementptr inbounds %"class.__gnu_debug::_Safe_sequence_base", %"class.__gnu_debug::_Safe_sequence_base"* %3, i32 0, i32 2
  store i32 1, i32* %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt9__cxx199812_Vector_baseIiSaIiEEC2EmRKS1_(%"struct.std::__cxx1998::_Vector_base"*, i64, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::__cxx1998::_Vector_base"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::__cxx1998::_Vector_base"* %0, %"struct.std::__cxx1998::_Vector_base"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %9 = load %"struct.std::__cxx1998::_Vector_base"*, %"struct.std::__cxx1998::_Vector_base"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base", %"struct.std::__cxx1998::_Vector_base"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator"*, %"class.std::allocator"** %6, align 8
  call void @_ZNSt9__cxx199812_Vector_baseIiSaIiEE12_Vector_implC2ERKS1_(%"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10, %"class.std::allocator"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt9__cxx199812_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::__cxx1998::_Vector_base"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt9__cxx199812_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10) #3
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i32, i32* @x.156
  %20 = load i32, i32* @y.157
  %21 = add i32 %19, 1830837385
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, 1830837385
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 false, true
  %32 = and i1 %29, false
  %33 = and i1 %27, %31
  %34 = and i1 %30, false
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 false, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  br i1 %43, label %45, label %65

; <label>:45:                                     ; preds = %18, %65
  %46 = load i8*, i8** %7, align 8
  %47 = load i32, i32* %8, align 4
  %48 = insertvalue { i8*, i32 } undef, i8* %46, 0
  %49 = insertvalue { i8*, i32 } %48, i32 %47, 1
  %50 = load i32, i32* @x.156
  %51 = load i32, i32* @y.157
  %52 = add i32 %50, 55413827
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 55413827
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  br i1 %62, label %64, label %65

; <label>:64:                                     ; preds = %45
  resume { i8*, i32 } %49

; <label>:65:                                     ; preds = %45, %18
  %66 = load i8*, i8** %7, align 8
  %67 = load i32, i32* %8, align 4
  %68 = insertvalue { i8*, i32 } undef, i8* %66, 0
  %69 = insertvalue { i8*, i32 } %68, i32 %67, 1
  br label %45
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt9__cxx19986vectorIiSaIiEE21_M_default_initializeEm(%"class.std::__cxx1998::vector"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.158
  %6 = load i32, i32* @y.159
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 751203722, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %83
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 751203722, label %18
    i32 246531216, label %38
    i32 1772527576, label %67
    i32 -1371804408, label %68
  ]

; <label>:17:                                     ; preds = %15
  br label %83

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 246531216, i32 -1371804408
  store i32 %37, i32* %14
  br label %83

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::__cxx1998::vector"*, align 8
  %40 = alloca i64, align 8
  store %"class.std::__cxx1998::vector"* %0, %"class.std::__cxx1998::vector"** %39, align 8
  store i64 %1, i64* %40, align 8
  %41 = load %"class.std::__cxx1998::vector"*, %"class.std::__cxx1998::vector"** %39, align 8
  %42 = bitcast %"class.std::__cxx1998::vector"* %41 to %"struct.std::__cxx1998::_Vector_base"*
  %43 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base", %"struct.std::__cxx1998::_Vector_base"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %43, i32 0, i32 0
  %45 = load i32*, i32** %44, align 8
  %46 = load i64, i64* %40, align 8
  %47 = bitcast %"class.std::__cxx1998::vector"* %41 to %"struct.std::__cxx1998::_Vector_base"*
  %48 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt9__cxx199812_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::__cxx1998::_Vector_base"* %47) #3
  %49 = call i32* @_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E(i32* %45, i64 %46, %"class.std::allocator"* dereferenceable(1) %48)
  %50 = bitcast %"class.std::__cxx1998::vector"* %41 to %"struct.std::__cxx1998::_Vector_base"*
  %51 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base", %"struct.std::__cxx1998::_Vector_base"* %50, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %51, i32 0, i32 1
  store i32* %49, i32** %52, align 8
  %53 = load i32, i32* @x.158
  %54 = load i32, i32* @y.159
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 1772527576, i32 -1371804408
  store i32 %66, i32* %14
  br label %83

; <label>:67:                                     ; preds = %15
  ret void

; <label>:68:                                     ; preds = %15
  %69 = alloca %"class.std::__cxx1998::vector"*, align 8
  %70 = alloca i64, align 8
  store %"class.std::__cxx1998::vector"* %0, %"class.std::__cxx1998::vector"** %69, align 8
  store i64 %1, i64* %70, align 8
  %71 = load %"class.std::__cxx1998::vector"*, %"class.std::__cxx1998::vector"** %69, align 8
  %72 = bitcast %"class.std::__cxx1998::vector"* %71 to %"struct.std::__cxx1998::_Vector_base"*
  %73 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base", %"struct.std::__cxx1998::_Vector_base"* %72, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %73, i32 0, i32 0
  %75 = load i32*, i32** %74, align 8
  %76 = load i64, i64* %70, align 8
  %77 = bitcast %"class.std::__cxx1998::vector"* %71 to %"struct.std::__cxx1998::_Vector_base"*
  %78 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt9__cxx199812_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::__cxx1998::_Vector_base"* %77) #3
  %79 = call i32* @_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E(i32* %75, i64 %76, %"class.std::allocator"* dereferenceable(1) %78)
  %80 = bitcast %"class.std::__cxx1998::vector"* %71 to %"struct.std::__cxx1998::_Vector_base"*
  %81 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base", %"struct.std::__cxx1998::_Vector_base"* %80, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %81, i32 0, i32 1
  store i32* %79, i32** %82, align 8
  store i32 246531216, i32* %14
  br label %83

; <label>:83:                                     ; preds = %68, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt9__cxx199812_Vector_baseIiSaIiEE12_Vector_implC2ERKS1_(%"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5 to %"class.std::allocator"*
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator"* %6, %"class.std::allocator"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 0
  store i32* null, i32** %8, align 8
  %9 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 1
  store i32* null, i32** %9, align 8
  %10 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 2
  store i32* null, i32** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt9__cxx199812_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::__cxx1998::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::__cxx1998::_Vector_base"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::__cxx1998::_Vector_base"* %0, %"struct.std::__cxx1998::_Vector_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::__cxx1998::_Vector_base"*, %"struct.std::__cxx1998::_Vector_base"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call i32* @_ZNSt9__cxx199812_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::__cxx1998::_Vector_base"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base", %"struct.std::__cxx1998::_Vector_base"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %8, i32 0, i32 0
  store i32* %7, i32** %9, align 8
  %10 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base", %"struct.std::__cxx1998::_Vector_base"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base", %"struct.std::__cxx1998::_Vector_base"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %13, i32 0, i32 1
  store i32* %12, i32** %14, align 8
  %15 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base", %"struct.std::__cxx1998::_Vector_base"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds i32, i32* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base", %"struct.std::__cxx1998::_Vector_base"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %20, i32 0, i32 2
  store i32* %19, i32** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2ERKS_(%"class.std::allocator"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator"* %6, %"class.__gnu_cxx::new_allocator"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %3, align 8
  store %"class.__gnu_cxx::new_allocator"* %1, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt9__cxx199812_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::__cxx1998::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::__cxx1998::_Vector_base"*
  %5 = alloca %"struct.std::__cxx1998::_Vector_base"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::__cxx1998::_Vector_base"* %0, %"struct.std::__cxx1998::_Vector_base"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::__cxx1998::_Vector_base"*, %"struct.std::__cxx1998::_Vector_base"** %5, align 8
  store %"struct.std::__cxx1998::_Vector_base"* %7, %"struct.std::__cxx1998::_Vector_base"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 673946455, i32* %9
  %10 = alloca i32*
  br label %11

; <label>:11:                                     ; preds = %2, %27
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 673946455, label %14
    i32 1813127549, label %18
    i32 -742872223, label %24
    i32 878812208, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %27

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 1813127549, i32 -742872223
  store i32 %17, i32* %9
  br label %27

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::__cxx1998::_Vector_base"*, %"struct.std::__cxx1998::_Vector_base"** %4
  %20 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base", %"struct.std::__cxx1998::_Vector_base"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %20 to %"class.std::allocator"*
  %22 = load i64, i64* %6, align 8
  %23 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator"* dereferenceable(1) %21, i64 %22)
  store i32 878812208, i32* %9
  store i32* %23, i32** %10
  br label %27

; <label>:24:                                     ; preds = %11
  store i32 878812208, i32* %9
  store i32* null, i32** %10
  br label %27

; <label>:25:                                     ; preds = %11
  %26 = load i32*, i32** %10
  ret i32* %26

; <label>:27:                                     ; preds = %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load i64, i64* %4, align 8
  %8 = call i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %6, i64 %7, i8* null)
  ret i32* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.172
  %9 = load i32, i32* @y.173
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -660768234, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %84
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -660768234, label %21
    i32 -1565258236, label %41
    i32 1273856153, label %66
    i32 -1875867854, label %69
    i32 -1017203360, label %70
    i32 -1597084132, label %76
  ]

; <label>:20:                                     ; preds = %18
  br label %84

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1565258236, i32 -1597084132
  store i32 %40, i32* %17
  br label %84

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %43 = alloca i64, align 8
  store i64* %43, i64** %5
  %44 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %42, align 8
  %45 = load volatile i64*, i64** %5
  store i64 %1, i64* %45, align 8
  store i8* %2, i8** %44, align 8
  %46 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %42, align 8
  %47 = load volatile i64*, i64** %5
  %48 = load i64, i64* %47, align 8
  %49 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %46) #3
  %50 = icmp ugt i64 %48, %49
  store i1 %50, i1* %4
  %51 = load i32, i32* @x.172
  %52 = load i32, i32* @y.173
  %53 = sub i32 %51, -1888131314
  %54 = sub i32 %53, 1
  %55 = add i32 %54, -1888131314
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 1273856153, i32 -1597084132
  store i32 %65, i32* %17
  br label %84

; <label>:66:                                     ; preds = %18
  %67 = load volatile i1, i1* %4
  %68 = select i1 %67, i32 -1875867854, i32 -1017203360
  store i32 %68, i32* %17
  br label %84

; <label>:69:                                     ; preds = %18
  call void @_ZSt17__throw_bad_allocv() #13
  unreachable

; <label>:70:                                     ; preds = %18
  %71 = load volatile i64*, i64** %5
  %72 = load i64, i64* %71, align 8
  %73 = mul i64 %72, 4
  %74 = call i8* @_Znwm(i64 %73)
  %75 = bitcast i8* %74 to i32*
  ret i32* %75

; <label>:76:                                     ; preds = %18
  %77 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %78 = alloca i64, align 8
  %79 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %77, align 8
  store i64 %1, i64* %78, align 8
  store i8* %2, i8** %79, align 8
  %80 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %77, align 8
  %81 = load i64, i64* %78, align 8
  %82 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %80) #3
  %83 = icmp ugt i64 %81, %82
  store i32 -1565258236, i32* %17
  br label %84

; <label>:84:                                     ; preds = %76, %66, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.174
  %5 = load i32, i32* @y.175
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1442195324, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %71
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1442195324, label %17
    i32 153562946, label %37
    i32 -1819767502, label %67
    i32 -1416648525, label %68
  ]

; <label>:16:                                     ; preds = %14
  br label %71

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 153562946, i32 -1416648525
  store i32 %36, i32* %13
  br label %71

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %38, align 8
  %40 = load i32, i32* @x.174
  %41 = load i32, i32* @y.175
  %42 = add i32 %40, -1584144398
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -1584144398
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -1819767502, i32 -1416648525
  store i32 %66, i32* %13
  br label %71

; <label>:67:                                     ; preds = %14
  ret i64 4611686018427387903

; <label>:68:                                     ; preds = %14
  %69 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %69, align 8
  %70 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %69, align 8
  store i32 153562946, i32* %13
  br label %71

; <label>:71:                                     ; preds = %68, %37, %17, %16
  br label %14
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #8

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #9

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E(i32*, i64, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i32* @_ZSt25__uninitialized_default_nIPimET_S1_T0_(i32* %7, i64 %8)
  ret i32* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt25__uninitialized_default_nIPimET_S1_T0_(i32*, i64) #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8, align 1
  store i32* %0, i32** %3, align 8
  store i64 %1, i64* %4, align 8
  store i8 1, i8* %5, align 1
  %6 = load i32*, i32** %3, align 8
  %7 = load i64, i64* %4, align 8
  %8 = call i32* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_(i32* %6, i64 %7)
  ret i32* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_(i32*, i64) #0 comdat align 2 {
  %3 = alloca i32*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = load i32*, i32** %3, align 8
  %7 = load i64, i64* %4, align 8
  store i32 0, i32* %5, align 4
  %8 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %6, i64 %7, i32* dereferenceable(4) %5)
  ret i32* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32* %8, i64 %9, i32* dereferenceable(4) %10)
  ret i32* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32*, i64, i32* dereferenceable(4)) #4 comdat {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i32*
  %7 = alloca i32**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.184
  %11 = load i32, i32* @y.185
  %12 = sub i32 %10, 1392902904
  %13 = sub i32 %12, 1
  %14 = add i32 %13, 1392902904
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -124611218, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %241
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -124611218, label %24
    i32 934060732, label %44
    i32 -1684328501, label %83
    i32 49218653, label %84
    i32 1295044422, label %100
    i32 -610875499, label %119
    i32 -529589367, label %122
    i32 1518286072, label %127
    i32 501884221, label %142
    i32 783623683, label %181
    i32 685234015, label %182
    i32 1230290673, label %185
    i32 -1542487045, label %194
    i32 -1765811458, label %198
  ]

; <label>:23:                                     ; preds = %21
  br label %241

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 934060732, i32 1230290673
  store i32 %43, i32* %20
  br label %241

; <label>:44:                                     ; preds = %21
  %45 = alloca i32*, align 8
  store i32** %45, i32*** %7
  %46 = alloca i64, align 8
  %47 = alloca i32*, align 8
  %48 = alloca i32, align 4
  store i32* %48, i32** %6
  %49 = alloca i64, align 8
  store i64* %49, i64** %5
  %50 = load volatile i32**, i32*** %7
  store i32* %0, i32** %50, align 8
  store i64 %1, i64* %46, align 8
  store i32* %2, i32** %47, align 8
  %51 = load i32*, i32** %47, align 8
  %52 = load i32, i32* %51, align 4
  %53 = load volatile i32*, i32** %6
  store i32 %52, i32* %53, align 4
  %54 = load i64, i64* %46, align 8
  %55 = load volatile i64*, i64** %5
  store i64 %54, i64* %55, align 8
  %56 = load i32, i32* @x.184
  %57 = load i32, i32* @y.185
  %58 = add i32 %56, 123969392
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, 123969392
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 false, true
  %69 = and i1 %66, false
  %70 = and i1 %64, %68
  %71 = and i1 %67, false
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 false, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  %82 = select i1 %80, i32 -1684328501, i32 1230290673
  store i32 %82, i32* %20
  br label %241

; <label>:83:                                     ; preds = %21
  store i32 49218653, i32* %20
  br label %241

; <label>:84:                                     ; preds = %21
  %85 = load i32, i32* @x.184
  %86 = load i32, i32* @y.185
  %87 = sub i32 %85, -1981872464
  %88 = sub i32 %87, 1
  %89 = add i32 %88, -1981872464
  %90 = sub i32 %85, 1
  %91 = mul i32 %85, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %86, 10
  %95 = and i1 %93, %94
  %96 = xor i1 %93, %94
  %97 = or i1 %95, %96
  %98 = or i1 %93, %94
  %99 = select i1 %97, i32 1295044422, i32 -1542487045
  store i32 %99, i32* %20
  br label %241

; <label>:100:                                    ; preds = %21
  %101 = load volatile i64*, i64** %5
  %102 = load i64, i64* %101, align 8
  %103 = icmp ugt i64 %102, 0
  store i1 %103, i1* %4
  %104 = load i32, i32* @x.184
  %105 = load i32, i32* @y.185
  %106 = add i32 %104, 72247092
  %107 = sub i32 %106, 1
  %108 = sub i32 %107, 72247092
  %109 = sub i32 %104, 1
  %110 = mul i32 %104, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %105, 10
  %114 = and i1 %112, %113
  %115 = xor i1 %112, %113
  %116 = or i1 %114, %115
  %117 = or i1 %112, %113
  %118 = select i1 %116, i32 -610875499, i32 -1542487045
  store i32 %118, i32* %20
  br label %241

; <label>:119:                                    ; preds = %21
  %120 = load volatile i1, i1* %4
  %121 = select i1 %120, i32 -529589367, i32 685234015
  store i32 %121, i32* %20
  br label %241

; <label>:122:                                    ; preds = %21
  %123 = load volatile i32*, i32** %6
  %124 = load i32, i32* %123, align 4
  %125 = load volatile i32**, i32*** %7
  %126 = load i32*, i32** %125, align 8
  store i32 %124, i32* %126, align 4
  store i32 1518286072, i32* %20
  br label %241

; <label>:127:                                    ; preds = %21
  %128 = load i32, i32* @x.184
  %129 = load i32, i32* @y.185
  %130 = sub i32 0, 1
  %131 = add i32 %128, %130
  %132 = sub i32 %128, 1
  %133 = mul i32 %128, %131
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %129, 10
  %137 = and i1 %135, %136
  %138 = xor i1 %135, %136
  %139 = or i1 %137, %138
  %140 = or i1 %135, %136
  %141 = select i1 %139, i32 501884221, i32 -1765811458
  store i32 %141, i32* %20
  br label %241

; <label>:142:                                    ; preds = %21
  %143 = load volatile i64*, i64** %5
  %144 = load i64, i64* %143, align 8
  %145 = sub i64 %144, -9155572373811499676
  %146 = add i64 %145, -1
  %147 = add i64 %146, -9155572373811499676
  %148 = add i64 %144, -1
  %149 = load volatile i64*, i64** %5
  store i64 %147, i64* %149, align 8
  %150 = load volatile i32**, i32*** %7
  %151 = load i32*, i32** %150, align 8
  %152 = getelementptr inbounds i32, i32* %151, i32 1
  %153 = load volatile i32**, i32*** %7
  store i32* %152, i32** %153, align 8
  %154 = load i32, i32* @x.184
  %155 = load i32, i32* @y.185
  %156 = sub i32 %154, -1053482661
  %157 = sub i32 %156, 1
  %158 = add i32 %157, -1053482661
  %159 = sub i32 %154, 1
  %160 = mul i32 %154, %158
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %155, 10
  %164 = xor i1 %162, true
  %165 = xor i1 %163, true
  %166 = xor i1 false, true
  %167 = and i1 %164, false
  %168 = and i1 %162, %166
  %169 = and i1 %165, false
  %170 = and i1 %163, %166
  %171 = or i1 %167, %168
  %172 = or i1 %169, %170
  %173 = xor i1 %171, %172
  %174 = or i1 %164, %165
  %175 = xor i1 %174, true
  %176 = or i1 false, %166
  %177 = and i1 %175, %176
  %178 = or i1 %173, %177
  %179 = or i1 %162, %163
  %180 = select i1 %178, i32 783623683, i32 -1765811458
  store i32 %180, i32* %20
  br label %241

; <label>:181:                                    ; preds = %21
  store i32 49218653, i32* %20
  br label %241

; <label>:182:                                    ; preds = %21
  %183 = load volatile i32**, i32*** %7
  %184 = load i32*, i32** %183, align 8
  ret i32* %184

; <label>:185:                                    ; preds = %21
  %186 = alloca i32*, align 8
  %187 = alloca i64, align 8
  %188 = alloca i32*, align 8
  %189 = alloca i32, align 4
  %190 = alloca i64, align 8
  store i32* %0, i32** %186, align 8
  store i64 %1, i64* %187, align 8
  store i32* %2, i32** %188, align 8
  %191 = load i32*, i32** %188, align 8
  %192 = load i32, i32* %191, align 4
  store i32 %192, i32* %189, align 4
  %193 = load i64, i64* %187, align 8
  store i64 %193, i64* %190, align 8
  store i32 934060732, i32* %20
  br label %241

; <label>:194:                                    ; preds = %21
  %195 = load volatile i64*, i64** %5
  %196 = load i64, i64* %195, align 8
  %197 = icmp ugt i64 %196, 0
  store i32 1295044422, i32* %20
  br label %241

; <label>:198:                                    ; preds = %21
  %199 = load volatile i64*, i64** %5
  %200 = load i64, i64* %199, align 8
  %201 = shl i64 %200, -1
  %202 = shl i64 %200, -1
  %203 = add i64 %200, -9111913340226498249
  %204 = sub i64 %203, -1
  %205 = sub i64 %204, -9111913340226498249
  %206 = sub i64 %200, -1
  %207 = mul i64 %205, -1
  %208 = sub i64 0, 2552759641158603695
  %209 = sub i64 %208, %200
  %210 = add i64 %209, 2552759641158603695
  %211 = sub i64 0, %200
  %212 = sub i64 0, %210
  %213 = sub i64 0, -1
  %214 = add i64 %212, %213
  %215 = sub i64 0, %214
  %216 = add i64 %210, -1
  %217 = add i64 0, 7482425161740478635
  %218 = sub i64 %217, %200
  %219 = sub i64 %218, 7482425161740478635
  %220 = sub i64 0, %200
  %221 = add i64 %219, -889226979425356925
  %222 = add i64 %221, -1
  %223 = sub i64 %222, -889226979425356925
  %224 = add i64 %219, -1
  %225 = add i64 %200, 7229761707052311809
  %226 = sub i64 %225, -1
  %227 = sub i64 %226, 7229761707052311809
  %228 = sub i64 %200, -1
  %229 = mul i64 %227, -1
  %230 = shl i64 %200, -1
  %231 = sub i64 0, %200
  %232 = sub i64 0, -1
  %233 = add i64 %231, %232
  %234 = sub i64 0, %233
  %235 = add i64 %200, -1
  %236 = load volatile i64*, i64** %5
  store i64 %234, i64* %236, align 8
  %237 = load volatile i32**, i32*** %7
  %238 = load i32*, i32** %237, align 8
  %239 = getelementptr inbounds i32, i32* %238, i32 1
  %240 = load volatile i32**, i32*** %7
  store i32* %239, i32** %240, align 8
  store i32 501884221, i32* %20
  br label %241

; <label>:241:                                    ; preds = %198, %194, %185, %181, %142, %127, %122, %119, %100, %84, %83, %44, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32*) #0 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.186
  %6 = load i32, i32* @y.187
  %7 = sub i32 %5, 1364741311
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1364741311
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1519015291, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %76
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1519015291, label %19
    i32 179122269, label %39
    i32 455295796, label %70
    i32 64960561, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %76

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 179122269, i32 64960561
  store i32 %38, i32* %15
  br label %76

; <label>:39:                                     ; preds = %16
  %40 = alloca i32*, align 8
  store i32* %0, i32** %40, align 8
  %41 = load i32*, i32** %40, align 8
  %42 = call i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %41)
  store i32* %42, i32** %2
  %43 = load i32, i32* @x.186
  %44 = load i32, i32* @y.187
  %45 = add i32 %43, 1890007277
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 1890007277
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 455295796, i32 64960561
  store i32 %69, i32* %15
  br label %76

; <label>:70:                                     ; preds = %16
  %71 = load volatile i32*, i32** %2
  ret i32* %71

; <label>:72:                                     ; preds = %16
  %73 = alloca i32*, align 8
  store i32* %0, i32** %73, align 8
  %74 = load i32*, i32** %73, align 8
  %75 = call i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %74)
  store i32 179122269, i32* %15
  br label %76

; <label>:76:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32*) #4 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.188
  %6 = load i32, i32* @y.189
  %7 = sub i32 %5, 1651341508
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1651341508
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 780056128, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 780056128, label %19
    i32 -2952079, label %27
    i32 -330542085, label %57
    i32 -191842296, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -2952079, i32 -191842296
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca i32*, align 8
  store i32* %0, i32** %28, align 8
  %29 = load i32*, i32** %28, align 8
  store i32* %29, i32** %2
  %30 = load i32, i32* @x.188
  %31 = load i32, i32* @y.189
  %32 = add i32 %30, 968422757
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 968422757
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -330542085, i32 -191842296
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile i32*, i32** %2
  ret i32* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca i32*, align 8
  store i32* %0, i32** %60, align 8
  %61 = load i32*, i32** %60, align 8
  store i32 -2952079, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt9__cxx19986vectorIiSaIiEE4sizeEv(%"class.std::__cxx1998::vector"*) #4 comdat align 2 {
  %2 = alloca %"class.std::__cxx1998::vector"*, align 8
  store %"class.std::__cxx1998::vector"* %0, %"class.std::__cxx1998::vector"** %2, align 8
  %3 = load %"class.std::__cxx1998::vector"*, %"class.std::__cxx1998::vector"** %2, align 8
  %4 = bitcast %"class.std::__cxx1998::vector"* %3 to %"struct.std::__cxx1998::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base", %"struct.std::__cxx1998::_Vector_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load i32*, i32** %6, align 8
  %8 = bitcast %"class.std::__cxx1998::vector"* %3 to %"struct.std::__cxx1998::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base", %"struct.std::__cxx1998::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = ptrtoint i32* %7 to i64
  %13 = ptrtoint i32* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 4
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN11__gnu_debug16_Error_formatter5_M_atEPKcm(%"class.__gnu_debug::_Error_formatter"* noalias sret, i8*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.192
  %7 = load i32, i32* @y.193
  %8 = add i32 %6, -985096309
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -985096309
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1140826727, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %66
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1140826727, label %20
    i32 18395013, label %40
    i32 1881755273, label %60
    i32 1164113393, label %61
  ]

; <label>:19:                                     ; preds = %17
  br label %66

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 18395013, i32 1164113393
  store i32 %39, i32* %16
  br label %66

; <label>:40:                                     ; preds = %17
  %41 = alloca i8*, align 8
  %42 = alloca i64, align 8
  store i8* %1, i8** %41, align 8
  store i64 %2, i64* %42, align 8
  %43 = load i8*, i8** %41, align 8
  %44 = load i64, i64* %42, align 8
  call void @_ZN11__gnu_debug16_Error_formatterC2EPKcm(%"class.__gnu_debug::_Error_formatter"* %0, i8* %43, i64 %44)
  %45 = load i32, i32* @x.192
  %46 = load i32, i32* @y.193
  %47 = sub i32 %45, -1999802567
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -1999802567
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 1881755273, i32 1164113393
  store i32 %59, i32* %16
  br label %66

; <label>:60:                                     ; preds = %17
  ret void

; <label>:61:                                     ; preds = %17
  %62 = alloca i8*, align 8
  %63 = alloca i64, align 8
  store i8* %1, i8** %62, align 8
  store i64 %2, i64* %63, align 8
  %64 = load i8*, i8** %62, align 8
  %65 = load i64, i64* %63, align 8
  call void @_ZN11__gnu_debug16_Error_formatterC2EPKcm(%"class.__gnu_debug::_Error_formatter"* %0, i8* %64, i64 %65)
  store i32 18395013, i32* %16
  br label %66

; <label>:66:                                     ; preds = %61, %40, %20, %19
  br label %17
}

; Function Attrs: nounwind
declare dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter10_M_messageENS_13_Debug_msg_idE(%"class.__gnu_debug::_Error_formatter"*, i32) #2

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_sequenceINSt7__debug6vectorIiSaIiEEEEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"*, %"class.std::__debug::vector"* dereferenceable(56), i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca %"class.__gnu_debug::_Error_formatter"*
  %6 = alloca %"class.__gnu_debug::_Error_formatter"*, align 8
  %7 = alloca %"class.std::__debug::vector"*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %"struct.__gnu_debug::_Error_formatter::_Parameter", align 8
  %10 = alloca %"struct.__gnu_debug::_Error_formatter::_Is_sequence", align 1
  store %"class.__gnu_debug::_Error_formatter"* %0, %"class.__gnu_debug::_Error_formatter"** %6, align 8
  store %"class.std::__debug::vector"* %1, %"class.std::__debug::vector"** %7, align 8
  store i8* %2, i8** %8, align 8
  %11 = load %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %6, align 8
  store %"class.__gnu_debug::_Error_formatter"* %11, %"class.__gnu_debug::_Error_formatter"** %5
  %12 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %5
  %13 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %12, i32 0, i32 3
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %4
  %15 = alloca i32
  store i32 84433564, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %40
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 84433564, label %19
    i32 -301769057, label %23
    i32 -471414453, label %38
  ]

; <label>:18:                                     ; preds = %16
  br label %40

; <label>:19:                                     ; preds = %16
  %20 = load volatile i64, i64* %4
  %21 = icmp ult i64 %20, 9
  %22 = select i1 %21, i32 -301769057, i32 -471414453
  store i32 %22, i32* %15
  br label %40

; <label>:23:                                     ; preds = %16
  %24 = load %"class.std::__debug::vector"*, %"class.std::__debug::vector"** %7, align 8
  %25 = load i8*, i8** %8, align 8
  call void @_ZN11__gnu_debug16_Error_formatter10_ParameterC2INSt7__debug6vectorIiSaIiEEEEERKT_PKcNS0_12_Is_sequenceE(%"struct.__gnu_debug::_Error_formatter::_Parameter"* %9, %"class.std::__debug::vector"* dereferenceable(56) %24, i8* %25)
  %26 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %5
  %27 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %26, i32 0, i32 2
  %28 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %5
  %29 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %28, i32 0, i32 3
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, -8628477587460080529
  %32 = add i64 %31, 1
  %33 = sub i64 %32, -8628477587460080529
  %34 = add i64 %30, 1
  store i64 %33, i64* %29, align 8
  %35 = getelementptr inbounds [9 x %"struct.__gnu_debug::_Error_formatter::_Parameter"], [9 x %"struct.__gnu_debug::_Error_formatter::_Parameter"]* %27, i64 0, i64 %30
  %36 = bitcast %"struct.__gnu_debug::_Error_formatter::_Parameter"* %35 to i8*
  %37 = bitcast %"struct.__gnu_debug::_Error_formatter::_Parameter"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 56, i32 8, i1 false)
  store i32 -471414453, i32* %15
  br label %40

; <label>:38:                                     ; preds = %16
  %39 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %5
  ret %"class.__gnu_debug::_Error_formatter"* %39

; <label>:40:                                     ; preds = %23, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter10_M_integerElPKc(%"class.__gnu_debug::_Error_formatter"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca %"class.__gnu_debug::_Error_formatter"*
  %6 = alloca %"class.__gnu_debug::_Error_formatter"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %"struct.__gnu_debug::_Error_formatter::_Parameter", align 8
  store %"class.__gnu_debug::_Error_formatter"* %0, %"class.__gnu_debug::_Error_formatter"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %10 = load %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %6, align 8
  store %"class.__gnu_debug::_Error_formatter"* %10, %"class.__gnu_debug::_Error_formatter"** %5
  %11 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %5
  %12 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %11, i32 0, i32 3
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %4
  %14 = alloca i32
  store i32 -1261818970, i32* %14
  br label %15

; <label>:15:                                     ; preds = %3, %39
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1261818970, label %18
    i32 -1192245155, label %22
    i32 137321616, label %37
  ]

; <label>:17:                                     ; preds = %15
  br label %39

; <label>:18:                                     ; preds = %15
  %19 = load volatile i64, i64* %4
  %20 = icmp ult i64 %19, 9
  %21 = select i1 %20, i32 -1192245155, i32 137321616
  store i32 %21, i32* %14
  br label %39

; <label>:22:                                     ; preds = %15
  %23 = load i64, i64* %7, align 8
  %24 = load i8*, i8** %8, align 8
  call void @_ZN11__gnu_debug16_Error_formatter10_ParameterC2ElPKc(%"struct.__gnu_debug::_Error_formatter::_Parameter"* %9, i64 %23, i8* %24)
  %25 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %5
  %26 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %25, i32 0, i32 2
  %27 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %5
  %28 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %27, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 7982595812413261403
  %31 = add i64 %30, 1
  %32 = sub i64 %31, 7982595812413261403
  %33 = add i64 %29, 1
  store i64 %32, i64* %28, align 8
  %34 = getelementptr inbounds [9 x %"struct.__gnu_debug::_Error_formatter::_Parameter"], [9 x %"struct.__gnu_debug::_Error_formatter::_Parameter"]* %26, i64 0, i64 %29
  %35 = bitcast %"struct.__gnu_debug::_Error_formatter::_Parameter"* %34 to i8*
  %36 = bitcast %"struct.__gnu_debug::_Error_formatter::_Parameter"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 56, i32 8, i1 false)
  store i32 137321616, i32* %14
  br label %39

; <label>:37:                                     ; preds = %15
  %38 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %5
  ret %"class.__gnu_debug::_Error_formatter"* %38

; <label>:39:                                     ; preds = %22, %18, %17
  br label %15
}

; Function Attrs: noreturn
declare void @_ZNK11__gnu_debug16_Error_formatter8_M_errorEv(%"class.__gnu_debug::_Error_formatter"*) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::__cxx1998::vector"* @_ZNSt7__debug6vectorIiSaIiEE7_M_baseEv(%"class.std::__debug::vector"*) #4 comdat align 2 {
  %2 = alloca %"class.std::__debug::vector"*, align 8
  store %"class.std::__debug::vector"* %0, %"class.std::__debug::vector"** %2, align 8
  %3 = load %"class.std::__debug::vector"*, %"class.std::__debug::vector"** %2, align 8
  %4 = bitcast %"class.std::__debug::vector"* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 24
  %6 = bitcast i8* %5 to %"class.std::__cxx1998::vector"*
  ret %"class.std::__cxx1998::vector"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt9__cxx19986vectorIiSaIiEEixEm(%"class.std::__cxx1998::vector"*, i64) #4 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.200
  %7 = load i32, i32* @y.201
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 443562606, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 443562606, label %19
    i32 441559800, label %27
    i32 945228095, label %51
    i32 -1204889809, label %53
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 441559800, i32 -1204889809
  store i32 %26, i32* %15
  br label %63

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::__cxx1998::vector"*, align 8
  %29 = alloca i64, align 8
  store %"class.std::__cxx1998::vector"* %0, %"class.std::__cxx1998::vector"** %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load %"class.std::__cxx1998::vector"*, %"class.std::__cxx1998::vector"** %28, align 8
  %31 = bitcast %"class.std::__cxx1998::vector"* %30 to %"struct.std::__cxx1998::_Vector_base"*
  %32 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base", %"struct.std::__cxx1998::_Vector_base"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %32, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  %35 = load i64, i64* %29, align 8
  %36 = getelementptr inbounds i32, i32* %34, i64 %35
  store i32* %36, i32** %3
  %37 = load i32, i32* @x.200
  %38 = load i32, i32* @y.201
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 945228095, i32 -1204889809
  store i32 %50, i32* %15
  br label %63

; <label>:51:                                     ; preds = %16
  %52 = load volatile i32*, i32** %3
  ret i32* %52

; <label>:53:                                     ; preds = %16
  %54 = alloca %"class.std::__cxx1998::vector"*, align 8
  %55 = alloca i64, align 8
  store %"class.std::__cxx1998::vector"* %0, %"class.std::__cxx1998::vector"** %54, align 8
  store i64 %1, i64* %55, align 8
  %56 = load %"class.std::__cxx1998::vector"*, %"class.std::__cxx1998::vector"** %54, align 8
  %57 = bitcast %"class.std::__cxx1998::vector"* %56 to %"struct.std::__cxx1998::_Vector_base"*
  %58 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base", %"struct.std::__cxx1998::_Vector_base"* %57, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %58, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8
  %61 = load i64, i64* %55, align 8
  %62 = getelementptr inbounds i32, i32* %60, i64 %61
  store i32 441559800, i32* %15
  br label %63

; <label>:63:                                     ; preds = %53, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN11__gnu_debug16_Error_formatterC2EPKcm(%"class.__gnu_debug::_Error_formatter"*, i8*, i64) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.__gnu_debug::_Error_formatter::_Parameter"*
  %5 = alloca i1
  %6 = alloca %"struct.__gnu_debug::_Error_formatter::_Parameter"*
  %7 = alloca %"struct.__gnu_debug::_Error_formatter::_Parameter"*
  %8 = alloca %"class.__gnu_debug::_Error_formatter"*
  %9 = alloca %"class.__gnu_debug::_Error_formatter"*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  store %"class.__gnu_debug::_Error_formatter"* %0, %"class.__gnu_debug::_Error_formatter"** %9, align 8
  store i8* %1, i8** %10, align 8
  store i64 %2, i64* %11, align 8
  %12 = load %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %9, align 8
  store %"class.__gnu_debug::_Error_formatter"* %12, %"class.__gnu_debug::_Error_formatter"** %8
  %13 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %8
  %14 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %13, i32 0, i32 0
  %15 = load i8*, i8** %10, align 8
  store i8* %15, i8** %14, align 8
  %16 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %8
  %17 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %16, i32 0, i32 1
  %18 = load i64, i64* %11, align 8
  store i64 %18, i64* %17, align 8
  %19 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %8
  %20 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %19, i32 0, i32 2
  %21 = getelementptr inbounds [9 x %"struct.__gnu_debug::_Error_formatter::_Parameter"], [9 x %"struct.__gnu_debug::_Error_formatter::_Parameter"]* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %21, i64 9
  store %"struct.__gnu_debug::_Error_formatter::_Parameter"* %22, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %7
  %23 = alloca i32
  store i32 -503164917, i32* %23
  %24 = alloca %"struct.__gnu_debug::_Error_formatter::_Parameter"*
  store %"struct.__gnu_debug::_Error_formatter::_Parameter"* %21, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %24
  br label %25

; <label>:25:                                     ; preds = %3, %148
  %26 = load i32, i32* %23
  switch i32 %26, label %27 [
    i32 -503164917, label %28
    i32 1746017402, label %45
    i32 1997640679, label %79
    i32 476402111, label %83
    i32 1143705769, label %98
    i32 1749424902, label %127
    i32 -851259268, label %128
    i32 683290803, label %134
  ]

; <label>:27:                                     ; preds = %25
  br label %148

; <label>:28:                                     ; preds = %25
  %29 = load %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %24
  store %"struct.__gnu_debug::_Error_formatter::_Parameter"* %29, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %4
  %30 = load i32, i32* @x.202
  %31 = load i32, i32* @y.203
  %32 = sub i32 %30, -2012085748
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -2012085748
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 1746017402, i32 -851259268
  store i32 %44, i32* %23
  br label %148

; <label>:45:                                     ; preds = %25
  %46 = load volatile %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %4
  call void @_ZN11__gnu_debug16_Error_formatter10_ParameterC2Ev(%"struct.__gnu_debug::_Error_formatter::_Parameter"* %46)
  %47 = load volatile %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %4
  %48 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %47, i64 1
  store %"struct.__gnu_debug::_Error_formatter::_Parameter"* %48, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %6
  %49 = load volatile %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %7
  %50 = load volatile %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %6
  %51 = icmp eq %"struct.__gnu_debug::_Error_formatter::_Parameter"* %50, %49
  store i1 %51, i1* %5
  %52 = load i32, i32* @x.202
  %53 = load i32, i32* @y.203
  %54 = add i32 %52, 1416148998
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, 1416148998
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 1997640679, i32 -851259268
  store i32 %78, i32* %23
  br label %148

; <label>:79:                                     ; preds = %25
  %80 = load volatile i1, i1* %5
  %81 = select i1 %80, i32 476402111, i32 -503164917
  store i32 %81, i32* %23
  %82 = load volatile %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %6
  store %"struct.__gnu_debug::_Error_formatter::_Parameter"* %82, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %24
  br label %148

; <label>:83:                                     ; preds = %25
  %84 = load i32, i32* @x.202
  %85 = load i32, i32* @y.203
  %86 = sub i32 0, 1
  %87 = add i32 %84, %86
  %88 = sub i32 %84, 1
  %89 = mul i32 %84, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %85, 10
  %93 = and i1 %91, %92
  %94 = xor i1 %91, %92
  %95 = or i1 %93, %94
  %96 = or i1 %91, %92
  %97 = select i1 %95, i32 1143705769, i32 683290803
  store i32 %97, i32* %23
  br label %148

; <label>:98:                                     ; preds = %25
  %99 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %8
  %100 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %99, i32 0, i32 3
  store i64 0, i64* %100, align 8
  %101 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %8
  %102 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %101, i32 0, i32 4
  store i8* null, i8** %102, align 8
  %103 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %8
  %104 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %103, i32 0, i32 5
  store i64 78, i64* %104, align 8
  %105 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %8
  %106 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %105, i32 0, i32 6
  store i64 1, i64* %106, align 8
  %107 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %8
  %108 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %107, i32 0, i32 7
  store i8 1, i8* %108, align 8
  %109 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %8
  %110 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %109, i32 0, i32 8
  store i8 0, i8* %110, align 1
  %111 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %8
  call void @_ZNK11__gnu_debug16_Error_formatter17_M_get_max_lengthEv(%"class.__gnu_debug::_Error_formatter"* %111) #3
  %112 = load i32, i32* @x.202
  %113 = load i32, i32* @y.203
  %114 = sub i32 %112, 857261139
  %115 = sub i32 %114, 1
  %116 = add i32 %115, 857261139
  %117 = sub i32 %112, 1
  %118 = mul i32 %112, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %113, 10
  %122 = and i1 %120, %121
  %123 = xor i1 %120, %121
  %124 = or i1 %122, %123
  %125 = or i1 %120, %121
  %126 = select i1 %124, i32 1749424902, i32 683290803
  store i32 %126, i32* %23
  br label %148

; <label>:127:                                    ; preds = %25
  ret void

; <label>:128:                                    ; preds = %25
  %129 = load volatile %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %4
  call void @_ZN11__gnu_debug16_Error_formatter10_ParameterC2Ev(%"struct.__gnu_debug::_Error_formatter::_Parameter"* %129)
  %130 = load volatile %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %4
  %131 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %130, i64 1
  %132 = load volatile %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %7
  %133 = icmp eq %"struct.__gnu_debug::_Error_formatter::_Parameter"* %131, %132
  store i32 1746017402, i32* %23
  br label %148

; <label>:134:                                    ; preds = %25
  %135 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %8
  %136 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %135, i32 0, i32 3
  store i64 0, i64* %136, align 8
  %137 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %8
  %138 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %137, i32 0, i32 4
  store i8* null, i8** %138, align 8
  %139 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %8
  %140 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %139, i32 0, i32 5
  store i64 78, i64* %140, align 8
  %141 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %8
  %142 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %141, i32 0, i32 6
  store i64 1, i64* %142, align 8
  %143 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %8
  %144 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %143, i32 0, i32 7
  store i8 1, i8* %144, align 8
  %145 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %8
  %146 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %145, i32 0, i32 8
  store i8 0, i8* %146, align 1
  %147 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %8
  call void @_ZNK11__gnu_debug16_Error_formatter17_M_get_max_lengthEv(%"class.__gnu_debug::_Error_formatter"* %147) #3
  store i32 1143705769, i32* %23
  br label %148

; <label>:148:                                    ; preds = %134, %128, %98, %83, %79, %45, %28, %27
  br label %25
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug16_Error_formatter10_ParameterC2Ev(%"struct.__gnu_debug::_Error_formatter::_Parameter"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.204
  %5 = load i32, i32* @y.205
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1454783932, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %65
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1454783932, label %17
    i32 -19844050, label %37
    i32 -1155118648, label %58
    i32 -2000269634, label %59
  ]

; <label>:16:                                     ; preds = %14
  br label %65

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -19844050, i32 -2000269634
  store i32 %36, i32* %13
  br label %65

; <label>:37:                                     ; preds = %14
  %38 = alloca %"struct.__gnu_debug::_Error_formatter::_Parameter"*, align 8
  store %"struct.__gnu_debug::_Error_formatter::_Parameter"* %0, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %38, align 8
  %39 = load %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %38, align 8
  %40 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %39, i32 0, i32 0
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %39, i32 0, i32 1
  %42 = bitcast %union.anon* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* %42, i8 0, i64 48, i32 8, i1 false)
  %43 = load i32, i32* @x.204
  %44 = load i32, i32* @y.205
  %45 = add i32 %43, -1670625376
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -1670625376
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -1155118648, i32 -2000269634
  store i32 %57, i32* %13
  br label %65

; <label>:58:                                     ; preds = %14
  ret void

; <label>:59:                                     ; preds = %14
  %60 = alloca %"struct.__gnu_debug::_Error_formatter::_Parameter"*, align 8
  store %"struct.__gnu_debug::_Error_formatter::_Parameter"* %0, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %60, align 8
  %61 = load %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %60, align 8
  %62 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %61, i32 0, i32 0
  store i32 0, i32* %62, align 8
  %63 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %61, i32 0, i32 1
  %64 = bitcast %union.anon* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* %64, i8 0, i64 48, i32 8, i1 false)
  store i32 -19844050, i32* %13
  br label %65

; <label>:65:                                     ; preds = %59, %37, %17, %16
  br label %14
}

; Function Attrs: nounwind
declare void @_ZNK11__gnu_debug16_Error_formatter17_M_get_max_lengthEv(%"class.__gnu_debug::_Error_formatter"*) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #10

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug16_Error_formatter10_ParameterC2INSt7__debug6vectorIiSaIiEEEEERKT_PKcNS0_12_Is_sequenceE(%"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"class.std::__debug::vector"* dereferenceable(56), i8*) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.__gnu_debug::_Error_formatter::_Is_sequence", align 1
  %5 = alloca %"struct.__gnu_debug::_Error_formatter::_Parameter"*, align 8
  %6 = alloca %"class.std::__debug::vector"*, align 8
  %7 = alloca i8*, align 8
  store %"struct.__gnu_debug::_Error_formatter::_Parameter"* %0, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %5, align 8
  store %"class.std::__debug::vector"* %1, %"class.std::__debug::vector"** %6, align 8
  store i8* %2, i8** %7, align 8
  %8 = load %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %5, align 8
  %9 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %8, i32 0, i32 0
  store i32 2, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %8, i32 0, i32 1
  %11 = bitcast %union.anon* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* %11, i8 0, i64 48, i32 8, i1 false)
  %12 = load i8*, i8** %7, align 8
  %13 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %8, i32 0, i32 1
  %14 = bitcast %union.anon* %13 to %struct.anon.24*
  %15 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %14, i32 0, i32 0
  store i8* %12, i8** %15, align 8
  %16 = load %"class.std::__debug::vector"*, %"class.std::__debug::vector"** %6, align 8
  %17 = bitcast %"class.std::__debug::vector"* %16 to i8*
  %18 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %8, i32 0, i32 1
  %19 = bitcast %union.anon* %18 to %struct.anon.24*
  %20 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %19, i32 0, i32 1
  store i8* %17, i8** %20, align 8
  %21 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %8, i32 0, i32 1
  %22 = bitcast %union.anon* %21 to %struct.anon.24*
  %23 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %22, i32 0, i32 2
  store %"class.std::type_info"* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64, i8*, i64 }* @_ZTINSt7__debug6vectorIiSaIiEEE to %"class.std::type_info"*), %"class.std::type_info"** %23, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #10

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug16_Error_formatter10_ParameterC2ElPKc(%"struct.__gnu_debug::_Error_formatter::_Parameter"*, i64, i8*) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.__gnu_debug::_Error_formatter::_Parameter"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"struct.__gnu_debug::_Error_formatter::_Parameter"* %0, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %4, align 8
  %8 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %7, i32 0, i32 0
  store i32 3, i32* %8, align 8
  %9 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %7, i32 0, i32 1
  %10 = bitcast %union.anon* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* %10, i8 0, i64 48, i32 8, i1 false)
  %11 = load i8*, i8** %6, align 8
  %12 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %7, i32 0, i32 1
  %13 = bitcast %union.anon* %12 to %struct.anon.25*
  %14 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %13, i32 0, i32 0
  store i8* %11, i8** %14, align 8
  %15 = load i64, i64* %5, align 8
  %16 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %7, i32 0, i32 1
  %17 = bitcast %union.anon* %16 to %struct.anon.25*
  %18 = getelementptr inbounds %struct.anon.25, %struct.anon.25* %17, i32 0, i32 1
  store i64 %15, i64* %18, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIbEC2Ev(%"class.__gnu_cxx::new_allocator.22"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.210
  %5 = load i32, i32* @y.211
  %6 = sub i32 %4, 1334886465
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1334886465
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 471623884, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 471623884, label %18
    i32 -962306328, label %26
    i32 -1319263942, label %56
    i32 -1658909326, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -962306328, i32 -1658909326
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.22"*, align 8
  store %"class.__gnu_cxx::new_allocator.22"* %0, %"class.__gnu_cxx::new_allocator.22"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.22"*, %"class.__gnu_cxx::new_allocator.22"** %27, align 8
  %29 = load i32, i32* @x.210
  %30 = load i32, i32* @y.211
  %31 = sub i32 %29, 776751038
  %32 = sub i32 %31, 1
  %33 = add i32 %32, 776751038
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -1319263942, i32 -1658909326
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.22"*, align 8
  store %"class.__gnu_cxx::new_allocator.22"* %0, %"class.__gnu_cxx::new_allocator.22"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.22"*, %"class.__gnu_cxx::new_allocator.22"** %58, align 8
  store i32 -962306328, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIbED2Ev(%"class.__gnu_cxx::new_allocator.22"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.22"*, align 8
  store %"class.__gnu_cxx::new_allocator.22"* %0, %"class.__gnu_cxx::new_allocator.22"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.22"*, %"class.__gnu_cxx::new_allocator.22"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug15_Safe_containerINSt7__debug6vectorIbSaIbEEES3_NS_14_Safe_sequenceELb1EEC2Ev(%"class.__gnu_debug::_Safe_container.11"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.214
  %5 = load i32, i32* @y.215
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 309987, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %49
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 309987, label %17
    i32 -1888123431, label %25
    i32 1042407960, label %44
    i32 1043964787, label %45
  ]

; <label>:16:                                     ; preds = %14
  br label %49

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -1888123431, i32 1043964787
  store i32 %24, i32* %13
  br label %49

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_debug::_Safe_container.11"*, align 8
  store %"class.__gnu_debug::_Safe_container.11"* %0, %"class.__gnu_debug::_Safe_container.11"** %26, align 8
  %27 = load %"class.__gnu_debug::_Safe_container.11"*, %"class.__gnu_debug::_Safe_container.11"** %26, align 8
  %28 = bitcast %"class.__gnu_debug::_Safe_container.11"* %27 to %"class.__gnu_debug::_Safe_sequence.12"*
  call void @_ZN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorIbSaIbEEEEC2Ev(%"class.__gnu_debug::_Safe_sequence.12"* %28) #3
  %29 = load i32, i32* @x.214
  %30 = load i32, i32* @y.215
  %31 = sub i32 %29, 1808229148
  %32 = sub i32 %31, 1
  %33 = add i32 %32, 1808229148
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 1042407960, i32 1043964787
  store i32 %43, i32* %13
  br label %49

; <label>:44:                                     ; preds = %14
  ret void

; <label>:45:                                     ; preds = %14
  %46 = alloca %"class.__gnu_debug::_Safe_container.11"*, align 8
  store %"class.__gnu_debug::_Safe_container.11"* %0, %"class.__gnu_debug::_Safe_container.11"** %46, align 8
  %47 = load %"class.__gnu_debug::_Safe_container.11"*, %"class.__gnu_debug::_Safe_container.11"** %46, align 8
  %48 = bitcast %"class.__gnu_debug::_Safe_container.11"* %47 to %"class.__gnu_debug::_Safe_sequence.12"*
  call void @_ZN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorIbSaIbEEEEC2Ev(%"class.__gnu_debug::_Safe_sequence.12"* %48) #3
  store i32 -1888123431, i32* %13
  br label %49

; <label>:49:                                     ; preds = %45, %25, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt9__cxx19986vectorIbSaIbEEC2EmRKbRKS1_(%"class.std::__cxx1998::vector.15"*, i64, i8* dereferenceable(1), %"class.std::allocator.21"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::__cxx1998::vector.15"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %"class.std::allocator.21"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  %11 = alloca i32, align 4
  store %"class.std::__cxx1998::vector.15"* %0, %"class.std::__cxx1998::vector.15"** %5, align 8
  store i64 %1, i64* %6, align 8
  store i8* %2, i8** %7, align 8
  store %"class.std::allocator.21"* %3, %"class.std::allocator.21"** %8, align 8
  %12 = load %"class.std::__cxx1998::vector.15"*, %"class.std::__cxx1998::vector.15"** %5, align 8
  %13 = bitcast %"class.std::__cxx1998::vector.15"* %12 to %"struct.std::__cxx1998::_Bvector_base"*
  %14 = load %"class.std::allocator.21"*, %"class.std::allocator.21"** %8, align 8
  call void @_ZNSt9__cxx199813_Bvector_baseISaIbEEC2ERKS1_(%"struct.std::__cxx1998::_Bvector_base"* %13, %"class.std::allocator.21"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  invoke void @_ZNSt9__cxx19986vectorIbSaIbEE13_M_initializeEm(%"class.std::__cxx1998::vector.15"* %12, i64 %15)
          to label %16 unwind label %31

; <label>:16:                                     ; preds = %4
  %17 = bitcast %"class.std::__cxx1998::vector.15"* %12 to %"struct.std::__cxx1998::_Bvector_base"*
  %18 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base", %"struct.std::__cxx1998::_Bvector_base"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %18, i32 0, i32 0
  %20 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %19 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %21 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_iterator_base", %"struct.std::__cxx1998::_Bit_iterator_base"* %20, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = bitcast %"class.std::__cxx1998::vector.15"* %12 to %"struct.std::__cxx1998::_Bvector_base"*
  %24 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base", %"struct.std::__cxx1998::_Bvector_base"* %23, i32 0, i32 0
  %25 = call i64* @_ZNKSt9__cxx199813_Bvector_baseISaIbEE13_Bvector_impl11_M_end_addrEv(%"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %24) #3
  %26 = load i8*, i8** %7, align 8
  %27 = load i8, i8* %26, align 1
  %28 = trunc i8 %27 to i1
  %29 = select i1 %28, i32 -1, i32 0
  store i32 %29, i32* %11, align 4
  invoke void @_ZSt4fillIPmiEvT_S1_RKT0_(i64* %22, i64* %25, i32* dereferenceable(4) %11)
          to label %30 unwind label %31

; <label>:30:                                     ; preds = %16
  ret void

; <label>:31:                                     ; preds = %16, %4
  %32 = landingpad { i8*, i32 }
          cleanup
  %33 = extractvalue { i8*, i32 } %32, 0
  store i8* %33, i8** %9, align 8
  %34 = extractvalue { i8*, i32 } %32, 1
  store i32 %34, i32* %10, align 4
  %35 = bitcast %"class.std::__cxx1998::vector.15"* %12 to %"struct.std::__cxx1998::_Bvector_base"*
  call void @_ZNSt9__cxx199813_Bvector_baseISaIbEED2Ev(%"struct.std::__cxx1998::_Bvector_base"* %35) #3
  br label %36

; <label>:36:                                     ; preds = %31
  %37 = load i32, i32* @x.216
  %38 = load i32, i32* @y.217
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  br i1 %48, label %50, label %81

; <label>:50:                                     ; preds = %36, %81
  %51 = load i8*, i8** %9, align 8
  %52 = load i32, i32* %10, align 4
  %53 = insertvalue { i8*, i32 } undef, i8* %51, 0
  %54 = insertvalue { i8*, i32 } %53, i32 %52, 1
  %55 = load i32, i32* @x.216
  %56 = load i32, i32* @y.217
  %57 = sub i32 0, 1
  %58 = add i32 %55, %57
  %59 = sub i32 %55, 1
  %60 = mul i32 %55, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %56, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 false, true
  %67 = and i1 %64, false
  %68 = and i1 %62, %66
  %69 = and i1 %65, false
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 false, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  br i1 %78, label %80, label %81

; <label>:80:                                     ; preds = %50
  resume { i8*, i32 } %54

; <label>:81:                                     ; preds = %50, %36
  %82 = load i8*, i8** %9, align 8
  %83 = load i32, i32* %10, align 4
  %84 = insertvalue { i8*, i32 } undef, i8* %82, 0
  %85 = insertvalue { i8*, i32 } %84, i32 %83, 1
  br label %50
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug12_Safe_vectorINSt7__debug6vectorIbSaIbEEENSt9__cxx19986vectorIbS3_EEEC2Ev(%"class.__gnu_debug::_Safe_vector.19"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_debug::_Safe_vector.19"*, align 8
  store %"class.__gnu_debug::_Safe_vector.19"* %0, %"class.__gnu_debug::_Safe_vector.19"** %2, align 8
  %3 = load %"class.__gnu_debug::_Safe_vector.19"*, %"class.__gnu_debug::_Safe_vector.19"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_debug::_Safe_vector.19", %"class.__gnu_debug::_Safe_vector.19"* %3, i32 0, i32 0
  store i64 0, i64* %4, align 8
  call void @_ZN11__gnu_debug12_Safe_vectorINSt7__debug6vectorIbSaIbEEENSt9__cxx19986vectorIbS3_EEE29_M_update_guaranteed_capacityEv(%"class.__gnu_debug::_Safe_vector.19"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorIbSaIbEEEEC2Ev(%"class.__gnu_debug::_Safe_sequence.12"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.220
  %5 = load i32, i32* @y.221
  %6 = sub i32 %4, -853299542
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -853299542
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -51434260, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %50
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -51434260, label %18
    i32 -871237554, label %26
    i32 -724777425, label %45
    i32 1196558914, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %50

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -871237554, i32 1196558914
  store i32 %25, i32* %14
  br label %50

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_debug::_Safe_sequence.12"*, align 8
  store %"class.__gnu_debug::_Safe_sequence.12"* %0, %"class.__gnu_debug::_Safe_sequence.12"** %27, align 8
  %28 = load %"class.__gnu_debug::_Safe_sequence.12"*, %"class.__gnu_debug::_Safe_sequence.12"** %27, align 8
  %29 = bitcast %"class.__gnu_debug::_Safe_sequence.12"* %28 to %"class.__gnu_debug::_Safe_sequence_base"*
  call void @_ZN11__gnu_debug19_Safe_sequence_baseC2Ev(%"class.__gnu_debug::_Safe_sequence_base"* %29) #3
  %30 = load i32, i32* @x.220
  %31 = load i32, i32* @y.221
  %32 = sub i32 %30, -227320395
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -227320395
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -724777425, i32 1196558914
  store i32 %44, i32* %14
  br label %50

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca %"class.__gnu_debug::_Safe_sequence.12"*, align 8
  store %"class.__gnu_debug::_Safe_sequence.12"* %0, %"class.__gnu_debug::_Safe_sequence.12"** %47, align 8
  %48 = load %"class.__gnu_debug::_Safe_sequence.12"*, %"class.__gnu_debug::_Safe_sequence.12"** %47, align 8
  %49 = bitcast %"class.__gnu_debug::_Safe_sequence.12"* %48 to %"class.__gnu_debug::_Safe_sequence_base"*
  call void @_ZN11__gnu_debug19_Safe_sequence_baseC2Ev(%"class.__gnu_debug::_Safe_sequence_base"* %49) #3
  store i32 -871237554, i32* %14
  br label %50

; <label>:50:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt9__cxx199813_Bvector_baseISaIbEEC2ERKS1_(%"struct.std::__cxx1998::_Bvector_base"*, %"class.std::allocator.21"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::__cxx1998::_Bvector_base"*, align 8
  %4 = alloca %"class.std::allocator.21"*, align 8
  %5 = alloca %"class.std::allocator.16", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store %"struct.std::__cxx1998::_Bvector_base"* %0, %"struct.std::__cxx1998::_Bvector_base"** %3, align 8
  store %"class.std::allocator.21"* %1, %"class.std::allocator.21"** %4, align 8
  %8 = load %"struct.std::__cxx1998::_Bvector_base"*, %"struct.std::__cxx1998::_Bvector_base"** %3, align 8
  %9 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base", %"struct.std::__cxx1998::_Bvector_base"* %8, i32 0, i32 0
  %10 = load %"class.std::allocator.21"*, %"class.std::allocator.21"** %4, align 8
  call void @_ZNSaImEC2IbEERKSaIT_E(%"class.std::allocator.16"* %5, %"class.std::allocator.21"* dereferenceable(1) %10) #3
  invoke void @_ZNSt9__cxx199813_Bvector_baseISaIbEE13_Bvector_implC2EOSaImE(%"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %9, %"class.std::allocator.16"* dereferenceable(1) %5)
          to label %11 unwind label %65

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* @x.222
  %13 = load i32, i32* @y.223
  %14 = sub i32 0, 1
  %15 = add i32 %12, %14
  %16 = sub i32 %12, 1
  %17 = mul i32 %12, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %13, 10
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  br i1 %35, label %37, label %128

; <label>:37:                                     ; preds = %11, %128
  call void @_ZNSaImED2Ev(%"class.std::allocator.16"* %5) #3
  %38 = load i32, i32* @x.222
  %39 = load i32, i32* @y.223
  %40 = sub i32 %38, -1897263364
  %41 = sub i32 %40, 1
  %42 = add i32 %41, -1897263364
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  br i1 %62, label %64, label %128

; <label>:64:                                     ; preds = %37
  ret void

; <label>:65:                                     ; preds = %2
  %66 = load i32, i32* @x.222
  %67 = load i32, i32* @y.223
  %68 = add i32 %66, -346185072
  %69 = sub i32 %68, 1
  %70 = sub i32 %69, -346185072
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 false, true
  %79 = and i1 %76, false
  %80 = and i1 %74, %78
  %81 = and i1 %77, false
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 false, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  br i1 %90, label %92, label %129

; <label>:92:                                     ; preds = %65, %129
  %93 = landingpad { i8*, i32 }
          cleanup
  %94 = extractvalue { i8*, i32 } %93, 0
  store i8* %94, i8** %6, align 8
  %95 = extractvalue { i8*, i32 } %93, 1
  store i32 %95, i32* %7, align 4
  call void @_ZNSaImED2Ev(%"class.std::allocator.16"* %5) #3
  %96 = load i32, i32* @x.222
  %97 = load i32, i32* @y.223
  %98 = sub i32 %96, -1576140538
  %99 = sub i32 %98, 1
  %100 = add i32 %99, -1576140538
  %101 = sub i32 %96, 1
  %102 = mul i32 %96, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %97, 10
  %106 = xor i1 %104, true
  %107 = xor i1 %105, true
  %108 = xor i1 true, true
  %109 = and i1 %106, true
  %110 = and i1 %104, %108
  %111 = and i1 %107, true
  %112 = and i1 %105, %108
  %113 = or i1 %109, %110
  %114 = or i1 %111, %112
  %115 = xor i1 %113, %114
  %116 = or i1 %106, %107
  %117 = xor i1 %116, true
  %118 = or i1 true, %108
  %119 = and i1 %117, %118
  %120 = or i1 %115, %119
  %121 = or i1 %104, %105
  br i1 %120, label %122, label %129

; <label>:122:                                    ; preds = %92
  br label %123

; <label>:123:                                    ; preds = %122
  %124 = load i8*, i8** %6, align 8
  %125 = load i32, i32* %7, align 4
  %126 = insertvalue { i8*, i32 } undef, i8* %124, 0
  %127 = insertvalue { i8*, i32 } %126, i32 %125, 1
  resume { i8*, i32 } %127

; <label>:128:                                    ; preds = %37, %11
  call void @_ZNSaImED2Ev(%"class.std::allocator.16"* %5) #3
  br label %37

; <label>:129:                                    ; preds = %92, %65
  %130 = landingpad { i8*, i32 }
          cleanup
  %131 = extractvalue { i8*, i32 } %130, 0
  store i8* %131, i8** %6, align 8
  %132 = extractvalue { i8*, i32 } %130, 1
  store i32 %132, i32* %7, align 4
  call void @_ZNSaImED2Ev(%"class.std::allocator.16"* %5) #3
  br label %92
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt9__cxx19986vectorIbSaIbEE13_M_initializeEm(%"class.std::__cxx1998::vector.15"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.224
  %6 = load i32, i32* @y.225
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 365182213, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %131
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 365182213, label %18
    i32 546994626, label %38
    i32 1070500058, label %91
    i32 -1768840368, label %92
  ]

; <label>:17:                                     ; preds = %15
  br label %131

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 546994626, i32 -1768840368
  store i32 %37, i32* %14
  br label %131

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::__cxx1998::vector.15"*, align 8
  %40 = alloca i64, align 8
  %41 = alloca i64*, align 8
  %42 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  %43 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  store %"class.std::__cxx1998::vector.15"* %0, %"class.std::__cxx1998::vector.15"** %39, align 8
  store i64 %1, i64* %40, align 8
  %44 = load %"class.std::__cxx1998::vector.15"*, %"class.std::__cxx1998::vector.15"** %39, align 8
  %45 = bitcast %"class.std::__cxx1998::vector.15"* %44 to %"struct.std::__cxx1998::_Bvector_base"*
  %46 = load i64, i64* %40, align 8
  %47 = call i64* @_ZNSt9__cxx199813_Bvector_baseISaIbEE11_M_allocateEm(%"struct.std::__cxx1998::_Bvector_base"* %45, i64 %46)
  store i64* %47, i64** %41, align 8
  %48 = load i64*, i64** %41, align 8
  %49 = load i64, i64* %40, align 8
  %50 = call i64 @_ZNSt9__cxx199813_Bvector_baseISaIbEE8_S_nwordEm(i64 %49)
  %51 = getelementptr inbounds i64, i64* %48, i64 %50
  %52 = bitcast %"class.std::__cxx1998::vector.15"* %44 to %"struct.std::__cxx1998::_Bvector_base"*
  %53 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base", %"struct.std::__cxx1998::_Bvector_base"* %52, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %53, i32 0, i32 2
  store i64* %51, i64** %54, align 8
  %55 = load i64*, i64** %41, align 8
  %56 = call i64* @_ZSt11__addressofImEPT_RS0_(i64* dereferenceable(8) %55) #3
  call void @_ZNSt9__cxx199813_Bit_iteratorC2EPmj(%"struct.std::__cxx1998::_Bit_iterator"* %42, i64* %56, i32 0)
  %57 = bitcast %"class.std::__cxx1998::vector.15"* %44 to %"struct.std::__cxx1998::_Bvector_base"*
  %58 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base", %"struct.std::__cxx1998::_Bvector_base"* %57, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %58, i32 0, i32 0
  %60 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %59 to i8*
  %61 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %60, i8* %61, i64 12, i32 8, i1 false)
  %62 = bitcast %"class.std::__cxx1998::vector.15"* %44 to %"struct.std::__cxx1998::_Bvector_base"*
  %63 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base", %"struct.std::__cxx1998::_Bvector_base"* %62, i32 0, i32 0
  %64 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %63, i32 0, i32 0
  %65 = load i64, i64* %40, align 8
  %66 = call { i64*, i32 } @_ZNKSt9__cxx199813_Bit_iteratorplEl(%"struct.std::__cxx1998::_Bit_iterator"* %64, i64 %65)
  %67 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %43 to { i64*, i32 }*
  %68 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %67, i32 0, i32 0
  %69 = extractvalue { i64*, i32 } %66, 0
  store i64* %69, i64** %68, align 8
  %70 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %67, i32 0, i32 1
  %71 = extractvalue { i64*, i32 } %66, 1
  store i32 %71, i32* %70, align 8
  %72 = bitcast %"class.std::__cxx1998::vector.15"* %44 to %"struct.std::__cxx1998::_Bvector_base"*
  %73 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base", %"struct.std::__cxx1998::_Bvector_base"* %72, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %73, i32 0, i32 1
  %75 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %74 to i8*
  %76 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %75, i8* %76, i64 12, i32 8, i1 false)
  %77 = load i32, i32* @x.224
  %78 = load i32, i32* @y.225
  %79 = sub i32 0, 1
  %80 = add i32 %77, %79
  %81 = sub i32 %77, 1
  %82 = mul i32 %77, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %78, 10
  %86 = and i1 %84, %85
  %87 = xor i1 %84, %85
  %88 = or i1 %86, %87
  %89 = or i1 %84, %85
  %90 = select i1 %88, i32 1070500058, i32 -1768840368
  store i32 %90, i32* %14
  br label %131

; <label>:91:                                     ; preds = %15
  ret void

; <label>:92:                                     ; preds = %15
  %93 = alloca %"class.std::__cxx1998::vector.15"*, align 8
  %94 = alloca i64, align 8
  %95 = alloca i64*, align 8
  %96 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  %97 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  store %"class.std::__cxx1998::vector.15"* %0, %"class.std::__cxx1998::vector.15"** %93, align 8
  store i64 %1, i64* %94, align 8
  %98 = load %"class.std::__cxx1998::vector.15"*, %"class.std::__cxx1998::vector.15"** %93, align 8
  %99 = bitcast %"class.std::__cxx1998::vector.15"* %98 to %"struct.std::__cxx1998::_Bvector_base"*
  %100 = load i64, i64* %94, align 8
  %101 = call i64* @_ZNSt9__cxx199813_Bvector_baseISaIbEE11_M_allocateEm(%"struct.std::__cxx1998::_Bvector_base"* %99, i64 %100)
  store i64* %101, i64** %95, align 8
  %102 = load i64*, i64** %95, align 8
  %103 = load i64, i64* %94, align 8
  %104 = call i64 @_ZNSt9__cxx199813_Bvector_baseISaIbEE8_S_nwordEm(i64 %103)
  %105 = getelementptr inbounds i64, i64* %102, i64 %104
  %106 = bitcast %"class.std::__cxx1998::vector.15"* %98 to %"struct.std::__cxx1998::_Bvector_base"*
  %107 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base", %"struct.std::__cxx1998::_Bvector_base"* %106, i32 0, i32 0
  %108 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %107, i32 0, i32 2
  store i64* %105, i64** %108, align 8
  %109 = load i64*, i64** %95, align 8
  %110 = call i64* @_ZSt11__addressofImEPT_RS0_(i64* dereferenceable(8) %109) #3
  call void @_ZNSt9__cxx199813_Bit_iteratorC2EPmj(%"struct.std::__cxx1998::_Bit_iterator"* %96, i64* %110, i32 0)
  %111 = bitcast %"class.std::__cxx1998::vector.15"* %98 to %"struct.std::__cxx1998::_Bvector_base"*
  %112 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base", %"struct.std::__cxx1998::_Bvector_base"* %111, i32 0, i32 0
  %113 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %112, i32 0, i32 0
  %114 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %113 to i8*
  %115 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %96 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %114, i8* %115, i64 12, i32 8, i1 false)
  %116 = bitcast %"class.std::__cxx1998::vector.15"* %98 to %"struct.std::__cxx1998::_Bvector_base"*
  %117 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base", %"struct.std::__cxx1998::_Bvector_base"* %116, i32 0, i32 0
  %118 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %117, i32 0, i32 0
  %119 = load i64, i64* %94, align 8
  %120 = call { i64*, i32 } @_ZNKSt9__cxx199813_Bit_iteratorplEl(%"struct.std::__cxx1998::_Bit_iterator"* %118, i64 %119)
  %121 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %97 to { i64*, i32 }*
  %122 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %121, i32 0, i32 0
  %123 = extractvalue { i64*, i32 } %120, 0
  store i64* %123, i64** %122, align 8
  %124 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %121, i32 0, i32 1
  %125 = extractvalue { i64*, i32 } %120, 1
  store i32 %125, i32* %124, align 8
  %126 = bitcast %"class.std::__cxx1998::vector.15"* %98 to %"struct.std::__cxx1998::_Bvector_base"*
  %127 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base", %"struct.std::__cxx1998::_Bvector_base"* %126, i32 0, i32 0
  %128 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %127, i32 0, i32 1
  %129 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %128 to i8*
  %130 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %129, i8* %130, i64 12, i32 8, i1 false)
  store i32 546994626, i32* %14
  br label %131

; <label>:131:                                    ; preds = %92, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIPmiEvT_S1_RKT0_(i64*, i64*, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.__gnu_debug::_Error_formatter", align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i32* %2, i32** %6, align 8
  %8 = alloca i32
  store i32 1632629768, i32* %8
  br label %9

; <label>:9:                                      ; preds = %3, %87
  %10 = load i32, i32* %8
  switch i32 %10, label %11 [
    i32 1632629768, label %12
    i32 -151342588, label %15
    i32 -1393616143, label %19
    i32 -606154227, label %20
    i32 -23579332, label %48
    i32 -1404404941, label %80
    i32 -1264988007, label %81
  ]

; <label>:11:                                     ; preds = %9
  br label %87

; <label>:12:                                     ; preds = %9
  %13 = call zeroext i1 @_ZN11__gnu_debug13__valid_rangeIPmEEbRKT_S4_(i64** dereferenceable(8) %4, i64** dereferenceable(8) %5)
  %14 = select i1 %13, i32 -1393616143, i32 -151342588
  store i32 %14, i32* %8
  br label %87

; <label>:15:                                     ; preds = %9
  call void @_ZN11__gnu_debug16_Error_formatter5_M_atEPKcm(%"class.__gnu_debug::_Error_formatter"* sret %7, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.4, i32 0, i32 0), i64 745)
  %16 = call dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter10_M_messageENS_13_Debug_msg_idE(%"class.__gnu_debug::_Error_formatter"* %7, i32 0) #3
  %17 = call dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_iteratorIPmEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"* %16, i64** dereferenceable(8) %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i32 0, i32 0))
  %18 = call dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_iteratorIPmEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"* %17, i64** dereferenceable(8) %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i32 0, i32 0))
  call void @_ZNK11__gnu_debug16_Error_formatter8_M_errorEv(%"class.__gnu_debug::_Error_formatter"* %18) #13
  unreachable

; <label>:19:                                     ; preds = %9
  store i32 -606154227, i32* %8
  br label %87

; <label>:20:                                     ; preds = %9
  %21 = load i32, i32* @x.226
  %22 = load i32, i32* @y.227
  %23 = sub i32 %21, 1982528759
  %24 = sub i32 %23, 1
  %25 = add i32 %24, 1982528759
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 true, true
  %34 = and i1 %31, true
  %35 = and i1 %29, %33
  %36 = and i1 %32, true
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 true, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  %47 = select i1 %45, i32 -23579332, i32 -1264988007
  store i32 %47, i32* %8
  br label %87

; <label>:48:                                     ; preds = %9
  %49 = load i64*, i64** %4, align 8
  %50 = call i64* @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %49)
  %51 = load i64*, i64** %5, align 8
  %52 = call i64* @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %51)
  %53 = load i32*, i32** %6, align 8
  call void @_ZSt8__fill_aIPmiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i64* %50, i64* %52, i32* dereferenceable(4) %53)
  %54 = load i32, i32* @x.226
  %55 = load i32, i32* @y.227
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 false, true
  %66 = and i1 %63, false
  %67 = and i1 %61, %65
  %68 = and i1 %64, false
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 false, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 -1404404941, i32 -1264988007
  store i32 %79, i32* %8
  br label %87

; <label>:80:                                     ; preds = %9
  ret void

; <label>:81:                                     ; preds = %9
  %82 = load i64*, i64** %4, align 8
  %83 = call i64* @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %82)
  %84 = load i64*, i64** %5, align 8
  %85 = call i64* @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %84)
  %86 = load i32*, i32** %6, align 8
  call void @_ZSt8__fill_aIPmiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i64* %83, i64* %85, i32* dereferenceable(4) %86)
  store i32 -23579332, i32* %8
  br label %87

; <label>:87:                                     ; preds = %81, %48, %20, %19, %12, %11
  br label %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaImEC2IbEERKSaIT_E(%"class.std::allocator.16"*, %"class.std::allocator.21"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.228
  %6 = load i32, i32* @y.229
  %7 = add i32 %5, 156639075
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 156639075
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 998306264, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 998306264, label %19
    i32 60435185, label %39
    i32 -1343815464, label %71
    i32 1678941939, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 60435185, i32 1678941939
  store i32 %38, i32* %15
  br label %77

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.16"*, align 8
  %41 = alloca %"class.std::allocator.21"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %40, align 8
  store %"class.std::allocator.21"* %1, %"class.std::allocator.21"** %41, align 8
  %42 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %40, align 8
  %43 = bitcast %"class.std::allocator.16"* %42 to %"class.__gnu_cxx::new_allocator.17"*
  call void @_ZN9__gnu_cxx13new_allocatorImEC2Ev(%"class.__gnu_cxx::new_allocator.17"* %43) #3
  %44 = load i32, i32* @x.228
  %45 = load i32, i32* @y.229
  %46 = add i32 %44, -6921385
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -6921385
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -1343815464, i32 1678941939
  store i32 %70, i32* %15
  br label %77

; <label>:71:                                     ; preds = %16
  ret void

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.std::allocator.16"*, align 8
  %74 = alloca %"class.std::allocator.21"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %73, align 8
  store %"class.std::allocator.21"* %1, %"class.std::allocator.21"** %74, align 8
  %75 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %73, align 8
  %76 = bitcast %"class.std::allocator.16"* %75 to %"class.__gnu_cxx::new_allocator.17"*
  call void @_ZN9__gnu_cxx13new_allocatorImEC2Ev(%"class.__gnu_cxx::new_allocator.17"* %76) #3
  store i32 60435185, i32* %15
  br label %77

; <label>:77:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt9__cxx199813_Bvector_baseISaIbEE13_Bvector_implC2EOSaImE(%"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"class.std::allocator.16"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, align 8
  %4 = alloca %"class.std::allocator.16"*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %0, %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %3, align 8
  store %"class.std::allocator.16"* %1, %"class.std::allocator.16"** %4, align 8
  %7 = load %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"*, %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"** %3, align 8
  %8 = bitcast %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %7 to %"class.std::allocator.16"*
  %9 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %4, align 8
  %10 = call dereferenceable(1) %"class.std::allocator.16"* @_ZSt4moveIRSaImEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.16"* dereferenceable(1) %9) #3
  call void @_ZNSaImEC2ERKS_(%"class.std::allocator.16"* %8, %"class.std::allocator.16"* dereferenceable(1) %10) #3
  %11 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %7, i32 0, i32 0
  invoke void @_ZNSt9__cxx199813_Bit_iteratorC2Ev(%"struct.std::__cxx1998::_Bit_iterator"* %11)
          to label %12 unwind label %16

; <label>:12:                                     ; preds = %2
  %13 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %7, i32 0, i32 1
  invoke void @_ZNSt9__cxx199813_Bit_iteratorC2Ev(%"struct.std::__cxx1998::_Bit_iterator"* %13)
          to label %14 unwind label %16

; <label>:14:                                     ; preds = %12
  %15 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %7, i32 0, i32 2
  store i64* null, i64** %15, align 8
  ret void

; <label>:16:                                     ; preds = %12, %2
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  store i8* %18, i8** %5, align 8
  %19 = extractvalue { i8*, i32 } %17, 1
  store i32 %19, i32* %6, align 4
  %20 = bitcast %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %7 to %"class.std::allocator.16"*
  call void @_ZNSaImED2Ev(%"class.std::allocator.16"* %20) #3
  br label %21

; <label>:21:                                     ; preds = %16
  %22 = load i32, i32* @x.230
  %23 = load i32, i32* @y.231
  %24 = add i32 %22, 1539848083
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, 1539848083
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 false, true
  %35 = and i1 %32, false
  %36 = and i1 %30, %34
  %37 = and i1 %33, false
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 false, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  br i1 %46, label %48, label %68

; <label>:48:                                     ; preds = %21, %68
  %49 = load i8*, i8** %5, align 8
  %50 = load i32, i32* %6, align 4
  %51 = insertvalue { i8*, i32 } undef, i8* %49, 0
  %52 = insertvalue { i8*, i32 } %51, i32 %50, 1
  %53 = load i32, i32* @x.230
  %54 = load i32, i32* @y.231
  %55 = sub i32 %53, -1293460225
  %56 = sub i32 %55, 1
  %57 = add i32 %56, -1293460225
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  br i1 %65, label %67, label %68

; <label>:67:                                     ; preds = %48
  resume { i8*, i32 } %52

; <label>:68:                                     ; preds = %48, %21
  %69 = load i8*, i8** %5, align 8
  %70 = load i32, i32* %6, align 4
  %71 = insertvalue { i8*, i32 } undef, i8* %69, 0
  %72 = insertvalue { i8*, i32 } %71, i32 %70, 1
  br label %48
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaImED2Ev(%"class.std::allocator.16"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.232
  %5 = load i32, i32* @y.233
  %6 = add i32 %4, 1973350349
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1973350349
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1941954882, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %74
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1941954882, label %18
    i32 1033256287, label %38
    i32 1725167206, label %69
    i32 1412432328, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %74

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1033256287, i32 1412432328
  store i32 %37, i32* %14
  br label %74

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %39, align 8
  %40 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %39, align 8
  %41 = bitcast %"class.std::allocator.16"* %40 to %"class.__gnu_cxx::new_allocator.17"*
  call void @_ZN9__gnu_cxx13new_allocatorImED2Ev(%"class.__gnu_cxx::new_allocator.17"* %41) #3
  %42 = load i32, i32* @x.232
  %43 = load i32, i32* @y.233
  %44 = sub i32 %42, 1151476979
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 1151476979
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 1725167206, i32 1412432328
  store i32 %68, i32* %14
  br label %74

; <label>:69:                                     ; preds = %15
  ret void

; <label>:70:                                     ; preds = %15
  %71 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %71, align 8
  %72 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %71, align 8
  %73 = bitcast %"class.std::allocator.16"* %72 to %"class.__gnu_cxx::new_allocator.17"*
  call void @_ZN9__gnu_cxx13new_allocatorImED2Ev(%"class.__gnu_cxx::new_allocator.17"* %73) #3
  store i32 1033256287, i32* %14
  br label %74

; <label>:74:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorImEC2Ev(%"class.__gnu_cxx::new_allocator.17"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.16"* @_ZSt4moveIRSaImEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.16"* dereferenceable(1)) #4 comdat {
  %2 = alloca %"class.std::allocator.16"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.236
  %6 = load i32, i32* @y.237
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -2090006309, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2090006309, label %18
    i32 -2107275538, label %38
    i32 -721994604, label %56
    i32 1823924667, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -2107275538, i32 1823924667
  store i32 %37, i32* %14
  br label %61

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %39, align 8
  %40 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %39, align 8
  store %"class.std::allocator.16"* %40, %"class.std::allocator.16"** %2
  %41 = load i32, i32* @x.236
  %42 = load i32, i32* @y.237
  %43 = sub i32 %41, -1294113725
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -1294113725
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -721994604, i32 1823924667
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  %57 = load volatile %"class.std::allocator.16"*, %"class.std::allocator.16"** %2
  ret %"class.std::allocator.16"* %57

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %59, align 8
  %60 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %59, align 8
  store i32 -2107275538, i32* %14
  br label %61

; <label>:61:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt9__cxx199813_Bit_iteratorC2Ev(%"struct.std::__cxx1998::_Bit_iterator"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.238
  %5 = load i32, i32* @y.239
  %6 = sub i32 %4, -668006025
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -668006025
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1832287692, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %74
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1832287692, label %18
    i32 -1577428798, label %38
    i32 1953114246, label %69
    i32 2009385941, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %74

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1577428798, i32 2009385941
  store i32 %37, i32* %14
  br label %74

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::__cxx1998::_Bit_iterator"*, align 8
  store %"struct.std::__cxx1998::_Bit_iterator"* %0, %"struct.std::__cxx1998::_Bit_iterator"** %39, align 8
  %40 = load %"struct.std::__cxx1998::_Bit_iterator"*, %"struct.std::__cxx1998::_Bit_iterator"** %39, align 8
  %41 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %40 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  call void @_ZNSt9__cxx199818_Bit_iterator_baseC2EPmj(%"struct.std::__cxx1998::_Bit_iterator_base"* %41, i64* null, i32 0)
  %42 = load i32, i32* @x.238
  %43 = load i32, i32* @y.239
  %44 = sub i32 %42, -968110905
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -968110905
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 1953114246, i32 2009385941
  store i32 %68, i32* %14
  br label %74

; <label>:69:                                     ; preds = %15
  ret void

; <label>:70:                                     ; preds = %15
  %71 = alloca %"struct.std::__cxx1998::_Bit_iterator"*, align 8
  store %"struct.std::__cxx1998::_Bit_iterator"* %0, %"struct.std::__cxx1998::_Bit_iterator"** %71, align 8
  %72 = load %"struct.std::__cxx1998::_Bit_iterator"*, %"struct.std::__cxx1998::_Bit_iterator"** %71, align 8
  %73 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %72 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  call void @_ZNSt9__cxx199818_Bit_iterator_baseC2EPmj(%"struct.std::__cxx1998::_Bit_iterator_base"* %73, i64* null, i32 0)
  store i32 -1577428798, i32* %14
  br label %74

; <label>:74:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorImEC2ERKS1_(%"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %1, %"class.__gnu_cxx::new_allocator.17"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt9__cxx199818_Bit_iterator_baseC2EPmj(%"struct.std::__cxx1998::_Bit_iterator_base"*, i64*, i32) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::__cxx1998::_Bit_iterator_base"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i32, align 4
  store %"struct.std::__cxx1998::_Bit_iterator_base"* %0, %"struct.std::__cxx1998::_Bit_iterator_base"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i32 %2, i32* %6, align 4
  %7 = load %"struct.std::__cxx1998::_Bit_iterator_base"*, %"struct.std::__cxx1998::_Bit_iterator_base"** %4, align 8
  %8 = bitcast %"struct.std::__cxx1998::_Bit_iterator_base"* %7 to %"struct.std::iterator"*
  %9 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_iterator_base", %"struct.std::__cxx1998::_Bit_iterator_base"* %7, i32 0, i32 0
  %10 = load i64*, i64** %5, align 8
  store i64* %10, i64** %9, align 8
  %11 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_iterator_base", %"struct.std::__cxx1998::_Bit_iterator_base"* %7, i32 0, i32 1
  %12 = load i32, i32* %6, align 4
  store i32 %12, i32* %11, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt9__cxx199813_Bvector_baseISaIbEE11_M_allocateEm(%"struct.std::__cxx1998::_Bvector_base"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::__cxx1998::_Bvector_base"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::__cxx1998::_Bvector_base"* %0, %"struct.std::__cxx1998::_Bvector_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::__cxx1998::_Bvector_base"*, %"struct.std::__cxx1998::_Bvector_base"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base", %"struct.std::__cxx1998::_Bvector_base"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %6 to %"class.std::allocator.16"*
  %8 = load i64, i64* %4, align 8
  %9 = call i64 @_ZNSt9__cxx199813_Bvector_baseISaIbEE8_S_nwordEm(i64 %8)
  %10 = call i64* @_ZNSt16allocator_traitsISaImEE8allocateERS0_m(%"class.std::allocator.16"* dereferenceable(1) %7, i64 %9)
  ret i64* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt9__cxx199813_Bvector_baseISaIbEE8_S_nwordEm(i64) #4 comdat align 2 {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, -4205199516380705812
  %5 = add i64 %4, 64
  %6 = sub i64 %5, -4205199516380705812
  %7 = add i64 %3, 64
  %8 = sub i64 0, 1
  %9 = add i64 %6, %8
  %10 = sub i64 %6, 1
  %11 = udiv i64 %9, 64
  ret i64 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt9__cxx199813_Bit_iteratorC2EPmj(%"struct.std::__cxx1998::_Bit_iterator"*, i64*, i32) unnamed_addr #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.248
  %7 = load i32, i32* @y.249
  %8 = add i32 %6, -1380705113
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1380705113
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1390999829, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %60
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1390999829, label %20
    i32 -53619443, label %28
    i32 83518565, label %51
    i32 1674704260, label %52
  ]

; <label>:19:                                     ; preds = %17
  br label %60

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -53619443, i32 1674704260
  store i32 %27, i32* %16
  br label %60

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::__cxx1998::_Bit_iterator"*, align 8
  %30 = alloca i64*, align 8
  %31 = alloca i32, align 4
  store %"struct.std::__cxx1998::_Bit_iterator"* %0, %"struct.std::__cxx1998::_Bit_iterator"** %29, align 8
  store i64* %1, i64** %30, align 8
  store i32 %2, i32* %31, align 4
  %32 = load %"struct.std::__cxx1998::_Bit_iterator"*, %"struct.std::__cxx1998::_Bit_iterator"** %29, align 8
  %33 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %32 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %34 = load i64*, i64** %30, align 8
  %35 = load i32, i32* %31, align 4
  call void @_ZNSt9__cxx199818_Bit_iterator_baseC2EPmj(%"struct.std::__cxx1998::_Bit_iterator_base"* %33, i64* %34, i32 %35)
  %36 = load i32, i32* @x.248
  %37 = load i32, i32* @y.249
  %38 = add i32 %36, 800387597
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, 800387597
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 83518565, i32 1674704260
  store i32 %50, i32* %16
  br label %60

; <label>:51:                                     ; preds = %17
  ret void

; <label>:52:                                     ; preds = %17
  %53 = alloca %"struct.std::__cxx1998::_Bit_iterator"*, align 8
  %54 = alloca i64*, align 8
  %55 = alloca i32, align 4
  store %"struct.std::__cxx1998::_Bit_iterator"* %0, %"struct.std::__cxx1998::_Bit_iterator"** %53, align 8
  store i64* %1, i64** %54, align 8
  store i32 %2, i32* %55, align 4
  %56 = load %"struct.std::__cxx1998::_Bit_iterator"*, %"struct.std::__cxx1998::_Bit_iterator"** %53, align 8
  %57 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %56 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %58 = load i64*, i64** %54, align 8
  %59 = load i32, i32* %55, align 4
  call void @_ZNSt9__cxx199818_Bit_iterator_baseC2EPmj(%"struct.std::__cxx1998::_Bit_iterator_base"* %57, i64* %58, i32 %59)
  store i32 -53619443, i32* %16
  br label %60

; <label>:60:                                     ; preds = %52, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNKSt9__cxx199813_Bit_iteratorplEl(%"struct.std::__cxx1998::_Bit_iterator"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  %4 = alloca %"struct.std::__cxx1998::_Bit_iterator"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  store %"struct.std::__cxx1998::_Bit_iterator"* %0, %"struct.std::__cxx1998::_Bit_iterator"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"struct.std::__cxx1998::_Bit_iterator"*, %"struct.std::__cxx1998::_Bit_iterator"** %4, align 8
  %8 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %6 to i8*
  %9 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 16, i32 8, i1 false)
  %10 = load i64, i64* %5, align 8
  %11 = call dereferenceable(16) %"struct.std::__cxx1998::_Bit_iterator"* @_ZNSt9__cxx199813_Bit_iteratorpLEl(%"struct.std::__cxx1998::_Bit_iterator"* %6, i64 %10)
  %12 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %3 to i8*
  %13 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 16, i32 8, i1 false)
  %14 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %3 to { i64*, i32 }*
  %15 = load { i64*, i32 }, { i64*, i32 }* %14, align 8
  ret { i64*, i32 } %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt16allocator_traitsISaImEE8allocateERS0_m(%"class.std::allocator.16"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.16"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %3, align 8
  %6 = bitcast %"class.std::allocator.16"* %5 to %"class.__gnu_cxx::new_allocator.17"*
  %7 = load i64, i64* %4, align 8
  %8 = call i64* @_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.17"* %6, i64 %7, i8* null)
  ret i64* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.17"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv(%"class.__gnu_cxx::new_allocator.17"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 -492416146, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %125
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -492416146, label %17
    i32 -737958217, label %22
    i32 -740511887, label %50
    i32 1789169846, label %77
    i32 2033607382, label %78
    i32 -804790298, label %93
    i32 1270935801, label %112
    i32 -1032292483, label %114
    i32 774496335, label %115
  ]

; <label>:16:                                     ; preds = %14
  br label %125

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 -737958217, i32 2033607382
  store i32 %21, i32* %13
  br label %125

; <label>:22:                                     ; preds = %14
  %23 = load i32, i32* @x.254
  %24 = load i32, i32* @y.255
  %25 = sub i32 %23, 905421054
  %26 = sub i32 %25, 1
  %27 = add i32 %26, 905421054
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 false, true
  %36 = and i1 %33, false
  %37 = and i1 %31, %35
  %38 = and i1 %34, false
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 false, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  %49 = select i1 %47, i32 -740511887, i32 -1032292483
  store i32 %49, i32* %13
  br label %125

; <label>:50:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #13
  %51 = load i32, i32* @x.254
  %52 = load i32, i32* @y.255
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 1789169846, i32 -1032292483
  store i32 %76, i32* %13
  br label %125

; <label>:77:                                     ; preds = %14
  unreachable

; <label>:78:                                     ; preds = %14
  %79 = load i32, i32* @x.254
  %80 = load i32, i32* @y.255
  %81 = sub i32 0, 1
  %82 = add i32 %79, %81
  %83 = sub i32 %79, 1
  %84 = mul i32 %79, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %80, 10
  %88 = and i1 %86, %87
  %89 = xor i1 %86, %87
  %90 = or i1 %88, %89
  %91 = or i1 %86, %87
  %92 = select i1 %90, i32 -804790298, i32 774496335
  store i32 %92, i32* %13
  br label %125

; <label>:93:                                     ; preds = %14
  %94 = load i64, i64* %8, align 8
  %95 = mul i64 %94, 8
  %96 = call i8* @_Znwm(i64 %95)
  %97 = bitcast i8* %96 to i64*
  store i64* %97, i64** %4
  %98 = load i32, i32* @x.254
  %99 = load i32, i32* @y.255
  %100 = sub i32 0, 1
  %101 = add i32 %98, %100
  %102 = sub i32 %98, 1
  %103 = mul i32 %98, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %99, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  %111 = select i1 %109, i32 1270935801, i32 774496335
  store i32 %111, i32* %13
  br label %125

; <label>:112:                                    ; preds = %14
  %113 = load volatile i64*, i64** %4
  ret i64* %113

; <label>:114:                                    ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #13
  store i32 -740511887, i32* %13
  br label %125

; <label>:115:                                    ; preds = %14
  %116 = load i64, i64* %8, align 8
  %117 = sub i64 %116, -1069440108896455163
  %118 = sub i64 %117, 8
  %119 = add i64 %118, -1069440108896455163
  %120 = sub i64 %116, 8
  %121 = mul i64 %119, 8
  %122 = mul i64 %116, 8
  %123 = call i8* @_Znwm(i64 %122)
  %124 = bitcast i8* %123 to i64*
  store i32 -804790298, i32* %13
  br label %125

; <label>:125:                                    ; preds = %115, %114, %93, %78, %50, %22, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv(%"class.__gnu_cxx::new_allocator.17"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(16) %"struct.std::__cxx1998::_Bit_iterator"* @_ZNSt9__cxx199813_Bit_iteratorpLEl(%"struct.std::__cxx1998::_Bit_iterator"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::__cxx1998::_Bit_iterator"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.258
  %7 = load i32, i32* @y.259
  %8 = add i32 %6, -1564061201
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1564061201
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1644191312, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1644191312, label %20
    i32 1343118286, label %40
    i32 -2091983295, label %62
    i32 79309940, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1343118286, i32 79309940
  store i32 %39, i32* %16
  br label %70

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::__cxx1998::_Bit_iterator"*, align 8
  %42 = alloca i64, align 8
  store %"struct.std::__cxx1998::_Bit_iterator"* %0, %"struct.std::__cxx1998::_Bit_iterator"** %41, align 8
  store i64 %1, i64* %42, align 8
  %43 = load %"struct.std::__cxx1998::_Bit_iterator"*, %"struct.std::__cxx1998::_Bit_iterator"** %41, align 8
  store %"struct.std::__cxx1998::_Bit_iterator"* %43, %"struct.std::__cxx1998::_Bit_iterator"** %3
  %44 = load volatile %"struct.std::__cxx1998::_Bit_iterator"*, %"struct.std::__cxx1998::_Bit_iterator"** %3
  %45 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %44 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %46 = load i64, i64* %42, align 8
  call void @_ZNSt9__cxx199818_Bit_iterator_base7_M_incrEl(%"struct.std::__cxx1998::_Bit_iterator_base"* %45, i64 %46)
  %47 = load i32, i32* @x.258
  %48 = load i32, i32* @y.259
  %49 = sub i32 %47, -1733160716
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -1733160716
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -2091983295, i32 79309940
  store i32 %61, i32* %16
  br label %70

; <label>:62:                                     ; preds = %17
  %63 = load volatile %"struct.std::__cxx1998::_Bit_iterator"*, %"struct.std::__cxx1998::_Bit_iterator"** %3
  ret %"struct.std::__cxx1998::_Bit_iterator"* %63

; <label>:64:                                     ; preds = %17
  %65 = alloca %"struct.std::__cxx1998::_Bit_iterator"*, align 8
  %66 = alloca i64, align 8
  store %"struct.std::__cxx1998::_Bit_iterator"* %0, %"struct.std::__cxx1998::_Bit_iterator"** %65, align 8
  store i64 %1, i64* %66, align 8
  %67 = load %"struct.std::__cxx1998::_Bit_iterator"*, %"struct.std::__cxx1998::_Bit_iterator"** %65, align 8
  %68 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %67 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %69 = load i64, i64* %66, align 8
  call void @_ZNSt9__cxx199818_Bit_iterator_base7_M_incrEl(%"struct.std::__cxx1998::_Bit_iterator_base"* %68, i64 %69)
  store i32 1343118286, i32* %16
  br label %70

; <label>:70:                                     ; preds = %64, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt9__cxx199818_Bit_iterator_base7_M_incrEl(%"struct.std::__cxx1998::_Bit_iterator_base"*, i64) #4 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::__cxx1998::_Bit_iterator_base"*
  %5 = alloca %"struct.std::__cxx1998::_Bit_iterator_base"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  store %"struct.std::__cxx1998::_Bit_iterator_base"* %0, %"struct.std::__cxx1998::_Bit_iterator_base"** %5, align 8
  store i64 %1, i64* %6, align 8
  %8 = load %"struct.std::__cxx1998::_Bit_iterator_base"*, %"struct.std::__cxx1998::_Bit_iterator_base"** %5, align 8
  store %"struct.std::__cxx1998::_Bit_iterator_base"* %8, %"struct.std::__cxx1998::_Bit_iterator_base"** %4
  %9 = load i64, i64* %6, align 8
  %10 = load volatile %"struct.std::__cxx1998::_Bit_iterator_base"*, %"struct.std::__cxx1998::_Bit_iterator_base"** %4
  %11 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_iterator_base", %"struct.std::__cxx1998::_Bit_iterator_base"* %10, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = add i64 %9, 7833764050454011043
  %15 = add i64 %14, %13
  %16 = sub i64 %15, 7833764050454011043
  %17 = add nsw i64 %9, %13
  store i64 %16, i64* %7, align 8
  %18 = load i64, i64* %7, align 8
  %19 = sdiv i64 %18, 64
  %20 = load volatile %"struct.std::__cxx1998::_Bit_iterator_base"*, %"struct.std::__cxx1998::_Bit_iterator_base"** %4
  %21 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_iterator_base", %"struct.std::__cxx1998::_Bit_iterator_base"* %20, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = getelementptr inbounds i64, i64* %22, i64 %19
  store i64* %23, i64** %21, align 8
  %24 = load i64, i64* %7, align 8
  %25 = srem i64 %24, 64
  store i64 %25, i64* %7, align 8
  %26 = load i64, i64* %7, align 8
  store i64 %26, i64* %3
  %27 = alloca i32
  store i32 -348355606, i32* %27
  br label %28

; <label>:28:                                     ; preds = %2, %51
  %29 = load i32, i32* %27
  switch i32 %29, label %30 [
    i32 -348355606, label %31
    i32 788599642, label %35
    i32 188518133, label %46
  ]

; <label>:30:                                     ; preds = %28
  br label %51

; <label>:31:                                     ; preds = %28
  %32 = load volatile i64, i64* %3
  %33 = icmp slt i64 %32, 0
  %34 = select i1 %33, i32 788599642, i32 188518133
  store i32 %34, i32* %27
  br label %51

; <label>:35:                                     ; preds = %28
  %36 = load i64, i64* %7, align 8
  %37 = sub i64 0, %36
  %38 = sub i64 0, 64
  %39 = add i64 %37, %38
  %40 = sub i64 0, %39
  %41 = add nsw i64 %36, 64
  store i64 %40, i64* %7, align 8
  %42 = load volatile %"struct.std::__cxx1998::_Bit_iterator_base"*, %"struct.std::__cxx1998::_Bit_iterator_base"** %4
  %43 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_iterator_base", %"struct.std::__cxx1998::_Bit_iterator_base"* %42, i32 0, i32 0
  %44 = load i64*, i64** %43, align 8
  %45 = getelementptr inbounds i64, i64* %44, i32 -1
  store i64* %45, i64** %43, align 8
  store i32 188518133, i32* %27
  br label %51

; <label>:46:                                     ; preds = %28
  %47 = load i64, i64* %7, align 8
  %48 = trunc i64 %47 to i32
  %49 = load volatile %"struct.std::__cxx1998::_Bit_iterator_base"*, %"struct.std::__cxx1998::_Bit_iterator_base"** %4
  %50 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_iterator_base", %"struct.std::__cxx1998::_Bit_iterator_base"* %49, i32 0, i32 1
  store i32 %48, i32* %50, align 8
  ret void

; <label>:51:                                     ; preds = %35, %31, %30
  br label %28
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN11__gnu_debug13__valid_rangeIPmEEbRKT_S4_(i64** dereferenceable(8), i64** dereferenceable(8)) #0 comdat {
  %3 = alloca i64**, align 8
  %4 = alloca i64**, align 8
  %5 = alloca %"struct.std::__false_type", align 1
  store i64** %0, i64*** %3, align 8
  store i64** %1, i64*** %4, align 8
  %6 = load i64**, i64*** %3, align 8
  %7 = load i64**, i64*** %4, align 8
  %8 = call zeroext i1 @_ZN11__gnu_debug17__valid_range_auxIPmEEbRKT_S4_St12__false_type(i64** dereferenceable(8) %6, i64** dereferenceable(8) %7)
  ret i1 %8
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_iteratorIPmEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"*, i64** dereferenceable(8), i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca %"class.__gnu_debug::_Error_formatter"*
  %6 = alloca %"class.__gnu_debug::_Error_formatter"*, align 8
  %7 = alloca i64**, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %"struct.__gnu_debug::_Error_formatter::_Parameter", align 8
  %10 = alloca %"struct.__gnu_debug::_Error_formatter::_Is_iterator", align 1
  store %"class.__gnu_debug::_Error_formatter"* %0, %"class.__gnu_debug::_Error_formatter"** %6, align 8
  store i64** %1, i64*** %7, align 8
  store i8* %2, i8** %8, align 8
  %11 = load %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %6, align 8
  store %"class.__gnu_debug::_Error_formatter"* %11, %"class.__gnu_debug::_Error_formatter"** %5
  %12 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %5
  %13 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %12, i32 0, i32 3
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %4
  %15 = alloca i32
  store i32 -422931642, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %122
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -422931642, label %19
    i32 -807361428, label %23
    i32 4806755, label %38
    i32 -982454533, label %80
    i32 2065659726, label %81
    i32 80228140, label %83
  ]

; <label>:18:                                     ; preds = %16
  br label %122

; <label>:19:                                     ; preds = %16
  %20 = load volatile i64, i64* %4
  %21 = icmp ult i64 %20, 9
  %22 = select i1 %21, i32 -807361428, i32 2065659726
  store i32 %22, i32* %15
  br label %122

; <label>:23:                                     ; preds = %16
  %24 = load i32, i32* @x.264
  %25 = load i32, i32* @y.265
  %26 = sub i32 0, 1
  %27 = add i32 %24, %26
  %28 = sub i32 %24, 1
  %29 = mul i32 %24, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %25, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  %37 = select i1 %35, i32 4806755, i32 80228140
  store i32 %37, i32* %15
  br label %122

; <label>:38:                                     ; preds = %16
  %39 = load i64**, i64*** %7, align 8
  %40 = load i8*, i8** %8, align 8
  call void @_ZN11__gnu_debug16_Error_formatter10_ParameterC2IPmEERKT_PKcNS0_12_Is_iteratorE(%"struct.__gnu_debug::_Error_formatter::_Parameter"* %9, i64** dereferenceable(8) %39, i8* %40)
  %41 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %5
  %42 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %41, i32 0, i32 2
  %43 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %5
  %44 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %43, i32 0, i32 3
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 2343577646978188804
  %47 = add i64 %46, 1
  %48 = sub i64 %47, 2343577646978188804
  %49 = add i64 %45, 1
  store i64 %48, i64* %44, align 8
  %50 = getelementptr inbounds [9 x %"struct.__gnu_debug::_Error_formatter::_Parameter"], [9 x %"struct.__gnu_debug::_Error_formatter::_Parameter"]* %42, i64 0, i64 %45
  %51 = bitcast %"struct.__gnu_debug::_Error_formatter::_Parameter"* %50 to i8*
  %52 = bitcast %"struct.__gnu_debug::_Error_formatter::_Parameter"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 56, i32 8, i1 false)
  %53 = load i32, i32* @x.264
  %54 = load i32, i32* @y.265
  %55 = add i32 %53, -1615439301
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, -1615439301
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 false, true
  %66 = and i1 %63, false
  %67 = and i1 %61, %65
  %68 = and i1 %64, false
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 false, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 -982454533, i32 80228140
  store i32 %79, i32* %15
  br label %122

; <label>:80:                                     ; preds = %16
  store i32 2065659726, i32* %15
  br label %122

; <label>:81:                                     ; preds = %16
  %82 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %5
  ret %"class.__gnu_debug::_Error_formatter"* %82

; <label>:83:                                     ; preds = %16
  %84 = load i64**, i64*** %7, align 8
  %85 = load i8*, i8** %8, align 8
  call void @_ZN11__gnu_debug16_Error_formatter10_ParameterC2IPmEERKT_PKcNS0_12_Is_iteratorE(%"struct.__gnu_debug::_Error_formatter::_Parameter"* %9, i64** dereferenceable(8) %84, i8* %85)
  %86 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %5
  %87 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %86, i32 0, i32 2
  %88 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %5
  %89 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %88, i32 0, i32 3
  %90 = load i64, i64* %89, align 8
  %91 = sub i64 %90, 5195776319060538801
  %92 = sub i64 %91, 1
  %93 = add i64 %92, 5195776319060538801
  %94 = sub i64 %90, 1
  %95 = mul i64 %93, 1
  %96 = sub i64 0, %90
  %97 = add i64 0, %96
  %98 = sub i64 0, %90
  %99 = add i64 %97, -7579217452512959396
  %100 = add i64 %99, 1
  %101 = sub i64 %100, -7579217452512959396
  %102 = add i64 %97, 1
  %103 = shl i64 %90, 1
  %104 = sub i64 0, 1
  %105 = add i64 %90, %104
  %106 = sub i64 %90, 1
  %107 = mul i64 %105, 1
  %108 = sub i64 0, 3336524904193565760
  %109 = sub i64 %108, %90
  %110 = add i64 %109, 3336524904193565760
  %111 = sub i64 0, %90
  %112 = sub i64 0, 1
  %113 = sub i64 %110, %112
  %114 = add i64 %110, 1
  %115 = sub i64 %90, -285585333251735057
  %116 = add i64 %115, 1
  %117 = add i64 %116, -285585333251735057
  %118 = add i64 %90, 1
  store i64 %117, i64* %89, align 8
  %119 = getelementptr inbounds [9 x %"struct.__gnu_debug::_Error_formatter::_Parameter"], [9 x %"struct.__gnu_debug::_Error_formatter::_Parameter"]* %87, i64 0, i64 %90
  %120 = bitcast %"struct.__gnu_debug::_Error_formatter::_Parameter"* %119 to i8*
  %121 = bitcast %"struct.__gnu_debug::_Error_formatter::_Parameter"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %120, i8* %121, i64 56, i32 8, i1 false)
  store i32 4806755, i32* %15
  br label %122

; <label>:122:                                    ; preds = %83, %80, %38, %23, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPmiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i64*, i64*, i32* dereferenceable(4)) #4 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i32* %2, i32** %6, align 8
  %8 = load i32*, i32** %6, align 8
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %7, align 4
  %10 = alloca i32
  store i32 1028871120, i32* %10
  br label %11

; <label>:11:                                     ; preds = %3, %86
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 1028871120, label %14
    i32 1615420913, label %19
    i32 -1532902219, label %23
    i32 -1383887566, label %51
    i32 773219133, label %81
    i32 -443901752, label %82
    i32 1592448238, label %83
  ]

; <label>:13:                                     ; preds = %11
  br label %86

; <label>:14:                                     ; preds = %11
  %15 = load i64*, i64** %4, align 8
  %16 = load i64*, i64** %5, align 8
  %17 = icmp ne i64* %15, %16
  %18 = select i1 %17, i32 1615420913, i32 -443901752
  store i32 %18, i32* %10
  br label %86

; <label>:19:                                     ; preds = %11
  %20 = load i32, i32* %7, align 4
  %21 = sext i32 %20 to i64
  %22 = load i64*, i64** %4, align 8
  store i64 %21, i64* %22, align 8
  store i32 -1532902219, i32* %10
  br label %86

; <label>:23:                                     ; preds = %11
  %24 = load i32, i32* @x.266
  %25 = load i32, i32* @y.267
  %26 = sub i32 %24, -1525593276
  %27 = sub i32 %26, 1
  %28 = add i32 %27, -1525593276
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 true, true
  %37 = and i1 %34, true
  %38 = and i1 %32, %36
  %39 = and i1 %35, true
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 true, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  %50 = select i1 %48, i32 -1383887566, i32 1592448238
  store i32 %50, i32* %10
  br label %86

; <label>:51:                                     ; preds = %11
  %52 = load i64*, i64** %4, align 8
  %53 = getelementptr inbounds i64, i64* %52, i32 1
  store i64* %53, i64** %4, align 8
  %54 = load i32, i32* @x.266
  %55 = load i32, i32* @y.267
  %56 = sub i32 %54, -996224772
  %57 = sub i32 %56, 1
  %58 = add i32 %57, -996224772
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 false, true
  %67 = and i1 %64, false
  %68 = and i1 %62, %66
  %69 = and i1 %65, false
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 false, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  %80 = select i1 %78, i32 773219133, i32 1592448238
  store i32 %80, i32* %10
  br label %86

; <label>:81:                                     ; preds = %11
  store i32 1028871120, i32* %10
  br label %86

; <label>:82:                                     ; preds = %11
  ret void

; <label>:83:                                     ; preds = %11
  %84 = load i64*, i64** %4, align 8
  %85 = getelementptr inbounds i64, i64* %84, i32 1
  store i64* %85, i64** %4, align 8
  store i32 -1383887566, i32* %10
  br label %86

; <label>:86:                                     ; preds = %83, %81, %51, %23, %19, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i64*) #0 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  %4 = call i64* @_ZNSt10_Iter_baseIPmLb0EE7_S_baseES0_(i64* %3)
  ret i64* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN11__gnu_debug17__valid_range_auxIPmEEbRKT_S4_St12__false_type(i64** dereferenceable(8), i64** dereferenceable(8)) #0 comdat {
  %3 = alloca %"struct.std::__false_type", align 1
  %4 = alloca i64**, align 8
  %5 = alloca i64**, align 8
  %6 = alloca %"struct.std::random_access_iterator_tag", align 1
  %7 = alloca %"struct.std::random_access_iterator_tag", align 1
  store i64** %0, i64*** %4, align 8
  store i64** %1, i64*** %5, align 8
  %8 = load i64**, i64*** %4, align 8
  %9 = load i64**, i64*** %5, align 8
  %10 = load i64**, i64*** %4, align 8
  call void @_ZSt19__iterator_categoryIPmENSt15iterator_traitsIT_E17iterator_categoryERKS2_(i64** dereferenceable(8) %10)
  %11 = call zeroext i1 @_ZN11__gnu_debug18__valid_range_aux2IPmEEbRKT_S4_St26random_access_iterator_tag(i64** dereferenceable(8) %8, i64** dereferenceable(8) %9)
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN11__gnu_debug18__valid_range_aux2IPmEEbRKT_S4_St26random_access_iterator_tag(i64** dereferenceable(8), i64** dereferenceable(8)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.272
  %7 = load i32, i32* @y.273
  %8 = sub i32 %6, 1902752094
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1902752094
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -527578640, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %118
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -527578640, label %20
    i32 -617937244, label %28
    i32 1071911966, label %59
    i32 -455127511, label %61
  ]

; <label>:19:                                     ; preds = %17
  br label %118

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -617937244, i32 -455127511
  store i32 %27, i32* %16
  br label %118

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::random_access_iterator_tag", align 1
  %30 = alloca i64**, align 8
  %31 = alloca i64**, align 8
  store i64** %0, i64*** %30, align 8
  store i64** %1, i64*** %31, align 8
  %32 = load i64**, i64*** %31, align 8
  %33 = load i64*, i64** %32, align 8
  %34 = load i64**, i64*** %30, align 8
  %35 = load i64*, i64** %34, align 8
  %36 = ptrtoint i64* %33 to i64
  %37 = ptrtoint i64* %35 to i64
  %38 = sub i64 %36, -7506709906383755107
  %39 = sub i64 %38, %37
  %40 = add i64 %39, -7506709906383755107
  %41 = sub i64 %36, %37
  %42 = sdiv exact i64 %40, 8
  %43 = icmp sge i64 %42, 0
  store i1 %43, i1* %3
  %44 = load i32, i32* @x.272
  %45 = load i32, i32* @y.273
  %46 = add i32 %44, -1912516143
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -1912516143
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1071911966, i32 -455127511
  store i32 %58, i32* %16
  br label %118

; <label>:59:                                     ; preds = %17
  %60 = load volatile i1, i1* %3
  ret i1 %60

; <label>:61:                                     ; preds = %17
  %62 = alloca %"struct.std::random_access_iterator_tag", align 1
  %63 = alloca i64**, align 8
  %64 = alloca i64**, align 8
  store i64** %0, i64*** %63, align 8
  store i64** %1, i64*** %64, align 8
  %65 = load i64**, i64*** %64, align 8
  %66 = load i64*, i64** %65, align 8
  %67 = load i64**, i64*** %63, align 8
  %68 = load i64*, i64** %67, align 8
  %69 = ptrtoint i64* %66 to i64
  %70 = ptrtoint i64* %68 to i64
  %71 = sub i64 0, 4542183666270160178
  %72 = sub i64 %71, %69
  %73 = add i64 %72, 4542183666270160178
  %74 = sub i64 0, %69
  %75 = add i64 %73, -3246559820326362995
  %76 = add i64 %75, %70
  %77 = sub i64 %76, -3246559820326362995
  %78 = add i64 %73, %70
  %79 = shl i64 %69, %70
  %80 = shl i64 %69, %70
  %81 = sub i64 0, %69
  %82 = add i64 0, %81
  %83 = sub i64 0, %69
  %84 = sub i64 0, %82
  %85 = sub i64 0, %70
  %86 = add i64 %84, %85
  %87 = sub i64 0, %86
  %88 = add i64 %82, %70
  %89 = sub i64 %69, 4687437738539902775
  %90 = sub i64 %89, %70
  %91 = add i64 %90, 4687437738539902775
  %92 = sub i64 %69, %70
  %93 = mul i64 %91, %70
  %94 = shl i64 %69, %70
  %95 = sub i64 0, %70
  %96 = add i64 %69, %95
  %97 = sub i64 %69, %70
  %98 = mul i64 %96, %70
  %99 = sub i64 %69, 2229823504984292493
  %100 = sub i64 %99, %70
  %101 = add i64 %100, 2229823504984292493
  %102 = sub i64 %69, %70
  %103 = sub i64 %101, 3489542737778947112
  %104 = sub i64 %103, 8
  %105 = add i64 %104, 3489542737778947112
  %106 = sub i64 %101, 8
  %107 = mul i64 %105, 8
  %108 = shl i64 %101, 8
  %109 = shl i64 %101, 8
  %110 = shl i64 %101, 8
  %111 = sub i64 %101, 1627340504747029022
  %112 = sub i64 %111, 8
  %113 = add i64 %112, 1627340504747029022
  %114 = sub i64 %101, 8
  %115 = mul i64 %113, 8
  %116 = sdiv exact i64 %101, 8
  %117 = icmp sge i64 %116, 0
  store i32 -617937244, i32* %16
  br label %118

; <label>:118:                                    ; preds = %61, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt19__iterator_categoryIPmENSt15iterator_traitsIT_E17iterator_categoryERKS2_(i64** dereferenceable(8)) #4 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.274
  %5 = load i32, i32* @y.275
  %6 = add i32 %4, -1644549299
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1644549299
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -782157410, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %48
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -782157410, label %18
    i32 -163975502, label %26
    i32 -1101016080, label %44
    i32 646296001, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %48

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -163975502, i32 646296001
  store i32 %25, i32* %14
  br label %48

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::random_access_iterator_tag", align 1
  %28 = alloca i64**, align 8
  store i64** %0, i64*** %28, align 8
  %29 = load i32, i32* @x.274
  %30 = load i32, i32* @y.275
  %31 = sub i32 %29, -2075476452
  %32 = sub i32 %31, 1
  %33 = add i32 %32, -2075476452
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -1101016080, i32 646296001
  store i32 %43, i32* %14
  br label %48

; <label>:44:                                     ; preds = %15
  ret void

; <label>:45:                                     ; preds = %15
  %46 = alloca %"struct.std::random_access_iterator_tag", align 1
  %47 = alloca i64**, align 8
  store i64** %0, i64*** %47, align 8
  store i32 -163975502, i32* %14
  br label %48

; <label>:48:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN11__gnu_debug16_Error_formatter10_ParameterC2IPmEERKT_PKcNS0_12_Is_iteratorE(%"struct.__gnu_debug::_Error_formatter::_Parameter"*, i64** dereferenceable(8), i8*) unnamed_addr #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.276
  %7 = load i32, i32* @y.277
  %8 = add i32 %6, 1972898808
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1972898808
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 479929327, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %128
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 479929327, label %20
    i32 -1977676939, label %40
    i32 1283999422, label %91
    i32 516975244, label %92
  ]

; <label>:19:                                     ; preds = %17
  br label %128

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1977676939, i32 516975244
  store i32 %39, i32* %16
  br label %128

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.__gnu_debug::_Error_formatter::_Is_iterator", align 1
  %42 = alloca %"struct.__gnu_debug::_Error_formatter::_Parameter"*, align 8
  %43 = alloca i64**, align 8
  %44 = alloca i8*, align 8
  store %"struct.__gnu_debug::_Error_formatter::_Parameter"* %0, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %42, align 8
  store i64** %1, i64*** %43, align 8
  store i8* %2, i8** %44, align 8
  %45 = load %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %42, align 8
  %46 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %45, i32 0, i32 0
  store i32 1, i32* %46, align 8
  %47 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %45, i32 0, i32 1
  %48 = bitcast %union.anon* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* %48, i8 0, i64 48, i32 8, i1 false)
  %49 = load i8*, i8** %44, align 8
  %50 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %45, i32 0, i32 1
  %51 = bitcast %union.anon* %50 to %struct.anon*
  %52 = getelementptr inbounds %struct.anon, %struct.anon* %51, i32 0, i32 0
  store i8* %49, i8** %52, align 8
  %53 = load i64**, i64*** %43, align 8
  %54 = bitcast i64** %53 to i8*
  %55 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %45, i32 0, i32 1
  %56 = bitcast %union.anon* %55 to %struct.anon*
  %57 = getelementptr inbounds %struct.anon, %struct.anon* %56, i32 0, i32 1
  store i8* %54, i8** %57, align 8
  %58 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %45, i32 0, i32 1
  %59 = bitcast %union.anon* %58 to %struct.anon*
  %60 = getelementptr inbounds %struct.anon, %struct.anon* %59, i32 0, i32 2
  store %"class.std::type_info"* bitcast (i8** @_ZTIPm to %"class.std::type_info"*), %"class.std::type_info"** %60, align 8
  %61 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %45, i32 0, i32 1
  %62 = bitcast %union.anon* %61 to %struct.anon*
  %63 = getelementptr inbounds %struct.anon, %struct.anon* %62, i32 0, i32 3
  store i32 0, i32* %63, align 8
  %64 = load i64**, i64*** %43, align 8
  %65 = call zeroext i1 @_ZN11__gnu_debug16__check_singularIPmEEbRKT_(i64** dereferenceable(8) %64)
  %66 = select i1 %65, i32 1, i32 0
  %67 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %45, i32 0, i32 1
  %68 = bitcast %union.anon* %67 to %struct.anon*
  %69 = getelementptr inbounds %struct.anon, %struct.anon* %68, i32 0, i32 4
  store i32 %66, i32* %69, align 4
  %70 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %45, i32 0, i32 1
  %71 = bitcast %union.anon* %70 to %struct.anon*
  %72 = getelementptr inbounds %struct.anon, %struct.anon* %71, i32 0, i32 5
  store i8* null, i8** %72, align 8
  %73 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %45, i32 0, i32 1
  %74 = bitcast %union.anon* %73 to %struct.anon*
  %75 = getelementptr inbounds %struct.anon, %struct.anon* %74, i32 0, i32 6
  store %"class.std::type_info"* null, %"class.std::type_info"** %75, align 8
  %76 = load i32, i32* @x.276
  %77 = load i32, i32* @y.277
  %78 = sub i32 %76, 220514865
  %79 = sub i32 %78, 1
  %80 = add i32 %79, 220514865
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = and i1 %84, %85
  %87 = xor i1 %84, %85
  %88 = or i1 %86, %87
  %89 = or i1 %84, %85
  %90 = select i1 %88, i32 1283999422, i32 516975244
  store i32 %90, i32* %16
  br label %128

; <label>:91:                                     ; preds = %17
  ret void

; <label>:92:                                     ; preds = %17
  %93 = alloca %"struct.__gnu_debug::_Error_formatter::_Is_iterator", align 1
  %94 = alloca %"struct.__gnu_debug::_Error_formatter::_Parameter"*, align 8
  %95 = alloca i64**, align 8
  %96 = alloca i8*, align 8
  store %"struct.__gnu_debug::_Error_formatter::_Parameter"* %0, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %94, align 8
  store i64** %1, i64*** %95, align 8
  store i8* %2, i8** %96, align 8
  %97 = load %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %94, align 8
  %98 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %97, i32 0, i32 0
  store i32 1, i32* %98, align 8
  %99 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %97, i32 0, i32 1
  %100 = bitcast %union.anon* %99 to i8*
  call void @llvm.memset.p0i8.i64(i8* %100, i8 0, i64 48, i32 8, i1 false)
  %101 = load i8*, i8** %96, align 8
  %102 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %97, i32 0, i32 1
  %103 = bitcast %union.anon* %102 to %struct.anon*
  %104 = getelementptr inbounds %struct.anon, %struct.anon* %103, i32 0, i32 0
  store i8* %101, i8** %104, align 8
  %105 = load i64**, i64*** %95, align 8
  %106 = bitcast i64** %105 to i8*
  %107 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %97, i32 0, i32 1
  %108 = bitcast %union.anon* %107 to %struct.anon*
  %109 = getelementptr inbounds %struct.anon, %struct.anon* %108, i32 0, i32 1
  store i8* %106, i8** %109, align 8
  %110 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %97, i32 0, i32 1
  %111 = bitcast %union.anon* %110 to %struct.anon*
  %112 = getelementptr inbounds %struct.anon, %struct.anon* %111, i32 0, i32 2
  store %"class.std::type_info"* bitcast (i8** @_ZTIPm to %"class.std::type_info"*), %"class.std::type_info"** %112, align 8
  %113 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %97, i32 0, i32 1
  %114 = bitcast %union.anon* %113 to %struct.anon*
  %115 = getelementptr inbounds %struct.anon, %struct.anon* %114, i32 0, i32 3
  store i32 0, i32* %115, align 8
  %116 = load i64**, i64*** %95, align 8
  %117 = call zeroext i1 @_ZN11__gnu_debug16__check_singularIPmEEbRKT_(i64** dereferenceable(8) %116)
  %118 = select i1 %117, i32 1, i32 0
  %119 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %97, i32 0, i32 1
  %120 = bitcast %union.anon* %119 to %struct.anon*
  %121 = getelementptr inbounds %struct.anon, %struct.anon* %120, i32 0, i32 4
  store i32 %118, i32* %121, align 4
  %122 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %97, i32 0, i32 1
  %123 = bitcast %union.anon* %122 to %struct.anon*
  %124 = getelementptr inbounds %struct.anon, %struct.anon* %123, i32 0, i32 5
  store i8* null, i8** %124, align 8
  %125 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %97, i32 0, i32 1
  %126 = bitcast %union.anon* %125 to %struct.anon*
  %127 = getelementptr inbounds %struct.anon, %struct.anon* %126, i32 0, i32 6
  store %"class.std::type_info"* null, %"class.std::type_info"** %127, align 8
  store i32 -1977676939, i32* %16
  br label %128

; <label>:128:                                    ; preds = %92, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN11__gnu_debug16__check_singularIPmEEbRKT_(i64** dereferenceable(8)) #0 comdat {
  %2 = alloca i64**, align 8
  store i64** %0, i64*** %2, align 8
  %3 = load i64**, i64*** %2, align 8
  %4 = bitcast i64** %3 to i8*
  %5 = call zeroext i1 @_ZN11__gnu_debug20__check_singular_auxEPKv(i8* %4)
  ret i1 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN11__gnu_debug20__check_singular_auxEPKv(i8*) #4 comdat {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  ret i1 false
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIPmLb0EE7_S_baseES0_(i64*) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.282
  %6 = load i32, i32* @y.283
  %7 = sub i32 %5, -773685291
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -773685291
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 697520043, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %49
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 697520043, label %19
    i32 -747503194, label %27
    i32 1548681632, label %44
    i32 -813223836, label %46
  ]

; <label>:18:                                     ; preds = %16
  br label %49

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -747503194, i32 -813223836
  store i32 %26, i32* %15
  br label %49

; <label>:27:                                     ; preds = %16
  %28 = alloca i64*, align 8
  store i64* %0, i64** %28, align 8
  %29 = load i64*, i64** %28, align 8
  store i64* %29, i64** %2
  %30 = load i32, i32* @x.282
  %31 = load i32, i32* @y.283
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 1548681632, i32 -813223836
  store i32 %43, i32* %15
  br label %49

; <label>:44:                                     ; preds = %16
  %45 = load volatile i64*, i64** %2
  ret i64* %45

; <label>:46:                                     ; preds = %16
  %47 = alloca i64*, align 8
  store i64* %0, i64** %47, align 8
  %48 = load i64*, i64** %47, align 8
  store i32 -747503194, i32* %15
  br label %49

; <label>:49:                                     ; preds = %46, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug12_Safe_vectorINSt7__debug6vectorIbSaIbEEENSt9__cxx19986vectorIbS3_EEE29_M_update_guaranteed_capacityEv(%"class.__gnu_debug::_Safe_vector.19"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.284
  %3 = load i32, i32* @y.285
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 true, true
  %14 = and i1 %11, true
  %15 = and i1 %9, %13
  %16 = and i1 %12, true
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 true, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %213

; <label>:27:                                     ; preds = %1, %213
  %28 = alloca %"class.__gnu_debug::_Safe_vector.19"*, align 8
  store %"class.__gnu_debug::_Safe_vector.19"* %0, %"class.__gnu_debug::_Safe_vector.19"** %28, align 8
  %29 = load %"class.__gnu_debug::_Safe_vector.19"*, %"class.__gnu_debug::_Safe_vector.19"** %28, align 8
  %30 = load i32, i32* @x.284
  %31 = load i32, i32* @y.285
  %32 = sub i32 %30, -1430513959
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -1430513959
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  br i1 %54, label %56, label %213

; <label>:56:                                     ; preds = %27
  %57 = invoke dereferenceable(72) %"class.std::__debug::vector.10"* @_ZNK11__gnu_debug12_Safe_vectorINSt7__debug6vectorIbSaIbEEENSt9__cxx19986vectorIbS3_EEE6_M_seqEv(%"class.__gnu_debug::_Safe_vector.19"* %29)
          to label %58 unwind label %169

; <label>:58:                                     ; preds = %56
  %59 = load i32, i32* @x.284
  %60 = load i32, i32* @y.285
  %61 = add i32 %59, -107136240
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, -107136240
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 false, true
  %72 = and i1 %69, false
  %73 = and i1 %67, %71
  %74 = and i1 %70, false
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 false, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  br i1 %83, label %85, label %216

; <label>:85:                                     ; preds = %58, %216
  %86 = bitcast %"class.std::__debug::vector.10"* %57 to i8*
  %87 = getelementptr inbounds i8, i8* %86, i64 24
  %88 = bitcast i8* %87 to %"class.std::__cxx1998::vector.15"*
  %89 = call i64 @_ZNKSt9__cxx19986vectorIbSaIbEE4sizeEv(%"class.std::__cxx1998::vector.15"* %88) #3
  %90 = getelementptr inbounds %"class.__gnu_debug::_Safe_vector.19", %"class.__gnu_debug::_Safe_vector.19"* %29, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = icmp ugt i64 %89, %91
  %93 = load i32, i32* @x.284
  %94 = load i32, i32* @y.285
  %95 = sub i32 0, 1
  %96 = add i32 %93, %95
  %97 = sub i32 %93, 1
  %98 = mul i32 %93, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %94, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 false, true
  %105 = and i1 %102, false
  %106 = and i1 %100, %104
  %107 = and i1 %103, false
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 false, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  br i1 %116, label %118, label %216

; <label>:118:                                    ; preds = %85
  br i1 %92, label %119, label %168

; <label>:119:                                    ; preds = %118
  %120 = load i32, i32* @x.284
  %121 = load i32, i32* @y.285
  %122 = add i32 %120, 434792046
  %123 = sub i32 %122, 1
  %124 = sub i32 %123, 434792046
  %125 = sub i32 %120, 1
  %126 = mul i32 %120, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %121, 10
  %130 = xor i1 %128, true
  %131 = xor i1 %129, true
  %132 = xor i1 true, true
  %133 = and i1 %130, true
  %134 = and i1 %128, %132
  %135 = and i1 %131, true
  %136 = and i1 %129, %132
  %137 = or i1 %133, %134
  %138 = or i1 %135, %136
  %139 = xor i1 %137, %138
  %140 = or i1 %130, %131
  %141 = xor i1 %140, true
  %142 = or i1 true, %132
  %143 = and i1 %141, %142
  %144 = or i1 %139, %143
  %145 = or i1 %128, %129
  br i1 %144, label %146, label %224

; <label>:146:                                    ; preds = %119, %224
  %147 = load i32, i32* @x.284
  %148 = load i32, i32* @y.285
  %149 = sub i32 0, 1
  %150 = add i32 %147, %149
  %151 = sub i32 %147, 1
  %152 = mul i32 %147, %150
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %148, 10
  %156 = and i1 %154, %155
  %157 = xor i1 %154, %155
  %158 = or i1 %156, %157
  %159 = or i1 %154, %155
  br i1 %158, label %160, label %224

; <label>:160:                                    ; preds = %146
  %161 = invoke dereferenceable(72) %"class.std::__debug::vector.10"* @_ZNK11__gnu_debug12_Safe_vectorINSt7__debug6vectorIbSaIbEEENSt9__cxx19986vectorIbS3_EEE6_M_seqEv(%"class.__gnu_debug::_Safe_vector.19"* %29)
          to label %162 unwind label %169

; <label>:162:                                    ; preds = %160
  %163 = bitcast %"class.std::__debug::vector.10"* %161 to i8*
  %164 = getelementptr inbounds i8, i8* %163, i64 24
  %165 = bitcast i8* %164 to %"class.std::__cxx1998::vector.15"*
  %166 = call i64 @_ZNKSt9__cxx19986vectorIbSaIbEE4sizeEv(%"class.std::__cxx1998::vector.15"* %165) #3
  %167 = getelementptr inbounds %"class.__gnu_debug::_Safe_vector.19", %"class.__gnu_debug::_Safe_vector.19"* %29, i32 0, i32 0
  store i64 %166, i64* %167, align 8
  br label %168

; <label>:168:                                    ; preds = %162, %118
  ret void

; <label>:169:                                    ; preds = %160, %56
  %170 = load i32, i32* @x.284
  %171 = load i32, i32* @y.285
  %172 = sub i32 %170, -2087868485
  %173 = sub i32 %172, 1
  %174 = add i32 %173, -2087868485
  %175 = sub i32 %170, 1
  %176 = mul i32 %170, %174
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %171, 10
  %180 = and i1 %178, %179
  %181 = xor i1 %178, %179
  %182 = or i1 %180, %181
  %183 = or i1 %178, %179
  br i1 %182, label %184, label %225

; <label>:184:                                    ; preds = %169, %225
  %185 = landingpad { i8*, i32 }
          catch i8* null
  %186 = extractvalue { i8*, i32 } %185, 0
  call void @__clang_call_terminate(i8* %186) #11
  %187 = load i32, i32* @x.284
  %188 = load i32, i32* @y.285
  %189 = sub i32 0, 1
  %190 = add i32 %187, %189
  %191 = sub i32 %187, 1
  %192 = mul i32 %187, %190
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %188, 10
  %196 = xor i1 %194, true
  %197 = xor i1 %195, true
  %198 = xor i1 true, true
  %199 = and i1 %196, true
  %200 = and i1 %194, %198
  %201 = and i1 %197, true
  %202 = and i1 %195, %198
  %203 = or i1 %199, %200
  %204 = or i1 %201, %202
  %205 = xor i1 %203, %204
  %206 = or i1 %196, %197
  %207 = xor i1 %206, true
  %208 = or i1 true, %198
  %209 = and i1 %207, %208
  %210 = or i1 %205, %209
  %211 = or i1 %194, %195
  br i1 %210, label %212, label %225

; <label>:212:                                    ; preds = %184
  unreachable

; <label>:213:                                    ; preds = %27, %1
  %214 = alloca %"class.__gnu_debug::_Safe_vector.19"*, align 8
  store %"class.__gnu_debug::_Safe_vector.19"* %0, %"class.__gnu_debug::_Safe_vector.19"** %214, align 8
  %215 = load %"class.__gnu_debug::_Safe_vector.19"*, %"class.__gnu_debug::_Safe_vector.19"** %214, align 8
  br label %27

; <label>:216:                                    ; preds = %85, %58
  %217 = bitcast %"class.std::__debug::vector.10"* %57 to i8*
  %218 = getelementptr inbounds i8, i8* %217, i64 24
  %219 = bitcast i8* %218 to %"class.std::__cxx1998::vector.15"*
  %220 = call i64 @_ZNKSt9__cxx19986vectorIbSaIbEE4sizeEv(%"class.std::__cxx1998::vector.15"* %219) #3
  %221 = getelementptr inbounds %"class.__gnu_debug::_Safe_vector.19", %"class.__gnu_debug::_Safe_vector.19"* %29, i32 0, i32 0
  %222 = load i64, i64* %221, align 8
  %223 = icmp ugt i64 %220, %222
  br label %85

; <label>:224:                                    ; preds = %146, %119
  br label %146

; <label>:225:                                    ; preds = %184, %169
  %226 = landingpad { i8*, i32 }
          catch i8* null
  %227 = extractvalue { i8*, i32 } %226, 0
  call void @__clang_call_terminate(i8* %227) #11
  br label %184
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(72) %"class.std::__debug::vector.10"* @_ZNK11__gnu_debug12_Safe_vectorINSt7__debug6vectorIbSaIbEEENSt9__cxx19986vectorIbS3_EEE6_M_seqEv(%"class.__gnu_debug::_Safe_vector.19"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_debug::_Safe_vector.19"*, align 8
  store %"class.__gnu_debug::_Safe_vector.19"* %0, %"class.__gnu_debug::_Safe_vector.19"** %2, align 8
  %3 = load %"class.__gnu_debug::_Safe_vector.19"*, %"class.__gnu_debug::_Safe_vector.19"** %2, align 8
  %4 = bitcast %"class.__gnu_debug::_Safe_vector.19"* %3 to i8*
  %5 = getelementptr i8, i8* %4, i64 -64
  %6 = bitcast i8* %5 to %"class.std::__debug::vector.10"*
  ret %"class.std::__debug::vector.10"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt9__cxx19986vectorIbSaIbEE4sizeEv(%"class.std::__cxx1998::vector.15"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.288
  %3 = load i32, i32* @y.289
  %4 = add i32 %2, 2066477618
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 2066477618
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %106

; <label>:16:                                     ; preds = %1, %106
  %17 = alloca %"class.std::__cxx1998::vector.15"*, align 8
  %18 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %19 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  store %"class.std::__cxx1998::vector.15"* %0, %"class.std::__cxx1998::vector.15"** %17, align 8
  %20 = load %"class.std::__cxx1998::vector.15"*, %"class.std::__cxx1998::vector.15"** %17, align 8
  %21 = call { i64*, i32 } @_ZNKSt9__cxx19986vectorIbSaIbEE3endEv(%"class.std::__cxx1998::vector.15"* %20) #3
  %22 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %18 to { i64*, i32 }*
  %23 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %22, i32 0, i32 0
  %24 = extractvalue { i64*, i32 } %21, 0
  store i64* %24, i64** %23, align 8
  %25 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %22, i32 0, i32 1
  %26 = extractvalue { i64*, i32 } %21, 1
  store i32 %26, i32* %25, align 8
  %27 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %18 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %28 = call { i64*, i32 } @_ZNKSt9__cxx19986vectorIbSaIbEE5beginEv(%"class.std::__cxx1998::vector.15"* %20) #3
  %29 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %19 to { i64*, i32 }*
  %30 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %29, i32 0, i32 0
  %31 = extractvalue { i64*, i32 } %28, 0
  store i64* %31, i64** %30, align 8
  %32 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %29, i32 0, i32 1
  %33 = extractvalue { i64*, i32 } %28, 1
  store i32 %33, i32* %32, align 8
  %34 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %19 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %35 = load i32, i32* @x.288
  %36 = load i32, i32* @y.289
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  br i1 %58, label %60, label %106

; <label>:60:                                     ; preds = %16
  %61 = invoke i64 @_ZNSt9__cxx1998miERKNS_18_Bit_iterator_baseES2_(%"struct.std::__cxx1998::_Bit_iterator_base"* dereferenceable(16) %27, %"struct.std::__cxx1998::_Bit_iterator_base"* dereferenceable(16) %34)
          to label %62 unwind label %63

; <label>:62:                                     ; preds = %60
  ret i64 %61

; <label>:63:                                     ; preds = %60
  %64 = load i32, i32* @x.288
  %65 = load i32, i32* @y.289
  %66 = sub i32 0, 1
  %67 = add i32 %64, %66
  %68 = sub i32 %64, 1
  %69 = mul i32 %64, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %65, 10
  %73 = xor i1 %71, true
  %74 = xor i1 %72, true
  %75 = xor i1 false, true
  %76 = and i1 %73, false
  %77 = and i1 %71, %75
  %78 = and i1 %74, false
  %79 = and i1 %72, %75
  %80 = or i1 %76, %77
  %81 = or i1 %78, %79
  %82 = xor i1 %80, %81
  %83 = or i1 %73, %74
  %84 = xor i1 %83, true
  %85 = or i1 false, %75
  %86 = and i1 %84, %85
  %87 = or i1 %82, %86
  %88 = or i1 %71, %72
  br i1 %87, label %89, label %125

; <label>:89:                                     ; preds = %63, %125
  %90 = landingpad { i8*, i32 }
          catch i8* null
  %91 = extractvalue { i8*, i32 } %90, 0
  call void @__clang_call_terminate(i8* %91) #11
  %92 = load i32, i32* @x.288
  %93 = load i32, i32* @y.289
  %94 = sub i32 0, 1
  %95 = add i32 %92, %94
  %96 = sub i32 %92, 1
  %97 = mul i32 %92, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %93, 10
  %101 = and i1 %99, %100
  %102 = xor i1 %99, %100
  %103 = or i1 %101, %102
  %104 = or i1 %99, %100
  br i1 %103, label %105, label %125

; <label>:105:                                    ; preds = %89
  unreachable

; <label>:106:                                    ; preds = %16, %1
  %107 = alloca %"class.std::__cxx1998::vector.15"*, align 8
  %108 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %109 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  store %"class.std::__cxx1998::vector.15"* %0, %"class.std::__cxx1998::vector.15"** %107, align 8
  %110 = load %"class.std::__cxx1998::vector.15"*, %"class.std::__cxx1998::vector.15"** %107, align 8
  %111 = call { i64*, i32 } @_ZNKSt9__cxx19986vectorIbSaIbEE3endEv(%"class.std::__cxx1998::vector.15"* %110) #3
  %112 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %108 to { i64*, i32 }*
  %113 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %112, i32 0, i32 0
  %114 = extractvalue { i64*, i32 } %111, 0
  store i64* %114, i64** %113, align 8
  %115 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %112, i32 0, i32 1
  %116 = extractvalue { i64*, i32 } %111, 1
  store i32 %116, i32* %115, align 8
  %117 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %108 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %118 = call { i64*, i32 } @_ZNKSt9__cxx19986vectorIbSaIbEE5beginEv(%"class.std::__cxx1998::vector.15"* %110) #3
  %119 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %109 to { i64*, i32 }*
  %120 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %119, i32 0, i32 0
  %121 = extractvalue { i64*, i32 } %118, 0
  store i64* %121, i64** %120, align 8
  %122 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %119, i32 0, i32 1
  %123 = extractvalue { i64*, i32 } %118, 1
  store i32 %123, i32* %122, align 8
  %124 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %109 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  br label %16

; <label>:125:                                    ; preds = %89, %63
  %126 = landingpad { i8*, i32 }
          catch i8* null
  %127 = extractvalue { i8*, i32 } %126, 0
  call void @__clang_call_terminate(i8* %127) #11
  br label %89
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt9__cxx1998miERKNS_18_Bit_iterator_baseES2_(%"struct.std::__cxx1998::_Bit_iterator_base"* dereferenceable(16), %"struct.std::__cxx1998::_Bit_iterator_base"* dereferenceable(16)) #4 comdat {
  %3 = alloca %"struct.std::__cxx1998::_Bit_iterator_base"*, align 8
  %4 = alloca %"struct.std::__cxx1998::_Bit_iterator_base"*, align 8
  store %"struct.std::__cxx1998::_Bit_iterator_base"* %0, %"struct.std::__cxx1998::_Bit_iterator_base"** %3, align 8
  store %"struct.std::__cxx1998::_Bit_iterator_base"* %1, %"struct.std::__cxx1998::_Bit_iterator_base"** %4, align 8
  %5 = load %"struct.std::__cxx1998::_Bit_iterator_base"*, %"struct.std::__cxx1998::_Bit_iterator_base"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_iterator_base", %"struct.std::__cxx1998::_Bit_iterator_base"* %5, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = load %"struct.std::__cxx1998::_Bit_iterator_base"*, %"struct.std::__cxx1998::_Bit_iterator_base"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_iterator_base", %"struct.std::__cxx1998::_Bit_iterator_base"* %8, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = ptrtoint i64* %7 to i64
  %12 = ptrtoint i64* %10 to i64
  %13 = sub i64 0, %12
  %14 = add i64 %11, %13
  %15 = sub i64 %11, %12
  %16 = sdiv exact i64 %14, 8
  %17 = mul nsw i64 64, %16
  %18 = load %"struct.std::__cxx1998::_Bit_iterator_base"*, %"struct.std::__cxx1998::_Bit_iterator_base"** %3, align 8
  %19 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_iterator_base", %"struct.std::__cxx1998::_Bit_iterator_base"* %18, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = zext i32 %20 to i64
  %22 = sub i64 0, %17
  %23 = sub i64 0, %21
  %24 = add i64 %22, %23
  %25 = sub i64 0, %24
  %26 = add nsw i64 %17, %21
  %27 = load %"struct.std::__cxx1998::_Bit_iterator_base"*, %"struct.std::__cxx1998::_Bit_iterator_base"** %4, align 8
  %28 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_iterator_base", %"struct.std::__cxx1998::_Bit_iterator_base"* %27, i32 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = zext i32 %29 to i64
  %31 = sub i64 %25, 352306978392832555
  %32 = sub i64 %31, %30
  %33 = add i64 %32, 352306978392832555
  %34 = sub nsw i64 %25, %30
  ret i64 %33
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZNKSt9__cxx19986vectorIbSaIbEE3endEv(%"class.std::__cxx1998::vector.15"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %3 = alloca %"class.std::__cxx1998::vector.15"*, align 8
  store %"class.std::__cxx1998::vector.15"* %0, %"class.std::__cxx1998::vector.15"** %3, align 8
  %4 = load %"class.std::__cxx1998::vector.15"*, %"class.std::__cxx1998::vector.15"** %3, align 8
  %5 = bitcast %"class.std::__cxx1998::vector.15"* %4 to %"struct.std::__cxx1998::_Bvector_base"*
  %6 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base", %"struct.std::__cxx1998::_Bvector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %6, i32 0, i32 1
  invoke void @_ZNSt9__cxx199819_Bit_const_iteratorC2ERKNS_13_Bit_iteratorE(%"struct.std::__cxx1998::_Bit_const_iterator"* %2, %"struct.std::__cxx1998::_Bit_iterator"* dereferenceable(16) %7)
          to label %8 unwind label %11

; <label>:8:                                      ; preds = %1
  %9 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %2 to { i64*, i32 }*
  %10 = load { i64*, i32 }, { i64*, i32 }* %9, align 8
  ret { i64*, i32 } %10

; <label>:11:                                     ; preds = %1
  %12 = landingpad { i8*, i32 }
          catch i8* null
  %13 = extractvalue { i8*, i32 } %12, 0
  call void @__clang_call_terminate(i8* %13) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZNKSt9__cxx19986vectorIbSaIbEE5beginEv(%"class.std::__cxx1998::vector.15"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.294
  %3 = load i32, i32* @y.295
  %4 = sub i32 %2, 187795544
  %5 = sub i32 %4, 1
  %6 = add i32 %5, 187795544
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %56

; <label>:28:                                     ; preds = %1, %56
  %29 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %30 = alloca %"class.std::__cxx1998::vector.15"*, align 8
  store %"class.std::__cxx1998::vector.15"* %0, %"class.std::__cxx1998::vector.15"** %30, align 8
  %31 = load %"class.std::__cxx1998::vector.15"*, %"class.std::__cxx1998::vector.15"** %30, align 8
  %32 = bitcast %"class.std::__cxx1998::vector.15"* %31 to %"struct.std::__cxx1998::_Bvector_base"*
  %33 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base", %"struct.std::__cxx1998::_Bvector_base"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %33, i32 0, i32 0
  %35 = load i32, i32* @x.294
  %36 = load i32, i32* @y.295
  %37 = add i32 %35, 536725058
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 536725058
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  br i1 %47, label %49, label %56

; <label>:49:                                     ; preds = %28
  invoke void @_ZNSt9__cxx199819_Bit_const_iteratorC2ERKNS_13_Bit_iteratorE(%"struct.std::__cxx1998::_Bit_const_iterator"* %29, %"struct.std::__cxx1998::_Bit_iterator"* dereferenceable(16) %34)
          to label %50 unwind label %53

; <label>:50:                                     ; preds = %49
  %51 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %29 to { i64*, i32 }*
  %52 = load { i64*, i32 }, { i64*, i32 }* %51, align 8
  ret { i64*, i32 } %52

; <label>:53:                                     ; preds = %49
  %54 = landingpad { i8*, i32 }
          catch i8* null
  %55 = extractvalue { i8*, i32 } %54, 0
  call void @__clang_call_terminate(i8* %55) #11
  unreachable

; <label>:56:                                     ; preds = %28, %1
  %57 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %58 = alloca %"class.std::__cxx1998::vector.15"*, align 8
  store %"class.std::__cxx1998::vector.15"* %0, %"class.std::__cxx1998::vector.15"** %58, align 8
  %59 = load %"class.std::__cxx1998::vector.15"*, %"class.std::__cxx1998::vector.15"** %58, align 8
  %60 = bitcast %"class.std::__cxx1998::vector.15"* %59 to %"struct.std::__cxx1998::_Bvector_base"*
  %61 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base", %"struct.std::__cxx1998::_Bvector_base"* %60, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %61, i32 0, i32 0
  br label %28
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt9__cxx199819_Bit_const_iteratorC2ERKNS_13_Bit_iteratorE(%"struct.std::__cxx1998::_Bit_const_iterator"*, %"struct.std::__cxx1998::_Bit_iterator"* dereferenceable(16)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.296
  %6 = load i32, i32* @y.297
  %7 = sub i32 %5, -962827690
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -962827690
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 936569908, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %81
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 936569908, label %19
    i32 -1352921096, label %27
    i32 -361892339, label %67
    i32 -435331329, label %68
  ]

; <label>:18:                                     ; preds = %16
  br label %81

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1352921096, i32 -435331329
  store i32 %26, i32* %15
  br label %81

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::__cxx1998::_Bit_const_iterator"*, align 8
  %29 = alloca %"struct.std::__cxx1998::_Bit_iterator"*, align 8
  store %"struct.std::__cxx1998::_Bit_const_iterator"* %0, %"struct.std::__cxx1998::_Bit_const_iterator"** %28, align 8
  store %"struct.std::__cxx1998::_Bit_iterator"* %1, %"struct.std::__cxx1998::_Bit_iterator"** %29, align 8
  %30 = load %"struct.std::__cxx1998::_Bit_const_iterator"*, %"struct.std::__cxx1998::_Bit_const_iterator"** %28, align 8
  %31 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %30 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %32 = load %"struct.std::__cxx1998::_Bit_iterator"*, %"struct.std::__cxx1998::_Bit_iterator"** %29, align 8
  %33 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %32 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %34 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_iterator_base", %"struct.std::__cxx1998::_Bit_iterator_base"* %33, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = load %"struct.std::__cxx1998::_Bit_iterator"*, %"struct.std::__cxx1998::_Bit_iterator"** %29, align 8
  %37 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %36 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %38 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_iterator_base", %"struct.std::__cxx1998::_Bit_iterator_base"* %37, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  call void @_ZNSt9__cxx199818_Bit_iterator_baseC2EPmj(%"struct.std::__cxx1998::_Bit_iterator_base"* %31, i64* %35, i32 %39)
  %40 = load i32, i32* @x.296
  %41 = load i32, i32* @y.297
  %42 = add i32 %40, -917274329
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -917274329
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -361892339, i32 -435331329
  store i32 %66, i32* %15
  br label %81

; <label>:67:                                     ; preds = %16
  ret void

; <label>:68:                                     ; preds = %16
  %69 = alloca %"struct.std::__cxx1998::_Bit_const_iterator"*, align 8
  %70 = alloca %"struct.std::__cxx1998::_Bit_iterator"*, align 8
  store %"struct.std::__cxx1998::_Bit_const_iterator"* %0, %"struct.std::__cxx1998::_Bit_const_iterator"** %69, align 8
  store %"struct.std::__cxx1998::_Bit_iterator"* %1, %"struct.std::__cxx1998::_Bit_iterator"** %70, align 8
  %71 = load %"struct.std::__cxx1998::_Bit_const_iterator"*, %"struct.std::__cxx1998::_Bit_const_iterator"** %69, align 8
  %72 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %71 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %73 = load %"struct.std::__cxx1998::_Bit_iterator"*, %"struct.std::__cxx1998::_Bit_iterator"** %70, align 8
  %74 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %73 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %75 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_iterator_base", %"struct.std::__cxx1998::_Bit_iterator_base"* %74, i32 0, i32 0
  %76 = load i64*, i64** %75, align 8
  %77 = load %"struct.std::__cxx1998::_Bit_iterator"*, %"struct.std::__cxx1998::_Bit_iterator"** %70, align 8
  %78 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %77 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %79 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_iterator_base", %"struct.std::__cxx1998::_Bit_iterator_base"* %78, i32 0, i32 1
  %80 = load i32, i32* %79, align 8
  call void @_ZNSt9__cxx199818_Bit_iterator_baseC2EPmj(%"struct.std::__cxx1998::_Bit_iterator_base"* %72, i64* %76, i32 %80)
  store i32 -1352921096, i32* %15
  br label %81

; <label>:81:                                     ; preds = %68, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt7__debug6vectorIbSaIbEEEEC2Ev(%"class.__gnu_cxx::new_allocator.8"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.298
  %5 = load i32, i32* @y.299
  %6 = add i32 %4, 1075408659
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1075408659
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 2085897526, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 2085897526, label %18
    i32 780029223, label %26
    i32 1178370307, label %56
    i32 -352206789, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 780029223, i32 -352206789
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %27, align 8
  %29 = load i32, i32* @x.298
  %30 = load i32, i32* @y.299
  %31 = sub i32 %29, -1983539302
  %32 = sub i32 %31, 1
  %33 = add i32 %32, -1983539302
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 1178370307, i32 -352206789
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %58, align 8
  store i32 780029223, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug15_Safe_containerINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEES5_NS_14_Safe_sequenceELb1EEC2Ev(%"class.__gnu_debug::_Safe_container.1"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_debug::_Safe_container.1"*, align 8
  store %"class.__gnu_debug::_Safe_container.1"* %0, %"class.__gnu_debug::_Safe_container.1"** %2, align 8
  %3 = load %"class.__gnu_debug::_Safe_container.1"*, %"class.__gnu_debug::_Safe_container.1"** %2, align 8
  %4 = bitcast %"class.__gnu_debug::_Safe_container.1"* %3 to %"class.__gnu_debug::_Safe_sequence.2"*
  call void @_ZN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEEEC2Ev(%"class.__gnu_debug::_Safe_sequence.2"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt9__cxx19986vectorINSt7__debug6vectorIbSaIbEEESaIS4_EEC2EmRKS4_RKS5_(%"class.std::__cxx1998::vector.5"*, i64, %"class.std::__debug::vector.10"* dereferenceable(72), %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::__cxx1998::vector.5"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::__debug::vector.10"*, align 8
  %8 = alloca %"class.std::allocator.7"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::__cxx1998::vector.5"* %0, %"class.std::__cxx1998::vector.5"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::__debug::vector.10"* %2, %"class.std::__debug::vector.10"** %7, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %8, align 8
  %11 = load %"class.std::__cxx1998::vector.5"*, %"class.std::__cxx1998::vector.5"** %5, align 8
  %12 = bitcast %"class.std::__cxx1998::vector.5"* %11 to %"struct.std::__cxx1998::_Vector_base.6"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %8, align 8
  call void @_ZNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EEC2EmRKS5_(%"struct.std::__cxx1998::_Vector_base.6"* %12, i64 %13, %"class.std::allocator.7"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %7, align 8
  invoke void @_ZNSt9__cxx19986vectorINSt7__debug6vectorIbSaIbEEESaIS4_EE18_M_fill_initializeEmRKS4_(%"class.std::__cxx1998::vector.5"* %11, i64 %15, %"class.std::__debug::vector.10"* dereferenceable(72) %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %4
  ret void

; <label>:18:                                     ; preds = %4
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %9, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %10, align 4
  %22 = bitcast %"class.std::__cxx1998::vector.5"* %11 to %"struct.std::__cxx1998::_Vector_base.6"*
  call void @_ZNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EED2Ev(%"struct.std::__cxx1998::_Vector_base.6"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i32, i32* @x.302
  %25 = load i32, i32* @y.303
  %26 = sub i32 %24, -130091712
  %27 = sub i32 %26, 1
  %28 = add i32 %27, -130091712
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 true, true
  %37 = and i1 %34, true
  %38 = and i1 %32, %36
  %39 = and i1 %35, true
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 true, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  br i1 %48, label %50, label %82

; <label>:50:                                     ; preds = %23, %82
  %51 = load i8*, i8** %9, align 8
  %52 = load i32, i32* %10, align 4
  %53 = insertvalue { i8*, i32 } undef, i8* %51, 0
  %54 = insertvalue { i8*, i32 } %53, i32 %52, 1
  %55 = load i32, i32* @x.302
  %56 = load i32, i32* @y.303
  %57 = sub i32 %55, 1599992515
  %58 = sub i32 %57, 1
  %59 = add i32 %58, 1599992515
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 true, true
  %68 = and i1 %65, true
  %69 = and i1 %63, %67
  %70 = and i1 %66, true
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 true, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  br i1 %79, label %81, label %82

; <label>:81:                                     ; preds = %50
  resume { i8*, i32 } %54

; <label>:82:                                     ; preds = %50, %23
  %83 = load i8*, i8** %9, align 8
  %84 = load i32, i32* %10, align 4
  %85 = insertvalue { i8*, i32 } undef, i8* %83, 0
  %86 = insertvalue { i8*, i32 } %85, i32 %84, 1
  br label %50
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug12_Safe_vectorINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEENSt9__cxx19986vectorIS4_S5_EEEC2Ev(%"class.__gnu_debug::_Safe_vector.20"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_debug::_Safe_vector.20"*, align 8
  store %"class.__gnu_debug::_Safe_vector.20"* %0, %"class.__gnu_debug::_Safe_vector.20"** %2, align 8
  %3 = load %"class.__gnu_debug::_Safe_vector.20"*, %"class.__gnu_debug::_Safe_vector.20"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_debug::_Safe_vector.20", %"class.__gnu_debug::_Safe_vector.20"* %3, i32 0, i32 0
  store i64 0, i64* %4, align 8
  call void @_ZN11__gnu_debug12_Safe_vectorINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEENSt9__cxx19986vectorIS4_S5_EEE29_M_update_guaranteed_capacityEv(%"class.__gnu_debug::_Safe_vector.20"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEEEC2Ev(%"class.__gnu_debug::_Safe_sequence.2"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_debug::_Safe_sequence.2"*, align 8
  store %"class.__gnu_debug::_Safe_sequence.2"* %0, %"class.__gnu_debug::_Safe_sequence.2"** %2, align 8
  %3 = load %"class.__gnu_debug::_Safe_sequence.2"*, %"class.__gnu_debug::_Safe_sequence.2"** %2, align 8
  %4 = bitcast %"class.__gnu_debug::_Safe_sequence.2"* %3 to %"class.__gnu_debug::_Safe_sequence_base"*
  call void @_ZN11__gnu_debug19_Safe_sequence_baseC2Ev(%"class.__gnu_debug::_Safe_sequence_base"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EEC2EmRKS5_(%"struct.std::__cxx1998::_Vector_base.6"*, i64, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::__cxx1998::_Vector_base.6"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.7"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::__cxx1998::_Vector_base.6"* %0, %"struct.std::__cxx1998::_Vector_base.6"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %6, align 8
  %9 = load %"struct.std::__cxx1998::_Vector_base.6"*, %"struct.std::__cxx1998::_Vector_base.6"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base.6", %"struct.std::__cxx1998::_Vector_base.6"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %6, align 8
  call void @_ZNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EE12_Vector_implC2ERKS5_(%"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %10, %"class.std::allocator.7"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EE17_M_create_storageEm(%"struct.std::__cxx1998::_Vector_base.6"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = load i32, i32* @x.308
  %16 = load i32, i32* @y.309
  %17 = add i32 %15, 1802149888
  %18 = sub i32 %17, 1
  %19 = sub i32 %18, 1802149888
  %20 = sub i32 %15, 1
  %21 = mul i32 %15, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %16, 10
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  br i1 %27, label %29, label %94

; <label>:29:                                     ; preds = %14, %94
  %30 = landingpad { i8*, i32 }
          cleanup
  %31 = extractvalue { i8*, i32 } %30, 0
  store i8* %31, i8** %7, align 8
  %32 = extractvalue { i8*, i32 } %30, 1
  store i32 %32, i32* %8, align 4
  call void @_ZNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EE12_Vector_implD2Ev(%"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %10) #3
  %33 = load i32, i32* @x.308
  %34 = load i32, i32* @y.309
  %35 = sub i32 %33, -1608695845
  %36 = sub i32 %35, 1
  %37 = add i32 %36, -1608695845
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  br i1 %45, label %47, label %94

; <label>:47:                                     ; preds = %29
  br label %48

; <label>:48:                                     ; preds = %47
  %49 = load i32, i32* @x.308
  %50 = load i32, i32* @y.309
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  br i1 %72, label %74, label %98

; <label>:74:                                     ; preds = %48, %98
  %75 = load i8*, i8** %7, align 8
  %76 = load i32, i32* %8, align 4
  %77 = insertvalue { i8*, i32 } undef, i8* %75, 0
  %78 = insertvalue { i8*, i32 } %77, i32 %76, 1
  %79 = load i32, i32* @x.308
  %80 = load i32, i32* @y.309
  %81 = sub i32 %79, -1380316052
  %82 = sub i32 %81, 1
  %83 = add i32 %82, -1380316052
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  br i1 %91, label %93, label %98

; <label>:93:                                     ; preds = %74
  resume { i8*, i32 } %78

; <label>:94:                                     ; preds = %29, %14
  %95 = landingpad { i8*, i32 }
          cleanup
  %96 = extractvalue { i8*, i32 } %95, 0
  store i8* %96, i8** %7, align 8
  %97 = extractvalue { i8*, i32 } %95, 1
  store i32 %97, i32* %8, align 4
  call void @_ZNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EE12_Vector_implD2Ev(%"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %10) #3
  br label %29

; <label>:98:                                     ; preds = %74, %48
  %99 = load i8*, i8** %7, align 8
  %100 = load i32, i32* %8, align 4
  %101 = insertvalue { i8*, i32 } undef, i8* %99, 0
  %102 = insertvalue { i8*, i32 } %101, i32 %100, 1
  br label %74
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt9__cxx19986vectorINSt7__debug6vectorIbSaIbEEESaIS4_EE18_M_fill_initializeEmRKS4_(%"class.std::__cxx1998::vector.5"*, i64, %"class.std::__debug::vector.10"* dereferenceable(72)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.310
  %7 = load i32, i32* @y.311
  %8 = add i32 %6, -1889357882
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1889357882
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1315328478, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %90
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1315328478, label %20
    i32 444698592, label %28
    i32 1711312448, label %72
    i32 -1621580269, label %73
  ]

; <label>:19:                                     ; preds = %17
  br label %90

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 444698592, i32 -1621580269
  store i32 %27, i32* %16
  br label %90

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::__cxx1998::vector.5"*, align 8
  %30 = alloca i64, align 8
  %31 = alloca %"class.std::__debug::vector.10"*, align 8
  store %"class.std::__cxx1998::vector.5"* %0, %"class.std::__cxx1998::vector.5"** %29, align 8
  store i64 %1, i64* %30, align 8
  store %"class.std::__debug::vector.10"* %2, %"class.std::__debug::vector.10"** %31, align 8
  %32 = load %"class.std::__cxx1998::vector.5"*, %"class.std::__cxx1998::vector.5"** %29, align 8
  %33 = bitcast %"class.std::__cxx1998::vector.5"* %32 to %"struct.std::__cxx1998::_Vector_base.6"*
  %34 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base.6", %"struct.std::__cxx1998::_Vector_base.6"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %35, align 8
  %37 = load i64, i64* %30, align 8
  %38 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %31, align 8
  %39 = bitcast %"class.std::__cxx1998::vector.5"* %32 to %"struct.std::__cxx1998::_Vector_base.6"*
  %40 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::__cxx1998::_Vector_base.6"* %39) #3
  %41 = call %"class.std::__debug::vector.10"* @_ZSt24__uninitialized_fill_n_aIPNSt7__debug6vectorIbSaIbEEEmS3_S3_ET_S5_T0_RKT1_RSaIT2_E(%"class.std::__debug::vector.10"* %36, i64 %37, %"class.std::__debug::vector.10"* dereferenceable(72) %38, %"class.std::allocator.7"* dereferenceable(1) %40)
  %42 = bitcast %"class.std::__cxx1998::vector.5"* %32 to %"struct.std::__cxx1998::_Vector_base.6"*
  %43 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base.6", %"struct.std::__cxx1998::_Vector_base.6"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %43, i32 0, i32 1
  store %"class.std::__debug::vector.10"* %41, %"class.std::__debug::vector.10"** %44, align 8
  %45 = load i32, i32* @x.310
  %46 = load i32, i32* @y.311
  %47 = add i32 %45, 2065778829
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, 2065778829
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 1711312448, i32 -1621580269
  store i32 %71, i32* %16
  br label %90

; <label>:72:                                     ; preds = %17
  ret void

; <label>:73:                                     ; preds = %17
  %74 = alloca %"class.std::__cxx1998::vector.5"*, align 8
  %75 = alloca i64, align 8
  %76 = alloca %"class.std::__debug::vector.10"*, align 8
  store %"class.std::__cxx1998::vector.5"* %0, %"class.std::__cxx1998::vector.5"** %74, align 8
  store i64 %1, i64* %75, align 8
  store %"class.std::__debug::vector.10"* %2, %"class.std::__debug::vector.10"** %76, align 8
  %77 = load %"class.std::__cxx1998::vector.5"*, %"class.std::__cxx1998::vector.5"** %74, align 8
  %78 = bitcast %"class.std::__cxx1998::vector.5"* %77 to %"struct.std::__cxx1998::_Vector_base.6"*
  %79 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base.6", %"struct.std::__cxx1998::_Vector_base.6"* %78, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %79, i32 0, i32 0
  %81 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %80, align 8
  %82 = load i64, i64* %75, align 8
  %83 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %76, align 8
  %84 = bitcast %"class.std::__cxx1998::vector.5"* %77 to %"struct.std::__cxx1998::_Vector_base.6"*
  %85 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::__cxx1998::_Vector_base.6"* %84) #3
  %86 = call %"class.std::__debug::vector.10"* @_ZSt24__uninitialized_fill_n_aIPNSt7__debug6vectorIbSaIbEEEmS3_S3_ET_S5_T0_RKT1_RSaIT2_E(%"class.std::__debug::vector.10"* %81, i64 %82, %"class.std::__debug::vector.10"* dereferenceable(72) %83, %"class.std::allocator.7"* dereferenceable(1) %85)
  %87 = bitcast %"class.std::__cxx1998::vector.5"* %77 to %"struct.std::__cxx1998::_Vector_base.6"*
  %88 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base.6", %"struct.std::__cxx1998::_Vector_base.6"* %87, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %88, i32 0, i32 1
  store %"class.std::__debug::vector.10"* %86, %"class.std::__debug::vector.10"** %89, align 8
  store i32 444698592, i32* %16
  br label %90

; <label>:90:                                     ; preds = %73, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EE12_Vector_implC2ERKS5_(%"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"*, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.7"*, align 8
  store %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %0, %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %4, align 8
  %5 = load %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"*, %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %5 to %"class.std::allocator.7"*
  %7 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %4, align 8
  call void @_ZNSaINSt7__debug6vectorIbSaIbEEEEC2ERKS3_(%"class.std::allocator.7"* %6, %"class.std::allocator.7"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %5, i32 0, i32 0
  store %"class.std::__debug::vector.10"* null, %"class.std::__debug::vector.10"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %5, i32 0, i32 1
  store %"class.std::__debug::vector.10"* null, %"class.std::__debug::vector.10"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %5, i32 0, i32 2
  store %"class.std::__debug::vector.10"* null, %"class.std::__debug::vector.10"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EE17_M_create_storageEm(%"struct.std::__cxx1998::_Vector_base.6"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::__cxx1998::_Vector_base.6"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::__cxx1998::_Vector_base.6"* %0, %"struct.std::__cxx1998::_Vector_base.6"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::__cxx1998::_Vector_base.6"*, %"struct.std::__cxx1998::_Vector_base.6"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"class.std::__debug::vector.10"* @_ZNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EE11_M_allocateEm(%"struct.std::__cxx1998::_Vector_base.6"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base.6", %"struct.std::__cxx1998::_Vector_base.6"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %8, i32 0, i32 0
  store %"class.std::__debug::vector.10"* %7, %"class.std::__debug::vector.10"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base.6", %"struct.std::__cxx1998::_Vector_base.6"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base.6", %"struct.std::__cxx1998::_Vector_base.6"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %13, i32 0, i32 1
  store %"class.std::__debug::vector.10"* %12, %"class.std::__debug::vector.10"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base.6", %"struct.std::__cxx1998::_Vector_base.6"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"class.std::__debug::vector.10", %"class.std::__debug::vector.10"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base.6", %"struct.std::__cxx1998::_Vector_base.6"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %20, i32 0, i32 2
  store %"class.std::__debug::vector.10"* %19, %"class.std::__debug::vector.10"** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaINSt7__debug6vectorIbSaIbEEEEC2ERKS3_(%"class.std::allocator.7"*, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.7"*, align 8
  %4 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %3, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %4, align 8
  %5 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %3, align 8
  %6 = bitcast %"class.std::allocator.7"* %5 to %"class.__gnu_cxx::new_allocator.8"*
  %7 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %4, align 8
  %8 = bitcast %"class.std::allocator.7"* %7 to %"class.__gnu_cxx::new_allocator.8"*
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__debug6vectorIbSaIbEEEEC2ERKS5_(%"class.__gnu_cxx::new_allocator.8"* %6, %"class.__gnu_cxx::new_allocator.8"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt7__debug6vectorIbSaIbEEEEC2ERKS5_(%"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %1, %"class.__gnu_cxx::new_allocator.8"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__debug::vector.10"* @_ZNSt9__cxx199812_Vector_baseINSt7__debug6vectorIbSaIbEEESaIS4_EE11_M_allocateEm(%"struct.std::__cxx1998::_Vector_base.6"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::__debug::vector.10"*
  %4 = alloca i64
  %5 = alloca %"struct.std::__cxx1998::_Vector_base.6"*
  %6 = alloca %"struct.std::__cxx1998::_Vector_base.6"*, align 8
  %7 = alloca i64, align 8
  store %"struct.std::__cxx1998::_Vector_base.6"* %0, %"struct.std::__cxx1998::_Vector_base.6"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"struct.std::__cxx1998::_Vector_base.6"*, %"struct.std::__cxx1998::_Vector_base.6"** %6, align 8
  store %"struct.std::__cxx1998::_Vector_base.6"* %8, %"struct.std::__cxx1998::_Vector_base.6"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = alloca i32
  store i32 2053121889, i32* %10
  %11 = alloca %"class.std::__debug::vector.10"*
  br label %12

; <label>:12:                                     ; preds = %2, %86
  %13 = load i32, i32* %10
  switch i32 %13, label %14 [
    i32 2053121889, label %15
    i32 484686581, label %19
    i32 1935066876, label %25
    i32 -1126326146, label %26
    i32 2022758207, label %55
    i32 1560150119, label %83
    i32 -1925014084, label %85
  ]

; <label>:14:                                     ; preds = %12
  br label %86

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp ne i64 %16, 0
  %18 = select i1 %17, i32 484686581, i32 1935066876
  store i32 %18, i32* %10
  br label %86

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::__cxx1998::_Vector_base.6"*, %"struct.std::__cxx1998::_Vector_base.6"** %5
  %21 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base.6", %"struct.std::__cxx1998::_Vector_base.6"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %21 to %"class.std::allocator.7"*
  %23 = load i64, i64* %7, align 8
  %24 = call %"class.std::__debug::vector.10"* @_ZNSt16allocator_traitsISaINSt7__debug6vectorIbSaIbEEEEE8allocateERS4_m(%"class.std::allocator.7"* dereferenceable(1) %22, i64 %23)
  store i32 -1126326146, i32* %10
  store %"class.std::__debug::vector.10"* %24, %"class.std::__debug::vector.10"** %11
  br label %86

; <label>:25:                                     ; preds = %12
  store i32 -1126326146, i32* %10
  store %"class.std::__debug::vector.10"* null, %"class.std::__debug::vector.10"** %11
  br label %86

; <label>:26:                                     ; preds = %12
  %27 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %11
  store %"class.std::__debug::vector.10"* %27, %"class.std::__debug::vector.10"** %3
  %28 = load i32, i32* @x.320
  %29 = load i32, i32* @y.321
  %30 = add i32 %28, -1874485246
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, -1874485246
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 2022758207, i32 -1925014084
  store i32 %54, i32* %10
  br label %86

; <label>:55:                                     ; preds = %12
  %56 = load i32, i32* @x.320
  %57 = load i32, i32* @y.321
  %58 = add i32 %56, -190938850
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, -190938850
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 true, true
  %69 = and i1 %66, true
  %70 = and i1 %64, %68
  %71 = and i1 %67, true
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 true, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  %82 = select i1 %80, i32 1560150119, i32 -1925014084
  store i32 %82, i32* %10
  br label %86

; <label>:83:                                     ; preds = %12
  %84 = load volatile %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %3
  ret %"class.std::__debug::vector.10"* %84

; <label>:85:                                     ; preds = %12
  store i32 2022758207, i32* %10
  br label %86

; <label>:86:                                     ; preds = %85, %55, %26, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__debug::vector.10"* @_ZNSt16allocator_traitsISaINSt7__debug6vectorIbSaIbEEEEE8allocateERS4_m(%"class.std::allocator.7"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::__debug::vector.10"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.322
  %7 = load i32, i32* @y.323
  %8 = add i32 %6, -851114508
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -851114508
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -2058603433, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %71
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -2058603433, label %20
    i32 -1784256077, label %28
    i32 1075797038, label %62
    i32 1171454120, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %71

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1784256077, i32 1171454120
  store i32 %27, i32* %16
  br label %71

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.7"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %29, align 8
  %32 = bitcast %"class.std::allocator.7"* %31 to %"class.__gnu_cxx::new_allocator.8"*
  %33 = load i64, i64* %30, align 8
  %34 = call %"class.std::__debug::vector.10"* @_ZN9__gnu_cxx13new_allocatorINSt7__debug6vectorIbSaIbEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.8"* %32, i64 %33, i8* null)
  store %"class.std::__debug::vector.10"* %34, %"class.std::__debug::vector.10"** %3
  %35 = load i32, i32* @x.322
  %36 = load i32, i32* @y.323
  %37 = add i32 %35, -620646622
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -620646622
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 1075797038, i32 1171454120
  store i32 %61, i32* %16
  br label %71

; <label>:62:                                     ; preds = %17
  %63 = load volatile %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %3
  ret %"class.std::__debug::vector.10"* %63

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::allocator.7"*, align 8
  %66 = alloca i64, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %65, align 8
  store i64 %1, i64* %66, align 8
  %67 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %65, align 8
  %68 = bitcast %"class.std::allocator.7"* %67 to %"class.__gnu_cxx::new_allocator.8"*
  %69 = load i64, i64* %66, align 8
  %70 = call %"class.std::__debug::vector.10"* @_ZN9__gnu_cxx13new_allocatorINSt7__debug6vectorIbSaIbEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.8"* %68, i64 %69, i8* null)
  store i32 -1784256077, i32* %16
  br label %71

; <label>:71:                                     ; preds = %64, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__debug::vector.10"* @_ZN9__gnu_cxx13new_allocatorINSt7__debug6vectorIbSaIbEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.8"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.324
  %9 = load i32, i32* @y.325
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 1952335522, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %127
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1952335522, label %21
    i32 -988038942, label %41
    i32 797184605, label %65
    i32 -1867683374, label %68
    i32 1803721459, label %95
    i32 -240810141, label %111
    i32 1512460162, label %112
    i32 1178619527, label %118
    i32 1087381896, label %126
  ]

; <label>:20:                                     ; preds = %18
  br label %127

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -988038942, i32 1178619527
  store i32 %40, i32* %17
  br label %127

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %43 = alloca i64, align 8
  store i64* %43, i64** %5
  %44 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %42, align 8
  %45 = load volatile i64*, i64** %5
  store i64 %1, i64* %45, align 8
  store i8* %2, i8** %44, align 8
  %46 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %42, align 8
  %47 = load volatile i64*, i64** %5
  %48 = load i64, i64* %47, align 8
  %49 = call i64 @_ZNK9__gnu_cxx13new_allocatorINSt7__debug6vectorIbSaIbEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"* %46) #3
  %50 = icmp ugt i64 %48, %49
  store i1 %50, i1* %4
  %51 = load i32, i32* @x.324
  %52 = load i32, i32* @y.325
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 797184605, i32 1178619527
  store i32 %64, i32* %17
  br label %127

; <label>:65:                                     ; preds = %18
  %66 = load volatile i1, i1* %4
  %67 = select i1 %66, i32 -1867683374, i32 1512460162
  store i32 %67, i32* %17
  br label %127

; <label>:68:                                     ; preds = %18
  %69 = load i32, i32* @x.324
  %70 = load i32, i32* @y.325
  %71 = sub i32 0, 1
  %72 = add i32 %69, %71
  %73 = sub i32 %69, 1
  %74 = mul i32 %69, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %70, 10
  %78 = xor i1 %76, true
  %79 = xor i1 %77, true
  %80 = xor i1 false, true
  %81 = and i1 %78, false
  %82 = and i1 %76, %80
  %83 = and i1 %79, false
  %84 = and i1 %77, %80
  %85 = or i1 %81, %82
  %86 = or i1 %83, %84
  %87 = xor i1 %85, %86
  %88 = or i1 %78, %79
  %89 = xor i1 %88, true
  %90 = or i1 false, %80
  %91 = and i1 %89, %90
  %92 = or i1 %87, %91
  %93 = or i1 %76, %77
  %94 = select i1 %92, i32 1803721459, i32 1087381896
  store i32 %94, i32* %17
  br label %127

; <label>:95:                                     ; preds = %18
  call void @_ZSt17__throw_bad_allocv() #13
  %96 = load i32, i32* @x.324
  %97 = load i32, i32* @y.325
  %98 = sub i32 %96, -678192266
  %99 = sub i32 %98, 1
  %100 = add i32 %99, -678192266
  %101 = sub i32 %96, 1
  %102 = mul i32 %96, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %97, 10
  %106 = and i1 %104, %105
  %107 = xor i1 %104, %105
  %108 = or i1 %106, %107
  %109 = or i1 %104, %105
  %110 = select i1 %108, i32 -240810141, i32 1087381896
  store i32 %110, i32* %17
  br label %127

; <label>:111:                                    ; preds = %18
  unreachable

; <label>:112:                                    ; preds = %18
  %113 = load volatile i64*, i64** %5
  %114 = load i64, i64* %113, align 8
  %115 = mul i64 %114, 72
  %116 = call i8* @_Znwm(i64 %115)
  %117 = bitcast i8* %116 to %"class.std::__debug::vector.10"*
  ret %"class.std::__debug::vector.10"* %117

; <label>:118:                                    ; preds = %18
  %119 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %120 = alloca i64, align 8
  %121 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %119, align 8
  store i64 %1, i64* %120, align 8
  store i8* %2, i8** %121, align 8
  %122 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %119, align 8
  %123 = load i64, i64* %120, align 8
  %124 = call i64 @_ZNK9__gnu_cxx13new_allocatorINSt7__debug6vectorIbSaIbEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"* %122) #3
  %125 = icmp ugt i64 %123, %124
  store i32 -988038942, i32* %17
  br label %127

; <label>:126:                                    ; preds = %18
  call void @_ZSt17__throw_bad_allocv() #13
  store i32 1803721459, i32* %17
  br label %127

; <label>:127:                                    ; preds = %126, %118, %95, %68, %65, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorINSt7__debug6vectorIbSaIbEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  ret i64 256204778801521550
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__debug::vector.10"* @_ZSt24__uninitialized_fill_n_aIPNSt7__debug6vectorIbSaIbEEEmS3_S3_ET_S5_T0_RKT1_RSaIT2_E(%"class.std::__debug::vector.10"*, i64, %"class.std::__debug::vector.10"* dereferenceable(72), %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::__debug::vector.10"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::__debug::vector.10"*, align 8
  %8 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::__debug::vector.10"* %0, %"class.std::__debug::vector.10"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::__debug::vector.10"* %2, %"class.std::__debug::vector.10"** %7, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %8, align 8
  %9 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %7, align 8
  %12 = call %"class.std::__debug::vector.10"* @_ZSt20uninitialized_fill_nIPNSt7__debug6vectorIbSaIbEEEmS3_ET_S5_T0_RKT1_(%"class.std::__debug::vector.10"* %9, i64 %10, %"class.std::__debug::vector.10"* dereferenceable(72) %11)
  ret %"class.std::__debug::vector.10"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__debug::vector.10"* @_ZSt20uninitialized_fill_nIPNSt7__debug6vectorIbSaIbEEEmS3_ET_S5_T0_RKT1_(%"class.std::__debug::vector.10"*, i64, %"class.std::__debug::vector.10"* dereferenceable(72)) #0 comdat {
  %4 = alloca %"class.std::__debug::vector.10"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.330
  %8 = load i32, i32* @y.331
  %9 = sub i32 %7, 369227786
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 369227786
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -390129782, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %76
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -390129782, label %21
    i32 1178341516, label %29
    i32 1954697308, label %65
    i32 1670538874, label %67
  ]

; <label>:20:                                     ; preds = %18
  br label %76

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 1178341516, i32 1670538874
  store i32 %28, i32* %17
  br label %76

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::__debug::vector.10"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"class.std::__debug::vector.10"*, align 8
  %33 = alloca i8, align 1
  store %"class.std::__debug::vector.10"* %0, %"class.std::__debug::vector.10"** %30, align 8
  store i64 %1, i64* %31, align 8
  store %"class.std::__debug::vector.10"* %2, %"class.std::__debug::vector.10"** %32, align 8
  store i8 1, i8* %33, align 1
  %34 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %30, align 8
  %35 = load i64, i64* %31, align 8
  %36 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %32, align 8
  %37 = call %"class.std::__debug::vector.10"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPNSt7__debug6vectorIbSaIbEEEmS5_EET_S7_T0_RKT1_(%"class.std::__debug::vector.10"* %34, i64 %35, %"class.std::__debug::vector.10"* dereferenceable(72) %36)
  store %"class.std::__debug::vector.10"* %37, %"class.std::__debug::vector.10"** %4
  %38 = load i32, i32* @x.330
  %39 = load i32, i32* @y.331
  %40 = sub i32 %38, 1011597717
  %41 = sub i32 %40, 1
  %42 = add i32 %41, 1011597717
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 1954697308, i32 1670538874
  store i32 %64, i32* %17
  br label %76

; <label>:65:                                     ; preds = %18
  %66 = load volatile %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %4
  ret %"class.std::__debug::vector.10"* %66

; <label>:67:                                     ; preds = %18
  %68 = alloca %"class.std::__debug::vector.10"*, align 8
  %69 = alloca i64, align 8
  %70 = alloca %"class.std::__debug::vector.10"*, align 8
  %71 = alloca i8, align 1
  store %"class.std::__debug::vector.10"* %0, %"class.std::__debug::vector.10"** %68, align 8
  store i64 %1, i64* %69, align 8
  store %"class.std::__debug::vector.10"* %2, %"class.std::__debug::vector.10"** %70, align 8
  store i8 1, i8* %71, align 1
  %72 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %68, align 8
  %73 = load i64, i64* %69, align 8
  %74 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %70, align 8
  %75 = call %"class.std::__debug::vector.10"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPNSt7__debug6vectorIbSaIbEEEmS5_EET_S7_T0_RKT1_(%"class.std::__debug::vector.10"* %72, i64 %73, %"class.std::__debug::vector.10"* dereferenceable(72) %74)
  store i32 1178341516, i32* %17
  br label %76

; <label>:76:                                     ; preds = %67, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__debug::vector.10"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPNSt7__debug6vectorIbSaIbEEEmS5_EET_S7_T0_RKT1_(%"class.std::__debug::vector.10"*, i64, %"class.std::__debug::vector.10"* dereferenceable(72)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::__debug::vector.10"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::__debug::vector.10"*, align 8
  %7 = alloca %"class.std::__debug::vector.10"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::__debug::vector.10"* %0, %"class.std::__debug::vector.10"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::__debug::vector.10"* %2, %"class.std::__debug::vector.10"** %6, align 8
  %10 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %4, align 8
  store %"class.std::__debug::vector.10"* %10, %"class.std::__debug::vector.10"** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %60, %3
  %12 = load i32, i32* @x.332
  %13 = load i32, i32* @y.333
  %14 = sub i32 0, 1
  %15 = add i32 %12, %14
  %16 = sub i32 %12, 1
  %17 = mul i32 %12, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %13, 10
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  br i1 %35, label %37, label %195

; <label>:37:                                     ; preds = %11, %195
  %38 = load i64, i64* %5, align 8
  %39 = icmp ugt i64 %38, 0
  %40 = load i32, i32* @x.332
  %41 = load i32, i32* @y.333
  %42 = add i32 %40, -1688506647
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -1688506647
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  br i1 %52, label %54, label %195

; <label>:54:                                     ; preds = %37
  br i1 %39, label %55, label %107

; <label>:55:                                     ; preds = %54
  %56 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %7, align 8
  %57 = call %"class.std::__debug::vector.10"* @_ZSt11__addressofINSt7__debug6vectorIbSaIbEEEEPT_RS4_(%"class.std::__debug::vector.10"* dereferenceable(72) %56) #3
  %58 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %6, align 8
  invoke void @_ZSt10_ConstructINSt7__debug6vectorIbSaIbEEEJRKS3_EEvPT_DpOT0_(%"class.std::__debug::vector.10"* %57, %"class.std::__debug::vector.10"* dereferenceable(72) %58)
          to label %59 unwind label %67

; <label>:59:                                     ; preds = %55
  br label %60

; <label>:60:                                     ; preds = %59
  %61 = load i64, i64* %5, align 8
  %62 = sub i64 0, -1
  %63 = sub i64 %61, %62
  %64 = add i64 %61, -1
  store i64 %63, i64* %5, align 8
  %65 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %7, align 8
  %66 = getelementptr inbounds %"class.std::__debug::vector.10", %"class.std::__debug::vector.10"* %65, i32 1
  store %"class.std::__debug::vector.10"* %66, %"class.std::__debug::vector.10"** %7, align 8
  br label %11

; <label>:67:                                     ; preds = %55
  %68 = landingpad { i8*, i32 }
          catch i8* null
  %69 = extractvalue { i8*, i32 } %68, 0
  store i8* %69, i8** %8, align 8
  %70 = extractvalue { i8*, i32 } %68, 1
  store i32 %70, i32* %9, align 4
  br label %71

; <label>:71:                                     ; preds = %67
  %72 = load i8*, i8** %8, align 8
  %73 = call i8* @__cxa_begin_catch(i8* %72) #3
  %74 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %4, align 8
  %75 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %7, align 8
  invoke void @_ZSt8_DestroyIPNSt7__debug6vectorIbSaIbEEEEvT_S5_(%"class.std::__debug::vector.10"* %74, %"class.std::__debug::vector.10"* %75)
          to label %76 unwind label %109

; <label>:76:                                     ; preds = %71
  %77 = load i32, i32* @x.332
  %78 = load i32, i32* @y.333
  %79 = add i32 %77, 1483566334
  %80 = sub i32 %79, 1
  %81 = sub i32 %80, 1483566334
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = and i1 %85, %86
  %88 = xor i1 %85, %86
  %89 = or i1 %87, %88
  %90 = or i1 %85, %86
  br i1 %89, label %91, label %198

; <label>:91:                                     ; preds = %76, %198
  %92 = load i32, i32* @x.332
  %93 = load i32, i32* @y.333
  %94 = sub i32 %92, 1817529650
  %95 = sub i32 %94, 1
  %96 = add i32 %95, 1817529650
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  br i1 %104, label %106, label %198

; <label>:106:                                    ; preds = %91
  invoke void @__cxa_rethrow() #13
          to label %194 unwind label %109

; <label>:107:                                    ; preds = %54
  %108 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %7, align 8
  ret %"class.std::__debug::vector.10"* %108

; <label>:109:                                    ; preds = %106, %71
  %110 = landingpad { i8*, i32 }
          cleanup
  %111 = extractvalue { i8*, i32 } %110, 0
  store i8* %111, i8** %8, align 8
  %112 = extractvalue { i8*, i32 } %110, 1
  store i32 %112, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %113 unwind label %149

; <label>:113:                                    ; preds = %109
  %114 = load i32, i32* @x.332
  %115 = load i32, i32* @y.333
  %116 = sub i32 0, 1
  %117 = add i32 %114, %116
  %118 = sub i32 %114, 1
  %119 = mul i32 %114, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %115, 10
  %123 = and i1 %121, %122
  %124 = xor i1 %121, %122
  %125 = or i1 %123, %124
  %126 = or i1 %121, %122
  br i1 %125, label %127, label %199

; <label>:127:                                    ; preds = %113, %199
  %128 = load i32, i32* @x.332
  %129 = load i32, i32* @y.333
  %130 = sub i32 %128, 634650525
  %131 = sub i32 %130, 1
  %132 = add i32 %131, 634650525
  %133 = sub i32 %128, 1
  %134 = mul i32 %128, %132
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %129, 10
  %138 = and i1 %136, %137
  %139 = xor i1 %136, %137
  %140 = or i1 %138, %139
  %141 = or i1 %136, %137
  br i1 %140, label %142, label %199

; <label>:142:                                    ; preds = %127
  br label %144
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:144:                                    ; preds = %142
  %145 = load i8*, i8** %8, align 8
  %146 = load i32, i32* %9, align 4
  %147 = insertvalue { i8*, i32 } undef, i8* %145, 0
  %148 = insertvalue { i8*, i32 } %147, i32 %146, 1
  resume { i8*, i32 } %148

; <label>:149:                                    ; preds = %109
  %150 = load i32, i32* @x.332
  %151 = load i32, i32* @y.333
  %152 = add i32 %150, 369356602
  %153 = sub i32 %152, 1
  %154 = sub i32 %153, 369356602
  %155 = sub i32 %150, 1
  %156 = mul i32 %150, %154
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %151, 10
  %160 = and i1 %158, %159
  %161 = xor i1 %158, %159
  %162 = or i1 %160, %161
  %163 = or i1 %158, %159
  br i1 %162, label %164, label %200

; <label>:164:                                    ; preds = %149, %200
  %165 = landingpad { i8*, i32 }
          catch i8* null
  %166 = extractvalue { i8*, i32 } %165, 0
  call void @__clang_call_terminate(i8* %166) #11
  %167 = load i32, i32* @x.332
  %168 = load i32, i32* @y.333
  %169 = sub i32 %167, -386805447
  %170 = sub i32 %169, 1
  %171 = add i32 %170, -386805447
  %172 = sub i32 %167, 1
  %173 = mul i32 %167, %171
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %168, 10
  %177 = xor i1 %175, true
  %178 = xor i1 %176, true
  %179 = xor i1 false, true
  %180 = and i1 %177, false
  %181 = and i1 %175, %179
  %182 = and i1 %178, false
  %183 = and i1 %176, %179
  %184 = or i1 %180, %181
  %185 = or i1 %182, %183
  %186 = xor i1 %184, %185
  %187 = or i1 %177, %178
  %188 = xor i1 %187, true
  %189 = or i1 false, %179
  %190 = and i1 %188, %189
  %191 = or i1 %186, %190
  %192 = or i1 %175, %176
  br i1 %191, label %193, label %200

; <label>:193:                                    ; preds = %164
  unreachable

; <label>:194:                                    ; preds = %106
  unreachable

; <label>:195:                                    ; preds = %37, %11
  %196 = load i64, i64* %5, align 8
  %197 = icmp ugt i64 %196, 0
  br label %37

; <label>:198:                                    ; preds = %91, %76
  br label %91

; <label>:199:                                    ; preds = %127, %113
  br label %127

; <label>:200:                                    ; preds = %164, %149
  %201 = landingpad { i8*, i32 }
          catch i8* null
  %202 = extractvalue { i8*, i32 } %201, 0
  call void @__clang_call_terminate(i8* %202) #11
  br label %164
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructINSt7__debug6vectorIbSaIbEEEJRKS3_EEvPT_DpOT0_(%"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"* dereferenceable(72)) #0 comdat {
  %3 = alloca %"class.std::__debug::vector.10"*, align 8
  %4 = alloca %"class.std::__debug::vector.10"*, align 8
  store %"class.std::__debug::vector.10"* %0, %"class.std::__debug::vector.10"** %3, align 8
  store %"class.std::__debug::vector.10"* %1, %"class.std::__debug::vector.10"** %4, align 8
  %5 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %3, align 8
  %6 = bitcast %"class.std::__debug::vector.10"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::__debug::vector.10"*
  %8 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %4, align 8
  %9 = call dereferenceable(72) %"class.std::__debug::vector.10"* @_ZSt7forwardIRKNSt7__debug6vectorIbSaIbEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__debug::vector.10"* dereferenceable(72) %8) #3
  call void @_ZNSt7__debug6vectorIbSaIbEEC2ERKS2_(%"class.std::__debug::vector.10"* %7, %"class.std::__debug::vector.10"* dereferenceable(72) %9)
  ret void
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #11

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(72) %"class.std::__debug::vector.10"* @_ZSt7forwardIRKNSt7__debug6vectorIbSaIbEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__debug::vector.10"* dereferenceable(72)) #4 comdat {
  %2 = alloca %"class.std::__debug::vector.10"*, align 8
  store %"class.std::__debug::vector.10"* %0, %"class.std::__debug::vector.10"** %2, align 8
  %3 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %2, align 8
  ret %"class.std::__debug::vector.10"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt7__debug6vectorIbSaIbEEC2ERKS2_(%"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"* dereferenceable(72)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.338
  %4 = load i32, i32* @y.339
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %106

; <label>:16:                                     ; preds = %2, %106
  %17 = alloca %"class.std::__debug::vector.10"*, align 8
  %18 = alloca %"class.std::__debug::vector.10"*, align 8
  %19 = alloca i8*
  %20 = alloca i32
  store %"class.std::__debug::vector.10"* %0, %"class.std::__debug::vector.10"** %17, align 8
  store %"class.std::__debug::vector.10"* %1, %"class.std::__debug::vector.10"** %18, align 8
  %21 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %17, align 8
  %22 = bitcast %"class.std::__debug::vector.10"* %21 to %"class.__gnu_debug::_Safe_container.11"*
  %23 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %18, align 8
  %24 = bitcast %"class.std::__debug::vector.10"* %23 to %"class.__gnu_debug::_Safe_container.11"*
  call void @_ZN11__gnu_debug15_Safe_containerINSt7__debug6vectorIbSaIbEEES3_NS_14_Safe_sequenceELb1EEC2ERKS6_(%"class.__gnu_debug::_Safe_container.11"* %22, %"class.__gnu_debug::_Safe_container.11"* dereferenceable(24) %24) #3
  %25 = bitcast %"class.std::__debug::vector.10"* %21 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 24
  %27 = bitcast i8* %26 to %"class.std::__cxx1998::vector.15"*
  %28 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %18, align 8
  %29 = bitcast %"class.std::__debug::vector.10"* %28 to i8*
  %30 = getelementptr inbounds i8, i8* %29, i64 24
  %31 = bitcast i8* %30 to %"class.std::__cxx1998::vector.15"*
  %32 = load i32, i32* @x.338
  %33 = load i32, i32* @y.339
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  br i1 %55, label %57, label %106

; <label>:57:                                     ; preds = %16
  invoke void @_ZNSt9__cxx19986vectorIbSaIbEEC2ERKS2_(%"class.std::__cxx1998::vector.15"* %27, %"class.std::__cxx1998::vector.15"* dereferenceable(40) %31)
          to label %58 unwind label %66

; <label>:58:                                     ; preds = %57
  %59 = bitcast %"class.std::__debug::vector.10"* %21 to i8*
  %60 = getelementptr inbounds i8, i8* %59, i64 64
  %61 = bitcast i8* %60 to %"class.__gnu_debug::_Safe_vector.19"*
  %62 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %18, align 8
  %63 = bitcast %"class.std::__debug::vector.10"* %62 to i8*
  %64 = getelementptr inbounds i8, i8* %63, i64 64
  %65 = bitcast i8* %64 to %"class.__gnu_debug::_Safe_vector.19"*
  call void @_ZN11__gnu_debug12_Safe_vectorINSt7__debug6vectorIbSaIbEEENSt9__cxx19986vectorIbS3_EEEC2ERKS8_(%"class.__gnu_debug::_Safe_vector.19"* %61, %"class.__gnu_debug::_Safe_vector.19"* dereferenceable(8) %65) #3
  ret void

; <label>:66:                                     ; preds = %57
  %67 = load i32, i32* @x.338
  %68 = load i32, i32* @y.339
  %69 = add i32 %67, -1422762775
  %70 = sub i32 %69, 1
  %71 = sub i32 %70, -1422762775
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  br i1 %79, label %81, label %122

; <label>:81:                                     ; preds = %66, %122
  %82 = landingpad { i8*, i32 }
          cleanup
  %83 = extractvalue { i8*, i32 } %82, 0
  store i8* %83, i8** %19, align 8
  %84 = extractvalue { i8*, i32 } %82, 1
  store i32 %84, i32* %20, align 4
  %85 = bitcast %"class.std::__debug::vector.10"* %21 to %"class.__gnu_debug::_Safe_container.11"*
  call void @_ZN11__gnu_debug15_Safe_containerINSt7__debug6vectorIbSaIbEEES3_NS_14_Safe_sequenceELb1EED2Ev(%"class.__gnu_debug::_Safe_container.11"* %85) #3
  %86 = load i32, i32* @x.338
  %87 = load i32, i32* @y.339
  %88 = add i32 %86, -1884355532
  %89 = sub i32 %88, 1
  %90 = sub i32 %89, -1884355532
  %91 = sub i32 %86, 1
  %92 = mul i32 %86, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %87, 10
  %96 = and i1 %94, %95
  %97 = xor i1 %94, %95
  %98 = or i1 %96, %97
  %99 = or i1 %94, %95
  br i1 %98, label %100, label %122

; <label>:100:                                    ; preds = %81
  br label %101

; <label>:101:                                    ; preds = %100
  %102 = load i8*, i8** %19, align 8
  %103 = load i32, i32* %20, align 4
  %104 = insertvalue { i8*, i32 } undef, i8* %102, 0
  %105 = insertvalue { i8*, i32 } %104, i32 %103, 1
  resume { i8*, i32 } %105

; <label>:106:                                    ; preds = %16, %2
  %107 = alloca %"class.std::__debug::vector.10"*, align 8
  %108 = alloca %"class.std::__debug::vector.10"*, align 8
  %109 = alloca i8*
  %110 = alloca i32
  store %"class.std::__debug::vector.10"* %0, %"class.std::__debug::vector.10"** %107, align 8
  store %"class.std::__debug::vector.10"* %1, %"class.std::__debug::vector.10"** %108, align 8
  %111 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %107, align 8
  %112 = bitcast %"class.std::__debug::vector.10"* %111 to %"class.__gnu_debug::_Safe_container.11"*
  %113 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %108, align 8
  %114 = bitcast %"class.std::__debug::vector.10"* %113 to %"class.__gnu_debug::_Safe_container.11"*
  call void @_ZN11__gnu_debug15_Safe_containerINSt7__debug6vectorIbSaIbEEES3_NS_14_Safe_sequenceELb1EEC2ERKS6_(%"class.__gnu_debug::_Safe_container.11"* %112, %"class.__gnu_debug::_Safe_container.11"* dereferenceable(24) %114) #3
  %115 = bitcast %"class.std::__debug::vector.10"* %111 to i8*
  %116 = getelementptr inbounds i8, i8* %115, i64 24
  %117 = bitcast i8* %116 to %"class.std::__cxx1998::vector.15"*
  %118 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %108, align 8
  %119 = bitcast %"class.std::__debug::vector.10"* %118 to i8*
  %120 = getelementptr inbounds i8, i8* %119, i64 24
  %121 = bitcast i8* %120 to %"class.std::__cxx1998::vector.15"*
  br label %16

; <label>:122:                                    ; preds = %81, %66
  %123 = landingpad { i8*, i32 }
          cleanup
  %124 = extractvalue { i8*, i32 } %123, 0
  store i8* %124, i8** %19, align 8
  %125 = extractvalue { i8*, i32 } %123, 1
  store i32 %125, i32* %20, align 4
  %126 = bitcast %"class.std::__debug::vector.10"* %21 to %"class.__gnu_debug::_Safe_container.11"*
  call void @_ZN11__gnu_debug15_Safe_containerINSt7__debug6vectorIbSaIbEEES3_NS_14_Safe_sequenceELb1EED2Ev(%"class.__gnu_debug::_Safe_container.11"* %126) #3
  br label %81
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug15_Safe_containerINSt7__debug6vectorIbSaIbEEES3_NS_14_Safe_sequenceELb1EEC2ERKS6_(%"class.__gnu_debug::_Safe_container.11"*, %"class.__gnu_debug::_Safe_container.11"* dereferenceable(24)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_debug::_Safe_container.11"*, align 8
  %4 = alloca %"class.__gnu_debug::_Safe_container.11"*, align 8
  store %"class.__gnu_debug::_Safe_container.11"* %0, %"class.__gnu_debug::_Safe_container.11"** %3, align 8
  store %"class.__gnu_debug::_Safe_container.11"* %1, %"class.__gnu_debug::_Safe_container.11"** %4, align 8
  %5 = load %"class.__gnu_debug::_Safe_container.11"*, %"class.__gnu_debug::_Safe_container.11"** %3, align 8
  %6 = bitcast %"class.__gnu_debug::_Safe_container.11"* %5 to %"class.__gnu_debug::_Safe_sequence.12"*
  %7 = load %"class.__gnu_debug::_Safe_container.11"*, %"class.__gnu_debug::_Safe_container.11"** %4, align 8
  %8 = bitcast %"class.__gnu_debug::_Safe_container.11"* %7 to %"class.__gnu_debug::_Safe_sequence.12"*
  call void @_ZN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorIbSaIbEEEEC2ERKS5_(%"class.__gnu_debug::_Safe_sequence.12"* %6, %"class.__gnu_debug::_Safe_sequence.12"* dereferenceable(24) %8) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt9__cxx19986vectorIbSaIbEEC2ERKS2_(%"class.std::__cxx1998::vector.15"*, %"class.std::__cxx1998::vector.15"* dereferenceable(40)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::__cxx1998::vector.15"*, align 8
  %4 = alloca %"class.std::__cxx1998::vector.15"*, align 8
  %5 = alloca %"class.std::allocator.21", align 1
  %6 = alloca %"class.std::allocator.16", align 1
  %7 = alloca i8*
  %8 = alloca i32
  %9 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %10 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %11 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  %12 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  store %"class.std::__cxx1998::vector.15"* %0, %"class.std::__cxx1998::vector.15"** %3, align 8
  store %"class.std::__cxx1998::vector.15"* %1, %"class.std::__cxx1998::vector.15"** %4, align 8
  %13 = load %"class.std::__cxx1998::vector.15"*, %"class.std::__cxx1998::vector.15"** %3, align 8
  %14 = bitcast %"class.std::__cxx1998::vector.15"* %13 to %"struct.std::__cxx1998::_Bvector_base"*
  %15 = load %"class.std::__cxx1998::vector.15"*, %"class.std::__cxx1998::vector.15"** %4, align 8
  %16 = bitcast %"class.std::__cxx1998::vector.15"* %15 to %"struct.std::__cxx1998::_Bvector_base"*
  %17 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNKSt9__cxx199813_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv(%"struct.std::__cxx1998::_Bvector_base"* %16) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaImEE17_S_select_on_copyERKS1_(%"class.std::allocator.16"* sret %6, %"class.std::allocator.16"* dereferenceable(1) %17)
  call void @_ZNSaIbEC2ImEERKSaIT_E(%"class.std::allocator.21"* %5, %"class.std::allocator.16"* dereferenceable(1) %6) #3
  invoke void @_ZNSt9__cxx199813_Bvector_baseISaIbEEC2ERKS1_(%"struct.std::__cxx1998::_Bvector_base"* %14, %"class.std::allocator.21"* dereferenceable(1) %5)
          to label %18 unwind label %112

; <label>:18:                                     ; preds = %2
  %19 = load i32, i32* @x.342
  %20 = load i32, i32* @y.343
  %21 = add i32 %19, -201739137
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, -201739137
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 false, true
  %32 = and i1 %29, false
  %33 = and i1 %27, %31
  %34 = and i1 %30, false
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 false, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  br i1 %43, label %45, label %167

; <label>:45:                                     ; preds = %18, %167
  call void @_ZNSaIbED2Ev(%"class.std::allocator.21"* %5) #3
  call void @_ZNSaImED2Ev(%"class.std::allocator.16"* %6) #3
  %46 = load %"class.std::__cxx1998::vector.15"*, %"class.std::__cxx1998::vector.15"** %4, align 8
  %47 = call i64 @_ZNKSt9__cxx19986vectorIbSaIbEE4sizeEv(%"class.std::__cxx1998::vector.15"* %46) #3
  %48 = load i32, i32* @x.342
  %49 = load i32, i32* @y.343
  %50 = sub i32 %48, 1601211144
  %51 = sub i32 %50, 1
  %52 = add i32 %51, 1601211144
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  br i1 %72, label %74, label %167

; <label>:74:                                     ; preds = %45
  invoke void @_ZNSt9__cxx19986vectorIbSaIbEE13_M_initializeEm(%"class.std::__cxx1998::vector.15"* %13, i64 %47)
          to label %75 unwind label %157

; <label>:75:                                     ; preds = %74
  %76 = load %"class.std::__cxx1998::vector.15"*, %"class.std::__cxx1998::vector.15"** %4, align 8
  %77 = call { i64*, i32 } @_ZNKSt9__cxx19986vectorIbSaIbEE5beginEv(%"class.std::__cxx1998::vector.15"* %76) #3
  %78 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %9 to { i64*, i32 }*
  %79 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %78, i32 0, i32 0
  %80 = extractvalue { i64*, i32 } %77, 0
  store i64* %80, i64** %79, align 8
  %81 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %78, i32 0, i32 1
  %82 = extractvalue { i64*, i32 } %77, 1
  store i32 %82, i32* %81, align 8
  %83 = load %"class.std::__cxx1998::vector.15"*, %"class.std::__cxx1998::vector.15"** %4, align 8
  %84 = call { i64*, i32 } @_ZNKSt9__cxx19986vectorIbSaIbEE3endEv(%"class.std::__cxx1998::vector.15"* %83) #3
  %85 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %10 to { i64*, i32 }*
  %86 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %85, i32 0, i32 0
  %87 = extractvalue { i64*, i32 } %84, 0
  store i64* %87, i64** %86, align 8
  %88 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %85, i32 0, i32 1
  %89 = extractvalue { i64*, i32 } %84, 1
  store i32 %89, i32* %88, align 8
  %90 = bitcast %"class.std::__cxx1998::vector.15"* %13 to %"struct.std::__cxx1998::_Bvector_base"*
  %91 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base", %"struct.std::__cxx1998::_Bvector_base"* %90, i32 0, i32 0
  %92 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %91, i32 0, i32 0
  %93 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %11 to i8*
  %94 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %93, i8* %94, i64 16, i32 8, i1 false)
  %95 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %9 to { i64*, i32 }*
  %96 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %95, i32 0, i32 0
  %97 = load i64*, i64** %96, align 8
  %98 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %95, i32 0, i32 1
  %99 = load i32, i32* %98, align 8
  %100 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %10 to { i64*, i32 }*
  %101 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %100, i32 0, i32 0
  %102 = load i64*, i64** %101, align 8
  %103 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %100, i32 0, i32 1
  %104 = load i32, i32* %103, align 8
  %105 = invoke { i64*, i32 } @_ZNSt9__cxx19986vectorIbSaIbEE15_M_copy_alignedENS_19_Bit_const_iteratorES3_NS_13_Bit_iteratorE(%"class.std::__cxx1998::vector.15"* %13, i64* %97, i32 %99, i64* %102, i32 %104, %"struct.std::__cxx1998::_Bit_iterator"* byval align 8 %11)
          to label %106 unwind label %157

; <label>:106:                                    ; preds = %75
  %107 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %12 to { i64*, i32 }*
  %108 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %107, i32 0, i32 0
  %109 = extractvalue { i64*, i32 } %105, 0
  store i64* %109, i64** %108, align 8
  %110 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %107, i32 0, i32 1
  %111 = extractvalue { i64*, i32 } %105, 1
  store i32 %111, i32* %110, align 8
  ret void

; <label>:112:                                    ; preds = %2
  %113 = load i32, i32* @x.342
  %114 = load i32, i32* @y.343
  %115 = sub i32 0, 1
  %116 = add i32 %113, %115
  %117 = sub i32 %113, 1
  %118 = mul i32 %113, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %114, 10
  %122 = xor i1 %120, true
  %123 = xor i1 %121, true
  %124 = xor i1 false, true
  %125 = and i1 %122, false
  %126 = and i1 %120, %124
  %127 = and i1 %123, false
  %128 = and i1 %121, %124
  %129 = or i1 %125, %126
  %130 = or i1 %127, %128
  %131 = xor i1 %129, %130
  %132 = or i1 %122, %123
  %133 = xor i1 %132, true
  %134 = or i1 false, %124
  %135 = and i1 %133, %134
  %136 = or i1 %131, %135
  %137 = or i1 %120, %121
  br i1 %136, label %138, label %170

; <label>:138:                                    ; preds = %112, %170
  %139 = landingpad { i8*, i32 }
          cleanup
  %140 = extractvalue { i8*, i32 } %139, 0
  store i8* %140, i8** %7, align 8
  %141 = extractvalue { i8*, i32 } %139, 1
  store i32 %141, i32* %8, align 4
  call void @_ZNSaIbED2Ev(%"class.std::allocator.21"* %5) #3
  call void @_ZNSaImED2Ev(%"class.std::allocator.16"* %6) #3
  %142 = load i32, i32* @x.342
  %143 = load i32, i32* @y.343
  %144 = sub i32 %142, 790499321
  %145 = sub i32 %144, 1
  %146 = add i32 %145, 790499321
  %147 = sub i32 %142, 1
  %148 = mul i32 %142, %146
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %143, 10
  %152 = and i1 %150, %151
  %153 = xor i1 %150, %151
  %154 = or i1 %152, %153
  %155 = or i1 %150, %151
  br i1 %154, label %156, label %170

; <label>:156:                                    ; preds = %138
  br label %162

; <label>:157:                                    ; preds = %75, %74
  %158 = landingpad { i8*, i32 }
          cleanup
  %159 = extractvalue { i8*, i32 } %158, 0
  store i8* %159, i8** %7, align 8
  %160 = extractvalue { i8*, i32 } %158, 1
  store i32 %160, i32* %8, align 4
  %161 = bitcast %"class.std::__cxx1998::vector.15"* %13 to %"struct.std::__cxx1998::_Bvector_base"*
  call void @_ZNSt9__cxx199813_Bvector_baseISaIbEED2Ev(%"struct.std::__cxx1998::_Bvector_base"* %161) #3
  br label %162

; <label>:162:                                    ; preds = %157, %156
  %163 = load i8*, i8** %7, align 8
  %164 = load i32, i32* %8, align 4
  %165 = insertvalue { i8*, i32 } undef, i8* %163, 0
  %166 = insertvalue { i8*, i32 } %165, i32 %164, 1
  resume { i8*, i32 } %166

; <label>:167:                                    ; preds = %45, %18
  call void @_ZNSaIbED2Ev(%"class.std::allocator.21"* %5) #3
  call void @_ZNSaImED2Ev(%"class.std::allocator.16"* %6) #3
  %168 = load %"class.std::__cxx1998::vector.15"*, %"class.std::__cxx1998::vector.15"** %4, align 8
  %169 = call i64 @_ZNKSt9__cxx19986vectorIbSaIbEE4sizeEv(%"class.std::__cxx1998::vector.15"* %168) #3
  br label %45

; <label>:170:                                    ; preds = %138, %112
  %171 = landingpad { i8*, i32 }
          cleanup
  %172 = extractvalue { i8*, i32 } %171, 0
  store i8* %172, i8** %7, align 8
  %173 = extractvalue { i8*, i32 } %171, 1
  store i32 %173, i32* %8, align 4
  call void @_ZNSaIbED2Ev(%"class.std::allocator.21"* %5) #3
  call void @_ZNSaImED2Ev(%"class.std::allocator.16"* %6) #3
  br label %138
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug12_Safe_vectorINSt7__debug6vectorIbSaIbEEENSt9__cxx19986vectorIbS3_EEEC2ERKS8_(%"class.__gnu_debug::_Safe_vector.19"*, %"class.__gnu_debug::_Safe_vector.19"* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_debug::_Safe_vector.19"*, align 8
  %4 = alloca %"class.__gnu_debug::_Safe_vector.19"*, align 8
  store %"class.__gnu_debug::_Safe_vector.19"* %0, %"class.__gnu_debug::_Safe_vector.19"** %3, align 8
  store %"class.__gnu_debug::_Safe_vector.19"* %1, %"class.__gnu_debug::_Safe_vector.19"** %4, align 8
  %5 = load %"class.__gnu_debug::_Safe_vector.19"*, %"class.__gnu_debug::_Safe_vector.19"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_debug::_Safe_vector.19", %"class.__gnu_debug::_Safe_vector.19"* %5, i32 0, i32 0
  store i64 0, i64* %6, align 8
  call void @_ZN11__gnu_debug12_Safe_vectorINSt7__debug6vectorIbSaIbEEENSt9__cxx19986vectorIbS3_EEE29_M_update_guaranteed_capacityEv(%"class.__gnu_debug::_Safe_vector.19"* %5) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug14_Safe_sequenceINSt7__debug6vectorIbSaIbEEEEC2ERKS5_(%"class.__gnu_debug::_Safe_sequence.12"*, %"class.__gnu_debug::_Safe_sequence.12"* dereferenceable(24)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_debug::_Safe_sequence.12"*, align 8
  %4 = alloca %"class.__gnu_debug::_Safe_sequence.12"*, align 8
  store %"class.__gnu_debug::_Safe_sequence.12"* %0, %"class.__gnu_debug::_Safe_sequence.12"** %3, align 8
  store %"class.__gnu_debug::_Safe_sequence.12"* %1, %"class.__gnu_debug::_Safe_sequence.12"** %4, align 8
  %5 = load %"class.__gnu_debug::_Safe_sequence.12"*, %"class.__gnu_debug::_Safe_sequence.12"** %3, align 8
  %6 = bitcast %"class.__gnu_debug::_Safe_sequence.12"* %5 to %"class.__gnu_debug::_Safe_sequence_base"*
  %7 = load %"class.__gnu_debug::_Safe_sequence.12"*, %"class.__gnu_debug::_Safe_sequence.12"** %4, align 8
  %8 = bitcast %"class.__gnu_debug::_Safe_sequence.12"* %7 to %"class.__gnu_debug::_Safe_sequence_base"*
  call void @_ZN11__gnu_debug19_Safe_sequence_baseC2ERKS0_(%"class.__gnu_debug::_Safe_sequence_base"* %6, %"class.__gnu_debug::_Safe_sequence_base"* dereferenceable(24) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug19_Safe_sequence_baseC2ERKS0_(%"class.__gnu_debug::_Safe_sequence_base"*, %"class.__gnu_debug::_Safe_sequence_base"* dereferenceable(24)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.348
  %6 = load i32, i32* @y.349
  %7 = add i32 %5, 1800894893
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1800894893
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 826599501, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %51
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 826599501, label %19
    i32 1258596477, label %27
    i32 939870402, label %46
    i32 -823035571, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %51

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1258596477, i32 -823035571
  store i32 %26, i32* %15
  br label %51

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_debug::_Safe_sequence_base"*, align 8
  %29 = alloca %"class.__gnu_debug::_Safe_sequence_base"*, align 8
  store %"class.__gnu_debug::_Safe_sequence_base"* %0, %"class.__gnu_debug::_Safe_sequence_base"** %28, align 8
  store %"class.__gnu_debug::_Safe_sequence_base"* %1, %"class.__gnu_debug::_Safe_sequence_base"** %29, align 8
  %30 = load %"class.__gnu_debug::_Safe_sequence_base"*, %"class.__gnu_debug::_Safe_sequence_base"** %28, align 8
  call void @_ZN11__gnu_debug19_Safe_sequence_baseC2Ev(%"class.__gnu_debug::_Safe_sequence_base"* %30) #3
  %31 = load i32, i32* @x.348
  %32 = load i32, i32* @y.349
  %33 = sub i32 %31, -433126907
  %34 = sub i32 %33, 1
  %35 = add i32 %34, -433126907
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 939870402, i32 -823035571
  store i32 %45, i32* %15
  br label %51

; <label>:46:                                     ; preds = %16
  ret void

; <label>:47:                                     ; preds = %16
  %48 = alloca %"class.__gnu_debug::_Safe_sequence_base"*, align 8
  %49 = alloca %"class.__gnu_debug::_Safe_sequence_base"*, align 8
  store %"class.__gnu_debug::_Safe_sequence_base"* %0, %"class.__gnu_debug::_Safe_sequence_base"** %48, align 8
  store %"class.__gnu_debug::_Safe_sequence_base"* %1, %"class.__gnu_debug::_Safe_sequence_base"** %49, align 8
  %50 = load %"class.__gnu_debug::_Safe_sequence_base"*, %"class.__gnu_debug::_Safe_sequence_base"** %48, align 8
  call void @_ZN11__gnu_debug19_Safe_sequence_baseC2Ev(%"class.__gnu_debug::_Safe_sequence_base"* %50) #3
  store i32 1258596477, i32* %15
  br label %51

; <label>:51:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaImEE17_S_select_on_copyERKS1_(%"class.std::allocator.16"* noalias sret, %"class.std::allocator.16"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::allocator.16"* %1, %"class.std::allocator.16"** %3, align 8
  %4 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %3, align 8
  call void @_ZNSt16allocator_traitsISaImEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator.16"* sret %0, %"class.std::allocator.16"* dereferenceable(1) %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.16"* @_ZNKSt9__cxx199813_Bvector_baseISaIbEE20_M_get_Bit_allocatorEv(%"struct.std::__cxx1998::_Bvector_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::__cxx1998::_Bvector_base"*, align 8
  store %"struct.std::__cxx1998::_Bvector_base"* %0, %"struct.std::__cxx1998::_Bvector_base"** %2, align 8
  %3 = load %"struct.std::__cxx1998::_Bvector_base"*, %"struct.std::__cxx1998::_Bvector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base", %"struct.std::__cxx1998::_Bvector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %4 to %"class.std::allocator.16"*
  ret %"class.std::allocator.16"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIbEC2ImEERKSaIT_E(%"class.std::allocator.21"*, %"class.std::allocator.16"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.21"*, align 8
  %4 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::allocator.21"* %0, %"class.std::allocator.21"** %3, align 8
  store %"class.std::allocator.16"* %1, %"class.std::allocator.16"** %4, align 8
  %5 = load %"class.std::allocator.21"*, %"class.std::allocator.21"** %3, align 8
  %6 = bitcast %"class.std::allocator.21"* %5 to %"class.__gnu_cxx::new_allocator.22"*
  call void @_ZN9__gnu_cxx13new_allocatorIbEC2Ev(%"class.__gnu_cxx::new_allocator.22"* %6) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNSt9__cxx19986vectorIbSaIbEE15_M_copy_alignedENS_19_Bit_const_iteratorES3_NS_13_Bit_iteratorE(%"class.std::__cxx1998::vector.15"*, i64*, i32, i64*, i32, %"struct.std::__cxx1998::_Bit_iterator"* byval align 8) #0 comdat align 2 {
  %7 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  %8 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %9 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %10 = alloca %"class.std::__cxx1998::vector.15"*, align 8
  %11 = alloca i64*, align 8
  %12 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %13 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %14 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  %15 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %8 to { i64*, i32 }*
  %16 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 0
  store i64* %1, i64** %16, align 8
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 1
  store i32 %2, i32* %17, align 8
  %18 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %9 to { i64*, i32 }*
  %19 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 0
  store i64* %3, i64** %19, align 8
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 1
  store i32 %4, i32* %20, align 8
  store %"class.std::__cxx1998::vector.15"* %0, %"class.std::__cxx1998::vector.15"** %10, align 8
  %21 = load %"class.std::__cxx1998::vector.15"*, %"class.std::__cxx1998::vector.15"** %10, align 8
  %22 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %8 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %23 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_iterator_base", %"struct.std::__cxx1998::_Bit_iterator_base"* %22, i32 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %9 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %26 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_iterator_base", %"struct.std::__cxx1998::_Bit_iterator_base"* %25, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %5 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %29 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_iterator_base", %"struct.std::__cxx1998::_Bit_iterator_base"* %28, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = call i64* @_ZSt4copyIPmS0_ET0_T_S2_S1_(i64* %24, i64* %27, i64* %30)
  store i64* %31, i64** %11, align 8
  %32 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %9 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %33 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_iterator_base", %"struct.std::__cxx1998::_Bit_iterator_base"* %32, i32 0, i32 0
  %34 = load i64*, i64** %33, align 8
  call void @_ZNSt9__cxx199819_Bit_const_iteratorC2EPmj(%"struct.std::__cxx1998::_Bit_const_iterator"* %12, i64* %34, i32 0)
  %35 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %13 to i8*
  %36 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 16, i32 8, i1 false)
  %37 = load i64*, i64** %11, align 8
  call void @_ZNSt9__cxx199813_Bit_iteratorC2EPmj(%"struct.std::__cxx1998::_Bit_iterator"* %14, i64* %37, i32 0)
  %38 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %12 to { i64*, i32 }*
  %39 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %38, i32 0, i32 0
  %40 = load i64*, i64** %39, align 8
  %41 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %38, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %13 to { i64*, i32 }*
  %44 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %43, i32 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %43, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %14 to { i64*, i32 }*
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %48, i32 0, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %48, i32 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = call { i64*, i32 } @_ZSt4copyINSt9__cxx199819_Bit_const_iteratorENS0_13_Bit_iteratorEET0_T_S4_S3_(i64* %40, i32 %42, i64* %45, i32 %47, i64* %50, i32 %52)
  %54 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %7 to { i64*, i32 }*
  %55 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 0
  %56 = extractvalue { i64*, i32 } %53, 0
  store i64* %56, i64** %55, align 8
  %57 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 1
  %58 = extractvalue { i64*, i32 } %53, 1
  store i32 %58, i32* %57, align 8
  %59 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %7 to { i64*, i32 }*
  %60 = load { i64*, i32 }, { i64*, i32 }* %59, align 8
  ret { i64*, i32 } %60
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaImEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator.16"* noalias sret, %"class.std::allocator.16"* dereferenceable(1)) #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::allocator.16"* %1, %"class.std::allocator.16"** %3, align 8
  %4 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %3, align 8
  call void @_ZNSaImEC2ERKS_(%"class.std::allocator.16"* %0, %"class.std::allocator.16"* dereferenceable(1) %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaImEC2ERKS_(%"class.std::allocator.16"*, %"class.std::allocator.16"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.16"*, align 8
  %4 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %3, align 8
  store %"class.std::allocator.16"* %1, %"class.std::allocator.16"** %4, align 8
  %5 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %3, align 8
  %6 = bitcast %"class.std::allocator.16"* %5 to %"class.__gnu_cxx::new_allocator.17"*
  %7 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %4, align 8
  %8 = bitcast %"class.std::allocator.16"* %7 to %"class.__gnu_cxx::new_allocator.17"*
  call void @_ZN9__gnu_cxx13new_allocatorImEC2ERKS1_(%"class.__gnu_cxx::new_allocator.17"* %6, %"class.__gnu_cxx::new_allocator.17"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt4copyIPmS0_ET0_T_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.__gnu_debug::_Error_formatter"*
  %5 = alloca i64**
  %6 = alloca i64**
  %7 = alloca i64**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.362
  %11 = load i32, i32* @y.363
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 -1675759733, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %141
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1675759733, label %23
    i32 -469820077, label %43
    i32 -1451721275, label %66
    i32 -2104226327, label %67
    i32 342659877, label %72
    i32 443712951, label %80
    i32 -306039257, label %108
    i32 -607004849, label %124
    i32 593352485, label %125
    i32 -1567104204, label %135
    i32 -1980077622, label %140
  ]

; <label>:22:                                     ; preds = %20
  br label %141

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 false, true
  %29 = and i1 %26, false
  %30 = and i1 %24, %28
  %31 = and i1 %27, false
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 false, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 -469820077, i32 -1567104204
  store i32 %42, i32* %19
  br label %141

; <label>:43:                                     ; preds = %20
  %44 = alloca i64*, align 8
  store i64** %44, i64*** %7
  %45 = alloca i64*, align 8
  store i64** %45, i64*** %6
  %46 = alloca i64*, align 8
  store i64** %46, i64*** %5
  %47 = alloca %"class.__gnu_debug::_Error_formatter", align 8
  store %"class.__gnu_debug::_Error_formatter"* %47, %"class.__gnu_debug::_Error_formatter"** %4
  %48 = load volatile i64**, i64*** %7
  store i64* %0, i64** %48, align 8
  %49 = load volatile i64**, i64*** %6
  store i64* %1, i64** %49, align 8
  %50 = load volatile i64**, i64*** %5
  store i64* %2, i64** %50, align 8
  %51 = load i32, i32* @x.362
  %52 = load i32, i32* @y.363
  %53 = add i32 %51, 2030545639
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, 2030545639
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 -1451721275, i32 -1567104204
  store i32 %65, i32* %19
  br label %141

; <label>:66:                                     ; preds = %20
  store i32 -2104226327, i32* %19
  br label %141

; <label>:67:                                     ; preds = %20
  %68 = load volatile i64**, i64*** %7
  %69 = load volatile i64**, i64*** %6
  %70 = call zeroext i1 @_ZN11__gnu_debug13__valid_rangeIPmEEbRKT_S4_(i64** dereferenceable(8) %68, i64** dereferenceable(8) %69)
  %71 = select i1 %70, i32 443712951, i32 342659877
  store i32 %71, i32* %19
  br label %141

; <label>:72:                                     ; preds = %20
  %73 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %4
  call void @_ZN11__gnu_debug16_Error_formatter5_M_atEPKcm(%"class.__gnu_debug::_Error_formatter"* sret %73, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.4, i32 0, i32 0), i64 468)
  %74 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %4
  %75 = call dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter10_M_messageENS_13_Debug_msg_idE(%"class.__gnu_debug::_Error_formatter"* %74, i32 0) #3
  %76 = load volatile i64**, i64*** %7
  %77 = call dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_iteratorIPmEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"* %75, i64** dereferenceable(8) %76, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i32 0, i32 0))
  %78 = load volatile i64**, i64*** %6
  %79 = call dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_iteratorIPmEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"* %77, i64** dereferenceable(8) %78, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i32 0, i32 0))
  call void @_ZNK11__gnu_debug16_Error_formatter8_M_errorEv(%"class.__gnu_debug::_Error_formatter"* %79) #13
  unreachable

; <label>:80:                                     ; preds = %20
  %81 = load i32, i32* @x.362
  %82 = load i32, i32* @y.363
  %83 = sub i32 %81, -630227570
  %84 = sub i32 %83, 1
  %85 = add i32 %84, -630227570
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = xor i1 %89, true
  %92 = xor i1 %90, true
  %93 = xor i1 true, true
  %94 = and i1 %91, true
  %95 = and i1 %89, %93
  %96 = and i1 %92, true
  %97 = and i1 %90, %93
  %98 = or i1 %94, %95
  %99 = or i1 %96, %97
  %100 = xor i1 %98, %99
  %101 = or i1 %91, %92
  %102 = xor i1 %101, true
  %103 = or i1 true, %93
  %104 = and i1 %102, %103
  %105 = or i1 %100, %104
  %106 = or i1 %89, %90
  %107 = select i1 %105, i32 -306039257, i32 -1980077622
  store i32 %107, i32* %19
  br label %141

; <label>:108:                                    ; preds = %20
  %109 = load i32, i32* @x.362
  %110 = load i32, i32* @y.363
  %111 = add i32 %109, -477175391
  %112 = sub i32 %111, 1
  %113 = sub i32 %112, -477175391
  %114 = sub i32 %109, 1
  %115 = mul i32 %109, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %110, 10
  %119 = and i1 %117, %118
  %120 = xor i1 %117, %118
  %121 = or i1 %119, %120
  %122 = or i1 %117, %118
  %123 = select i1 %121, i32 -607004849, i32 -1980077622
  store i32 %123, i32* %19
  br label %141

; <label>:124:                                    ; preds = %20
  store i32 593352485, i32* %19
  br label %141

; <label>:125:                                    ; preds = %20
  %126 = load volatile i64**, i64*** %7
  %127 = load i64*, i64** %126, align 8
  %128 = call i64* @_ZSt12__miter_baseIPmENSt11_Miter_baseIT_E13iterator_typeES2_(i64* %127)
  %129 = load volatile i64**, i64*** %6
  %130 = load i64*, i64** %129, align 8
  %131 = call i64* @_ZSt12__miter_baseIPmENSt11_Miter_baseIT_E13iterator_typeES2_(i64* %130)
  %132 = load volatile i64**, i64*** %5
  %133 = load i64*, i64** %132, align 8
  %134 = call i64* @_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_(i64* %128, i64* %131, i64* %133)
  ret i64* %134

; <label>:135:                                    ; preds = %20
  %136 = alloca i64*, align 8
  %137 = alloca i64*, align 8
  %138 = alloca i64*, align 8
  %139 = alloca %"class.__gnu_debug::_Error_formatter", align 8
  store i64* %0, i64** %136, align 8
  store i64* %1, i64** %137, align 8
  store i64* %2, i64** %138, align 8
  store i32 -469820077, i32* %19
  br label %141

; <label>:140:                                    ; preds = %20
  store i32 -306039257, i32* %19
  br label %141

; <label>:141:                                    ; preds = %140, %135, %124, %108, %80, %67, %66, %43, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt4copyINSt9__cxx199819_Bit_const_iteratorENS0_13_Bit_iteratorEET0_T_S4_S3_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  %8 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %9 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %10 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  %11 = alloca %"class.__gnu_debug::_Error_formatter", align 8
  %12 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %13 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %14 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %15 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %16 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  %17 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %8 to { i64*, i32 }*
  %18 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 0
  store i64* %0, i64** %18, align 8
  %19 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 1
  store i32 %1, i32* %19, align 8
  %20 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %9 to { i64*, i32 }*
  %21 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %20, i32 0, i32 0
  store i64* %2, i64** %21, align 8
  %22 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %20, i32 0, i32 1
  store i32 %3, i32* %22, align 8
  %23 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %10 to { i64*, i32 }*
  %24 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %23, i32 0, i32 0
  store i64* %4, i64** %24, align 8
  %25 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %23, i32 0, i32 1
  store i32 %5, i32* %25, align 8
  %26 = alloca i32
  store i32 627960868, i32* %26
  br label %27

; <label>:27:                                     ; preds = %6, %90
  %28 = load i32, i32* %26
  switch i32 %28, label %29 [
    i32 627960868, label %30
    i32 2030452289, label %33
    i32 -433629675, label %37
    i32 -1132852729, label %38
  ]

; <label>:29:                                     ; preds = %27
  br label %90

; <label>:30:                                     ; preds = %27
  %31 = call zeroext i1 @_ZN11__gnu_debug13__valid_rangeINSt9__cxx199819_Bit_const_iteratorEEEbRKT_S5_(%"struct.std::__cxx1998::_Bit_const_iterator"* dereferenceable(16) %8, %"struct.std::__cxx1998::_Bit_const_iterator"* dereferenceable(16) %9)
  %32 = select i1 %31, i32 -433629675, i32 2030452289
  store i32 %32, i32* %26
  br label %90

; <label>:33:                                     ; preds = %27
  call void @_ZN11__gnu_debug16_Error_formatter5_M_atEPKcm(%"class.__gnu_debug::_Error_formatter"* sret %11, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.4, i32 0, i32 0), i64 468)
  %34 = call dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter10_M_messageENS_13_Debug_msg_idE(%"class.__gnu_debug::_Error_formatter"* %11, i32 0) #3
  %35 = call dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_iteratorINSt9__cxx199819_Bit_const_iteratorEEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"* %34, %"struct.std::__cxx1998::_Bit_const_iterator"* dereferenceable(16) %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i32 0, i32 0))
  %36 = call dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_iteratorINSt9__cxx199819_Bit_const_iteratorEEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"* %35, %"struct.std::__cxx1998::_Bit_const_iterator"* dereferenceable(16) %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i32 0, i32 0))
  call void @_ZNK11__gnu_debug16_Error_formatter8_M_errorEv(%"class.__gnu_debug::_Error_formatter"* %36) #13
  unreachable

; <label>:37:                                     ; preds = %27
  store i32 -1132852729, i32* %26
  br label %90

; <label>:38:                                     ; preds = %27
  %39 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %13 to i8*
  %40 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 16, i32 8, i1 false)
  %41 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %13 to { i64*, i32 }*
  %42 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %41, i32 0, i32 0
  %43 = load i64*, i64** %42, align 8
  %44 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %41, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = call { i64*, i32 } @_ZSt12__miter_baseINSt9__cxx199819_Bit_const_iteratorEENSt11_Miter_baseIT_E13iterator_typeES3_(i64* %43, i32 %45)
  %47 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %12 to { i64*, i32 }*
  %48 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %47, i32 0, i32 0
  %49 = extractvalue { i64*, i32 } %46, 0
  store i64* %49, i64** %48, align 8
  %50 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %47, i32 0, i32 1
  %51 = extractvalue { i64*, i32 } %46, 1
  store i32 %51, i32* %50, align 8
  %52 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %15 to i8*
  %53 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 16, i32 8, i1 false)
  %54 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %15 to { i64*, i32 }*
  %55 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 0
  %56 = load i64*, i64** %55, align 8
  %57 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = call { i64*, i32 } @_ZSt12__miter_baseINSt9__cxx199819_Bit_const_iteratorEENSt11_Miter_baseIT_E13iterator_typeES3_(i64* %56, i32 %58)
  %60 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %14 to { i64*, i32 }*
  %61 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %60, i32 0, i32 0
  %62 = extractvalue { i64*, i32 } %59, 0
  store i64* %62, i64** %61, align 8
  %63 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %60, i32 0, i32 1
  %64 = extractvalue { i64*, i32 } %59, 1
  store i32 %64, i32* %63, align 8
  %65 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %16 to i8*
  %66 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 16, i32 8, i1 false)
  %67 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %12 to { i64*, i32 }*
  %68 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %67, i32 0, i32 0
  %69 = load i64*, i64** %68, align 8
  %70 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %67, i32 0, i32 1
  %71 = load i32, i32* %70, align 8
  %72 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %14 to { i64*, i32 }*
  %73 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %72, i32 0, i32 0
  %74 = load i64*, i64** %73, align 8
  %75 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %72, i32 0, i32 1
  %76 = load i32, i32* %75, align 8
  %77 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %16 to { i64*, i32 }*
  %78 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %77, i32 0, i32 0
  %79 = load i64*, i64** %78, align 8
  %80 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %77, i32 0, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = call { i64*, i32 } @_ZSt14__copy_move_a2ILb0ENSt9__cxx199819_Bit_const_iteratorENS0_13_Bit_iteratorEET1_T0_S4_S3_(i64* %69, i32 %71, i64* %74, i32 %76, i64* %79, i32 %81)
  %83 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %7 to { i64*, i32 }*
  %84 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %83, i32 0, i32 0
  %85 = extractvalue { i64*, i32 } %82, 0
  store i64* %85, i64** %84, align 8
  %86 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %83, i32 0, i32 1
  %87 = extractvalue { i64*, i32 } %82, 1
  store i32 %87, i32* %86, align 8
  %88 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %7 to { i64*, i32 }*
  %89 = load { i64*, i32 }, { i64*, i32 }* %88, align 8
  ret { i64*, i32 } %89

; <label>:90:                                     ; preds = %37, %30, %29
  br label %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt9__cxx199819_Bit_const_iteratorC2EPmj(%"struct.std::__cxx1998::_Bit_const_iterator"*, i64*, i32) unnamed_addr #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.366
  %7 = load i32, i32* @y.367
  %8 = sub i32 %6, -395797186
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -395797186
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1554240717, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %72
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1554240717, label %20
    i32 -173606769, label %28
    i32 -1214802311, label %63
    i32 844748019, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %72

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -173606769, i32 844748019
  store i32 %27, i32* %16
  br label %72

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::__cxx1998::_Bit_const_iterator"*, align 8
  %30 = alloca i64*, align 8
  %31 = alloca i32, align 4
  store %"struct.std::__cxx1998::_Bit_const_iterator"* %0, %"struct.std::__cxx1998::_Bit_const_iterator"** %29, align 8
  store i64* %1, i64** %30, align 8
  store i32 %2, i32* %31, align 4
  %32 = load %"struct.std::__cxx1998::_Bit_const_iterator"*, %"struct.std::__cxx1998::_Bit_const_iterator"** %29, align 8
  %33 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %32 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %34 = load i64*, i64** %30, align 8
  %35 = load i32, i32* %31, align 4
  call void @_ZNSt9__cxx199818_Bit_iterator_baseC2EPmj(%"struct.std::__cxx1998::_Bit_iterator_base"* %33, i64* %34, i32 %35)
  %36 = load i32, i32* @x.366
  %37 = load i32, i32* @y.367
  %38 = add i32 %36, 82194299
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, 82194299
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 -1214802311, i32 844748019
  store i32 %62, i32* %16
  br label %72

; <label>:63:                                     ; preds = %17
  ret void

; <label>:64:                                     ; preds = %17
  %65 = alloca %"struct.std::__cxx1998::_Bit_const_iterator"*, align 8
  %66 = alloca i64*, align 8
  %67 = alloca i32, align 4
  store %"struct.std::__cxx1998::_Bit_const_iterator"* %0, %"struct.std::__cxx1998::_Bit_const_iterator"** %65, align 8
  store i64* %1, i64** %66, align 8
  store i32 %2, i32* %67, align 4
  %68 = load %"struct.std::__cxx1998::_Bit_const_iterator"*, %"struct.std::__cxx1998::_Bit_const_iterator"** %65, align 8
  %69 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %68 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %70 = load i64*, i64** %66, align 8
  %71 = load i32, i32* %67, align 4
  call void @_ZNSt9__cxx199818_Bit_iterator_baseC2EPmj(%"struct.std::__cxx1998::_Bit_iterator_base"* %69, i64* %70, i32 %71)
  store i32 -173606769, i32* %16
  br label %72

; <label>:72:                                     ; preds = %64, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt14__copy_move_a2ILb0EPmS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.368
  %8 = load i32, i32* @y.369
  %9 = add i32 %7, 1903289071
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 1903289071
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -2086895075, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %80
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -2086895075, label %21
    i32 1865806339, label %41
    i32 407302066, label %67
    i32 1717687911, label %69
  ]

; <label>:20:                                     ; preds = %18
  br label %80

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1865806339, i32 1717687911
  store i32 %40, i32* %17
  br label %80

; <label>:41:                                     ; preds = %18
  %42 = alloca i64*, align 8
  %43 = alloca i64*, align 8
  %44 = alloca i64*, align 8
  store i64* %0, i64** %42, align 8
  store i64* %1, i64** %43, align 8
  store i64* %2, i64** %44, align 8
  %45 = load i64*, i64** %42, align 8
  %46 = call i64* @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %45)
  %47 = load i64*, i64** %43, align 8
  %48 = call i64* @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %47)
  %49 = load i64*, i64** %44, align 8
  %50 = call i64* @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %49)
  %51 = call i64* @_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_(i64* %46, i64* %48, i64* %50)
  store i64* %51, i64** %4
  %52 = load i32, i32* @x.368
  %53 = load i32, i32* @y.369
  %54 = add i32 %52, 1630904196
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, 1630904196
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 407302066, i32 1717687911
  store i32 %66, i32* %17
  br label %80

; <label>:67:                                     ; preds = %18
  %68 = load volatile i64*, i64** %4
  ret i64* %68

; <label>:69:                                     ; preds = %18
  %70 = alloca i64*, align 8
  %71 = alloca i64*, align 8
  %72 = alloca i64*, align 8
  store i64* %0, i64** %70, align 8
  store i64* %1, i64** %71, align 8
  store i64* %2, i64** %72, align 8
  %73 = load i64*, i64** %70, align 8
  %74 = call i64* @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %73)
  %75 = load i64*, i64** %71, align 8
  %76 = call i64* @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %75)
  %77 = load i64*, i64** %72, align 8
  %78 = call i64* @_ZSt12__niter_baseIPmENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %77)
  %79 = call i64* @_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_(i64* %74, i64* %76, i64* %78)
  store i32 1865806339, i32* %17
  br label %80

; <label>:80:                                     ; preds = %69, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt12__miter_baseIPmENSt11_Miter_baseIT_E13iterator_typeES2_(i64*) #4 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  %4 = call i64* @_ZNSt10_Iter_baseIPmLb0EE7_S_baseES0_(i64* %3)
  ret i64* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt13__copy_move_aILb0EPmS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.372
  %8 = load i32, i32* @y.373
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 514552036, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %74
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 514552036, label %20
    i32 -269127011, label %28
    i32 368360772, label %63
    i32 792054285, label %65
  ]

; <label>:19:                                     ; preds = %17
  br label %74

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -269127011, i32 792054285
  store i32 %27, i32* %16
  br label %74

; <label>:28:                                     ; preds = %17
  %29 = alloca i64*, align 8
  %30 = alloca i64*, align 8
  %31 = alloca i64*, align 8
  %32 = alloca i8, align 1
  store i64* %0, i64** %29, align 8
  store i64* %1, i64** %30, align 8
  store i64* %2, i64** %31, align 8
  store i8 1, i8* %32, align 1
  %33 = load i64*, i64** %29, align 8
  %34 = load i64*, i64** %30, align 8
  %35 = load i64*, i64** %31, align 8
  %36 = call i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_(i64* %33, i64* %34, i64* %35)
  store i64* %36, i64** %4
  %37 = load i32, i32* @x.372
  %38 = load i32, i32* @y.373
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 368360772, i32 792054285
  store i32 %62, i32* %16
  br label %74

; <label>:63:                                     ; preds = %17
  %64 = load volatile i64*, i64** %4
  ret i64* %64

; <label>:65:                                     ; preds = %17
  %66 = alloca i64*, align 8
  %67 = alloca i64*, align 8
  %68 = alloca i64*, align 8
  %69 = alloca i8, align 1
  store i64* %0, i64** %66, align 8
  store i64* %1, i64** %67, align 8
  store i64* %2, i64** %68, align 8
  store i8 1, i8* %69, align 1
  %70 = load i64*, i64** %66, align 8
  %71 = load i64*, i64** %67, align 8
  %72 = load i64*, i64** %68, align 8
  %73 = call i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_(i64* %70, i64* %71, i64* %72)
  store i32 -269127011, i32* %16
  br label %74

; <label>:74:                                     ; preds = %65, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mImEEPT_PKS3_S6_S4_(i64*, i64*, i64*) #4 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i64*
  %7 = alloca i64**
  %8 = alloca i64**
  %9 = alloca i1
  %10 = alloca i1
  %11 = load i32, i32* @x.374
  %12 = load i32, i32* @y.375
  %13 = sub i32 %11, -1715203355
  %14 = sub i32 %13, 1
  %15 = add i32 %14, -1715203355
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  store i1 %19, i1* %10
  %20 = icmp slt i32 %12, 10
  store i1 %20, i1* %9
  %21 = alloca i32
  store i32 -752732097, i32* %21
  br label %22

; <label>:22:                                     ; preds = %3, %181
  %23 = load i32, i32* %21
  switch i32 %23, label %24 [
    i32 -752732097, label %25
    i32 -1503320582, label %45
    i32 1046928287, label %81
    i32 -946400161, label %84
    i32 492718280, label %94
    i32 1431187335, label %110
    i32 1301587189, label %131
    i32 1889580616, label %133
    i32 1848359541, label %175
  ]

; <label>:24:                                     ; preds = %22
  br label %181

; <label>:25:                                     ; preds = %22
  %26 = load volatile i1, i1* %10
  %27 = load volatile i1, i1* %9
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 false, true
  %31 = and i1 %28, false
  %32 = and i1 %26, %30
  %33 = and i1 %29, false
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 false, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  %44 = select i1 %42, i32 -1503320582, i32 1889580616
  store i32 %44, i32* %21
  br label %181

; <label>:45:                                     ; preds = %22
  %46 = alloca i64*, align 8
  store i64** %46, i64*** %8
  %47 = alloca i64*, align 8
  %48 = alloca i64*, align 8
  store i64** %48, i64*** %7
  %49 = alloca i64, align 8
  store i64* %49, i64** %6
  %50 = load volatile i64**, i64*** %8
  store i64* %0, i64** %50, align 8
  store i64* %1, i64** %47, align 8
  %51 = load volatile i64**, i64*** %7
  store i64* %2, i64** %51, align 8
  %52 = load i64*, i64** %47, align 8
  %53 = load volatile i64**, i64*** %8
  %54 = load i64*, i64** %53, align 8
  %55 = ptrtoint i64* %52 to i64
  %56 = ptrtoint i64* %54 to i64
  %57 = sub i64 %55, 6526331638185231497
  %58 = sub i64 %57, %56
  %59 = add i64 %58, 6526331638185231497
  %60 = sub i64 %55, %56
  %61 = sdiv exact i64 %59, 8
  %62 = load volatile i64*, i64** %6
  store i64 %61, i64* %62, align 8
  %63 = load volatile i64*, i64** %6
  %64 = load i64, i64* %63, align 8
  %65 = icmp ne i64 %64, 0
  store i1 %65, i1* %5
  %66 = load i32, i32* @x.374
  %67 = load i32, i32* @y.375
  %68 = sub i32 %66, 1550365682
  %69 = sub i32 %68, 1
  %70 = add i32 %69, 1550365682
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = and i1 %74, %75
  %77 = xor i1 %74, %75
  %78 = or i1 %76, %77
  %79 = or i1 %74, %75
  %80 = select i1 %78, i32 1046928287, i32 1889580616
  store i32 %80, i32* %21
  br label %181

; <label>:81:                                     ; preds = %22
  %82 = load volatile i1, i1* %5
  %83 = select i1 %82, i32 -946400161, i32 492718280
  store i32 %83, i32* %21
  br label %181

; <label>:84:                                     ; preds = %22
  %85 = load volatile i64**, i64*** %7
  %86 = load i64*, i64** %85, align 8
  %87 = bitcast i64* %86 to i8*
  %88 = load volatile i64**, i64*** %8
  %89 = load i64*, i64** %88, align 8
  %90 = bitcast i64* %89 to i8*
  %91 = load volatile i64*, i64** %6
  %92 = load i64, i64* %91, align 8
  %93 = mul i64 8, %92
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %87, i8* %90, i64 %93, i32 8, i1 false)
  store i32 492718280, i32* %21
  br label %181

; <label>:94:                                     ; preds = %22
  %95 = load i32, i32* @x.374
  %96 = load i32, i32* @y.375
  %97 = sub i32 %95, -1974324211
  %98 = sub i32 %97, 1
  %99 = add i32 %98, -1974324211
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = and i1 %103, %104
  %106 = xor i1 %103, %104
  %107 = or i1 %105, %106
  %108 = or i1 %103, %104
  %109 = select i1 %107, i32 1431187335, i32 1848359541
  store i32 %109, i32* %21
  br label %181

; <label>:110:                                    ; preds = %22
  %111 = load volatile i64**, i64*** %7
  %112 = load i64*, i64** %111, align 8
  %113 = load volatile i64*, i64** %6
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds i64, i64* %112, i64 %114
  store i64* %115, i64** %4
  %116 = load i32, i32* @x.374
  %117 = load i32, i32* @y.375
  %118 = sub i32 %116, -1100159548
  %119 = sub i32 %118, 1
  %120 = add i32 %119, -1100159548
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = and i1 %124, %125
  %127 = xor i1 %124, %125
  %128 = or i1 %126, %127
  %129 = or i1 %124, %125
  %130 = select i1 %128, i32 1301587189, i32 1848359541
  store i32 %130, i32* %21
  br label %181

; <label>:131:                                    ; preds = %22
  %132 = load volatile i64*, i64** %4
  ret i64* %132

; <label>:133:                                    ; preds = %22
  %134 = alloca i64*, align 8
  %135 = alloca i64*, align 8
  %136 = alloca i64*, align 8
  %137 = alloca i64, align 8
  store i64* %0, i64** %134, align 8
  store i64* %1, i64** %135, align 8
  store i64* %2, i64** %136, align 8
  %138 = load i64*, i64** %135, align 8
  %139 = load i64*, i64** %134, align 8
  %140 = ptrtoint i64* %138 to i64
  %141 = ptrtoint i64* %139 to i64
  %142 = sub i64 %140, 2279291595884533756
  %143 = sub i64 %142, %141
  %144 = add i64 %143, 2279291595884533756
  %145 = sub i64 %140, %141
  %146 = mul i64 %144, %141
  %147 = sub i64 0, %140
  %148 = add i64 0, %147
  %149 = sub i64 0, %140
  %150 = sub i64 %148, 2434853444986607707
  %151 = add i64 %150, %141
  %152 = add i64 %151, 2434853444986607707
  %153 = add i64 %148, %141
  %154 = add i64 %140, 8468167824455195614
  %155 = sub i64 %154, %141
  %156 = sub i64 %155, 8468167824455195614
  %157 = sub i64 %140, %141
  %158 = mul i64 %156, %141
  %159 = sub i64 0, -194063671397970006
  %160 = sub i64 %159, %140
  %161 = add i64 %160, -194063671397970006
  %162 = sub i64 0, %140
  %163 = sub i64 0, %161
  %164 = sub i64 0, %141
  %165 = add i64 %163, %164
  %166 = sub i64 0, %165
  %167 = add i64 %161, %141
  %168 = sub i64 %140, -6689148885487821217
  %169 = sub i64 %168, %141
  %170 = add i64 %169, -6689148885487821217
  %171 = sub i64 %140, %141
  %172 = sdiv exact i64 %170, 8
  store i64 %172, i64* %137, align 8
  %173 = load i64, i64* %137, align 8
  %174 = icmp ne i64 %173, 0
  store i32 -1503320582, i32* %21
  br label %181

; <label>:175:                                    ; preds = %22
  %176 = load volatile i64**, i64*** %7
  %177 = load i64*, i64** %176, align 8
  %178 = load volatile i64*, i64** %6
  %179 = load i64, i64* %178, align 8
  %180 = getelementptr inbounds i64, i64* %177, i64 %179
  store i32 1431187335, i32* %21
  br label %181

; <label>:181:                                    ; preds = %175, %133, %110, %94, %84, %81, %45, %25, %24
  br label %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #10

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN11__gnu_debug13__valid_rangeINSt9__cxx199819_Bit_const_iteratorEEEbRKT_S5_(%"struct.std::__cxx1998::_Bit_const_iterator"* dereferenceable(16), %"struct.std::__cxx1998::_Bit_const_iterator"* dereferenceable(16)) #0 comdat {
  %3 = alloca %"struct.std::__cxx1998::_Bit_const_iterator"*, align 8
  %4 = alloca %"struct.std::__cxx1998::_Bit_const_iterator"*, align 8
  %5 = alloca %"struct.std::__false_type", align 1
  store %"struct.std::__cxx1998::_Bit_const_iterator"* %0, %"struct.std::__cxx1998::_Bit_const_iterator"** %3, align 8
  store %"struct.std::__cxx1998::_Bit_const_iterator"* %1, %"struct.std::__cxx1998::_Bit_const_iterator"** %4, align 8
  %6 = load %"struct.std::__cxx1998::_Bit_const_iterator"*, %"struct.std::__cxx1998::_Bit_const_iterator"** %3, align 8
  %7 = load %"struct.std::__cxx1998::_Bit_const_iterator"*, %"struct.std::__cxx1998::_Bit_const_iterator"** %4, align 8
  %8 = call zeroext i1 @_ZN11__gnu_debug17__valid_range_auxINSt9__cxx199819_Bit_const_iteratorEEEbRKT_S5_St12__false_type(%"struct.std::__cxx1998::_Bit_const_iterator"* dereferenceable(16) %6, %"struct.std::__cxx1998::_Bit_const_iterator"* dereferenceable(16) %7)
  ret i1 %8
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_iteratorINSt9__cxx199819_Bit_const_iteratorEEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"*, %"struct.std::__cxx1998::_Bit_const_iterator"* dereferenceable(16), i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"class.__gnu_debug::_Error_formatter"*
  %6 = alloca %"struct.__gnu_debug::_Error_formatter::_Parameter"*
  %7 = alloca i8**
  %8 = alloca %"struct.std::__cxx1998::_Bit_const_iterator"**
  %9 = alloca i1
  %10 = alloca i1
  %11 = load i32, i32* @x.378
  %12 = load i32, i32* @y.379
  %13 = sub i32 %11, -385664630
  %14 = sub i32 %13, 1
  %15 = add i32 %14, -385664630
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  store i1 %19, i1* %10
  %20 = icmp slt i32 %12, 10
  store i1 %20, i1* %9
  %21 = alloca i32
  store i32 -1388237533, i32* %21
  br label %22

; <label>:22:                                     ; preds = %3, %164
  %23 = load i32, i32* %21
  switch i32 %23, label %24 [
    i32 -1388237533, label %25
    i32 1374242650, label %45
    i32 -2133370314, label %85
    i32 201039339, label %88
    i32 1654782010, label %107
    i32 -135760550, label %135
    i32 129124655, label %151
    i32 -455259515, label %153
    i32 37934, label %163
  ]

; <label>:24:                                     ; preds = %22
  br label %164

; <label>:25:                                     ; preds = %22
  %26 = load volatile i1, i1* %10
  %27 = load volatile i1, i1* %9
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 false, true
  %31 = and i1 %28, false
  %32 = and i1 %26, %30
  %33 = and i1 %29, false
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 false, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  %44 = select i1 %42, i32 1374242650, i32 -455259515
  store i32 %44, i32* %21
  br label %164

; <label>:45:                                     ; preds = %22
  %46 = alloca %"class.__gnu_debug::_Error_formatter"*, align 8
  %47 = alloca %"struct.std::__cxx1998::_Bit_const_iterator"*, align 8
  store %"struct.std::__cxx1998::_Bit_const_iterator"** %47, %"struct.std::__cxx1998::_Bit_const_iterator"*** %8
  %48 = alloca i8*, align 8
  store i8** %48, i8*** %7
  %49 = alloca %"struct.__gnu_debug::_Error_formatter::_Parameter", align 8
  store %"struct.__gnu_debug::_Error_formatter::_Parameter"* %49, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %6
  %50 = alloca %"struct.__gnu_debug::_Error_formatter::_Is_iterator", align 1
  store %"class.__gnu_debug::_Error_formatter"* %0, %"class.__gnu_debug::_Error_formatter"** %46, align 8
  %51 = load volatile %"struct.std::__cxx1998::_Bit_const_iterator"**, %"struct.std::__cxx1998::_Bit_const_iterator"*** %8
  store %"struct.std::__cxx1998::_Bit_const_iterator"* %1, %"struct.std::__cxx1998::_Bit_const_iterator"** %51, align 8
  %52 = load volatile i8**, i8*** %7
  store i8* %2, i8** %52, align 8
  %53 = load %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %46, align 8
  store %"class.__gnu_debug::_Error_formatter"* %53, %"class.__gnu_debug::_Error_formatter"** %5
  %54 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %5
  %55 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %54, i32 0, i32 3
  %56 = load i64, i64* %55, align 8
  %57 = icmp ult i64 %56, 9
  store i1 %57, i1* %4
  %58 = load i32, i32* @x.378
  %59 = load i32, i32* @y.379
  %60 = add i32 %58, -127236911
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, -127236911
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 -2133370314, i32 -455259515
  store i32 %84, i32* %21
  br label %164

; <label>:85:                                     ; preds = %22
  %86 = load volatile i1, i1* %4
  %87 = select i1 %86, i32 201039339, i32 1654782010
  store i32 %87, i32* %21
  br label %164

; <label>:88:                                     ; preds = %22
  %89 = load volatile %"struct.std::__cxx1998::_Bit_const_iterator"**, %"struct.std::__cxx1998::_Bit_const_iterator"*** %8
  %90 = load %"struct.std::__cxx1998::_Bit_const_iterator"*, %"struct.std::__cxx1998::_Bit_const_iterator"** %89, align 8
  %91 = load volatile i8**, i8*** %7
  %92 = load i8*, i8** %91, align 8
  %93 = load volatile %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %6
  call void @_ZN11__gnu_debug16_Error_formatter10_ParameterC2INSt9__cxx199819_Bit_const_iteratorEEERKT_PKcNS0_12_Is_iteratorE(%"struct.__gnu_debug::_Error_formatter::_Parameter"* %93, %"struct.std::__cxx1998::_Bit_const_iterator"* dereferenceable(16) %90, i8* %92)
  %94 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %5
  %95 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %94, i32 0, i32 2
  %96 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %5
  %97 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %96, i32 0, i32 3
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, -7362085348853329538
  %100 = add i64 %99, 1
  %101 = sub i64 %100, -7362085348853329538
  %102 = add i64 %98, 1
  store i64 %101, i64* %97, align 8
  %103 = getelementptr inbounds [9 x %"struct.__gnu_debug::_Error_formatter::_Parameter"], [9 x %"struct.__gnu_debug::_Error_formatter::_Parameter"]* %95, i64 0, i64 %98
  %104 = bitcast %"struct.__gnu_debug::_Error_formatter::_Parameter"* %103 to i8*
  %105 = load volatile %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %6
  %106 = bitcast %"struct.__gnu_debug::_Error_formatter::_Parameter"* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %104, i8* %106, i64 56, i32 8, i1 false)
  store i32 1654782010, i32* %21
  br label %164

; <label>:107:                                    ; preds = %22
  %108 = load i32, i32* @x.378
  %109 = load i32, i32* @y.379
  %110 = sub i32 %108, -2006097625
  %111 = sub i32 %110, 1
  %112 = add i32 %111, -2006097625
  %113 = sub i32 %108, 1
  %114 = mul i32 %108, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %109, 10
  %118 = xor i1 %116, true
  %119 = xor i1 %117, true
  %120 = xor i1 true, true
  %121 = and i1 %118, true
  %122 = and i1 %116, %120
  %123 = and i1 %119, true
  %124 = and i1 %117, %120
  %125 = or i1 %121, %122
  %126 = or i1 %123, %124
  %127 = xor i1 %125, %126
  %128 = or i1 %118, %119
  %129 = xor i1 %128, true
  %130 = or i1 true, %120
  %131 = and i1 %129, %130
  %132 = or i1 %127, %131
  %133 = or i1 %116, %117
  %134 = select i1 %132, i32 -135760550, i32 37934
  store i32 %134, i32* %21
  br label %164

; <label>:135:                                    ; preds = %22
  %136 = load i32, i32* @x.378
  %137 = load i32, i32* @y.379
  %138 = sub i32 %136, 406551992
  %139 = sub i32 %138, 1
  %140 = add i32 %139, 406551992
  %141 = sub i32 %136, 1
  %142 = mul i32 %136, %140
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %137, 10
  %146 = and i1 %144, %145
  %147 = xor i1 %144, %145
  %148 = or i1 %146, %147
  %149 = or i1 %144, %145
  %150 = select i1 %148, i32 129124655, i32 37934
  store i32 %150, i32* %21
  br label %164

; <label>:151:                                    ; preds = %22
  %152 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %5
  ret %"class.__gnu_debug::_Error_formatter"* %152

; <label>:153:                                    ; preds = %22
  %154 = alloca %"class.__gnu_debug::_Error_formatter"*, align 8
  %155 = alloca %"struct.std::__cxx1998::_Bit_const_iterator"*, align 8
  %156 = alloca i8*, align 8
  %157 = alloca %"struct.__gnu_debug::_Error_formatter::_Parameter", align 8
  %158 = alloca %"struct.__gnu_debug::_Error_formatter::_Is_iterator", align 1
  store %"class.__gnu_debug::_Error_formatter"* %0, %"class.__gnu_debug::_Error_formatter"** %154, align 8
  store %"struct.std::__cxx1998::_Bit_const_iterator"* %1, %"struct.std::__cxx1998::_Bit_const_iterator"** %155, align 8
  store i8* %2, i8** %156, align 8
  %159 = load %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %154, align 8
  %160 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %159, i32 0, i32 3
  %161 = load i64, i64* %160, align 8
  %162 = icmp ult i64 %161, 9
  store i32 1374242650, i32* %21
  br label %164

; <label>:163:                                    ; preds = %22
  store i32 -135760550, i32* %21
  br label %164

; <label>:164:                                    ; preds = %163, %153, %135, %107, %88, %85, %45, %25, %24
  br label %22
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt14__copy_move_a2ILb0ENSt9__cxx199819_Bit_const_iteratorENS0_13_Bit_iteratorEET1_T0_S4_S3_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca { i64*, i32 }
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.380
  %11 = load i32, i32* @y.381
  %12 = add i32 %10, -144723553
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, -144723553
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -683671611, i32* %20
  br label %21

; <label>:21:                                     ; preds = %6, %225
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -683671611, label %24
    i32 1308705197, label %44
    i32 -2096937596, label %141
    i32 157545305, label %143
  ]

; <label>:23:                                     ; preds = %21
  br label %225

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 1308705197, i32 157545305
  store i32 %43, i32* %20
  br label %225

; <label>:44:                                     ; preds = %21
  %45 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  %46 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %47 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %48 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  %49 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %50 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %51 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %52 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %53 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  %54 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  %55 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %46 to { i64*, i32 }*
  %56 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %55, i32 0, i32 0
  store i64* %0, i64** %56, align 8
  %57 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %55, i32 0, i32 1
  store i32 %1, i32* %57, align 8
  %58 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %47 to { i64*, i32 }*
  %59 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %58, i32 0, i32 0
  store i64* %2, i64** %59, align 8
  %60 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %58, i32 0, i32 1
  store i32 %3, i32* %60, align 8
  %61 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %48 to { i64*, i32 }*
  %62 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %61, i32 0, i32 0
  store i64* %4, i64** %62, align 8
  %63 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %61, i32 0, i32 1
  store i32 %5, i32* %63, align 8
  %64 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %50 to i8*
  %65 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %64, i8* %65, i64 16, i32 8, i1 false)
  %66 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %50 to { i64*, i32 }*
  %67 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %66, i32 0, i32 0
  %68 = load i64*, i64** %67, align 8
  %69 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %66, i32 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = call { i64*, i32 } @_ZSt12__niter_baseINSt9__cxx199819_Bit_const_iteratorEENSt11_Niter_baseIT_E13iterator_typeES3_(i64* %68, i32 %70)
  %72 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %49 to { i64*, i32 }*
  %73 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %72, i32 0, i32 0
  %74 = extractvalue { i64*, i32 } %71, 0
  store i64* %74, i64** %73, align 8
  %75 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %72, i32 0, i32 1
  %76 = extractvalue { i64*, i32 } %71, 1
  store i32 %76, i32* %75, align 8
  %77 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %52 to i8*
  %78 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %77, i8* %78, i64 16, i32 8, i1 false)
  %79 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %52 to { i64*, i32 }*
  %80 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %79, i32 0, i32 0
  %81 = load i64*, i64** %80, align 8
  %82 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %79, i32 0, i32 1
  %83 = load i32, i32* %82, align 8
  %84 = call { i64*, i32 } @_ZSt12__niter_baseINSt9__cxx199819_Bit_const_iteratorEENSt11_Niter_baseIT_E13iterator_typeES3_(i64* %81, i32 %83)
  %85 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %51 to { i64*, i32 }*
  %86 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %85, i32 0, i32 0
  %87 = extractvalue { i64*, i32 } %84, 0
  store i64* %87, i64** %86, align 8
  %88 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %85, i32 0, i32 1
  %89 = extractvalue { i64*, i32 } %84, 1
  store i32 %89, i32* %88, align 8
  %90 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %54 to i8*
  %91 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %90, i8* %91, i64 16, i32 8, i1 false)
  %92 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %54 to { i64*, i32 }*
  %93 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %92, i32 0, i32 0
  %94 = load i64*, i64** %93, align 8
  %95 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %92, i32 0, i32 1
  %96 = load i32, i32* %95, align 8
  %97 = call { i64*, i32 } @_ZSt12__niter_baseINSt9__cxx199813_Bit_iteratorEENSt11_Niter_baseIT_E13iterator_typeES3_(i64* %94, i32 %96)
  %98 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %53 to { i64*, i32 }*
  %99 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %98, i32 0, i32 0
  %100 = extractvalue { i64*, i32 } %97, 0
  store i64* %100, i64** %99, align 8
  %101 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %98, i32 0, i32 1
  %102 = extractvalue { i64*, i32 } %97, 1
  store i32 %102, i32* %101, align 8
  %103 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %49 to { i64*, i32 }*
  %104 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %103, i32 0, i32 0
  %105 = load i64*, i64** %104, align 8
  %106 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %103, i32 0, i32 1
  %107 = load i32, i32* %106, align 8
  %108 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %51 to { i64*, i32 }*
  %109 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %108, i32 0, i32 0
  %110 = load i64*, i64** %109, align 8
  %111 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %108, i32 0, i32 1
  %112 = load i32, i32* %111, align 8
  %113 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %53 to { i64*, i32 }*
  %114 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %113, i32 0, i32 0
  %115 = load i64*, i64** %114, align 8
  %116 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %113, i32 0, i32 1
  %117 = load i32, i32* %116, align 8
  %118 = call { i64*, i32 } @_ZSt13__copy_move_aILb0ENSt9__cxx199819_Bit_const_iteratorENS0_13_Bit_iteratorEET1_T0_S4_S3_(i64* %105, i32 %107, i64* %110, i32 %112, i64* %115, i32 %117)
  %119 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %45 to { i64*, i32 }*
  %120 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %119, i32 0, i32 0
  %121 = extractvalue { i64*, i32 } %118, 0
  store i64* %121, i64** %120, align 8
  %122 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %119, i32 0, i32 1
  %123 = extractvalue { i64*, i32 } %118, 1
  store i32 %123, i32* %122, align 8
  %124 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %45 to { i64*, i32 }*
  %125 = load { i64*, i32 }, { i64*, i32 }* %124, align 8
  store { i64*, i32 } %125, { i64*, i32 }* %7
  %126 = load i32, i32* @x.380
  %127 = load i32, i32* @y.381
  %128 = sub i32 %126, -347322696
  %129 = sub i32 %128, 1
  %130 = add i32 %129, -347322696
  %131 = sub i32 %126, 1
  %132 = mul i32 %126, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %127, 10
  %136 = and i1 %134, %135
  %137 = xor i1 %134, %135
  %138 = or i1 %136, %137
  %139 = or i1 %134, %135
  %140 = select i1 %138, i32 -2096937596, i32 157545305
  store i32 %140, i32* %20
  br label %225

; <label>:141:                                    ; preds = %21
  %142 = load volatile { i64*, i32 }, { i64*, i32 }* %7
  ret { i64*, i32 } %142

; <label>:143:                                    ; preds = %21
  %144 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  %145 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %146 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %147 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  %148 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %149 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %150 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %151 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %152 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  %153 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  %154 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %145 to { i64*, i32 }*
  %155 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %154, i32 0, i32 0
  store i64* %0, i64** %155, align 8
  %156 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %154, i32 0, i32 1
  store i32 %1, i32* %156, align 8
  %157 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %146 to { i64*, i32 }*
  %158 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %157, i32 0, i32 0
  store i64* %2, i64** %158, align 8
  %159 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %157, i32 0, i32 1
  store i32 %3, i32* %159, align 8
  %160 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %147 to { i64*, i32 }*
  %161 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %160, i32 0, i32 0
  store i64* %4, i64** %161, align 8
  %162 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %160, i32 0, i32 1
  store i32 %5, i32* %162, align 8
  %163 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %149 to i8*
  %164 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %145 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %163, i8* %164, i64 16, i32 8, i1 false)
  %165 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %149 to { i64*, i32 }*
  %166 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %165, i32 0, i32 0
  %167 = load i64*, i64** %166, align 8
  %168 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %165, i32 0, i32 1
  %169 = load i32, i32* %168, align 8
  %170 = call { i64*, i32 } @_ZSt12__niter_baseINSt9__cxx199819_Bit_const_iteratorEENSt11_Niter_baseIT_E13iterator_typeES3_(i64* %167, i32 %169)
  %171 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %148 to { i64*, i32 }*
  %172 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %171, i32 0, i32 0
  %173 = extractvalue { i64*, i32 } %170, 0
  store i64* %173, i64** %172, align 8
  %174 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %171, i32 0, i32 1
  %175 = extractvalue { i64*, i32 } %170, 1
  store i32 %175, i32* %174, align 8
  %176 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %151 to i8*
  %177 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %146 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %176, i8* %177, i64 16, i32 8, i1 false)
  %178 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %151 to { i64*, i32 }*
  %179 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %178, i32 0, i32 0
  %180 = load i64*, i64** %179, align 8
  %181 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %178, i32 0, i32 1
  %182 = load i32, i32* %181, align 8
  %183 = call { i64*, i32 } @_ZSt12__niter_baseINSt9__cxx199819_Bit_const_iteratorEENSt11_Niter_baseIT_E13iterator_typeES3_(i64* %180, i32 %182)
  %184 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %150 to { i64*, i32 }*
  %185 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %184, i32 0, i32 0
  %186 = extractvalue { i64*, i32 } %183, 0
  store i64* %186, i64** %185, align 8
  %187 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %184, i32 0, i32 1
  %188 = extractvalue { i64*, i32 } %183, 1
  store i32 %188, i32* %187, align 8
  %189 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %153 to i8*
  %190 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %147 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %189, i8* %190, i64 16, i32 8, i1 false)
  %191 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %153 to { i64*, i32 }*
  %192 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %191, i32 0, i32 0
  %193 = load i64*, i64** %192, align 8
  %194 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %191, i32 0, i32 1
  %195 = load i32, i32* %194, align 8
  %196 = call { i64*, i32 } @_ZSt12__niter_baseINSt9__cxx199813_Bit_iteratorEENSt11_Niter_baseIT_E13iterator_typeES3_(i64* %193, i32 %195)
  %197 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %152 to { i64*, i32 }*
  %198 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %197, i32 0, i32 0
  %199 = extractvalue { i64*, i32 } %196, 0
  store i64* %199, i64** %198, align 8
  %200 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %197, i32 0, i32 1
  %201 = extractvalue { i64*, i32 } %196, 1
  store i32 %201, i32* %200, align 8
  %202 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %148 to { i64*, i32 }*
  %203 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %202, i32 0, i32 0
  %204 = load i64*, i64** %203, align 8
  %205 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %202, i32 0, i32 1
  %206 = load i32, i32* %205, align 8
  %207 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %150 to { i64*, i32 }*
  %208 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %207, i32 0, i32 0
  %209 = load i64*, i64** %208, align 8
  %210 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %207, i32 0, i32 1
  %211 = load i32, i32* %210, align 8
  %212 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %152 to { i64*, i32 }*
  %213 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %212, i32 0, i32 0
  %214 = load i64*, i64** %213, align 8
  %215 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %212, i32 0, i32 1
  %216 = load i32, i32* %215, align 8
  %217 = call { i64*, i32 } @_ZSt13__copy_move_aILb0ENSt9__cxx199819_Bit_const_iteratorENS0_13_Bit_iteratorEET1_T0_S4_S3_(i64* %204, i32 %206, i64* %209, i32 %211, i64* %214, i32 %216)
  %218 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %144 to { i64*, i32 }*
  %219 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %218, i32 0, i32 0
  %220 = extractvalue { i64*, i32 } %217, 0
  store i64* %220, i64** %219, align 8
  %221 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %218, i32 0, i32 1
  %222 = extractvalue { i64*, i32 } %217, 1
  store i32 %222, i32* %221, align 8
  %223 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %144 to { i64*, i32 }*
  %224 = load { i64*, i32 }, { i64*, i32 }* %223, align 8
  store i32 1308705197, i32* %20
  br label %225

; <label>:225:                                    ; preds = %143, %44, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZSt12__miter_baseINSt9__cxx199819_Bit_const_iteratorEENSt11_Miter_baseIT_E13iterator_typeES3_(i64*, i32) #4 comdat {
  %3 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %4 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %5 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %6 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %4 to { i64*, i32 }*
  %7 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %6, i32 0, i32 0
  store i64* %0, i64** %7, align 8
  %8 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %6, i32 0, i32 1
  store i32 %1, i32* %8, align 8
  %9 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %5 to i8*
  %10 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 16, i32 8, i1 false)
  %11 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %5 to { i64*, i32 }*
  %12 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %11, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %11, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = call { i64*, i32 } @_ZNSt10_Iter_baseINSt9__cxx199819_Bit_const_iteratorELb0EE7_S_baseES1_(i64* %13, i32 %15)
  %17 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %3 to { i64*, i32 }*
  %18 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 0
  %19 = extractvalue { i64*, i32 } %16, 0
  store i64* %19, i64** %18, align 8
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %17, i32 0, i32 1
  %21 = extractvalue { i64*, i32 } %16, 1
  store i32 %21, i32* %20, align 8
  %22 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %3 to { i64*, i32 }*
  %23 = load { i64*, i32 }, { i64*, i32 }* %22, align 8
  ret { i64*, i32 } %23
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN11__gnu_debug17__valid_range_auxINSt9__cxx199819_Bit_const_iteratorEEEbRKT_S5_St12__false_type(%"struct.std::__cxx1998::_Bit_const_iterator"* dereferenceable(16), %"struct.std::__cxx1998::_Bit_const_iterator"* dereferenceable(16)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.384
  %7 = load i32, i32* @y.385
  %8 = sub i32 %6, 878779485
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 878779485
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 2063905419, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %77
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 2063905419, label %20
    i32 602829949, label %40
    i32 629863745, label %65
    i32 -1775182726, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %77

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 602829949, i32 -1775182726
  store i32 %39, i32* %16
  br label %77

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::__false_type", align 1
  %42 = alloca %"struct.std::__cxx1998::_Bit_const_iterator"*, align 8
  %43 = alloca %"struct.std::__cxx1998::_Bit_const_iterator"*, align 8
  %44 = alloca %"struct.std::random_access_iterator_tag", align 1
  %45 = alloca %"struct.std::random_access_iterator_tag", align 1
  store %"struct.std::__cxx1998::_Bit_const_iterator"* %0, %"struct.std::__cxx1998::_Bit_const_iterator"** %42, align 8
  store %"struct.std::__cxx1998::_Bit_const_iterator"* %1, %"struct.std::__cxx1998::_Bit_const_iterator"** %43, align 8
  %46 = load %"struct.std::__cxx1998::_Bit_const_iterator"*, %"struct.std::__cxx1998::_Bit_const_iterator"** %42, align 8
  %47 = load %"struct.std::__cxx1998::_Bit_const_iterator"*, %"struct.std::__cxx1998::_Bit_const_iterator"** %43, align 8
  %48 = load %"struct.std::__cxx1998::_Bit_const_iterator"*, %"struct.std::__cxx1998::_Bit_const_iterator"** %42, align 8
  call void @_ZSt19__iterator_categoryINSt9__cxx199819_Bit_const_iteratorEENSt15iterator_traitsIT_E17iterator_categoryERKS3_(%"struct.std::__cxx1998::_Bit_const_iterator"* dereferenceable(16) %48)
  %49 = call zeroext i1 @_ZN11__gnu_debug18__valid_range_aux2INSt9__cxx199819_Bit_const_iteratorEEEbRKT_S5_St26random_access_iterator_tag(%"struct.std::__cxx1998::_Bit_const_iterator"* dereferenceable(16) %46, %"struct.std::__cxx1998::_Bit_const_iterator"* dereferenceable(16) %47)
  store i1 %49, i1* %3
  %50 = load i32, i32* @x.384
  %51 = load i32, i32* @y.385
  %52 = add i32 %50, 209356554
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 209356554
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 629863745, i32 -1775182726
  store i32 %64, i32* %16
  br label %77

; <label>:65:                                     ; preds = %17
  %66 = load volatile i1, i1* %3
  ret i1 %66

; <label>:67:                                     ; preds = %17
  %68 = alloca %"struct.std::__false_type", align 1
  %69 = alloca %"struct.std::__cxx1998::_Bit_const_iterator"*, align 8
  %70 = alloca %"struct.std::__cxx1998::_Bit_const_iterator"*, align 8
  %71 = alloca %"struct.std::random_access_iterator_tag", align 1
  %72 = alloca %"struct.std::random_access_iterator_tag", align 1
  store %"struct.std::__cxx1998::_Bit_const_iterator"* %0, %"struct.std::__cxx1998::_Bit_const_iterator"** %69, align 8
  store %"struct.std::__cxx1998::_Bit_const_iterator"* %1, %"struct.std::__cxx1998::_Bit_const_iterator"** %70, align 8
  %73 = load %"struct.std::__cxx1998::_Bit_const_iterator"*, %"struct.std::__cxx1998::_Bit_const_iterator"** %69, align 8
  %74 = load %"struct.std::__cxx1998::_Bit_const_iterator"*, %"struct.std::__cxx1998::_Bit_const_iterator"** %70, align 8
  %75 = load %"struct.std::__cxx1998::_Bit_const_iterator"*, %"struct.std::__cxx1998::_Bit_const_iterator"** %69, align 8
  call void @_ZSt19__iterator_categoryINSt9__cxx199819_Bit_const_iteratorEENSt15iterator_traitsIT_E17iterator_categoryERKS3_(%"struct.std::__cxx1998::_Bit_const_iterator"* dereferenceable(16) %75)
  %76 = call zeroext i1 @_ZN11__gnu_debug18__valid_range_aux2INSt9__cxx199819_Bit_const_iteratorEEEbRKT_S5_St26random_access_iterator_tag(%"struct.std::__cxx1998::_Bit_const_iterator"* dereferenceable(16) %73, %"struct.std::__cxx1998::_Bit_const_iterator"* dereferenceable(16) %74)
  store i32 602829949, i32* %16
  br label %77

; <label>:77:                                     ; preds = %67, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN11__gnu_debug18__valid_range_aux2INSt9__cxx199819_Bit_const_iteratorEEEbRKT_S5_St26random_access_iterator_tag(%"struct.std::__cxx1998::_Bit_const_iterator"* dereferenceable(16), %"struct.std::__cxx1998::_Bit_const_iterator"* dereferenceable(16)) #4 comdat {
  %3 = alloca %"struct.std::random_access_iterator_tag", align 1
  %4 = alloca %"struct.std::__cxx1998::_Bit_const_iterator"*, align 8
  %5 = alloca %"struct.std::__cxx1998::_Bit_const_iterator"*, align 8
  store %"struct.std::__cxx1998::_Bit_const_iterator"* %0, %"struct.std::__cxx1998::_Bit_const_iterator"** %4, align 8
  store %"struct.std::__cxx1998::_Bit_const_iterator"* %1, %"struct.std::__cxx1998::_Bit_const_iterator"** %5, align 8
  %6 = load %"struct.std::__cxx1998::_Bit_const_iterator"*, %"struct.std::__cxx1998::_Bit_const_iterator"** %5, align 8
  %7 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %6 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %8 = load %"struct.std::__cxx1998::_Bit_const_iterator"*, %"struct.std::__cxx1998::_Bit_const_iterator"** %4, align 8
  %9 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %8 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %10 = call i64 @_ZNSt9__cxx1998miERKNS_18_Bit_iterator_baseES2_(%"struct.std::__cxx1998::_Bit_iterator_base"* dereferenceable(16) %7, %"struct.std::__cxx1998::_Bit_iterator_base"* dereferenceable(16) %9)
  %11 = icmp sge i64 %10, 0
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt19__iterator_categoryINSt9__cxx199819_Bit_const_iteratorEENSt15iterator_traitsIT_E17iterator_categoryERKS3_(%"struct.std::__cxx1998::_Bit_const_iterator"* dereferenceable(16)) #4 comdat {
  %2 = alloca %"struct.std::random_access_iterator_tag", align 1
  %3 = alloca %"struct.std::__cxx1998::_Bit_const_iterator"*, align 8
  store %"struct.std::__cxx1998::_Bit_const_iterator"* %0, %"struct.std::__cxx1998::_Bit_const_iterator"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN11__gnu_debug16_Error_formatter10_ParameterC2INSt9__cxx199819_Bit_const_iteratorEEERKT_PKcNS0_12_Is_iteratorE(%"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.std::__cxx1998::_Bit_const_iterator"* dereferenceable(16), i8*) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.__gnu_debug::_Error_formatter::_Is_iterator", align 1
  %5 = alloca %"struct.__gnu_debug::_Error_formatter::_Parameter"*, align 8
  %6 = alloca %"struct.std::__cxx1998::_Bit_const_iterator"*, align 8
  %7 = alloca i8*, align 8
  store %"struct.__gnu_debug::_Error_formatter::_Parameter"* %0, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %5, align 8
  store %"struct.std::__cxx1998::_Bit_const_iterator"* %1, %"struct.std::__cxx1998::_Bit_const_iterator"** %6, align 8
  store i8* %2, i8** %7, align 8
  %8 = load %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %5, align 8
  %9 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %8, i32 0, i32 0
  store i32 1, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %8, i32 0, i32 1
  %11 = bitcast %union.anon* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* %11, i8 0, i64 48, i32 8, i1 false)
  %12 = load i8*, i8** %7, align 8
  %13 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %8, i32 0, i32 1
  %14 = bitcast %union.anon* %13 to %struct.anon*
  %15 = getelementptr inbounds %struct.anon, %struct.anon* %14, i32 0, i32 0
  store i8* %12, i8** %15, align 8
  %16 = load %"struct.std::__cxx1998::_Bit_const_iterator"*, %"struct.std::__cxx1998::_Bit_const_iterator"** %6, align 8
  %17 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %16 to i8*
  %18 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %8, i32 0, i32 1
  %19 = bitcast %union.anon* %18 to %struct.anon*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %19, i32 0, i32 1
  store i8* %17, i8** %20, align 8
  %21 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %8, i32 0, i32 1
  %22 = bitcast %union.anon* %21 to %struct.anon*
  %23 = getelementptr inbounds %struct.anon, %struct.anon* %22, i32 0, i32 2
  store %"class.std::type_info"* bitcast ({ i8*, i8*, i8* }* @_ZTINSt9__cxx199819_Bit_const_iteratorE to %"class.std::type_info"*), %"class.std::type_info"** %23, align 8
  %24 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %8, i32 0, i32 1
  %25 = bitcast %union.anon* %24 to %struct.anon*
  %26 = getelementptr inbounds %struct.anon, %struct.anon* %25, i32 0, i32 3
  store i32 0, i32* %26, align 8
  %27 = load %"struct.std::__cxx1998::_Bit_const_iterator"*, %"struct.std::__cxx1998::_Bit_const_iterator"** %6, align 8
  %28 = call zeroext i1 @_ZN11__gnu_debug16__check_singularINSt9__cxx199819_Bit_const_iteratorEEEbRKT_(%"struct.std::__cxx1998::_Bit_const_iterator"* dereferenceable(16) %27)
  %29 = select i1 %28, i32 1, i32 0
  %30 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %8, i32 0, i32 1
  %31 = bitcast %union.anon* %30 to %struct.anon*
  %32 = getelementptr inbounds %struct.anon, %struct.anon* %31, i32 0, i32 4
  store i32 %29, i32* %32, align 4
  %33 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %8, i32 0, i32 1
  %34 = bitcast %union.anon* %33 to %struct.anon*
  %35 = getelementptr inbounds %struct.anon, %struct.anon* %34, i32 0, i32 5
  store i8* null, i8** %35, align 8
  %36 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %8, i32 0, i32 1
  %37 = bitcast %union.anon* %36 to %struct.anon*
  %38 = getelementptr inbounds %struct.anon, %struct.anon* %37, i32 0, i32 6
  store %"class.std::type_info"* null, %"class.std::type_info"** %38, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN11__gnu_debug16__check_singularINSt9__cxx199819_Bit_const_iteratorEEEbRKT_(%"struct.std::__cxx1998::_Bit_const_iterator"* dereferenceable(16)) #4 comdat {
  %2 = alloca %"struct.std::__cxx1998::_Bit_const_iterator"*, align 8
  store %"struct.std::__cxx1998::_Bit_const_iterator"* %0, %"struct.std::__cxx1998::_Bit_const_iterator"** %2, align 8
  %3 = load %"struct.std::__cxx1998::_Bit_const_iterator"*, %"struct.std::__cxx1998::_Bit_const_iterator"** %2, align 8
  %4 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %3 to i8*
  %5 = call zeroext i1 @_ZN11__gnu_debug20__check_singular_auxEPKv(i8* %4)
  ret i1 %5
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt13__copy_move_aILb0ENSt9__cxx199819_Bit_const_iteratorENS0_13_Bit_iteratorEET1_T0_S4_S3_(i64*, i32, i64*, i32, i64*, i32) #0 comdat {
  %7 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  %8 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %9 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %10 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  %11 = alloca i8, align 1
  %12 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %13 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %14 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  %15 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %8 to { i64*, i32 }*
  %16 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 0
  store i64* %0, i64** %16, align 8
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %15, i32 0, i32 1
  store i32 %1, i32* %17, align 8
  %18 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %9 to { i64*, i32 }*
  %19 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 0
  store i64* %2, i64** %19, align 8
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %18, i32 0, i32 1
  store i32 %3, i32* %20, align 8
  %21 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %10 to { i64*, i32 }*
  %22 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %21, i32 0, i32 0
  store i64* %4, i64** %22, align 8
  %23 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %21, i32 0, i32 1
  store i32 %5, i32* %23, align 8
  store i8 0, i8* %11, align 1
  %24 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %12 to i8*
  %25 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 16, i32 8, i1 false)
  %26 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %13 to i8*
  %27 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 16, i32 8, i1 false)
  %28 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %14 to i8*
  %29 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 16, i32 8, i1 false)
  %30 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %12 to { i64*, i32 }*
  %31 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %30, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %13 to { i64*, i32 }*
  %36 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %35, i32 0, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %35, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %14 to { i64*, i32 }*
  %41 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %40, i32 0, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %40, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = call { i64*, i32 } @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mINSt9__cxx199819_Bit_const_iteratorENS3_13_Bit_iteratorEEET0_T_S7_S6_(i64* %32, i32 %34, i64* %37, i32 %39, i64* %42, i32 %44)
  %46 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %7 to { i64*, i32 }*
  %47 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 0
  %48 = extractvalue { i64*, i32 } %45, 0
  store i64* %48, i64** %47, align 8
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %46, i32 0, i32 1
  %50 = extractvalue { i64*, i32 } %45, 1
  store i32 %50, i32* %49, align 8
  %51 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %7 to { i64*, i32 }*
  %52 = load { i64*, i32 }, { i64*, i32 }* %51, align 8
  ret { i64*, i32 } %52
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt12__niter_baseINSt9__cxx199819_Bit_const_iteratorEENSt11_Niter_baseIT_E13iterator_typeES3_(i64*, i32) #0 comdat {
  %3 = alloca { i64*, i32 }
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.396
  %7 = load i32, i32* @y.397
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1098186132, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %100
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1098186132, label %19
    i32 -223057577, label %39
    i32 -1365933324, label %76
    i32 1284930622, label %78
  ]

; <label>:18:                                     ; preds = %16
  br label %100

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -223057577, i32 1284930622
  store i32 %38, i32* %15
  br label %100

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %41 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %42 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %43 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %41 to { i64*, i32 }*
  %44 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %43, i32 0, i32 0
  store i64* %0, i64** %44, align 8
  %45 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %43, i32 0, i32 1
  store i32 %1, i32* %45, align 8
  %46 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %42 to i8*
  %47 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 16, i32 8, i1 false)
  %48 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %42 to { i64*, i32 }*
  %49 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %48, i32 0, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %48, i32 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = call { i64*, i32 } @_ZNSt10_Iter_baseINSt9__cxx199819_Bit_const_iteratorELb0EE7_S_baseES1_(i64* %50, i32 %52)
  %54 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %40 to { i64*, i32 }*
  %55 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 0
  %56 = extractvalue { i64*, i32 } %53, 0
  store i64* %56, i64** %55, align 8
  %57 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %54, i32 0, i32 1
  %58 = extractvalue { i64*, i32 } %53, 1
  store i32 %58, i32* %57, align 8
  %59 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %40 to { i64*, i32 }*
  %60 = load { i64*, i32 }, { i64*, i32 }* %59, align 8
  store { i64*, i32 } %60, { i64*, i32 }* %3
  %61 = load i32, i32* @x.396
  %62 = load i32, i32* @y.397
  %63 = sub i32 %61, -335618885
  %64 = sub i32 %63, 1
  %65 = add i32 %64, -335618885
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = and i1 %69, %70
  %72 = xor i1 %69, %70
  %73 = or i1 %71, %72
  %74 = or i1 %69, %70
  %75 = select i1 %73, i32 -1365933324, i32 1284930622
  store i32 %75, i32* %15
  br label %100

; <label>:76:                                     ; preds = %16
  %77 = load volatile { i64*, i32 }, { i64*, i32 }* %3
  ret { i64*, i32 } %77

; <label>:78:                                     ; preds = %16
  %79 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %80 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %81 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %82 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %80 to { i64*, i32 }*
  %83 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %82, i32 0, i32 0
  store i64* %0, i64** %83, align 8
  %84 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %82, i32 0, i32 1
  store i32 %1, i32* %84, align 8
  %85 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %81 to i8*
  %86 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 16, i32 8, i1 false)
  %87 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %81 to { i64*, i32 }*
  %88 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %87, i32 0, i32 0
  %89 = load i64*, i64** %88, align 8
  %90 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %87, i32 0, i32 1
  %91 = load i32, i32* %90, align 8
  %92 = call { i64*, i32 } @_ZNSt10_Iter_baseINSt9__cxx199819_Bit_const_iteratorELb0EE7_S_baseES1_(i64* %89, i32 %91)
  %93 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %79 to { i64*, i32 }*
  %94 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %93, i32 0, i32 0
  %95 = extractvalue { i64*, i32 } %92, 0
  store i64* %95, i64** %94, align 8
  %96 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %93, i32 0, i32 1
  %97 = extractvalue { i64*, i32 } %92, 1
  store i32 %97, i32* %96, align 8
  %98 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %79 to { i64*, i32 }*
  %99 = load { i64*, i32 }, { i64*, i32 }* %98, align 8
  store i32 -223057577, i32* %15
  br label %100

; <label>:100:                                    ; preds = %78, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZSt12__niter_baseINSt9__cxx199813_Bit_iteratorEENSt11_Niter_baseIT_E13iterator_typeES3_(i64*, i32) #0 comdat {
  %3 = alloca { i64*, i32 }
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.398
  %7 = load i32, i32* @y.399
  %8 = sub i32 %6, 1717252705
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1717252705
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -2051167382, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %101
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -2051167382, label %20
    i32 -1554850046, label %40
    i32 1136934800, label %77
    i32 -1227114746, label %79
  ]

; <label>:19:                                     ; preds = %17
  br label %101

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1554850046, i32 -1227114746
  store i32 %39, i32* %16
  br label %101

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  %42 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  %43 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  %44 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %42 to { i64*, i32 }*
  %45 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %44, i32 0, i32 0
  store i64* %0, i64** %45, align 8
  %46 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %44, i32 0, i32 1
  store i32 %1, i32* %46, align 8
  %47 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %43 to i8*
  %48 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 16, i32 8, i1 false)
  %49 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %43 to { i64*, i32 }*
  %50 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %49, i32 0, i32 0
  %51 = load i64*, i64** %50, align 8
  %52 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %49, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = call { i64*, i32 } @_ZNSt10_Iter_baseINSt9__cxx199813_Bit_iteratorELb0EE7_S_baseES1_(i64* %51, i32 %53)
  %55 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %41 to { i64*, i32 }*
  %56 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %55, i32 0, i32 0
  %57 = extractvalue { i64*, i32 } %54, 0
  store i64* %57, i64** %56, align 8
  %58 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %55, i32 0, i32 1
  %59 = extractvalue { i64*, i32 } %54, 1
  store i32 %59, i32* %58, align 8
  %60 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %41 to { i64*, i32 }*
  %61 = load { i64*, i32 }, { i64*, i32 }* %60, align 8
  store { i64*, i32 } %61, { i64*, i32 }* %3
  %62 = load i32, i32* @x.398
  %63 = load i32, i32* @y.399
  %64 = add i32 %62, 2001282923
  %65 = sub i32 %64, 1
  %66 = sub i32 %65, 2001282923
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = and i1 %70, %71
  %73 = xor i1 %70, %71
  %74 = or i1 %72, %73
  %75 = or i1 %70, %71
  %76 = select i1 %74, i32 1136934800, i32 -1227114746
  store i32 %76, i32* %16
  br label %101

; <label>:77:                                     ; preds = %17
  %78 = load volatile { i64*, i32 }, { i64*, i32 }* %3
  ret { i64*, i32 } %78

; <label>:79:                                     ; preds = %17
  %80 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  %81 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  %82 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  %83 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %81 to { i64*, i32 }*
  %84 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %83, i32 0, i32 0
  store i64* %0, i64** %84, align 8
  %85 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %83, i32 0, i32 1
  store i32 %1, i32* %85, align 8
  %86 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %82 to i8*
  %87 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %81 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 16, i32 8, i1 false)
  %88 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %82 to { i64*, i32 }*
  %89 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %88, i32 0, i32 0
  %90 = load i64*, i64** %89, align 8
  %91 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %88, i32 0, i32 1
  %92 = load i32, i32* %91, align 8
  %93 = call { i64*, i32 } @_ZNSt10_Iter_baseINSt9__cxx199813_Bit_iteratorELb0EE7_S_baseES1_(i64* %90, i32 %92)
  %94 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %80 to { i64*, i32 }*
  %95 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %94, i32 0, i32 0
  %96 = extractvalue { i64*, i32 } %93, 0
  store i64* %96, i64** %95, align 8
  %97 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %94, i32 0, i32 1
  %98 = extractvalue { i64*, i32 } %93, 1
  store i32 %98, i32* %97, align 8
  %99 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %80 to { i64*, i32 }*
  %100 = load { i64*, i32 }, { i64*, i32 }* %99, align 8
  store i32 -1554850046, i32* %16
  br label %101

; <label>:101:                                    ; preds = %79, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i32 } @_ZNSt11__copy_moveILb0ELb0ESt26random_access_iterator_tagE8__copy_mINSt9__cxx199819_Bit_const_iteratorENS3_13_Bit_iteratorEEET0_T_S7_S6_(i64*, i32, i64*, i32, i64*, i32) #0 comdat align 2 {
  %7 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  %8 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %9 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %10 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  %11 = alloca i64, align 8
  %12 = alloca %"struct.std::__cxx1998::_Bit_reference", align 8
  %13 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %8 to { i64*, i32 }*
  %14 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %13, i32 0, i32 0
  store i64* %0, i64** %14, align 8
  %15 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %13, i32 0, i32 1
  store i32 %1, i32* %15, align 8
  %16 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %9 to { i64*, i32 }*
  %17 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %16, i32 0, i32 0
  store i64* %2, i64** %17, align 8
  %18 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %16, i32 0, i32 1
  store i32 %3, i32* %18, align 8
  %19 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %10 to { i64*, i32 }*
  %20 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %19, i32 0, i32 0
  store i64* %4, i64** %20, align 8
  %21 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %19, i32 0, i32 1
  store i32 %5, i32* %21, align 8
  %22 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %9 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %23 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %8 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %24 = call i64 @_ZNSt9__cxx1998miERKNS_18_Bit_iterator_baseES2_(%"struct.std::__cxx1998::_Bit_iterator_base"* dereferenceable(16) %22, %"struct.std::__cxx1998::_Bit_iterator_base"* dereferenceable(16) %23)
  store i64 %24, i64* %11, align 8
  %25 = alloca i32
  store i32 1814644411, i32* %25
  br label %26

; <label>:26:                                     ; preds = %6, %54
  %27 = load i32, i32* %25
  switch i32 %27, label %28 [
    i32 1814644411, label %29
    i32 418168792, label %33
    i32 310360610, label %44
    i32 1953012580, label %49
  ]

; <label>:28:                                     ; preds = %26
  br label %54

; <label>:29:                                     ; preds = %26
  %30 = load i64, i64* %11, align 8
  %31 = icmp sgt i64 %30, 0
  %32 = select i1 %31, i32 418168792, i32 1953012580
  store i32 %32, i32* %25
  br label %54

; <label>:33:                                     ; preds = %26
  %34 = call zeroext i1 @_ZNKSt9__cxx199819_Bit_const_iteratordeEv(%"struct.std::__cxx1998::_Bit_const_iterator"* %8)
  %35 = call { i64*, i64 } @_ZNKSt9__cxx199813_Bit_iteratordeEv(%"struct.std::__cxx1998::_Bit_iterator"* %10)
  %36 = bitcast %"struct.std::__cxx1998::_Bit_reference"* %12 to { i64*, i64 }*
  %37 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %36, i32 0, i32 0
  %38 = extractvalue { i64*, i64 } %35, 0
  store i64* %38, i64** %37, align 8
  %39 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %36, i32 0, i32 1
  %40 = extractvalue { i64*, i64 } %35, 1
  store i64 %40, i64* %39, align 8
  %41 = call dereferenceable(16) %"struct.std::__cxx1998::_Bit_reference"* @_ZNSt9__cxx199814_Bit_referenceaSEb(%"struct.std::__cxx1998::_Bit_reference"* %12, i1 zeroext %34) #3
  %42 = call dereferenceable(16) %"struct.std::__cxx1998::_Bit_const_iterator"* @_ZNSt9__cxx199819_Bit_const_iteratorppEv(%"struct.std::__cxx1998::_Bit_const_iterator"* %8)
  %43 = call dereferenceable(16) %"struct.std::__cxx1998::_Bit_iterator"* @_ZNSt9__cxx199813_Bit_iteratorppEv(%"struct.std::__cxx1998::_Bit_iterator"* %10)
  store i32 310360610, i32* %25
  br label %54

; <label>:44:                                     ; preds = %26
  %45 = load i64, i64* %11, align 8
  %46 = sub i64 0, -1
  %47 = sub i64 %45, %46
  %48 = add nsw i64 %45, -1
  store i64 %47, i64* %11, align 8
  store i32 1814644411, i32* %25
  br label %54

; <label>:49:                                     ; preds = %26
  %50 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %7 to i8*
  %51 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 16, i32 8, i1 false)
  %52 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %7 to { i64*, i32 }*
  %53 = load { i64*, i32 }, { i64*, i32 }* %52, align 8
  ret { i64*, i32 } %53

; <label>:54:                                     ; preds = %44, %33, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNKSt9__cxx199819_Bit_const_iteratordeEv(%"struct.std::__cxx1998::_Bit_const_iterator"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::__cxx1998::_Bit_const_iterator"*, align 8
  %3 = alloca %"struct.std::__cxx1998::_Bit_reference", align 8
  store %"struct.std::__cxx1998::_Bit_const_iterator"* %0, %"struct.std::__cxx1998::_Bit_const_iterator"** %2, align 8
  %4 = load %"struct.std::__cxx1998::_Bit_const_iterator"*, %"struct.std::__cxx1998::_Bit_const_iterator"** %2, align 8
  %5 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %4 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %6 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_iterator_base", %"struct.std::__cxx1998::_Bit_iterator_base"* %5, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %4 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %9 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_iterator_base", %"struct.std::__cxx1998::_Bit_iterator_base"* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = shl i64 1, %11
  call void @_ZNSt9__cxx199814_Bit_referenceC2EPmm(%"struct.std::__cxx1998::_Bit_reference"* %3, i64* %7, i64 %12)
  %13 = call zeroext i1 @_ZNKSt9__cxx199814_Bit_referencecvbEv(%"struct.std::__cxx1998::_Bit_reference"* %3) #3
  ret i1 %13
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i64 } @_ZNKSt9__cxx199813_Bit_iteratordeEv(%"struct.std::__cxx1998::_Bit_iterator"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::__cxx1998::_Bit_reference", align 8
  %3 = alloca %"struct.std::__cxx1998::_Bit_iterator"*, align 8
  store %"struct.std::__cxx1998::_Bit_iterator"* %0, %"struct.std::__cxx1998::_Bit_iterator"** %3, align 8
  %4 = load %"struct.std::__cxx1998::_Bit_iterator"*, %"struct.std::__cxx1998::_Bit_iterator"** %3, align 8
  %5 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %4 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %6 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_iterator_base", %"struct.std::__cxx1998::_Bit_iterator_base"* %5, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %4 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %9 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_iterator_base", %"struct.std::__cxx1998::_Bit_iterator_base"* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = shl i64 1, %11
  call void @_ZNSt9__cxx199814_Bit_referenceC2EPmm(%"struct.std::__cxx1998::_Bit_reference"* %2, i64* %7, i64 %12)
  %13 = bitcast %"struct.std::__cxx1998::_Bit_reference"* %2 to { i64*, i64 }*
  %14 = load { i64*, i64 }, { i64*, i64 }* %13, align 8
  ret { i64*, i64 } %14
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(16) %"struct.std::__cxx1998::_Bit_const_iterator"* @_ZNSt9__cxx199819_Bit_const_iteratorppEv(%"struct.std::__cxx1998::_Bit_const_iterator"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::__cxx1998::_Bit_const_iterator"*, align 8
  store %"struct.std::__cxx1998::_Bit_const_iterator"* %0, %"struct.std::__cxx1998::_Bit_const_iterator"** %2, align 8
  %3 = load %"struct.std::__cxx1998::_Bit_const_iterator"*, %"struct.std::__cxx1998::_Bit_const_iterator"** %2, align 8
  %4 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %3 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  call void @_ZNSt9__cxx199818_Bit_iterator_base10_M_bump_upEv(%"struct.std::__cxx1998::_Bit_iterator_base"* %4)
  ret %"struct.std::__cxx1998::_Bit_const_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::__cxx1998::_Bit_iterator"* @_ZNSt9__cxx199813_Bit_iteratorppEv(%"struct.std::__cxx1998::_Bit_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::__cxx1998::_Bit_iterator"*, align 8
  store %"struct.std::__cxx1998::_Bit_iterator"* %0, %"struct.std::__cxx1998::_Bit_iterator"** %2, align 8
  %3 = load %"struct.std::__cxx1998::_Bit_iterator"*, %"struct.std::__cxx1998::_Bit_iterator"** %2, align 8
  %4 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %3 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  call void @_ZNSt9__cxx199818_Bit_iterator_base10_M_bump_upEv(%"struct.std::__cxx1998::_Bit_iterator_base"* %4)
  ret %"struct.std::__cxx1998::_Bit_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt9__cxx199814_Bit_referenceC2EPmm(%"struct.std::__cxx1998::_Bit_reference"*, i64*, i64) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::__cxx1998::_Bit_reference"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::__cxx1998::_Bit_reference"* %0, %"struct.std::__cxx1998::_Bit_reference"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"struct.std::__cxx1998::_Bit_reference"*, %"struct.std::__cxx1998::_Bit_reference"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_reference", %"struct.std::__cxx1998::_Bit_reference"* %7, i32 0, i32 0
  %9 = load i64*, i64** %5, align 8
  store i64* %9, i64** %8, align 8
  %10 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_reference", %"struct.std::__cxx1998::_Bit_reference"* %7, i32 0, i32 1
  %11 = load i64, i64* %6, align 8
  store i64 %11, i64* %10, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt9__cxx199818_Bit_iterator_base10_M_bump_upEv(%"struct.std::__cxx1998::_Bit_iterator_base"*) #4 comdat align 2 {
  %2 = alloca i32
  %3 = alloca %"struct.std::__cxx1998::_Bit_iterator_base"*
  %4 = alloca %"struct.std::__cxx1998::_Bit_iterator_base"*, align 8
  store %"struct.std::__cxx1998::_Bit_iterator_base"* %0, %"struct.std::__cxx1998::_Bit_iterator_base"** %4, align 8
  %5 = load %"struct.std::__cxx1998::_Bit_iterator_base"*, %"struct.std::__cxx1998::_Bit_iterator_base"** %4, align 8
  store %"struct.std::__cxx1998::_Bit_iterator_base"* %5, %"struct.std::__cxx1998::_Bit_iterator_base"** %3
  %6 = load volatile %"struct.std::__cxx1998::_Bit_iterator_base"*, %"struct.std::__cxx1998::_Bit_iterator_base"** %3
  %7 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_iterator_base", %"struct.std::__cxx1998::_Bit_iterator_base"* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  store i32 %8, i32* %2
  %9 = load volatile i32, i32* %2
  %10 = sub i32 0, %9
  %11 = sub i32 0, 1
  %12 = add i32 %10, %11
  %13 = sub i32 0, %12
  %14 = add i32 %9, 1
  store i32 %13, i32* %7, align 8
  %15 = alloca i32
  store i32 249102899, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %31
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 249102899, label %19
    i32 -1489039067, label %23
    i32 -176226540, label %30
  ]

; <label>:18:                                     ; preds = %16
  br label %31

; <label>:19:                                     ; preds = %16
  %20 = load volatile i32, i32* %2
  %21 = icmp eq i32 %20, 63
  %22 = select i1 %21, i32 -1489039067, i32 -176226540
  store i32 %22, i32* %15
  br label %31

; <label>:23:                                     ; preds = %16
  %24 = load volatile %"struct.std::__cxx1998::_Bit_iterator_base"*, %"struct.std::__cxx1998::_Bit_iterator_base"** %3
  %25 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_iterator_base", %"struct.std::__cxx1998::_Bit_iterator_base"* %24, i32 0, i32 1
  store i32 0, i32* %25, align 8
  %26 = load volatile %"struct.std::__cxx1998::_Bit_iterator_base"*, %"struct.std::__cxx1998::_Bit_iterator_base"** %3
  %27 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_iterator_base", %"struct.std::__cxx1998::_Bit_iterator_base"* %26, i32 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds i64, i64* %28, i32 1
  store i64* %29, i64** %27, align 8
  store i32 -176226540, i32* %15
  br label %31

; <label>:30:                                     ; preds = %16
  ret void

; <label>:31:                                     ; preds = %23, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZNSt10_Iter_baseINSt9__cxx199819_Bit_const_iteratorELb0EE7_S_baseES1_(i64*, i32) #4 comdat align 2 {
  %3 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %4 = alloca %"struct.std::__cxx1998::_Bit_const_iterator", align 8
  %5 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %4 to { i64*, i32 }*
  %6 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %5, i32 0, i32 0
  store i64* %0, i64** %6, align 8
  %7 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %5, i32 0, i32 1
  store i32 %1, i32* %7, align 8
  %8 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %3 to i8*
  %9 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 16, i32 8, i1 false)
  %10 = bitcast %"struct.std::__cxx1998::_Bit_const_iterator"* %3 to { i64*, i32 }*
  %11 = load { i64*, i32 }, { i64*, i32 }* %10, align 8
  ret { i64*, i32 } %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i64*, i32 } @_ZNSt10_Iter_baseINSt9__cxx199813_Bit_iteratorELb0EE7_S_baseES1_(i64*, i32) #4 comdat align 2 {
  %3 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  %4 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  %5 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %4 to { i64*, i32 }*
  %6 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %5, i32 0, i32 0
  store i64* %0, i64** %6, align 8
  %7 = getelementptr inbounds { i64*, i32 }, { i64*, i32 }* %5, i32 0, i32 1
  store i32 %1, i32* %7, align 8
  %8 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %3 to i8*
  %9 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 16, i32 8, i1 false)
  %10 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %3 to { i64*, i32 }*
  %11 = load { i64*, i32 }, { i64*, i32 }* %10, align 8
  ret { i64*, i32 } %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug12_Safe_vectorINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEENSt9__cxx19986vectorIS4_S5_EEE29_M_update_guaranteed_capacityEv(%"class.__gnu_debug::_Safe_vector.20"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.418
  %3 = load i32, i32* @y.419
  %4 = add i32 %2, -815129385
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -815129385
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %96

; <label>:16:                                     ; preds = %1, %96
  %17 = alloca %"class.__gnu_debug::_Safe_vector.20"*, align 8
  store %"class.__gnu_debug::_Safe_vector.20"* %0, %"class.__gnu_debug::_Safe_vector.20"** %17, align 8
  %18 = load %"class.__gnu_debug::_Safe_vector.20"*, %"class.__gnu_debug::_Safe_vector.20"** %17, align 8
  %19 = load i32, i32* @x.418
  %20 = load i32, i32* @y.419
  %21 = sub i32 %19, -287088263
  %22 = sub i32 %21, 1
  %23 = add i32 %22, -287088263
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 false, true
  %32 = and i1 %29, false
  %33 = and i1 %27, %31
  %34 = and i1 %30, false
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 false, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  br i1 %43, label %45, label %96

; <label>:45:                                     ; preds = %16
  %46 = invoke dereferenceable(56) %"class.std::__debug::vector.0"* @_ZNK11__gnu_debug12_Safe_vectorINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEENSt9__cxx19986vectorIS4_S5_EEE6_M_seqEv(%"class.__gnu_debug::_Safe_vector.20"* %18)
          to label %47 unwind label %93

; <label>:47:                                     ; preds = %45
  %48 = load i32, i32* @x.418
  %49 = load i32, i32* @y.419
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  br i1 %59, label %61, label %99

; <label>:61:                                     ; preds = %47, %99
  %62 = bitcast %"class.std::__debug::vector.0"* %46 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 24
  %64 = bitcast i8* %63 to %"class.std::__cxx1998::vector.5"*
  %65 = call i64 @_ZNKSt9__cxx19986vectorINSt7__debug6vectorIbSaIbEEESaIS4_EE4sizeEv(%"class.std::__cxx1998::vector.5"* %64) #3
  %66 = getelementptr inbounds %"class.__gnu_debug::_Safe_vector.20", %"class.__gnu_debug::_Safe_vector.20"* %18, i32 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = icmp ugt i64 %65, %67
  %69 = load i32, i32* @x.418
  %70 = load i32, i32* @y.419
  %71 = sub i32 %69, -1451433082
  %72 = sub i32 %71, 1
  %73 = add i32 %72, -1451433082
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  br i1 %81, label %83, label %99

; <label>:83:                                     ; preds = %61
  br i1 %68, label %84, label %92

; <label>:84:                                     ; preds = %83
  %85 = invoke dereferenceable(56) %"class.std::__debug::vector.0"* @_ZNK11__gnu_debug12_Safe_vectorINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEENSt9__cxx19986vectorIS4_S5_EEE6_M_seqEv(%"class.__gnu_debug::_Safe_vector.20"* %18)
          to label %86 unwind label %93

; <label>:86:                                     ; preds = %84
  %87 = bitcast %"class.std::__debug::vector.0"* %85 to i8*
  %88 = getelementptr inbounds i8, i8* %87, i64 24
  %89 = bitcast i8* %88 to %"class.std::__cxx1998::vector.5"*
  %90 = call i64 @_ZNKSt9__cxx19986vectorINSt7__debug6vectorIbSaIbEEESaIS4_EE4sizeEv(%"class.std::__cxx1998::vector.5"* %89) #3
  %91 = getelementptr inbounds %"class.__gnu_debug::_Safe_vector.20", %"class.__gnu_debug::_Safe_vector.20"* %18, i32 0, i32 0
  store i64 %90, i64* %91, align 8
  br label %92

; <label>:92:                                     ; preds = %86, %83
  ret void

; <label>:93:                                     ; preds = %84, %45
  %94 = landingpad { i8*, i32 }
          catch i8* null
  %95 = extractvalue { i8*, i32 } %94, 0
  call void @__clang_call_terminate(i8* %95) #11
  unreachable

; <label>:96:                                     ; preds = %16, %1
  %97 = alloca %"class.__gnu_debug::_Safe_vector.20"*, align 8
  store %"class.__gnu_debug::_Safe_vector.20"* %0, %"class.__gnu_debug::_Safe_vector.20"** %97, align 8
  %98 = load %"class.__gnu_debug::_Safe_vector.20"*, %"class.__gnu_debug::_Safe_vector.20"** %97, align 8
  br label %16

; <label>:99:                                     ; preds = %61, %47
  %100 = bitcast %"class.std::__debug::vector.0"* %46 to i8*
  %101 = getelementptr inbounds i8, i8* %100, i64 24
  %102 = bitcast i8* %101 to %"class.std::__cxx1998::vector.5"*
  %103 = call i64 @_ZNKSt9__cxx19986vectorINSt7__debug6vectorIbSaIbEEESaIS4_EE4sizeEv(%"class.std::__cxx1998::vector.5"* %102) #3
  %104 = getelementptr inbounds %"class.__gnu_debug::_Safe_vector.20", %"class.__gnu_debug::_Safe_vector.20"* %18, i32 0, i32 0
  %105 = load i64, i64* %104, align 8
  %106 = icmp ugt i64 %103, %105
  br label %61
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(56) %"class.std::__debug::vector.0"* @_ZNK11__gnu_debug12_Safe_vectorINSt7__debug6vectorINS2_IbSaIbEEESaIS4_EEENSt9__cxx19986vectorIS4_S5_EEE6_M_seqEv(%"class.__gnu_debug::_Safe_vector.20"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_debug::_Safe_vector.20"*, align 8
  store %"class.__gnu_debug::_Safe_vector.20"* %0, %"class.__gnu_debug::_Safe_vector.20"** %2, align 8
  %3 = load %"class.__gnu_debug::_Safe_vector.20"*, %"class.__gnu_debug::_Safe_vector.20"** %2, align 8
  %4 = bitcast %"class.__gnu_debug::_Safe_vector.20"* %3 to i8*
  %5 = getelementptr i8, i8* %4, i64 -48
  %6 = bitcast i8* %5 to %"class.std::__debug::vector.0"*
  ret %"class.std::__debug::vector.0"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt9__cxx19986vectorINSt7__debug6vectorIbSaIbEEESaIS4_EE4sizeEv(%"class.std::__cxx1998::vector.5"*) #4 comdat align 2 {
  %2 = alloca %"class.std::__cxx1998::vector.5"*, align 8
  store %"class.std::__cxx1998::vector.5"* %0, %"class.std::__cxx1998::vector.5"** %2, align 8
  %3 = load %"class.std::__cxx1998::vector.5"*, %"class.std::__cxx1998::vector.5"** %2, align 8
  %4 = bitcast %"class.std::__cxx1998::vector.5"* %3 to %"struct.std::__cxx1998::_Vector_base.6"*
  %5 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base.6", %"struct.std::__cxx1998::_Vector_base.6"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %6, align 8
  %8 = bitcast %"class.std::__cxx1998::vector.5"* %3 to %"struct.std::__cxx1998::_Vector_base.6"*
  %9 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base.6", %"struct.std::__cxx1998::_Vector_base.6"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %10, align 8
  %12 = ptrtoint %"class.std::__debug::vector.10"* %7 to i64
  %13 = ptrtoint %"class.std::__debug::vector.10"* %11 to i64
  %14 = add i64 %12, -3798631295215163914
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, -3798631295215163914
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 72
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_sequenceINSt7__debug6vectorINS3_IbSaIbEEESaIS5_EEEEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"*, %"class.std::__debug::vector.0"* dereferenceable(56), i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"class.__gnu_debug::_Error_formatter"*
  %6 = alloca %"struct.__gnu_debug::_Error_formatter::_Parameter"*
  %7 = alloca i8**
  %8 = alloca %"class.std::__debug::vector.0"**
  %9 = alloca i1
  %10 = alloca i1
  %11 = load i32, i32* @x.424
  %12 = load i32, i32* @y.425
  %13 = sub i32 %11, -261380383
  %14 = sub i32 %13, 1
  %15 = add i32 %14, -261380383
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  store i1 %19, i1* %10
  %20 = icmp slt i32 %12, 10
  store i1 %20, i1* %9
  %21 = alloca i32
  store i32 -260639488, i32* %21
  br label %22

; <label>:22:                                     ; preds = %3, %119
  %23 = load i32, i32* %21
  switch i32 %23, label %24 [
    i32 -260639488, label %25
    i32 -1036727768, label %45
    i32 -1953578512, label %85
    i32 1213930918, label %88
    i32 243724076, label %107
    i32 263102758, label %109
  ]

; <label>:24:                                     ; preds = %22
  br label %119

; <label>:25:                                     ; preds = %22
  %26 = load volatile i1, i1* %10
  %27 = load volatile i1, i1* %9
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 true, true
  %31 = and i1 %28, true
  %32 = and i1 %26, %30
  %33 = and i1 %29, true
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 true, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  %44 = select i1 %42, i32 -1036727768, i32 263102758
  store i32 %44, i32* %21
  br label %119

; <label>:45:                                     ; preds = %22
  %46 = alloca %"class.__gnu_debug::_Error_formatter"*, align 8
  %47 = alloca %"class.std::__debug::vector.0"*, align 8
  store %"class.std::__debug::vector.0"** %47, %"class.std::__debug::vector.0"*** %8
  %48 = alloca i8*, align 8
  store i8** %48, i8*** %7
  %49 = alloca %"struct.__gnu_debug::_Error_formatter::_Parameter", align 8
  store %"struct.__gnu_debug::_Error_formatter::_Parameter"* %49, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %6
  %50 = alloca %"struct.__gnu_debug::_Error_formatter::_Is_sequence", align 1
  store %"class.__gnu_debug::_Error_formatter"* %0, %"class.__gnu_debug::_Error_formatter"** %46, align 8
  %51 = load volatile %"class.std::__debug::vector.0"**, %"class.std::__debug::vector.0"*** %8
  store %"class.std::__debug::vector.0"* %1, %"class.std::__debug::vector.0"** %51, align 8
  %52 = load volatile i8**, i8*** %7
  store i8* %2, i8** %52, align 8
  %53 = load %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %46, align 8
  store %"class.__gnu_debug::_Error_formatter"* %53, %"class.__gnu_debug::_Error_formatter"** %5
  %54 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %5
  %55 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %54, i32 0, i32 3
  %56 = load i64, i64* %55, align 8
  %57 = icmp ult i64 %56, 9
  store i1 %57, i1* %4
  %58 = load i32, i32* @x.424
  %59 = load i32, i32* @y.425
  %60 = sub i32 %58, 299523255
  %61 = sub i32 %60, 1
  %62 = add i32 %61, 299523255
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 -1953578512, i32 263102758
  store i32 %84, i32* %21
  br label %119

; <label>:85:                                     ; preds = %22
  %86 = load volatile i1, i1* %4
  %87 = select i1 %86, i32 1213930918, i32 243724076
  store i32 %87, i32* %21
  br label %119

; <label>:88:                                     ; preds = %22
  %89 = load volatile %"class.std::__debug::vector.0"**, %"class.std::__debug::vector.0"*** %8
  %90 = load %"class.std::__debug::vector.0"*, %"class.std::__debug::vector.0"** %89, align 8
  %91 = load volatile i8**, i8*** %7
  %92 = load i8*, i8** %91, align 8
  %93 = load volatile %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %6
  call void @_ZN11__gnu_debug16_Error_formatter10_ParameterC2INSt7__debug6vectorINS4_IbSaIbEEESaIS6_EEEEERKT_PKcNS0_12_Is_sequenceE(%"struct.__gnu_debug::_Error_formatter::_Parameter"* %93, %"class.std::__debug::vector.0"* dereferenceable(56) %90, i8* %92)
  %94 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %5
  %95 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %94, i32 0, i32 2
  %96 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %5
  %97 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %96, i32 0, i32 3
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 6328586361684855546
  %100 = add i64 %99, 1
  %101 = sub i64 %100, 6328586361684855546
  %102 = add i64 %98, 1
  store i64 %101, i64* %97, align 8
  %103 = getelementptr inbounds [9 x %"struct.__gnu_debug::_Error_formatter::_Parameter"], [9 x %"struct.__gnu_debug::_Error_formatter::_Parameter"]* %95, i64 0, i64 %98
  %104 = bitcast %"struct.__gnu_debug::_Error_formatter::_Parameter"* %103 to i8*
  %105 = load volatile %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %6
  %106 = bitcast %"struct.__gnu_debug::_Error_formatter::_Parameter"* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %104, i8* %106, i64 56, i32 8, i1 false)
  store i32 243724076, i32* %21
  br label %119

; <label>:107:                                    ; preds = %22
  %108 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %5
  ret %"class.__gnu_debug::_Error_formatter"* %108

; <label>:109:                                    ; preds = %22
  %110 = alloca %"class.__gnu_debug::_Error_formatter"*, align 8
  %111 = alloca %"class.std::__debug::vector.0"*, align 8
  %112 = alloca i8*, align 8
  %113 = alloca %"struct.__gnu_debug::_Error_formatter::_Parameter", align 8
  %114 = alloca %"struct.__gnu_debug::_Error_formatter::_Is_sequence", align 1
  store %"class.__gnu_debug::_Error_formatter"* %0, %"class.__gnu_debug::_Error_formatter"** %110, align 8
  store %"class.std::__debug::vector.0"* %1, %"class.std::__debug::vector.0"** %111, align 8
  store i8* %2, i8** %112, align 8
  %115 = load %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %110, align 8
  %116 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %115, i32 0, i32 3
  %117 = load i64, i64* %116, align 8
  %118 = icmp ult i64 %117, 9
  store i32 -1036727768, i32* %21
  br label %119

; <label>:119:                                    ; preds = %109, %88, %85, %45, %25, %24
  br label %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::__cxx1998::vector.5"* @_ZNSt7__debug6vectorINS0_IbSaIbEEESaIS2_EE7_M_baseEv(%"class.std::__debug::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.std::__debug::vector.0"*, align 8
  store %"class.std::__debug::vector.0"* %0, %"class.std::__debug::vector.0"** %2, align 8
  %3 = load %"class.std::__debug::vector.0"*, %"class.std::__debug::vector.0"** %2, align 8
  %4 = bitcast %"class.std::__debug::vector.0"* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 24
  %6 = bitcast i8* %5 to %"class.std::__cxx1998::vector.5"*
  ret %"class.std::__cxx1998::vector.5"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(72) %"class.std::__debug::vector.10"* @_ZNSt9__cxx19986vectorINSt7__debug6vectorIbSaIbEEESaIS4_EEixEm(%"class.std::__cxx1998::vector.5"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::__debug::vector.10"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.428
  %7 = load i32, i32* @y.429
  %8 = sub i32 %6, -1136369720
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1136369720
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1753913519, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %76
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1753913519, label %20
    i32 736370986, label %28
    i32 616360032, label %64
    i32 -894828406, label %66
  ]

; <label>:19:                                     ; preds = %17
  br label %76

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 736370986, i32 -894828406
  store i32 %27, i32* %16
  br label %76

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::__cxx1998::vector.5"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::__cxx1998::vector.5"* %0, %"class.std::__cxx1998::vector.5"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::__cxx1998::vector.5"*, %"class.std::__cxx1998::vector.5"** %29, align 8
  %32 = bitcast %"class.std::__cxx1998::vector.5"* %31 to %"struct.std::__cxx1998::_Vector_base.6"*
  %33 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base.6", %"struct.std::__cxx1998::_Vector_base.6"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %34, align 8
  %36 = load i64, i64* %30, align 8
  %37 = getelementptr inbounds %"class.std::__debug::vector.10", %"class.std::__debug::vector.10"* %35, i64 %36
  store %"class.std::__debug::vector.10"* %37, %"class.std::__debug::vector.10"** %3
  %38 = load i32, i32* @x.428
  %39 = load i32, i32* @y.429
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 616360032, i32 -894828406
  store i32 %63, i32* %16
  br label %76

; <label>:64:                                     ; preds = %17
  %65 = load volatile %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %3
  ret %"class.std::__debug::vector.10"* %65

; <label>:66:                                     ; preds = %17
  %67 = alloca %"class.std::__cxx1998::vector.5"*, align 8
  %68 = alloca i64, align 8
  store %"class.std::__cxx1998::vector.5"* %0, %"class.std::__cxx1998::vector.5"** %67, align 8
  store i64 %1, i64* %68, align 8
  %69 = load %"class.std::__cxx1998::vector.5"*, %"class.std::__cxx1998::vector.5"** %67, align 8
  %70 = bitcast %"class.std::__cxx1998::vector.5"* %69 to %"struct.std::__cxx1998::_Vector_base.6"*
  %71 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base.6", %"struct.std::__cxx1998::_Vector_base.6"* %70, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<std::__debug::vector<bool, std::allocator<bool> >, std::allocator<std::__debug::vector<bool, std::allocator<bool> > > >::_Vector_impl"* %71, i32 0, i32 0
  %73 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %72, align 8
  %74 = load i64, i64* %68, align 8
  %75 = getelementptr inbounds %"class.std::__debug::vector.10", %"class.std::__debug::vector.10"* %73, i64 %74
  store i32 736370986, i32* %16
  br label %76

; <label>:76:                                     ; preds = %66, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug16_Error_formatter10_ParameterC2INSt7__debug6vectorINS4_IbSaIbEEESaIS6_EEEEERKT_PKcNS0_12_Is_sequenceE(%"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"class.std::__debug::vector.0"* dereferenceable(56), i8*) unnamed_addr #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.430
  %7 = load i32, i32* @y.431
  %8 = add i32 %6, 620921082
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 620921082
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 360885278, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %98
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 360885278, label %20
    i32 1337494469, label %28
    i32 -1689454592, label %76
    i32 -1404716364, label %77
  ]

; <label>:19:                                     ; preds = %17
  br label %98

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1337494469, i32 -1404716364
  store i32 %27, i32* %16
  br label %98

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.__gnu_debug::_Error_formatter::_Is_sequence", align 1
  %30 = alloca %"struct.__gnu_debug::_Error_formatter::_Parameter"*, align 8
  %31 = alloca %"class.std::__debug::vector.0"*, align 8
  %32 = alloca i8*, align 8
  store %"struct.__gnu_debug::_Error_formatter::_Parameter"* %0, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %30, align 8
  store %"class.std::__debug::vector.0"* %1, %"class.std::__debug::vector.0"** %31, align 8
  store i8* %2, i8** %32, align 8
  %33 = load %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %30, align 8
  %34 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %33, i32 0, i32 0
  store i32 2, i32* %34, align 8
  %35 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %33, i32 0, i32 1
  %36 = bitcast %union.anon* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* %36, i8 0, i64 48, i32 8, i1 false)
  %37 = load i8*, i8** %32, align 8
  %38 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %33, i32 0, i32 1
  %39 = bitcast %union.anon* %38 to %struct.anon.24*
  %40 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %39, i32 0, i32 0
  store i8* %37, i8** %40, align 8
  %41 = load %"class.std::__debug::vector.0"*, %"class.std::__debug::vector.0"** %31, align 8
  %42 = bitcast %"class.std::__debug::vector.0"* %41 to i8*
  %43 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %33, i32 0, i32 1
  %44 = bitcast %union.anon* %43 to %struct.anon.24*
  %45 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %44, i32 0, i32 1
  store i8* %42, i8** %45, align 8
  %46 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %33, i32 0, i32 1
  %47 = bitcast %union.anon* %46 to %struct.anon.24*
  %48 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %47, i32 0, i32 2
  store %"class.std::type_info"* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64, i8*, i64 }* @_ZTINSt7__debug6vectorINS0_IbSaIbEEESaIS2_EEE to %"class.std::type_info"*), %"class.std::type_info"** %48, align 8
  %49 = load i32, i32* @x.430
  %50 = load i32, i32* @y.431
  %51 = add i32 %49, -132228224
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, -132228224
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -1689454592, i32 -1404716364
  store i32 %75, i32* %16
  br label %98

; <label>:76:                                     ; preds = %17
  ret void

; <label>:77:                                     ; preds = %17
  %78 = alloca %"struct.__gnu_debug::_Error_formatter::_Is_sequence", align 1
  %79 = alloca %"struct.__gnu_debug::_Error_formatter::_Parameter"*, align 8
  %80 = alloca %"class.std::__debug::vector.0"*, align 8
  %81 = alloca i8*, align 8
  store %"struct.__gnu_debug::_Error_formatter::_Parameter"* %0, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %79, align 8
  store %"class.std::__debug::vector.0"* %1, %"class.std::__debug::vector.0"** %80, align 8
  store i8* %2, i8** %81, align 8
  %82 = load %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %79, align 8
  %83 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %82, i32 0, i32 0
  store i32 2, i32* %83, align 8
  %84 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %82, i32 0, i32 1
  %85 = bitcast %union.anon* %84 to i8*
  call void @llvm.memset.p0i8.i64(i8* %85, i8 0, i64 48, i32 8, i1 false)
  %86 = load i8*, i8** %81, align 8
  %87 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %82, i32 0, i32 1
  %88 = bitcast %union.anon* %87 to %struct.anon.24*
  %89 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %88, i32 0, i32 0
  store i8* %86, i8** %89, align 8
  %90 = load %"class.std::__debug::vector.0"*, %"class.std::__debug::vector.0"** %80, align 8
  %91 = bitcast %"class.std::__debug::vector.0"* %90 to i8*
  %92 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %82, i32 0, i32 1
  %93 = bitcast %union.anon* %92 to %struct.anon.24*
  %94 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %93, i32 0, i32 1
  store i8* %91, i8** %94, align 8
  %95 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %82, i32 0, i32 1
  %96 = bitcast %union.anon* %95 to %struct.anon.24*
  %97 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %96, i32 0, i32 2
  store %"class.std::type_info"* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64, i8*, i64 }* @_ZTINSt7__debug6vectorINS0_IbSaIbEEESaIS2_EEE to %"class.std::type_info"*), %"class.std::type_info"** %97, align 8
  store i32 1337494469, i32* %16
  br label %98

; <label>:98:                                     ; preds = %77, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_sequenceINSt7__debug6vectorIbSaIbEEEEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"*, %"class.std::__debug::vector.10"* dereferenceable(72), i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"class.__gnu_debug::_Error_formatter"*
  %6 = alloca %"struct.__gnu_debug::_Error_formatter::_Parameter"*
  %7 = alloca i8**
  %8 = alloca %"class.std::__debug::vector.10"**
  %9 = alloca i1
  %10 = alloca i1
  %11 = load i32, i32* @x.432
  %12 = load i32, i32* @y.433
  %13 = sub i32 0, 1
  %14 = add i32 %11, %13
  %15 = sub i32 %11, 1
  %16 = mul i32 %11, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %10
  %19 = icmp slt i32 %12, 10
  store i1 %19, i1* %9
  %20 = alloca i32
  store i32 1712533579, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %107
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 1712533579, label %24
    i32 -317120145, label %44
    i32 540256119, label %72
    i32 1710504070, label %75
    i32 -831692828, label %95
    i32 653663548, label %97
  ]

; <label>:23:                                     ; preds = %21
  br label %107

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %10
  %26 = load volatile i1, i1* %9
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 -317120145, i32 653663548
  store i32 %43, i32* %20
  br label %107

; <label>:44:                                     ; preds = %21
  %45 = alloca %"class.__gnu_debug::_Error_formatter"*, align 8
  %46 = alloca %"class.std::__debug::vector.10"*, align 8
  store %"class.std::__debug::vector.10"** %46, %"class.std::__debug::vector.10"*** %8
  %47 = alloca i8*, align 8
  store i8** %47, i8*** %7
  %48 = alloca %"struct.__gnu_debug::_Error_formatter::_Parameter", align 8
  store %"struct.__gnu_debug::_Error_formatter::_Parameter"* %48, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %6
  %49 = alloca %"struct.__gnu_debug::_Error_formatter::_Is_sequence", align 1
  store %"class.__gnu_debug::_Error_formatter"* %0, %"class.__gnu_debug::_Error_formatter"** %45, align 8
  %50 = load volatile %"class.std::__debug::vector.10"**, %"class.std::__debug::vector.10"*** %8
  store %"class.std::__debug::vector.10"* %1, %"class.std::__debug::vector.10"** %50, align 8
  %51 = load volatile i8**, i8*** %7
  store i8* %2, i8** %51, align 8
  %52 = load %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %45, align 8
  store %"class.__gnu_debug::_Error_formatter"* %52, %"class.__gnu_debug::_Error_formatter"** %5
  %53 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %5
  %54 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %53, i32 0, i32 3
  %55 = load i64, i64* %54, align 8
  %56 = icmp ult i64 %55, 9
  store i1 %56, i1* %4
  %57 = load i32, i32* @x.432
  %58 = load i32, i32* @y.433
  %59 = sub i32 %57, 1947639079
  %60 = sub i32 %59, 1
  %61 = add i32 %60, 1947639079
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = and i1 %65, %66
  %68 = xor i1 %65, %66
  %69 = or i1 %67, %68
  %70 = or i1 %65, %66
  %71 = select i1 %69, i32 540256119, i32 653663548
  store i32 %71, i32* %20
  br label %107

; <label>:72:                                     ; preds = %21
  %73 = load volatile i1, i1* %4
  %74 = select i1 %73, i32 1710504070, i32 -831692828
  store i32 %74, i32* %20
  br label %107

; <label>:75:                                     ; preds = %21
  %76 = load volatile %"class.std::__debug::vector.10"**, %"class.std::__debug::vector.10"*** %8
  %77 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %76, align 8
  %78 = load volatile i8**, i8*** %7
  %79 = load i8*, i8** %78, align 8
  %80 = load volatile %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %6
  call void @_ZN11__gnu_debug16_Error_formatter10_ParameterC2INSt7__debug6vectorIbSaIbEEEEERKT_PKcNS0_12_Is_sequenceE(%"struct.__gnu_debug::_Error_formatter::_Parameter"* %80, %"class.std::__debug::vector.10"* dereferenceable(72) %77, i8* %79)
  %81 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %5
  %82 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %81, i32 0, i32 2
  %83 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %5
  %84 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %83, i32 0, i32 3
  %85 = load i64, i64* %84, align 8
  %86 = sub i64 0, %85
  %87 = sub i64 0, 1
  %88 = add i64 %86, %87
  %89 = sub i64 0, %88
  %90 = add i64 %85, 1
  store i64 %89, i64* %84, align 8
  %91 = getelementptr inbounds [9 x %"struct.__gnu_debug::_Error_formatter::_Parameter"], [9 x %"struct.__gnu_debug::_Error_formatter::_Parameter"]* %82, i64 0, i64 %85
  %92 = bitcast %"struct.__gnu_debug::_Error_formatter::_Parameter"* %91 to i8*
  %93 = load volatile %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %6
  %94 = bitcast %"struct.__gnu_debug::_Error_formatter::_Parameter"* %93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %92, i8* %94, i64 56, i32 8, i1 false)
  store i32 -831692828, i32* %20
  br label %107

; <label>:95:                                     ; preds = %21
  %96 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %5
  ret %"class.__gnu_debug::_Error_formatter"* %96

; <label>:97:                                     ; preds = %21
  %98 = alloca %"class.__gnu_debug::_Error_formatter"*, align 8
  %99 = alloca %"class.std::__debug::vector.10"*, align 8
  %100 = alloca i8*, align 8
  %101 = alloca %"struct.__gnu_debug::_Error_formatter::_Parameter", align 8
  %102 = alloca %"struct.__gnu_debug::_Error_formatter::_Is_sequence", align 1
  store %"class.__gnu_debug::_Error_formatter"* %0, %"class.__gnu_debug::_Error_formatter"** %98, align 8
  store %"class.std::__debug::vector.10"* %1, %"class.std::__debug::vector.10"** %99, align 8
  store i8* %2, i8** %100, align 8
  %103 = load %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %98, align 8
  %104 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %103, i32 0, i32 3
  %105 = load i64, i64* %104, align 8
  %106 = icmp ult i64 %105, 9
  store i32 -317120145, i32* %20
  br label %107

; <label>:107:                                    ; preds = %97, %75, %72, %44, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(40) %"class.std::__cxx1998::vector.15"* @_ZNSt7__debug6vectorIbSaIbEE7_M_baseEv(%"class.std::__debug::vector.10"*) #4 comdat align 2 {
  %2 = alloca %"class.std::__cxx1998::vector.15"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.434
  %6 = load i32, i32* @y.435
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 305501977, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %67
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 305501977, label %18
    i32 42805026, label %38
    i32 -829125254, label %59
    i32 -2095007628, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %67

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 42805026, i32 -2095007628
  store i32 %37, i32* %14
  br label %67

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::__debug::vector.10"*, align 8
  store %"class.std::__debug::vector.10"* %0, %"class.std::__debug::vector.10"** %39, align 8
  %40 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %39, align 8
  %41 = bitcast %"class.std::__debug::vector.10"* %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 24
  %43 = bitcast i8* %42 to %"class.std::__cxx1998::vector.15"*
  store %"class.std::__cxx1998::vector.15"* %43, %"class.std::__cxx1998::vector.15"** %2
  %44 = load i32, i32* @x.434
  %45 = load i32, i32* @y.435
  %46 = sub i32 %44, -1376536827
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -1376536827
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -829125254, i32 -2095007628
  store i32 %58, i32* %14
  br label %67

; <label>:59:                                     ; preds = %15
  %60 = load volatile %"class.std::__cxx1998::vector.15"*, %"class.std::__cxx1998::vector.15"** %2
  ret %"class.std::__cxx1998::vector.15"* %60

; <label>:61:                                     ; preds = %15
  %62 = alloca %"class.std::__debug::vector.10"*, align 8
  store %"class.std::__debug::vector.10"* %0, %"class.std::__debug::vector.10"** %62, align 8
  %63 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %62, align 8
  %64 = bitcast %"class.std::__debug::vector.10"* %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 24
  %66 = bitcast i8* %65 to %"class.std::__cxx1998::vector.15"*
  store i32 42805026, i32* %14
  br label %67

; <label>:67:                                     ; preds = %61, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64*, i64 } @_ZNSt9__cxx19986vectorIbSaIbEEixEm(%"class.std::__cxx1998::vector.15"*, i64) #0 comdat align 2 {
  %3 = alloca { i64*, i64 }
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.436
  %7 = load i32, i32* @y.437
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1152888435, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %169
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1152888435, label %19
    i32 -304698561, label %39
    i32 740030944, label %92
    i32 484221643, label %94
  ]

; <label>:18:                                     ; preds = %16
  br label %169

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -304698561, i32 484221643
  store i32 %38, i32* %15
  br label %169

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::__cxx1998::_Bit_reference", align 8
  %41 = alloca %"class.std::__cxx1998::vector.15"*, align 8
  %42 = alloca i64, align 8
  %43 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  store %"class.std::__cxx1998::vector.15"* %0, %"class.std::__cxx1998::vector.15"** %41, align 8
  store i64 %1, i64* %42, align 8
  %44 = load %"class.std::__cxx1998::vector.15"*, %"class.std::__cxx1998::vector.15"** %41, align 8
  %45 = bitcast %"class.std::__cxx1998::vector.15"* %44 to %"struct.std::__cxx1998::_Bvector_base"*
  %46 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base", %"struct.std::__cxx1998::_Bvector_base"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %46, i32 0, i32 0
  %48 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %47 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %49 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_iterator_base", %"struct.std::__cxx1998::_Bit_iterator_base"* %48, i32 0, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = load i64, i64* %42, align 8
  %52 = udiv i64 %51, 64
  %53 = getelementptr inbounds i64, i64* %50, i64 %52
  %54 = load i64, i64* %42, align 8
  %55 = urem i64 %54, 64
  %56 = trunc i64 %55 to i32
  call void @_ZNSt9__cxx199813_Bit_iteratorC2EPmj(%"struct.std::__cxx1998::_Bit_iterator"* %43, i64* %53, i32 %56)
  %57 = call { i64*, i64 } @_ZNKSt9__cxx199813_Bit_iteratordeEv(%"struct.std::__cxx1998::_Bit_iterator"* %43)
  %58 = bitcast %"struct.std::__cxx1998::_Bit_reference"* %40 to { i64*, i64 }*
  %59 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %58, i32 0, i32 0
  %60 = extractvalue { i64*, i64 } %57, 0
  store i64* %60, i64** %59, align 8
  %61 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %58, i32 0, i32 1
  %62 = extractvalue { i64*, i64 } %57, 1
  store i64 %62, i64* %61, align 8
  %63 = bitcast %"struct.std::__cxx1998::_Bit_reference"* %40 to { i64*, i64 }*
  %64 = load { i64*, i64 }, { i64*, i64 }* %63, align 8
  store { i64*, i64 } %64, { i64*, i64 }* %3
  %65 = load i32, i32* @x.436
  %66 = load i32, i32* @y.437
  %67 = sub i32 %65, 664865336
  %68 = sub i32 %67, 1
  %69 = add i32 %68, 664865336
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = xor i1 %73, true
  %76 = xor i1 %74, true
  %77 = xor i1 false, true
  %78 = and i1 %75, false
  %79 = and i1 %73, %77
  %80 = and i1 %76, false
  %81 = and i1 %74, %77
  %82 = or i1 %78, %79
  %83 = or i1 %80, %81
  %84 = xor i1 %82, %83
  %85 = or i1 %75, %76
  %86 = xor i1 %85, true
  %87 = or i1 false, %77
  %88 = and i1 %86, %87
  %89 = or i1 %84, %88
  %90 = or i1 %73, %74
  %91 = select i1 %89, i32 740030944, i32 484221643
  store i32 %91, i32* %15
  br label %169

; <label>:92:                                     ; preds = %16
  %93 = load volatile { i64*, i64 }, { i64*, i64 }* %3
  ret { i64*, i64 } %93

; <label>:94:                                     ; preds = %16
  %95 = alloca %"struct.std::__cxx1998::_Bit_reference", align 8
  %96 = alloca %"class.std::__cxx1998::vector.15"*, align 8
  %97 = alloca i64, align 8
  %98 = alloca %"struct.std::__cxx1998::_Bit_iterator", align 8
  store %"class.std::__cxx1998::vector.15"* %0, %"class.std::__cxx1998::vector.15"** %96, align 8
  store i64 %1, i64* %97, align 8
  %99 = load %"class.std::__cxx1998::vector.15"*, %"class.std::__cxx1998::vector.15"** %96, align 8
  %100 = bitcast %"class.std::__cxx1998::vector.15"* %99 to %"struct.std::__cxx1998::_Bvector_base"*
  %101 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base", %"struct.std::__cxx1998::_Bvector_base"* %100, i32 0, i32 0
  %102 = getelementptr inbounds %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl", %"struct.std::__cxx1998::_Bvector_base<std::allocator<bool> >::_Bvector_impl"* %101, i32 0, i32 0
  %103 = bitcast %"struct.std::__cxx1998::_Bit_iterator"* %102 to %"struct.std::__cxx1998::_Bit_iterator_base"*
  %104 = getelementptr inbounds %"struct.std::__cxx1998::_Bit_iterator_base", %"struct.std::__cxx1998::_Bit_iterator_base"* %103, i32 0, i32 0
  %105 = load i64*, i64** %104, align 8
  %106 = load i64, i64* %97, align 8
  %107 = shl i64 %106, 64
  %108 = sub i64 0, 64
  %109 = add i64 %106, %108
  %110 = sub i64 %106, 64
  %111 = mul i64 %109, 64
  %112 = sub i64 %106, -4358050716219526862
  %113 = sub i64 %112, 64
  %114 = add i64 %113, -4358050716219526862
  %115 = sub i64 %106, 64
  %116 = mul i64 %114, 64
  %117 = sub i64 0, 64
  %118 = add i64 %106, %117
  %119 = sub i64 %106, 64
  %120 = mul i64 %118, 64
  %121 = shl i64 %106, 64
  %122 = udiv i64 %106, 64
  %123 = getelementptr inbounds i64, i64* %105, i64 %122
  %124 = load i64, i64* %97, align 8
  %125 = shl i64 %124, 64
  %126 = sub i64 %124, -306844509389594068
  %127 = sub i64 %126, 64
  %128 = add i64 %127, -306844509389594068
  %129 = sub i64 %124, 64
  %130 = mul i64 %128, 64
  %131 = sub i64 %124, -345600151288044354
  %132 = sub i64 %131, 64
  %133 = add i64 %132, -345600151288044354
  %134 = sub i64 %124, 64
  %135 = mul i64 %133, 64
  %136 = sub i64 0, %124
  %137 = add i64 0, %136
  %138 = sub i64 0, %124
  %139 = sub i64 %137, 5013321630876504410
  %140 = add i64 %139, 64
  %141 = add i64 %140, 5013321630876504410
  %142 = add i64 %137, 64
  %143 = sub i64 0, %124
  %144 = add i64 0, %143
  %145 = sub i64 0, %124
  %146 = sub i64 0, 64
  %147 = sub i64 %144, %146
  %148 = add i64 %144, 64
  %149 = add i64 %124, -2816605768035927450
  %150 = sub i64 %149, 64
  %151 = sub i64 %150, -2816605768035927450
  %152 = sub i64 %124, 64
  %153 = mul i64 %151, 64
  %154 = add i64 %124, 4872137240596969741
  %155 = sub i64 %154, 64
  %156 = sub i64 %155, 4872137240596969741
  %157 = sub i64 %124, 64
  %158 = mul i64 %156, 64
  %159 = urem i64 %124, 64
  %160 = trunc i64 %159 to i32
  call void @_ZNSt9__cxx199813_Bit_iteratorC2EPmj(%"struct.std::__cxx1998::_Bit_iterator"* %98, i64* %123, i32 %160)
  %161 = call { i64*, i64 } @_ZNKSt9__cxx199813_Bit_iteratordeEv(%"struct.std::__cxx1998::_Bit_iterator"* %98)
  %162 = bitcast %"struct.std::__cxx1998::_Bit_reference"* %95 to { i64*, i64 }*
  %163 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %162, i32 0, i32 0
  %164 = extractvalue { i64*, i64 } %161, 0
  store i64* %164, i64** %163, align 8
  %165 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %162, i32 0, i32 1
  %166 = extractvalue { i64*, i64 } %161, 1
  store i64 %166, i64* %165, align 8
  %167 = bitcast %"struct.std::__cxx1998::_Bit_reference"* %95 to { i64*, i64 }*
  %168 = load { i64*, i64 }, { i64*, i64 }* %167, align 8
  store i32 -304698561, i32* %15
  br label %169

; <label>:169:                                    ; preds = %94, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug16_Error_formatter10_ParameterC2INSt7__debug6vectorIbSaIbEEEEERKT_PKcNS0_12_Is_sequenceE(%"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"class.std::__debug::vector.10"* dereferenceable(72), i8*) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.__gnu_debug::_Error_formatter::_Is_sequence", align 1
  %5 = alloca %"struct.__gnu_debug::_Error_formatter::_Parameter"*, align 8
  %6 = alloca %"class.std::__debug::vector.10"*, align 8
  %7 = alloca i8*, align 8
  store %"struct.__gnu_debug::_Error_formatter::_Parameter"* %0, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %5, align 8
  store %"class.std::__debug::vector.10"* %1, %"class.std::__debug::vector.10"** %6, align 8
  store i8* %2, i8** %7, align 8
  %8 = load %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %5, align 8
  %9 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %8, i32 0, i32 0
  store i32 2, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %8, i32 0, i32 1
  %11 = bitcast %union.anon* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* %11, i8 0, i64 48, i32 8, i1 false)
  %12 = load i8*, i8** %7, align 8
  %13 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %8, i32 0, i32 1
  %14 = bitcast %union.anon* %13 to %struct.anon.24*
  %15 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %14, i32 0, i32 0
  store i8* %12, i8** %15, align 8
  %16 = load %"class.std::__debug::vector.10"*, %"class.std::__debug::vector.10"** %6, align 8
  %17 = bitcast %"class.std::__debug::vector.10"* %16 to i8*
  %18 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %8, i32 0, i32 1
  %19 = bitcast %union.anon* %18 to %struct.anon.24*
  %20 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %19, i32 0, i32 1
  store i8* %17, i8** %20, align 8
  %21 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %8, i32 0, i32 1
  %22 = bitcast %union.anon* %21 to %struct.anon.24*
  %23 = getelementptr inbounds %struct.anon.24, %struct.anon.24* %22, i32 0, i32 2
  store %"class.std::type_info"* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64, i8*, i64 }* @_ZTINSt7__debug6vectorIbSaIbEEE to %"class.std::type_info"*), %"class.std::type_info"** %23, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt9__cxx19986vectorIiSaIiEE5beginEv(%"class.std::__cxx1998::vector"*) #4 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.440
  %6 = load i32, i32* @y.441
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1251493227, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1251493227, label %18
    i32 -1235078617, label %26
    i32 1156851609, label %49
    i32 891126288, label %51
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1235078617, i32 891126288
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %28 = alloca %"class.std::__cxx1998::vector"*, align 8
  store %"class.std::__cxx1998::vector"* %0, %"class.std::__cxx1998::vector"** %28, align 8
  %29 = load %"class.std::__cxx1998::vector"*, %"class.std::__cxx1998::vector"** %28, align 8
  %30 = bitcast %"class.std::__cxx1998::vector"* %29 to %"struct.std::__cxx1998::_Vector_base"*
  %31 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base", %"struct.std::__cxx1998::_Vector_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %31, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator"* %27, i32** dereferenceable(8) %32) #3
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %27, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  store i32* %34, i32** %2
  %35 = load i32, i32* @x.440
  %36 = load i32, i32* @y.441
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 1156851609, i32 891126288
  store i32 %48, i32* %14
  br label %60

; <label>:49:                                     ; preds = %15
  %50 = load volatile i32*, i32** %2
  ret i32* %50

; <label>:51:                                     ; preds = %15
  %52 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %53 = alloca %"class.std::__cxx1998::vector"*, align 8
  store %"class.std::__cxx1998::vector"* %0, %"class.std::__cxx1998::vector"** %53, align 8
  %54 = load %"class.std::__cxx1998::vector"*, %"class.std::__cxx1998::vector"** %53, align 8
  %55 = bitcast %"class.std::__cxx1998::vector"* %54 to %"struct.std::__cxx1998::_Vector_base"*
  %56 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base", %"struct.std::__cxx1998::_Vector_base"* %55, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %56, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator"* %52, i32** dereferenceable(8) %57) #3
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %52, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8
  store i32 -1235078617, i32* %14
  br label %60

; <label>:60:                                     ; preds = %51, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEC2ERKS8_PKNS_19_Safe_sequence_baseE(%"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_debug::_Safe_sequence_base"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %6 = alloca %"class.__gnu_debug::_Safe_sequence_base"*, align 8
  %7 = alloca %"class.__gnu_debug::_Error_formatter", align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %5, align 8
  store %"class.__gnu_debug::_Safe_sequence_base"* %2, %"class.__gnu_debug::_Safe_sequence_base"** %6, align 8
  %10 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  %11 = bitcast %"class.__gnu_debug::_Safe_iterator"* %10 to %"class.__gnu_cxx::__normal_iterator"*
  %12 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %5, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_debug::_Safe_iterator"* %10 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 8
  %17 = bitcast i8* %16 to %"class.__gnu_debug::_Safe_iterator_base"*
  %18 = load %"class.__gnu_debug::_Safe_sequence_base"*, %"class.__gnu_debug::_Safe_sequence_base"** %6, align 8
  %19 = invoke zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE11_M_constantEv(%"class.__gnu_debug::_Safe_iterator"* %10)
          to label %20 unwind label %155

; <label>:20:                                     ; preds = %3
  %21 = load i32, i32* @x.442
  %22 = load i32, i32* @y.443
  %23 = add i32 %21, -1406523317
  %24 = sub i32 %23, 1
  %25 = sub i32 %24, -1406523317
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  br i1 %33, label %35, label %201

; <label>:35:                                     ; preds = %20, %201
  %36 = load i32, i32* @x.442
  %37 = load i32, i32* @y.443
  %38 = add i32 %36, -1574421037
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, -1574421037
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  br i1 %48, label %50, label %201

; <label>:50:                                     ; preds = %35
  invoke void @_ZN11__gnu_debug19_Safe_iterator_baseC2EPKNS_19_Safe_sequence_baseEb(%"class.__gnu_debug::_Safe_iterator_base"* %17, %"class.__gnu_debug::_Safe_sequence_base"* %18, i1 zeroext %19)
          to label %51 unwind label %155

; <label>:51:                                     ; preds = %50
  br label %52

; <label>:52:                                     ; preds = %51
  %53 = bitcast %"class.__gnu_debug::_Safe_iterator"* %10 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 8
  %55 = bitcast i8* %54 to %"class.__gnu_debug::_Safe_iterator_base"*
  %56 = call zeroext i1 @_ZNK11__gnu_debug19_Safe_iterator_base11_M_singularEv(%"class.__gnu_debug::_Safe_iterator_base"* %55) #14
  br i1 %56, label %57, label %100

; <label>:57:                                     ; preds = %52
  invoke void @_ZN11__gnu_debug16_Error_formatter5_M_atEPKcm(%"class.__gnu_debug::_Error_formatter"* sret %7, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.7, i32 0, i32 0), i64 167)
          to label %58 unwind label %93

; <label>:58:                                     ; preds = %57
  %59 = call dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter10_M_messageENS_13_Debug_msg_idE(%"class.__gnu_debug::_Error_formatter"* %7, i32 21) #3
  %60 = invoke dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_iteratorINS_14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS8_EEEEEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"* %59, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0))
          to label %61 unwind label %93

; <label>:61:                                     ; preds = %58
  invoke void @_ZNK11__gnu_debug16_Error_formatter8_M_errorEv(%"class.__gnu_debug::_Error_formatter"* %60) #13
          to label %62 unwind label %93

; <label>:62:                                     ; preds = %61
  %63 = load i32, i32* @x.442
  %64 = load i32, i32* @y.443
  %65 = sub i32 %63, 39105565
  %66 = sub i32 %65, 1
  %67 = add i32 %66, 39105565
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = and i1 %71, %72
  %74 = xor i1 %71, %72
  %75 = or i1 %73, %74
  %76 = or i1 %71, %72
  br i1 %75, label %77, label %202

; <label>:77:                                     ; preds = %62, %202
  %78 = load i32, i32* @x.442
  %79 = load i32, i32* @y.443
  %80 = sub i32 %78, 781582007
  %81 = sub i32 %80, 1
  %82 = add i32 %81, 781582007
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = and i1 %86, %87
  %89 = xor i1 %86, %87
  %90 = or i1 %88, %89
  %91 = or i1 %86, %87
  br i1 %90, label %92, label %202

; <label>:92:                                     ; preds = %77
  unreachable

; <label>:93:                                     ; preds = %61, %58, %57
  %94 = landingpad { i8*, i32 }
          catch i8* null
  %95 = extractvalue { i8*, i32 } %94, 0
  store i8* %95, i8** %8, align 8
  %96 = extractvalue { i8*, i32 } %94, 1
  store i32 %96, i32* %9, align 4
  %97 = bitcast %"class.__gnu_debug::_Safe_iterator"* %10 to i8*
  %98 = getelementptr inbounds i8, i8* %97, i64 8
  %99 = bitcast i8* %98 to %"class.__gnu_debug::_Safe_iterator_base"*
  call void @_ZN11__gnu_debug19_Safe_iterator_baseD2Ev(%"class.__gnu_debug::_Safe_iterator_base"* %99) #3
  br label %199

; <label>:100:                                    ; preds = %52
  br label %101

; <label>:101:                                    ; preds = %100
  %102 = load i32, i32* @x.442
  %103 = load i32, i32* @y.443
  %104 = sub i32 0, 1
  %105 = add i32 %102, %104
  %106 = sub i32 %102, 1
  %107 = mul i32 %102, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %103, 10
  %111 = xor i1 %109, true
  %112 = xor i1 %110, true
  %113 = xor i1 true, true
  %114 = and i1 %111, true
  %115 = and i1 %109, %113
  %116 = and i1 %112, true
  %117 = and i1 %110, %113
  %118 = or i1 %114, %115
  %119 = or i1 %116, %117
  %120 = xor i1 %118, %119
  %121 = or i1 %111, %112
  %122 = xor i1 %121, true
  %123 = or i1 true, %113
  %124 = and i1 %122, %123
  %125 = or i1 %120, %124
  %126 = or i1 %109, %110
  br i1 %125, label %127, label %203

; <label>:127:                                    ; preds = %101, %203
  %128 = load i32, i32* @x.442
  %129 = load i32, i32* @y.443
  %130 = sub i32 0, 1
  %131 = add i32 %128, %130
  %132 = sub i32 %128, 1
  %133 = mul i32 %128, %131
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %129, 10
  %137 = xor i1 %135, true
  %138 = xor i1 %136, true
  %139 = xor i1 true, true
  %140 = and i1 %137, true
  %141 = and i1 %135, %139
  %142 = and i1 %138, true
  %143 = and i1 %136, %139
  %144 = or i1 %140, %141
  %145 = or i1 %142, %143
  %146 = xor i1 %144, %145
  %147 = or i1 %137, %138
  %148 = xor i1 %147, true
  %149 = or i1 true, %139
  %150 = and i1 %148, %149
  %151 = or i1 %146, %150
  %152 = or i1 %135, %136
  br i1 %151, label %153, label %203

; <label>:153:                                    ; preds = %127
  br label %154

; <label>:154:                                    ; preds = %153
  ret void

; <label>:155:                                    ; preds = %50, %3
  %156 = load i32, i32* @x.442
  %157 = load i32, i32* @y.443
  %158 = sub i32 %156, 722534704
  %159 = sub i32 %158, 1
  %160 = add i32 %159, 722534704
  %161 = sub i32 %156, 1
  %162 = mul i32 %156, %160
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %157, 10
  %166 = and i1 %164, %165
  %167 = xor i1 %164, %165
  %168 = or i1 %166, %167
  %169 = or i1 %164, %165
  br i1 %168, label %170, label %204

; <label>:170:                                    ; preds = %155, %204
  %171 = landingpad { i8*, i32 }
          catch i8* null
  %172 = extractvalue { i8*, i32 } %171, 0
  call void @__clang_call_terminate(i8* %172) #11
  %173 = load i32, i32* @x.442
  %174 = load i32, i32* @y.443
  %175 = sub i32 0, 1
  %176 = add i32 %173, %175
  %177 = sub i32 %173, 1
  %178 = mul i32 %173, %176
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %174, 10
  %182 = xor i1 %180, true
  %183 = xor i1 %181, true
  %184 = xor i1 true, true
  %185 = and i1 %182, true
  %186 = and i1 %180, %184
  %187 = and i1 %183, true
  %188 = and i1 %181, %184
  %189 = or i1 %185, %186
  %190 = or i1 %187, %188
  %191 = xor i1 %189, %190
  %192 = or i1 %182, %183
  %193 = xor i1 %192, true
  %194 = or i1 true, %184
  %195 = and i1 %193, %194
  %196 = or i1 %191, %195
  %197 = or i1 %180, %181
  br i1 %196, label %198, label %204

; <label>:198:                                    ; preds = %170
  unreachable

; <label>:199:                                    ; preds = %93
  %200 = load i8*, i8** %8, align 8
  call void @__clang_call_terminate(i8* %200) #11
  unreachable

; <label>:201:                                    ; preds = %35, %20
  br label %35

; <label>:202:                                    ; preds = %77, %62
  br label %77

; <label>:203:                                    ; preds = %127, %101
  br label %127

; <label>:204:                                    ; preds = %170, %155
  %205 = landingpad { i8*, i32 }
          catch i8* null
  %206 = extractvalue { i8*, i32 } %205, 0
  call void @__clang_call_terminate(i8* %206) #11
  br label %170
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator"*, i32** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.444
  %6 = load i32, i32* @y.445
  %7 = add i32 %5, -2087044547
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -2087044547
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2113121633, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2113121633, label %19
    i32 529953021, label %39
    i32 1471854067, label %60
    i32 -950580053, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 529953021, i32 -950580053
  store i32 %38, i32* %15
  br label %68

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %41 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %40, align 8
  store i32** %1, i32*** %41, align 8
  %42 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %40, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %42, i32 0, i32 0
  %44 = load i32**, i32*** %41, align 8
  %45 = load i32*, i32** %44, align 8
  store i32* %45, i32** %43, align 8
  %46 = load i32, i32* @x.444
  %47 = load i32, i32* @y.445
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 1471854067, i32 -950580053
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %63 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %62, align 8
  store i32** %1, i32*** %63, align 8
  %64 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %62, align 8
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %64, i32 0, i32 0
  %66 = load i32**, i32*** %63, align 8
  %67 = load i32*, i32** %66, align 8
  store i32* %67, i32** %65, align 8
  store i32 529953021, i32* %15
  br label %68

; <label>:68:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE11_M_constantEv(%"class.__gnu_debug::_Safe_iterator"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.446
  %5 = load i32, i32* @y.447
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 2082516453, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %58
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 2082516453, label %17
    i32 107066528, label %37
    i32 -1665521448, label %54
    i32 -1809369047, label %55
  ]

; <label>:16:                                     ; preds = %14
  br label %58

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 107066528, i32 -1809369047
  store i32 %36, i32* %13
  br label %58

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %38, align 8
  %39 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %38, align 8
  %40 = load i32, i32* @x.446
  %41 = load i32, i32* @y.447
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -1665521448, i32 -1809369047
  store i32 %53, i32* %13
  br label %58

; <label>:54:                                     ; preds = %14
  ret i1 false

; <label>:55:                                     ; preds = %14
  %56 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %56, align 8
  %57 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %56, align 8
  store i32 107066528, i32* %13
  br label %58

; <label>:58:                                     ; preds = %55, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN11__gnu_debug19_Safe_iterator_baseC2EPKNS_19_Safe_sequence_baseEb(%"class.__gnu_debug::_Safe_iterator_base"*, %"class.__gnu_debug::_Safe_sequence_base"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.__gnu_debug::_Safe_iterator_base"*, align 8
  %5 = alloca %"class.__gnu_debug::_Safe_sequence_base"*, align 8
  %6 = alloca i8, align 1
  store %"class.__gnu_debug::_Safe_iterator_base"* %0, %"class.__gnu_debug::_Safe_iterator_base"** %4, align 8
  store %"class.__gnu_debug::_Safe_sequence_base"* %1, %"class.__gnu_debug::_Safe_sequence_base"** %5, align 8
  %7 = zext i1 %2 to i8
  store i8 %7, i8* %6, align 1
  %8 = load %"class.__gnu_debug::_Safe_iterator_base"*, %"class.__gnu_debug::_Safe_iterator_base"** %4, align 8
  %9 = getelementptr inbounds %"class.__gnu_debug::_Safe_iterator_base", %"class.__gnu_debug::_Safe_iterator_base"* %8, i32 0, i32 0
  store %"class.__gnu_debug::_Safe_sequence_base"* null, %"class.__gnu_debug::_Safe_sequence_base"** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_debug::_Safe_iterator_base", %"class.__gnu_debug::_Safe_iterator_base"* %8, i32 0, i32 1
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_debug::_Safe_iterator_base", %"class.__gnu_debug::_Safe_iterator_base"* %8, i32 0, i32 2
  store %"class.__gnu_debug::_Safe_iterator_base"* null, %"class.__gnu_debug::_Safe_iterator_base"** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_debug::_Safe_iterator_base", %"class.__gnu_debug::_Safe_iterator_base"* %8, i32 0, i32 3
  store %"class.__gnu_debug::_Safe_iterator_base"* null, %"class.__gnu_debug::_Safe_iterator_base"** %12, align 8
  %13 = load %"class.__gnu_debug::_Safe_sequence_base"*, %"class.__gnu_debug::_Safe_sequence_base"** %5, align 8
  %14 = load i8, i8* %6, align 1
  %15 = trunc i8 %14 to i1
  call void @_ZN11__gnu_debug19_Safe_iterator_base9_M_attachEPNS_19_Safe_sequence_baseEb(%"class.__gnu_debug::_Safe_iterator_base"* %8, %"class.__gnu_debug::_Safe_sequence_base"* %13, i1 zeroext %15)
  ret void
}

; Function Attrs: nounwind readonly
declare zeroext i1 @_ZNK11__gnu_debug19_Safe_iterator_base11_M_singularEv(%"class.__gnu_debug::_Safe_iterator_base"*) #12

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_iteratorINS_14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS8_EEEEEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40), i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca %"class.__gnu_debug::_Error_formatter"*
  %6 = alloca %"class.__gnu_debug::_Error_formatter"*, align 8
  %7 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca %"struct.__gnu_debug::_Error_formatter::_Parameter", align 8
  %10 = alloca %"struct.__gnu_debug::_Error_formatter::_Is_iterator", align 1
  store %"class.__gnu_debug::_Error_formatter"* %0, %"class.__gnu_debug::_Error_formatter"** %6, align 8
  store %"class.__gnu_debug::_Safe_iterator"* %1, %"class.__gnu_debug::_Safe_iterator"** %7, align 8
  store i8* %2, i8** %8, align 8
  %11 = load %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %6, align 8
  store %"class.__gnu_debug::_Error_formatter"* %11, %"class.__gnu_debug::_Error_formatter"** %5
  %12 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %5
  %13 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %12, i32 0, i32 3
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %4
  %15 = alloca i32
  store i32 438769540, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %39
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 438769540, label %19
    i32 1705456010, label %23
    i32 -748424025, label %37
  ]

; <label>:18:                                     ; preds = %16
  br label %39

; <label>:19:                                     ; preds = %16
  %20 = load volatile i64, i64* %4
  %21 = icmp ult i64 %20, 9
  %22 = select i1 %21, i32 1705456010, i32 -748424025
  store i32 %22, i32* %15
  br label %39

; <label>:23:                                     ; preds = %16
  %24 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %7, align 8
  %25 = load i8*, i8** %8, align 8
  call void @_ZN11__gnu_debug16_Error_formatter10_ParameterC2IN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS8_EEEERKNS_14_Safe_iteratorIT_T0_EEPKcNS0_12_Is_iteratorE(%"struct.__gnu_debug::_Error_formatter::_Parameter"* %9, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %24, i8* %25)
  %26 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %5
  %27 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %26, i32 0, i32 2
  %28 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %5
  %29 = getelementptr inbounds %"class.__gnu_debug::_Error_formatter", %"class.__gnu_debug::_Error_formatter"* %28, i32 0, i32 3
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 0, 1
  %32 = sub i64 %30, %31
  %33 = add i64 %30, 1
  store i64 %32, i64* %29, align 8
  %34 = getelementptr inbounds [9 x %"struct.__gnu_debug::_Error_formatter::_Parameter"], [9 x %"struct.__gnu_debug::_Error_formatter::_Parameter"]* %27, i64 0, i64 %30
  %35 = bitcast %"struct.__gnu_debug::_Error_formatter::_Parameter"* %34 to i8*
  %36 = bitcast %"struct.__gnu_debug::_Error_formatter::_Parameter"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 56, i32 8, i1 false)
  store i32 -748424025, i32* %15
  br label %39

; <label>:37:                                     ; preds = %16
  %38 = load volatile %"class.__gnu_debug::_Error_formatter"*, %"class.__gnu_debug::_Error_formatter"** %5
  ret %"class.__gnu_debug::_Error_formatter"* %38

; <label>:39:                                     ; preds = %23, %19, %18
  br label %16
}

declare void @_ZN11__gnu_debug19_Safe_iterator_base9_M_attachEPNS_19_Safe_sequence_baseEb(%"class.__gnu_debug::_Safe_iterator_base"*, %"class.__gnu_debug::_Safe_sequence_base"*, i1 zeroext) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN11__gnu_debug16_Error_formatter10_ParameterC2IN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS8_EEEERKNS_14_Safe_iteratorIT_T0_EEPKcNS0_12_Is_iteratorE(%"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40), i8*) unnamed_addr #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"class.__gnu_debug::_Safe_iterator_base"*
  %6 = alloca %"struct.__gnu_debug::_Error_formatter::_Parameter"*
  %7 = alloca %"struct.__gnu_debug::_Error_formatter::_Is_iterator", align 1
  %8 = alloca %"struct.__gnu_debug::_Error_formatter::_Parameter"*, align 8
  %9 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  %10 = alloca i8*, align 8
  store %"struct.__gnu_debug::_Error_formatter::_Parameter"* %0, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %8, align 8
  store %"class.__gnu_debug::_Safe_iterator"* %1, %"class.__gnu_debug::_Safe_iterator"** %9, align 8
  store i8* %2, i8** %10, align 8
  %11 = load %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %8, align 8
  store %"struct.__gnu_debug::_Error_formatter::_Parameter"* %11, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %6
  %12 = load volatile %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %6
  %13 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %12, i32 0, i32 0
  store i32 1, i32* %13, align 8
  %14 = load volatile %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %6
  %15 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %14, i32 0, i32 1
  %16 = bitcast %union.anon* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* %16, i8 0, i64 48, i32 8, i1 false)
  %17 = load i8*, i8** %10, align 8
  %18 = load volatile %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %6
  %19 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %18, i32 0, i32 1
  %20 = bitcast %union.anon* %19 to %struct.anon*
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %20, i32 0, i32 0
  store i8* %17, i8** %21, align 8
  %22 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %9, align 8
  %23 = bitcast %"class.__gnu_debug::_Safe_iterator"* %22 to i8*
  %24 = load volatile %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %6
  %25 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %24, i32 0, i32 1
  %26 = bitcast %union.anon* %25 to %struct.anon*
  %27 = getelementptr inbounds %struct.anon, %struct.anon* %26, i32 0, i32 1
  store i8* %23, i8** %27, align 8
  %28 = load volatile %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %6
  %29 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %28, i32 0, i32 1
  %30 = bitcast %union.anon* %29 to %struct.anon*
  %31 = getelementptr inbounds %struct.anon, %struct.anon* %30, i32 0, i32 2
  store %"class.std::type_info"* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64 }* @_ZTIN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEE to %"class.std::type_info"*), %"class.std::type_info"** %31, align 8
  %32 = load volatile %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %6
  %33 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %32, i32 0, i32 1
  %34 = bitcast %union.anon* %33 to %struct.anon*
  %35 = getelementptr inbounds %struct.anon, %struct.anon* %34, i32 0, i32 3
  store i32 2, i32* %35, align 8
  %36 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %9, align 8
  %37 = call %"class.std::__debug::vector"* @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE15_M_get_sequenceEv(%"class.__gnu_debug::_Safe_iterator"* %36)
  %38 = bitcast %"class.std::__debug::vector"* %37 to i8*
  %39 = load volatile %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %6
  %40 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %39, i32 0, i32 1
  %41 = bitcast %union.anon* %40 to %struct.anon*
  %42 = getelementptr inbounds %struct.anon, %struct.anon* %41, i32 0, i32 5
  store i8* %38, i8** %42, align 8
  %43 = load volatile %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %6
  %44 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %43, i32 0, i32 1
  %45 = bitcast %union.anon* %44 to %struct.anon*
  %46 = getelementptr inbounds %struct.anon, %struct.anon* %45, i32 0, i32 6
  store %"class.std::type_info"* bitcast ({ i8*, i8*, i32, i32, i8*, i64, i8*, i64, i8*, i64 }* @_ZTINSt7__debug6vectorIiSaIiEEE to %"class.std::type_info"*), %"class.std::type_info"** %46, align 8
  %47 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %9, align 8
  %48 = bitcast %"class.__gnu_debug::_Safe_iterator"* %47 to i8*
  %49 = getelementptr inbounds i8, i8* %48, i64 8
  %50 = bitcast i8* %49 to %"class.__gnu_debug::_Safe_iterator_base"*
  store %"class.__gnu_debug::_Safe_iterator_base"* %50, %"class.__gnu_debug::_Safe_iterator_base"** %5
  %51 = alloca i32
  store i32 -562741806, i32* %51
  br label %52

; <label>:52:                                     ; preds = %3, %147
  %53 = load i32, i32* %51
  switch i32 %53, label %54 [
    i32 -562741806, label %55
    i32 -966499540, label %59
    i32 -662042343, label %64
    i32 -363481071, label %91
    i32 2028270414, label %109
    i32 306931358, label %112
    i32 -900683495, label %117
    i32 -1270894121, label %121
    i32 -1663316134, label %126
    i32 1481391110, label %130
    i32 -1427471449, label %135
    i32 -1246496013, label %140
    i32 2043380463, label %141
    i32 1833989464, label %142
    i32 -1407603793, label %143
    i32 1080063782, label %144
  ]

; <label>:54:                                     ; preds = %52
  br label %147

; <label>:55:                                     ; preds = %52
  %56 = load volatile %"class.__gnu_debug::_Safe_iterator_base"*, %"class.__gnu_debug::_Safe_iterator_base"** %5
  %57 = call zeroext i1 @_ZNK11__gnu_debug19_Safe_iterator_base11_M_singularEv(%"class.__gnu_debug::_Safe_iterator_base"* %56) #14
  %58 = select i1 %57, i32 -966499540, i32 -662042343
  store i32 %58, i32* %51
  br label %147

; <label>:59:                                     ; preds = %52
  %60 = load volatile %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %6
  %61 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %60, i32 0, i32 1
  %62 = bitcast %union.anon* %61 to %struct.anon*
  %63 = getelementptr inbounds %struct.anon, %struct.anon* %62, i32 0, i32 4
  store i32 1, i32* %63, align 4
  store i32 -1407603793, i32* %51
  br label %147

; <label>:64:                                     ; preds = %52
  %65 = load i32, i32* @x.452
  %66 = load i32, i32* @y.453
  %67 = sub i32 0, 1
  %68 = add i32 %65, %67
  %69 = sub i32 %65, 1
  %70 = mul i32 %65, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %66, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 false, true
  %77 = and i1 %74, false
  %78 = and i1 %72, %76
  %79 = and i1 %75, false
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 false, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  %90 = select i1 %88, i32 -363481071, i32 1080063782
  store i32 %90, i32* %51
  br label %147

; <label>:91:                                     ; preds = %52
  %92 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %9, align 8
  %93 = call zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE18_M_is_before_beginEv(%"class.__gnu_debug::_Safe_iterator"* %92)
  store i1 %93, i1* %4
  %94 = load i32, i32* @x.452
  %95 = load i32, i32* @y.453
  %96 = add i32 %94, -1214638592
  %97 = sub i32 %96, 1
  %98 = sub i32 %97, -1214638592
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = and i1 %102, %103
  %105 = xor i1 %102, %103
  %106 = or i1 %104, %105
  %107 = or i1 %102, %103
  %108 = select i1 %106, i32 2028270414, i32 1080063782
  store i32 %108, i32* %51
  br label %147

; <label>:109:                                    ; preds = %52
  %110 = load volatile i1, i1* %4
  %111 = select i1 %110, i32 306931358, i32 -900683495
  store i32 %111, i32* %51
  br label %147

; <label>:112:                                    ; preds = %52
  %113 = load volatile %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %6
  %114 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %113, i32 0, i32 1
  %115 = bitcast %union.anon* %114 to %struct.anon*
  %116 = getelementptr inbounds %struct.anon, %struct.anon* %115, i32 0, i32 4
  store i32 5, i32* %116, align 4
  store i32 1833989464, i32* %51
  br label %147

; <label>:117:                                    ; preds = %52
  %118 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %9, align 8
  %119 = call zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE9_M_is_endEv(%"class.__gnu_debug::_Safe_iterator"* %118)
  %120 = select i1 %119, i32 -1270894121, i32 -1663316134
  store i32 %120, i32* %51
  br label %147

; <label>:121:                                    ; preds = %52
  %122 = load volatile %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %6
  %123 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %122, i32 0, i32 1
  %124 = bitcast %union.anon* %123 to %struct.anon*
  %125 = getelementptr inbounds %struct.anon, %struct.anon* %124, i32 0, i32 4
  store i32 4, i32* %125, align 4
  store i32 2043380463, i32* %51
  br label %147

; <label>:126:                                    ; preds = %52
  %127 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %9, align 8
  %128 = call zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE11_M_is_beginEv(%"class.__gnu_debug::_Safe_iterator"* %127)
  %129 = select i1 %128, i32 1481391110, i32 -1427471449
  store i32 %129, i32* %51
  br label %147

; <label>:130:                                    ; preds = %52
  %131 = load volatile %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %6
  %132 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %131, i32 0, i32 1
  %133 = bitcast %union.anon* %132 to %struct.anon*
  %134 = getelementptr inbounds %struct.anon, %struct.anon* %133, i32 0, i32 4
  store i32 2, i32* %134, align 4
  store i32 -1246496013, i32* %51
  br label %147

; <label>:135:                                    ; preds = %52
  %136 = load volatile %"struct.__gnu_debug::_Error_formatter::_Parameter"*, %"struct.__gnu_debug::_Error_formatter::_Parameter"** %6
  %137 = getelementptr inbounds %"struct.__gnu_debug::_Error_formatter::_Parameter", %"struct.__gnu_debug::_Error_formatter::_Parameter"* %136, i32 0, i32 1
  %138 = bitcast %union.anon* %137 to %struct.anon*
  %139 = getelementptr inbounds %struct.anon, %struct.anon* %138, i32 0, i32 4
  store i32 3, i32* %139, align 4
  store i32 -1246496013, i32* %51
  br label %147

; <label>:140:                                    ; preds = %52
  store i32 2043380463, i32* %51
  br label %147

; <label>:141:                                    ; preds = %52
  store i32 1833989464, i32* %51
  br label %147

; <label>:142:                                    ; preds = %52
  store i32 -1407603793, i32* %51
  br label %147

; <label>:143:                                    ; preds = %52
  ret void

; <label>:144:                                    ; preds = %52
  %145 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %9, align 8
  %146 = call zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE18_M_is_before_beginEv(%"class.__gnu_debug::_Safe_iterator"* %145)
  store i32 -363481071, i32* %51
  br label %147

; <label>:147:                                    ; preds = %144, %142, %141, %140, %135, %130, %126, %121, %117, %112, %109, %91, %64, %59, %55, %54
  br label %52
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::__debug::vector"* @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE15_M_get_sequenceEv(%"class.__gnu_debug::_Safe_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %2, align 8
  %3 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %2, align 8
  %4 = bitcast %"class.__gnu_debug::_Safe_iterator"* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 8
  %6 = bitcast i8* %5 to %"class.__gnu_debug::_Safe_iterator_base"*
  %7 = getelementptr inbounds %"class.__gnu_debug::_Safe_iterator_base", %"class.__gnu_debug::_Safe_iterator_base"* %6, i32 0, i32 0
  %8 = load %"class.__gnu_debug::_Safe_sequence_base"*, %"class.__gnu_debug::_Safe_sequence_base"** %7, align 8
  %9 = bitcast %"class.__gnu_debug::_Safe_sequence_base"* %8 to %"class.std::__debug::vector"*
  ret %"class.std::__debug::vector"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE18_M_is_before_beginEv(%"class.__gnu_debug::_Safe_iterator"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %2, align 8
  %3 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %2, align 8
  %4 = call zeroext i1 @_ZN11__gnu_debug18_BeforeBeginHelperINSt7__debug6vectorIiSaIiEEEE5_S_IsIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiS3_EEEEEEbRKNS_14_Safe_iteratorIT_S4_EE(%"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %3)
  ret i1 %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE9_M_is_endEv(%"class.__gnu_debug::_Safe_iterator"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.458
  %6 = load i32, i32* @y.459
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1996834552, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1996834552, label %18
    i32 438117420, label %26
    i32 -441117380, label %50
    i32 1829185914, label %52
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 438117420, i32 1829185914
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  %28 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %27, align 8
  %29 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %27, align 8
  %30 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE4baseEv(%"class.__gnu_debug::_Safe_iterator"* %29) #3
  %31 = call %"class.std::__debug::vector"* @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE15_M_get_sequenceEv(%"class.__gnu_debug::_Safe_iterator"* %29)
  %32 = call dereferenceable(24) %"class.std::__cxx1998::vector"* @_ZNSt7__debug6vectorIiSaIiEE7_M_baseEv(%"class.std::__debug::vector"* %31) #3
  %33 = call i32* @_ZNSt9__cxx19986vectorIiSaIiEE3endEv(%"class.std::__cxx1998::vector"* %32) #3
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %28, i32 0, i32 0
  store i32* %33, i32** %34, align 8
  %35 = call zeroext i1 @_ZN9__gnu_cxxeqIPiNSt9__cxx19986vectorIiSaIiEEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %30, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %28) #3
  store i1 %35, i1* %2
  %36 = load i32, i32* @x.458
  %37 = load i32, i32* @y.459
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 -441117380, i32 1829185914
  store i32 %49, i32* %14
  br label %62

; <label>:50:                                     ; preds = %15
  %51 = load volatile i1, i1* %2
  ret i1 %51

; <label>:52:                                     ; preds = %15
  %53 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  %54 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %53, align 8
  %55 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %53, align 8
  %56 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE4baseEv(%"class.__gnu_debug::_Safe_iterator"* %55) #3
  %57 = call %"class.std::__debug::vector"* @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE15_M_get_sequenceEv(%"class.__gnu_debug::_Safe_iterator"* %55)
  %58 = call dereferenceable(24) %"class.std::__cxx1998::vector"* @_ZNSt7__debug6vectorIiSaIiEE7_M_baseEv(%"class.std::__debug::vector"* %57) #3
  %59 = call i32* @_ZNSt9__cxx19986vectorIiSaIiEE3endEv(%"class.std::__cxx1998::vector"* %58) #3
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %54, i32 0, i32 0
  store i32* %59, i32** %60, align 8
  %61 = call zeroext i1 @_ZN9__gnu_cxxeqIPiNSt9__cxx19986vectorIiSaIiEEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %56, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %54) #3
  store i32 438117420, i32* %14
  br label %62

; <label>:62:                                     ; preds = %52, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE11_M_is_beginEv(%"class.__gnu_debug::_Safe_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %2, align 8
  %4 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %2, align 8
  %5 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE4baseEv(%"class.__gnu_debug::_Safe_iterator"* %4) #3
  %6 = call %"class.std::__debug::vector"* @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE15_M_get_sequenceEv(%"class.__gnu_debug::_Safe_iterator"* %4)
  %7 = call dereferenceable(24) %"class.std::__cxx1998::vector"* @_ZNSt7__debug6vectorIiSaIiEE7_M_baseEv(%"class.std::__debug::vector"* %6) #3
  %8 = call i32* @_ZNSt9__cxx19986vectorIiSaIiEE5beginEv(%"class.std::__cxx1998::vector"* %7) #3
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store i32* %8, i32** %9, align 8
  %10 = call zeroext i1 @_ZN9__gnu_cxxeqIPiNSt9__cxx19986vectorIiSaIiEEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %3) #3
  ret i1 %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN11__gnu_debug18_BeforeBeginHelperINSt7__debug6vectorIiSaIiEEEE5_S_IsIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiS3_EEEEEEbRKNS_14_Safe_iteratorIT_S4_EE(%"class.__gnu_debug::_Safe_iterator"* dereferenceable(40)) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.462
  %5 = load i32, i32* @y.463
  %6 = add i32 %4, 598042156
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 598042156
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1766534357, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %46
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1766534357, label %18
    i32 1658224324, label %26
    i32 -898820227, label %43
    i32 1705533845, label %44
  ]

; <label>:17:                                     ; preds = %15
  br label %46

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1658224324, i32 1705533845
  store i32 %25, i32* %14
  br label %46

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %27, align 8
  %28 = load i32, i32* @x.462
  %29 = load i32, i32* @y.463
  %30 = add i32 %28, -1188315913
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, -1188315913
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 -898820227, i32 1705533845
  store i32 %42, i32* %14
  br label %46

; <label>:43:                                     ; preds = %15
  ret i1 false

; <label>:44:                                     ; preds = %15
  %45 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %45, align 8
  store i32 1658224324, i32* %14
  br label %46

; <label>:46:                                     ; preds = %44, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxeqIPiNSt9__cxx19986vectorIiSaIiEEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #4 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %7 = load i32*, i32** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %8) #3
  %10 = load i32*, i32** %9, align 8
  %11 = icmp eq i32* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE4baseEv(%"class.__gnu_debug::_Safe_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %2, align 8
  %3 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %2, align 8
  %4 = bitcast %"class.__gnu_debug::_Safe_iterator"* %3 to %"class.__gnu_cxx::__normal_iterator"*
  ret %"class.__gnu_cxx::__normal_iterator"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt9__cxx19986vectorIiSaIiEE3endEv(%"class.std::__cxx1998::vector"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::__cxx1998::vector"*, align 8
  store %"class.std::__cxx1998::vector"* %0, %"class.std::__cxx1998::vector"** %3, align 8
  %4 = load %"class.std::__cxx1998::vector"*, %"class.std::__cxx1998::vector"** %3, align 8
  %5 = bitcast %"class.std::__cxx1998::vector"* %4 to %"struct.std::__cxx1998::_Vector_base"*
  %6 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base", %"struct.std::__cxx1998::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::__cxx1998::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator"* %2, i32** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  ret i32* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  ret i32** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN11__gnu_debug13__valid_rangeIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEEbRKNS_14_Safe_iteratorIT_T0_EESH_(%"class.__gnu_debug::_Safe_iterator"* dereferenceable(40), %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.472
  %7 = load i32, i32* @y.473
  %8 = sub i32 %6, 690623696
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 690623696
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 615450231, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %69
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 615450231, label %20
    i32 1889109224, label %28
    i32 1287395741, label %61
    i32 -12904127, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %69

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1889109224, i32 -12904127
  store i32 %27, i32* %16
  br label %69

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  %30 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %29, align 8
  store %"class.__gnu_debug::_Safe_iterator"* %1, %"class.__gnu_debug::_Safe_iterator"** %30, align 8
  %31 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %29, align 8
  %32 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %30, align 8
  %33 = call zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE14_M_valid_rangeERKSC_(%"class.__gnu_debug::_Safe_iterator"* %31, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %32)
  store i1 %33, i1* %3
  %34 = load i32, i32* @x.472
  %35 = load i32, i32* @y.473
  %36 = add i32 %34, 245723228
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, 245723228
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 1287395741, i32 -12904127
  store i32 %60, i32* %16
  br label %69

; <label>:61:                                     ; preds = %17
  %62 = load volatile i1, i1* %3
  ret i1 %62

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  %65 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %64, align 8
  store %"class.__gnu_debug::_Safe_iterator"* %1, %"class.__gnu_debug::_Safe_iterator"** %65, align 8
  %66 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %64, align 8
  %67 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %65, align 8
  %68 = call zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE14_M_valid_rangeERKSC_(%"class.__gnu_debug::_Safe_iterator"* %66, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %67)
  store i32 1889109224, i32* %16
  br label %69

; <label>:69:                                     ; preds = %63, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSt18__next_permutationIN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS7_EEEENS2_5__ops15_Iter_less_iterEEbT_SG_T0_(%"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"*) #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i1, align 1
  %4 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %5 = alloca %"class.__gnu_debug::_Safe_iterator", align 8
  %6 = alloca i32
  %7 = alloca %"class.__gnu_debug::_Safe_iterator", align 8
  %8 = alloca %"class.__gnu_debug::_Safe_iterator", align 8
  %9 = alloca %"class.__gnu_debug::_Safe_iterator", align 8
  %10 = alloca i8*
  %11 = alloca i32
  %12 = alloca %"class.__gnu_debug::_Safe_iterator", align 8
  %13 = alloca %"class.__gnu_debug::_Safe_iterator", align 8
  %14 = alloca %"class.__gnu_debug::_Safe_iterator", align 8
  %15 = alloca %"class.__gnu_debug::_Safe_iterator", align 8
  %16 = alloca %"class.__gnu_debug::_Safe_iterator", align 8
  %17 = alloca %"class.__gnu_debug::_Safe_iterator", align 8
  %18 = alloca %"class.__gnu_debug::_Safe_iterator", align 8
  %19 = alloca %"struct.std::random_access_iterator_tag", align 1
  %20 = alloca %"struct.std::random_access_iterator_tag", align 1
  %21 = alloca %"class.__gnu_debug::_Safe_iterator", align 8
  %22 = alloca %"class.__gnu_debug::_Safe_iterator", align 8
  %23 = alloca %"struct.std::random_access_iterator_tag", align 1
  %24 = alloca %"struct.std::random_access_iterator_tag", align 1
  %25 = call zeroext i1 @_ZN11__gnu_debugeqIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEEbRKNS_14_Safe_iteratorIT_T0_EESH_(%"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %0, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %1) #3
  br i1 %25, label %26, label %27

; <label>:26:                                     ; preds = %2
  store i1 false, i1* %3, align 1
  br label %358

; <label>:27:                                     ; preds = %2
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEC2ERKSC_(%"class.__gnu_debug::_Safe_iterator"* %5, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %0) #3
  %28 = call dereferenceable(40) %"class.__gnu_debug::_Safe_iterator"* @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEppEv(%"class.__gnu_debug::_Safe_iterator"* %5) #3
  %29 = call zeroext i1 @_ZN11__gnu_debugeqIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEEbRKNS_14_Safe_iteratorIT_T0_EESH_(%"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %5, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %1) #3
  br i1 %29, label %30, label %31

; <label>:30:                                     ; preds = %27
  store i1 false, i1* %3, align 1
  store i32 1, i32* %6, align 4
  br label %357

; <label>:31:                                     ; preds = %27
  %32 = call dereferenceable(40) %"class.__gnu_debug::_Safe_iterator"* @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEaSERKSC_(%"class.__gnu_debug::_Safe_iterator"* %5, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %1) #3
  %33 = call dereferenceable(40) %"class.__gnu_debug::_Safe_iterator"* @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEmmEv(%"class.__gnu_debug::_Safe_iterator"* %5) #3
  br label %34

; <label>:34:                                     ; preds = %354, %31
  %35 = load i32, i32* @x.474
  %36 = load i32, i32* @y.475
  %37 = add i32 %35, -1160861087
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -1160861087
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  br i1 %47, label %49, label %365

; <label>:49:                                     ; preds = %34, %365
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEC2ERKSC_(%"class.__gnu_debug::_Safe_iterator"* %7, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %5) #3
  %50 = call dereferenceable(40) %"class.__gnu_debug::_Safe_iterator"* @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEmmEv(%"class.__gnu_debug::_Safe_iterator"* %5) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEC2ERKSC_(%"class.__gnu_debug::_Safe_iterator"* %8, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %5) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEC2ERKSC_(%"class.__gnu_debug::_Safe_iterator"* %9, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %7) #3
  %51 = load i32, i32* @x.474
  %52 = load i32, i32* @y.475
  %53 = add i32 %51, -475532679
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, -475532679
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  br i1 %63, label %65, label %365

; <label>:65:                                     ; preds = %49
  %66 = invoke zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclIN11__gnu_debug14_Safe_iteratorINS_17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS9_EEEESF_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %4, %"class.__gnu_debug::_Safe_iterator"* %8, %"class.__gnu_debug::_Safe_iterator"* %9)
          to label %67 unwind label %166

; <label>:67:                                     ; preds = %65
  %68 = load i32, i32* @x.474
  %69 = load i32, i32* @y.475
  %70 = sub i32 0, 1
  %71 = add i32 %68, %70
  %72 = sub i32 %68, 1
  %73 = mul i32 %68, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %69, 10
  %77 = xor i1 %75, true
  %78 = xor i1 %76, true
  %79 = xor i1 true, true
  %80 = and i1 %77, true
  %81 = and i1 %75, %79
  %82 = and i1 %78, true
  %83 = and i1 %76, %79
  %84 = or i1 %80, %81
  %85 = or i1 %82, %83
  %86 = xor i1 %84, %85
  %87 = or i1 %77, %78
  %88 = xor i1 %87, true
  %89 = or i1 true, %79
  %90 = and i1 %88, %89
  %91 = or i1 %86, %90
  %92 = or i1 %75, %76
  br i1 %91, label %93, label %367

; <label>:93:                                     ; preds = %67, %367
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %9) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %8) #3
  %94 = load i32, i32* @x.474
  %95 = load i32, i32* @y.475
  %96 = sub i32 0, 1
  %97 = add i32 %94, %96
  %98 = sub i32 %94, 1
  %99 = mul i32 %94, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %95, 10
  %103 = and i1 %101, %102
  %104 = xor i1 %101, %102
  %105 = or i1 %103, %104
  %106 = or i1 %101, %102
  br i1 %105, label %107, label %367

; <label>:107:                                    ; preds = %93
  br i1 %66, label %108, label %258

; <label>:108:                                    ; preds = %107
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEC2ERKSC_(%"class.__gnu_debug::_Safe_iterator"* %12, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %1) #3
  br label %109

; <label>:109:                                    ; preds = %165, %108
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEC2ERKSC_(%"class.__gnu_debug::_Safe_iterator"* %13, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %5) #3
  %110 = call dereferenceable(40) %"class.__gnu_debug::_Safe_iterator"* @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEmmEv(%"class.__gnu_debug::_Safe_iterator"* %12) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEC2ERKSC_(%"class.__gnu_debug::_Safe_iterator"* %14, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %110) #3
  %111 = invoke zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclIN11__gnu_debug14_Safe_iteratorINS_17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS9_EEEESF_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %4, %"class.__gnu_debug::_Safe_iterator"* %13, %"class.__gnu_debug::_Safe_iterator"* %14)
          to label %112 unwind label %170

; <label>:112:                                    ; preds = %109
  %113 = load i32, i32* @x.474
  %114 = load i32, i32* @y.475
  %115 = add i32 %113, 1311432078
  %116 = sub i32 %115, 1
  %117 = sub i32 %116, 1311432078
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = and i1 %121, %122
  %124 = xor i1 %121, %122
  %125 = or i1 %123, %124
  %126 = or i1 %121, %122
  br i1 %125, label %127, label %368

; <label>:127:                                    ; preds = %112, %368
  %128 = xor i1 %111, true
  %129 = and i1 true, %128
  %130 = xor i1 true, true
  %131 = and i1 %111, %130
  %132 = xor i1 true, true
  %133 = and i1 %132, true
  %134 = and i1 true, %130
  %135 = or i1 %129, %131
  %136 = or i1 %133, %134
  %137 = xor i1 %135, %136
  %138 = xor i1 %111, true
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %14) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %13) #3
  %139 = load i32, i32* @x.474
  %140 = load i32, i32* @y.475
  %141 = sub i32 0, 1
  %142 = add i32 %139, %141
  %143 = sub i32 %139, 1
  %144 = mul i32 %139, %142
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %140, 10
  %148 = xor i1 %146, true
  %149 = xor i1 %147, true
  %150 = xor i1 true, true
  %151 = and i1 %148, true
  %152 = and i1 %146, %150
  %153 = and i1 %149, true
  %154 = and i1 %147, %150
  %155 = or i1 %151, %152
  %156 = or i1 %153, %154
  %157 = xor i1 %155, %156
  %158 = or i1 %148, %149
  %159 = xor i1 %158, true
  %160 = or i1 true, %150
  %161 = and i1 %159, %160
  %162 = or i1 %157, %161
  %163 = or i1 %146, %147
  br i1 %162, label %164, label %368

; <label>:164:                                    ; preds = %127
  br i1 %137, label %165, label %174

; <label>:165:                                    ; preds = %164
  br label %109

; <label>:166:                                    ; preds = %65
  %167 = landingpad { i8*, i32 }
          cleanup
  %168 = extractvalue { i8*, i32 } %167, 0
  store i8* %168, i8** %10, align 8
  %169 = extractvalue { i8*, i32 } %167, 1
  store i32 %169, i32* %11, align 4
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %9) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %8) #3
  br label %355

; <label>:170:                                    ; preds = %109
  %171 = landingpad { i8*, i32 }
          cleanup
  %172 = extractvalue { i8*, i32 } %171, 0
  store i8* %172, i8** %10, align 8
  %173 = extractvalue { i8*, i32 } %171, 1
  store i32 %173, i32* %11, align 4
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %14) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %13) #3
  br label %257

; <label>:174:                                    ; preds = %164
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEC2ERKSC_(%"class.__gnu_debug::_Safe_iterator"* %15, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %5) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEC2ERKSC_(%"class.__gnu_debug::_Safe_iterator"* %16, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %12) #3
  invoke void @_ZSt9iter_swapIN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS7_EEEESD_EvT_T0_(%"class.__gnu_debug::_Safe_iterator"* %15, %"class.__gnu_debug::_Safe_iterator"* %16)
          to label %175 unwind label %249

; <label>:175:                                    ; preds = %174
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %16) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %15) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEC2ERKSC_(%"class.__gnu_debug::_Safe_iterator"* %17, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %7) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEC2ERKSC_(%"class.__gnu_debug::_Safe_iterator"* %18, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %1) #3
  invoke void @_ZSt19__iterator_categoryIN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS7_EEEEENSt15iterator_traitsIT_E17iterator_categoryERKSF_(%"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %0)
          to label %176 unwind label %253

; <label>:176:                                    ; preds = %175
  %177 = load i32, i32* @x.474
  %178 = load i32, i32* @y.475
  %179 = sub i32 0, 1
  %180 = add i32 %177, %179
  %181 = sub i32 %177, 1
  %182 = mul i32 %177, %180
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %178, 10
  %186 = and i1 %184, %185
  %187 = xor i1 %184, %185
  %188 = or i1 %186, %187
  %189 = or i1 %184, %185
  br i1 %188, label %190, label %390

; <label>:190:                                    ; preds = %176, %390
  %191 = load i32, i32* @x.474
  %192 = load i32, i32* @y.475
  %193 = sub i32 %191, 747019782
  %194 = sub i32 %193, 1
  %195 = add i32 %194, 747019782
  %196 = sub i32 %191, 1
  %197 = mul i32 %191, %195
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %192, 10
  %201 = xor i1 %199, true
  %202 = xor i1 %200, true
  %203 = xor i1 true, true
  %204 = and i1 %201, true
  %205 = and i1 %199, %203
  %206 = and i1 %202, true
  %207 = and i1 %200, %203
  %208 = or i1 %204, %205
  %209 = or i1 %206, %207
  %210 = xor i1 %208, %209
  %211 = or i1 %201, %202
  %212 = xor i1 %211, true
  %213 = or i1 true, %203
  %214 = and i1 %212, %213
  %215 = or i1 %210, %214
  %216 = or i1 %199, %200
  br i1 %215, label %217, label %390

; <label>:217:                                    ; preds = %190
  invoke void @_ZSt9__reverseIN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS7_EEEEEvT_SE_St26random_access_iterator_tag(%"class.__gnu_debug::_Safe_iterator"* %17, %"class.__gnu_debug::_Safe_iterator"* %18)
          to label %218 unwind label %253

; <label>:218:                                    ; preds = %217
  %219 = load i32, i32* @x.474
  %220 = load i32, i32* @y.475
  %221 = add i32 %219, -1236947437
  %222 = sub i32 %221, 1
  %223 = sub i32 %222, -1236947437
  %224 = sub i32 %219, 1
  %225 = mul i32 %219, %223
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %220, 10
  %229 = and i1 %227, %228
  %230 = xor i1 %227, %228
  %231 = or i1 %229, %230
  %232 = or i1 %227, %228
  br i1 %231, label %233, label %391

; <label>:233:                                    ; preds = %218, %391
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %18) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %17) #3
  store i1 true, i1* %3, align 1
  store i32 1, i32* %6, align 4
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %12) #3
  %234 = load i32, i32* @x.474
  %235 = load i32, i32* @y.475
  %236 = sub i32 %234, -1095314906
  %237 = sub i32 %236, 1
  %238 = add i32 %237, -1095314906
  %239 = sub i32 %234, 1
  %240 = mul i32 %234, %238
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %235, 10
  %244 = and i1 %242, %243
  %245 = xor i1 %242, %243
  %246 = or i1 %244, %245
  %247 = or i1 %242, %243
  br i1 %246, label %248, label %391

; <label>:248:                                    ; preds = %233
  br label %310

; <label>:249:                                    ; preds = %174
  %250 = landingpad { i8*, i32 }
          cleanup
  %251 = extractvalue { i8*, i32 } %250, 0
  store i8* %251, i8** %10, align 8
  %252 = extractvalue { i8*, i32 } %250, 1
  store i32 %252, i32* %11, align 4
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %16) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %15) #3
  br label %257

; <label>:253:                                    ; preds = %217, %175
  %254 = landingpad { i8*, i32 }
          cleanup
  %255 = extractvalue { i8*, i32 } %254, 0
  store i8* %255, i8** %10, align 8
  %256 = extractvalue { i8*, i32 } %254, 1
  store i32 %256, i32* %11, align 4
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %18) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %17) #3
  br label %257

; <label>:257:                                    ; preds = %253, %249, %170
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %12) #3
  br label %355

; <label>:258:                                    ; preds = %107
  %259 = call zeroext i1 @_ZN11__gnu_debugeqIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEEbRKNS_14_Safe_iteratorIT_T0_EESH_(%"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %5, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %0) #3
  br i1 %259, label %260, label %309

; <label>:260:                                    ; preds = %258
  %261 = load i32, i32* @x.474
  %262 = load i32, i32* @y.475
  %263 = sub i32 %261, -1827439638
  %264 = sub i32 %263, 1
  %265 = add i32 %264, -1827439638
  %266 = sub i32 %261, 1
  %267 = mul i32 %261, %265
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %262, 10
  %271 = and i1 %269, %270
  %272 = xor i1 %269, %270
  %273 = or i1 %271, %272
  %274 = or i1 %269, %270
  br i1 %273, label %275, label %392

; <label>:275:                                    ; preds = %260, %392
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEC2ERKSC_(%"class.__gnu_debug::_Safe_iterator"* %21, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %0) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEC2ERKSC_(%"class.__gnu_debug::_Safe_iterator"* %22, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %1) #3
  %276 = load i32, i32* @x.474
  %277 = load i32, i32* @y.475
  %278 = sub i32 %276, -1562310938
  %279 = sub i32 %278, 1
  %280 = add i32 %279, -1562310938
  %281 = sub i32 %276, 1
  %282 = mul i32 %276, %280
  %283 = urem i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %277, 10
  %286 = xor i1 %284, true
  %287 = xor i1 %285, true
  %288 = xor i1 false, true
  %289 = and i1 %286, false
  %290 = and i1 %284, %288
  %291 = and i1 %287, false
  %292 = and i1 %285, %288
  %293 = or i1 %289, %290
  %294 = or i1 %291, %292
  %295 = xor i1 %293, %294
  %296 = or i1 %286, %287
  %297 = xor i1 %296, true
  %298 = or i1 false, %288
  %299 = and i1 %297, %298
  %300 = or i1 %295, %299
  %301 = or i1 %284, %285
  br i1 %300, label %302, label %392

; <label>:302:                                    ; preds = %275
  invoke void @_ZSt19__iterator_categoryIN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS7_EEEEENSt15iterator_traitsIT_E17iterator_categoryERKSF_(%"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %0)
          to label %303 unwind label %305

; <label>:303:                                    ; preds = %302
  invoke void @_ZSt9__reverseIN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS7_EEEEEvT_SE_St26random_access_iterator_tag(%"class.__gnu_debug::_Safe_iterator"* %21, %"class.__gnu_debug::_Safe_iterator"* %22)
          to label %304 unwind label %305

; <label>:304:                                    ; preds = %303
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %22) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %21) #3
  store i1 false, i1* %3, align 1
  store i32 1, i32* %6, align 4
  br label %310

; <label>:305:                                    ; preds = %303, %302
  %306 = landingpad { i8*, i32 }
          cleanup
  %307 = extractvalue { i8*, i32 } %306, 0
  store i8* %307, i8** %10, align 8
  %308 = extractvalue { i8*, i32 } %306, 1
  store i32 %308, i32* %11, align 4
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %22) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %21) #3
  br label %355

; <label>:309:                                    ; preds = %258
  store i32 0, i32* %6, align 4
  br label %310

; <label>:310:                                    ; preds = %309, %304, %248
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %7) #3
  %311 = load i32, i32* %6, align 4
  br label %312

; <label>:312:                                    ; preds = %310
  %313 = icmp eq i32 %311, 0
  br i1 %313, label %314, label %356

; <label>:314:                                    ; preds = %312
  %315 = load i32, i32* @x.474
  %316 = load i32, i32* @y.475
  %317 = sub i32 0, 1
  %318 = add i32 %315, %317
  %319 = sub i32 %315, 1
  %320 = mul i32 %315, %318
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %316, 10
  %324 = and i1 %322, %323
  %325 = xor i1 %322, %323
  %326 = or i1 %324, %325
  %327 = or i1 %322, %323
  br i1 %326, label %328, label %393

; <label>:328:                                    ; preds = %314, %393
  %329 = load i32, i32* @x.474
  %330 = load i32, i32* @y.475
  %331 = sub i32 0, 1
  %332 = add i32 %329, %331
  %333 = sub i32 %329, 1
  %334 = mul i32 %329, %332
  %335 = urem i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %330, 10
  %338 = xor i1 %336, true
  %339 = xor i1 %337, true
  %340 = xor i1 true, true
  %341 = and i1 %338, true
  %342 = and i1 %336, %340
  %343 = and i1 %339, true
  %344 = and i1 %337, %340
  %345 = or i1 %341, %342
  %346 = or i1 %343, %344
  %347 = xor i1 %345, %346
  %348 = or i1 %338, %339
  %349 = xor i1 %348, true
  %350 = or i1 true, %340
  %351 = and i1 %349, %350
  %352 = or i1 %347, %351
  %353 = or i1 %336, %337
  br i1 %352, label %354, label %393

; <label>:354:                                    ; preds = %328
  br label %34

; <label>:355:                                    ; preds = %305, %257, %166
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %7) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %5) #3
  br label %360

; <label>:356:                                    ; preds = %312
  br label %357

; <label>:357:                                    ; preds = %356, %30
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %5) #3
  br label %358

; <label>:358:                                    ; preds = %357, %26
  %359 = load i1, i1* %3, align 1
  ret i1 %359

; <label>:360:                                    ; preds = %355
  %361 = load i8*, i8** %10, align 8
  %362 = load i32, i32* %11, align 4
  %363 = insertvalue { i8*, i32 } undef, i8* %361, 0
  %364 = insertvalue { i8*, i32 } %363, i32 %362, 1
  resume { i8*, i32 } %364

; <label>:365:                                    ; preds = %49, %34
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEC2ERKSC_(%"class.__gnu_debug::_Safe_iterator"* %7, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %5) #3
  %366 = call dereferenceable(40) %"class.__gnu_debug::_Safe_iterator"* @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEmmEv(%"class.__gnu_debug::_Safe_iterator"* %5) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEC2ERKSC_(%"class.__gnu_debug::_Safe_iterator"* %8, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %5) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEC2ERKSC_(%"class.__gnu_debug::_Safe_iterator"* %9, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %7) #3
  br label %49

; <label>:367:                                    ; preds = %93, %67
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %9) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %8) #3
  br label %93

; <label>:368:                                    ; preds = %127, %112
  %369 = add i1 %111, false
  %370 = sub i1 %369, true
  %371 = sub i1 %370, false
  %372 = sub i1 %111, true
  %373 = mul i1 %371, true
  %374 = add i1 %111, false
  %375 = sub i1 %374, true
  %376 = sub i1 %375, false
  %377 = sub i1 %111, true
  %378 = mul i1 %376, true
  %379 = sub i1 %111, false
  %380 = sub i1 %379, true
  %381 = add i1 %380, false
  %382 = sub i1 %111, true
  %383 = mul i1 %381, true
  %384 = xor i1 %111, true
  %385 = and i1 true, %384
  %386 = xor i1 true, true
  %387 = and i1 %111, %386
  %388 = or i1 %385, %387
  %389 = xor i1 %111, true
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %14) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %13) #3
  br label %127

; <label>:390:                                    ; preds = %190, %176
  br label %190

; <label>:391:                                    ; preds = %233, %218
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %18) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %17) #3
  store i1 true, i1* %3, align 1
  store i32 1, i32* %6, align 4
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %12) #3
  br label %233

; <label>:392:                                    ; preds = %275, %260
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEC2ERKSC_(%"class.__gnu_debug::_Safe_iterator"* %21, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %0) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEC2ERKSC_(%"class.__gnu_debug::_Safe_iterator"* %22, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %1) #3
  br label %275

; <label>:393:                                    ; preds = %328, %314
  br label %328
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEC2ERKSC_(%"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40)) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  %4 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_debug::_Error_formatter", align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %3, align 8
  store %"class.__gnu_debug::_Safe_iterator"* %1, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  %9 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %3, align 8
  %10 = bitcast %"class.__gnu_debug::_Safe_iterator"* %9 to %"class.__gnu_cxx::__normal_iterator"*
  %11 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  %12 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE4baseEv(%"class.__gnu_debug::_Safe_iterator"* %11) #3
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_debug::_Safe_iterator"* %9 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 8
  %17 = bitcast i8* %16 to %"class.__gnu_debug::_Safe_iterator_base"*
  invoke void @_ZN11__gnu_debug19_Safe_iterator_baseC2Ev(%"class.__gnu_debug::_Safe_iterator_base"* %17)
          to label %18 unwind label %357

; <label>:18:                                     ; preds = %2
  %19 = load i32, i32* @x.476
  %20 = load i32, i32* @y.477
  %21 = sub i32 %19, 562606162
  %22 = sub i32 %21, 1
  %23 = add i32 %22, 562606162
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 false, true
  %32 = and i1 %29, false
  %33 = and i1 %27, %31
  %34 = and i1 %30, false
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 false, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  br i1 %43, label %45, label %415

; <label>:45:                                     ; preds = %18, %415
  %46 = load i32, i32* @x.476
  %47 = load i32, i32* @y.477
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  br i1 %57, label %59, label %415

; <label>:59:                                     ; preds = %45
  br label %60

; <label>:60:                                     ; preds = %59
  %61 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  %62 = bitcast %"class.__gnu_debug::_Safe_iterator"* %61 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 8
  %64 = bitcast i8* %63 to %"class.__gnu_debug::_Safe_iterator_base"*
  %65 = call zeroext i1 @_ZNK11__gnu_debug19_Safe_iterator_base11_M_singularEv(%"class.__gnu_debug::_Safe_iterator_base"* %64) #14
  br i1 %65, label %66, label %70

; <label>:66:                                     ; preds = %60
  %67 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  %68 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE4baseEv(%"class.__gnu_debug::_Safe_iterator"* %67) #3
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEC2Ev(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %69 = call zeroext i1 @_ZN9__gnu_cxxeqIPiNSt9__cxx19986vectorIiSaIiEEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %68, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5) #3
  br label %70

; <label>:70:                                     ; preds = %66, %60
  %71 = phi i1 [ true, %60 ], [ %69, %66 ]
  %72 = load i32, i32* @x.476
  %73 = load i32, i32* @y.477
  %74 = add i32 %72, 1505116760
  %75 = sub i32 %74, 1
  %76 = sub i32 %75, 1505116760
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = xor i1 %80, true
  %83 = xor i1 %81, true
  %84 = xor i1 false, true
  %85 = and i1 %82, false
  %86 = and i1 %80, %84
  %87 = and i1 %83, false
  %88 = and i1 %81, %84
  %89 = or i1 %85, %86
  %90 = or i1 %87, %88
  %91 = xor i1 %89, %90
  %92 = or i1 %82, %83
  %93 = xor i1 %92, true
  %94 = or i1 false, %84
  %95 = and i1 %93, %94
  %96 = or i1 %91, %95
  %97 = or i1 %80, %81
  br i1 %96, label %98, label %416

; <label>:98:                                     ; preds = %70, %416
  %99 = xor i1 %71, true
  %100 = and i1 false, %99
  %101 = xor i1 false, true
  %102 = and i1 %71, %101
  %103 = xor i1 true, true
  %104 = and i1 %103, false
  %105 = and i1 true, %101
  %106 = or i1 %100, %102
  %107 = or i1 %104, %105
  %108 = xor i1 %106, %107
  %109 = xor i1 %71, true
  %110 = load i32, i32* @x.476
  %111 = load i32, i32* @y.477
  %112 = sub i32 0, 1
  %113 = add i32 %110, %112
  %114 = sub i32 %110, 1
  %115 = mul i32 %110, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %111, 10
  %119 = and i1 %117, %118
  %120 = xor i1 %117, %118
  %121 = or i1 %119, %120
  %122 = or i1 %117, %118
  br i1 %121, label %123, label %416

; <label>:123:                                    ; preds = %98
  br i1 %108, label %124, label %293

; <label>:124:                                    ; preds = %123
  invoke void @_ZN11__gnu_debug16_Error_formatter5_M_atEPKcm(%"class.__gnu_debug::_Error_formatter"* sret %6, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.7, i32 0, i32 0), i64 182)
          to label %125 unwind label %245

; <label>:125:                                    ; preds = %124
  %126 = load i32, i32* @x.476
  %127 = load i32, i32* @y.477
  %128 = sub i32 0, 1
  %129 = add i32 %126, %128
  %130 = sub i32 %126, 1
  %131 = mul i32 %126, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %127, 10
  %135 = and i1 %133, %134
  %136 = xor i1 %133, %134
  %137 = or i1 %135, %136
  %138 = or i1 %133, %134
  br i1 %137, label %139, label %440

; <label>:139:                                    ; preds = %125, %440
  %140 = call dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter10_M_messageENS_13_Debug_msg_idE(%"class.__gnu_debug::_Error_formatter"* %6, i32 22) #3
  %141 = load i32, i32* @x.476
  %142 = load i32, i32* @y.477
  %143 = add i32 %141, -1286596266
  %144 = sub i32 %143, 1
  %145 = sub i32 %144, -1286596266
  %146 = sub i32 %141, 1
  %147 = mul i32 %141, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %142, 10
  %151 = xor i1 %149, true
  %152 = xor i1 %150, true
  %153 = xor i1 false, true
  %154 = and i1 %151, false
  %155 = and i1 %149, %153
  %156 = and i1 %152, false
  %157 = and i1 %150, %153
  %158 = or i1 %154, %155
  %159 = or i1 %156, %157
  %160 = xor i1 %158, %159
  %161 = or i1 %151, %152
  %162 = xor i1 %161, true
  %163 = or i1 false, %153
  %164 = and i1 %162, %163
  %165 = or i1 %160, %164
  %166 = or i1 %149, %150
  br i1 %165, label %167, label %440

; <label>:167:                                    ; preds = %139
  %168 = invoke dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_iteratorINS_14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS8_EEEEEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"* %140, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0))
          to label %169 unwind label %245

; <label>:169:                                    ; preds = %167
  %170 = load i32, i32* @x.476
  %171 = load i32, i32* @y.477
  %172 = add i32 %170, 1663716117
  %173 = sub i32 %172, 1
  %174 = sub i32 %173, 1663716117
  %175 = sub i32 %170, 1
  %176 = mul i32 %170, %174
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %171, 10
  %180 = and i1 %178, %179
  %181 = xor i1 %178, %179
  %182 = or i1 %180, %181
  %183 = or i1 %178, %179
  br i1 %182, label %184, label %442

; <label>:184:                                    ; preds = %169, %442
  %185 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  %186 = load i32, i32* @x.476
  %187 = load i32, i32* @y.477
  %188 = add i32 %186, 1232394286
  %189 = sub i32 %188, 1
  %190 = sub i32 %189, 1232394286
  %191 = sub i32 %186, 1
  %192 = mul i32 %186, %190
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %187, 10
  %196 = and i1 %194, %195
  %197 = xor i1 %194, %195
  %198 = or i1 %196, %197
  %199 = or i1 %194, %195
  br i1 %198, label %200, label %442

; <label>:200:                                    ; preds = %184
  %201 = invoke dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_iteratorINS_14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS8_EEEEEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"* %168, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %185, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0))
          to label %202 unwind label %245

; <label>:202:                                    ; preds = %200
  %203 = load i32, i32* @x.476
  %204 = load i32, i32* @y.477
  %205 = sub i32 %203, -458132204
  %206 = sub i32 %205, 1
  %207 = add i32 %206, -458132204
  %208 = sub i32 %203, 1
  %209 = mul i32 %203, %207
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %204, 10
  %213 = xor i1 %211, true
  %214 = xor i1 %212, true
  %215 = xor i1 true, true
  %216 = and i1 %213, true
  %217 = and i1 %211, %215
  %218 = and i1 %214, true
  %219 = and i1 %212, %215
  %220 = or i1 %216, %217
  %221 = or i1 %218, %219
  %222 = xor i1 %220, %221
  %223 = or i1 %213, %214
  %224 = xor i1 %223, true
  %225 = or i1 true, %215
  %226 = and i1 %224, %225
  %227 = or i1 %222, %226
  %228 = or i1 %211, %212
  br i1 %227, label %229, label %444

; <label>:229:                                    ; preds = %202, %444
  %230 = load i32, i32* @x.476
  %231 = load i32, i32* @y.477
  %232 = sub i32 0, 1
  %233 = add i32 %230, %232
  %234 = sub i32 %230, 1
  %235 = mul i32 %230, %233
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %231, 10
  %239 = and i1 %237, %238
  %240 = xor i1 %237, %238
  %241 = or i1 %239, %240
  %242 = or i1 %237, %238
  br i1 %241, label %243, label %444

; <label>:243:                                    ; preds = %229
  invoke void @_ZNK11__gnu_debug16_Error_formatter8_M_errorEv(%"class.__gnu_debug::_Error_formatter"* %201) #13
          to label %244 unwind label %245

; <label>:244:                                    ; preds = %243
  unreachable

; <label>:245:                                    ; preds = %349, %243, %200, %167, %124
  %246 = load i32, i32* @x.476
  %247 = load i32, i32* @y.477
  %248 = sub i32 %246, -543990784
  %249 = sub i32 %248, 1
  %250 = add i32 %249, -543990784
  %251 = sub i32 %246, 1
  %252 = mul i32 %246, %250
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %247, 10
  %256 = and i1 %254, %255
  %257 = xor i1 %254, %255
  %258 = or i1 %256, %257
  %259 = or i1 %254, %255
  br i1 %258, label %260, label %445

; <label>:260:                                    ; preds = %245, %445
  %261 = landingpad { i8*, i32 }
          catch i8* null
  %262 = extractvalue { i8*, i32 } %261, 0
  store i8* %262, i8** %7, align 8
  %263 = extractvalue { i8*, i32 } %261, 1
  store i32 %263, i32* %8, align 4
  %264 = bitcast %"class.__gnu_debug::_Safe_iterator"* %9 to i8*
  %265 = getelementptr inbounds i8, i8* %264, i64 8
  %266 = bitcast i8* %265 to %"class.__gnu_debug::_Safe_iterator_base"*
  call void @_ZN11__gnu_debug19_Safe_iterator_baseD2Ev(%"class.__gnu_debug::_Safe_iterator_base"* %266) #3
  %267 = load i32, i32* @x.476
  %268 = load i32, i32* @y.477
  %269 = sub i32 0, 1
  %270 = add i32 %267, %269
  %271 = sub i32 %267, 1
  %272 = mul i32 %267, %270
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %268, 10
  %276 = xor i1 %274, true
  %277 = xor i1 %275, true
  %278 = xor i1 false, true
  %279 = and i1 %276, false
  %280 = and i1 %274, %278
  %281 = and i1 %277, false
  %282 = and i1 %275, %278
  %283 = or i1 %279, %280
  %284 = or i1 %281, %282
  %285 = xor i1 %283, %284
  %286 = or i1 %276, %277
  %287 = xor i1 %286, true
  %288 = or i1 false, %278
  %289 = and i1 %287, %288
  %290 = or i1 %285, %289
  %291 = or i1 %274, %275
  br i1 %290, label %292, label %445

; <label>:292:                                    ; preds = %260
  br label %413

; <label>:293:                                    ; preds = %123
  br label %294

; <label>:294:                                    ; preds = %293
  %295 = load i32, i32* @x.476
  %296 = load i32, i32* @y.477
  %297 = add i32 %295, 58085286
  %298 = sub i32 %297, 1
  %299 = sub i32 %298, 58085286
  %300 = sub i32 %295, 1
  %301 = mul i32 %295, %299
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %296, 10
  %305 = xor i1 %303, true
  %306 = xor i1 %304, true
  %307 = xor i1 false, true
  %308 = and i1 %305, false
  %309 = and i1 %303, %307
  %310 = and i1 %306, false
  %311 = and i1 %304, %307
  %312 = or i1 %308, %309
  %313 = or i1 %310, %311
  %314 = xor i1 %312, %313
  %315 = or i1 %305, %306
  %316 = xor i1 %315, true
  %317 = or i1 false, %307
  %318 = and i1 %316, %317
  %319 = or i1 %314, %318
  %320 = or i1 %303, %304
  br i1 %319, label %321, label %452

; <label>:321:                                    ; preds = %294, %452
  %322 = load i32, i32* @x.476
  %323 = load i32, i32* @y.477
  %324 = sub i32 %322, -1781866535
  %325 = sub i32 %324, 1
  %326 = add i32 %325, -1781866535
  %327 = sub i32 %322, 1
  %328 = mul i32 %322, %326
  %329 = urem i32 %328, 2
  %330 = icmp eq i32 %329, 0
  %331 = icmp slt i32 %323, 10
  %332 = xor i1 %330, true
  %333 = xor i1 %331, true
  %334 = xor i1 true, true
  %335 = and i1 %332, true
  %336 = and i1 %330, %334
  %337 = and i1 %333, true
  %338 = and i1 %331, %334
  %339 = or i1 %335, %336
  %340 = or i1 %337, %338
  %341 = xor i1 %339, %340
  %342 = or i1 %332, %333
  %343 = xor i1 %342, true
  %344 = or i1 true, %334
  %345 = and i1 %343, %344
  %346 = or i1 %341, %345
  %347 = or i1 %330, %331
  br i1 %346, label %348, label %452

; <label>:348:                                    ; preds = %321
  br label %349

; <label>:349:                                    ; preds = %348
  %350 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  %351 = bitcast %"class.__gnu_debug::_Safe_iterator"* %350 to i8*
  %352 = getelementptr inbounds i8, i8* %351, i64 8
  %353 = bitcast i8* %352 to %"class.__gnu_debug::_Safe_iterator_base"*
  %354 = getelementptr inbounds %"class.__gnu_debug::_Safe_iterator_base", %"class.__gnu_debug::_Safe_iterator_base"* %353, i32 0, i32 0
  %355 = load %"class.__gnu_debug::_Safe_sequence_base"*, %"class.__gnu_debug::_Safe_sequence_base"** %354, align 8
  invoke void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE9_M_attachEPNS_19_Safe_sequence_baseE(%"class.__gnu_debug::_Safe_iterator"* %9, %"class.__gnu_debug::_Safe_sequence_base"* %355)
          to label %356 unwind label %245

; <label>:356:                                    ; preds = %349
  ret void

; <label>:357:                                    ; preds = %2
  %358 = load i32, i32* @x.476
  %359 = load i32, i32* @y.477
  %360 = sub i32 0, 1
  %361 = add i32 %358, %360
  %362 = sub i32 %358, 1
  %363 = mul i32 %358, %361
  %364 = urem i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = icmp slt i32 %359, 10
  %367 = xor i1 %365, true
  %368 = xor i1 %366, true
  %369 = xor i1 false, true
  %370 = and i1 %367, false
  %371 = and i1 %365, %369
  %372 = and i1 %368, false
  %373 = and i1 %366, %369
  %374 = or i1 %370, %371
  %375 = or i1 %372, %373
  %376 = xor i1 %374, %375
  %377 = or i1 %367, %368
  %378 = xor i1 %377, true
  %379 = or i1 false, %369
  %380 = and i1 %378, %379
  %381 = or i1 %376, %380
  %382 = or i1 %365, %366
  br i1 %381, label %383, label %453

; <label>:383:                                    ; preds = %357, %453
  %384 = landingpad { i8*, i32 }
          catch i8* null
  %385 = extractvalue { i8*, i32 } %384, 0
  call void @__clang_call_terminate(i8* %385) #11
  %386 = load i32, i32* @x.476
  %387 = load i32, i32* @y.477
  %388 = sub i32 %386, -1691864384
  %389 = sub i32 %388, 1
  %390 = add i32 %389, -1691864384
  %391 = sub i32 %386, 1
  %392 = mul i32 %386, %390
  %393 = urem i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = icmp slt i32 %387, 10
  %396 = xor i1 %394, true
  %397 = xor i1 %395, true
  %398 = xor i1 false, true
  %399 = and i1 %396, false
  %400 = and i1 %394, %398
  %401 = and i1 %397, false
  %402 = and i1 %395, %398
  %403 = or i1 %399, %400
  %404 = or i1 %401, %402
  %405 = xor i1 %403, %404
  %406 = or i1 %396, %397
  %407 = xor i1 %406, true
  %408 = or i1 false, %398
  %409 = and i1 %407, %408
  %410 = or i1 %405, %409
  %411 = or i1 %394, %395
  br i1 %410, label %412, label %453

; <label>:412:                                    ; preds = %383
  unreachable

; <label>:413:                                    ; preds = %292
  %414 = load i8*, i8** %7, align 8
  call void @__clang_call_terminate(i8* %414) #11
  unreachable

; <label>:415:                                    ; preds = %45, %18
  br label %45

; <label>:416:                                    ; preds = %98, %70
  %417 = shl i1 %71, true
  %418 = sub i1 false, false
  %419 = sub i1 %418, %71
  %420 = add i1 %419, false
  %421 = sub i1 false, %71
  %422 = sub i1 %420, false
  %423 = add i1 %422, true
  %424 = add i1 %423, false
  %425 = add i1 %420, true
  %426 = sub i1 false, %71
  %427 = add i1 false, %426
  %428 = sub i1 false, %71
  %429 = sub i1 false, %427
  %430 = sub i1 false, true
  %431 = add i1 %429, %430
  %432 = sub i1 false, %431
  %433 = add i1 %427, true
  %434 = xor i1 %71, true
  %435 = and i1 true, %434
  %436 = xor i1 true, true
  %437 = and i1 %71, %436
  %438 = or i1 %435, %437
  %439 = xor i1 %71, true
  br label %98

; <label>:440:                                    ; preds = %139, %125
  %441 = call dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter10_M_messageENS_13_Debug_msg_idE(%"class.__gnu_debug::_Error_formatter"* %6, i32 22) #3
  br label %139

; <label>:442:                                    ; preds = %184, %169
  %443 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  br label %184

; <label>:444:                                    ; preds = %229, %202
  br label %229

; <label>:445:                                    ; preds = %260, %245
  %446 = landingpad { i8*, i32 }
          catch i8* null
  %447 = extractvalue { i8*, i32 } %446, 0
  store i8* %447, i8** %7, align 8
  %448 = extractvalue { i8*, i32 } %446, 1
  store i32 %448, i32* %8, align 4
  %449 = bitcast %"class.__gnu_debug::_Safe_iterator"* %9 to i8*
  %450 = getelementptr inbounds i8, i8* %449, i64 8
  %451 = bitcast i8* %450 to %"class.__gnu_debug::_Safe_iterator_base"*
  call void @_ZN11__gnu_debug19_Safe_iterator_baseD2Ev(%"class.__gnu_debug::_Safe_iterator_base"* %451) #3
  br label %260

; <label>:452:                                    ; preds = %321, %294
  br label %321

; <label>:453:                                    ; preds = %383, %357
  %454 = landingpad { i8*, i32 }
          catch i8* null
  %455 = extractvalue { i8*, i32 } %454, 0
  call void @__clang_call_terminate(i8* %455) #11
  br label %383
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops16__iter_less_iterEv() #4 comdat {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE14_M_valid_rangeERKSC_(%"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca i32
  %8 = alloca %"class.__gnu_debug::_Safe_iterator_base"*
  %9 = alloca %"class.__gnu_debug::_Safe_iterator_base"*
  %10 = alloca %"class.__gnu_debug::_Safe_iterator"*
  %11 = alloca i1, align 1
  %12 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  %13 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  %14 = alloca %"struct.std::pair", align 8
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %12, align 8
  store %"class.__gnu_debug::_Safe_iterator"* %1, %"class.__gnu_debug::_Safe_iterator"** %13, align 8
  %15 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %12, align 8
  store %"class.__gnu_debug::_Safe_iterator"* %15, %"class.__gnu_debug::_Safe_iterator"** %10
  %16 = load volatile %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %10
  %17 = bitcast %"class.__gnu_debug::_Safe_iterator"* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 8
  %19 = bitcast i8* %18 to %"class.__gnu_debug::_Safe_iterator_base"*
  store %"class.__gnu_debug::_Safe_iterator_base"* %19, %"class.__gnu_debug::_Safe_iterator_base"** %9
  %20 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %13, align 8
  %21 = bitcast %"class.__gnu_debug::_Safe_iterator"* %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 8
  %23 = bitcast i8* %22 to %"class.__gnu_debug::_Safe_iterator_base"*
  store %"class.__gnu_debug::_Safe_iterator_base"* %23, %"class.__gnu_debug::_Safe_iterator_base"** %8
  %24 = alloca i32
  store i32 247064447, i32* %24
  br label %25

; <label>:25:                                     ; preds = %2, %284
  %26 = load i32, i32* %24
  switch i32 %26, label %27 [
    i32 247064447, label %28
    i32 -180029271, label %33
    i32 256041980, label %34
    i32 1739697843, label %47
    i32 927429211, label %51
    i32 2060529413, label %59
    i32 -1806539942, label %63
    i32 121280138, label %68
    i32 -592168728, label %69
    i32 1895660362, label %70
    i32 944329057, label %74
    i32 96247467, label %75
    i32 1822952421, label %79
    i32 334012247, label %106
    i32 -895274142, label %136
    i32 -1287934938, label %139
    i32 -1814934060, label %140
    i32 -1896041937, label %156
    i32 -1621825962, label %186
    i32 -382756905, label %189
    i32 1550511331, label %205
    i32 1732535010, label %234
    i32 877121804, label %237
    i32 696052106, label %238
    i32 946565596, label %239
    i32 2123013121, label %255
    i32 -1231098729, label %271
    i32 612575666, label %273
    i32 -1985244272, label %276
    i32 192120708, label %279
    i32 614729850, label %282
  ]

; <label>:27:                                     ; preds = %25
  br label %284

; <label>:28:                                     ; preds = %25
  %29 = load volatile %"class.__gnu_debug::_Safe_iterator_base"*, %"class.__gnu_debug::_Safe_iterator_base"** %9
  %30 = load volatile %"class.__gnu_debug::_Safe_iterator_base"*, %"class.__gnu_debug::_Safe_iterator_base"** %8
  %31 = call zeroext i1 @_ZNK11__gnu_debug19_Safe_iterator_base14_M_can_compareERKS0_(%"class.__gnu_debug::_Safe_iterator_base"* %29, %"class.__gnu_debug::_Safe_iterator_base"* dereferenceable(32) %30) #14
  %32 = select i1 %31, i32 256041980, i32 -180029271
  store i32 %32, i32* %24
  br label %284

; <label>:33:                                     ; preds = %25
  store i1 false, i1* %11, align 1
  store i32 946565596, i32* %24
  br label %284

; <label>:34:                                     ; preds = %25
  %35 = load volatile %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %10
  %36 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE4baseEv(%"class.__gnu_debug::_Safe_iterator"* %35) #3
  %37 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %13, align 8
  %38 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE4baseEv(%"class.__gnu_debug::_Safe_iterator"* %37) #3
  %39 = call { i64, i32 } @_ZN11__gnu_debug14__get_distanceIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEEEESt4pairINSt15iterator_traitsIT_E15difference_typeENS_19_Distance_precisionEERKSB_SH_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %36, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %38)
  %40 = bitcast %"struct.std::pair"* %14 to { i64, i32 }*
  %41 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %40, i32 0, i32 0
  %42 = extractvalue { i64, i32 } %39, 0
  store i64 %42, i64* %41, align 8
  %43 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %40, i32 0, i32 1
  %44 = extractvalue { i64, i32 } %39, 1
  store i32 %44, i32* %43, align 8
  %45 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %14, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  store i32 %46, i32* %7
  store i32 1739697843, i32* %24
  br label %284

; <label>:47:                                     ; preds = %25
  %48 = load volatile i32, i32* %7
  %49 = icmp slt i32 %48, 1
  %50 = select i1 %49, i32 2060529413, i32 927429211
  store i32 %50, i32* %24
  br label %284

; <label>:51:                                     ; preds = %25
  %52 = load volatile i32, i32* %7
  %53 = sub i32 %52, 638827022
  %54 = add i32 %53, -1
  %55 = add i32 %54, 638827022
  %56 = add i32 %52, -1
  %57 = icmp ule i32 %55, 1
  %58 = select i1 %57, i32 1895660362, i32 944329057
  store i32 %58, i32* %24
  br label %284

; <label>:59:                                     ; preds = %25
  %60 = load volatile i32, i32* %7
  %61 = icmp eq i32 %60, 0
  %62 = select i1 %61, i32 -1806539942, i32 944329057
  store i32 %62, i32* %24
  br label %284

; <label>:63:                                     ; preds = %25
  %64 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %14, i32 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = icmp eq i64 %65, 0
  %67 = select i1 %66, i32 121280138, i32 -592168728
  store i32 %67, i32* %24
  br label %284

; <label>:68:                                     ; preds = %25
  store i1 true, i1* %11, align 1
  store i32 946565596, i32* %24
  br label %284

; <label>:69:                                     ; preds = %25
  store i32 96247467, i32* %24
  br label %284

; <label>:70:                                     ; preds = %25
  %71 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %14, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = icmp sge i64 %72, 0
  store i1 %73, i1* %11, align 1
  store i32 946565596, i32* %24
  br label %284

; <label>:74:                                     ; preds = %25
  store i32 96247467, i32* %24
  br label %284

; <label>:75:                                     ; preds = %25
  %76 = load volatile %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %10
  %77 = call zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE15_M_is_beginnestEv(%"class.__gnu_debug::_Safe_iterator"* %76)
  %78 = select i1 %77, i32 -1287934938, i32 1822952421
  store i32 %78, i32* %24
  br label %284

; <label>:79:                                     ; preds = %25
  %80 = load i32, i32* @x.480
  %81 = load i32, i32* @y.481
  %82 = sub i32 0, 1
  %83 = add i32 %80, %82
  %84 = sub i32 %80, 1
  %85 = mul i32 %80, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %81, 10
  %89 = xor i1 %87, true
  %90 = xor i1 %88, true
  %91 = xor i1 false, true
  %92 = and i1 %89, false
  %93 = and i1 %87, %91
  %94 = and i1 %90, false
  %95 = and i1 %88, %91
  %96 = or i1 %92, %93
  %97 = or i1 %94, %95
  %98 = xor i1 %96, %97
  %99 = or i1 %89, %90
  %100 = xor i1 %99, true
  %101 = or i1 false, %91
  %102 = and i1 %100, %101
  %103 = or i1 %98, %102
  %104 = or i1 %87, %88
  %105 = select i1 %103, i32 334012247, i32 612575666
  store i32 %105, i32* %24
  br label %284

; <label>:106:                                    ; preds = %25
  %107 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %13, align 8
  %108 = call zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE9_M_is_endEv(%"class.__gnu_debug::_Safe_iterator"* %107)
  store i1 %108, i1* %6
  %109 = load i32, i32* @x.480
  %110 = load i32, i32* @y.481
  %111 = sub i32 %109, 258403521
  %112 = sub i32 %111, 1
  %113 = add i32 %112, 258403521
  %114 = sub i32 %109, 1
  %115 = mul i32 %109, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %110, 10
  %119 = xor i1 %117, true
  %120 = xor i1 %118, true
  %121 = xor i1 false, true
  %122 = and i1 %119, false
  %123 = and i1 %117, %121
  %124 = and i1 %120, false
  %125 = and i1 %118, %121
  %126 = or i1 %122, %123
  %127 = or i1 %124, %125
  %128 = xor i1 %126, %127
  %129 = or i1 %119, %120
  %130 = xor i1 %129, true
  %131 = or i1 false, %121
  %132 = and i1 %130, %131
  %133 = or i1 %128, %132
  %134 = or i1 %117, %118
  %135 = select i1 %133, i32 -895274142, i32 612575666
  store i32 %135, i32* %24
  br label %284

; <label>:136:                                    ; preds = %25
  %137 = load volatile i1, i1* %6
  %138 = select i1 %137, i32 -1287934938, i32 -1814934060
  store i32 %138, i32* %24
  br label %284

; <label>:139:                                    ; preds = %25
  store i1 true, i1* %11, align 1
  store i32 946565596, i32* %24
  br label %284

; <label>:140:                                    ; preds = %25
  %141 = load i32, i32* @x.480
  %142 = load i32, i32* @y.481
  %143 = add i32 %141, -278012864
  %144 = sub i32 %143, 1
  %145 = sub i32 %144, -278012864
  %146 = sub i32 %141, 1
  %147 = mul i32 %141, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %142, 10
  %151 = and i1 %149, %150
  %152 = xor i1 %149, %150
  %153 = or i1 %151, %152
  %154 = or i1 %149, %150
  %155 = select i1 %153, i32 -1896041937, i32 -1985244272
  store i32 %155, i32* %24
  br label %284

; <label>:156:                                    ; preds = %25
  %157 = load volatile %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %10
  %158 = call zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE9_M_is_endEv(%"class.__gnu_debug::_Safe_iterator"* %157)
  store i1 %158, i1* %5
  %159 = load i32, i32* @x.480
  %160 = load i32, i32* @y.481
  %161 = add i32 %159, 1903523365
  %162 = sub i32 %161, 1
  %163 = sub i32 %162, 1903523365
  %164 = sub i32 %159, 1
  %165 = mul i32 %159, %163
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %160, 10
  %169 = xor i1 %167, true
  %170 = xor i1 %168, true
  %171 = xor i1 true, true
  %172 = and i1 %169, true
  %173 = and i1 %167, %171
  %174 = and i1 %170, true
  %175 = and i1 %168, %171
  %176 = or i1 %172, %173
  %177 = or i1 %174, %175
  %178 = xor i1 %176, %177
  %179 = or i1 %169, %170
  %180 = xor i1 %179, true
  %181 = or i1 true, %171
  %182 = and i1 %180, %181
  %183 = or i1 %178, %182
  %184 = or i1 %167, %168
  %185 = select i1 %183, i32 -1621825962, i32 -1985244272
  store i32 %185, i32* %24
  br label %284

; <label>:186:                                    ; preds = %25
  %187 = load volatile i1, i1* %5
  %188 = select i1 %187, i32 877121804, i32 -382756905
  store i32 %188, i32* %24
  br label %284

; <label>:189:                                    ; preds = %25
  %190 = load i32, i32* @x.480
  %191 = load i32, i32* @y.481
  %192 = add i32 %190, 1711378993
  %193 = sub i32 %192, 1
  %194 = sub i32 %193, 1711378993
  %195 = sub i32 %190, 1
  %196 = mul i32 %190, %194
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %191, 10
  %200 = and i1 %198, %199
  %201 = xor i1 %198, %199
  %202 = or i1 %200, %201
  %203 = or i1 %198, %199
  %204 = select i1 %202, i32 1550511331, i32 192120708
  store i32 %204, i32* %24
  br label %284

; <label>:205:                                    ; preds = %25
  %206 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %13, align 8
  %207 = call zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE15_M_is_beginnestEv(%"class.__gnu_debug::_Safe_iterator"* %206)
  store i1 %207, i1* %4
  %208 = load i32, i32* @x.480
  %209 = load i32, i32* @y.481
  %210 = sub i32 0, 1
  %211 = add i32 %208, %210
  %212 = sub i32 %208, 1
  %213 = mul i32 %208, %211
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %209, 10
  %217 = xor i1 %215, true
  %218 = xor i1 %216, true
  %219 = xor i1 false, true
  %220 = and i1 %217, false
  %221 = and i1 %215, %219
  %222 = and i1 %218, false
  %223 = and i1 %216, %219
  %224 = or i1 %220, %221
  %225 = or i1 %222, %223
  %226 = xor i1 %224, %225
  %227 = or i1 %217, %218
  %228 = xor i1 %227, true
  %229 = or i1 false, %219
  %230 = and i1 %228, %229
  %231 = or i1 %226, %230
  %232 = or i1 %215, %216
  %233 = select i1 %231, i32 1732535010, i32 192120708
  store i32 %233, i32* %24
  br label %284

; <label>:234:                                    ; preds = %25
  %235 = load volatile i1, i1* %4
  %236 = select i1 %235, i32 877121804, i32 696052106
  store i32 %236, i32* %24
  br label %284

; <label>:237:                                    ; preds = %25
  store i1 false, i1* %11, align 1
  store i32 946565596, i32* %24
  br label %284

; <label>:238:                                    ; preds = %25
  store i1 true, i1* %11, align 1
  store i32 946565596, i32* %24
  br label %284

; <label>:239:                                    ; preds = %25
  %240 = load i32, i32* @x.480
  %241 = load i32, i32* @y.481
  %242 = add i32 %240, 1467772534
  %243 = sub i32 %242, 1
  %244 = sub i32 %243, 1467772534
  %245 = sub i32 %240, 1
  %246 = mul i32 %240, %244
  %247 = urem i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %241, 10
  %250 = and i1 %248, %249
  %251 = xor i1 %248, %249
  %252 = or i1 %250, %251
  %253 = or i1 %248, %249
  %254 = select i1 %252, i32 2123013121, i32 614729850
  store i32 %254, i32* %24
  br label %284

; <label>:255:                                    ; preds = %25
  %256 = load i1, i1* %11, align 1
  store i1 %256, i1* %3
  %257 = load i32, i32* @x.480
  %258 = load i32, i32* @y.481
  %259 = sub i32 0, 1
  %260 = add i32 %257, %259
  %261 = sub i32 %257, 1
  %262 = mul i32 %257, %260
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %258, 10
  %266 = and i1 %264, %265
  %267 = xor i1 %264, %265
  %268 = or i1 %266, %267
  %269 = or i1 %264, %265
  %270 = select i1 %268, i32 -1231098729, i32 614729850
  store i32 %270, i32* %24
  br label %284

; <label>:271:                                    ; preds = %25
  %272 = load volatile i1, i1* %3
  ret i1 %272

; <label>:273:                                    ; preds = %25
  %274 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %13, align 8
  %275 = call zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE9_M_is_endEv(%"class.__gnu_debug::_Safe_iterator"* %274)
  store i32 334012247, i32* %24
  br label %284

; <label>:276:                                    ; preds = %25
  %277 = load volatile %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %10
  %278 = call zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE9_M_is_endEv(%"class.__gnu_debug::_Safe_iterator"* %277)
  store i32 -1896041937, i32* %24
  br label %284

; <label>:279:                                    ; preds = %25
  %280 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %13, align 8
  %281 = call zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE15_M_is_beginnestEv(%"class.__gnu_debug::_Safe_iterator"* %280)
  store i32 1550511331, i32* %24
  br label %284

; <label>:282:                                    ; preds = %25
  %283 = load i1, i1* %11, align 1
  store i32 2123013121, i32* %24
  br label %284

; <label>:284:                                    ; preds = %282, %279, %276, %273, %255, %239, %238, %237, %234, %205, %189, %186, %156, %140, %139, %136, %106, %79, %75, %74, %70, %69, %68, %63, %59, %51, %47, %34, %33, %28, %27
  br label %25
}

; Function Attrs: nounwind readonly
declare zeroext i1 @_ZNK11__gnu_debug19_Safe_iterator_base14_M_can_compareERKS0_(%"class.__gnu_debug::_Safe_iterator_base"*, %"class.__gnu_debug::_Safe_iterator_base"* dereferenceable(32)) #12

; Function Attrs: noinline uwtable
define linkonce_odr { i64, i32 } @_ZN11__gnu_debug14__get_distanceIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEEEESt4pairINSt15iterator_traitsIT_E15difference_typeENS_19_Distance_precisionEERKSB_SH_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"struct.std::pair", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %6 = alloca %"struct.std::random_access_iterator_tag", align 1
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %5, align 8
  %7 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %5, align 8
  %9 = call { i64, i32 } @_ZN11__gnu_debug14__get_distanceIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEEEESt4pairINSt15iterator_traitsIT_E15difference_typeENS_19_Distance_precisionEERKSB_SH_St26random_access_iterator_tag(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %7, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %8)
  %10 = bitcast %"struct.std::pair"* %3 to { i64, i32 }*
  %11 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %10, i32 0, i32 0
  %12 = extractvalue { i64, i32 } %9, 0
  store i64 %12, i64* %11, align 8
  %13 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %10, i32 0, i32 1
  %14 = extractvalue { i64, i32 } %9, 1
  store i32 %14, i32* %13, align 8
  %15 = bitcast %"struct.std::pair"* %3 to { i64, i32 }*
  %16 = load { i64, i32 }, { i64, i32 }* %15, align 8
  ret { i64, i32 } %16
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE15_M_is_beginnestEv(%"class.__gnu_debug::_Safe_iterator"*) #0 comdat align 2 {
  %2 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %2, align 8
  %3 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %2, align 8
  %4 = call zeroext i1 @_ZN11__gnu_debug18_BeforeBeginHelperINSt7__debug6vectorIiSaIiEEEE15_S_Is_BeginnestIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiS3_EEEEEEbRKNS_14_Safe_iteratorIT_S4_EE(%"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %3)
  ret i1 %4
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64, i32 } @_ZN11__gnu_debug14__get_distanceIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEEEESt4pairINSt15iterator_traitsIT_E15difference_typeENS_19_Distance_precisionEERKSB_SH_St26random_access_iterator_tag(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca { i64, i32 }
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.486
  %7 = load i32, i32* @y.487
  %8 = sub i32 %6, -283972300
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -283972300
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 166018381, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %81
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 166018381, label %20
    i32 1512401327, label %28
    i32 -2114703408, label %61
    i32 -1942267173, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %81

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1512401327, i32 -1942267173
  store i32 %27, i32* %16
  br label %81

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::pair", align 8
  %30 = alloca %"struct.std::random_access_iterator_tag", align 1
  %31 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %32 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %33 = alloca i64, align 8
  %34 = alloca i32, align 4
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %31, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %32, align 8
  %35 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %32, align 8
  %36 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %31, align 8
  %37 = call i64 @_ZN9__gnu_cxxmiIPiNSt9__cxx19986vectorIiSaIiEEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %35, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %36) #3
  store i64 %37, i64* %33, align 8
  store i32 2, i32* %34, align 4
  %38 = call { i64, i32 } @_ZSt9make_pairIlN11__gnu_debug19_Distance_precisionEESt4pairINSt17__decay_and_stripIT_E6__typeENS3_IT0_E6__typeEEOS4_OS7_(i64* dereferenceable(8) %33, i32* dereferenceable(4) %34)
  %39 = bitcast %"struct.std::pair"* %29 to { i64, i32 }*
  %40 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %39, i32 0, i32 0
  %41 = extractvalue { i64, i32 } %38, 0
  store i64 %41, i64* %40, align 8
  %42 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %39, i32 0, i32 1
  %43 = extractvalue { i64, i32 } %38, 1
  store i32 %43, i32* %42, align 8
  %44 = bitcast %"struct.std::pair"* %29 to { i64, i32 }*
  %45 = load { i64, i32 }, { i64, i32 }* %44, align 8
  store { i64, i32 } %45, { i64, i32 }* %3
  %46 = load i32, i32* @x.486
  %47 = load i32, i32* @y.487
  %48 = sub i32 %46, 1489758695
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 1489758695
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -2114703408, i32 -1942267173
  store i32 %60, i32* %16
  br label %81

; <label>:61:                                     ; preds = %17
  %62 = load volatile { i64, i32 }, { i64, i32 }* %3
  ret { i64, i32 } %62

; <label>:63:                                     ; preds = %17
  %64 = alloca %"struct.std::pair", align 8
  %65 = alloca %"struct.std::random_access_iterator_tag", align 1
  %66 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %67 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %68 = alloca i64, align 8
  %69 = alloca i32, align 4
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %66, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %67, align 8
  %70 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %67, align 8
  %71 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %66, align 8
  %72 = call i64 @_ZN9__gnu_cxxmiIPiNSt9__cxx19986vectorIiSaIiEEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %70, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %71) #3
  store i64 %72, i64* %68, align 8
  store i32 2, i32* %69, align 4
  %73 = call { i64, i32 } @_ZSt9make_pairIlN11__gnu_debug19_Distance_precisionEESt4pairINSt17__decay_and_stripIT_E6__typeENS3_IT0_E6__typeEEOS4_OS7_(i64* dereferenceable(8) %68, i32* dereferenceable(4) %69)
  %74 = bitcast %"struct.std::pair"* %64 to { i64, i32 }*
  %75 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %74, i32 0, i32 0
  %76 = extractvalue { i64, i32 } %73, 0
  store i64 %76, i64* %75, align 8
  %77 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %74, i32 0, i32 1
  %78 = extractvalue { i64, i32 } %73, 1
  store i32 %78, i32* %77, align 8
  %79 = bitcast %"struct.std::pair"* %64 to { i64, i32 }*
  %80 = load { i64, i32 }, { i64, i32 }* %79, align 8
  store i32 1512401327, i32* %16
  br label %81

; <label>:81:                                     ; preds = %63, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr { i64, i32 } @_ZSt9make_pairIlN11__gnu_debug19_Distance_precisionEESt4pairINSt17__decay_and_stripIT_E6__typeENS3_IT0_E6__typeEEOS4_OS7_(i64* dereferenceable(8), i32* dereferenceable(4)) #0 comdat {
  %3 = alloca %"struct.std::pair", align 8
  %4 = alloca i64*, align 8
  %5 = alloca i32*, align 8
  store i64* %0, i64** %4, align 8
  store i32* %1, i32** %5, align 8
  %6 = load i64*, i64** %4, align 8
  %7 = call dereferenceable(8) i64* @_ZSt7forwardIlEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %6) #3
  %8 = load i32*, i32** %5, align 8
  %9 = call dereferenceable(4) i32* @_ZSt7forwardIN11__gnu_debug19_Distance_precisionEEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %8) #3
  call void @_ZNSt4pairIlN11__gnu_debug19_Distance_precisionEEC2IlS1_vEEOT_OT0_(%"struct.std::pair"* %3, i64* dereferenceable(8) %7, i32* dereferenceable(4) %9)
  %10 = bitcast %"struct.std::pair"* %3 to { i64, i32 }*
  %11 = load { i64, i32 }, { i64, i32 }* %10, align 8
  ret { i64, i32 } %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPiNSt9__cxx19986vectorIiSaIiEEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKS9_SC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #4 comdat {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.490
  %7 = load i32, i32* @y.491
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1601720085, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %155
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1601720085, label %19
    i32 -1847644778, label %39
    i32 780747417, label %70
    i32 -629374762, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %155

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1847644778, i32 -629374762
  store i32 %38, i32* %15
  br label %155

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %40, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %41, align 8
  %42 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %40, align 8
  %43 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %42) #3
  %44 = load i32*, i32** %43, align 8
  %45 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %41, align 8
  %46 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %45) #3
  %47 = load i32*, i32** %46, align 8
  %48 = ptrtoint i32* %44 to i64
  %49 = ptrtoint i32* %47 to i64
  %50 = sub i64 %48, -4785750216922812939
  %51 = sub i64 %50, %49
  %52 = add i64 %51, -4785750216922812939
  %53 = sub i64 %48, %49
  %54 = sdiv exact i64 %52, 4
  store i64 %54, i64* %3
  %55 = load i32, i32* @x.490
  %56 = load i32, i32* @y.491
  %57 = add i32 %55, 1565131371
  %58 = sub i32 %57, 1
  %59 = sub i32 %58, 1565131371
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  %69 = select i1 %67, i32 780747417, i32 -629374762
  store i32 %69, i32* %15
  br label %155

; <label>:70:                                     ; preds = %16
  %71 = load volatile i64, i64* %3
  ret i64 %71

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %74 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %73, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %74, align 8
  %75 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %73, align 8
  %76 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %75) #3
  %77 = load i32*, i32** %76, align 8
  %78 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %74, align 8
  %79 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %78) #3
  %80 = load i32*, i32** %79, align 8
  %81 = ptrtoint i32* %77 to i64
  %82 = ptrtoint i32* %80 to i64
  %83 = shl i64 %81, %82
  %84 = add i64 0, 6585045645780855329
  %85 = sub i64 %84, %81
  %86 = sub i64 %85, 6585045645780855329
  %87 = sub i64 0, %81
  %88 = sub i64 %86, -6392654949484854700
  %89 = add i64 %88, %82
  %90 = add i64 %89, -6392654949484854700
  %91 = add i64 %86, %82
  %92 = sub i64 0, %81
  %93 = add i64 0, %92
  %94 = sub i64 0, %81
  %95 = sub i64 %93, -5438066162645505726
  %96 = add i64 %95, %82
  %97 = add i64 %96, -5438066162645505726
  %98 = add i64 %93, %82
  %99 = add i64 %81, 2275451127065466967
  %100 = sub i64 %99, %82
  %101 = sub i64 %100, 2275451127065466967
  %102 = sub i64 %81, %82
  %103 = shl i64 %101, 4
  %104 = sub i64 0, 5066394980710546651
  %105 = sub i64 %104, %101
  %106 = add i64 %105, 5066394980710546651
  %107 = sub i64 0, %101
  %108 = sub i64 0, %106
  %109 = sub i64 0, 4
  %110 = add i64 %108, %109
  %111 = sub i64 0, %110
  %112 = add i64 %106, 4
  %113 = shl i64 %101, 4
  %114 = add i64 0, -7669632659992138940
  %115 = sub i64 %114, %101
  %116 = sub i64 %115, -7669632659992138940
  %117 = sub i64 0, %101
  %118 = add i64 %116, 4134881446433813635
  %119 = add i64 %118, 4
  %120 = sub i64 %119, 4134881446433813635
  %121 = add i64 %116, 4
  %122 = sub i64 0, 6491115680779942172
  %123 = sub i64 %122, %101
  %124 = add i64 %123, 6491115680779942172
  %125 = sub i64 0, %101
  %126 = sub i64 0, %124
  %127 = sub i64 0, 4
  %128 = add i64 %126, %127
  %129 = sub i64 0, %128
  %130 = add i64 %124, 4
  %131 = sub i64 0, %101
  %132 = add i64 0, %131
  %133 = sub i64 0, %101
  %134 = sub i64 %132, 748233498735719554
  %135 = add i64 %134, 4
  %136 = add i64 %135, 748233498735719554
  %137 = add i64 %132, 4
  %138 = sub i64 0, 3514603688331846144
  %139 = sub i64 %138, %101
  %140 = add i64 %139, 3514603688331846144
  %141 = sub i64 0, %101
  %142 = sub i64 %140, -6327720876802648710
  %143 = add i64 %142, 4
  %144 = add i64 %143, -6327720876802648710
  %145 = add i64 %140, 4
  %146 = sub i64 0, 5021758794340687988
  %147 = sub i64 %146, %101
  %148 = add i64 %147, 5021758794340687988
  %149 = sub i64 0, %101
  %150 = add i64 %148, -6868510450399177784
  %151 = add i64 %150, 4
  %152 = sub i64 %151, -6868510450399177784
  %153 = add i64 %148, 4
  %154 = sdiv exact i64 %101, 4
  store i32 -1847644778, i32* %15
  br label %155

; <label>:155:                                    ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIlEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIN11__gnu_debug19_Distance_precisionEEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4)) #4 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIlN11__gnu_debug19_Distance_precisionEEC2IlS1_vEEOT_OT0_(%"struct.std::pair"*, i64* dereferenceable(8), i32* dereferenceable(4)) unnamed_addr #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.496
  %7 = load i32, i32* @y.497
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 246532346, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %92
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 246532346, label %19
    i32 -1980333291, label %39
    i32 1897692848, label %78
    i32 -2030681000, label %79
  ]

; <label>:18:                                     ; preds = %16
  br label %92

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1980333291, i32 -2030681000
  store i32 %38, i32* %15
  br label %92

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::pair"*, align 8
  %41 = alloca i64*, align 8
  %42 = alloca i32*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %40, align 8
  store i64* %1, i64** %41, align 8
  store i32* %2, i32** %42, align 8
  %43 = load %"struct.std::pair"*, %"struct.std::pair"** %40, align 8
  %44 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %43, i32 0, i32 0
  %45 = load i64*, i64** %41, align 8
  %46 = call dereferenceable(8) i64* @_ZSt7forwardIlEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %45) #3
  %47 = load i64, i64* %46, align 8
  store i64 %47, i64* %44, align 8
  %48 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %43, i32 0, i32 1
  %49 = load i32*, i32** %42, align 8
  %50 = call dereferenceable(4) i32* @_ZSt7forwardIN11__gnu_debug19_Distance_precisionEEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %49) #3
  %51 = load i32, i32* %50, align 4
  store i32 %51, i32* %48, align 8
  %52 = load i32, i32* @x.496
  %53 = load i32, i32* @y.497
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 1897692848, i32 -2030681000
  store i32 %77, i32* %15
  br label %92

; <label>:78:                                     ; preds = %16
  ret void

; <label>:79:                                     ; preds = %16
  %80 = alloca %"struct.std::pair"*, align 8
  %81 = alloca i64*, align 8
  %82 = alloca i32*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %80, align 8
  store i64* %1, i64** %81, align 8
  store i32* %2, i32** %82, align 8
  %83 = load %"struct.std::pair"*, %"struct.std::pair"** %80, align 8
  %84 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %83, i32 0, i32 0
  %85 = load i64*, i64** %81, align 8
  %86 = call dereferenceable(8) i64* @_ZSt7forwardIlEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %85) #3
  %87 = load i64, i64* %86, align 8
  store i64 %87, i64* %84, align 8
  %88 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %83, i32 0, i32 1
  %89 = load i32*, i32** %82, align 8
  %90 = call dereferenceable(4) i32* @_ZSt7forwardIN11__gnu_debug19_Distance_precisionEEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %89) #3
  %91 = load i32, i32* %90, align 4
  store i32 %91, i32* %88, align 8
  store i32 -1980333291, i32* %15
  br label %92

; <label>:92:                                     ; preds = %79, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN11__gnu_debug18_BeforeBeginHelperINSt7__debug6vectorIiSaIiEEEE15_S_Is_BeginnestIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiS3_EEEEEEbRKNS_14_Safe_iteratorIT_S4_EE(%"class.__gnu_debug::_Safe_iterator"* dereferenceable(40)) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %2, align 8
  %4 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %2, align 8
  %5 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE4baseEv(%"class.__gnu_debug::_Safe_iterator"* %4) #3
  %6 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %2, align 8
  %7 = call %"class.std::__debug::vector"* @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE15_M_get_sequenceEv(%"class.__gnu_debug::_Safe_iterator"* %6)
  %8 = call dereferenceable(24) %"class.std::__cxx1998::vector"* @_ZNSt7__debug6vectorIiSaIiEE7_M_baseEv(%"class.std::__debug::vector"* %7) #3
  %9 = call i32* @_ZNSt9__cxx19986vectorIiSaIiEE5beginEv(%"class.std::__cxx1998::vector"* %8) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store i32* %9, i32** %10, align 8
  %11 = call zeroext i1 @_ZN9__gnu_cxxeqIPiNSt9__cxx19986vectorIiSaIiEEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %3) #3
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN11__gnu_debugeqIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEEbRKNS_14_Safe_iteratorIT_T0_EESH_(%"class.__gnu_debug::_Safe_iterator"* dereferenceable(40), %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40)) #4 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  %4 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  %5 = alloca %"class.__gnu_debug::_Error_formatter", align 8
  %6 = alloca %"class.__gnu_debug::_Error_formatter", align 8
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %3, align 8
  store %"class.__gnu_debug::_Safe_iterator"* %1, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  br label %7

; <label>:7:                                      ; preds = %2
  %8 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %3, align 8
  %9 = bitcast %"class.__gnu_debug::_Safe_iterator"* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 8
  %11 = bitcast i8* %10 to %"class.__gnu_debug::_Safe_iterator_base"*
  %12 = call zeroext i1 @_ZNK11__gnu_debug19_Safe_iterator_base11_M_singularEv(%"class.__gnu_debug::_Safe_iterator_base"* %11) #14
  br i1 %12, label %60, label %13

; <label>:13:                                     ; preds = %7
  %14 = load i32, i32* @x.500
  %15 = load i32, i32* @y.501
  %16 = add i32 %14, 1649179459
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, 1649179459
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  br i1 %26, label %28, label %340

; <label>:28:                                     ; preds = %13, %340
  %29 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  %30 = bitcast %"class.__gnu_debug::_Safe_iterator"* %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 8
  %32 = bitcast i8* %31 to %"class.__gnu_debug::_Safe_iterator_base"*
  %33 = call zeroext i1 @_ZNK11__gnu_debug19_Safe_iterator_base11_M_singularEv(%"class.__gnu_debug::_Safe_iterator_base"* %32) #14
  %34 = load i32, i32* @x.500
  %35 = load i32, i32* @y.501
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %340

; <label>:59:                                     ; preds = %28
  br i1 %33, label %60, label %166

; <label>:60:                                     ; preds = %59, %7
  %61 = load i32, i32* @x.500
  %62 = load i32, i32* @y.501
  %63 = add i32 %61, 664693679
  %64 = sub i32 %63, 1
  %65 = sub i32 %64, 664693679
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 false, true
  %74 = and i1 %71, false
  %75 = and i1 %69, %73
  %76 = and i1 %72, false
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 false, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  br i1 %85, label %87, label %346

; <label>:87:                                     ; preds = %60, %346
  %88 = load i32, i32* @x.500
  %89 = load i32, i32* @y.501
  %90 = add i32 %88, -1181500808
  %91 = sub i32 %90, 1
  %92 = sub i32 %91, -1181500808
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = xor i1 %96, true
  %99 = xor i1 %97, true
  %100 = xor i1 false, true
  %101 = and i1 %98, false
  %102 = and i1 %96, %100
  %103 = and i1 %99, false
  %104 = and i1 %97, %100
  %105 = or i1 %101, %102
  %106 = or i1 %103, %104
  %107 = xor i1 %105, %106
  %108 = or i1 %98, %99
  %109 = xor i1 %108, true
  %110 = or i1 false, %100
  %111 = and i1 %109, %110
  %112 = or i1 %107, %111
  %113 = or i1 %96, %97
  br i1 %112, label %114, label %346

; <label>:114:                                    ; preds = %87
  invoke void @_ZN11__gnu_debug16_Error_formatter5_M_atEPKcm(%"class.__gnu_debug::_Error_formatter"* sret %5, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.7, i32 0, i32 0), i64 550)
          to label %115 unwind label %337

; <label>:115:                                    ; preds = %114
  %116 = call dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter10_M_messageENS_13_Debug_msg_idE(%"class.__gnu_debug::_Error_formatter"* %5, i32 31) #3
  %117 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %3, align 8
  %118 = invoke dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_iteratorINS_14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS8_EEEEEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"* %116, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %117, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0))
          to label %119 unwind label %337

; <label>:119:                                    ; preds = %115
  %120 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  %121 = invoke dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_iteratorINS_14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS8_EEEEEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"* %118, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %120, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i32 0, i32 0))
          to label %122 unwind label %337

; <label>:122:                                    ; preds = %119
  invoke void @_ZNK11__gnu_debug16_Error_formatter8_M_errorEv(%"class.__gnu_debug::_Error_formatter"* %121) #13
          to label %123 unwind label %337

; <label>:123:                                    ; preds = %122
  %124 = load i32, i32* @x.500
  %125 = load i32, i32* @y.501
  %126 = add i32 %124, -1997103716
  %127 = sub i32 %126, 1
  %128 = sub i32 %127, -1997103716
  %129 = sub i32 %124, 1
  %130 = mul i32 %124, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %125, 10
  %134 = xor i1 %132, true
  %135 = xor i1 %133, true
  %136 = xor i1 false, true
  %137 = and i1 %134, false
  %138 = and i1 %132, %136
  %139 = and i1 %135, false
  %140 = and i1 %133, %136
  %141 = or i1 %137, %138
  %142 = or i1 %139, %140
  %143 = xor i1 %141, %142
  %144 = or i1 %134, %135
  %145 = xor i1 %144, true
  %146 = or i1 false, %136
  %147 = and i1 %145, %146
  %148 = or i1 %143, %147
  %149 = or i1 %132, %133
  br i1 %148, label %150, label %347

; <label>:150:                                    ; preds = %123, %347
  %151 = load i32, i32* @x.500
  %152 = load i32, i32* @y.501
  %153 = add i32 %151, 944216430
  %154 = sub i32 %153, 1
  %155 = sub i32 %154, 944216430
  %156 = sub i32 %151, 1
  %157 = mul i32 %151, %155
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %152, 10
  %161 = and i1 %159, %160
  %162 = xor i1 %159, %160
  %163 = or i1 %161, %162
  %164 = or i1 %159, %160
  br i1 %163, label %165, label %347

; <label>:165:                                    ; preds = %150
  unreachable

; <label>:166:                                    ; preds = %59
  br label %167

; <label>:167:                                    ; preds = %166
  %168 = load i32, i32* @x.500
  %169 = load i32, i32* @y.501
  %170 = sub i32 0, 1
  %171 = add i32 %168, %170
  %172 = sub i32 %168, 1
  %173 = mul i32 %168, %171
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %169, 10
  %177 = and i1 %175, %176
  %178 = xor i1 %175, %176
  %179 = or i1 %177, %178
  %180 = or i1 %175, %176
  br i1 %179, label %181, label %348

; <label>:181:                                    ; preds = %167, %348
  %182 = load i32, i32* @x.500
  %183 = load i32, i32* @y.501
  %184 = sub i32 %182, -63492052
  %185 = sub i32 %184, 1
  %186 = add i32 %185, -63492052
  %187 = sub i32 %182, 1
  %188 = mul i32 %182, %186
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %183, 10
  %192 = and i1 %190, %191
  %193 = xor i1 %190, %191
  %194 = or i1 %192, %193
  %195 = or i1 %190, %191
  br i1 %194, label %196, label %348

; <label>:196:                                    ; preds = %181
  br label %197

; <label>:197:                                    ; preds = %196
  br label %198

; <label>:198:                                    ; preds = %197
  %199 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %3, align 8
  %200 = bitcast %"class.__gnu_debug::_Safe_iterator"* %199 to i8*
  %201 = getelementptr inbounds i8, i8* %200, i64 8
  %202 = bitcast i8* %201 to %"class.__gnu_debug::_Safe_iterator_base"*
  %203 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  %204 = bitcast %"class.__gnu_debug::_Safe_iterator"* %203 to i8*
  %205 = getelementptr inbounds i8, i8* %204, i64 8
  %206 = bitcast i8* %205 to %"class.__gnu_debug::_Safe_iterator_base"*
  %207 = call zeroext i1 @_ZNK11__gnu_debug19_Safe_iterator_base14_M_can_compareERKS0_(%"class.__gnu_debug::_Safe_iterator_base"* %202, %"class.__gnu_debug::_Safe_iterator_base"* dereferenceable(32) %206) #14
  br i1 %207, label %329, label %208

; <label>:208:                                    ; preds = %198
  invoke void @_ZN11__gnu_debug16_Error_formatter5_M_atEPKcm(%"class.__gnu_debug::_Error_formatter"* sret %6, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.7, i32 0, i32 0), i64 554)
          to label %209 unwind label %337

; <label>:209:                                    ; preds = %208
  %210 = load i32, i32* @x.500
  %211 = load i32, i32* @y.501
  %212 = add i32 %210, 1000905441
  %213 = sub i32 %212, 1
  %214 = sub i32 %213, 1000905441
  %215 = sub i32 %210, 1
  %216 = mul i32 %210, %214
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %211, 10
  %220 = and i1 %218, %219
  %221 = xor i1 %218, %219
  %222 = or i1 %220, %221
  %223 = or i1 %218, %219
  br i1 %222, label %224, label %349

; <label>:224:                                    ; preds = %209, %349
  %225 = call dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter10_M_messageENS_13_Debug_msg_idE(%"class.__gnu_debug::_Error_formatter"* %6, i32 32) #3
  %226 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %3, align 8
  %227 = load i32, i32* @x.500
  %228 = load i32, i32* @y.501
  %229 = sub i32 0, 1
  %230 = add i32 %227, %229
  %231 = sub i32 %227, 1
  %232 = mul i32 %227, %230
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %228, 10
  %236 = and i1 %234, %235
  %237 = xor i1 %234, %235
  %238 = or i1 %236, %237
  %239 = or i1 %234, %235
  br i1 %238, label %240, label %349

; <label>:240:                                    ; preds = %224
  %241 = invoke dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_iteratorINS_14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS8_EEEEEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"* %225, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %226, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0))
          to label %242 unwind label %337

; <label>:242:                                    ; preds = %240
  %243 = load i32, i32* @x.500
  %244 = load i32, i32* @y.501
  %245 = add i32 %243, 1798654434
  %246 = sub i32 %245, 1
  %247 = sub i32 %246, 1798654434
  %248 = sub i32 %243, 1
  %249 = mul i32 %243, %247
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %244, 10
  %253 = and i1 %251, %252
  %254 = xor i1 %251, %252
  %255 = or i1 %253, %254
  %256 = or i1 %251, %252
  br i1 %255, label %257, label %352

; <label>:257:                                    ; preds = %242, %352
  %258 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  %259 = load i32, i32* @x.500
  %260 = load i32, i32* @y.501
  %261 = sub i32 0, 1
  %262 = add i32 %259, %261
  %263 = sub i32 %259, 1
  %264 = mul i32 %259, %262
  %265 = urem i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %260, 10
  %268 = xor i1 %266, true
  %269 = xor i1 %267, true
  %270 = xor i1 true, true
  %271 = and i1 %268, true
  %272 = and i1 %266, %270
  %273 = and i1 %269, true
  %274 = and i1 %267, %270
  %275 = or i1 %271, %272
  %276 = or i1 %273, %274
  %277 = xor i1 %275, %276
  %278 = or i1 %268, %269
  %279 = xor i1 %278, true
  %280 = or i1 true, %270
  %281 = and i1 %279, %280
  %282 = or i1 %277, %281
  %283 = or i1 %266, %267
  br i1 %282, label %284, label %352

; <label>:284:                                    ; preds = %257
  %285 = invoke dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_iteratorINS_14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS8_EEEEEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"* %241, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %258, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i32 0, i32 0))
          to label %286 unwind label %337

; <label>:286:                                    ; preds = %284
  invoke void @_ZNK11__gnu_debug16_Error_formatter8_M_errorEv(%"class.__gnu_debug::_Error_formatter"* %285) #13
          to label %287 unwind label %337

; <label>:287:                                    ; preds = %286
  %288 = load i32, i32* @x.500
  %289 = load i32, i32* @y.501
  %290 = sub i32 0, 1
  %291 = add i32 %288, %290
  %292 = sub i32 %288, 1
  %293 = mul i32 %288, %291
  %294 = urem i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = icmp slt i32 %289, 10
  %297 = and i1 %295, %296
  %298 = xor i1 %295, %296
  %299 = or i1 %297, %298
  %300 = or i1 %295, %296
  br i1 %299, label %301, label %354

; <label>:301:                                    ; preds = %287, %354
  %302 = load i32, i32* @x.500
  %303 = load i32, i32* @y.501
  %304 = add i32 %302, -1985304103
  %305 = sub i32 %304, 1
  %306 = sub i32 %305, -1985304103
  %307 = sub i32 %302, 1
  %308 = mul i32 %302, %306
  %309 = urem i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = icmp slt i32 %303, 10
  %312 = xor i1 %310, true
  %313 = xor i1 %311, true
  %314 = xor i1 true, true
  %315 = and i1 %312, true
  %316 = and i1 %310, %314
  %317 = and i1 %313, true
  %318 = and i1 %311, %314
  %319 = or i1 %315, %316
  %320 = or i1 %317, %318
  %321 = xor i1 %319, %320
  %322 = or i1 %312, %313
  %323 = xor i1 %322, true
  %324 = or i1 true, %314
  %325 = and i1 %323, %324
  %326 = or i1 %321, %325
  %327 = or i1 %310, %311
  br i1 %326, label %328, label %354

; <label>:328:                                    ; preds = %301
  unreachable

; <label>:329:                                    ; preds = %198
  br label %330

; <label>:330:                                    ; preds = %329
  br label %331

; <label>:331:                                    ; preds = %330
  %332 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %3, align 8
  %333 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE4baseEv(%"class.__gnu_debug::_Safe_iterator"* %332) #3
  %334 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  %335 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE4baseEv(%"class.__gnu_debug::_Safe_iterator"* %334) #3
  %336 = call zeroext i1 @_ZN9__gnu_cxxeqIPiNSt9__cxx19986vectorIiSaIiEEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %333, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %335) #3
  ret i1 %336

; <label>:337:                                    ; preds = %286, %284, %240, %208, %122, %119, %115, %114
  %338 = landingpad { i8*, i32 }
          catch i8* null
  %339 = extractvalue { i8*, i32 } %338, 0
  call void @__clang_call_terminate(i8* %339) #11
  unreachable

; <label>:340:                                    ; preds = %28, %13
  %341 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  %342 = bitcast %"class.__gnu_debug::_Safe_iterator"* %341 to i8*
  %343 = getelementptr inbounds i8, i8* %342, i64 8
  %344 = bitcast i8* %343 to %"class.__gnu_debug::_Safe_iterator_base"*
  %345 = call zeroext i1 @_ZNK11__gnu_debug19_Safe_iterator_base11_M_singularEv(%"class.__gnu_debug::_Safe_iterator_base"* %344) #14
  br label %28

; <label>:346:                                    ; preds = %87, %60
  br label %87

; <label>:347:                                    ; preds = %150, %123
  br label %150

; <label>:348:                                    ; preds = %181, %167
  br label %181

; <label>:349:                                    ; preds = %224, %209
  %350 = call dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter10_M_messageENS_13_Debug_msg_idE(%"class.__gnu_debug::_Error_formatter"* %6, i32 32) #3
  %351 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %3, align 8
  br label %224

; <label>:352:                                    ; preds = %257, %242
  %353 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  br label %257

; <label>:354:                                    ; preds = %301, %287
  br label %301
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(40) %"class.__gnu_debug::_Safe_iterator"* @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEppEv(%"class.__gnu_debug::_Safe_iterator"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  %3 = alloca %"class.__gnu_debug::_Error_formatter", align 8
  %4 = alloca %"class.__gnu_cxx::__scoped_lock", align 8
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %2, align 8
  %5 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %2, align 8
  br label %6

; <label>:6:                                      ; preds = %1
  %7 = invoke zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE16_M_incrementableEv(%"class.__gnu_debug::_Safe_iterator"* %5)
          to label %8 unwind label %163

; <label>:8:                                      ; preds = %6
  br i1 %7, label %15, label %9

; <label>:9:                                      ; preds = %8
  invoke void @_ZN11__gnu_debug16_Error_formatter5_M_atEPKcm(%"class.__gnu_debug::_Error_formatter"* sret %3, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.7, i32 0, i32 0), i64 331)
          to label %10 unwind label %163

; <label>:10:                                     ; preds = %9
  %11 = call dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter10_M_messageENS_13_Debug_msg_idE(%"class.__gnu_debug::_Error_formatter"* %3, i32 26) #3
  %12 = invoke dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_iteratorINS_14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS8_EEEEEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"* %11, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0))
          to label %13 unwind label %163

; <label>:13:                                     ; preds = %10
  invoke void @_ZNK11__gnu_debug16_Error_formatter8_M_errorEv(%"class.__gnu_debug::_Error_formatter"* %12) #13
          to label %14 unwind label %163

; <label>:14:                                     ; preds = %13
  unreachable

; <label>:15:                                     ; preds = %8
  %16 = load i32, i32* @x.502
  %17 = load i32, i32* @y.503
  %18 = add i32 %16, 151198661
  %19 = sub i32 %18, 1
  %20 = sub i32 %19, 151198661
  %21 = sub i32 %16, 1
  %22 = mul i32 %16, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %17, 10
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  br i1 %28, label %30, label %166

; <label>:30:                                     ; preds = %15, %166
  %31 = load i32, i32* @x.502
  %32 = load i32, i32* @y.503
  %33 = add i32 %31, 1167447943
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 1167447943
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  br i1 %43, label %45, label %166

; <label>:45:                                     ; preds = %30
  br label %46

; <label>:46:                                     ; preds = %45
  %47 = load i32, i32* @x.502
  %48 = load i32, i32* @y.503
  %49 = add i32 %47, -351244916
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -351244916
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  br i1 %71, label %73, label %167

; <label>:73:                                     ; preds = %46, %167
  %74 = load i32, i32* @x.502
  %75 = load i32, i32* @y.503
  %76 = add i32 %74, 1177250316
  %77 = sub i32 %76, 1
  %78 = sub i32 %77, 1177250316
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = xor i1 %82, true
  %85 = xor i1 %83, true
  %86 = xor i1 false, true
  %87 = and i1 %84, false
  %88 = and i1 %82, %86
  %89 = and i1 %85, false
  %90 = and i1 %83, %86
  %91 = or i1 %87, %88
  %92 = or i1 %89, %90
  %93 = xor i1 %91, %92
  %94 = or i1 %84, %85
  %95 = xor i1 %94, true
  %96 = or i1 false, %86
  %97 = and i1 %95, %96
  %98 = or i1 %93, %97
  %99 = or i1 %82, %83
  br i1 %98, label %100, label %167

; <label>:100:                                    ; preds = %73
  br label %101

; <label>:101:                                    ; preds = %100
  %102 = bitcast %"class.__gnu_debug::_Safe_iterator"* %5 to i8*
  %103 = getelementptr inbounds i8, i8* %102, i64 8
  %104 = bitcast i8* %103 to %"class.__gnu_debug::_Safe_iterator_base"*
  %105 = call dereferenceable(40) %"class.__gnu_cxx::__mutex"* @_ZN11__gnu_debug19_Safe_iterator_base12_M_get_mutexEv(%"class.__gnu_debug::_Safe_iterator_base"* %104) #3
  invoke void @_ZN9__gnu_cxx13__scoped_lockC2ERNS_7__mutexE(%"class.__gnu_cxx::__scoped_lock"* %4, %"class.__gnu_cxx::__mutex"* dereferenceable(40) %105)
          to label %106 unwind label %163

; <label>:106:                                    ; preds = %101
  %107 = load i32, i32* @x.502
  %108 = load i32, i32* @y.503
  %109 = add i32 %107, -787895485
  %110 = sub i32 %109, 1
  %111 = sub i32 %110, -787895485
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = xor i1 %115, true
  %118 = xor i1 %116, true
  %119 = xor i1 true, true
  %120 = and i1 %117, true
  %121 = and i1 %115, %119
  %122 = and i1 %118, true
  %123 = and i1 %116, %119
  %124 = or i1 %120, %121
  %125 = or i1 %122, %123
  %126 = xor i1 %124, %125
  %127 = or i1 %117, %118
  %128 = xor i1 %127, true
  %129 = or i1 true, %119
  %130 = and i1 %128, %129
  %131 = or i1 %126, %130
  %132 = or i1 %115, %116
  br i1 %131, label %133, label %168

; <label>:133:                                    ; preds = %106, %168
  call void @_ZN9__gnu_cxx13__scoped_lockD2Ev(%"class.__gnu_cxx::__scoped_lock"* %4) #3
  %134 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE4baseEv(%"class.__gnu_debug::_Safe_iterator"* %5) #3
  %135 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEppEv(%"class.__gnu_cxx::__normal_iterator"* %134) #3
  %136 = load i32, i32* @x.502
  %137 = load i32, i32* @y.503
  %138 = sub i32 %136, -1338560129
  %139 = sub i32 %138, 1
  %140 = add i32 %139, -1338560129
  %141 = sub i32 %136, 1
  %142 = mul i32 %136, %140
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %137, 10
  %146 = xor i1 %144, true
  %147 = xor i1 %145, true
  %148 = xor i1 false, true
  %149 = and i1 %146, false
  %150 = and i1 %144, %148
  %151 = and i1 %147, false
  %152 = and i1 %145, %148
  %153 = or i1 %149, %150
  %154 = or i1 %151, %152
  %155 = xor i1 %153, %154
  %156 = or i1 %146, %147
  %157 = xor i1 %156, true
  %158 = or i1 false, %148
  %159 = and i1 %157, %158
  %160 = or i1 %155, %159
  %161 = or i1 %144, %145
  br i1 %160, label %162, label %168

; <label>:162:                                    ; preds = %133
  ret %"class.__gnu_debug::_Safe_iterator"* %5

; <label>:163:                                    ; preds = %101, %13, %10, %9, %6
  %164 = landingpad { i8*, i32 }
          catch i8* null
  %165 = extractvalue { i8*, i32 } %164, 0
  call void @__clang_call_terminate(i8* %165) #11
  unreachable

; <label>:166:                                    ; preds = %30, %15
  br label %30

; <label>:167:                                    ; preds = %73, %46
  br label %73

; <label>:168:                                    ; preds = %133, %106
  call void @_ZN9__gnu_cxx13__scoped_lockD2Ev(%"class.__gnu_cxx::__scoped_lock"* %4) #3
  %169 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE4baseEv(%"class.__gnu_debug::_Safe_iterator"* %5) #3
  %170 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEppEv(%"class.__gnu_cxx::__normal_iterator"* %169) #3
  br label %133
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(40) %"class.__gnu_debug::_Safe_iterator"* @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEaSERKSC_(%"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40)) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  %4 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_debug::_Error_formatter", align 8
  %7 = alloca %"class.__gnu_cxx::__scoped_lock", align 8
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %3, align 8
  store %"class.__gnu_debug::_Safe_iterator"* %1, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  %8 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %3, align 8
  br label %9

; <label>:9:                                      ; preds = %2
  %10 = load i32, i32* @x.504
  %11 = load i32, i32* @y.505
  %12 = sub i32 %10, -1659914644
  %13 = sub i32 %12, 1
  %14 = add i32 %13, -1659914644
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %11, 10
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  br i1 %34, label %36, label %448

; <label>:36:                                     ; preds = %9, %448
  %37 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  %38 = bitcast %"class.__gnu_debug::_Safe_iterator"* %37 to i8*
  %39 = getelementptr inbounds i8, i8* %38, i64 8
  %40 = bitcast i8* %39 to %"class.__gnu_debug::_Safe_iterator_base"*
  %41 = call zeroext i1 @_ZNK11__gnu_debug19_Safe_iterator_base11_M_singularEv(%"class.__gnu_debug::_Safe_iterator_base"* %40) #14
  %42 = load i32, i32* @x.504
  %43 = load i32, i32* @y.505
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  br i1 %65, label %67, label %448

; <label>:67:                                     ; preds = %36
  br i1 %41, label %68, label %72

; <label>:68:                                     ; preds = %67
  %69 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  %70 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE4baseEv(%"class.__gnu_debug::_Safe_iterator"* %69) #3
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEC2Ev(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %71 = call zeroext i1 @_ZN9__gnu_cxxeqIPiNSt9__cxx19986vectorIiSaIiEEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %70, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5) #3
  br label %72

; <label>:72:                                     ; preds = %68, %67
  %73 = phi i1 [ true, %67 ], [ %71, %68 ]
  %74 = load i32, i32* @x.504
  %75 = load i32, i32* @y.505
  %76 = sub i32 0, 1
  %77 = add i32 %74, %76
  %78 = sub i32 %74, 1
  %79 = mul i32 %74, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %75, 10
  %83 = and i1 %81, %82
  %84 = xor i1 %81, %82
  %85 = or i1 %83, %84
  %86 = or i1 %81, %82
  br i1 %85, label %87, label %454

; <label>:87:                                     ; preds = %72, %454
  %88 = xor i1 %73, true
  %89 = and i1 false, %88
  %90 = xor i1 false, true
  %91 = and i1 %73, %90
  %92 = xor i1 true, true
  %93 = and i1 %92, false
  %94 = and i1 true, %90
  %95 = or i1 %89, %91
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = xor i1 %73, true
  %99 = load i32, i32* @x.504
  %100 = load i32, i32* @y.505
  %101 = sub i32 0, 1
  %102 = add i32 %99, %101
  %103 = sub i32 %99, 1
  %104 = mul i32 %99, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %100, 10
  %108 = xor i1 %106, true
  %109 = xor i1 %107, true
  %110 = xor i1 false, true
  %111 = and i1 %108, false
  %112 = and i1 %106, %110
  %113 = and i1 %109, false
  %114 = and i1 %107, %110
  %115 = or i1 %111, %112
  %116 = or i1 %113, %114
  %117 = xor i1 %115, %116
  %118 = or i1 %108, %109
  %119 = xor i1 %118, true
  %120 = or i1 false, %110
  %121 = and i1 %119, %120
  %122 = or i1 %117, %121
  %123 = or i1 %106, %107
  br i1 %122, label %124, label %454

; <label>:124:                                    ; preds = %87
  br i1 %97, label %125, label %163

; <label>:125:                                    ; preds = %124
  invoke void @_ZN11__gnu_debug16_Error_formatter5_M_atEPKcm(%"class.__gnu_debug::_Error_formatter"* sret %6, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.7, i32 0, i32 0), i64 240)
          to label %126 unwind label %445

; <label>:126:                                    ; preds = %125
  %127 = call dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter10_M_messageENS_13_Debug_msg_idE(%"class.__gnu_debug::_Error_formatter"* %6, i32 24) #3
  %128 = invoke dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_iteratorINS_14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS8_EEEEEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"* %127, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0))
          to label %129 unwind label %445

; <label>:129:                                    ; preds = %126
  %130 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  %131 = invoke dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_iteratorINS_14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS8_EEEEEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"* %128, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %130, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i32 0, i32 0))
          to label %132 unwind label %445

; <label>:132:                                    ; preds = %129
  %133 = load i32, i32* @x.504
  %134 = load i32, i32* @y.505
  %135 = sub i32 0, 1
  %136 = add i32 %133, %135
  %137 = sub i32 %133, 1
  %138 = mul i32 %133, %136
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %134, 10
  %142 = and i1 %140, %141
  %143 = xor i1 %140, %141
  %144 = or i1 %142, %143
  %145 = or i1 %140, %141
  br i1 %144, label %146, label %480

; <label>:146:                                    ; preds = %132, %480
  %147 = load i32, i32* @x.504
  %148 = load i32, i32* @y.505
  %149 = sub i32 %147, -1047342215
  %150 = sub i32 %149, 1
  %151 = add i32 %150, -1047342215
  %152 = sub i32 %147, 1
  %153 = mul i32 %147, %151
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %148, 10
  %157 = and i1 %155, %156
  %158 = xor i1 %155, %156
  %159 = or i1 %157, %158
  %160 = or i1 %155, %156
  br i1 %159, label %161, label %480

; <label>:161:                                    ; preds = %146
  invoke void @_ZNK11__gnu_debug16_Error_formatter8_M_errorEv(%"class.__gnu_debug::_Error_formatter"* %131) #13
          to label %162 unwind label %445

; <label>:162:                                    ; preds = %161
  unreachable

; <label>:163:                                    ; preds = %124
  br label %164

; <label>:164:                                    ; preds = %163
  br label %165

; <label>:165:                                    ; preds = %164
  %166 = bitcast %"class.__gnu_debug::_Safe_iterator"* %8 to i8*
  %167 = getelementptr inbounds i8, i8* %166, i64 8
  %168 = bitcast i8* %167 to %"class.__gnu_debug::_Safe_iterator_base"*
  %169 = getelementptr inbounds %"class.__gnu_debug::_Safe_iterator_base", %"class.__gnu_debug::_Safe_iterator_base"* %168, i32 0, i32 0
  %170 = load %"class.__gnu_debug::_Safe_sequence_base"*, %"class.__gnu_debug::_Safe_sequence_base"** %169, align 8
  %171 = icmp ne %"class.__gnu_debug::_Safe_sequence_base"* %170, null
  br i1 %171, label %172, label %249

; <label>:172:                                    ; preds = %165
  %173 = load i32, i32* @x.504
  %174 = load i32, i32* @y.505
  %175 = sub i32 %173, -360064887
  %176 = sub i32 %175, 1
  %177 = add i32 %176, -360064887
  %178 = sub i32 %173, 1
  %179 = mul i32 %173, %177
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %174, 10
  %183 = and i1 %181, %182
  %184 = xor i1 %181, %182
  %185 = or i1 %183, %184
  %186 = or i1 %181, %182
  br i1 %185, label %187, label %481

; <label>:187:                                    ; preds = %172, %481
  %188 = bitcast %"class.__gnu_debug::_Safe_iterator"* %8 to i8*
  %189 = getelementptr inbounds i8, i8* %188, i64 8
  %190 = bitcast i8* %189 to %"class.__gnu_debug::_Safe_iterator_base"*
  %191 = getelementptr inbounds %"class.__gnu_debug::_Safe_iterator_base", %"class.__gnu_debug::_Safe_iterator_base"* %190, i32 0, i32 0
  %192 = load %"class.__gnu_debug::_Safe_sequence_base"*, %"class.__gnu_debug::_Safe_sequence_base"** %191, align 8
  %193 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  %194 = bitcast %"class.__gnu_debug::_Safe_iterator"* %193 to i8*
  %195 = getelementptr inbounds i8, i8* %194, i64 8
  %196 = bitcast i8* %195 to %"class.__gnu_debug::_Safe_iterator_base"*
  %197 = getelementptr inbounds %"class.__gnu_debug::_Safe_iterator_base", %"class.__gnu_debug::_Safe_iterator_base"* %196, i32 0, i32 0
  %198 = load %"class.__gnu_debug::_Safe_sequence_base"*, %"class.__gnu_debug::_Safe_sequence_base"** %197, align 8
  %199 = icmp eq %"class.__gnu_debug::_Safe_sequence_base"* %192, %198
  %200 = load i32, i32* @x.504
  %201 = load i32, i32* @y.505
  %202 = sub i32 0, 1
  %203 = add i32 %200, %202
  %204 = sub i32 %200, 1
  %205 = mul i32 %200, %203
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %201, 10
  %209 = xor i1 %207, true
  %210 = xor i1 %208, true
  %211 = xor i1 false, true
  %212 = and i1 %209, false
  %213 = and i1 %207, %211
  %214 = and i1 %210, false
  %215 = and i1 %208, %211
  %216 = or i1 %212, %213
  %217 = or i1 %214, %215
  %218 = xor i1 %216, %217
  %219 = or i1 %209, %210
  %220 = xor i1 %219, true
  %221 = or i1 false, %211
  %222 = and i1 %220, %221
  %223 = or i1 %218, %222
  %224 = or i1 %207, %208
  br i1 %223, label %225, label %481

; <label>:225:                                    ; preds = %187
  br i1 %199, label %226, label %249

; <label>:226:                                    ; preds = %225
  %227 = bitcast %"class.__gnu_debug::_Safe_iterator"* %8 to i8*
  %228 = getelementptr inbounds i8, i8* %227, i64 8
  %229 = bitcast i8* %228 to %"class.__gnu_debug::_Safe_iterator_base"*
  %230 = call dereferenceable(40) %"class.__gnu_cxx::__mutex"* @_ZN11__gnu_debug19_Safe_iterator_base12_M_get_mutexEv(%"class.__gnu_debug::_Safe_iterator_base"* %229) #3
  invoke void @_ZN9__gnu_cxx13__scoped_lockC2ERNS_7__mutexE(%"class.__gnu_cxx::__scoped_lock"* %7, %"class.__gnu_cxx::__mutex"* dereferenceable(40) %230)
          to label %231 unwind label %445

; <label>:231:                                    ; preds = %226
  %232 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  %233 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE4baseEv(%"class.__gnu_debug::_Safe_iterator"* %232) #3
  %234 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE4baseEv(%"class.__gnu_debug::_Safe_iterator"* %8) #3
  %235 = bitcast %"class.__gnu_cxx::__normal_iterator"* %234 to i8*
  %236 = bitcast %"class.__gnu_cxx::__normal_iterator"* %233 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %235, i8* %236, i64 8, i32 8, i1 false)
  %237 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  %238 = bitcast %"class.__gnu_debug::_Safe_iterator"* %237 to i8*
  %239 = getelementptr inbounds i8, i8* %238, i64 8
  %240 = bitcast i8* %239 to %"class.__gnu_debug::_Safe_iterator_base"*
  %241 = getelementptr inbounds %"class.__gnu_debug::_Safe_iterator_base", %"class.__gnu_debug::_Safe_iterator_base"* %240, i32 0, i32 0
  %242 = load %"class.__gnu_debug::_Safe_sequence_base"*, %"class.__gnu_debug::_Safe_sequence_base"** %241, align 8
  %243 = getelementptr inbounds %"class.__gnu_debug::_Safe_sequence_base", %"class.__gnu_debug::_Safe_sequence_base"* %242, i32 0, i32 2
  %244 = load i32, i32* %243, align 8
  %245 = bitcast %"class.__gnu_debug::_Safe_iterator"* %8 to i8*
  %246 = getelementptr inbounds i8, i8* %245, i64 8
  %247 = bitcast i8* %246 to %"class.__gnu_debug::_Safe_iterator_base"*
  %248 = getelementptr inbounds %"class.__gnu_debug::_Safe_iterator_base", %"class.__gnu_debug::_Safe_iterator_base"* %247, i32 0, i32 1
  store i32 %244, i32* %248, align 8
  call void @_ZN9__gnu_cxx13__scoped_lockD2Ev(%"class.__gnu_cxx::__scoped_lock"* %7) #3
  br label %402

; <label>:249:                                    ; preds = %225, %165
  %250 = load i32, i32* @x.504
  %251 = load i32, i32* @y.505
  %252 = sub i32 %250, 1322893832
  %253 = sub i32 %252, 1
  %254 = add i32 %253, 1322893832
  %255 = sub i32 %250, 1
  %256 = mul i32 %250, %254
  %257 = urem i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp slt i32 %251, 10
  %260 = xor i1 %258, true
  %261 = xor i1 %259, true
  %262 = xor i1 false, true
  %263 = and i1 %260, false
  %264 = and i1 %258, %262
  %265 = and i1 %261, false
  %266 = and i1 %259, %262
  %267 = or i1 %263, %264
  %268 = or i1 %265, %266
  %269 = xor i1 %267, %268
  %270 = or i1 %260, %261
  %271 = xor i1 %270, true
  %272 = or i1 false, %262
  %273 = and i1 %271, %272
  %274 = or i1 %269, %273
  %275 = or i1 %258, %259
  br i1 %274, label %276, label %494

; <label>:276:                                    ; preds = %249, %494
  %277 = bitcast %"class.__gnu_debug::_Safe_iterator"* %8 to i8*
  %278 = getelementptr inbounds i8, i8* %277, i64 8
  %279 = bitcast i8* %278 to %"class.__gnu_debug::_Safe_iterator_base"*
  %280 = load i32, i32* @x.504
  %281 = load i32, i32* @y.505
  %282 = add i32 %280, 1564417248
  %283 = sub i32 %282, 1
  %284 = sub i32 %283, 1564417248
  %285 = sub i32 %280, 1
  %286 = mul i32 %280, %284
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %281, 10
  %290 = xor i1 %288, true
  %291 = xor i1 %289, true
  %292 = xor i1 true, true
  %293 = and i1 %290, true
  %294 = and i1 %288, %292
  %295 = and i1 %291, true
  %296 = and i1 %289, %292
  %297 = or i1 %293, %294
  %298 = or i1 %295, %296
  %299 = xor i1 %297, %298
  %300 = or i1 %290, %291
  %301 = xor i1 %300, true
  %302 = or i1 true, %292
  %303 = and i1 %301, %302
  %304 = or i1 %299, %303
  %305 = or i1 %288, %289
  br i1 %304, label %306, label %494

; <label>:306:                                    ; preds = %276
  invoke void @_ZN11__gnu_debug19_Safe_iterator_base9_M_detachEv(%"class.__gnu_debug::_Safe_iterator_base"* %279)
          to label %307 unwind label %445

; <label>:307:                                    ; preds = %306
  %308 = load i32, i32* @x.504
  %309 = load i32, i32* @y.505
  %310 = sub i32 0, 1
  %311 = add i32 %308, %310
  %312 = sub i32 %308, 1
  %313 = mul i32 %308, %311
  %314 = urem i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %309, 10
  %317 = and i1 %315, %316
  %318 = xor i1 %315, %316
  %319 = or i1 %317, %318
  %320 = or i1 %315, %316
  br i1 %319, label %321, label %498

; <label>:321:                                    ; preds = %307, %498
  %322 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  %323 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE4baseEv(%"class.__gnu_debug::_Safe_iterator"* %322) #3
  %324 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE4baseEv(%"class.__gnu_debug::_Safe_iterator"* %8) #3
  %325 = bitcast %"class.__gnu_cxx::__normal_iterator"* %324 to i8*
  %326 = bitcast %"class.__gnu_cxx::__normal_iterator"* %323 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %325, i8* %326, i64 8, i32 8, i1 false)
  %327 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  %328 = bitcast %"class.__gnu_debug::_Safe_iterator"* %327 to i8*
  %329 = getelementptr inbounds i8, i8* %328, i64 8
  %330 = bitcast i8* %329 to %"class.__gnu_debug::_Safe_iterator_base"*
  %331 = getelementptr inbounds %"class.__gnu_debug::_Safe_iterator_base", %"class.__gnu_debug::_Safe_iterator_base"* %330, i32 0, i32 0
  %332 = load %"class.__gnu_debug::_Safe_sequence_base"*, %"class.__gnu_debug::_Safe_sequence_base"** %331, align 8
  %333 = load i32, i32* @x.504
  %334 = load i32, i32* @y.505
  %335 = sub i32 0, 1
  %336 = add i32 %333, %335
  %337 = sub i32 %333, 1
  %338 = mul i32 %333, %336
  %339 = urem i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %334, 10
  %342 = xor i1 %340, true
  %343 = xor i1 %341, true
  %344 = xor i1 false, true
  %345 = and i1 %342, false
  %346 = and i1 %340, %344
  %347 = and i1 %343, false
  %348 = and i1 %341, %344
  %349 = or i1 %345, %346
  %350 = or i1 %347, %348
  %351 = xor i1 %349, %350
  %352 = or i1 %342, %343
  %353 = xor i1 %352, true
  %354 = or i1 false, %344
  %355 = and i1 %353, %354
  %356 = or i1 %351, %355
  %357 = or i1 %340, %341
  br i1 %356, label %358, label %498

; <label>:358:                                    ; preds = %321
  invoke void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE9_M_attachEPNS_19_Safe_sequence_baseE(%"class.__gnu_debug::_Safe_iterator"* %8, %"class.__gnu_debug::_Safe_sequence_base"* %332)
          to label %359 unwind label %445

; <label>:359:                                    ; preds = %358
  %360 = load i32, i32* @x.504
  %361 = load i32, i32* @y.505
  %362 = add i32 %360, 1557202607
  %363 = sub i32 %362, 1
  %364 = sub i32 %363, 1557202607
  %365 = sub i32 %360, 1
  %366 = mul i32 %360, %364
  %367 = urem i32 %366, 2
  %368 = icmp eq i32 %367, 0
  %369 = icmp slt i32 %361, 10
  %370 = xor i1 %368, true
  %371 = xor i1 %369, true
  %372 = xor i1 true, true
  %373 = and i1 %370, true
  %374 = and i1 %368, %372
  %375 = and i1 %371, true
  %376 = and i1 %369, %372
  %377 = or i1 %373, %374
  %378 = or i1 %375, %376
  %379 = xor i1 %377, %378
  %380 = or i1 %370, %371
  %381 = xor i1 %380, true
  %382 = or i1 true, %372
  %383 = and i1 %381, %382
  %384 = or i1 %379, %383
  %385 = or i1 %368, %369
  br i1 %384, label %386, label %510

; <label>:386:                                    ; preds = %359, %510
  %387 = load i32, i32* @x.504
  %388 = load i32, i32* @y.505
  %389 = sub i32 %387, -885177212
  %390 = sub i32 %389, 1
  %391 = add i32 %390, -885177212
  %392 = sub i32 %387, 1
  %393 = mul i32 %387, %391
  %394 = urem i32 %393, 2
  %395 = icmp eq i32 %394, 0
  %396 = icmp slt i32 %388, 10
  %397 = and i1 %395, %396
  %398 = xor i1 %395, %396
  %399 = or i1 %397, %398
  %400 = or i1 %395, %396
  br i1 %399, label %401, label %510

; <label>:401:                                    ; preds = %386
  br label %402

; <label>:402:                                    ; preds = %401, %231
  %403 = load i32, i32* @x.504
  %404 = load i32, i32* @y.505
  %405 = sub i32 %403, 547186919
  %406 = sub i32 %405, 1
  %407 = add i32 %406, 547186919
  %408 = sub i32 %403, 1
  %409 = mul i32 %403, %407
  %410 = urem i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %404, 10
  %413 = and i1 %411, %412
  %414 = xor i1 %411, %412
  %415 = or i1 %413, %414
  %416 = or i1 %411, %412
  br i1 %415, label %417, label %511

; <label>:417:                                    ; preds = %402, %511
  %418 = load i32, i32* @x.504
  %419 = load i32, i32* @y.505
  %420 = add i32 %418, -438123164
  %421 = sub i32 %420, 1
  %422 = sub i32 %421, -438123164
  %423 = sub i32 %418, 1
  %424 = mul i32 %418, %422
  %425 = urem i32 %424, 2
  %426 = icmp eq i32 %425, 0
  %427 = icmp slt i32 %419, 10
  %428 = xor i1 %426, true
  %429 = xor i1 %427, true
  %430 = xor i1 true, true
  %431 = and i1 %428, true
  %432 = and i1 %426, %430
  %433 = and i1 %429, true
  %434 = and i1 %427, %430
  %435 = or i1 %431, %432
  %436 = or i1 %433, %434
  %437 = xor i1 %435, %436
  %438 = or i1 %428, %429
  %439 = xor i1 %438, true
  %440 = or i1 true, %430
  %441 = and i1 %439, %440
  %442 = or i1 %437, %441
  %443 = or i1 %426, %427
  br i1 %442, label %444, label %511

; <label>:444:                                    ; preds = %417
  ret %"class.__gnu_debug::_Safe_iterator"* %8

; <label>:445:                                    ; preds = %358, %306, %226, %161, %129, %126, %125
  %446 = landingpad { i8*, i32 }
          catch i8* null
  %447 = extractvalue { i8*, i32 } %446, 0
  call void @__clang_call_terminate(i8* %447) #11
  unreachable

; <label>:448:                                    ; preds = %36, %9
  %449 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  %450 = bitcast %"class.__gnu_debug::_Safe_iterator"* %449 to i8*
  %451 = getelementptr inbounds i8, i8* %450, i64 8
  %452 = bitcast i8* %451 to %"class.__gnu_debug::_Safe_iterator_base"*
  %453 = call zeroext i1 @_ZNK11__gnu_debug19_Safe_iterator_base11_M_singularEv(%"class.__gnu_debug::_Safe_iterator_base"* %452) #14
  br label %36

; <label>:454:                                    ; preds = %87, %72
  %455 = add i1 false, true
  %456 = sub i1 %455, %73
  %457 = sub i1 %456, true
  %458 = sub i1 false, %73
  %459 = add i1 %457, true
  %460 = add i1 %459, true
  %461 = sub i1 %460, true
  %462 = add i1 %457, true
  %463 = add i1 %73, true
  %464 = sub i1 %463, true
  %465 = sub i1 %464, true
  %466 = sub i1 %73, true
  %467 = mul i1 %465, true
  %468 = shl i1 %73, true
  %469 = xor i1 %73, true
  %470 = and i1 true, %469
  %471 = xor i1 true, true
  %472 = and i1 %73, %471
  %473 = xor i1 true, true
  %474 = and i1 %473, true
  %475 = and i1 true, %471
  %476 = or i1 %470, %472
  %477 = or i1 %474, %475
  %478 = xor i1 %476, %477
  %479 = xor i1 %73, true
  br label %87

; <label>:480:                                    ; preds = %146, %132
  br label %146

; <label>:481:                                    ; preds = %187, %172
  %482 = bitcast %"class.__gnu_debug::_Safe_iterator"* %8 to i8*
  %483 = getelementptr inbounds i8, i8* %482, i64 8
  %484 = bitcast i8* %483 to %"class.__gnu_debug::_Safe_iterator_base"*
  %485 = getelementptr inbounds %"class.__gnu_debug::_Safe_iterator_base", %"class.__gnu_debug::_Safe_iterator_base"* %484, i32 0, i32 0
  %486 = load %"class.__gnu_debug::_Safe_sequence_base"*, %"class.__gnu_debug::_Safe_sequence_base"** %485, align 8
  %487 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  %488 = bitcast %"class.__gnu_debug::_Safe_iterator"* %487 to i8*
  %489 = getelementptr inbounds i8, i8* %488, i64 8
  %490 = bitcast i8* %489 to %"class.__gnu_debug::_Safe_iterator_base"*
  %491 = getelementptr inbounds %"class.__gnu_debug::_Safe_iterator_base", %"class.__gnu_debug::_Safe_iterator_base"* %490, i32 0, i32 0
  %492 = load %"class.__gnu_debug::_Safe_sequence_base"*, %"class.__gnu_debug::_Safe_sequence_base"** %491, align 8
  %493 = icmp eq %"class.__gnu_debug::_Safe_sequence_base"* %486, %492
  br label %187

; <label>:494:                                    ; preds = %276, %249
  %495 = bitcast %"class.__gnu_debug::_Safe_iterator"* %8 to i8*
  %496 = getelementptr inbounds i8, i8* %495, i64 8
  %497 = bitcast i8* %496 to %"class.__gnu_debug::_Safe_iterator_base"*
  br label %276

; <label>:498:                                    ; preds = %321, %307
  %499 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  %500 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE4baseEv(%"class.__gnu_debug::_Safe_iterator"* %499) #3
  %501 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE4baseEv(%"class.__gnu_debug::_Safe_iterator"* %8) #3
  %502 = bitcast %"class.__gnu_cxx::__normal_iterator"* %501 to i8*
  %503 = bitcast %"class.__gnu_cxx::__normal_iterator"* %500 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %502, i8* %503, i64 8, i32 8, i1 false)
  %504 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  %505 = bitcast %"class.__gnu_debug::_Safe_iterator"* %504 to i8*
  %506 = getelementptr inbounds i8, i8* %505, i64 8
  %507 = bitcast i8* %506 to %"class.__gnu_debug::_Safe_iterator_base"*
  %508 = getelementptr inbounds %"class.__gnu_debug::_Safe_iterator_base", %"class.__gnu_debug::_Safe_iterator_base"* %507, i32 0, i32 0
  %509 = load %"class.__gnu_debug::_Safe_sequence_base"*, %"class.__gnu_debug::_Safe_sequence_base"** %508, align 8
  br label %321

; <label>:510:                                    ; preds = %386, %359
  br label %386

; <label>:511:                                    ; preds = %417, %402
  br label %417
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(40) %"class.__gnu_debug::_Safe_iterator"* @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEmmEv(%"class.__gnu_debug::_Safe_iterator"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.506
  %3 = load i32, i32* @y.507
  %4 = sub i32 %2, 663093878
  %5 = sub i32 %4, 1
  %6 = add i32 %5, 663093878
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %221

; <label>:16:                                     ; preds = %1, %221
  %17 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  %18 = alloca %"class.__gnu_debug::_Error_formatter", align 8
  %19 = alloca %"class.__gnu_cxx::__scoped_lock", align 8
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %17, align 8
  %20 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %17, align 8
  %21 = load i32, i32* @x.506
  %22 = load i32, i32* @y.507
  %23 = sub i32 %21, -536284407
  %24 = sub i32 %23, 1
  %25 = add i32 %24, -536284407
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  br i1 %33, label %35, label %221

; <label>:35:                                     ; preds = %16
  br label %36

; <label>:36:                                     ; preds = %35
  %37 = invoke zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE16_M_decrementableEv(%"class.__gnu_debug::_Safe_iterator"* %20)
          to label %38 unwind label %190

; <label>:38:                                     ; preds = %36
  br i1 %37, label %139, label %39

; <label>:39:                                     ; preds = %38
  %40 = load i32, i32* @x.506
  %41 = load i32, i32* @y.507
  %42 = sub i32 %40, 786669243
  %43 = sub i32 %42, 1
  %44 = add i32 %43, 786669243
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  br i1 %64, label %66, label %226

; <label>:66:                                     ; preds = %39, %226
  %67 = load i32, i32* @x.506
  %68 = load i32, i32* @y.507
  %69 = sub i32 0, 1
  %70 = add i32 %67, %69
  %71 = sub i32 %67, 1
  %72 = mul i32 %67, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %68, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 false, true
  %79 = and i1 %76, false
  %80 = and i1 %74, %78
  %81 = and i1 %77, false
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 false, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  br i1 %90, label %92, label %226

; <label>:92:                                     ; preds = %66
  invoke void @_ZN11__gnu_debug16_Error_formatter5_M_atEPKcm(%"class.__gnu_debug::_Error_formatter"* sret %18, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.7, i32 0, i32 0), i64 361)
          to label %93 unwind label %190

; <label>:93:                                     ; preds = %92
  %94 = load i32, i32* @x.506
  %95 = load i32, i32* @y.507
  %96 = add i32 %94, -1588682899
  %97 = sub i32 %96, 1
  %98 = sub i32 %97, -1588682899
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = and i1 %102, %103
  %105 = xor i1 %102, %103
  %106 = or i1 %104, %105
  %107 = or i1 %102, %103
  br i1 %106, label %108, label %227

; <label>:108:                                    ; preds = %93, %227
  %109 = call dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter10_M_messageENS_13_Debug_msg_idE(%"class.__gnu_debug::_Error_formatter"* %18, i32 27) #3
  %110 = load i32, i32* @x.506
  %111 = load i32, i32* @y.507
  %112 = sub i32 0, 1
  %113 = add i32 %110, %112
  %114 = sub i32 %110, 1
  %115 = mul i32 %110, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %111, 10
  %119 = xor i1 %117, true
  %120 = xor i1 %118, true
  %121 = xor i1 false, true
  %122 = and i1 %119, false
  %123 = and i1 %117, %121
  %124 = and i1 %120, false
  %125 = and i1 %118, %121
  %126 = or i1 %122, %123
  %127 = or i1 %124, %125
  %128 = xor i1 %126, %127
  %129 = or i1 %119, %120
  %130 = xor i1 %129, true
  %131 = or i1 false, %121
  %132 = and i1 %130, %131
  %133 = or i1 %128, %132
  %134 = or i1 %117, %118
  br i1 %133, label %135, label %227

; <label>:135:                                    ; preds = %108
  %136 = invoke dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_iteratorINS_14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS8_EEEEEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"* %109, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0))
          to label %137 unwind label %190

; <label>:137:                                    ; preds = %135
  invoke void @_ZNK11__gnu_debug16_Error_formatter8_M_errorEv(%"class.__gnu_debug::_Error_formatter"* %136) #13
          to label %138 unwind label %190

; <label>:138:                                    ; preds = %137
  unreachable

; <label>:139:                                    ; preds = %38
  br label %140

; <label>:140:                                    ; preds = %139
  br label %141

; <label>:141:                                    ; preds = %140
  %142 = bitcast %"class.__gnu_debug::_Safe_iterator"* %20 to i8*
  %143 = getelementptr inbounds i8, i8* %142, i64 8
  %144 = bitcast i8* %143 to %"class.__gnu_debug::_Safe_iterator_base"*
  %145 = call dereferenceable(40) %"class.__gnu_cxx::__mutex"* @_ZN11__gnu_debug19_Safe_iterator_base12_M_get_mutexEv(%"class.__gnu_debug::_Safe_iterator_base"* %144) #3
  invoke void @_ZN9__gnu_cxx13__scoped_lockC2ERNS_7__mutexE(%"class.__gnu_cxx::__scoped_lock"* %19, %"class.__gnu_cxx::__mutex"* dereferenceable(40) %145)
          to label %146 unwind label %190

; <label>:146:                                    ; preds = %141
  %147 = load i32, i32* @x.506
  %148 = load i32, i32* @y.507
  %149 = add i32 %147, -76626240
  %150 = sub i32 %149, 1
  %151 = sub i32 %150, -76626240
  %152 = sub i32 %147, 1
  %153 = mul i32 %147, %151
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %148, 10
  %157 = and i1 %155, %156
  %158 = xor i1 %155, %156
  %159 = or i1 %157, %158
  %160 = or i1 %155, %156
  br i1 %159, label %161, label %229

; <label>:161:                                    ; preds = %146, %229
  %162 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE4baseEv(%"class.__gnu_debug::_Safe_iterator"* %20) #3
  %163 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEmmEv(%"class.__gnu_cxx::__normal_iterator"* %162) #3
  call void @_ZN9__gnu_cxx13__scoped_lockD2Ev(%"class.__gnu_cxx::__scoped_lock"* %19) #3
  %164 = load i32, i32* @x.506
  %165 = load i32, i32* @y.507
  %166 = sub i32 0, 1
  %167 = add i32 %164, %166
  %168 = sub i32 %164, 1
  %169 = mul i32 %164, %167
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %165, 10
  %173 = xor i1 %171, true
  %174 = xor i1 %172, true
  %175 = xor i1 false, true
  %176 = and i1 %173, false
  %177 = and i1 %171, %175
  %178 = and i1 %174, false
  %179 = and i1 %172, %175
  %180 = or i1 %176, %177
  %181 = or i1 %178, %179
  %182 = xor i1 %180, %181
  %183 = or i1 %173, %174
  %184 = xor i1 %183, true
  %185 = or i1 false, %175
  %186 = and i1 %184, %185
  %187 = or i1 %182, %186
  %188 = or i1 %171, %172
  br i1 %187, label %189, label %229

; <label>:189:                                    ; preds = %161
  ret %"class.__gnu_debug::_Safe_iterator"* %20

; <label>:190:                                    ; preds = %141, %137, %135, %92, %36
  %191 = load i32, i32* @x.506
  %192 = load i32, i32* @y.507
  %193 = sub i32 0, 1
  %194 = add i32 %191, %193
  %195 = sub i32 %191, 1
  %196 = mul i32 %191, %194
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %192, 10
  %200 = and i1 %198, %199
  %201 = xor i1 %198, %199
  %202 = or i1 %200, %201
  %203 = or i1 %198, %199
  br i1 %202, label %204, label %232

; <label>:204:                                    ; preds = %190, %232
  %205 = landingpad { i8*, i32 }
          catch i8* null
  %206 = extractvalue { i8*, i32 } %205, 0
  call void @__clang_call_terminate(i8* %206) #11
  %207 = load i32, i32* @x.506
  %208 = load i32, i32* @y.507
  %209 = sub i32 0, 1
  %210 = add i32 %207, %209
  %211 = sub i32 %207, 1
  %212 = mul i32 %207, %210
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %208, 10
  %216 = and i1 %214, %215
  %217 = xor i1 %214, %215
  %218 = or i1 %216, %217
  %219 = or i1 %214, %215
  br i1 %218, label %220, label %232

; <label>:220:                                    ; preds = %204
  unreachable

; <label>:221:                                    ; preds = %16, %1
  %222 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  %223 = alloca %"class.__gnu_debug::_Error_formatter", align 8
  %224 = alloca %"class.__gnu_cxx::__scoped_lock", align 8
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %222, align 8
  %225 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %222, align 8
  br label %16

; <label>:226:                                    ; preds = %66, %39
  br label %66

; <label>:227:                                    ; preds = %108, %93
  %228 = call dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter10_M_messageENS_13_Debug_msg_idE(%"class.__gnu_debug::_Error_formatter"* %18, i32 27) #3
  br label %108

; <label>:229:                                    ; preds = %161, %146
  %230 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE4baseEv(%"class.__gnu_debug::_Safe_iterator"* %20) #3
  %231 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEmmEv(%"class.__gnu_cxx::__normal_iterator"* %230) #3
  call void @_ZN9__gnu_cxx13__scoped_lockD2Ev(%"class.__gnu_cxx::__scoped_lock"* %19) #3
  br label %161

; <label>:232:                                    ; preds = %204, %190
  %233 = landingpad { i8*, i32 }
          catch i8* null
  %234 = extractvalue { i8*, i32 } %233, 0
  call void @__clang_call_terminate(i8* %234) #11
  br label %204
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclIN11__gnu_debug14_Safe_iteratorINS_17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS9_EEEESF_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"*, %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"*) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.508
  %8 = load i32, i32* @y.509
  %9 = add i32 %7, 1717190305
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 1717190305
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 833386536, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %86
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 833386536, label %21
    i32 -435392273, label %41
    i32 278716878, label %76
    i32 -2931713, label %78
  ]

; <label>:20:                                     ; preds = %18
  br label %86

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -435392273, i32 -2931713
  store i32 %40, i32* %17
  br label %86

; <label>:41:                                     ; preds = %18
  %42 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_less_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %42, align 8
  %43 = load %"struct.__gnu_cxx::__ops::_Iter_less_iter"*, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %42, align 8
  %44 = call dereferenceable(4) i32* @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEdeEv(%"class.__gnu_debug::_Safe_iterator"* %1) #3
  %45 = load i32, i32* %44, align 4
  %46 = call dereferenceable(4) i32* @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEdeEv(%"class.__gnu_debug::_Safe_iterator"* %2) #3
  %47 = load i32, i32* %46, align 4
  %48 = icmp slt i32 %45, %47
  store i1 %48, i1* %4
  %49 = load i32, i32* @x.508
  %50 = load i32, i32* @y.509
  %51 = sub i32 %49, -1325086697
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -1325086697
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 278716878, i32 -2931713
  store i32 %75, i32* %17
  br label %86

; <label>:76:                                     ; preds = %18
  %77 = load volatile i1, i1* %4
  ret i1 %77

; <label>:78:                                     ; preds = %18
  %79 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter"*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_less_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %79, align 8
  %80 = load %"struct.__gnu_cxx::__ops::_Iter_less_iter"*, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %79, align 8
  %81 = call dereferenceable(4) i32* @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEdeEv(%"class.__gnu_debug::_Safe_iterator"* %1) #3
  %82 = load i32, i32* %81, align 4
  %83 = call dereferenceable(4) i32* @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEdeEv(%"class.__gnu_debug::_Safe_iterator"* %2) #3
  %84 = load i32, i32* %83, align 4
  %85 = icmp slt i32 %82, %84
  store i32 -435392273, i32* %17
  br label %86

; <label>:86:                                     ; preds = %78, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt9iter_swapIN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS7_EEEESD_EvT_T0_(%"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"*) #4 comdat {
  %3 = call dereferenceable(4) i32* @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEdeEv(%"class.__gnu_debug::_Safe_iterator"* %0) #3
  %4 = call dereferenceable(4) i32* @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEdeEv(%"class.__gnu_debug::_Safe_iterator"* %1) #3
  call void @_ZSt4swapIiEvRT_S1_(i32* dereferenceable(4) %3, i32* dereferenceable(4) %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt9__reverseIN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS7_EEEEEvT_SE_St26random_access_iterator_tag(%"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"*) #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.512
  %4 = load i32, i32* @y.513
  %5 = sub i32 %3, -438145908
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -438145908
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %206

; <label>:29:                                     ; preds = %2, %206
  %30 = alloca %"struct.std::random_access_iterator_tag", align 1
  %31 = alloca %"class.__gnu_debug::_Safe_iterator", align 8
  %32 = alloca %"class.__gnu_debug::_Safe_iterator", align 8
  %33 = alloca i8*
  %34 = alloca i32
  %35 = call zeroext i1 @_ZN11__gnu_debugeqIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEEbRKNS_14_Safe_iteratorIT_T0_EESH_(%"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %0, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %1) #3
  %36 = load i32, i32* @x.512
  %37 = load i32, i32* @y.513
  %38 = add i32 %36, -2035751158
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, -2035751158
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  br i1 %60, label %62, label %206

; <label>:62:                                     ; preds = %29
  br i1 %35, label %63, label %105

; <label>:63:                                     ; preds = %62
  %64 = load i32, i32* @x.512
  %65 = load i32, i32* @y.513
  %66 = sub i32 %64, -2133683039
  %67 = sub i32 %66, 1
  %68 = add i32 %67, -2133683039
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 false, true
  %77 = and i1 %74, false
  %78 = and i1 %72, %76
  %79 = and i1 %75, false
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 false, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  br i1 %88, label %90, label %213

; <label>:90:                                     ; preds = %63, %213
  %91 = load i32, i32* @x.512
  %92 = load i32, i32* @y.513
  %93 = sub i32 0, 1
  %94 = add i32 %91, %93
  %95 = sub i32 %91, 1
  %96 = mul i32 %91, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %92, 10
  %100 = and i1 %98, %99
  %101 = xor i1 %98, %99
  %102 = or i1 %100, %101
  %103 = or i1 %98, %99
  br i1 %102, label %104, label %213

; <label>:104:                                    ; preds = %90
  br label %200

; <label>:105:                                    ; preds = %62
  %106 = load i32, i32* @x.512
  %107 = load i32, i32* @y.513
  %108 = add i32 %106, 1625146974
  %109 = sub i32 %108, 1
  %110 = sub i32 %109, 1625146974
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = xor i1 %114, true
  %117 = xor i1 %115, true
  %118 = xor i1 true, true
  %119 = and i1 %116, true
  %120 = and i1 %114, %118
  %121 = and i1 %117, true
  %122 = and i1 %115, %118
  %123 = or i1 %119, %120
  %124 = or i1 %121, %122
  %125 = xor i1 %123, %124
  %126 = or i1 %116, %117
  %127 = xor i1 %126, true
  %128 = or i1 true, %118
  %129 = and i1 %127, %128
  %130 = or i1 %125, %129
  %131 = or i1 %114, %115
  br i1 %130, label %132, label %214

; <label>:132:                                    ; preds = %105, %214
  %133 = call dereferenceable(40) %"class.__gnu_debug::_Safe_iterator"* @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEmmEv(%"class.__gnu_debug::_Safe_iterator"* %1) #3
  %134 = load i32, i32* @x.512
  %135 = load i32, i32* @y.513
  %136 = sub i32 %134, 827315048
  %137 = sub i32 %136, 1
  %138 = add i32 %137, 827315048
  %139 = sub i32 %134, 1
  %140 = mul i32 %134, %138
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %135, 10
  %144 = xor i1 %142, true
  %145 = xor i1 %143, true
  %146 = xor i1 false, true
  %147 = and i1 %144, false
  %148 = and i1 %142, %146
  %149 = and i1 %145, false
  %150 = and i1 %143, %146
  %151 = or i1 %147, %148
  %152 = or i1 %149, %150
  %153 = xor i1 %151, %152
  %154 = or i1 %144, %145
  %155 = xor i1 %154, true
  %156 = or i1 false, %146
  %157 = and i1 %155, %156
  %158 = or i1 %153, %157
  %159 = or i1 %142, %143
  br i1 %158, label %160, label %214

; <label>:160:                                    ; preds = %132
  br label %161

; <label>:161:                                    ; preds = %164, %160
  %162 = call zeroext i1 @_ZN11__gnu_debugltIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEEbRKNS_14_Safe_iteratorIT_T0_EESH_(%"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %0, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %1) #3
  br i1 %162, label %163, label %200

; <label>:163:                                    ; preds = %161
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEC2ERKSC_(%"class.__gnu_debug::_Safe_iterator"* %31, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %0) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEC2ERKSC_(%"class.__gnu_debug::_Safe_iterator"* %32, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %1) #3
  invoke void @_ZSt9iter_swapIN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS7_EEEESD_EvT_T0_(%"class.__gnu_debug::_Safe_iterator"* %31, %"class.__gnu_debug::_Safe_iterator"* %32)
          to label %164 unwind label %167

; <label>:164:                                    ; preds = %163
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %32) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %31) #3
  %165 = call dereferenceable(40) %"class.__gnu_debug::_Safe_iterator"* @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEppEv(%"class.__gnu_debug::_Safe_iterator"* %0) #3
  %166 = call dereferenceable(40) %"class.__gnu_debug::_Safe_iterator"* @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEmmEv(%"class.__gnu_debug::_Safe_iterator"* %1) #3
  br label %161

; <label>:167:                                    ; preds = %163
  %168 = load i32, i32* @x.512
  %169 = load i32, i32* @y.513
  %170 = sub i32 0, 1
  %171 = add i32 %168, %170
  %172 = sub i32 %168, 1
  %173 = mul i32 %168, %171
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %169, 10
  %177 = and i1 %175, %176
  %178 = xor i1 %175, %176
  %179 = or i1 %177, %178
  %180 = or i1 %175, %176
  br i1 %179, label %181, label %216

; <label>:181:                                    ; preds = %167, %216
  %182 = landingpad { i8*, i32 }
          cleanup
  %183 = extractvalue { i8*, i32 } %182, 0
  store i8* %183, i8** %33, align 8
  %184 = extractvalue { i8*, i32 } %182, 1
  store i32 %184, i32* %34, align 4
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %32) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %31) #3
  %185 = load i32, i32* @x.512
  %186 = load i32, i32* @y.513
  %187 = add i32 %185, 691867587
  %188 = sub i32 %187, 1
  %189 = sub i32 %188, 691867587
  %190 = sub i32 %185, 1
  %191 = mul i32 %185, %189
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %186, 10
  %195 = and i1 %193, %194
  %196 = xor i1 %193, %194
  %197 = or i1 %195, %196
  %198 = or i1 %193, %194
  br i1 %197, label %199, label %216

; <label>:199:                                    ; preds = %181
  br label %201

; <label>:200:                                    ; preds = %104, %161
  ret void

; <label>:201:                                    ; preds = %199
  %202 = load i8*, i8** %33, align 8
  %203 = load i32, i32* %34, align 4
  %204 = insertvalue { i8*, i32 } undef, i8* %202, 0
  %205 = insertvalue { i8*, i32 } %204, i32 %203, 1
  resume { i8*, i32 } %205

; <label>:206:                                    ; preds = %29, %2
  %207 = alloca %"struct.std::random_access_iterator_tag", align 1
  %208 = alloca %"class.__gnu_debug::_Safe_iterator", align 8
  %209 = alloca %"class.__gnu_debug::_Safe_iterator", align 8
  %210 = alloca i8*
  %211 = alloca i32
  %212 = call zeroext i1 @_ZN11__gnu_debugeqIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEEbRKNS_14_Safe_iteratorIT_T0_EESH_(%"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %0, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %1) #3
  br label %29

; <label>:213:                                    ; preds = %90, %63
  br label %90

; <label>:214:                                    ; preds = %132, %105
  %215 = call dereferenceable(40) %"class.__gnu_debug::_Safe_iterator"* @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEmmEv(%"class.__gnu_debug::_Safe_iterator"* %1) #3
  br label %132

; <label>:216:                                    ; preds = %181, %167
  %217 = landingpad { i8*, i32 }
          cleanup
  %218 = extractvalue { i8*, i32 } %217, 0
  store i8* %218, i8** %33, align 8
  %219 = extractvalue { i8*, i32 } %217, 1
  store i32 %219, i32* %34, align 4
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %32) #3
  call void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEED2Ev(%"class.__gnu_debug::_Safe_iterator"* %31) #3
  br label %181
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt19__iterator_categoryIN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS7_EEEEENSt15iterator_traitsIT_E17iterator_categoryERKSF_(%"class.__gnu_debug::_Safe_iterator"* dereferenceable(40)) #4 comdat {
  %2 = alloca %"struct.std::random_access_iterator_tag", align 1
  %3 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE16_M_incrementableEv(%"class.__gnu_debug::_Safe_iterator"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = alloca %"class.__gnu_debug::_Safe_iterator_base"*
  %5 = alloca %"class.__gnu_debug::_Safe_iterator"*
  %6 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %6, align 8
  %7 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %6, align 8
  store %"class.__gnu_debug::_Safe_iterator"* %7, %"class.__gnu_debug::_Safe_iterator"** %5
  %8 = load volatile %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %5
  %9 = bitcast %"class.__gnu_debug::_Safe_iterator"* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 8
  %11 = bitcast i8* %10 to %"class.__gnu_debug::_Safe_iterator_base"*
  store %"class.__gnu_debug::_Safe_iterator_base"* %11, %"class.__gnu_debug::_Safe_iterator_base"** %4
  %12 = alloca i32
  store i32 1618729567, i32* %12
  %13 = alloca i1
  br label %14

; <label>:14:                                     ; preds = %1, %151
  %15 = load i32, i32* %12
  switch i32 %15, label %16 [
    i32 1618729567, label %17
    i32 -1878009461, label %21
    i32 920067695, label %49
    i32 -27234091, label %84
    i32 196095204, label %86
    i32 -1622248968, label %103
    i32 1770059982, label %131
    i32 937915541, label %133
    i32 1406282765, label %150
  ]

; <label>:16:                                     ; preds = %14
  br label %151

; <label>:17:                                     ; preds = %14
  %18 = load volatile %"class.__gnu_debug::_Safe_iterator_base"*, %"class.__gnu_debug::_Safe_iterator_base"** %4
  %19 = call zeroext i1 @_ZNK11__gnu_debug19_Safe_iterator_base11_M_singularEv(%"class.__gnu_debug::_Safe_iterator_base"* %18) #14
  %20 = select i1 %19, i32 196095204, i32 -1878009461
  store i32 %20, i32* %12
  store i1 false, i1* %13
  br label %151

; <label>:21:                                     ; preds = %14
  %22 = load i32, i32* @x.516
  %23 = load i32, i32* @y.517
  %24 = add i32 %22, 44558811
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, 44558811
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 true, true
  %35 = and i1 %32, true
  %36 = and i1 %30, %34
  %37 = and i1 %33, true
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 true, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 920067695, i32 937915541
  store i32 %48, i32* %12
  br label %151

; <label>:49:                                     ; preds = %14
  %50 = load volatile %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %5
  %51 = call zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE9_M_is_endEv(%"class.__gnu_debug::_Safe_iterator"* %50)
  %52 = xor i1 %51, true
  %53 = and i1 true, %52
  %54 = xor i1 true, true
  %55 = and i1 %51, %54
  %56 = or i1 %53, %55
  %57 = xor i1 %51, true
  store i1 %56, i1* %3
  %58 = load i32, i32* @x.516
  %59 = load i32, i32* @y.517
  %60 = sub i32 0, 1
  %61 = add i32 %58, %60
  %62 = sub i32 %58, 1
  %63 = mul i32 %58, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %59, 10
  %67 = xor i1 %65, true
  %68 = xor i1 %66, true
  %69 = xor i1 false, true
  %70 = and i1 %67, false
  %71 = and i1 %65, %69
  %72 = and i1 %68, false
  %73 = and i1 %66, %69
  %74 = or i1 %70, %71
  %75 = or i1 %72, %73
  %76 = xor i1 %74, %75
  %77 = or i1 %67, %68
  %78 = xor i1 %77, true
  %79 = or i1 false, %69
  %80 = and i1 %78, %79
  %81 = or i1 %76, %80
  %82 = or i1 %65, %66
  %83 = select i1 %81, i32 -27234091, i32 937915541
  store i32 %83, i32* %12
  br label %151

; <label>:84:                                     ; preds = %14
  store i32 196095204, i32* %12
  %85 = load volatile i1, i1* %3
  store i1 %85, i1* %13
  br label %151

; <label>:86:                                     ; preds = %14
  %87 = load i1, i1* %13
  store i1 %87, i1* %2
  %88 = load i32, i32* @x.516
  %89 = load i32, i32* @y.517
  %90 = sub i32 %88, -1586483351
  %91 = sub i32 %90, 1
  %92 = add i32 %91, -1586483351
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = and i1 %96, %97
  %99 = xor i1 %96, %97
  %100 = or i1 %98, %99
  %101 = or i1 %96, %97
  %102 = select i1 %100, i32 -1622248968, i32 1406282765
  store i32 %102, i32* %12
  br label %151

; <label>:103:                                    ; preds = %14
  %104 = load i32, i32* @x.516
  %105 = load i32, i32* @y.517
  %106 = sub i32 %104, -791935976
  %107 = sub i32 %106, 1
  %108 = add i32 %107, -791935976
  %109 = sub i32 %104, 1
  %110 = mul i32 %104, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %105, 10
  %114 = xor i1 %112, true
  %115 = xor i1 %113, true
  %116 = xor i1 true, true
  %117 = and i1 %114, true
  %118 = and i1 %112, %116
  %119 = and i1 %115, true
  %120 = and i1 %113, %116
  %121 = or i1 %117, %118
  %122 = or i1 %119, %120
  %123 = xor i1 %121, %122
  %124 = or i1 %114, %115
  %125 = xor i1 %124, true
  %126 = or i1 true, %116
  %127 = and i1 %125, %126
  %128 = or i1 %123, %127
  %129 = or i1 %112, %113
  %130 = select i1 %128, i32 1770059982, i32 1406282765
  store i32 %130, i32* %12
  br label %151

; <label>:131:                                    ; preds = %14
  %132 = load volatile i1, i1* %2
  ret i1 %132

; <label>:133:                                    ; preds = %14
  %134 = load volatile %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %5
  %135 = call zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE9_M_is_endEv(%"class.__gnu_debug::_Safe_iterator"* %134)
  %136 = sub i1 false, true
  %137 = sub i1 %136, %135
  %138 = add i1 %137, true
  %139 = sub i1 false, %135
  %140 = sub i1 %138, true
  %141 = add i1 %140, true
  %142 = add i1 %141, true
  %143 = add i1 %138, true
  %144 = xor i1 %135, true
  %145 = and i1 true, %144
  %146 = xor i1 true, true
  %147 = and i1 %135, %146
  %148 = or i1 %145, %147
  %149 = xor i1 %135, true
  store i32 920067695, i32* %12
  br label %151

; <label>:150:                                    ; preds = %14
  store i32 -1622248968, i32* %12
  br label %151

; <label>:151:                                    ; preds = %150, %133, %103, %86, %84, %49, %21, %17, %16
  br label %14
}

; Function Attrs: nounwind
declare dereferenceable(40) %"class.__gnu_cxx::__mutex"* @_ZN11__gnu_debug19_Safe_iterator_base12_M_get_mutexEv(%"class.__gnu_debug::_Safe_iterator_base"*) #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13__scoped_lockC2ERNS_7__mutexE(%"class.__gnu_cxx::__scoped_lock"*, %"class.__gnu_cxx::__mutex"* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.518
  %6 = load i32, i32* @y.519
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1222225197, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %70
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1222225197, label %18
    i32 -2026617587, label %38
    i32 93986051, label %61
    i32 966523997, label %62
  ]

; <label>:17:                                     ; preds = %15
  br label %70

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -2026617587, i32 966523997
  store i32 %37, i32* %14
  br label %70

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__scoped_lock"*, align 8
  %40 = alloca %"class.__gnu_cxx::__mutex"*, align 8
  store %"class.__gnu_cxx::__scoped_lock"* %0, %"class.__gnu_cxx::__scoped_lock"** %39, align 8
  store %"class.__gnu_cxx::__mutex"* %1, %"class.__gnu_cxx::__mutex"** %40, align 8
  %41 = load %"class.__gnu_cxx::__scoped_lock"*, %"class.__gnu_cxx::__scoped_lock"** %39, align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__scoped_lock", %"class.__gnu_cxx::__scoped_lock"* %41, i32 0, i32 0
  %43 = load %"class.__gnu_cxx::__mutex"*, %"class.__gnu_cxx::__mutex"** %40, align 8
  store %"class.__gnu_cxx::__mutex"* %43, %"class.__gnu_cxx::__mutex"** %42, align 8
  %44 = getelementptr inbounds %"class.__gnu_cxx::__scoped_lock", %"class.__gnu_cxx::__scoped_lock"* %41, i32 0, i32 0
  %45 = load %"class.__gnu_cxx::__mutex"*, %"class.__gnu_cxx::__mutex"** %44, align 8
  call void @_ZN9__gnu_cxx7__mutex4lockEv(%"class.__gnu_cxx::__mutex"* %45)
  %46 = load i32, i32* @x.518
  %47 = load i32, i32* @y.519
  %48 = add i32 %46, -333590989
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, -333590989
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 93986051, i32 966523997
  store i32 %60, i32* %14
  br label %70

; <label>:61:                                     ; preds = %15
  ret void

; <label>:62:                                     ; preds = %15
  %63 = alloca %"class.__gnu_cxx::__scoped_lock"*, align 8
  %64 = alloca %"class.__gnu_cxx::__mutex"*, align 8
  store %"class.__gnu_cxx::__scoped_lock"* %0, %"class.__gnu_cxx::__scoped_lock"** %63, align 8
  store %"class.__gnu_cxx::__mutex"* %1, %"class.__gnu_cxx::__mutex"** %64, align 8
  %65 = load %"class.__gnu_cxx::__scoped_lock"*, %"class.__gnu_cxx::__scoped_lock"** %63, align 8
  %66 = getelementptr inbounds %"class.__gnu_cxx::__scoped_lock", %"class.__gnu_cxx::__scoped_lock"* %65, i32 0, i32 0
  %67 = load %"class.__gnu_cxx::__mutex"*, %"class.__gnu_cxx::__mutex"** %64, align 8
  store %"class.__gnu_cxx::__mutex"* %67, %"class.__gnu_cxx::__mutex"** %66, align 8
  %68 = getelementptr inbounds %"class.__gnu_cxx::__scoped_lock", %"class.__gnu_cxx::__scoped_lock"* %65, i32 0, i32 0
  %69 = load %"class.__gnu_cxx::__mutex"*, %"class.__gnu_cxx::__mutex"** %68, align 8
  call void @_ZN9__gnu_cxx7__mutex4lockEv(%"class.__gnu_cxx::__mutex"* %69)
  store i32 -2026617587, i32* %14
  br label %70

; <label>:70:                                     ; preds = %62, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13__scoped_lockD2Ev(%"class.__gnu_cxx::__scoped_lock"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.__gnu_cxx::__scoped_lock"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.__gnu_cxx::__scoped_lock"* %0, %"class.__gnu_cxx::__scoped_lock"** %2, align 8
  %5 = load %"class.__gnu_cxx::__scoped_lock"*, %"class.__gnu_cxx::__scoped_lock"** %2, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__scoped_lock", %"class.__gnu_cxx::__scoped_lock"* %5, i32 0, i32 0
  %7 = load %"class.__gnu_cxx::__mutex"*, %"class.__gnu_cxx::__mutex"** %6, align 8
  invoke void @_ZN9__gnu_cxx7__mutex6unlockEv(%"class.__gnu_cxx::__mutex"* %7)
          to label %8 unwind label %38

; <label>:8:                                      ; preds = %1
  %9 = load i32, i32* @x.520
  %10 = load i32, i32* @y.521
  %11 = sub i32 %9, 1179119877
  %12 = sub i32 %11, 1
  %13 = add i32 %12, 1179119877
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %10, 10
  %19 = and i1 %17, %18
  %20 = xor i1 %17, %18
  %21 = or i1 %19, %20
  %22 = or i1 %17, %18
  br i1 %21, label %23, label %85

; <label>:23:                                     ; preds = %8, %85
  %24 = load i32, i32* @x.520
  %25 = load i32, i32* @y.521
  %26 = sub i32 0, 1
  %27 = add i32 %24, %26
  %28 = sub i32 %24, 1
  %29 = mul i32 %24, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %25, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  br i1 %35, label %37, label %85

; <label>:37:                                     ; preds = %23
  ret void

; <label>:38:                                     ; preds = %1
  %39 = load i32, i32* @x.520
  %40 = load i32, i32* @y.521
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %86

; <label>:52:                                     ; preds = %38, %86
  %53 = landingpad { i8*, i32 }
          filter [0 x i8*] zeroinitializer
  %54 = extractvalue { i8*, i32 } %53, 0
  store i8* %54, i8** %3, align 8
  %55 = extractvalue { i8*, i32 } %53, 1
  store i32 %55, i32* %4, align 4
  %56 = load i32, i32* @x.520
  %57 = load i32, i32* @y.521
  %58 = add i32 %56, -755060788
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, -755060788
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 false, true
  %69 = and i1 %66, false
  %70 = and i1 %64, %68
  %71 = and i1 %67, false
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 false, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  br i1 %80, label %82, label %86

; <label>:82:                                     ; preds = %52
  br label %83

; <label>:83:                                     ; preds = %82
  %84 = load i8*, i8** %3, align 8
  call void @__cxa_call_unexpected(i8* %84) #13
  unreachable

; <label>:85:                                     ; preds = %23, %8
  br label %23

; <label>:86:                                     ; preds = %52, %38
  %87 = landingpad { i8*, i32 }
          filter [0 x i8*] zeroinitializer
  %88 = extractvalue { i8*, i32 } %87, 0
  store i8* %88, i8** %3, align 8
  %89 = extractvalue { i8*, i32 } %87, 1
  store i32 %89, i32* %4, align 4
  br label %52
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE4baseEv(%"class.__gnu_debug::_Safe_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.522
  %6 = load i32, i32* @y.523
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1825774342, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %63
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1825774342, label %18
    i32 617694948, label %38
    i32 -767974397, label %57
    i32 256687938, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %63

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 617694948, i32 256687938
  store i32 %37, i32* %14
  br label %63

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %39, align 8
  %40 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %39, align 8
  %41 = bitcast %"class.__gnu_debug::_Safe_iterator"* %40 to %"class.__gnu_cxx::__normal_iterator"*
  store %"class.__gnu_cxx::__normal_iterator"* %41, %"class.__gnu_cxx::__normal_iterator"** %2
  %42 = load i32, i32* @x.522
  %43 = load i32, i32* @y.523
  %44 = add i32 %42, -95267178
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, -95267178
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -767974397, i32 256687938
  store i32 %56, i32* %14
  br label %63

; <label>:57:                                     ; preds = %15
  %58 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2
  ret %"class.__gnu_cxx::__normal_iterator"* %58

; <label>:59:                                     ; preds = %15
  %60 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %60, align 8
  %61 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %60, align 8
  %62 = bitcast %"class.__gnu_debug::_Safe_iterator"* %61 to %"class.__gnu_cxx::__normal_iterator"*
  store i32 617694948, i32* %14
  br label %63

; <label>:63:                                     ; preds = %59, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEppEv(%"class.__gnu_cxx::__normal_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.524
  %6 = load i32, i32* @y.525
  %7 = add i32 %5, -1231386496
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1231386496
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -752210630, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -752210630, label %19
    i32 2106063915, label %27
    i32 -1454227362, label %60
    i32 -65110229, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 2106063915, i32 -65110229
  store i32 %26, i32* %15
  br label %68

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %29, %"class.__gnu_cxx::__normal_iterator"** %2
  %30 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %30, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = getelementptr inbounds i32, i32* %32, i32 1
  store i32* %33, i32** %31, align 8
  %34 = load i32, i32* @x.524
  %35 = load i32, i32* @y.525
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -1454227362, i32 -65110229
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2
  ret %"class.__gnu_cxx::__normal_iterator"* %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %63, align 8
  %64 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %63, align 8
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %64, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = getelementptr inbounds i32, i32* %66, i32 1
  store i32* %67, i32** %65, align 8
  store i32 2106063915, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx7__mutex4lockEv(%"class.__gnu_cxx::__mutex"*) #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i32
  %4 = alloca %"class.__gnu_cxx::__mutex"*
  %5 = alloca %"class.__gnu_cxx::__mutex"*, align 8
  store %"class.__gnu_cxx::__mutex"* %0, %"class.__gnu_cxx::__mutex"** %5, align 8
  %6 = load %"class.__gnu_cxx::__mutex"*, %"class.__gnu_cxx::__mutex"** %5, align 8
  store %"class.__gnu_cxx::__mutex"* %6, %"class.__gnu_cxx::__mutex"** %4
  %7 = call i32 @_ZL18__gthread_active_pv()
  store i32 %7, i32* %3
  %8 = alloca i32
  store i32 -186435134, i32* %8
  br label %9

; <label>:9:                                      ; preds = %1, %132
  %10 = load i32, i32* %8
  switch i32 %10, label %11 [
    i32 -186435134, label %12
    i32 -1096003029, label %16
    i32 1895616208, label %32
    i32 421075221, label %64
    i32 -1136158348, label %67
    i32 2076947898, label %68
    i32 935375607, label %96
    i32 550318500, label %124
    i32 -71088534, label %125
    i32 1088193050, label %126
    i32 -1035142997, label %131
  ]

; <label>:11:                                     ; preds = %9
  br label %132

; <label>:12:                                     ; preds = %9
  %13 = load volatile i32, i32* %3
  %14 = icmp ne i32 %13, 0
  %15 = select i1 %14, i32 -1096003029, i32 -71088534
  store i32 %15, i32* %8
  br label %132

; <label>:16:                                     ; preds = %9
  %17 = load i32, i32* @x.526
  %18 = load i32, i32* @y.527
  %19 = sub i32 %17, -1102449482
  %20 = sub i32 %19, 1
  %21 = add i32 %20, -1102449482
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 1895616208, i32 1088193050
  store i32 %31, i32* %8
  br label %132

; <label>:32:                                     ; preds = %9
  %33 = load volatile %"class.__gnu_cxx::__mutex"*, %"class.__gnu_cxx::__mutex"** %4
  %34 = getelementptr inbounds %"class.__gnu_cxx::__mutex", %"class.__gnu_cxx::__mutex"* %33, i32 0, i32 0
  %35 = call i32 @_ZL20__gthread_mutex_lockP15pthread_mutex_t(%union.pthread_mutex_t* %34)
  %36 = icmp ne i32 %35, 0
  store i1 %36, i1* %2
  %37 = load i32, i32* @x.526
  %38 = load i32, i32* @y.527
  %39 = add i32 %37, 403997818
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, 403997818
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 421075221, i32 1088193050
  store i32 %63, i32* %8
  br label %132

; <label>:64:                                     ; preds = %9
  %65 = load volatile i1, i1* %2
  %66 = select i1 %65, i32 -1136158348, i32 2076947898
  store i32 %66, i32* %8
  br label %132

; <label>:67:                                     ; preds = %9
  call void @_ZN9__gnu_cxx30__throw_concurrence_lock_errorEv()
  store i32 2076947898, i32* %8
  br label %132

; <label>:68:                                     ; preds = %9
  %69 = load i32, i32* @x.526
  %70 = load i32, i32* @y.527
  %71 = add i32 %69, -845058622
  %72 = sub i32 %71, 1
  %73 = sub i32 %72, -845058622
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = xor i1 %77, true
  %80 = xor i1 %78, true
  %81 = xor i1 true, true
  %82 = and i1 %79, true
  %83 = and i1 %77, %81
  %84 = and i1 %80, true
  %85 = and i1 %78, %81
  %86 = or i1 %82, %83
  %87 = or i1 %84, %85
  %88 = xor i1 %86, %87
  %89 = or i1 %79, %80
  %90 = xor i1 %89, true
  %91 = or i1 true, %81
  %92 = and i1 %90, %91
  %93 = or i1 %88, %92
  %94 = or i1 %77, %78
  %95 = select i1 %93, i32 935375607, i32 -1035142997
  store i32 %95, i32* %8
  br label %132

; <label>:96:                                     ; preds = %9
  %97 = load i32, i32* @x.526
  %98 = load i32, i32* @y.527
  %99 = sub i32 %97, -442478752
  %100 = sub i32 %99, 1
  %101 = add i32 %100, -442478752
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = xor i1 %105, true
  %108 = xor i1 %106, true
  %109 = xor i1 true, true
  %110 = and i1 %107, true
  %111 = and i1 %105, %109
  %112 = and i1 %108, true
  %113 = and i1 %106, %109
  %114 = or i1 %110, %111
  %115 = or i1 %112, %113
  %116 = xor i1 %114, %115
  %117 = or i1 %107, %108
  %118 = xor i1 %117, true
  %119 = or i1 true, %109
  %120 = and i1 %118, %119
  %121 = or i1 %116, %120
  %122 = or i1 %105, %106
  %123 = select i1 %121, i32 550318500, i32 -1035142997
  store i32 %123, i32* %8
  br label %132

; <label>:124:                                    ; preds = %9
  store i32 -71088534, i32* %8
  br label %132

; <label>:125:                                    ; preds = %9
  ret void

; <label>:126:                                    ; preds = %9
  %127 = load volatile %"class.__gnu_cxx::__mutex"*, %"class.__gnu_cxx::__mutex"** %4
  %128 = getelementptr inbounds %"class.__gnu_cxx::__mutex", %"class.__gnu_cxx::__mutex"* %127, i32 0, i32 0
  %129 = call i32 @_ZL20__gthread_mutex_lockP15pthread_mutex_t(%union.pthread_mutex_t* %128)
  %130 = icmp ne i32 %129, 0
  store i32 1895616208, i32* %8
  br label %132

; <label>:131:                                    ; preds = %9
  store i32 935375607, i32* %8
  br label %132

; <label>:132:                                    ; preds = %131, %126, %124, %96, %68, %67, %64, %32, %16, %12, %11
  br label %9
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @_ZL18__gthread_active_pv() #4 {
  ret i32 zext (i1 icmp ne (i8* bitcast (i32 (i32*, void (i8*)*)* @__pthread_key_create to i8*), i8* null) to i32)
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @_ZL20__gthread_mutex_lockP15pthread_mutex_t(%union.pthread_mutex_t*) #4 {
  %2 = alloca i32
  %3 = alloca i32, align 4
  %4 = alloca %union.pthread_mutex_t*, align 8
  store %union.pthread_mutex_t* %0, %union.pthread_mutex_t** %4, align 8
  %5 = call i32 @_ZL18__gthread_active_pv()
  store i32 %5, i32* %2
  %6 = alloca i32
  store i32 1308788872, i32* %6
  br label %7

; <label>:7:                                      ; preds = %1, %20
  %8 = load i32, i32* %6
  switch i32 %8, label %9 [
    i32 1308788872, label %10
    i32 1422641132, label %14
    i32 -442351624, label %17
    i32 486193364, label %18
  ]

; <label>:9:                                      ; preds = %7
  br label %20

; <label>:10:                                     ; preds = %7
  %11 = load volatile i32, i32* %2
  %12 = icmp ne i32 %11, 0
  %13 = select i1 %12, i32 1422641132, i32 -442351624
  store i32 %13, i32* %6
  br label %20

; <label>:14:                                     ; preds = %7
  %15 = load %union.pthread_mutex_t*, %union.pthread_mutex_t** %4, align 8
  %16 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %15) #3
  store i32 %16, i32* %3, align 4
  store i32 486193364, i32* %6
  br label %20

; <label>:17:                                     ; preds = %7
  store i32 0, i32* %3, align 4
  store i32 486193364, i32* %6
  br label %20

; <label>:18:                                     ; preds = %7
  %19 = load i32, i32* %3, align 4
  ret i32 %19

; <label>:20:                                     ; preds = %17, %14, %10, %9
  br label %7
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx30__throw_concurrence_lock_errorEv() #0 comdat {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.532
  %4 = load i32, i32* @y.533
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %2
  %11 = icmp slt i32 %4, 10
  store i1 %11, i1* %1
  %12 = alloca i32
  store i32 -962758621, i32* %12
  br label %13

; <label>:13:                                     ; preds = %0, %94
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -962758621, label %16
    i32 1440133628, label %24
    i32 -1086867379, label %43
    i32 -1110455130, label %44
    i32 781109017, label %72
    i32 2117763192, label %88
    i32 -2065115490, label %89
    i32 -2081476292, label %93
  ]

; <label>:15:                                     ; preds = %13
  br label %94

; <label>:16:                                     ; preds = %13
  %17 = load volatile i1, i1* %2
  %18 = load volatile i1, i1* %1
  %19 = and i1 %17, %18
  %20 = xor i1 %17, %18
  %21 = or i1 %19, %20
  %22 = or i1 %17, %18
  %23 = select i1 %21, i32 1440133628, i32 -2065115490
  store i32 %23, i32* %12
  br label %94

; <label>:24:                                     ; preds = %13
  %25 = call i8* @__cxa_allocate_exception(i64 8) #3
  %26 = bitcast i8* %25 to %"class.__gnu_cxx::__concurrence_lock_error"*
  %27 = bitcast %"class.__gnu_cxx::__concurrence_lock_error"* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* %27, i8 0, i64 8, i32 16, i1 false)
  call void @_ZN9__gnu_cxx24__concurrence_lock_errorC2Ev(%"class.__gnu_cxx::__concurrence_lock_error"* %26) #3
  call void @__cxa_throw(i8* %25, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN9__gnu_cxx24__concurrence_lock_errorE to i8*), i8* bitcast (void (%"class.__gnu_cxx::__concurrence_lock_error"*)* @_ZN9__gnu_cxx24__concurrence_lock_errorD2Ev to i8*)) #13
  %28 = load i32, i32* @x.532
  %29 = load i32, i32* @y.533
  %30 = add i32 %28, 846209563
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, 846209563
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 -1086867379, i32 -2065115490
  store i32 %42, i32* %12
  br label %94

; <label>:43:                                     ; preds = %13
  unreachable

; <label>:44:                                     ; preds = %13
  %45 = load i32, i32* @x.532
  %46 = load i32, i32* @y.533
  %47 = sub i32 %45, -1599972638
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -1599972638
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 781109017, i32 -2081476292
  store i32 %71, i32* %12
  br label %94

; <label>:72:                                     ; preds = %13
  %73 = load i32, i32* @x.532
  %74 = load i32, i32* @y.533
  %75 = sub i32 %73, 1248321225
  %76 = sub i32 %75, 1
  %77 = add i32 %76, 1248321225
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = and i1 %81, %82
  %84 = xor i1 %81, %82
  %85 = or i1 %83, %84
  %86 = or i1 %81, %82
  %87 = select i1 %85, i32 2117763192, i32 -2081476292
  store i32 %87, i32* %12
  br label %94

; <label>:88:                                     ; preds = %13
  ret void

; <label>:89:                                     ; preds = %13
  %90 = call i8* @__cxa_allocate_exception(i64 8) #3
  %91 = bitcast i8* %90 to %"class.__gnu_cxx::__concurrence_lock_error"*
  %92 = bitcast %"class.__gnu_cxx::__concurrence_lock_error"* %91 to i8*
  call void @llvm.memset.p0i8.i64(i8* %92, i8 0, i64 8, i32 16, i1 false)
  call void @_ZN9__gnu_cxx24__concurrence_lock_errorC2Ev(%"class.__gnu_cxx::__concurrence_lock_error"* %91) #3
  call void @__cxa_throw(i8* %90, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN9__gnu_cxx24__concurrence_lock_errorE to i8*), i8* bitcast (void (%"class.__gnu_cxx::__concurrence_lock_error"*)* @_ZN9__gnu_cxx24__concurrence_lock_errorD2Ev to i8*)) #13
  store i32 1440133628, i32* %12
  br label %94

; <label>:93:                                     ; preds = %13
  store i32 781109017, i32* %12
  br label %94

; <label>:94:                                     ; preds = %93, %89, %72, %44, %24, %16, %15
  br label %13
}

; Function Attrs: nounwind
declare extern_weak i32 @__pthread_key_create(i32*, void (i8*)*) #2

; Function Attrs: nounwind
declare extern_weak i32 @pthread_mutex_lock(%union.pthread_mutex_t*) #2

declare i8* @__cxa_allocate_exception(i64)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx24__concurrence_lock_errorC2Ev(%"class.__gnu_cxx::__concurrence_lock_error"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__concurrence_lock_error"*, align 8
  store %"class.__gnu_cxx::__concurrence_lock_error"* %0, %"class.__gnu_cxx::__concurrence_lock_error"** %2, align 8
  %3 = load %"class.__gnu_cxx::__concurrence_lock_error"*, %"class.__gnu_cxx::__concurrence_lock_error"** %2, align 8
  %4 = bitcast %"class.__gnu_cxx::__concurrence_lock_error"* %3 to %"class.std::exception"*
  call void @_ZNSt9exceptionC2Ev(%"class.std::exception"* %4) #3
  %5 = bitcast %"class.__gnu_cxx::__concurrence_lock_error"* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN9__gnu_cxx24__concurrence_lock_errorE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %5, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx24__concurrence_lock_errorD2Ev(%"class.__gnu_cxx::__concurrence_lock_error"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.536
  %5 = load i32, i32* @y.537
  %6 = add i32 %4, -615437046
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -615437046
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1617440040, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1617440040, label %18
    i32 -1235698066, label %26
    i32 -1644917611, label %57
    i32 2058900149, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1235698066, i32 2058900149
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__concurrence_lock_error"*, align 8
  store %"class.__gnu_cxx::__concurrence_lock_error"* %0, %"class.__gnu_cxx::__concurrence_lock_error"** %27, align 8
  %28 = load %"class.__gnu_cxx::__concurrence_lock_error"*, %"class.__gnu_cxx::__concurrence_lock_error"** %27, align 8
  %29 = bitcast %"class.__gnu_cxx::__concurrence_lock_error"* %28 to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* %29) #3
  %30 = load i32, i32* @x.536
  %31 = load i32, i32* @y.537
  %32 = sub i32 %30, -794805995
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -794805995
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -1644917611, i32 2058900149
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.__gnu_cxx::__concurrence_lock_error"*, align 8
  store %"class.__gnu_cxx::__concurrence_lock_error"* %0, %"class.__gnu_cxx::__concurrence_lock_error"** %59, align 8
  %60 = load %"class.__gnu_cxx::__concurrence_lock_error"*, %"class.__gnu_cxx::__concurrence_lock_error"** %59, align 8
  %61 = bitcast %"class.__gnu_cxx::__concurrence_lock_error"* %60 to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* %61) #3
  store i32 -1235698066, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %26, %18, %17
  br label %15
}

declare void @__cxa_throw(i8*, i8*, i8*)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt9exceptionC2Ev(%"class.std::exception"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::exception"*, align 8
  store %"class.std::exception"* %0, %"class.std::exception"** %2, align 8
  %3 = load %"class.std::exception"*, %"class.std::exception"** %2, align 8
  %4 = bitcast %"class.std::exception"* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVSt9exception, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx24__concurrence_lock_errorD0Ev(%"class.__gnu_cxx::__concurrence_lock_error"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__concurrence_lock_error"*, align 8
  store %"class.__gnu_cxx::__concurrence_lock_error"* %0, %"class.__gnu_cxx::__concurrence_lock_error"** %2, align 8
  %3 = load %"class.__gnu_cxx::__concurrence_lock_error"*, %"class.__gnu_cxx::__concurrence_lock_error"** %2, align 8
  call void @_ZN9__gnu_cxx24__concurrence_lock_errorD2Ev(%"class.__gnu_cxx::__concurrence_lock_error"* %3) #3
  %4 = bitcast %"class.__gnu_cxx::__concurrence_lock_error"* %3 to i8*
  call void @_ZdlPv(i8* %4) #15
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNK9__gnu_cxx24__concurrence_lock_error4whatEv(%"class.__gnu_cxx::__concurrence_lock_error"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.542
  %5 = load i32, i32* @y.543
  %6 = sub i32 %4, -295468376
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -295468376
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1831628970, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1831628970, label %18
    i32 -1712845281, label %26
    i32 213919047, label %56
    i32 1706541122, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1712845281, i32 1706541122
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__concurrence_lock_error"*, align 8
  store %"class.__gnu_cxx::__concurrence_lock_error"* %0, %"class.__gnu_cxx::__concurrence_lock_error"** %27, align 8
  %28 = load %"class.__gnu_cxx::__concurrence_lock_error"*, %"class.__gnu_cxx::__concurrence_lock_error"** %27, align 8
  %29 = load i32, i32* @x.542
  %30 = load i32, i32* @y.543
  %31 = sub i32 %29, 1198262643
  %32 = sub i32 %31, 1
  %33 = add i32 %32, 1198262643
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 213919047, i32 1706541122
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i32 0, i32 0)

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::__concurrence_lock_error"*, align 8
  store %"class.__gnu_cxx::__concurrence_lock_error"* %0, %"class.__gnu_cxx::__concurrence_lock_error"** %58, align 8
  %59 = load %"class.__gnu_cxx::__concurrence_lock_error"*, %"class.__gnu_cxx::__concurrence_lock_error"** %58, align 8
  store i32 -1712845281, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: nounwind
declare void @_ZNSt9exceptionD2Ev(%"class.std::exception"*) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx7__mutex6unlockEv(%"class.__gnu_cxx::__mutex"*) #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i32
  %4 = alloca %"class.__gnu_cxx::__mutex"*
  %5 = alloca %"class.__gnu_cxx::__mutex"*, align 8
  store %"class.__gnu_cxx::__mutex"* %0, %"class.__gnu_cxx::__mutex"** %5, align 8
  %6 = load %"class.__gnu_cxx::__mutex"*, %"class.__gnu_cxx::__mutex"** %5, align 8
  store %"class.__gnu_cxx::__mutex"* %6, %"class.__gnu_cxx::__mutex"** %4
  %7 = call i32 @_ZL18__gthread_active_pv()
  store i32 %7, i32* %3
  %8 = alloca i32
  store i32 -1334146176, i32* %8
  br label %9

; <label>:9:                                      ; preds = %1, %164
  %10 = load i32, i32* %8
  switch i32 %10, label %11 [
    i32 -1334146176, label %12
    i32 223259200, label %16
    i32 -877603151, label %32
    i32 991652291, label %51
    i32 -1172075454, label %54
    i32 1979746815, label %55
    i32 1097168614, label %83
    i32 2008130596, label %111
    i32 716345744, label %112
    i32 852286807, label %140
    i32 -1029898961, label %156
    i32 434637229, label %157
    i32 -380776692, label %162
    i32 -1446879510, label %163
  ]

; <label>:11:                                     ; preds = %9
  br label %164

; <label>:12:                                     ; preds = %9
  %13 = load volatile i32, i32* %3
  %14 = icmp ne i32 %13, 0
  %15 = select i1 %14, i32 223259200, i32 716345744
  store i32 %15, i32* %8
  br label %164

; <label>:16:                                     ; preds = %9
  %17 = load i32, i32* @x.544
  %18 = load i32, i32* @y.545
  %19 = add i32 %17, -644238212
  %20 = sub i32 %19, 1
  %21 = sub i32 %20, -644238212
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 -877603151, i32 434637229
  store i32 %31, i32* %8
  br label %164

; <label>:32:                                     ; preds = %9
  %33 = load volatile %"class.__gnu_cxx::__mutex"*, %"class.__gnu_cxx::__mutex"** %4
  %34 = getelementptr inbounds %"class.__gnu_cxx::__mutex", %"class.__gnu_cxx::__mutex"* %33, i32 0, i32 0
  %35 = call i32 @_ZL22__gthread_mutex_unlockP15pthread_mutex_t(%union.pthread_mutex_t* %34)
  %36 = icmp ne i32 %35, 0
  store i1 %36, i1* %2
  %37 = load i32, i32* @x.544
  %38 = load i32, i32* @y.545
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 991652291, i32 434637229
  store i32 %50, i32* %8
  br label %164

; <label>:51:                                     ; preds = %9
  %52 = load volatile i1, i1* %2
  %53 = select i1 %52, i32 -1172075454, i32 1979746815
  store i32 %53, i32* %8
  br label %164

; <label>:54:                                     ; preds = %9
  call void @_ZN9__gnu_cxx32__throw_concurrence_unlock_errorEv()
  store i32 1979746815, i32* %8
  br label %164

; <label>:55:                                     ; preds = %9
  %56 = load i32, i32* @x.544
  %57 = load i32, i32* @y.545
  %58 = add i32 %56, 1006962824
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, 1006962824
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 true, true
  %69 = and i1 %66, true
  %70 = and i1 %64, %68
  %71 = and i1 %67, true
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 true, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  %82 = select i1 %80, i32 1097168614, i32 -380776692
  store i32 %82, i32* %8
  br label %164

; <label>:83:                                     ; preds = %9
  %84 = load i32, i32* @x.544
  %85 = load i32, i32* @y.545
  %86 = sub i32 %84, -551035378
  %87 = sub i32 %86, 1
  %88 = add i32 %87, -551035378
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = xor i1 %92, true
  %95 = xor i1 %93, true
  %96 = xor i1 true, true
  %97 = and i1 %94, true
  %98 = and i1 %92, %96
  %99 = and i1 %95, true
  %100 = and i1 %93, %96
  %101 = or i1 %97, %98
  %102 = or i1 %99, %100
  %103 = xor i1 %101, %102
  %104 = or i1 %94, %95
  %105 = xor i1 %104, true
  %106 = or i1 true, %96
  %107 = and i1 %105, %106
  %108 = or i1 %103, %107
  %109 = or i1 %92, %93
  %110 = select i1 %108, i32 2008130596, i32 -380776692
  store i32 %110, i32* %8
  br label %164

; <label>:111:                                    ; preds = %9
  store i32 716345744, i32* %8
  br label %164

; <label>:112:                                    ; preds = %9
  %113 = load i32, i32* @x.544
  %114 = load i32, i32* @y.545
  %115 = sub i32 %113, -230781801
  %116 = sub i32 %115, 1
  %117 = add i32 %116, -230781801
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = xor i1 %121, true
  %124 = xor i1 %122, true
  %125 = xor i1 true, true
  %126 = and i1 %123, true
  %127 = and i1 %121, %125
  %128 = and i1 %124, true
  %129 = and i1 %122, %125
  %130 = or i1 %126, %127
  %131 = or i1 %128, %129
  %132 = xor i1 %130, %131
  %133 = or i1 %123, %124
  %134 = xor i1 %133, true
  %135 = or i1 true, %125
  %136 = and i1 %134, %135
  %137 = or i1 %132, %136
  %138 = or i1 %121, %122
  %139 = select i1 %137, i32 852286807, i32 -1446879510
  store i32 %139, i32* %8
  br label %164

; <label>:140:                                    ; preds = %9
  %141 = load i32, i32* @x.544
  %142 = load i32, i32* @y.545
  %143 = add i32 %141, 1887766131
  %144 = sub i32 %143, 1
  %145 = sub i32 %144, 1887766131
  %146 = sub i32 %141, 1
  %147 = mul i32 %141, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %142, 10
  %151 = and i1 %149, %150
  %152 = xor i1 %149, %150
  %153 = or i1 %151, %152
  %154 = or i1 %149, %150
  %155 = select i1 %153, i32 -1029898961, i32 -1446879510
  store i32 %155, i32* %8
  br label %164

; <label>:156:                                    ; preds = %9
  ret void

; <label>:157:                                    ; preds = %9
  %158 = load volatile %"class.__gnu_cxx::__mutex"*, %"class.__gnu_cxx::__mutex"** %4
  %159 = getelementptr inbounds %"class.__gnu_cxx::__mutex", %"class.__gnu_cxx::__mutex"* %158, i32 0, i32 0
  %160 = call i32 @_ZL22__gthread_mutex_unlockP15pthread_mutex_t(%union.pthread_mutex_t* %159)
  %161 = icmp ne i32 %160, 0
  store i32 -877603151, i32* %8
  br label %164

; <label>:162:                                    ; preds = %9
  store i32 1097168614, i32* %8
  br label %164

; <label>:163:                                    ; preds = %9
  store i32 852286807, i32* %8
  br label %164

; <label>:164:                                    ; preds = %163, %162, %157, %140, %112, %111, %83, %55, %54, %51, %32, %16, %12, %11
  br label %9
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @_ZL22__gthread_mutex_unlockP15pthread_mutex_t(%union.pthread_mutex_t*) #4 {
  %2 = alloca i32
  %3 = alloca i32
  %4 = alloca i32, align 4
  %5 = alloca %union.pthread_mutex_t*, align 8
  store %union.pthread_mutex_t* %0, %union.pthread_mutex_t** %5, align 8
  %6 = call i32 @_ZL18__gthread_active_pv()
  store i32 %6, i32* %3
  %7 = alloca i32
  store i32 1673138120, i32* %7
  br label %8

; <label>:8:                                      ; preds = %1, %55
  %9 = load i32, i32* %7
  switch i32 %9, label %10 [
    i32 1673138120, label %11
    i32 2002158006, label %15
    i32 1806262308, label %18
    i32 784610490, label %19
    i32 -576388837, label %35
    i32 -1304145006, label %51
    i32 -594724395, label %53
  ]

; <label>:10:                                     ; preds = %8
  br label %55

; <label>:11:                                     ; preds = %8
  %12 = load volatile i32, i32* %3
  %13 = icmp ne i32 %12, 0
  %14 = select i1 %13, i32 2002158006, i32 1806262308
  store i32 %14, i32* %7
  br label %55

; <label>:15:                                     ; preds = %8
  %16 = load %union.pthread_mutex_t*, %union.pthread_mutex_t** %5, align 8
  %17 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %16) #3
  store i32 %17, i32* %4, align 4
  store i32 784610490, i32* %7
  br label %55

; <label>:18:                                     ; preds = %8
  store i32 0, i32* %4, align 4
  store i32 784610490, i32* %7
  br label %55

; <label>:19:                                     ; preds = %8
  %20 = load i32, i32* @x.546
  %21 = load i32, i32* @y.547
  %22 = sub i32 %20, -303026865
  %23 = sub i32 %22, 1
  %24 = add i32 %23, -303026865
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  %34 = select i1 %32, i32 -576388837, i32 -594724395
  store i32 %34, i32* %7
  br label %55

; <label>:35:                                     ; preds = %8
  %36 = load i32, i32* %4, align 4
  store i32 %36, i32* %2
  %37 = load i32, i32* @x.546
  %38 = load i32, i32* @y.547
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 -1304145006, i32 -594724395
  store i32 %50, i32* %7
  br label %55

; <label>:51:                                     ; preds = %8
  %52 = load volatile i32, i32* %2
  ret i32 %52

; <label>:53:                                     ; preds = %8
  %54 = load i32, i32* %4, align 4
  store i32 -576388837, i32* %7
  br label %55

; <label>:55:                                     ; preds = %53, %35, %19, %18, %15, %11, %10
  br label %8
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx32__throw_concurrence_unlock_errorEv() #0 comdat {
  %1 = call i8* @__cxa_allocate_exception(i64 8) #3
  %2 = bitcast i8* %1 to %"class.__gnu_cxx::__concurrence_unlock_error"*
  %3 = bitcast %"class.__gnu_cxx::__concurrence_unlock_error"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 8, i32 16, i1 false)
  call void @_ZN9__gnu_cxx26__concurrence_unlock_errorC2Ev(%"class.__gnu_cxx::__concurrence_unlock_error"* %2) #3
  call void @__cxa_throw(i8* %1, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN9__gnu_cxx26__concurrence_unlock_errorE to i8*), i8* bitcast (void (%"class.__gnu_cxx::__concurrence_unlock_error"*)* @_ZN9__gnu_cxx26__concurrence_unlock_errorD2Ev to i8*)) #13
  %4 = alloca i32
  store i32 -357916349, i32* %4
  br label %5

; <label>:5:                                      ; preds = %0, %9
  %6 = load i32, i32* %4
  switch i32 %6, label %7 [
    i32 -357916349, label %8
  ]

; <label>:7:                                      ; preds = %5
  br label %9

; <label>:8:                                      ; preds = %5
  ret void

; <label>:9:                                      ; preds = %7
  br label %5
}

; Function Attrs: nounwind
declare extern_weak i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx26__concurrence_unlock_errorC2Ev(%"class.__gnu_cxx::__concurrence_unlock_error"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__concurrence_unlock_error"*, align 8
  store %"class.__gnu_cxx::__concurrence_unlock_error"* %0, %"class.__gnu_cxx::__concurrence_unlock_error"** %2, align 8
  %3 = load %"class.__gnu_cxx::__concurrence_unlock_error"*, %"class.__gnu_cxx::__concurrence_unlock_error"** %2, align 8
  %4 = bitcast %"class.__gnu_cxx::__concurrence_unlock_error"* %3 to %"class.std::exception"*
  call void @_ZNSt9exceptionC2Ev(%"class.std::exception"* %4) #3
  %5 = bitcast %"class.__gnu_cxx::__concurrence_unlock_error"* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN9__gnu_cxx26__concurrence_unlock_errorE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %5, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx26__concurrence_unlock_errorD2Ev(%"class.__gnu_cxx::__concurrence_unlock_error"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__concurrence_unlock_error"*, align 8
  store %"class.__gnu_cxx::__concurrence_unlock_error"* %0, %"class.__gnu_cxx::__concurrence_unlock_error"** %2, align 8
  %3 = load %"class.__gnu_cxx::__concurrence_unlock_error"*, %"class.__gnu_cxx::__concurrence_unlock_error"** %2, align 8
  %4 = bitcast %"class.__gnu_cxx::__concurrence_unlock_error"* %3 to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx26__concurrence_unlock_errorD0Ev(%"class.__gnu_cxx::__concurrence_unlock_error"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.554
  %5 = load i32, i32* @y.555
  %6 = add i32 %4, -1327860199
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1327860199
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -62457144, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -62457144, label %18
    i32 298923742, label %26
    i32 1781441109, label %56
    i32 169159426, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 298923742, i32 169159426
  store i32 %25, i32* %14
  br label %61

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__concurrence_unlock_error"*, align 8
  store %"class.__gnu_cxx::__concurrence_unlock_error"* %0, %"class.__gnu_cxx::__concurrence_unlock_error"** %27, align 8
  %28 = load %"class.__gnu_cxx::__concurrence_unlock_error"*, %"class.__gnu_cxx::__concurrence_unlock_error"** %27, align 8
  call void @_ZN9__gnu_cxx26__concurrence_unlock_errorD2Ev(%"class.__gnu_cxx::__concurrence_unlock_error"* %28) #3
  %29 = bitcast %"class.__gnu_cxx::__concurrence_unlock_error"* %28 to i8*
  call void @_ZdlPv(i8* %29) #15
  %30 = load i32, i32* @x.554
  %31 = load i32, i32* @y.555
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 1781441109, i32 169159426
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::__concurrence_unlock_error"*, align 8
  store %"class.__gnu_cxx::__concurrence_unlock_error"* %0, %"class.__gnu_cxx::__concurrence_unlock_error"** %58, align 8
  %59 = load %"class.__gnu_cxx::__concurrence_unlock_error"*, %"class.__gnu_cxx::__concurrence_unlock_error"** %58, align 8
  call void @_ZN9__gnu_cxx26__concurrence_unlock_errorD2Ev(%"class.__gnu_cxx::__concurrence_unlock_error"* %59) #3
  %60 = bitcast %"class.__gnu_cxx::__concurrence_unlock_error"* %59 to i8*
  call void @_ZdlPv(i8* %60) #15
  store i32 298923742, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNK9__gnu_cxx26__concurrence_unlock_error4whatEv(%"class.__gnu_cxx::__concurrence_unlock_error"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.556
  %5 = load i32, i32* @y.557
  %6 = add i32 %4, 93200473
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 93200473
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -452429913, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %47
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -452429913, label %18
    i32 -600921547, label %26
    i32 1171046610, label %43
    i32 820744828, label %44
  ]

; <label>:17:                                     ; preds = %15
  br label %47

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -600921547, i32 820744828
  store i32 %25, i32* %14
  br label %47

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__concurrence_unlock_error"*, align 8
  store %"class.__gnu_cxx::__concurrence_unlock_error"* %0, %"class.__gnu_cxx::__concurrence_unlock_error"** %27, align 8
  %28 = load %"class.__gnu_cxx::__concurrence_unlock_error"*, %"class.__gnu_cxx::__concurrence_unlock_error"** %27, align 8
  %29 = load i32, i32* @x.556
  %30 = load i32, i32* @y.557
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 1171046610, i32 820744828
  store i32 %42, i32* %14
  br label %47

; <label>:43:                                     ; preds = %15
  ret i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.12, i32 0, i32 0)

; <label>:44:                                     ; preds = %15
  %45 = alloca %"class.__gnu_cxx::__concurrence_unlock_error"*, align 8
  store %"class.__gnu_cxx::__concurrence_unlock_error"* %0, %"class.__gnu_cxx::__concurrence_unlock_error"** %45, align 8
  %46 = load %"class.__gnu_cxx::__concurrence_unlock_error"*, %"class.__gnu_cxx::__concurrence_unlock_error"** %45, align 8
  store i32 -600921547, i32* %14
  br label %47

; <label>:47:                                     ; preds = %44, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEC2Ev(%"class.__gnu_cxx::__normal_iterator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store i32* null, i32** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE9_M_attachEPNS_19_Safe_sequence_baseE(%"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_sequence_base"*) #0 comdat align 2 {
  %3 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  %4 = alloca %"class.__gnu_debug::_Safe_sequence_base"*, align 8
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %3, align 8
  store %"class.__gnu_debug::_Safe_sequence_base"* %1, %"class.__gnu_debug::_Safe_sequence_base"** %4, align 8
  %5 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %3, align 8
  %6 = bitcast %"class.__gnu_debug::_Safe_iterator"* %5 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 8
  %8 = bitcast i8* %7 to %"class.__gnu_debug::_Safe_iterator_base"*
  %9 = load %"class.__gnu_debug::_Safe_sequence_base"*, %"class.__gnu_debug::_Safe_sequence_base"** %4, align 8
  %10 = call zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE11_M_constantEv(%"class.__gnu_debug::_Safe_iterator"* %5)
  call void @_ZN11__gnu_debug19_Safe_iterator_base9_M_attachEPNS_19_Safe_sequence_baseEb(%"class.__gnu_debug::_Safe_iterator_base"* %8, %"class.__gnu_debug::_Safe_sequence_base"* %9, i1 zeroext %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE16_M_decrementableEv(%"class.__gnu_debug::_Safe_iterator"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca %"class.__gnu_debug::_Safe_iterator_base"*
  %4 = alloca %"class.__gnu_debug::_Safe_iterator"*
  %5 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %5, align 8
  %6 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %5, align 8
  store %"class.__gnu_debug::_Safe_iterator"* %6, %"class.__gnu_debug::_Safe_iterator"** %4
  %7 = load volatile %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4
  %8 = bitcast %"class.__gnu_debug::_Safe_iterator"* %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  %10 = bitcast i8* %9 to %"class.__gnu_debug::_Safe_iterator_base"*
  store %"class.__gnu_debug::_Safe_iterator_base"* %10, %"class.__gnu_debug::_Safe_iterator_base"** %3
  %11 = alloca i32
  store i32 470339832, i32* %11
  %12 = alloca i1
  br label %13

; <label>:13:                                     ; preds = %1, %121
  %14 = load i32, i32* %11
  switch i32 %14, label %15 [
    i32 470339832, label %16
    i32 1705314889, label %20
    i32 1101927128, label %35
    i32 -1341194700, label %76
    i32 332772479, label %78
    i32 -370077540, label %80
  ]

; <label>:15:                                     ; preds = %13
  br label %121

; <label>:16:                                     ; preds = %13
  %17 = load volatile %"class.__gnu_debug::_Safe_iterator_base"*, %"class.__gnu_debug::_Safe_iterator_base"** %3
  %18 = call zeroext i1 @_ZNK11__gnu_debug19_Safe_iterator_base11_M_singularEv(%"class.__gnu_debug::_Safe_iterator_base"* %17) #14
  %19 = select i1 %18, i32 332772479, i32 1705314889
  store i32 %19, i32* %11
  store i1 false, i1* %12
  br label %121

; <label>:20:                                     ; preds = %13
  %21 = load i32, i32* @x.562
  %22 = load i32, i32* @y.563
  %23 = sub i32 0, 1
  %24 = add i32 %21, %23
  %25 = sub i32 %21, 1
  %26 = mul i32 %21, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %22, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  %34 = select i1 %32, i32 1101927128, i32 -370077540
  store i32 %34, i32* %11
  br label %121

; <label>:35:                                     ; preds = %13
  %36 = load volatile %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4
  %37 = call zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE11_M_is_beginEv(%"class.__gnu_debug::_Safe_iterator"* %36)
  %38 = xor i1 %37, true
  %39 = and i1 false, %38
  %40 = xor i1 false, true
  %41 = and i1 %37, %40
  %42 = xor i1 true, true
  %43 = and i1 %42, false
  %44 = and i1 true, %40
  %45 = or i1 %39, %41
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = xor i1 %37, true
  store i1 %47, i1* %2
  %49 = load i32, i32* @x.562
  %50 = load i32, i32* @y.563
  %51 = sub i32 %49, -1291420436
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -1291420436
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -1341194700, i32 -370077540
  store i32 %75, i32* %11
  br label %121

; <label>:76:                                     ; preds = %13
  store i32 332772479, i32* %11
  %77 = load volatile i1, i1* %2
  store i1 %77, i1* %12
  br label %121

; <label>:78:                                     ; preds = %13
  %79 = load i1, i1* %12
  ret i1 %79

; <label>:80:                                     ; preds = %13
  %81 = load volatile %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4
  %82 = call zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE11_M_is_beginEv(%"class.__gnu_debug::_Safe_iterator"* %81)
  %83 = sub i1 false, true
  %84 = sub i1 %83, %82
  %85 = add i1 %84, true
  %86 = sub i1 false, %82
  %87 = sub i1 false, %85
  %88 = sub i1 false, true
  %89 = add i1 %87, %88
  %90 = sub i1 false, %89
  %91 = add i1 %85, true
  %92 = add i1 false, false
  %93 = sub i1 %92, %82
  %94 = sub i1 %93, false
  %95 = sub i1 false, %82
  %96 = sub i1 %94, true
  %97 = add i1 %96, true
  %98 = add i1 %97, true
  %99 = add i1 %94, true
  %100 = shl i1 %82, true
  %101 = sub i1 false, true
  %102 = sub i1 %101, %82
  %103 = add i1 %102, true
  %104 = sub i1 false, %82
  %105 = add i1 %103, true
  %106 = add i1 %105, true
  %107 = sub i1 %106, true
  %108 = add i1 %103, true
  %109 = shl i1 %82, true
  %110 = xor i1 %82, true
  %111 = and i1 false, %110
  %112 = xor i1 false, true
  %113 = and i1 %82, %112
  %114 = xor i1 true, true
  %115 = and i1 %114, false
  %116 = and i1 true, %112
  %117 = or i1 %111, %113
  %118 = or i1 %115, %116
  %119 = xor i1 %117, %118
  %120 = xor i1 %82, true
  store i32 1101927128, i32* %11
  br label %121

; <label>:121:                                    ; preds = %80, %76, %35, %20, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEmmEv(%"class.__gnu_cxx::__normal_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds i32, i32* %5, i32 -1
  store i32* %6, i32** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEdeEv(%"class.__gnu_debug::_Safe_iterator"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.566
  %3 = load i32, i32* @y.567
  %4 = add i32 %2, 1583939090
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 1583939090
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %289

; <label>:16:                                     ; preds = %1, %289
  %17 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  %18 = alloca %"class.__gnu_debug::_Error_formatter", align 8
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %17, align 8
  %19 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %17, align 8
  %20 = load i32, i32* @x.566
  %21 = load i32, i32* @y.567
  %22 = sub i32 %20, 1405305651
  %23 = sub i32 %22, 1
  %24 = add i32 %23, 1405305651
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  br i1 %32, label %34, label %289

; <label>:34:                                     ; preds = %16
  br label %35

; <label>:35:                                     ; preds = %34
  %36 = invoke zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE18_M_dereferenceableEv(%"class.__gnu_debug::_Safe_iterator"* %19)
          to label %37 unwind label %286

; <label>:37:                                     ; preds = %35
  %38 = load i32, i32* @x.566
  %39 = load i32, i32* @y.567
  %40 = sub i32 %38, 1799516121
  %41 = sub i32 %40, 1
  %42 = add i32 %41, 1799516121
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %293

; <label>:52:                                     ; preds = %37, %293
  %53 = load i32, i32* @x.566
  %54 = load i32, i32* @y.567
  %55 = add i32 %53, 1389930051
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, 1389930051
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  br i1 %65, label %67, label %293

; <label>:67:                                     ; preds = %52
  br i1 %36, label %240, label %68

; <label>:68:                                     ; preds = %67
  %69 = load i32, i32* @x.566
  %70 = load i32, i32* @y.567
  %71 = sub i32 0, 1
  %72 = add i32 %69, %71
  %73 = sub i32 %69, 1
  %74 = mul i32 %69, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %70, 10
  %78 = xor i1 %76, true
  %79 = xor i1 %77, true
  %80 = xor i1 true, true
  %81 = and i1 %78, true
  %82 = and i1 %76, %80
  %83 = and i1 %79, true
  %84 = and i1 %77, %80
  %85 = or i1 %81, %82
  %86 = or i1 %83, %84
  %87 = xor i1 %85, %86
  %88 = or i1 %78, %79
  %89 = xor i1 %88, true
  %90 = or i1 true, %80
  %91 = and i1 %89, %90
  %92 = or i1 %87, %91
  %93 = or i1 %76, %77
  br i1 %92, label %94, label %294

; <label>:94:                                     ; preds = %68, %294
  %95 = load i32, i32* @x.566
  %96 = load i32, i32* @y.567
  %97 = sub i32 0, 1
  %98 = add i32 %95, %97
  %99 = sub i32 %95, 1
  %100 = mul i32 %95, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %96, 10
  %104 = and i1 %102, %103
  %105 = xor i1 %102, %103
  %106 = or i1 %104, %105
  %107 = or i1 %102, %103
  br i1 %106, label %108, label %294

; <label>:108:                                    ; preds = %94
  invoke void @_ZN11__gnu_debug16_Error_formatter5_M_atEPKcm(%"class.__gnu_debug::_Error_formatter"* sret %18, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.7, i32 0, i32 0), i64 303)
          to label %109 unwind label %286

; <label>:109:                                    ; preds = %108
  %110 = load i32, i32* @x.566
  %111 = load i32, i32* @y.567
  %112 = add i32 %110, 1461437421
  %113 = sub i32 %112, 1
  %114 = sub i32 %113, 1461437421
  %115 = sub i32 %110, 1
  %116 = mul i32 %110, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %111, 10
  %120 = xor i1 %118, true
  %121 = xor i1 %119, true
  %122 = xor i1 true, true
  %123 = and i1 %120, true
  %124 = and i1 %118, %122
  %125 = and i1 %121, true
  %126 = and i1 %119, %122
  %127 = or i1 %123, %124
  %128 = or i1 %125, %126
  %129 = xor i1 %127, %128
  %130 = or i1 %120, %121
  %131 = xor i1 %130, true
  %132 = or i1 true, %122
  %133 = and i1 %131, %132
  %134 = or i1 %129, %133
  %135 = or i1 %118, %119
  br i1 %134, label %136, label %295

; <label>:136:                                    ; preds = %109, %295
  %137 = call dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter10_M_messageENS_13_Debug_msg_idE(%"class.__gnu_debug::_Error_formatter"* %18, i32 25) #3
  %138 = load i32, i32* @x.566
  %139 = load i32, i32* @y.567
  %140 = sub i32 %138, -1681938930
  %141 = sub i32 %140, 1
  %142 = add i32 %141, -1681938930
  %143 = sub i32 %138, 1
  %144 = mul i32 %138, %142
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %139, 10
  %148 = and i1 %146, %147
  %149 = xor i1 %146, %147
  %150 = or i1 %148, %149
  %151 = or i1 %146, %147
  br i1 %150, label %152, label %295

; <label>:152:                                    ; preds = %136
  %153 = invoke dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_iteratorINS_14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS8_EEEEEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"* %137, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %19, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0))
          to label %154 unwind label %286

; <label>:154:                                    ; preds = %152
  %155 = load i32, i32* @x.566
  %156 = load i32, i32* @y.567
  %157 = add i32 %155, 1256789947
  %158 = sub i32 %157, 1
  %159 = sub i32 %158, 1256789947
  %160 = sub i32 %155, 1
  %161 = mul i32 %155, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %156, 10
  %165 = xor i1 %163, true
  %166 = xor i1 %164, true
  %167 = xor i1 true, true
  %168 = and i1 %165, true
  %169 = and i1 %163, %167
  %170 = and i1 %166, true
  %171 = and i1 %164, %167
  %172 = or i1 %168, %169
  %173 = or i1 %170, %171
  %174 = xor i1 %172, %173
  %175 = or i1 %165, %166
  %176 = xor i1 %175, true
  %177 = or i1 true, %167
  %178 = and i1 %176, %177
  %179 = or i1 %174, %178
  %180 = or i1 %163, %164
  br i1 %179, label %181, label %297

; <label>:181:                                    ; preds = %154, %297
  %182 = load i32, i32* @x.566
  %183 = load i32, i32* @y.567
  %184 = sub i32 %182, -51796373
  %185 = sub i32 %184, 1
  %186 = add i32 %185, -51796373
  %187 = sub i32 %182, 1
  %188 = mul i32 %182, %186
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %183, 10
  %192 = xor i1 %190, true
  %193 = xor i1 %191, true
  %194 = xor i1 false, true
  %195 = and i1 %192, false
  %196 = and i1 %190, %194
  %197 = and i1 %193, false
  %198 = and i1 %191, %194
  %199 = or i1 %195, %196
  %200 = or i1 %197, %198
  %201 = xor i1 %199, %200
  %202 = or i1 %192, %193
  %203 = xor i1 %202, true
  %204 = or i1 false, %194
  %205 = and i1 %203, %204
  %206 = or i1 %201, %205
  %207 = or i1 %190, %191
  br i1 %206, label %208, label %297

; <label>:208:                                    ; preds = %181
  invoke void @_ZNK11__gnu_debug16_Error_formatter8_M_errorEv(%"class.__gnu_debug::_Error_formatter"* %153) #13
          to label %209 unwind label %286

; <label>:209:                                    ; preds = %208
  %210 = load i32, i32* @x.566
  %211 = load i32, i32* @y.567
  %212 = sub i32 %210, 424750123
  %213 = sub i32 %212, 1
  %214 = add i32 %213, 424750123
  %215 = sub i32 %210, 1
  %216 = mul i32 %210, %214
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %211, 10
  %220 = and i1 %218, %219
  %221 = xor i1 %218, %219
  %222 = or i1 %220, %221
  %223 = or i1 %218, %219
  br i1 %222, label %224, label %298

; <label>:224:                                    ; preds = %209, %298
  %225 = load i32, i32* @x.566
  %226 = load i32, i32* @y.567
  %227 = add i32 %225, -859885636
  %228 = sub i32 %227, 1
  %229 = sub i32 %228, -859885636
  %230 = sub i32 %225, 1
  %231 = mul i32 %225, %229
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %226, 10
  %235 = and i1 %233, %234
  %236 = xor i1 %233, %234
  %237 = or i1 %235, %236
  %238 = or i1 %233, %234
  br i1 %237, label %239, label %298

; <label>:239:                                    ; preds = %224
  unreachable

; <label>:240:                                    ; preds = %67
  br label %241

; <label>:241:                                    ; preds = %240
  br label %242

; <label>:242:                                    ; preds = %241
  %243 = load i32, i32* @x.566
  %244 = load i32, i32* @y.567
  %245 = sub i32 0, 1
  %246 = add i32 %243, %245
  %247 = sub i32 %243, 1
  %248 = mul i32 %243, %246
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %244, 10
  %252 = and i1 %250, %251
  %253 = xor i1 %250, %251
  %254 = or i1 %252, %253
  %255 = or i1 %250, %251
  br i1 %254, label %256, label %299

; <label>:256:                                    ; preds = %242, %299
  %257 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE4baseEv(%"class.__gnu_debug::_Safe_iterator"* %19) #3
  %258 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %257) #3
  %259 = load i32, i32* @x.566
  %260 = load i32, i32* @y.567
  %261 = add i32 %259, -1897883571
  %262 = sub i32 %261, 1
  %263 = sub i32 %262, -1897883571
  %264 = sub i32 %259, 1
  %265 = mul i32 %259, %263
  %266 = urem i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %260, 10
  %269 = xor i1 %267, true
  %270 = xor i1 %268, true
  %271 = xor i1 true, true
  %272 = and i1 %269, true
  %273 = and i1 %267, %271
  %274 = and i1 %270, true
  %275 = and i1 %268, %271
  %276 = or i1 %272, %273
  %277 = or i1 %274, %275
  %278 = xor i1 %276, %277
  %279 = or i1 %269, %270
  %280 = xor i1 %279, true
  %281 = or i1 true, %271
  %282 = and i1 %280, %281
  %283 = or i1 %278, %282
  %284 = or i1 %267, %268
  br i1 %283, label %285, label %299

; <label>:285:                                    ; preds = %256
  ret i32* %258

; <label>:286:                                    ; preds = %208, %152, %108, %35
  %287 = landingpad { i8*, i32 }
          catch i8* null
  %288 = extractvalue { i8*, i32 } %287, 0
  call void @__clang_call_terminate(i8* %288) #11
  unreachable

; <label>:289:                                    ; preds = %16, %1
  %290 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  %291 = alloca %"class.__gnu_debug::_Error_formatter", align 8
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %290, align 8
  %292 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %290, align 8
  br label %16

; <label>:293:                                    ; preds = %52, %37
  br label %52

; <label>:294:                                    ; preds = %94, %68
  br label %94

; <label>:295:                                    ; preds = %136, %109
  %296 = call dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter10_M_messageENS_13_Debug_msg_idE(%"class.__gnu_debug::_Error_formatter"* %18, i32 25) #3
  br label %136

; <label>:297:                                    ; preds = %181, %154
  br label %181

; <label>:298:                                    ; preds = %224, %209
  br label %224

; <label>:299:                                    ; preds = %256, %242
  %300 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE4baseEv(%"class.__gnu_debug::_Safe_iterator"* %19) #3
  %301 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %300) #3
  br label %256
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE18_M_dereferenceableEv(%"class.__gnu_debug::_Safe_iterator"*) #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca %"class.__gnu_debug::_Safe_iterator_base"*
  %4 = alloca %"class.__gnu_debug::_Safe_iterator"*
  %5 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %5, align 8
  %6 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %5, align 8
  store %"class.__gnu_debug::_Safe_iterator"* %6, %"class.__gnu_debug::_Safe_iterator"** %4
  %7 = load volatile %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4
  %8 = bitcast %"class.__gnu_debug::_Safe_iterator"* %7 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  %10 = bitcast i8* %9 to %"class.__gnu_debug::_Safe_iterator_base"*
  store %"class.__gnu_debug::_Safe_iterator_base"* %10, %"class.__gnu_debug::_Safe_iterator_base"** %3
  %11 = alloca i32
  store i32 382567849, i32* %11
  %12 = alloca i1
  br label %13

; <label>:13:                                     ; preds = %1, %114
  %14 = load i32, i32* %11
  switch i32 %14, label %15 [
    i32 382567849, label %16
    i32 1722797830, label %20
    i32 -739816592, label %24
    i32 592135848, label %39
    i32 -1352027684, label %79
    i32 306383657, label %81
    i32 -215222730, label %83
  ]

; <label>:15:                                     ; preds = %13
  br label %114

; <label>:16:                                     ; preds = %13
  %17 = load volatile %"class.__gnu_debug::_Safe_iterator_base"*, %"class.__gnu_debug::_Safe_iterator_base"** %3
  %18 = call zeroext i1 @_ZNK11__gnu_debug19_Safe_iterator_base11_M_singularEv(%"class.__gnu_debug::_Safe_iterator_base"* %17) #14
  %19 = select i1 %18, i32 306383657, i32 1722797830
  store i32 %19, i32* %11
  store i1 false, i1* %12
  br label %114

; <label>:20:                                     ; preds = %13
  %21 = load volatile %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4
  %22 = call zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE9_M_is_endEv(%"class.__gnu_debug::_Safe_iterator"* %21)
  %23 = select i1 %22, i32 306383657, i32 -739816592
  store i32 %23, i32* %11
  store i1 false, i1* %12
  br label %114

; <label>:24:                                     ; preds = %13
  %25 = load i32, i32* @x.568
  %26 = load i32, i32* @y.569
  %27 = sub i32 0, 1
  %28 = add i32 %25, %27
  %29 = sub i32 %25, 1
  %30 = mul i32 %25, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %26, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  %38 = select i1 %36, i32 592135848, i32 -215222730
  store i32 %38, i32* %11
  br label %114

; <label>:39:                                     ; preds = %13
  %40 = load volatile %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4
  %41 = call zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE18_M_is_before_beginEv(%"class.__gnu_debug::_Safe_iterator"* %40)
  %42 = xor i1 %41, true
  %43 = and i1 false, %42
  %44 = xor i1 false, true
  %45 = and i1 %41, %44
  %46 = xor i1 true, true
  %47 = and i1 %46, false
  %48 = and i1 true, %44
  %49 = or i1 %43, %45
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = xor i1 %41, true
  store i1 %51, i1* %2
  %53 = load i32, i32* @x.568
  %54 = load i32, i32* @y.569
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 -1352027684, i32 -215222730
  store i32 %78, i32* %11
  br label %114

; <label>:79:                                     ; preds = %13
  store i32 306383657, i32* %11
  %80 = load volatile i1, i1* %2
  store i1 %80, i1* %12
  br label %114

; <label>:81:                                     ; preds = %13
  %82 = load i1, i1* %12
  ret i1 %82

; <label>:83:                                     ; preds = %13
  %84 = load volatile %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4
  %85 = call zeroext i1 @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE18_M_is_before_beginEv(%"class.__gnu_debug::_Safe_iterator"* %84)
  %86 = sub i1 false, true
  %87 = sub i1 %86, %85
  %88 = add i1 %87, true
  %89 = sub i1 false, %85
  %90 = add i1 %88, true
  %91 = add i1 %90, true
  %92 = sub i1 %91, true
  %93 = add i1 %88, true
  %94 = shl i1 %85, true
  %95 = shl i1 %85, true
  %96 = sub i1 false, %85
  %97 = add i1 false, %96
  %98 = sub i1 false, %85
  %99 = sub i1 %97, true
  %100 = add i1 %99, true
  %101 = add i1 %100, true
  %102 = add i1 %97, true
  %103 = sub i1 false, true
  %104 = add i1 %85, %103
  %105 = sub i1 %85, true
  %106 = mul i1 %104, true
  %107 = shl i1 %85, true
  %108 = xor i1 %85, true
  %109 = and i1 true, %108
  %110 = xor i1 true, true
  %111 = and i1 %85, %110
  %112 = or i1 %109, %111
  %113 = xor i1 %85, true
  store i32 592135848, i32* %11
  br label %114

; <label>:114:                                    ; preds = %83, %79, %39, %24, %20, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEdeEv(%"class.__gnu_cxx::__normal_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIiEvRT_S1_(i32* dereferenceable(4), i32* dereferenceable(4)) #4 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %6 = load i32*, i32** %3, align 8
  %7 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %6) #3
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* %5, align 4
  %9 = load i32*, i32** %4, align 8
  %10 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %9) #3
  %11 = load i32, i32* %10, align 4
  %12 = load i32*, i32** %3, align 8
  store i32 %11, i32* %12, align 4
  %13 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %5) #3
  %14 = load i32, i32* %13, align 4
  %15 = load i32*, i32** %4, align 8
  store i32 %14, i32* %15, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4)) #4 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN11__gnu_debugltIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEEEbRKNS_14_Safe_iteratorIT_T0_EESH_(%"class.__gnu_debug::_Safe_iterator"* dereferenceable(40), %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40)) #4 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  %4 = alloca %"class.__gnu_debug::_Safe_iterator"*, align 8
  %5 = alloca %"class.__gnu_debug::_Error_formatter", align 8
  %6 = alloca %"class.__gnu_debug::_Error_formatter", align 8
  store %"class.__gnu_debug::_Safe_iterator"* %0, %"class.__gnu_debug::_Safe_iterator"** %3, align 8
  store %"class.__gnu_debug::_Safe_iterator"* %1, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  br label %7

; <label>:7:                                      ; preds = %2
  %8 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %3, align 8
  %9 = bitcast %"class.__gnu_debug::_Safe_iterator"* %8 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 8
  %11 = bitcast i8* %10 to %"class.__gnu_debug::_Safe_iterator_base"*
  %12 = call zeroext i1 @_ZNK11__gnu_debug19_Safe_iterator_base11_M_singularEv(%"class.__gnu_debug::_Safe_iterator_base"* %11) #14
  br i1 %12, label %19, label %13

; <label>:13:                                     ; preds = %7
  %14 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  %15 = bitcast %"class.__gnu_debug::_Safe_iterator"* %14 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 8
  %17 = bitcast i8* %16 to %"class.__gnu_debug::_Safe_iterator_base"*
  %18 = call zeroext i1 @_ZNK11__gnu_debug19_Safe_iterator_base11_M_singularEv(%"class.__gnu_debug::_Safe_iterator_base"* %17) #14
  br i1 %18, label %19, label %110

; <label>:19:                                     ; preds = %13, %7
  invoke void @_ZN11__gnu_debug16_Error_formatter5_M_atEPKcm(%"class.__gnu_debug::_Error_formatter"* sret %5, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.7, i32 0, i32 0), i64 618)
          to label %20 unwind label %224

; <label>:20:                                     ; preds = %19
  %21 = call dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter10_M_messageENS_13_Debug_msg_idE(%"class.__gnu_debug::_Error_formatter"* %5, i32 33) #3
  %22 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %3, align 8
  %23 = invoke dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_iteratorINS_14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS8_EEEEEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"* %21, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %22, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0))
          to label %24 unwind label %224

; <label>:24:                                     ; preds = %20
  %25 = load i32, i32* @x.576
  %26 = load i32, i32* @y.577
  %27 = sub i32 0, 1
  %28 = add i32 %25, %27
  %29 = sub i32 %25, 1
  %30 = mul i32 %25, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %26, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 true, true
  %37 = and i1 %34, true
  %38 = and i1 %32, %36
  %39 = and i1 %35, true
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 true, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  br i1 %48, label %50, label %227

; <label>:50:                                     ; preds = %24, %227
  %51 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  %52 = load i32, i32* @x.576
  %53 = load i32, i32* @y.577
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  br i1 %63, label %65, label %227

; <label>:65:                                     ; preds = %50
  %66 = invoke dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_iteratorINS_14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS8_EEEEEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"* %23, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %51, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i32 0, i32 0))
          to label %67 unwind label %224

; <label>:67:                                     ; preds = %65
  invoke void @_ZNK11__gnu_debug16_Error_formatter8_M_errorEv(%"class.__gnu_debug::_Error_formatter"* %66) #13
          to label %68 unwind label %224

; <label>:68:                                     ; preds = %67
  %69 = load i32, i32* @x.576
  %70 = load i32, i32* @y.577
  %71 = sub i32 0, 1
  %72 = add i32 %69, %71
  %73 = sub i32 %69, 1
  %74 = mul i32 %69, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %70, 10
  %78 = xor i1 %76, true
  %79 = xor i1 %77, true
  %80 = xor i1 true, true
  %81 = and i1 %78, true
  %82 = and i1 %76, %80
  %83 = and i1 %79, true
  %84 = and i1 %77, %80
  %85 = or i1 %81, %82
  %86 = or i1 %83, %84
  %87 = xor i1 %85, %86
  %88 = or i1 %78, %79
  %89 = xor i1 %88, true
  %90 = or i1 true, %80
  %91 = and i1 %89, %90
  %92 = or i1 %87, %91
  %93 = or i1 %76, %77
  br i1 %92, label %94, label %229

; <label>:94:                                     ; preds = %68, %229
  %95 = load i32, i32* @x.576
  %96 = load i32, i32* @y.577
  %97 = sub i32 %95, 1667469961
  %98 = sub i32 %97, 1
  %99 = add i32 %98, 1667469961
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = and i1 %103, %104
  %106 = xor i1 %103, %104
  %107 = or i1 %105, %106
  %108 = or i1 %103, %104
  br i1 %107, label %109, label %229

; <label>:109:                                    ; preds = %94
  unreachable

; <label>:110:                                    ; preds = %13
  br label %111

; <label>:111:                                    ; preds = %110
  %112 = load i32, i32* @x.576
  %113 = load i32, i32* @y.577
  %114 = sub i32 %112, 148025135
  %115 = sub i32 %114, 1
  %116 = add i32 %115, 148025135
  %117 = sub i32 %112, 1
  %118 = mul i32 %112, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %113, 10
  %122 = xor i1 %120, true
  %123 = xor i1 %121, true
  %124 = xor i1 true, true
  %125 = and i1 %122, true
  %126 = and i1 %120, %124
  %127 = and i1 %123, true
  %128 = and i1 %121, %124
  %129 = or i1 %125, %126
  %130 = or i1 %127, %128
  %131 = xor i1 %129, %130
  %132 = or i1 %122, %123
  %133 = xor i1 %132, true
  %134 = or i1 true, %124
  %135 = and i1 %133, %134
  %136 = or i1 %131, %135
  %137 = or i1 %120, %121
  br i1 %136, label %138, label %230

; <label>:138:                                    ; preds = %111, %230
  %139 = load i32, i32* @x.576
  %140 = load i32, i32* @y.577
  %141 = sub i32 %139, -196423914
  %142 = sub i32 %141, 1
  %143 = add i32 %142, -196423914
  %144 = sub i32 %139, 1
  %145 = mul i32 %139, %143
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %140, 10
  %149 = and i1 %147, %148
  %150 = xor i1 %147, %148
  %151 = or i1 %149, %150
  %152 = or i1 %147, %148
  br i1 %151, label %153, label %230

; <label>:153:                                    ; preds = %138
  br label %154

; <label>:154:                                    ; preds = %153
  br label %155

; <label>:155:                                    ; preds = %154
  %156 = load i32, i32* @x.576
  %157 = load i32, i32* @y.577
  %158 = sub i32 0, 1
  %159 = add i32 %156, %158
  %160 = sub i32 %156, 1
  %161 = mul i32 %156, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %157, 10
  %165 = xor i1 %163, true
  %166 = xor i1 %164, true
  %167 = xor i1 false, true
  %168 = and i1 %165, false
  %169 = and i1 %163, %167
  %170 = and i1 %166, false
  %171 = and i1 %164, %167
  %172 = or i1 %168, %169
  %173 = or i1 %170, %171
  %174 = xor i1 %172, %173
  %175 = or i1 %165, %166
  %176 = xor i1 %175, true
  %177 = or i1 false, %167
  %178 = and i1 %176, %177
  %179 = or i1 %174, %178
  %180 = or i1 %163, %164
  br i1 %179, label %181, label %231

; <label>:181:                                    ; preds = %155, %231
  %182 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %3, align 8
  %183 = bitcast %"class.__gnu_debug::_Safe_iterator"* %182 to i8*
  %184 = getelementptr inbounds i8, i8* %183, i64 8
  %185 = bitcast i8* %184 to %"class.__gnu_debug::_Safe_iterator_base"*
  %186 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  %187 = bitcast %"class.__gnu_debug::_Safe_iterator"* %186 to i8*
  %188 = getelementptr inbounds i8, i8* %187, i64 8
  %189 = bitcast i8* %188 to %"class.__gnu_debug::_Safe_iterator_base"*
  %190 = call zeroext i1 @_ZNK11__gnu_debug19_Safe_iterator_base14_M_can_compareERKS0_(%"class.__gnu_debug::_Safe_iterator_base"* %185, %"class.__gnu_debug::_Safe_iterator_base"* dereferenceable(32) %189) #14
  %191 = load i32, i32* @x.576
  %192 = load i32, i32* @y.577
  %193 = sub i32 %191, 1386396607
  %194 = sub i32 %193, 1
  %195 = add i32 %194, 1386396607
  %196 = sub i32 %191, 1
  %197 = mul i32 %191, %195
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %192, 10
  %201 = and i1 %199, %200
  %202 = xor i1 %199, %200
  %203 = or i1 %201, %202
  %204 = or i1 %199, %200
  br i1 %203, label %205, label %231

; <label>:205:                                    ; preds = %181
  br i1 %190, label %216, label %206

; <label>:206:                                    ; preds = %205
  invoke void @_ZN11__gnu_debug16_Error_formatter5_M_atEPKcm(%"class.__gnu_debug::_Error_formatter"* sret %6, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.7, i32 0, i32 0), i64 622)
          to label %207 unwind label %224

; <label>:207:                                    ; preds = %206
  %208 = call dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter10_M_messageENS_13_Debug_msg_idE(%"class.__gnu_debug::_Error_formatter"* %6, i32 34) #3
  %209 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %3, align 8
  %210 = invoke dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_iteratorINS_14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS8_EEEEEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"* %208, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %209, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0))
          to label %211 unwind label %224

; <label>:211:                                    ; preds = %207
  %212 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  %213 = invoke dereferenceable(560) %"class.__gnu_debug::_Error_formatter"* @_ZNK11__gnu_debug16_Error_formatter11_M_iteratorINS_14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS8_EEEEEERKS0_RKT_PKc(%"class.__gnu_debug::_Error_formatter"* %210, %"class.__gnu_debug::_Safe_iterator"* dereferenceable(40) %212, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i32 0, i32 0))
          to label %214 unwind label %224

; <label>:214:                                    ; preds = %211
  invoke void @_ZNK11__gnu_debug16_Error_formatter8_M_errorEv(%"class.__gnu_debug::_Error_formatter"* %213) #13
          to label %215 unwind label %224

; <label>:215:                                    ; preds = %214
  unreachable

; <label>:216:                                    ; preds = %205
  br label %217

; <label>:217:                                    ; preds = %216
  br label %218

; <label>:218:                                    ; preds = %217
  %219 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %3, align 8
  %220 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE4baseEv(%"class.__gnu_debug::_Safe_iterator"* %219) #3
  %221 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  %222 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZNK11__gnu_debug14_Safe_iteratorIN9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEEENSt7__debug6vectorIiS6_EEE4baseEv(%"class.__gnu_debug::_Safe_iterator"* %221) #3
  %223 = call zeroext i1 @_ZN9__gnu_cxxltIPiNSt9__cxx19986vectorIiSaIiEEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %220, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %222) #3
  ret i1 %223

; <label>:224:                                    ; preds = %214, %211, %207, %206, %67, %65, %20, %19
  %225 = landingpad { i8*, i32 }
          catch i8* null
  %226 = extractvalue { i8*, i32 } %225, 0
  call void @__clang_call_terminate(i8* %226) #11
  unreachable

; <label>:227:                                    ; preds = %50, %24
  %228 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  br label %50

; <label>:229:                                    ; preds = %94, %68
  br label %94

; <label>:230:                                    ; preds = %138, %111
  br label %138

; <label>:231:                                    ; preds = %181, %155
  %232 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %3, align 8
  %233 = bitcast %"class.__gnu_debug::_Safe_iterator"* %232 to i8*
  %234 = getelementptr inbounds i8, i8* %233, i64 8
  %235 = bitcast i8* %234 to %"class.__gnu_debug::_Safe_iterator_base"*
  %236 = load %"class.__gnu_debug::_Safe_iterator"*, %"class.__gnu_debug::_Safe_iterator"** %4, align 8
  %237 = bitcast %"class.__gnu_debug::_Safe_iterator"* %236 to i8*
  %238 = getelementptr inbounds i8, i8* %237, i64 8
  %239 = bitcast i8* %238 to %"class.__gnu_debug::_Safe_iterator_base"*
  %240 = call zeroext i1 @_ZNK11__gnu_debug19_Safe_iterator_base14_M_can_compareERKS0_(%"class.__gnu_debug::_Safe_iterator_base"* %235, %"class.__gnu_debug::_Safe_iterator_base"* dereferenceable(32) %239) #14
  br label %181
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxltIPiNSt9__cxx19986vectorIiSaIiEEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #4 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %7 = load i32*, i32** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiNSt9__cxx19986vectorIiSaIiEEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %8) #3
  %10 = load i32*, i32** %9, align 8
  %11 = icmp ult i32* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN11__gnu_debug19_Safe_iterator_baseC2Ev(%"class.__gnu_debug::_Safe_iterator_base"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_debug::_Safe_iterator_base"*, align 8
  store %"class.__gnu_debug::_Safe_iterator_base"* %0, %"class.__gnu_debug::_Safe_iterator_base"** %2, align 8
  %3 = load %"class.__gnu_debug::_Safe_iterator_base"*, %"class.__gnu_debug::_Safe_iterator_base"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_debug::_Safe_iterator_base", %"class.__gnu_debug::_Safe_iterator_base"* %3, i32 0, i32 0
  store %"class.__gnu_debug::_Safe_sequence_base"* null, %"class.__gnu_debug::_Safe_sequence_base"** %4, align 8
  %5 = getelementptr inbounds %"class.__gnu_debug::_Safe_iterator_base", %"class.__gnu_debug::_Safe_iterator_base"* %3, i32 0, i32 1
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.__gnu_debug::_Safe_iterator_base", %"class.__gnu_debug::_Safe_iterator_base"* %3, i32 0, i32 2
  store %"class.__gnu_debug::_Safe_iterator_base"* null, %"class.__gnu_debug::_Safe_iterator_base"** %6, align 8
  %7 = getelementptr inbounds %"class.__gnu_debug::_Safe_iterator_base", %"class.__gnu_debug::_Safe_iterator_base"* %3, i32 0, i32 3
  store %"class.__gnu_debug::_Safe_iterator_base"* null, %"class.__gnu_debug::_Safe_iterator_base"** %7, align 8
  ret void
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s397091922.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline noreturn nounwind }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn }
attributes #14 = { nounwind readonly }
attributes #15 = { builtin nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
