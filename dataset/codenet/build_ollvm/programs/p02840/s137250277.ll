; ModuleID = 'Project_CodeNet_C++1400/p02840/s137250277.cpp'
source_filename = "Project_CodeNet_C++1400/p02840/s137250277.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"struct.std::piecewise_construct_t" = type { i8 }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl" }
%"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl" = type { %struct.dat*, %struct.dat*, %struct.dat* }
%struct.dat = type { i64, i64, i64 }
%"class.std::allocator" = type { i8 }
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl" = type { %"class.std::map"*, %"class.std::map"*, %"class.std::map"* }
%"class.std::map" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl" = type { %"struct.std::less", %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::less" = type { i8 }
%"struct.std::_Rb_tree_node_base" = type { i32, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%"class.std::allocator.2" = type { i8 }
%"struct.std::_Rb_tree_const_iterator" = type { %"struct.std::_Rb_tree_node_base"* }
%"struct.std::pair" = type { i64, i64 }
%"class.std::vector.14" = type { %"struct.std::_Vector_base.15" }
%"struct.std::_Vector_base.15" = type { %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl" = type { %"struct.std::pair"*, %"struct.std::pair"*, %"struct.std::pair"* }
%"class.__gnu_cxx::__normal_iterator" = type { %"struct.std::pair"* }
%"struct.std::pair.19" = type <{ %"struct.std::_Rb_tree_const_iterator", i8, [7 x i8] }>
%"class.std::set" = type { %"class.std::_Rb_tree.8" }
%"class.std::_Rb_tree.8" = type { %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl" = type { %"struct.std::less.12", %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::less.12" = type { i8 }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"class.__gnu_cxx::new_allocator.3" = type { i8 }
%"struct.__gnu_cxx::__ops::_Iter_less_val" = type { i8 }
%"class.std::tuple.24" = type { i8 }
%"class.std::tuple" = type { %"struct.std::_Tuple_impl" }
%"struct.std::_Tuple_impl" = type { %"struct.std::_Head_base" }
%"struct.std::_Head_base" = type { i64* }
%"struct.std::_Rb_tree_const_iterator.23" = type { %"struct.std::_Rb_tree_node_base"* }
%"struct.std::_Rb_tree_iterator" = type { %"struct.std::_Rb_tree_node_base"* }
%"struct.std::pair.20" = type { i64, %"class.std::set" }
%"struct.std::_Rb_tree_node.21" = type { %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf.22" }
%"struct.__gnu_cxx::__aligned_membuf.22" = type { [16 x i8] }
%"class.std::allocator.16" = type { i8 }
%"struct.std::pair.30" = type <{ %"struct.std::_Rb_tree_iterator.28", i8, [7 x i8] }>
%"struct.std::_Rb_tree_iterator.28" = type { %"struct.std::_Rb_tree_node_base"* }
%"class.std::allocator.5" = type { i8 }
%"class.__gnu_cxx::new_allocator.6" = type { i8 }
%"struct.std::_Rb_tree_node" = type { %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf" }
%"struct.__gnu_cxx::__aligned_membuf" = type { [56 x i8] }
%"class.std::allocator.9" = type { i8 }
%"class.__gnu_cxx::new_allocator.10" = type { i8 }
%"struct.std::pair.25" = type { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%"struct.std::_Select1st" = type { i8 }
%"struct.std::_Index_tuple" = type { i8 }
%"struct.std::_Index_tuple.26" = type { i8 }
%"struct.std::input_iterator_tag" = type { i8 }
%"struct.std::bidirectional_iterator_tag" = type { i8 }
%"class.__gnu_cxx::new_allocator.17" = type { i8 }
%"class.std::move_iterator" = type { %"struct.std::pair"* }
%"struct.std::pair.27" = type { %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28" }
%"struct.std::_Identity" = type { i8 }

$_ZSt4acosIiEN9__gnu_cxx11__enable_ifIXsr12__is_integerIT_EE7__valueEdE6__typeES2_ = comdat any

$_ZNSaI3datEC2Ev = comdat any

$_ZNSt6vectorI3datSaIS0_EEC2EmRKS1_ = comdat any

$_ZNSaI3datED2Ev = comdat any

$_ZNSt6vectorI3datSaIS0_EEixEm = comdat any

$_ZNSaISt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEEEC2Ev = comdat any

$_ZNSt6vectorISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EEC2EmRKSD_ = comdat any

$_ZNSaISt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEEED2Ev = comdat any

$_ZSt3absx = comdat any

$_ZSt11lower_boundISt23_Rb_tree_const_iteratorISt4pairIxxEES2_ET_S4_S4_RKT0_ = comdat any

$_ZNSt6vectorISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EEixEm = comdat any

$_ZNSt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEEixERS8_ = comdat any

$_ZNKSt3setISt4pairIxxESt4lessIS1_ESaIS1_EE5beginEv = comdat any

$_ZNKSt3setISt4pairIxxESt4lessIS1_ESaIS1_EE3endEv = comdat any

$_ZNSt4pairIxxEC2IRxivEEOT_OT0_ = comdat any

$_ZNSt6vectorISt4pairIxxESaIS1_EEC2Ev = comdat any

$_ZNKSt23_Rb_tree_const_iteratorISt4pairIxxEEneERKS2_ = comdat any

$_ZNKSt23_Rb_tree_const_iteratorISt4pairIxxEEdeEv = comdat any

$_ZSt3minIxERKT_S2_S2_ = comdat any

$_ZSt3maxIxERKT_S2_S2_ = comdat any

$_ZNSt6vectorISt4pairIxxESaIS1_EE12emplace_backIJRKS1_EEEvDpOT_ = comdat any

$_ZNSt23_Rb_tree_const_iteratorISt4pairIxxEEppEi = comdat any

$_ZNSt6vectorISt4pairIxxESaIS1_EE5beginEv = comdat any

$_ZNSt6vectorISt4pairIxxESaIS1_EE3endEv = comdat any

$_ZN9__gnu_cxxneIPSt4pairIxxESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZNSt3setISt4pairIxxESt4lessIS1_ESaIS1_EE5eraseERKS1_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEppEv = comdat any

$_ZNSt3setISt4pairIxxESt4lessIS1_ESaIS1_EE7emplaceIJRxS7_EEES0_ISt23_Rb_tree_const_iteratorIS1_EbEDpOT_ = comdat any

$_ZNSt6vectorISt4pairIxxESaIS1_EED2Ev = comdat any

$_ZNSt6vectorISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EED2Ev = comdat any

$_ZNSt6vectorI3datSaIS0_EED2Ev = comdat any

$_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZN9__gnu_cxx13new_allocatorI3datEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorI3datED2Ev = comdat any

$_ZNSt12_Vector_baseI3datSaIS0_EEC2EmRKS1_ = comdat any

$_ZNSt6vectorI3datSaIS0_EE21_M_default_initializeEm = comdat any

$_ZNSt12_Vector_baseI3datSaIS0_EED2Ev = comdat any

$_ZNSt12_Vector_baseI3datSaIS0_EE12_Vector_implC2ERKS1_ = comdat any

$_ZNSt12_Vector_baseI3datSaIS0_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseI3datSaIS0_EE12_Vector_implD2Ev = comdat any

$_ZNSaI3datEC2ERKS0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorI3datEC2ERKS2_ = comdat any

$_ZNSt12_Vector_baseI3datSaIS0_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaI3datEE8allocateERS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI3datE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorI3datE8max_sizeEv = comdat any

$_ZSt27__uninitialized_default_n_aIP3datmS0_ET_S2_T0_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseI3datSaIS0_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt25__uninitialized_default_nIP3datmET_S2_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP3datmEET_S4_T0_ = comdat any

$_ZSt6fill_nIP3datmS0_ET_S2_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIP3datmS0_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES5_T0_RKS4_ = comdat any

$_ZSt12__niter_baseIP3datENSt11_Niter_baseIT_E13iterator_typeES3_ = comdat any

$_ZNSt10_Iter_baseIP3datLb0EE7_S_baseES1_ = comdat any

$_ZNSt12_Vector_baseI3datSaIS0_EE13_M_deallocateEPS0_m = comdat any

$__clang_call_terminate = comdat any

$_ZNSt16allocator_traitsISaI3datEE10deallocateERS1_PS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI3datE10deallocateEPS1_m = comdat any

$_ZSt8_DestroyIP3datS0_EvT_S2_RSaIT0_E = comdat any

$_ZSt8_DestroyIP3datEvT_S2_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIP3datEEvT_S4_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt3mapIxSt3setISt4pairIxxESt4lessIS4_ESaIS4_EES5_IxESaIS3_IKxS8_EEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt3mapIxSt3setISt4pairIxxESt4lessIS4_ESaIS4_EES5_IxESaIS3_IKxS8_EEEED2Ev = comdat any

$_ZNSt12_Vector_baseISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EEC2EmRKSD_ = comdat any

$_ZNSt6vectorISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EE21_M_default_initializeEm = comdat any

$_ZNSt12_Vector_baseISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EE12_Vector_implC2ERKSD_ = comdat any

$_ZNSt12_Vector_baseISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EE12_Vector_implD2Ev = comdat any

$_ZNSaISt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEEEC2ERKSC_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt3mapIxSt3setISt4pairIxxESt4lessIS4_ESaIS4_EES5_IxESaIS3_IKxS8_EEEEC2ERKSE_ = comdat any

$_ZNSt12_Vector_baseISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEEEE8allocateERSD_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt3mapIxSt3setISt4pairIxxESt4lessIS4_ESaIS4_EES5_IxESaIS3_IKxS8_EEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt3mapIxSt3setISt4pairIxxESt4lessIS4_ESaIS4_EES5_IxESaIS3_IKxS8_EEEE8max_sizeEv = comdat any

$_ZSt27__uninitialized_default_n_aIPSt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEEmSC_ET_SE_T0_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt25__uninitialized_default_nIPSt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEEmET_SE_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt3mapIxSt3setISt4pairIxxESt4lessIS5_ESaIS5_EES6_IxESaIS4_IKxS9_EEEmEET_SG_T0_ = comdat any

$_ZSt10_ConstructISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEEJEEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEEEPT_RSD_ = comdat any

$_ZSt8_DestroyIPSt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEEEvT_SE_ = comdat any

$_ZNSt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEEC2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EEC2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE13_Rb_tree_implISB_Lb1EEC2Ev = comdat any

$_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEEC2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE13_Rb_tree_implISB_Lb1EE13_M_initializeEv = comdat any

$_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIS2_IxxESt4lessIS5_ESaIS5_EEEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIS2_IxxESt4lessIS5_ESaIS5_EEEEED2Ev = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt3mapIxSt3setISt4pairIxxESt4lessIS5_ESaIS5_EES6_IxESaIS4_IKxS9_EEEEEvT_SG_ = comdat any

$_ZSt8_DestroyISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEEEvPT_ = comdat any

$_ZNSt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEED2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EED2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE8_M_beginEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE13_Rb_tree_implISB_Lb1EED2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3setIS1_IxxESt4lessIS4_ESaIS4_EEEEEE7destroyIS9_EEvRSB_PT_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE21_M_get_Node_allocatorEv = comdat any

$_ZNSt13_Rb_tree_nodeISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEE9_M_valptrEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIS2_IxxESt4lessIS5_ESaIS5_EEEEE7destroyISA_EEvPT_ = comdat any

$_ZNSt4pairIKxSt3setIS_IxxESt4lessIS2_ESaIS2_EEED2Ev = comdat any

$_ZNSt3setISt4pairIxxESt4lessIS1_ESaIS1_EED2Ev = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EED2Ev = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_eraseEPSt13_Rb_tree_nodeIS1_E = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_beginEv = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EED2Ev = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_S_rightEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE7_S_leftEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS1_E = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS1_E = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS1_E = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIxxEEEE7destroyIS2_EEvRS4_PT_ = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE21_M_get_Node_allocatorEv = comdat any

$_ZNSt13_Rb_tree_nodeISt4pairIxxEE9_M_valptrEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIxxEEE7destroyIS3_EEvPT_ = comdat any

$_ZN9__gnu_cxx16__aligned_membufISt4pairIxxEE6_M_ptrEv = comdat any

$_ZN9__gnu_cxx16__aligned_membufISt4pairIxxEE7_M_addrEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIxxEEEE10deallocateERS4_PS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIxxEEE10deallocateEPS4_m = comdat any

$_ZNSaISt13_Rb_tree_nodeISt4pairIxxEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIxxEEED2Ev = comdat any

$_ZN9__gnu_cxx16__aligned_membufISt4pairIKxSt3setIS1_IxxESt4lessIS4_ESaIS4_EEEE6_M_ptrEv = comdat any

$_ZN9__gnu_cxx16__aligned_membufISt4pairIKxSt3setIS1_IxxESt4lessIS4_ESaIS4_EEEE7_M_addrEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3setIS1_IxxESt4lessIS4_ESaIS4_EEEEEE10deallocateERSB_PSA_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIS2_IxxESt4lessIS5_ESaIS5_EEEEE10deallocateEPSB_m = comdat any

$_ZNSt12_Vector_baseISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EE13_M_deallocateEPSC_m = comdat any

$_ZNSt16allocator_traitsISaISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEEEE10deallocateERSD_PSC_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt3mapIxSt3setISt4pairIxxESt4lessIS4_ESaIS4_EES5_IxESaIS3_IKxS8_EEEE10deallocateEPSD_m = comdat any

$_ZSt8_DestroyIPSt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESC_EvT_SE_RSaIT0_E = comdat any

$_ZNSt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEE11lower_boundERS8_ = comdat any

$_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEeqERKS9_ = comdat any

$_ZNSt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEE3endEv = comdat any

$_ZNKSt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEE8key_compEv = comdat any

$_ZNKSt4lessIxEclERKxS2_ = comdat any

$_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEdeEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESI_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_ = comdat any

$_ZNSt23_Rb_tree_const_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEC2ERKSt17_Rb_tree_iteratorIS8_E = comdat any

$_ZNSt5tupleIJRKxEEC2ES1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE11lower_boundERS1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_ESG_RS1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE6_M_endEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E = comdat any

$_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEC2EPSt18_Rb_tree_node_base = comdat any

$_ZNKSt10_Select1stISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEclERKS8_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE8_S_valueEPKSt13_Rb_tree_nodeIS8_E = comdat any

$_ZNKSt13_Rb_tree_nodeISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEE9_M_valptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxSt3setIS1_IxxESt4lessIS4_ESaIS4_EEEE6_M_ptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxSt3setIS1_IxxESt4lessIS4_ESaIS4_EEEE7_M_addrEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE3endEv = comdat any

$_ZNKSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE8key_compEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESI_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_ = comdat any

$_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSF_PSt13_Rb_tree_nodeIS8_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE11_M_get_nodeEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESI_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_ = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3setIS1_IxxESt4lessIS4_ESaIS4_EEEEEE8allocateERSB_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIS2_IxxESt4lessIS5_ESaIS5_EEEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIS2_IxxESt4lessIS5_ESaIS5_EEEEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3setIS1_IxxESt4lessIS4_ESaIS4_EEEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESH_IJEEEEEvRSB_PT_DpOT0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIS2_IxxESt4lessIS5_ESaIS5_EEEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESH_IJEEEEEvPT_DpOT0_ = comdat any

$_ZNSt5tupleIJRKxEEC2EOS2_ = comdat any

$_ZNSt4pairIKxSt3setIS_IxxESt4lessIS2_ESaIS2_EEEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE = comdat any

$_ZNSt11_Tuple_implILm0EJRKxEEC2EOS2_ = comdat any

$_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt11_Tuple_implILm0EJRKxEE7_M_headERS2_ = comdat any

$_ZNSt10_Head_baseILm0ERKxLb0EEC2ES1_ = comdat any

$_ZNSt10_Head_baseILm0ERKxLb0EE7_M_headERS2_ = comdat any

$_ZNSt4pairIKxSt3setIS_IxxESt4lessIS2_ESaIS2_EEEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE = comdat any

$_ZSt3getILm0EJRKxEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_ = comdat any

$_ZNSt3setISt4pairIxxESt4lessIS1_ESaIS1_EEC2Ev = comdat any

$_ZSt12__get_helperILm0ERKxJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EEC2Ev = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EEC2Ev = comdat any

$_ZNSaISt13_Rb_tree_nodeISt4pairIxxEEEC2Ev = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EE13_M_initializeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIxxEEEC2Ev = comdat any

$_ZNKSt23_Rb_tree_const_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEE13_M_const_castEv = comdat any

$_ZNKSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE4sizeEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE12_M_rightmostEv = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE24_M_get_insert_unique_posERS1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE11_M_leftmostEv = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_ = comdat any

$_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEmmEv = comdat any

$_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEppEv = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE8_S_valueEPKSt18_Rb_tree_node_base = comdat any

$_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE5beginEv = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxSt3setIS_IxxESt4lessIS7_ESaIS7_EEEESF_vEEOT_OT0_ = comdat any

$_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxSt3setIS1_IxxESt4lessIS4_ESaIS4_EEEEEOT_RNSt16remove_referenceISD_E4typeE = comdat any

$_ZNSt11_Tuple_implILm0EJRKxEEC2ES1_ = comdat any

$_ZNKSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5beginEv = comdat any

$_ZNSt23_Rb_tree_const_iteratorISt4pairIxxEEC2EPKSt18_Rb_tree_node_base = comdat any

$_ZNKSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE3endEv = comdat any

$_ZSt13__lower_boundISt23_Rb_tree_const_iteratorISt4pairIxxEES2_N9__gnu_cxx5__ops14_Iter_less_valEET_S7_S7_RKT0_T1_ = comdat any

$_ZN9__gnu_cxx5__ops15__iter_less_valEv = comdat any

$_ZSt8distanceISt23_Rb_tree_const_iteratorISt4pairIxxEEENSt15iterator_traitsIT_E15difference_typeES5_S5_ = comdat any

$_ZSt7advanceISt23_Rb_tree_const_iteratorISt4pairIxxEElEvRT_T0_ = comdat any

$_ZNK9__gnu_cxx5__ops14_Iter_less_valclISt23_Rb_tree_const_iteratorISt4pairIxxEEKS5_EEbT_RT0_ = comdat any

$_ZNSt23_Rb_tree_const_iteratorISt4pairIxxEEppEv = comdat any

$_ZSt10__distanceISt23_Rb_tree_const_iteratorISt4pairIxxEEENSt15iterator_traitsIT_E15difference_typeES5_S5_St18input_iterator_tag = comdat any

$_ZSt19__iterator_categoryISt23_Rb_tree_const_iteratorISt4pairIxxEEENSt15iterator_traitsIT_E17iterator_categoryERKS5_ = comdat any

$_ZSt9__advanceISt23_Rb_tree_const_iteratorISt4pairIxxEElEvRT_T0_St26bidirectional_iterator_tag = comdat any

$_ZNSt23_Rb_tree_const_iteratorISt4pairIxxEEmmEv = comdat any

$_ZStltIxxEbRKSt4pairIT_T0_ES5_ = comdat any

$_ZNSt12_Vector_baseISt4pairIxxESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt4pairIxxEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIxxEEC2Ev = comdat any

$_ZSt8_DestroyIPSt4pairIxxES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt4pairIxxESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPSt4pairIxxEEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPSt4pairIxxEEEvT_S5_ = comdat any

$_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaISt4pairIxxEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE10deallocateEPS2_m = comdat any

$_ZNSaISt4pairIxxEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIxxEED2Ev = comdat any

$_ZNKSt13_Rb_tree_nodeISt4pairIxxEE9_M_valptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufISt4pairIxxEE6_M_ptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufISt4pairIxxEE7_M_addrEv = comdat any

$_ZNSt16allocator_traitsISaISt4pairIxxEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_ = comdat any

$_ZSt7forwardIRKSt4pairIxxEEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZNSt6vectorISt4pairIxxESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE9constructIS2_JRKS2_EEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorISt4pairIxxESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE11_M_allocateEm = comdat any

$_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPSt4pairIxxES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZNSt16allocator_traitsISaISt4pairIxxEEE7destroyIS1_EEvRS2_PT_ = comdat any

$_ZNKSt6vectorISt4pairIxxESaIS1_EE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt16allocator_traitsISaISt4pairIxxEEE8max_sizeERKS2_ = comdat any

$_ZNKSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt4pairIxxEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt4pairIxxEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt4pairIxxEES3_S2_ET0_T_S6_S5_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPSt4pairIxxESt13move_iteratorIS2_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPSt4pairIxxEES3_ET0_T_S6_S5_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt4pairIxxEES5_EET0_T_S8_S7_ = comdat any

$_ZStneIPSt4pairIxxEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZSt10_ConstructISt4pairIxxEJS1_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt4pairIxxEEPT_RS2_ = comdat any

$_ZNKSt13move_iteratorIPSt4pairIxxEEdeEv = comdat any

$_ZNSt13move_iteratorIPSt4pairIxxEEppEv = comdat any

$_ZSteqIPSt4pairIxxEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZNKSt13move_iteratorIPSt4pairIxxEE4baseEv = comdat any

$_ZSt7forwardISt4pairIxxEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt13move_iteratorIPSt4pairIxxEEC2ES2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE7destroyIS2_EEvPT_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5eraseERKS1_ = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11equal_rangeERKS1_ = comdat any

$_ZNKSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE4sizeEv = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5eraseB5cxx11ESt23_Rb_tree_const_iteratorIS1_ES9_ = comdat any

$_ZNSt23_Rb_tree_const_iteratorISt4pairIxxEEC2ERKSt17_Rb_tree_iteratorIS1_E = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_M_endEv = comdat any

$_ZNKSt4lessISt4pairIxxEEclERKS1_S4_ = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_S_keyEPKSt13_Rb_tree_nodeIS1_E = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS1_ESA_RKS1_ = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS1_ESA_RKS1_ = comdat any

$_ZNSt4pairISt17_Rb_tree_iteratorIS_IxxEES2_EC2IS2_S2_vEEOT_OT0_ = comdat any

$_ZNSt17_Rb_tree_iteratorISt4pairIxxEEC2EPSt18_Rb_tree_node_base = comdat any

$_ZNKSt9_IdentityISt4pairIxxEEclERKS1_ = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_S_valueEPKSt13_Rb_tree_nodeIS1_E = comdat any

$_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIxxEEEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS1_ES9_ = comdat any

$_ZNKSt23_Rb_tree_const_iteratorISt4pairIxxEE13_M_const_castEv = comdat any

$_ZNKSt23_Rb_tree_const_iteratorISt4pairIxxEEeqERKS2_ = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5beginEv = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE3endEv = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5clearEv = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5eraseB5cxx11ESt23_Rb_tree_const_iteratorIS1_E = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EE8_M_resetEv = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS1_E = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE17_M_emplace_uniqueIJRxS9_EEES0_ISt17_Rb_tree_iteratorIS1_EbEDpOT_ = comdat any

$_ZNSt4pairISt23_Rb_tree_const_iteratorIS_IxxEEbEC2ISt17_Rb_tree_iteratorIS1_EbvEEOS_IT_T0_E = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE14_M_create_nodeIJRxS9_EEEPSt13_Rb_tree_nodeIS1_EDpOT_ = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE24_M_get_insert_unique_posERKS1_ = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseS9_PSt13_Rb_tree_nodeIS1_E = comdat any

$_ZNSt4pairISt17_Rb_tree_iteratorIS_IxxEEbEC2IS2_bvEEOT_OT0_ = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_M_get_nodeEv = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE17_M_construct_nodeIJRxS9_EEEvPSt13_Rb_tree_nodeIS1_EDpOT_ = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIxxEEEE8allocateERS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIxxEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIxxEEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIxxEEEE9constructIS2_JRxS7_EEEvRS4_PT_DpOT0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIxxEEE9constructIS3_JRxS7_EEEvPT_DpOT0_ = comdat any

$_ZNSt4pairIxxEC2IRxS2_vEEOT_OT0_ = comdat any

$_ZNKSt17_Rb_tree_iteratorISt4pairIxxEEeqERKS2_ = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IxxEES8_vEEOT_OT0_ = comdat any

$_ZNSt17_Rb_tree_iteratorISt4pairIxxEEmmEv = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_S_keyEPKSt18_Rb_tree_node_base = comdat any

$_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIxxEEEOT_RNSt16remove_referenceIS6_E4typeE = comdat any

$_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_S_valueEPKSt18_Rb_tree_node_base = comdat any

$_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@dy = global [8 x i64] [i64 0, i64 1, i64 0, i64 -1, i64 1, i64 -1, i64 1, i64 -1], align 16
@dx = global [8 x i64] [i64 1, i64 0, i64 -1, i64 0, i64 1, i64 -1, i64 -1, i64 1], align 16
@_ZL2pi = internal global double 0.000000e+00, align 8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@_ZStL19piecewise_construct = internal constant %"struct.std::piecewise_construct_t" undef, align 1
@.str = private unnamed_addr constant [28 x i8] c"vector::_M_emplace_back_aux\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s137250277.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.2 = common global i32 0
@y.3 = common global i32 0
@x.4 = common global i32 0
@y.5 = common global i32 0
@x.6 = common global i32 0
@y.7 = common global i32 0
@x.8 = common global i32 0
@y.9 = common global i32 0
@x.10 = common global i32 0
@y.11 = common global i32 0
@x.12 = common global i32 0
@y.13 = common global i32 0
@x.14 = common global i32 0
@y.15 = common global i32 0
@x.16 = common global i32 0
@y.17 = common global i32 0
@x.18 = common global i32 0
@y.19 = common global i32 0
@x.20 = common global i32 0
@y.21 = common global i32 0
@x.22 = common global i32 0
@y.23 = common global i32 0
@x.24 = common global i32 0
@y.25 = common global i32 0
@x.26 = common global i32 0
@y.27 = common global i32 0
@x.28 = common global i32 0
@y.29 = common global i32 0
@x.30 = common global i32 0
@y.31 = common global i32 0
@x.32 = common global i32 0
@y.33 = common global i32 0
@x.34 = common global i32 0
@y.35 = common global i32 0
@x.36 = common global i32 0
@y.37 = common global i32 0
@x.38 = common global i32 0
@y.39 = common global i32 0
@x.40 = common global i32 0
@y.41 = common global i32 0
@x.42 = common global i32 0
@y.43 = common global i32 0
@x.44 = common global i32 0
@y.45 = common global i32 0
@x.46 = common global i32 0
@y.47 = common global i32 0
@x.48 = common global i32 0
@y.49 = common global i32 0
@x.50 = common global i32 0
@y.51 = common global i32 0
@x.52 = common global i32 0
@y.53 = common global i32 0
@x.54 = common global i32 0
@y.55 = common global i32 0
@x.56 = common global i32 0
@y.57 = common global i32 0
@x.58 = common global i32 0
@y.59 = common global i32 0
@x.60 = common global i32 0
@y.61 = common global i32 0
@x.62 = common global i32 0
@y.63 = common global i32 0
@x.64 = common global i32 0
@y.65 = common global i32 0
@x.66 = common global i32 0
@y.67 = common global i32 0
@x.68 = common global i32 0
@y.69 = common global i32 0
@x.70 = common global i32 0
@y.71 = common global i32 0
@x.72 = common global i32 0
@y.73 = common global i32 0
@x.74 = common global i32 0
@y.75 = common global i32 0
@x.76 = common global i32 0
@y.77 = common global i32 0
@x.78 = common global i32 0
@y.79 = common global i32 0
@x.80 = common global i32 0
@y.81 = common global i32 0
@x.82 = common global i32 0
@y.83 = common global i32 0
@x.84 = common global i32 0
@y.85 = common global i32 0
@x.86 = common global i32 0
@y.87 = common global i32 0
@x.88 = common global i32 0
@y.89 = common global i32 0
@x.90 = common global i32 0
@y.91 = common global i32 0
@x.92 = common global i32 0
@y.93 = common global i32 0
@x.94 = common global i32 0
@y.95 = common global i32 0
@x.96 = common global i32 0
@y.97 = common global i32 0
@x.98 = common global i32 0
@y.99 = common global i32 0
@x.100 = common global i32 0
@y.101 = common global i32 0
@x.102 = common global i32 0
@y.103 = common global i32 0
@x.104 = common global i32 0
@y.105 = common global i32 0
@x.106 = common global i32 0
@y.107 = common global i32 0
@x.108 = common global i32 0
@y.109 = common global i32 0
@x.110 = common global i32 0
@y.111 = common global i32 0
@x.112 = common global i32 0
@y.113 = common global i32 0
@x.114 = common global i32 0
@y.115 = common global i32 0
@x.116 = common global i32 0
@y.117 = common global i32 0
@x.118 = common global i32 0
@y.119 = common global i32 0
@x.120 = common global i32 0
@y.121 = common global i32 0
@x.122 = common global i32 0
@y.123 = common global i32 0
@x.124 = common global i32 0
@y.125 = common global i32 0
@x.126 = common global i32 0
@y.127 = common global i32 0
@x.128 = common global i32 0
@y.129 = common global i32 0
@x.130 = common global i32 0
@y.131 = common global i32 0
@x.132 = common global i32 0
@y.133 = common global i32 0
@x.134 = common global i32 0
@y.135 = common global i32 0
@x.136 = common global i32 0
@y.137 = common global i32 0
@x.138 = common global i32 0
@y.139 = common global i32 0
@x.140 = common global i32 0
@y.141 = common global i32 0
@x.142 = common global i32 0
@y.143 = common global i32 0
@x.144 = common global i32 0
@y.145 = common global i32 0
@x.146 = common global i32 0
@y.147 = common global i32 0
@x.148 = common global i32 0
@y.149 = common global i32 0
@x.150 = common global i32 0
@y.151 = common global i32 0
@x.152 = common global i32 0
@y.153 = common global i32 0
@x.154 = common global i32 0
@y.155 = common global i32 0
@x.156 = common global i32 0
@y.157 = common global i32 0
@x.158 = common global i32 0
@y.159 = common global i32 0
@x.160 = common global i32 0
@y.161 = common global i32 0
@x.162 = common global i32 0
@y.163 = common global i32 0
@x.164 = common global i32 0
@y.165 = common global i32 0
@x.166 = common global i32 0
@y.167 = common global i32 0
@x.168 = common global i32 0
@y.169 = common global i32 0
@x.170 = common global i32 0
@y.171 = common global i32 0
@x.172 = common global i32 0
@y.173 = common global i32 0
@x.174 = common global i32 0
@y.175 = common global i32 0
@x.176 = common global i32 0
@y.177 = common global i32 0
@x.178 = common global i32 0
@y.179 = common global i32 0
@x.180 = common global i32 0
@y.181 = common global i32 0
@x.182 = common global i32 0
@y.183 = common global i32 0
@x.184 = common global i32 0
@y.185 = common global i32 0
@x.186 = common global i32 0
@y.187 = common global i32 0
@x.188 = common global i32 0
@y.189 = common global i32 0
@x.190 = common global i32 0
@y.191 = common global i32 0
@x.192 = common global i32 0
@y.193 = common global i32 0
@x.194 = common global i32 0
@y.195 = common global i32 0
@x.196 = common global i32 0
@y.197 = common global i32 0
@x.198 = common global i32 0
@y.199 = common global i32 0
@x.200 = common global i32 0
@y.201 = common global i32 0
@x.202 = common global i32 0
@y.203 = common global i32 0
@x.204 = common global i32 0
@y.205 = common global i32 0
@x.206 = common global i32 0
@y.207 = common global i32 0
@x.208 = common global i32 0
@y.209 = common global i32 0
@x.210 = common global i32 0
@y.211 = common global i32 0
@x.212 = common global i32 0
@y.213 = common global i32 0
@x.214 = common global i32 0
@y.215 = common global i32 0
@x.216 = common global i32 0
@y.217 = common global i32 0
@x.218 = common global i32 0
@y.219 = common global i32 0
@x.220 = common global i32 0
@y.221 = common global i32 0
@x.222 = common global i32 0
@y.223 = common global i32 0
@x.224 = common global i32 0
@y.225 = common global i32 0
@x.226 = common global i32 0
@y.227 = common global i32 0
@x.228 = common global i32 0
@y.229 = common global i32 0
@x.230 = common global i32 0
@y.231 = common global i32 0
@x.232 = common global i32 0
@y.233 = common global i32 0
@x.234 = common global i32 0
@y.235 = common global i32 0
@x.236 = common global i32 0
@y.237 = common global i32 0
@x.238 = common global i32 0
@y.239 = common global i32 0
@x.240 = common global i32 0
@y.241 = common global i32 0
@x.242 = common global i32 0
@y.243 = common global i32 0
@x.244 = common global i32 0
@y.245 = common global i32 0
@x.246 = common global i32 0
@y.247 = common global i32 0
@x.248 = common global i32 0
@y.249 = common global i32 0
@x.250 = common global i32 0
@y.251 = common global i32 0
@x.252 = common global i32 0
@y.253 = common global i32 0
@x.254 = common global i32 0
@y.255 = common global i32 0
@x.256 = common global i32 0
@y.257 = common global i32 0
@x.258 = common global i32 0
@y.259 = common global i32 0
@x.260 = common global i32 0
@y.261 = common global i32 0
@x.262 = common global i32 0
@y.263 = common global i32 0
@x.264 = common global i32 0
@y.265 = common global i32 0
@x.266 = common global i32 0
@y.267 = common global i32 0
@x.268 = common global i32 0
@y.269 = common global i32 0
@x.270 = common global i32 0
@y.271 = common global i32 0
@x.272 = common global i32 0
@y.273 = common global i32 0
@x.274 = common global i32 0
@y.275 = common global i32 0
@x.276 = common global i32 0
@y.277 = common global i32 0
@x.278 = common global i32 0
@y.279 = common global i32 0
@x.280 = common global i32 0
@y.281 = common global i32 0
@x.282 = common global i32 0
@y.283 = common global i32 0
@x.284 = common global i32 0
@y.285 = common global i32 0
@x.286 = common global i32 0
@y.287 = common global i32 0
@x.288 = common global i32 0
@y.289 = common global i32 0
@x.290 = common global i32 0
@y.291 = common global i32 0
@x.292 = common global i32 0
@y.293 = common global i32 0
@x.294 = common global i32 0
@y.295 = common global i32 0
@x.296 = common global i32 0
@y.297 = common global i32 0
@x.298 = common global i32 0
@y.299 = common global i32 0
@x.300 = common global i32 0
@y.301 = common global i32 0
@x.302 = common global i32 0
@y.303 = common global i32 0
@x.304 = common global i32 0
@y.305 = common global i32 0
@x.306 = common global i32 0
@y.307 = common global i32 0
@x.308 = common global i32 0
@y.309 = common global i32 0
@x.310 = common global i32 0
@y.311 = common global i32 0
@x.312 = common global i32 0
@y.313 = common global i32 0
@x.314 = common global i32 0
@y.315 = common global i32 0
@x.316 = common global i32 0
@y.317 = common global i32 0
@x.318 = common global i32 0
@y.319 = common global i32 0
@x.320 = common global i32 0
@y.321 = common global i32 0
@x.322 = common global i32 0
@y.323 = common global i32 0
@x.324 = common global i32 0
@y.325 = common global i32 0
@x.326 = common global i32 0
@y.327 = common global i32 0
@x.328 = common global i32 0
@y.329 = common global i32 0
@x.330 = common global i32 0
@y.331 = common global i32 0
@x.332 = common global i32 0
@y.333 = common global i32 0
@x.334 = common global i32 0
@y.335 = common global i32 0
@x.336 = common global i32 0
@y.337 = common global i32 0
@x.338 = common global i32 0
@y.339 = common global i32 0
@x.340 = common global i32 0
@y.341 = common global i32 0
@x.342 = common global i32 0
@y.343 = common global i32 0
@x.344 = common global i32 0
@y.345 = common global i32 0
@x.346 = common global i32 0
@y.347 = common global i32 0
@x.348 = common global i32 0
@y.349 = common global i32 0
@x.350 = common global i32 0
@y.351 = common global i32 0
@x.352 = common global i32 0
@y.353 = common global i32 0
@x.354 = common global i32 0
@y.355 = common global i32 0
@x.356 = common global i32 0
@y.357 = common global i32 0
@x.358 = common global i32 0
@y.359 = common global i32 0
@x.360 = common global i32 0
@y.361 = common global i32 0
@x.362 = common global i32 0
@y.363 = common global i32 0
@x.364 = common global i32 0
@y.365 = common global i32 0
@x.366 = common global i32 0
@y.367 = common global i32 0
@x.368 = common global i32 0
@y.369 = common global i32 0
@x.370 = common global i32 0
@y.371 = common global i32 0
@x.372 = common global i32 0
@y.373 = common global i32 0
@x.374 = common global i32 0
@y.375 = common global i32 0
@x.376 = common global i32 0
@y.377 = common global i32 0
@x.378 = common global i32 0
@y.379 = common global i32 0
@x.380 = common global i32 0
@y.381 = common global i32 0
@x.382 = common global i32 0
@y.383 = common global i32 0
@x.384 = common global i32 0
@y.385 = common global i32 0
@x.386 = common global i32 0
@y.387 = common global i32 0
@x.388 = common global i32 0
@y.389 = common global i32 0
@x.390 = common global i32 0
@y.391 = common global i32 0
@x.392 = common global i32 0
@y.393 = common global i32 0
@x.394 = common global i32 0
@y.395 = common global i32 0
@x.396 = common global i32 0
@y.397 = common global i32 0
@x.398 = common global i32 0
@y.399 = common global i32 0
@x.400 = common global i32 0
@y.401 = common global i32 0
@x.402 = common global i32 0
@y.403 = common global i32 0
@x.404 = common global i32 0
@y.405 = common global i32 0
@x.406 = common global i32 0
@y.407 = common global i32 0
@x.408 = common global i32 0
@y.409 = common global i32 0
@x.410 = common global i32 0
@y.411 = common global i32 0
@x.412 = common global i32 0
@y.413 = common global i32 0
@x.414 = common global i32 0
@y.415 = common global i32 0
@x.416 = common global i32 0
@y.417 = common global i32 0
@x.418 = common global i32 0
@y.419 = common global i32 0
@x.420 = common global i32 0
@y.421 = common global i32 0
@x.422 = common global i32 0
@y.423 = common global i32 0
@x.424 = common global i32 0
@y.425 = common global i32 0
@x.426 = common global i32 0
@y.427 = common global i32 0
@x.428 = common global i32 0
@y.429 = common global i32 0
@x.430 = common global i32 0
@y.431 = common global i32 0
@x.432 = common global i32 0
@y.433 = common global i32 0
@x.434 = common global i32 0
@y.435 = common global i32 0
@x.436 = common global i32 0
@y.437 = common global i32 0
@x.438 = common global i32 0
@y.439 = common global i32 0
@x.440 = common global i32 0
@y.441 = common global i32 0
@x.442 = common global i32 0
@y.443 = common global i32 0
@x.444 = common global i32 0
@y.445 = common global i32 0
@x.446 = common global i32 0
@y.447 = common global i32 0
@x.448 = common global i32 0
@y.449 = common global i32 0
@x.450 = common global i32 0
@y.451 = common global i32 0
@x.452 = common global i32 0
@y.453 = common global i32 0
@x.454 = common global i32 0
@y.455 = common global i32 0
@x.456 = common global i32 0
@y.457 = common global i32 0
@x.458 = common global i32 0
@y.459 = common global i32 0
@x.460 = common global i32 0
@y.461 = common global i32 0
@x.462 = common global i32 0
@y.463 = common global i32 0
@x.464 = common global i32 0
@y.465 = common global i32 0
@x.466 = common global i32 0
@y.467 = common global i32 0
@x.468 = common global i32 0
@y.469 = common global i32 0
@x.470 = common global i32 0
@y.471 = common global i32 0
@x.472 = common global i32 0
@y.473 = common global i32 0
@x.474 = common global i32 0
@y.475 = common global i32 0
@x.476 = common global i32 0
@y.477 = common global i32 0
@x.478 = common global i32 0
@y.479 = common global i32 0
@x.480 = common global i32 0
@y.481 = common global i32 0
@x.482 = common global i32 0
@y.483 = common global i32 0
@x.484 = common global i32 0
@y.485 = common global i32 0
@x.486 = common global i32 0
@y.487 = common global i32 0
@x.488 = common global i32 0
@y.489 = common global i32 0
@x.490 = common global i32 0
@y.491 = common global i32 0
@x.492 = common global i32 0
@y.493 = common global i32 0
@x.494 = common global i32 0
@y.495 = common global i32 0
@x.496 = common global i32 0
@y.497 = common global i32 0
@x.498 = common global i32 0
@y.499 = common global i32 0
@x.500 = common global i32 0
@y.501 = common global i32 0
@x.502 = common global i32 0
@y.503 = common global i32 0
@x.504 = common global i32 0
@y.505 = common global i32 0
@x.506 = common global i32 0
@y.507 = common global i32 0
@x.508 = common global i32 0
@y.509 = common global i32 0
@x.510 = common global i32 0
@y.511 = common global i32 0
@x.512 = common global i32 0
@y.513 = common global i32 0
@x.514 = common global i32 0
@y.515 = common global i32 0
@x.516 = common global i32 0
@y.517 = common global i32 0
@x.518 = common global i32 0
@y.519 = common global i32 0
@x.520 = common global i32 0
@y.521 = common global i32 0
@x.522 = common global i32 0
@y.523 = common global i32 0
@x.524 = common global i32 0
@y.525 = common global i32 0
@x.526 = common global i32 0
@y.527 = common global i32 0
@x.528 = common global i32 0
@y.529 = common global i32 0
@x.530 = common global i32 0
@y.531 = common global i32 0
@x.532 = common global i32 0
@y.533 = common global i32 0
@x.534 = common global i32 0
@y.535 = common global i32 0
@x.536 = common global i32 0
@y.537 = common global i32 0
@x.538 = common global i32 0
@y.539 = common global i32 0
@x.540 = common global i32 0
@y.541 = common global i32 0
@x.542 = common global i32 0
@y.543 = common global i32 0
@x.544 = common global i32 0
@y.545 = common global i32 0
@x.546 = common global i32 0
@y.547 = common global i32 0
@x.548 = common global i32 0
@y.549 = common global i32 0
@x.550 = common global i32 0
@y.551 = common global i32 0
@x.552 = common global i32 0
@y.553 = common global i32 0
@x.554 = common global i32 0
@y.555 = common global i32 0
@x.556 = common global i32 0
@y.557 = common global i32 0
@x.558 = common global i32 0
@y.559 = common global i32 0
@x.560 = common global i32 0
@y.561 = common global i32 0
@x.562 = common global i32 0
@y.563 = common global i32 0
@x.564 = common global i32 0
@y.565 = common global i32 0
@x.566 = common global i32 0
@y.567 = common global i32 0
@x.568 = common global i32 0
@y.569 = common global i32 0
@x.570 = common global i32 0
@y.571 = common global i32 0
@x.572 = common global i32 0
@y.573 = common global i32 0
@x.574 = common global i32 0
@y.575 = common global i32 0
@x.576 = common global i32 0
@y.577 = common global i32 0
@x.578 = common global i32 0
@y.579 = common global i32 0
@x.580 = common global i32 0
@y.581 = common global i32 0
@x.582 = common global i32 0
@y.583 = common global i32 0
@x.584 = common global i32 0
@y.585 = common global i32 0
@x.586 = common global i32 0
@y.587 = common global i32 0
@x.588 = common global i32 0
@y.589 = common global i32 0
@x.590 = common global i32 0
@y.591 = common global i32 0
@x.592 = common global i32 0
@y.593 = common global i32 0
@x.594 = common global i32 0
@y.595 = common global i32 0
@x.596 = common global i32 0
@y.597 = common global i32 0
@x.598 = common global i32 0
@y.599 = common global i32 0
@x.600 = common global i32 0
@y.601 = common global i32 0
@x.602 = common global i32 0
@y.603 = common global i32 0
@x.604 = common global i32 0
@y.605 = common global i32 0
@x.606 = common global i32 0
@y.607 = common global i32 0
@x.608 = common global i32 0
@y.609 = common global i32 0
@x.610 = common global i32 0
@y.611 = common global i32 0
@x.612 = common global i32 0
@y.613 = common global i32 0
@x.614 = common global i32 0
@y.615 = common global i32 0
@x.616 = common global i32 0
@y.617 = common global i32 0
@x.618 = common global i32 0
@y.619 = common global i32 0
@x.620 = common global i32 0
@y.621 = common global i32 0
@x.622 = common global i32 0
@y.623 = common global i32 0
@x.624 = common global i32 0
@y.625 = common global i32 0
@x.626 = common global i32 0
@y.627 = common global i32 0
@x.628 = common global i32 0
@y.629 = common global i32 0
@x.630 = common global i32 0
@y.631 = common global i32 0
@x.632 = common global i32 0
@y.633 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.1() #0 section ".text.startup" {
  %1 = call double @_ZSt4acosIiEN9__gnu_cxx11__enable_ifIXsr12__is_integerIT_EE7__valueEdE6__typeES2_(i32 -1)
  store double %1, double* @_ZL2pi, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double @_ZSt4acosIiEN9__gnu_cxx11__enable_ifIXsr12__is_integerIT_EE7__valueEdE6__typeES2_(i32) #4 comdat {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* %2, align 4
  %4 = sitofp i32 %3 to double
  %5 = call double @acos(double %4) #14
  ret double %5
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() #5 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = load i32, i32* @x.6
  %2 = load i32, i32* @y.7
  %3 = sub i32 0, 1
  %4 = add i32 %1, %3
  %5 = sub i32 %1, 1
  %6 = mul i32 %1, %4
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %2, 10
  %10 = and i1 %8, %9
  %11 = xor i1 %8, %9
  %12 = or i1 %10, %11
  %13 = or i1 %8, %9
  br i1 %12, label %14, label %1125

; <label>:14:                                     ; preds = %0, %1125
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca %"class.std::vector", align 8
  %20 = alloca %"class.std::allocator", align 1
  %21 = alloca i8*
  %22 = alloca i32
  %23 = alloca i64, align 8
  %24 = alloca i64, align 8
  %25 = alloca i64, align 8
  %26 = alloca i64, align 8
  %27 = alloca i64, align 8
  %28 = alloca %"class.std::vector.0", align 8
  %29 = alloca %"class.std::allocator.2", align 1
  %30 = alloca i64, align 8
  %31 = alloca i64, align 8
  %32 = alloca i64, align 8
  %33 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %34 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %35 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %36 = alloca %"struct.std::pair", align 8
  %37 = alloca i32, align 4
  %38 = alloca %"class.std::vector.14", align 8
  %39 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %40 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %41 = alloca %"class.std::vector.14"*, align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %44 = alloca %"struct.std::pair", align 8
  %45 = alloca %"struct.std::pair.19", align 8
  %46 = alloca i64, align 8
  %47 = alloca i64, align 8
  store i32 0, i32* %15, align 4
  %48 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) %16)
  %49 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %48, i64* dereferenceable(8) %17)
  %50 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %49, i64* dereferenceable(8) %18)
  %51 = load i64, i64* %18, align 8
  %52 = icmp eq i64 %51, 0
  %53 = load i32, i32* @x.6
  %54 = load i32, i32* @y.7
  %55 = sub i32 %53, 1501608999
  %56 = sub i32 %55, 1
  %57 = add i32 %56, 1501608999
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  br i1 %65, label %67, label %1125

; <label>:67:                                     ; preds = %14
  br i1 %52, label %68, label %232

; <label>:68:                                     ; preds = %67
  %69 = load i64, i64* %17, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %128

; <label>:71:                                     ; preds = %68
  %72 = load i32, i32* @x.6
  %73 = load i32, i32* @y.7
  %74 = add i32 %72, -113650667
  %75 = sub i32 %74, 1
  %76 = sub i32 %75, -113650667
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = xor i1 %80, true
  %83 = xor i1 %81, true
  %84 = xor i1 true, true
  %85 = and i1 %82, true
  %86 = and i1 %80, %84
  %87 = and i1 %83, true
  %88 = and i1 %81, %84
  %89 = or i1 %85, %86
  %90 = or i1 %87, %88
  %91 = xor i1 %89, %90
  %92 = or i1 %82, %83
  %93 = xor i1 %92, true
  %94 = or i1 true, %84
  %95 = and i1 %93, %94
  %96 = or i1 %91, %95
  %97 = or i1 %80, %81
  br i1 %96, label %98, label %1164

; <label>:98:                                     ; preds = %71, %1164
  %99 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* @_ZSt4cout, i32 1)
  %100 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %99, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %101 = load i32, i32* @x.6
  %102 = load i32, i32* @y.7
  %103 = sub i32 %101, 554101570
  %104 = sub i32 %103, 1
  %105 = add i32 %104, 554101570
  %106 = sub i32 %101, 1
  %107 = mul i32 %101, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %102, 10
  %111 = xor i1 %109, true
  %112 = xor i1 %110, true
  %113 = xor i1 true, true
  %114 = and i1 %111, true
  %115 = and i1 %109, %113
  %116 = and i1 %112, true
  %117 = and i1 %110, %113
  %118 = or i1 %114, %115
  %119 = or i1 %116, %117
  %120 = xor i1 %118, %119
  %121 = or i1 %111, %112
  %122 = xor i1 %121, true
  %123 = or i1 true, %113
  %124 = and i1 %122, %123
  %125 = or i1 %120, %124
  %126 = or i1 %109, %110
  br i1 %125, label %127, label %1164

; <label>:127:                                    ; preds = %98
  br label %177

; <label>:128:                                    ; preds = %68
  %129 = load i32, i32* @x.6
  %130 = load i32, i32* @y.7
  %131 = add i32 %129, 119778705
  %132 = sub i32 %131, 1
  %133 = sub i32 %132, 119778705
  %134 = sub i32 %129, 1
  %135 = mul i32 %129, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %130, 10
  %139 = xor i1 %137, true
  %140 = xor i1 %138, true
  %141 = xor i1 true, true
  %142 = and i1 %139, true
  %143 = and i1 %137, %141
  %144 = and i1 %140, true
  %145 = and i1 %138, %141
  %146 = or i1 %142, %143
  %147 = or i1 %144, %145
  %148 = xor i1 %146, %147
  %149 = or i1 %139, %140
  %150 = xor i1 %149, true
  %151 = or i1 true, %141
  %152 = and i1 %150, %151
  %153 = or i1 %148, %152
  %154 = or i1 %137, %138
  br i1 %153, label %155, label %1167

; <label>:155:                                    ; preds = %128, %1167
  %156 = load i64, i64* %16, align 8
  %157 = sub i64 0, 1
  %158 = sub i64 %156, %157
  %159 = add nsw i64 %156, 1
  %160 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* @_ZSt4cout, i64 %158)
  %161 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %160, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %162 = load i32, i32* @x.6
  %163 = load i32, i32* @y.7
  %164 = add i32 %162, -874057185
  %165 = sub i32 %164, 1
  %166 = sub i32 %165, -874057185
  %167 = sub i32 %162, 1
  %168 = mul i32 %162, %166
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %163, 10
  %172 = and i1 %170, %171
  %173 = xor i1 %170, %171
  %174 = or i1 %172, %173
  %175 = or i1 %170, %171
  br i1 %174, label %176, label %1167

; <label>:176:                                    ; preds = %155
  br label %177

; <label>:177:                                    ; preds = %176, %127
  %178 = load i32, i32* @x.6
  %179 = load i32, i32* @y.7
  %180 = add i32 %178, -661238487
  %181 = sub i32 %180, 1
  %182 = sub i32 %181, -661238487
  %183 = sub i32 %178, 1
  %184 = mul i32 %178, %182
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %179, 10
  %188 = xor i1 %186, true
  %189 = xor i1 %187, true
  %190 = xor i1 true, true
  %191 = and i1 %188, true
  %192 = and i1 %186, %190
  %193 = and i1 %189, true
  %194 = and i1 %187, %190
  %195 = or i1 %191, %192
  %196 = or i1 %193, %194
  %197 = xor i1 %195, %196
  %198 = or i1 %188, %189
  %199 = xor i1 %198, true
  %200 = or i1 true, %190
  %201 = and i1 %199, %200
  %202 = or i1 %197, %201
  %203 = or i1 %186, %187
  br i1 %202, label %204, label %1176

; <label>:204:                                    ; preds = %177, %1176
  store i32 0, i32* %15, align 4
  %205 = load i32, i32* @x.6
  %206 = load i32, i32* @y.7
  %207 = add i32 %205, 581648060
  %208 = sub i32 %207, 1
  %209 = sub i32 %208, 581648060
  %210 = sub i32 %205, 1
  %211 = mul i32 %205, %209
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %206, 10
  %215 = xor i1 %213, true
  %216 = xor i1 %214, true
  %217 = xor i1 true, true
  %218 = and i1 %215, true
  %219 = and i1 %213, %217
  %220 = and i1 %216, true
  %221 = and i1 %214, %217
  %222 = or i1 %218, %219
  %223 = or i1 %220, %221
  %224 = xor i1 %222, %223
  %225 = or i1 %215, %216
  %226 = xor i1 %225, true
  %227 = or i1 true, %217
  %228 = and i1 %226, %227
  %229 = or i1 %224, %228
  %230 = or i1 %213, %214
  br i1 %229, label %231, label %1176

; <label>:231:                                    ; preds = %204
  br label %1116

; <label>:232:                                    ; preds = %67
  %233 = load i64, i64* %16, align 8
  %234 = sub i64 %233, -6950744298135100260
  %235 = add i64 %234, 2
  %236 = add i64 %235, -6950744298135100260
  %237 = add nsw i64 %233, 2
  call void @_ZNSaI3datEC2Ev(%"class.std::allocator"* %20) #3
  invoke void @_ZNSt6vectorI3datSaIS0_EEC2EmRKS1_(%"class.std::vector"* %19, i64 %236, %"class.std::allocator"* dereferenceable(1) %20)
          to label %238 unwind label %403

; <label>:238:                                    ; preds = %232
  call void @_ZNSaI3datED2Ev(%"class.std::allocator"* %20) #3
  %239 = load i64, i64* %16, align 8
  %240 = load i64, i64* %16, align 8
  %241 = add i64 %240, 910861675984529385
  %242 = sub i64 %241, 1
  %243 = sub i64 %242, 910861675984529385
  %244 = sub nsw i64 %240, 1
  %245 = mul nsw i64 %239, %243
  %246 = sdiv i64 %245, 2
  store i64 %246, i64* %23, align 8
  %247 = load i64, i64* %17, align 8
  %248 = load i64, i64* %18, align 8
  %249 = sdiv i64 %247, %248
  store i64 %249, i64* %24, align 8
  %250 = load i64, i64* %17, align 8
  %251 = mul nsw i64 2, %250
  %252 = load i64, i64* %18, align 8
  %253 = srem i64 %251, %252
  store i64 %253, i64* %25, align 8
  store i64 0, i64* %26, align 8
  store i64 0, i64* %27, align 8
  br label %254

; <label>:254:                                    ; preds = %396, %238
  %255 = load i32, i32* @x.6
  %256 = load i32, i32* @y.7
  %257 = sub i32 %255, -1118289000
  %258 = sub i32 %257, 1
  %259 = add i32 %258, -1118289000
  %260 = sub i32 %255, 1
  %261 = mul i32 %255, %259
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %256, 10
  %265 = and i1 %263, %264
  %266 = xor i1 %263, %264
  %267 = or i1 %265, %266
  %268 = or i1 %263, %264
  br i1 %267, label %269, label %1177

; <label>:269:                                    ; preds = %254, %1177
  %270 = load i64, i64* %27, align 8
  %271 = load i64, i64* %16, align 8
  %272 = sub i64 0, %271
  %273 = sub i64 0, 1
  %274 = add i64 %272, %273
  %275 = sub i64 0, %274
  %276 = add nsw i64 %271, 1
  %277 = icmp slt i64 %270, %275
  %278 = load i32, i32* @x.6
  %279 = load i32, i32* @y.7
  %280 = sub i32 0, 1
  %281 = add i32 %278, %280
  %282 = sub i32 %278, 1
  %283 = mul i32 %278, %281
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %279, 10
  %287 = and i1 %285, %286
  %288 = xor i1 %285, %286
  %289 = or i1 %287, %288
  %290 = or i1 %285, %286
  br i1 %289, label %291, label %1177

; <label>:291:                                    ; preds = %269
  br i1 %277, label %292, label %407

; <label>:292:                                    ; preds = %291
  %293 = load i32, i32* @x.6
  %294 = load i32, i32* @y.7
  %295 = add i32 %293, 655657646
  %296 = sub i32 %295, 1
  %297 = sub i32 %296, 655657646
  %298 = sub i32 %293, 1
  %299 = mul i32 %293, %297
  %300 = urem i32 %299, 2
  %301 = icmp eq i32 %300, 0
  %302 = icmp slt i32 %294, 10
  %303 = xor i1 %301, true
  %304 = xor i1 %302, true
  %305 = xor i1 true, true
  %306 = and i1 %303, true
  %307 = and i1 %301, %305
  %308 = and i1 %304, true
  %309 = and i1 %302, %305
  %310 = or i1 %306, %307
  %311 = or i1 %308, %309
  %312 = xor i1 %310, %311
  %313 = or i1 %303, %304
  %314 = xor i1 %313, true
  %315 = or i1 true, %305
  %316 = and i1 %314, %315
  %317 = or i1 %312, %316
  %318 = or i1 %301, %302
  br i1 %317, label %319, label %1203

; <label>:319:                                    ; preds = %292, %1203
  %320 = load i64, i64* %27, align 8
  %321 = load i64, i64* %27, align 8
  %322 = add i64 %321, 5750986810203990491
  %323 = sub i64 %322, 1
  %324 = sub i64 %323, 5750986810203990491
  %325 = sub nsw i64 %321, 1
  %326 = mul nsw i64 %320, %324
  %327 = load i64, i64* %23, align 8
  %328 = sub i64 %326, 146494548692514519
  %329 = sub i64 %328, %327
  %330 = add i64 %329, 146494548692514519
  %331 = sub nsw i64 %326, %327
  %332 = load i64, i64* %27, align 8
  %333 = call dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"* %19, i64 %332) #3
  %334 = getelementptr inbounds %struct.dat, %struct.dat* %333, i32 0, i32 0
  store i64 %330, i64* %334, align 8
  %335 = load i64, i64* %23, align 8
  %336 = load i64, i64* %16, align 8
  %337 = load i64, i64* %27, align 8
  %338 = sub i64 %336, 8359431577085070992
  %339 = sub i64 %338, %337
  %340 = add i64 %339, 8359431577085070992
  %341 = sub nsw i64 %336, %337
  %342 = load i64, i64* %16, align 8
  %343 = load i64, i64* %27, align 8
  %344 = sub i64 %342, -1242248338879537838
  %345 = sub i64 %344, %343
  %346 = add i64 %345, -1242248338879537838
  %347 = sub nsw i64 %342, %343
  %348 = sub i64 %346, 813771750719519381
  %349 = sub i64 %348, 1
  %350 = add i64 %349, 813771750719519381
  %351 = sub nsw i64 %346, 1
  %352 = mul nsw i64 %340, %350
  %353 = add i64 %335, -7359160690400021150
  %354 = sub i64 %353, %352
  %355 = sub i64 %354, -7359160690400021150
  %356 = sub nsw i64 %335, %352
  %357 = load i64, i64* %27, align 8
  %358 = call dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"* %19, i64 %357) #3
  %359 = getelementptr inbounds %struct.dat, %struct.dat* %358, i32 0, i32 1
  store i64 %355, i64* %359, align 8
  %360 = load i64, i64* %27, align 8
  %361 = call dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"* %19, i64 %360) #3
  %362 = getelementptr inbounds %struct.dat, %struct.dat* %361, i32 0, i32 1
  %363 = load i64, i64* %362, align 8
  %364 = load i64, i64* %27, align 8
  %365 = call dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"* %19, i64 %364) #3
  %366 = getelementptr inbounds %struct.dat, %struct.dat* %365, i32 0, i32 0
  %367 = load i64, i64* %366, align 8
  %368 = sub i64 %363, 7048047404677689260
  %369 = sub i64 %368, %367
  %370 = add i64 %369, 7048047404677689260
  %371 = sub nsw i64 %363, %367
  %372 = sdiv i64 %370, 2
  %373 = sub i64 0, 1
  %374 = sub i64 %372, %373
  %375 = add nsw i64 %372, 1
  %376 = load i64, i64* %26, align 8
  %377 = sub i64 %376, 1146544963243213251
  %378 = add i64 %377, %374
  %379 = add i64 %378, 1146544963243213251
  %380 = add nsw i64 %376, %374
  store i64 %379, i64* %26, align 8
  %381 = load i32, i32* @x.6
  %382 = load i32, i32* @y.7
  %383 = sub i32 %381, 596870991
  %384 = sub i32 %383, 1
  %385 = add i32 %384, 596870991
  %386 = sub i32 %381, 1
  %387 = mul i32 %381, %385
  %388 = urem i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %382, 10
  %391 = and i1 %389, %390
  %392 = xor i1 %389, %390
  %393 = or i1 %391, %392
  %394 = or i1 %389, %390
  br i1 %393, label %395, label %1203

; <label>:395:                                    ; preds = %319
  br label %396

; <label>:396:                                    ; preds = %395
  %397 = load i64, i64* %27, align 8
  %398 = sub i64 0, %397
  %399 = sub i64 0, 1
  %400 = add i64 %398, %399
  %401 = sub i64 0, %400
  %402 = add nsw i64 %397, 1
  store i64 %401, i64* %27, align 8
  br label %254

; <label>:403:                                    ; preds = %232
  %404 = landingpad { i8*, i32 }
          cleanup
  %405 = extractvalue { i8*, i32 } %404, 0
  store i8* %405, i8** %21, align 8
  %406 = extractvalue { i8*, i32 } %404, 1
  store i32 %406, i32* %22, align 4
  call void @_ZNSaI3datED2Ev(%"class.std::allocator"* %20) #3
  br label %1120

; <label>:407:                                    ; preds = %291
  call void @_ZNSaISt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEEEC2Ev(%"class.std::allocator.2"* %29) #3
  invoke void @_ZNSt6vectorISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EEC2EmRKSD_(%"class.std::vector.0"* %28, i64 2, %"class.std::allocator.2"* dereferenceable(1) %29)
          to label %408 unwind label %649

; <label>:408:                                    ; preds = %407
  call void @_ZNSaISt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEEED2Ev(%"class.std::allocator.2"* %29) #3
  %409 = call dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"* %19, i64 0) #3
  %410 = getelementptr inbounds %struct.dat, %struct.dat* %409, i32 0, i32 2
  store i64 0, i64* %410, align 8
  store i64 0, i64* %30, align 8
  store i64 0, i64* %31, align 8
  br label %411

; <label>:411:                                    ; preds = %1057, %408
  %412 = load i64, i64* %31, align 8
  %413 = load i64, i64* %16, align 8
  %414 = sub i64 0, 1
  %415 = sub i64 %413, %414
  %416 = add nsw i64 %413, 1
  %417 = icmp slt i64 %412, %415
  br i1 %417, label %418, label %1058

; <label>:418:                                    ; preds = %411
  %419 = load i64, i64* %31, align 8
  %420 = call dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"* %19, i64 %419) #3
  %421 = getelementptr inbounds %struct.dat, %struct.dat* %420, i32 0, i32 0
  %422 = load i64, i64* %421, align 8
  %423 = invoke i64 @_ZSt3absx(i64 %422)
          to label %424 unwind label %653

; <label>:424:                                    ; preds = %418
  store i64 %423, i64* %32, align 8
  %425 = load i64, i64* %32, align 8
  %426 = srem i64 %425, 2
  %427 = call dereferenceable(48) %"class.std::map"* @_ZNSt6vectorISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EEixEm(%"class.std::vector.0"* %28, i64 %426) #3
  %428 = load i64, i64* %31, align 8
  %429 = call dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"* %19, i64 %428) #3
  %430 = getelementptr inbounds %struct.dat, %struct.dat* %429, i32 0, i32 2
  %431 = invoke dereferenceable(48) %"class.std::set"* @_ZNSt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEEixERS8_(%"class.std::map"* %427, i64* dereferenceable(8) %430)
          to label %432 unwind label %653

; <label>:432:                                    ; preds = %424
  %433 = load i32, i32* @x.6
  %434 = load i32, i32* @y.7
  %435 = sub i32 0, 1
  %436 = add i32 %433, %435
  %437 = sub i32 %433, 1
  %438 = mul i32 %433, %436
  %439 = urem i32 %438, 2
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %434, 10
  %442 = and i1 %440, %441
  %443 = xor i1 %440, %441
  %444 = or i1 %442, %443
  %445 = or i1 %440, %441
  br i1 %444, label %446, label %1422

; <label>:446:                                    ; preds = %432, %1422
  %447 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt3setISt4pairIxxESt4lessIS1_ESaIS1_EE5beginEv(%"class.std::set"* %431) #3
  %448 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %34, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %447, %"struct.std::_Rb_tree_node_base"** %448, align 8
  %449 = load i64, i64* %32, align 8
  %450 = srem i64 %449, 2
  %451 = call dereferenceable(48) %"class.std::map"* @_ZNSt6vectorISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EEixEm(%"class.std::vector.0"* %28, i64 %450) #3
  %452 = load i64, i64* %31, align 8
  %453 = call dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"* %19, i64 %452) #3
  %454 = getelementptr inbounds %struct.dat, %struct.dat* %453, i32 0, i32 2
  %455 = load i32, i32* @x.6
  %456 = load i32, i32* @y.7
  %457 = add i32 %455, 1788272506
  %458 = sub i32 %457, 1
  %459 = sub i32 %458, 1788272506
  %460 = sub i32 %455, 1
  %461 = mul i32 %455, %459
  %462 = urem i32 %461, 2
  %463 = icmp eq i32 %462, 0
  %464 = icmp slt i32 %456, 10
  %465 = xor i1 %463, true
  %466 = xor i1 %464, true
  %467 = xor i1 true, true
  %468 = and i1 %465, true
  %469 = and i1 %463, %467
  %470 = and i1 %466, true
  %471 = and i1 %464, %467
  %472 = or i1 %468, %469
  %473 = or i1 %470, %471
  %474 = xor i1 %472, %473
  %475 = or i1 %465, %466
  %476 = xor i1 %475, true
  %477 = or i1 true, %467
  %478 = and i1 %476, %477
  %479 = or i1 %474, %478
  %480 = or i1 %463, %464
  br i1 %479, label %481, label %1422

; <label>:481:                                    ; preds = %446
  %482 = invoke dereferenceable(48) %"class.std::set"* @_ZNSt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEEixERS8_(%"class.std::map"* %451, i64* dereferenceable(8) %454)
          to label %483 unwind label %653

; <label>:483:                                    ; preds = %481
  %484 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt3setISt4pairIxxESt4lessIS1_ESaIS1_EE3endEv(%"class.std::set"* %482) #3
  %485 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %35, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %484, %"struct.std::_Rb_tree_node_base"** %485, align 8
  %486 = load i64, i64* %31, align 8
  %487 = call dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"* %19, i64 %486) #3
  %488 = getelementptr inbounds %struct.dat, %struct.dat* %487, i32 0, i32 0
  store i32 -1073741824, i32* %37, align 4
  invoke void @_ZNSt4pairIxxEC2IRxivEEOT_OT0_(%"struct.std::pair"* %36, i64* dereferenceable(8) %488, i32* dereferenceable(4) %37)
          to label %489 unwind label %653

; <label>:489:                                    ; preds = %483
  %490 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %34, i32 0, i32 0
  %491 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %490, align 8
  %492 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %35, i32 0, i32 0
  %493 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %492, align 8
  %494 = invoke %"struct.std::_Rb_tree_node_base"* @_ZSt11lower_boundISt23_Rb_tree_const_iteratorISt4pairIxxEES2_ET_S4_S4_RKT0_(%"struct.std::_Rb_tree_node_base"* %491, %"struct.std::_Rb_tree_node_base"* %493, %"struct.std::pair"* dereferenceable(16) %36)
          to label %495 unwind label %653

; <label>:495:                                    ; preds = %489
  %496 = load i32, i32* @x.6
  %497 = load i32, i32* @y.7
  %498 = sub i32 0, 1
  %499 = add i32 %496, %498
  %500 = sub i32 %496, 1
  %501 = mul i32 %496, %499
  %502 = urem i32 %501, 2
  %503 = icmp eq i32 %502, 0
  %504 = icmp slt i32 %497, 10
  %505 = xor i1 %503, true
  %506 = xor i1 %504, true
  %507 = xor i1 false, true
  %508 = and i1 %505, false
  %509 = and i1 %503, %507
  %510 = and i1 %506, false
  %511 = and i1 %504, %507
  %512 = or i1 %508, %509
  %513 = or i1 %510, %511
  %514 = xor i1 %512, %513
  %515 = or i1 %505, %506
  %516 = xor i1 %515, true
  %517 = or i1 false, %507
  %518 = and i1 %516, %517
  %519 = or i1 %514, %518
  %520 = or i1 %503, %504
  br i1 %519, label %521, label %1442

; <label>:521:                                    ; preds = %495, %1442
  %522 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %33, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %494, %"struct.std::_Rb_tree_node_base"** %522, align 8
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EEC2Ev(%"class.std::vector.14"* %38) #3
  %523 = load i32, i32* @x.6
  %524 = load i32, i32* @y.7
  %525 = sub i32 %523, -816392098
  %526 = sub i32 %525, 1
  %527 = add i32 %526, -816392098
  %528 = sub i32 %523, 1
  %529 = mul i32 %523, %527
  %530 = urem i32 %529, 2
  %531 = icmp eq i32 %530, 0
  %532 = icmp slt i32 %524, 10
  %533 = xor i1 %531, true
  %534 = xor i1 %532, true
  %535 = xor i1 false, true
  %536 = and i1 %533, false
  %537 = and i1 %531, %535
  %538 = and i1 %534, false
  %539 = and i1 %532, %535
  %540 = or i1 %536, %537
  %541 = or i1 %538, %539
  %542 = xor i1 %540, %541
  %543 = or i1 %533, %534
  %544 = xor i1 %543, true
  %545 = or i1 false, %535
  %546 = and i1 %544, %545
  %547 = or i1 %542, %546
  %548 = or i1 %531, %532
  br i1 %547, label %549, label %1442

; <label>:549:                                    ; preds = %521
  br label %550

; <label>:550:                                    ; preds = %648, %549
  %551 = load i64, i64* %32, align 8
  %552 = srem i64 %551, 2
  %553 = call dereferenceable(48) %"class.std::map"* @_ZNSt6vectorISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EEixEm(%"class.std::vector.0"* %28, i64 %552) #3
  %554 = load i64, i64* %31, align 8
  %555 = call dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"* %19, i64 %554) #3
  %556 = getelementptr inbounds %struct.dat, %struct.dat* %555, i32 0, i32 2
  %557 = invoke dereferenceable(48) %"class.std::set"* @_ZNSt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEEixERS8_(%"class.std::map"* %553, i64* dereferenceable(8) %556)
          to label %558 unwind label %657

; <label>:558:                                    ; preds = %550
  %559 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt3setISt4pairIxxESt4lessIS1_ESaIS1_EE3endEv(%"class.std::set"* %557) #3
  %560 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %39, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %559, %"struct.std::_Rb_tree_node_base"** %560, align 8
  %561 = call zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIxxEEneERKS2_(%"struct.std::_Rb_tree_const_iterator"* %33, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %39) #3
  br i1 %561, label %562, label %571

; <label>:562:                                    ; preds = %558
  %563 = call dereferenceable(16) %"struct.std::pair"* @_ZNKSt23_Rb_tree_const_iteratorISt4pairIxxEEdeEv(%"struct.std::_Rb_tree_const_iterator"* %33) #3
  %564 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %563, i32 0, i32 1
  %565 = load i64, i64* %564, align 8
  %566 = load i64, i64* %31, align 8
  %567 = call dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"* %19, i64 %566) #3
  %568 = getelementptr inbounds %struct.dat, %struct.dat* %567, i32 0, i32 1
  %569 = load i64, i64* %568, align 8
  %570 = icmp sle i64 %565, %569
  br label %571

; <label>:571:                                    ; preds = %562, %558
  %572 = phi i1 [ false, %558 ], [ %570, %562 ]
  br i1 %572, label %573, label %661

; <label>:573:                                    ; preds = %571
  %574 = call dereferenceable(16) %"struct.std::pair"* @_ZNKSt23_Rb_tree_const_iteratorISt4pairIxxEEdeEv(%"struct.std::_Rb_tree_const_iterator"* %33) #3
  %575 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %574, i32 0, i32 0
  %576 = load i64, i64* %31, align 8
  %577 = call dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"* %19, i64 %576) #3
  %578 = getelementptr inbounds %struct.dat, %struct.dat* %577, i32 0, i32 1
  %579 = invoke dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %575, i64* dereferenceable(8) %578)
          to label %580 unwind label %657

; <label>:580:                                    ; preds = %573
  %581 = load i64, i64* %579, align 8
  %582 = call dereferenceable(16) %"struct.std::pair"* @_ZNKSt23_Rb_tree_const_iteratorISt4pairIxxEEdeEv(%"struct.std::_Rb_tree_const_iterator"* %33) #3
  %583 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %582, i32 0, i32 1
  %584 = load i64, i64* %31, align 8
  %585 = call dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"* %19, i64 %584) #3
  %586 = getelementptr inbounds %struct.dat, %struct.dat* %585, i32 0, i32 0
  %587 = invoke dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* dereferenceable(8) %583, i64* dereferenceable(8) %586)
          to label %588 unwind label %657

; <label>:588:                                    ; preds = %580
  %589 = load i64, i64* %587, align 8
  %590 = sub i64 0, %589
  %591 = add i64 %581, %590
  %592 = sub nsw i64 %581, %589
  %593 = sdiv i64 %591, 2
  %594 = sub i64 %593, -2652109573110932332
  %595 = add i64 %594, 1
  %596 = add i64 %595, -2652109573110932332
  %597 = add nsw i64 %593, 1
  %598 = load i64, i64* %26, align 8
  %599 = add i64 %598, -83375532841576804
  %600 = sub i64 %599, %596
  %601 = sub i64 %600, -83375532841576804
  %602 = sub nsw i64 %598, %596
  store i64 %601, i64* %26, align 8
  %603 = call dereferenceable(16) %"struct.std::pair"* @_ZNKSt23_Rb_tree_const_iteratorISt4pairIxxEEdeEv(%"struct.std::_Rb_tree_const_iterator"* %33) #3
  invoke void @_ZNSt6vectorISt4pairIxxESaIS1_EE12emplace_backIJRKS1_EEEvDpOT_(%"class.std::vector.14"* %38, %"struct.std::pair"* dereferenceable(16) %603)
          to label %604 unwind label %657

; <label>:604:                                    ; preds = %588
  %605 = load i32, i32* @x.6
  %606 = load i32, i32* @y.7
  %607 = sub i32 %605, -1846941112
  %608 = sub i32 %607, 1
  %609 = add i32 %608, -1846941112
  %610 = sub i32 %605, 1
  %611 = mul i32 %605, %609
  %612 = urem i32 %611, 2
  %613 = icmp eq i32 %612, 0
  %614 = icmp slt i32 %606, 10
  %615 = xor i1 %613, true
  %616 = xor i1 %614, true
  %617 = xor i1 false, true
  %618 = and i1 %615, false
  %619 = and i1 %613, %617
  %620 = and i1 %616, false
  %621 = and i1 %614, %617
  %622 = or i1 %618, %619
  %623 = or i1 %620, %621
  %624 = xor i1 %622, %623
  %625 = or i1 %615, %616
  %626 = xor i1 %625, true
  %627 = or i1 false, %617
  %628 = and i1 %626, %627
  %629 = or i1 %624, %628
  %630 = or i1 %613, %614
  br i1 %629, label %631, label %1444

; <label>:631:                                    ; preds = %604, %1444
  %632 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt23_Rb_tree_const_iteratorISt4pairIxxEEppEi(%"struct.std::_Rb_tree_const_iterator"* %33, i32 0) #3
  %633 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %40, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %632, %"struct.std::_Rb_tree_node_base"** %633, align 8
  %634 = load i32, i32* @x.6
  %635 = load i32, i32* @y.7
  %636 = add i32 %634, -1778502576
  %637 = sub i32 %636, 1
  %638 = sub i32 %637, -1778502576
  %639 = sub i32 %634, 1
  %640 = mul i32 %634, %638
  %641 = urem i32 %640, 2
  %642 = icmp eq i32 %641, 0
  %643 = icmp slt i32 %635, 10
  %644 = and i1 %642, %643
  %645 = xor i1 %642, %643
  %646 = or i1 %644, %645
  %647 = or i1 %642, %643
  br i1 %646, label %648, label %1444

; <label>:648:                                    ; preds = %631
  br label %550

; <label>:649:                                    ; preds = %407
  %650 = landingpad { i8*, i32 }
          cleanup
  %651 = extractvalue { i8*, i32 } %650, 0
  store i8* %651, i8** %21, align 8
  %652 = extractvalue { i8*, i32 } %650, 1
  store i32 %652, i32* %22, align 4
  call void @_ZNSaISt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEEED2Ev(%"class.std::allocator.2"* %29) #3
  br label %1119

; <label>:653:                                    ; preds = %1113, %1058, %489, %483, %481, %424, %418
  %654 = landingpad { i8*, i32 }
          cleanup
  %655 = extractvalue { i8*, i32 } %654, 0
  store i8* %655, i8** %21, align 8
  %656 = extractvalue { i8*, i32 } %654, 1
  store i32 %656, i32* %22, align 4
  br label %1118

; <label>:657:                                    ; preds = %881, %792, %710, %694, %686, %681, %670, %588, %580, %573, %550
  %658 = landingpad { i8*, i32 }
          cleanup
  %659 = extractvalue { i8*, i32 } %658, 0
  store i8* %659, i8** %21, align 8
  %660 = extractvalue { i8*, i32 } %658, 1
  store i32 %660, i32* %22, align 4
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EED2Ev(%"class.std::vector.14"* %38) #3
  br label %1118

; <label>:661:                                    ; preds = %571
  store %"class.std::vector.14"* %38, %"class.std::vector.14"** %41, align 8
  %662 = load %"class.std::vector.14"*, %"class.std::vector.14"** %41, align 8
  %663 = call %"struct.std::pair"* @_ZNSt6vectorISt4pairIxxESaIS1_EE5beginEv(%"class.std::vector.14"* %662) #3
  %664 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %42, i32 0, i32 0
  store %"struct.std::pair"* %663, %"struct.std::pair"** %664, align 8
  %665 = load %"class.std::vector.14"*, %"class.std::vector.14"** %41, align 8
  %666 = call %"struct.std::pair"* @_ZNSt6vectorISt4pairIxxESaIS1_EE3endEv(%"class.std::vector.14"* %665) #3
  %667 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %43, i32 0, i32 0
  store %"struct.std::pair"* %666, %"struct.std::pair"** %667, align 8
  br label %668

; <label>:668:                                    ; preds = %684, %661
  %669 = call zeroext i1 @_ZN9__gnu_cxxneIPSt4pairIxxESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %42, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %43) #3
  br i1 %669, label %670, label %686

; <label>:670:                                    ; preds = %668
  %671 = call dereferenceable(16) %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %42) #3
  %672 = bitcast %"struct.std::pair"* %44 to i8*
  %673 = bitcast %"struct.std::pair"* %671 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %672, i8* %673, i64 16, i32 8, i1 false)
  %674 = load i64, i64* %32, align 8
  %675 = srem i64 %674, 2
  %676 = call dereferenceable(48) %"class.std::map"* @_ZNSt6vectorISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EEixEm(%"class.std::vector.0"* %28, i64 %675) #3
  %677 = load i64, i64* %31, align 8
  %678 = call dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"* %19, i64 %677) #3
  %679 = getelementptr inbounds %struct.dat, %struct.dat* %678, i32 0, i32 2
  %680 = invoke dereferenceable(48) %"class.std::set"* @_ZNSt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEEixERS8_(%"class.std::map"* %676, i64* dereferenceable(8) %679)
          to label %681 unwind label %657

; <label>:681:                                    ; preds = %670
  %682 = invoke i64 @_ZNSt3setISt4pairIxxESt4lessIS1_ESaIS1_EE5eraseERKS1_(%"class.std::set"* %680, %"struct.std::pair"* dereferenceable(16) %44)
          to label %683 unwind label %657

; <label>:683:                                    ; preds = %681
  br label %684

; <label>:684:                                    ; preds = %683
  %685 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %42) #3
  br label %668

; <label>:686:                                    ; preds = %668
  %687 = load i64, i64* %32, align 8
  %688 = srem i64 %687, 2
  %689 = call dereferenceable(48) %"class.std::map"* @_ZNSt6vectorISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EEixEm(%"class.std::vector.0"* %28, i64 %688) #3
  %690 = load i64, i64* %31, align 8
  %691 = call dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"* %19, i64 %690) #3
  %692 = getelementptr inbounds %struct.dat, %struct.dat* %691, i32 0, i32 2
  %693 = invoke dereferenceable(48) %"class.std::set"* @_ZNSt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEEixERS8_(%"class.std::map"* %689, i64* dereferenceable(8) %692)
          to label %694 unwind label %657

; <label>:694:                                    ; preds = %686
  %695 = load i64, i64* %31, align 8
  %696 = call dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"* %19, i64 %695) #3
  %697 = getelementptr inbounds %struct.dat, %struct.dat* %696, i32 0, i32 1
  %698 = load i64, i64* %31, align 8
  %699 = call dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"* %19, i64 %698) #3
  %700 = getelementptr inbounds %struct.dat, %struct.dat* %699, i32 0, i32 0
  %701 = invoke { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt3setISt4pairIxxESt4lessIS1_ESaIS1_EE7emplaceIJRxS7_EEES0_ISt23_Rb_tree_const_iteratorIS1_EbEDpOT_(%"class.std::set"* %693, i64* dereferenceable(8) %697, i64* dereferenceable(8) %700)
          to label %702 unwind label %657

; <label>:702:                                    ; preds = %694
  %703 = bitcast %"struct.std::pair.19"* %45 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %704 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %703, i32 0, i32 0
  %705 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %701, 0
  store %"struct.std::_Rb_tree_node_base"* %705, %"struct.std::_Rb_tree_node_base"** %704, align 8
  %706 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %703, i32 0, i32 1
  %707 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %701, 1
  store i8 %707, i8* %706, align 8
  %708 = load i64, i64* %17, align 8
  %709 = icmp slt i64 %708, 0
  br i1 %709, label %710, label %726

; <label>:710:                                    ; preds = %702
  %711 = load i64, i64* %17, align 8
  %712 = mul nsw i64 2, %711
  %713 = load i64, i64* %18, align 8
  %714 = invoke i64 @_ZSt3absx(i64 %713)
          to label %715 unwind label %657

; <label>:715:                                    ; preds = %710
  %716 = sub i64 %712, 5897463363250825648
  %717 = sub i64 %716, %714
  %718 = add i64 %717, 5897463363250825648
  %719 = sub nsw i64 %712, %714
  %720 = add i64 %718, -4373097964347099573
  %721 = add i64 %720, 1
  %722 = sub i64 %721, -4373097964347099573
  %723 = add nsw i64 %718, 1
  %724 = load i64, i64* %18, align 8
  %725 = sdiv i64 %722, %724
  store i64 %725, i64* %46, align 8
  br label %731

; <label>:726:                                    ; preds = %702
  %727 = load i64, i64* %17, align 8
  %728 = mul nsw i64 2, %727
  %729 = load i64, i64* %18, align 8
  %730 = sdiv i64 %728, %729
  store i64 %730, i64* %46, align 8
  br label %731

; <label>:731:                                    ; preds = %726, %715
  %732 = load i32, i32* @x.6
  %733 = load i32, i32* @y.7
  %734 = sub i32 %732, 9203601
  %735 = sub i32 %734, 1
  %736 = add i32 %735, 9203601
  %737 = sub i32 %732, 1
  %738 = mul i32 %732, %736
  %739 = urem i32 %738, 2
  %740 = icmp eq i32 %739, 0
  %741 = icmp slt i32 %733, 10
  %742 = xor i1 %740, true
  %743 = xor i1 %741, true
  %744 = xor i1 true, true
  %745 = and i1 %742, true
  %746 = and i1 %740, %744
  %747 = and i1 %743, true
  %748 = and i1 %741, %744
  %749 = or i1 %745, %746
  %750 = or i1 %747, %748
  %751 = xor i1 %749, %750
  %752 = or i1 %742, %743
  %753 = xor i1 %752, true
  %754 = or i1 true, %744
  %755 = and i1 %753, %754
  %756 = or i1 %751, %755
  %757 = or i1 %740, %741
  br i1 %756, label %758, label %1447

; <label>:758:                                    ; preds = %731, %1447
  %759 = load i64, i64* %17, align 8
  %760 = mul nsw i64 2, %759
  %761 = load i64, i64* %18, align 8
  %762 = load i64, i64* %46, align 8
  %763 = mul nsw i64 %761, %762
  %764 = sub i64 %760, -8165625445774948891
  %765 = sub i64 %764, %763
  %766 = add i64 %765, -8165625445774948891
  %767 = sub nsw i64 %760, %763
  store i64 %766, i64* %47, align 8
  %768 = load i64, i64* %31, align 8
  %769 = call dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"* %19, i64 %768) #3
  %770 = getelementptr inbounds %struct.dat, %struct.dat* %769, i32 0, i32 2
  %771 = load i64, i64* %770, align 8
  %772 = load i64, i64* %47, align 8
  %773 = add i64 %771, 5452695773828100977
  %774 = add i64 %773, %772
  %775 = sub i64 %774, 5452695773828100977
  %776 = add nsw i64 %771, %772
  %777 = load i64, i64* %18, align 8
  %778 = load i32, i32* @x.6
  %779 = load i32, i32* @y.7
  %780 = sub i32 %778, 1021920586
  %781 = sub i32 %780, 1
  %782 = add i32 %781, 1021920586
  %783 = sub i32 %778, 1
  %784 = mul i32 %778, %782
  %785 = urem i32 %784, 2
  %786 = icmp eq i32 %785, 0
  %787 = icmp slt i32 %779, 10
  %788 = and i1 %786, %787
  %789 = xor i1 %786, %787
  %790 = or i1 %788, %789
  %791 = or i1 %786, %787
  br i1 %790, label %792, label %1447

; <label>:792:                                    ; preds = %758
  %793 = invoke i64 @_ZSt3absx(i64 %777)
          to label %794 unwind label %657

; <label>:794:                                    ; preds = %792
  %795 = icmp sge i64 %775, %793
  br i1 %795, label %796, label %905

; <label>:796:                                    ; preds = %794
  %797 = load i32, i32* @x.6
  %798 = load i32, i32* @y.7
  %799 = sub i32 %797, -1558148304
  %800 = sub i32 %799, 1
  %801 = add i32 %800, -1558148304
  %802 = sub i32 %797, 1
  %803 = mul i32 %797, %801
  %804 = urem i32 %803, 2
  %805 = icmp eq i32 %804, 0
  %806 = icmp slt i32 %798, 10
  %807 = and i1 %805, %806
  %808 = xor i1 %805, %806
  %809 = or i1 %807, %808
  %810 = or i1 %805, %806
  br i1 %809, label %811, label %1555

; <label>:811:                                    ; preds = %796, %1555
  %812 = load i64, i64* %18, align 8
  %813 = icmp slt i64 %812, 0
  %814 = load i32, i32* @x.6
  %815 = load i32, i32* @y.7
  %816 = sub i32 0, 1
  %817 = add i32 %814, %816
  %818 = sub i32 %814, 1
  %819 = mul i32 %814, %817
  %820 = urem i32 %819, 2
  %821 = icmp eq i32 %820, 0
  %822 = icmp slt i32 %815, 10
  %823 = and i1 %821, %822
  %824 = xor i1 %821, %822
  %825 = or i1 %823, %824
  %826 = or i1 %821, %822
  br i1 %825, label %827, label %1555

; <label>:827:                                    ; preds = %811
  br i1 %813, label %828, label %833

; <label>:828:                                    ; preds = %827
  %829 = load i64, i64* %46, align 8
  %830 = sub i64 0, -1
  %831 = sub i64 %829, %830
  %832 = add nsw i64 %829, -1
  store i64 %831, i64* %46, align 8
  br label %881

; <label>:833:                                    ; preds = %827
  %834 = load i32, i32* @x.6
  %835 = load i32, i32* @y.7
  %836 = add i32 %834, -1353475778
  %837 = sub i32 %836, 1
  %838 = sub i32 %837, -1353475778
  %839 = sub i32 %834, 1
  %840 = mul i32 %834, %838
  %841 = urem i32 %840, 2
  %842 = icmp eq i32 %841, 0
  %843 = icmp slt i32 %835, 10
  %844 = xor i1 %842, true
  %845 = xor i1 %843, true
  %846 = xor i1 true, true
  %847 = and i1 %844, true
  %848 = and i1 %842, %846
  %849 = and i1 %845, true
  %850 = and i1 %843, %846
  %851 = or i1 %847, %848
  %852 = or i1 %849, %850
  %853 = xor i1 %851, %852
  %854 = or i1 %844, %845
  %855 = xor i1 %854, true
  %856 = or i1 true, %846
  %857 = and i1 %855, %856
  %858 = or i1 %853, %857
  %859 = or i1 %842, %843
  br i1 %858, label %860, label %1558

; <label>:860:                                    ; preds = %833, %1558
  %861 = load i64, i64* %46, align 8
  %862 = sub i64 %861, 5036848977970647393
  %863 = add i64 %862, 1
  %864 = add i64 %863, 5036848977970647393
  %865 = add nsw i64 %861, 1
  store i64 %864, i64* %46, align 8
  %866 = load i32, i32* @x.6
  %867 = load i32, i32* @y.7
  %868 = sub i32 %866, 1753309399
  %869 = sub i32 %868, 1
  %870 = add i32 %869, 1753309399
  %871 = sub i32 %866, 1
  %872 = mul i32 %866, %870
  %873 = urem i32 %872, 2
  %874 = icmp eq i32 %873, 0
  %875 = icmp slt i32 %867, 10
  %876 = and i1 %874, %875
  %877 = xor i1 %874, %875
  %878 = or i1 %876, %877
  %879 = or i1 %874, %875
  br i1 %878, label %880, label %1558

; <label>:880:                                    ; preds = %860
  br label %881

; <label>:881:                                    ; preds = %880, %828
  %882 = load i64, i64* %31, align 8
  %883 = call dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"* %19, i64 %882) #3
  %884 = getelementptr inbounds %struct.dat, %struct.dat* %883, i32 0, i32 2
  %885 = load i64, i64* %884, align 8
  %886 = load i64, i64* %47, align 8
  %887 = sub i64 %885, 5625402609520465994
  %888 = add i64 %887, %886
  %889 = add i64 %888, 5625402609520465994
  %890 = add nsw i64 %885, %886
  %891 = load i64, i64* %18, align 8
  %892 = invoke i64 @_ZSt3absx(i64 %891)
          to label %893 unwind label %657

; <label>:893:                                    ; preds = %881
  %894 = add i64 %889, -742831442780895851
  %895 = sub i64 %894, %892
  %896 = sub i64 %895, -742831442780895851
  %897 = sub nsw i64 %889, %892
  %898 = load i64, i64* %31, align 8
  %899 = sub i64 %898, -7199186165429693723
  %900 = add i64 %899, 1
  %901 = add i64 %900, -7199186165429693723
  %902 = add nsw i64 %898, 1
  %903 = call dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"* %19, i64 %901) #3
  %904 = getelementptr inbounds %struct.dat, %struct.dat* %903, i32 0, i32 2
  store i64 %896, i64* %904, align 8
  br label %978

; <label>:905:                                    ; preds = %794
  %906 = load i32, i32* @x.6
  %907 = load i32, i32* @y.7
  %908 = sub i32 %906, 858938009
  %909 = sub i32 %908, 1
  %910 = add i32 %909, 858938009
  %911 = sub i32 %906, 1
  %912 = mul i32 %906, %910
  %913 = urem i32 %912, 2
  %914 = icmp eq i32 %913, 0
  %915 = icmp slt i32 %907, 10
  %916 = xor i1 %914, true
  %917 = xor i1 %915, true
  %918 = xor i1 false, true
  %919 = and i1 %916, false
  %920 = and i1 %914, %918
  %921 = and i1 %917, false
  %922 = and i1 %915, %918
  %923 = or i1 %919, %920
  %924 = or i1 %921, %922
  %925 = xor i1 %923, %924
  %926 = or i1 %916, %917
  %927 = xor i1 %926, true
  %928 = or i1 false, %918
  %929 = and i1 %927, %928
  %930 = or i1 %925, %929
  %931 = or i1 %914, %915
  br i1 %930, label %932, label %1597

; <label>:932:                                    ; preds = %905, %1597
  %933 = load i64, i64* %31, align 8
  %934 = call dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"* %19, i64 %933) #3
  %935 = getelementptr inbounds %struct.dat, %struct.dat* %934, i32 0, i32 2
  %936 = load i64, i64* %935, align 8
  %937 = load i64, i64* %47, align 8
  %938 = sub i64 0, %936
  %939 = sub i64 0, %937
  %940 = add i64 %938, %939
  %941 = sub i64 0, %940
  %942 = add nsw i64 %936, %937
  %943 = load i64, i64* %31, align 8
  %944 = sub i64 0, %943
  %945 = sub i64 0, 1
  %946 = add i64 %944, %945
  %947 = sub i64 0, %946
  %948 = add nsw i64 %943, 1
  %949 = call dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"* %19, i64 %947) #3
  %950 = getelementptr inbounds %struct.dat, %struct.dat* %949, i32 0, i32 2
  store i64 %941, i64* %950, align 8
  %951 = load i32, i32* @x.6
  %952 = load i32, i32* @y.7
  %953 = sub i32 %951, -168898761
  %954 = sub i32 %953, 1
  %955 = add i32 %954, -168898761
  %956 = sub i32 %951, 1
  %957 = mul i32 %951, %955
  %958 = urem i32 %957, 2
  %959 = icmp eq i32 %958, 0
  %960 = icmp slt i32 %952, 10
  %961 = xor i1 %959, true
  %962 = xor i1 %960, true
  %963 = xor i1 false, true
  %964 = and i1 %961, false
  %965 = and i1 %959, %963
  %966 = and i1 %962, false
  %967 = and i1 %960, %963
  %968 = or i1 %964, %965
  %969 = or i1 %966, %967
  %970 = xor i1 %968, %969
  %971 = or i1 %961, %962
  %972 = xor i1 %971, true
  %973 = or i1 false, %963
  %974 = and i1 %972, %973
  %975 = or i1 %970, %974
  %976 = or i1 %959, %960
  br i1 %975, label %977, label %1597

; <label>:977:                                    ; preds = %932
  br label %978

; <label>:978:                                    ; preds = %977, %893
  %979 = load i64, i64* %46, align 8
  %980 = load i64, i64* %30, align 8
  %981 = sub i64 0, %980
  %982 = sub i64 0, %979
  %983 = add i64 %981, %982
  %984 = sub i64 0, %983
  %985 = add nsw i64 %980, %979
  store i64 %984, i64* %30, align 8
  %986 = load i64, i64* %30, align 8
  %987 = load i64, i64* %31, align 8
  %988 = sub i64 0, 1
  %989 = sub i64 %987, %988
  %990 = add nsw i64 %987, 1
  %991 = call dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"* %19, i64 %989) #3
  %992 = getelementptr inbounds %struct.dat, %struct.dat* %991, i32 0, i32 0
  %993 = load i64, i64* %992, align 8
  %994 = sub i64 0, %986
  %995 = sub i64 %993, %994
  %996 = add nsw i64 %993, %986
  store i64 %995, i64* %992, align 8
  %997 = load i64, i64* %30, align 8
  %998 = load i64, i64* %31, align 8
  %999 = sub i64 0, %998
  %1000 = sub i64 0, 1
  %1001 = add i64 %999, %1000
  %1002 = sub i64 0, %1001
  %1003 = add nsw i64 %998, 1
  %1004 = call dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"* %19, i64 %1002) #3
  %1005 = getelementptr inbounds %struct.dat, %struct.dat* %1004, i32 0, i32 1
  %1006 = load i64, i64* %1005, align 8
  %1007 = sub i64 %1006, -7616781051907517213
  %1008 = add i64 %1007, %997
  %1009 = add i64 %1008, -7616781051907517213
  %1010 = add nsw i64 %1006, %997
  store i64 %1009, i64* %1005, align 8
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EED2Ev(%"class.std::vector.14"* %38) #3
  br label %1011

; <label>:1011:                                   ; preds = %978
  %1012 = load i32, i32* @x.6
  %1013 = load i32, i32* @y.7
  %1014 = sub i32 0, 1
  %1015 = add i32 %1012, %1014
  %1016 = sub i32 %1012, 1
  %1017 = mul i32 %1012, %1015
  %1018 = urem i32 %1017, 2
  %1019 = icmp eq i32 %1018, 0
  %1020 = icmp slt i32 %1013, 10
  %1021 = and i1 %1019, %1020
  %1022 = xor i1 %1019, %1020
  %1023 = or i1 %1021, %1022
  %1024 = or i1 %1019, %1020
  br i1 %1023, label %1025, label %1641

; <label>:1025:                                   ; preds = %1011, %1641
  %1026 = load i64, i64* %31, align 8
  %1027 = sub i64 %1026, -5860300266552178324
  %1028 = add i64 %1027, 1
  %1029 = add i64 %1028, -5860300266552178324
  %1030 = add nsw i64 %1026, 1
  store i64 %1029, i64* %31, align 8
  %1031 = load i32, i32* @x.6
  %1032 = load i32, i32* @y.7
  %1033 = add i32 %1031, -2045415682
  %1034 = sub i32 %1033, 1
  %1035 = sub i32 %1034, -2045415682
  %1036 = sub i32 %1031, 1
  %1037 = mul i32 %1031, %1035
  %1038 = urem i32 %1037, 2
  %1039 = icmp eq i32 %1038, 0
  %1040 = icmp slt i32 %1032, 10
  %1041 = xor i1 %1039, true
  %1042 = xor i1 %1040, true
  %1043 = xor i1 true, true
  %1044 = and i1 %1041, true
  %1045 = and i1 %1039, %1043
  %1046 = and i1 %1042, true
  %1047 = and i1 %1040, %1043
  %1048 = or i1 %1044, %1045
  %1049 = or i1 %1046, %1047
  %1050 = xor i1 %1048, %1049
  %1051 = or i1 %1041, %1042
  %1052 = xor i1 %1051, true
  %1053 = or i1 true, %1043
  %1054 = and i1 %1052, %1053
  %1055 = or i1 %1050, %1054
  %1056 = or i1 %1039, %1040
  br i1 %1055, label %1057, label %1641

; <label>:1057:                                   ; preds = %1025
  br label %411

; <label>:1058:                                   ; preds = %411
  %1059 = load i64, i64* %26, align 8
  %1060 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* @_ZSt4cout, i64 %1059)
          to label %1061 unwind label %653

; <label>:1061:                                   ; preds = %1058
  %1062 = load i32, i32* @x.6
  %1063 = load i32, i32* @y.7
  %1064 = sub i32 0, 1
  %1065 = add i32 %1062, %1064
  %1066 = sub i32 %1062, 1
  %1067 = mul i32 %1062, %1065
  %1068 = urem i32 %1067, 2
  %1069 = icmp eq i32 %1068, 0
  %1070 = icmp slt i32 %1063, 10
  %1071 = xor i1 %1069, true
  %1072 = xor i1 %1070, true
  %1073 = xor i1 true, true
  %1074 = and i1 %1071, true
  %1075 = and i1 %1069, %1073
  %1076 = and i1 %1072, true
  %1077 = and i1 %1070, %1073
  %1078 = or i1 %1074, %1075
  %1079 = or i1 %1076, %1077
  %1080 = xor i1 %1078, %1079
  %1081 = or i1 %1071, %1072
  %1082 = xor i1 %1081, true
  %1083 = or i1 true, %1073
  %1084 = and i1 %1082, %1083
  %1085 = or i1 %1080, %1084
  %1086 = or i1 %1069, %1070
  br i1 %1085, label %1087, label %1674

; <label>:1087:                                   ; preds = %1061, %1674
  %1088 = load i32, i32* @x.6
  %1089 = load i32, i32* @y.7
  %1090 = sub i32 0, 1
  %1091 = add i32 %1088, %1090
  %1092 = sub i32 %1088, 1
  %1093 = mul i32 %1088, %1091
  %1094 = urem i32 %1093, 2
  %1095 = icmp eq i32 %1094, 0
  %1096 = icmp slt i32 %1089, 10
  %1097 = xor i1 %1095, true
  %1098 = xor i1 %1096, true
  %1099 = xor i1 true, true
  %1100 = and i1 %1097, true
  %1101 = and i1 %1095, %1099
  %1102 = and i1 %1098, true
  %1103 = and i1 %1096, %1099
  %1104 = or i1 %1100, %1101
  %1105 = or i1 %1102, %1103
  %1106 = xor i1 %1104, %1105
  %1107 = or i1 %1097, %1098
  %1108 = xor i1 %1107, true
  %1109 = or i1 true, %1099
  %1110 = and i1 %1108, %1109
  %1111 = or i1 %1106, %1110
  %1112 = or i1 %1095, %1096
  br i1 %1111, label %1113, label %1674

; <label>:1113:                                   ; preds = %1087
  %1114 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %1060, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %1115 unwind label %653

; <label>:1115:                                   ; preds = %1113
  call void @_ZNSt6vectorISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EED2Ev(%"class.std::vector.0"* %28) #3
  call void @_ZNSt6vectorI3datSaIS0_EED2Ev(%"class.std::vector"* %19) #3
  br label %1116

; <label>:1116:                                   ; preds = %1115, %231
  %1117 = load i32, i32* %15, align 4
  ret i32 %1117

; <label>:1118:                                   ; preds = %657, %653
  call void @_ZNSt6vectorISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EED2Ev(%"class.std::vector.0"* %28) #3
  br label %1119

; <label>:1119:                                   ; preds = %1118, %649
  call void @_ZNSt6vectorI3datSaIS0_EED2Ev(%"class.std::vector"* %19) #3
  br label %1120

; <label>:1120:                                   ; preds = %1119, %403
  %1121 = load i8*, i8** %21, align 8
  %1122 = load i32, i32* %22, align 4
  %1123 = insertvalue { i8*, i32 } undef, i8* %1121, 0
  %1124 = insertvalue { i8*, i32 } %1123, i32 %1122, 1
  resume { i8*, i32 } %1124

; <label>:1125:                                   ; preds = %14, %0
  %1126 = alloca i32, align 4
  %1127 = alloca i64, align 8
  %1128 = alloca i64, align 8
  %1129 = alloca i64, align 8
  %1130 = alloca %"class.std::vector", align 8
  %1131 = alloca %"class.std::allocator", align 1
  %1132 = alloca i8*
  %1133 = alloca i32
  %1134 = alloca i64, align 8
  %1135 = alloca i64, align 8
  %1136 = alloca i64, align 8
  %1137 = alloca i64, align 8
  %1138 = alloca i64, align 8
  %1139 = alloca %"class.std::vector.0", align 8
  %1140 = alloca %"class.std::allocator.2", align 1
  %1141 = alloca i64, align 8
  %1142 = alloca i64, align 8
  %1143 = alloca i64, align 8
  %1144 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %1145 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %1146 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %1147 = alloca %"struct.std::pair", align 8
  %1148 = alloca i32, align 4
  %1149 = alloca %"class.std::vector.14", align 8
  %1150 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %1151 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %1152 = alloca %"class.std::vector.14"*, align 8
  %1153 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %1154 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %1155 = alloca %"struct.std::pair", align 8
  %1156 = alloca %"struct.std::pair.19", align 8
  %1157 = alloca i64, align 8
  %1158 = alloca i64, align 8
  store i32 0, i32* %1126, align 4
  %1159 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) %1127)
  %1160 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %1159, i64* dereferenceable(8) %1128)
  %1161 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %1160, i64* dereferenceable(8) %1129)
  %1162 = load i64, i64* %1129, align 8
  %1163 = icmp eq i64 %1162, 0
  br label %14

; <label>:1164:                                   ; preds = %98, %71
  %1165 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* @_ZSt4cout, i32 1)
  %1166 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %1165, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %98

; <label>:1167:                                   ; preds = %155, %128
  %1168 = load i64, i64* %16, align 8
  %1169 = shl i64 %1168, 1
  %1170 = sub i64 %1168, 1679946155164742455
  %1171 = add i64 %1170, 1
  %1172 = add i64 %1171, 1679946155164742455
  %1173 = add nsw i64 %1168, 1
  %1174 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* @_ZSt4cout, i64 %1172)
  %1175 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %1174, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %155

; <label>:1176:                                   ; preds = %204, %177
  store i32 0, i32* %15, align 4
  br label %204

; <label>:1177:                                   ; preds = %269, %254
  %1178 = load i64, i64* %27, align 8
  %1179 = load i64, i64* %16, align 8
  %1180 = shl i64 %1179, 1
  %1181 = shl i64 %1179, 1
  %1182 = add i64 0, 7973785343080079515
  %1183 = sub i64 %1182, %1179
  %1184 = sub i64 %1183, 7973785343080079515
  %1185 = sub i64 0, %1179
  %1186 = sub i64 0, %1184
  %1187 = sub i64 0, 1
  %1188 = add i64 %1186, %1187
  %1189 = sub i64 0, %1188
  %1190 = add i64 %1184, 1
  %1191 = sub i64 0, %1179
  %1192 = add i64 0, %1191
  %1193 = sub i64 0, %1179
  %1194 = sub i64 0, 1
  %1195 = sub i64 %1192, %1194
  %1196 = add i64 %1192, 1
  %1197 = shl i64 %1179, 1
  %1198 = add i64 %1179, 2310888202517952819
  %1199 = add i64 %1198, 1
  %1200 = sub i64 %1199, 2310888202517952819
  %1201 = add nsw i64 %1179, 1
  %1202 = icmp slt i64 %1178, %1200
  br label %269

; <label>:1203:                                   ; preds = %319, %292
  %1204 = load i64, i64* %27, align 8
  %1205 = load i64, i64* %27, align 8
  %1206 = add i64 %1205, 558300600346417507
  %1207 = sub i64 %1206, 1
  %1208 = sub i64 %1207, 558300600346417507
  %1209 = sub i64 %1205, 1
  %1210 = mul i64 %1208, 1
  %1211 = sub i64 0, 1
  %1212 = add i64 %1205, %1211
  %1213 = sub i64 %1205, 1
  %1214 = mul i64 %1212, 1
  %1215 = sub i64 0, 1
  %1216 = add i64 %1205, %1215
  %1217 = sub nsw i64 %1205, 1
  %1218 = shl i64 %1204, %1216
  %1219 = sub i64 0, %1216
  %1220 = add i64 %1204, %1219
  %1221 = sub i64 %1204, %1216
  %1222 = mul i64 %1220, %1216
  %1223 = mul nsw i64 %1204, %1216
  %1224 = load i64, i64* %23, align 8
  %1225 = add i64 %1223, 215134319426643144
  %1226 = sub i64 %1225, %1224
  %1227 = sub i64 %1226, 215134319426643144
  %1228 = sub i64 %1223, %1224
  %1229 = mul i64 %1227, %1224
  %1230 = shl i64 %1223, %1224
  %1231 = shl i64 %1223, %1224
  %1232 = add i64 %1223, 7085246181914092636
  %1233 = sub i64 %1232, %1224
  %1234 = sub i64 %1233, 7085246181914092636
  %1235 = sub i64 %1223, %1224
  %1236 = mul i64 %1234, %1224
  %1237 = shl i64 %1223, %1224
  %1238 = sub i64 0, %1224
  %1239 = add i64 %1223, %1238
  %1240 = sub nsw i64 %1223, %1224
  %1241 = load i64, i64* %27, align 8
  %1242 = call dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"* %19, i64 %1241) #3
  %1243 = getelementptr inbounds %struct.dat, %struct.dat* %1242, i32 0, i32 0
  store i64 %1239, i64* %1243, align 8
  %1244 = load i64, i64* %23, align 8
  %1245 = load i64, i64* %16, align 8
  %1246 = load i64, i64* %27, align 8
  %1247 = shl i64 %1245, %1246
  %1248 = shl i64 %1245, %1246
  %1249 = add i64 0, 8530622164857112320
  %1250 = sub i64 %1249, %1245
  %1251 = sub i64 %1250, 8530622164857112320
  %1252 = sub i64 0, %1245
  %1253 = sub i64 0, %1246
  %1254 = sub i64 %1251, %1253
  %1255 = add i64 %1251, %1246
  %1256 = sub i64 %1245, 6617334002212863044
  %1257 = sub i64 %1256, %1246
  %1258 = add i64 %1257, 6617334002212863044
  %1259 = sub i64 %1245, %1246
  %1260 = mul i64 %1258, %1246
  %1261 = sub i64 0, %1246
  %1262 = add i64 %1245, %1261
  %1263 = sub nsw i64 %1245, %1246
  %1264 = load i64, i64* %16, align 8
  %1265 = load i64, i64* %27, align 8
  %1266 = sub i64 0, %1265
  %1267 = add i64 %1264, %1266
  %1268 = sub i64 %1264, %1265
  %1269 = mul i64 %1267, %1265
  %1270 = sub i64 0, 2477668798248852052
  %1271 = sub i64 %1270, %1264
  %1272 = add i64 %1271, 2477668798248852052
  %1273 = sub i64 0, %1264
  %1274 = sub i64 0, %1265
  %1275 = sub i64 %1272, %1274
  %1276 = add i64 %1272, %1265
  %1277 = sub i64 0, 4043856837607361124
  %1278 = sub i64 %1277, %1264
  %1279 = add i64 %1278, 4043856837607361124
  %1280 = sub i64 0, %1264
  %1281 = sub i64 0, %1279
  %1282 = sub i64 0, %1265
  %1283 = add i64 %1281, %1282
  %1284 = sub i64 0, %1283
  %1285 = add i64 %1279, %1265
  %1286 = sub i64 0, -3869057774131723663
  %1287 = sub i64 %1286, %1264
  %1288 = add i64 %1287, -3869057774131723663
  %1289 = sub i64 0, %1264
  %1290 = sub i64 %1288, 6193694972803742485
  %1291 = add i64 %1290, %1265
  %1292 = add i64 %1291, 6193694972803742485
  %1293 = add i64 %1288, %1265
  %1294 = sub i64 %1264, -7539139766780736921
  %1295 = sub i64 %1294, %1265
  %1296 = add i64 %1295, -7539139766780736921
  %1297 = sub nsw i64 %1264, %1265
  %1298 = shl i64 %1296, 1
  %1299 = sub i64 0, -3976715755858782018
  %1300 = sub i64 %1299, %1296
  %1301 = add i64 %1300, -3976715755858782018
  %1302 = sub i64 0, %1296
  %1303 = sub i64 0, %1301
  %1304 = sub i64 0, 1
  %1305 = add i64 %1303, %1304
  %1306 = sub i64 0, %1305
  %1307 = add i64 %1301, 1
  %1308 = sub i64 0, %1296
  %1309 = add i64 0, %1308
  %1310 = sub i64 0, %1296
  %1311 = sub i64 0, 1
  %1312 = sub i64 %1309, %1311
  %1313 = add i64 %1309, 1
  %1314 = sub i64 0, %1296
  %1315 = add i64 0, %1314
  %1316 = sub i64 0, %1296
  %1317 = sub i64 0, 1
  %1318 = sub i64 %1315, %1317
  %1319 = add i64 %1315, 1
  %1320 = sub i64 %1296, 8405321366351762780
  %1321 = sub i64 %1320, 1
  %1322 = add i64 %1321, 8405321366351762780
  %1323 = sub nsw i64 %1296, 1
  %1324 = shl i64 %1262, %1322
  %1325 = shl i64 %1262, %1322
  %1326 = mul nsw i64 %1262, %1322
  %1327 = sub i64 %1244, 1446630407468242235
  %1328 = sub i64 %1327, %1326
  %1329 = add i64 %1328, 1446630407468242235
  %1330 = sub i64 %1244, %1326
  %1331 = mul i64 %1329, %1326
  %1332 = shl i64 %1244, %1326
  %1333 = shl i64 %1244, %1326
  %1334 = shl i64 %1244, %1326
  %1335 = sub i64 0, %1326
  %1336 = add i64 %1244, %1335
  %1337 = sub nsw i64 %1244, %1326
  %1338 = load i64, i64* %27, align 8
  %1339 = call dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"* %19, i64 %1338) #3
  %1340 = getelementptr inbounds %struct.dat, %struct.dat* %1339, i32 0, i32 1
  store i64 %1336, i64* %1340, align 8
  %1341 = load i64, i64* %27, align 8
  %1342 = call dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"* %19, i64 %1341) #3
  %1343 = getelementptr inbounds %struct.dat, %struct.dat* %1342, i32 0, i32 1
  %1344 = load i64, i64* %1343, align 8
  %1345 = load i64, i64* %27, align 8
  %1346 = call dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"* %19, i64 %1345) #3
  %1347 = getelementptr inbounds %struct.dat, %struct.dat* %1346, i32 0, i32 0
  %1348 = load i64, i64* %1347, align 8
  %1349 = shl i64 %1344, %1348
  %1350 = sub i64 %1344, -5354011408063328913
  %1351 = sub i64 %1350, %1348
  %1352 = add i64 %1351, -5354011408063328913
  %1353 = sub i64 %1344, %1348
  %1354 = mul i64 %1352, %1348
  %1355 = add i64 %1344, -6634213207114653554
  %1356 = sub i64 %1355, %1348
  %1357 = sub i64 %1356, -6634213207114653554
  %1358 = sub nsw i64 %1344, %1348
  %1359 = sub i64 %1357, -1276512357759041504
  %1360 = sub i64 %1359, 2
  %1361 = add i64 %1360, -1276512357759041504
  %1362 = sub i64 %1357, 2
  %1363 = mul i64 %1361, 2
  %1364 = add i64 0, -5566625737502190351
  %1365 = sub i64 %1364, %1357
  %1366 = sub i64 %1365, -5566625737502190351
  %1367 = sub i64 0, %1357
  %1368 = sub i64 0, 2
  %1369 = sub i64 %1366, %1368
  %1370 = add i64 %1366, 2
  %1371 = sdiv i64 %1357, 2
  %1372 = sub i64 0, -3577777958219835197
  %1373 = sub i64 %1372, %1371
  %1374 = add i64 %1373, -3577777958219835197
  %1375 = sub i64 0, %1371
  %1376 = sub i64 %1374, -5436499020029490494
  %1377 = add i64 %1376, 1
  %1378 = add i64 %1377, -5436499020029490494
  %1379 = add i64 %1374, 1
  %1380 = shl i64 %1371, 1
  %1381 = shl i64 %1371, 1
  %1382 = add i64 %1371, 7703303363741642457
  %1383 = add i64 %1382, 1
  %1384 = sub i64 %1383, 7703303363741642457
  %1385 = add nsw i64 %1371, 1
  %1386 = load i64, i64* %26, align 8
  %1387 = shl i64 %1386, %1384
  %1388 = sub i64 0, -4919673253402658636
  %1389 = sub i64 %1388, %1386
  %1390 = add i64 %1389, -4919673253402658636
  %1391 = sub i64 0, %1386
  %1392 = add i64 %1390, -1258095040574060490
  %1393 = add i64 %1392, %1384
  %1394 = sub i64 %1393, -1258095040574060490
  %1395 = add i64 %1390, %1384
  %1396 = sub i64 0, %1386
  %1397 = add i64 0, %1396
  %1398 = sub i64 0, %1386
  %1399 = sub i64 0, %1384
  %1400 = sub i64 %1397, %1399
  %1401 = add i64 %1397, %1384
  %1402 = sub i64 0, %1386
  %1403 = add i64 0, %1402
  %1404 = sub i64 0, %1386
  %1405 = sub i64 0, %1384
  %1406 = sub i64 %1403, %1405
  %1407 = add i64 %1403, %1384
  %1408 = shl i64 %1386, %1384
  %1409 = shl i64 %1386, %1384
  %1410 = sub i64 %1386, -5844605547244056940
  %1411 = sub i64 %1410, %1384
  %1412 = add i64 %1411, -5844605547244056940
  %1413 = sub i64 %1386, %1384
  %1414 = mul i64 %1412, %1384
  %1415 = sub i64 0, %1384
  %1416 = add i64 %1386, %1415
  %1417 = sub i64 %1386, %1384
  %1418 = mul i64 %1416, %1384
  %1419 = sub i64 0, %1384
  %1420 = sub i64 %1386, %1419
  %1421 = add nsw i64 %1386, %1384
  store i64 %1420, i64* %26, align 8
  br label %319

; <label>:1422:                                   ; preds = %446, %432
  %1423 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt3setISt4pairIxxESt4lessIS1_ESaIS1_EE5beginEv(%"class.std::set"* %431) #3
  %1424 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %34, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1423, %"struct.std::_Rb_tree_node_base"** %1424, align 8
  %1425 = load i64, i64* %32, align 8
  %1426 = sub i64 0, 1742105491891943134
  %1427 = sub i64 %1426, %1425
  %1428 = add i64 %1427, 1742105491891943134
  %1429 = sub i64 0, %1425
  %1430 = sub i64 0, 2
  %1431 = sub i64 %1428, %1430
  %1432 = add i64 %1428, 2
  %1433 = shl i64 %1425, 2
  %1434 = shl i64 %1425, 2
  %1435 = shl i64 %1425, 2
  %1436 = shl i64 %1425, 2
  %1437 = srem i64 %1425, 2
  %1438 = call dereferenceable(48) %"class.std::map"* @_ZNSt6vectorISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EEixEm(%"class.std::vector.0"* %28, i64 %1437) #3
  %1439 = load i64, i64* %31, align 8
  %1440 = call dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"* %19, i64 %1439) #3
  %1441 = getelementptr inbounds %struct.dat, %struct.dat* %1440, i32 0, i32 2
  br label %446

; <label>:1442:                                   ; preds = %521, %495
  %1443 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %33, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %494, %"struct.std::_Rb_tree_node_base"** %1443, align 8
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EEC2Ev(%"class.std::vector.14"* %38) #3
  br label %521

; <label>:1444:                                   ; preds = %631, %604
  %1445 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt23_Rb_tree_const_iteratorISt4pairIxxEEppEi(%"struct.std::_Rb_tree_const_iterator"* %33, i32 0) #3
  %1446 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %40, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1445, %"struct.std::_Rb_tree_node_base"** %1446, align 8
  br label %631

; <label>:1447:                                   ; preds = %758, %731
  %1448 = load i64, i64* %17, align 8
  %1449 = shl i64 2, %1448
  %1450 = shl i64 2, %1448
  %1451 = add i64 0, -3228185384881150901
  %1452 = sub i64 %1451, 2
  %1453 = sub i64 %1452, -3228185384881150901
  %1454 = sub i64 0, 2
  %1455 = add i64 %1453, 3589723849231496910
  %1456 = add i64 %1455, %1448
  %1457 = sub i64 %1456, 3589723849231496910
  %1458 = add i64 %1453, %1448
  %1459 = sub i64 0, 6020588757988368476
  %1460 = sub i64 %1459, 2
  %1461 = add i64 %1460, 6020588757988368476
  %1462 = sub i64 0, 2
  %1463 = sub i64 0, %1461
  %1464 = sub i64 0, %1448
  %1465 = add i64 %1463, %1464
  %1466 = sub i64 0, %1465
  %1467 = add i64 %1461, %1448
  %1468 = add i64 2, 9113006645726755740
  %1469 = sub i64 %1468, %1448
  %1470 = sub i64 %1469, 9113006645726755740
  %1471 = sub i64 2, %1448
  %1472 = mul i64 %1470, %1448
  %1473 = sub i64 0, 2
  %1474 = add i64 0, %1473
  %1475 = sub i64 0, 2
  %1476 = add i64 %1474, -6544741437094098039
  %1477 = add i64 %1476, %1448
  %1478 = sub i64 %1477, -6544741437094098039
  %1479 = add i64 %1474, %1448
  %1480 = shl i64 2, %1448
  %1481 = mul nsw i64 2, %1448
  %1482 = load i64, i64* %18, align 8
  %1483 = load i64, i64* %46, align 8
  %1484 = sub i64 0, %1482
  %1485 = add i64 0, %1484
  %1486 = sub i64 0, %1482
  %1487 = add i64 %1485, 3702393222135626000
  %1488 = add i64 %1487, %1483
  %1489 = sub i64 %1488, 3702393222135626000
  %1490 = add i64 %1485, %1483
  %1491 = shl i64 %1482, %1483
  %1492 = shl i64 %1482, %1483
  %1493 = mul nsw i64 %1482, %1483
  %1494 = sub i64 0, %1493
  %1495 = add i64 %1481, %1494
  %1496 = sub i64 %1481, %1493
  %1497 = mul i64 %1495, %1493
  %1498 = shl i64 %1481, %1493
  %1499 = sub i64 %1481, 3943738634382450626
  %1500 = sub i64 %1499, %1493
  %1501 = add i64 %1500, 3943738634382450626
  %1502 = sub i64 %1481, %1493
  %1503 = mul i64 %1501, %1493
  %1504 = sub i64 0, %1481
  %1505 = add i64 0, %1504
  %1506 = sub i64 0, %1481
  %1507 = sub i64 0, %1493
  %1508 = sub i64 %1505, %1507
  %1509 = add i64 %1505, %1493
  %1510 = sub i64 0, %1493
  %1511 = add i64 %1481, %1510
  %1512 = sub i64 %1481, %1493
  %1513 = mul i64 %1511, %1493
  %1514 = shl i64 %1481, %1493
  %1515 = sub i64 %1481, 7797392798121195668
  %1516 = sub i64 %1515, %1493
  %1517 = add i64 %1516, 7797392798121195668
  %1518 = sub i64 %1481, %1493
  %1519 = mul i64 %1517, %1493
  %1520 = sub i64 0, -8778747020539818418
  %1521 = sub i64 %1520, %1481
  %1522 = add i64 %1521, -8778747020539818418
  %1523 = sub i64 0, %1481
  %1524 = add i64 %1522, -5519940745525111764
  %1525 = add i64 %1524, %1493
  %1526 = sub i64 %1525, -5519940745525111764
  %1527 = add i64 %1522, %1493
  %1528 = sub i64 0, %1493
  %1529 = add i64 %1481, %1528
  %1530 = sub nsw i64 %1481, %1493
  store i64 %1529, i64* %47, align 8
  %1531 = load i64, i64* %31, align 8
  %1532 = call dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"* %19, i64 %1531) #3
  %1533 = getelementptr inbounds %struct.dat, %struct.dat* %1532, i32 0, i32 2
  %1534 = load i64, i64* %1533, align 8
  %1535 = load i64, i64* %47, align 8
  %1536 = sub i64 0, %1534
  %1537 = add i64 0, %1536
  %1538 = sub i64 0, %1534
  %1539 = sub i64 %1537, -3415476360032709589
  %1540 = add i64 %1539, %1535
  %1541 = add i64 %1540, -3415476360032709589
  %1542 = add i64 %1537, %1535
  %1543 = add i64 0, -5065488299957446350
  %1544 = sub i64 %1543, %1534
  %1545 = sub i64 %1544, -5065488299957446350
  %1546 = sub i64 0, %1534
  %1547 = sub i64 %1545, 1369514576086478716
  %1548 = add i64 %1547, %1535
  %1549 = add i64 %1548, 1369514576086478716
  %1550 = add i64 %1545, %1535
  %1551 = sub i64 0, %1535
  %1552 = sub i64 %1534, %1551
  %1553 = add nsw i64 %1534, %1535
  %1554 = load i64, i64* %18, align 8
  br label %758

; <label>:1555:                                   ; preds = %811, %796
  %1556 = load i64, i64* %18, align 8
  %1557 = icmp slt i64 %1556, 0
  br label %811

; <label>:1558:                                   ; preds = %860, %833
  %1559 = load i64, i64* %46, align 8
  %1560 = add i64 0, -5119098000108318474
  %1561 = sub i64 %1560, %1559
  %1562 = sub i64 %1561, -5119098000108318474
  %1563 = sub i64 0, %1559
  %1564 = add i64 %1562, 6132810360484772488
  %1565 = add i64 %1564, 1
  %1566 = sub i64 %1565, 6132810360484772488
  %1567 = add i64 %1562, 1
  %1568 = sub i64 0, -8383489817014014408
  %1569 = sub i64 %1568, %1559
  %1570 = add i64 %1569, -8383489817014014408
  %1571 = sub i64 0, %1559
  %1572 = sub i64 %1570, -3134153331252306337
  %1573 = add i64 %1572, 1
  %1574 = add i64 %1573, -3134153331252306337
  %1575 = add i64 %1570, 1
  %1576 = sub i64 0, %1559
  %1577 = add i64 0, %1576
  %1578 = sub i64 0, %1559
  %1579 = add i64 %1577, 7505913388763375081
  %1580 = add i64 %1579, 1
  %1581 = sub i64 %1580, 7505913388763375081
  %1582 = add i64 %1577, 1
  %1583 = shl i64 %1559, 1
  %1584 = sub i64 0, 1
  %1585 = add i64 %1559, %1584
  %1586 = sub i64 %1559, 1
  %1587 = mul i64 %1585, 1
  %1588 = add i64 %1559, 2472994638817572950
  %1589 = sub i64 %1588, 1
  %1590 = sub i64 %1589, 2472994638817572950
  %1591 = sub i64 %1559, 1
  %1592 = mul i64 %1590, 1
  %1593 = sub i64 %1559, -6974241764816719738
  %1594 = add i64 %1593, 1
  %1595 = add i64 %1594, -6974241764816719738
  %1596 = add nsw i64 %1559, 1
  store i64 %1595, i64* %46, align 8
  br label %860

; <label>:1597:                                   ; preds = %932, %905
  %1598 = load i64, i64* %31, align 8
  %1599 = call dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"* %19, i64 %1598) #3
  %1600 = getelementptr inbounds %struct.dat, %struct.dat* %1599, i32 0, i32 2
  %1601 = load i64, i64* %1600, align 8
  %1602 = load i64, i64* %47, align 8
  %1603 = shl i64 %1601, %1602
  %1604 = sub i64 %1601, -2445043064800601693
  %1605 = sub i64 %1604, %1602
  %1606 = add i64 %1605, -2445043064800601693
  %1607 = sub i64 %1601, %1602
  %1608 = mul i64 %1606, %1602
  %1609 = sub i64 0, %1602
  %1610 = sub i64 %1601, %1609
  %1611 = add nsw i64 %1601, %1602
  %1612 = load i64, i64* %31, align 8
  %1613 = sub i64 0, %1612
  %1614 = add i64 0, %1613
  %1615 = sub i64 0, %1612
  %1616 = sub i64 %1614, 2176446711008723734
  %1617 = add i64 %1616, 1
  %1618 = add i64 %1617, 2176446711008723734
  %1619 = add i64 %1614, 1
  %1620 = add i64 %1612, -6168102308428376542
  %1621 = sub i64 %1620, 1
  %1622 = sub i64 %1621, -6168102308428376542
  %1623 = sub i64 %1612, 1
  %1624 = mul i64 %1622, 1
  %1625 = add i64 %1612, 1983875683897965993
  %1626 = sub i64 %1625, 1
  %1627 = sub i64 %1626, 1983875683897965993
  %1628 = sub i64 %1612, 1
  %1629 = mul i64 %1627, 1
  %1630 = sub i64 0, 1
  %1631 = add i64 %1612, %1630
  %1632 = sub i64 %1612, 1
  %1633 = mul i64 %1631, 1
  %1634 = sub i64 0, %1612
  %1635 = sub i64 0, 1
  %1636 = add i64 %1634, %1635
  %1637 = sub i64 0, %1636
  %1638 = add nsw i64 %1612, 1
  %1639 = call dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"* %19, i64 %1637) #3
  %1640 = getelementptr inbounds %struct.dat, %struct.dat* %1639, i32 0, i32 2
  store i64 %1610, i64* %1640, align 8
  br label %932

; <label>:1641:                                   ; preds = %1025, %1011
  %1642 = load i64, i64* %31, align 8
  %1643 = sub i64 %1642, 6582084651705705525
  %1644 = sub i64 %1643, 1
  %1645 = add i64 %1644, 6582084651705705525
  %1646 = sub i64 %1642, 1
  %1647 = mul i64 %1645, 1
  %1648 = sub i64 0, 4116758261866273595
  %1649 = sub i64 %1648, %1642
  %1650 = add i64 %1649, 4116758261866273595
  %1651 = sub i64 0, %1642
  %1652 = sub i64 0, 1
  %1653 = sub i64 %1650, %1652
  %1654 = add i64 %1650, 1
  %1655 = sub i64 %1642, -5375256987521410006
  %1656 = sub i64 %1655, 1
  %1657 = add i64 %1656, -5375256987521410006
  %1658 = sub i64 %1642, 1
  %1659 = mul i64 %1657, 1
  %1660 = sub i64 %1642, 4242364710435278030
  %1661 = sub i64 %1660, 1
  %1662 = add i64 %1661, 4242364710435278030
  %1663 = sub i64 %1642, 1
  %1664 = mul i64 %1662, 1
  %1665 = add i64 %1642, -805685526971671722
  %1666 = sub i64 %1665, 1
  %1667 = sub i64 %1666, -805685526971671722
  %1668 = sub i64 %1642, 1
  %1669 = mul i64 %1667, 1
  %1670 = shl i64 %1642, 1
  %1671 = sub i64 0, 1
  %1672 = sub i64 %1642, %1671
  %1673 = add nsw i64 %1642, 1
  store i64 %1672, i64* %31, align 8
  br label %1025

; <label>:1674:                                   ; preds = %1087, %1061
  br label %1087
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI3datEC2Ev(%"class.std::allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorI3datEC2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI3datSaIS0_EEC2EmRKS1_(%"class.std::vector"*, i64, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %9 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %10 = bitcast %"class.std::vector"* %9 to %"struct.std::_Vector_base"*
  %11 = load i64, i64* %5, align 8
  %12 = load %"class.std::allocator"*, %"class.std::allocator"** %6, align 8
  call void @_ZNSt12_Vector_baseI3datSaIS0_EEC2EmRKS1_(%"struct.std::_Vector_base"* %10, i64 %11, %"class.std::allocator"* dereferenceable(1) %12)
  %13 = load i64, i64* %5, align 8
  invoke void @_ZNSt6vectorI3datSaIS0_EE21_M_default_initializeEm(%"class.std::vector"* %9, i64 %13)
          to label %14 unwind label %15

; <label>:14:                                     ; preds = %3
  ret void

; <label>:15:                                     ; preds = %3
  %16 = load i32, i32* @x.10
  %17 = load i32, i32* @y.11
  %18 = sub i32 %16, -958900667
  %19 = sub i32 %18, 1
  %20 = add i32 %19, -958900667
  %21 = sub i32 %16, 1
  %22 = mul i32 %16, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %17, 10
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  br i1 %28, label %30, label %55

; <label>:30:                                     ; preds = %15, %55
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  store i8* %32, i8** %7, align 8
  %33 = extractvalue { i8*, i32 } %31, 1
  store i32 %33, i32* %8, align 4
  %34 = bitcast %"class.std::vector"* %9 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseI3datSaIS0_EED2Ev(%"struct.std::_Vector_base"* %34) #3
  %35 = load i32, i32* @x.10
  %36 = load i32, i32* @y.11
  %37 = sub i32 %35, 1226641097
  %38 = sub i32 %37, 1
  %39 = add i32 %38, 1226641097
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  br i1 %47, label %49, label %55

; <label>:49:                                     ; preds = %30
  br label %50

; <label>:50:                                     ; preds = %49
  %51 = load i8*, i8** %7, align 8
  %52 = load i32, i32* %8, align 4
  %53 = insertvalue { i8*, i32 } undef, i8* %51, 0
  %54 = insertvalue { i8*, i32 } %53, i32 %52, 1
  resume { i8*, i32 } %54

; <label>:55:                                     ; preds = %30, %15
  %56 = landingpad { i8*, i32 }
          cleanup
  %57 = extractvalue { i8*, i32 } %56, 0
  store i8* %57, i8** %7, align 8
  %58 = extractvalue { i8*, i32 } %56, 1
  store i32 %58, i32* %8, align 4
  %59 = bitcast %"class.std::vector"* %9 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseI3datSaIS0_EED2Ev(%"struct.std::_Vector_base"* %59) #3
  br label %30
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI3datED2Ev(%"class.std::allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.12
  %5 = load i32, i32* @y.13
  %6 = sub i32 %4, 357875195
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 357875195
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1250792548, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %49
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1250792548, label %18
    i32 -148678169, label %26
    i32 -1247479265, label %44
    i32 1902606747, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %49

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -148678169, i32 1902606747
  store i32 %25, i32* %14
  br label %49

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %27, align 8
  %28 = load %"class.std::allocator"*, %"class.std::allocator"** %27, align 8
  %29 = bitcast %"class.std::allocator"* %28 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorI3datED2Ev(%"class.__gnu_cxx::new_allocator"* %29) #3
  %30 = load i32, i32* @x.12
  %31 = load i32, i32* @y.13
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -1247479265, i32 1902606747
  store i32 %43, i32* %14
  br label %49

; <label>:44:                                     ; preds = %15
  ret void

; <label>:45:                                     ; preds = %15
  %46 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %46, align 8
  %47 = load %"class.std::allocator"*, %"class.std::allocator"** %46, align 8
  %48 = bitcast %"class.std::allocator"* %47 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorI3datED2Ev(%"class.__gnu_cxx::new_allocator"* %48) #3
  store i32 -148678169, i32* %14
  br label %49

; <label>:49:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %struct.dat* @_ZNSt6vectorI3datSaIS0_EEixEm(%"class.std::vector"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl", %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %struct.dat*, %struct.dat** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %struct.dat, %struct.dat* %9, i64 %10
  ret %struct.dat* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEEEC2Ev(%"class.std::allocator.2"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt3mapIxSt3setISt4pairIxxESt4lessIS4_ESaIS4_EES5_IxESaIS3_IKxS8_EEEEC2Ev(%"class.__gnu_cxx::new_allocator.3"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EEC2EmRKSD_(%"class.std::vector.0"*, i64, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.18
  %5 = load i32, i32* @y.19
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %5, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %78

; <label>:29:                                     ; preds = %3, %78
  %30 = alloca %"class.std::vector.0"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"class.std::allocator.2"*, align 8
  %33 = alloca i8*
  %34 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %30, align 8
  store i64 %1, i64* %31, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %32, align 8
  %35 = load %"class.std::vector.0"*, %"class.std::vector.0"** %30, align 8
  %36 = bitcast %"class.std::vector.0"* %35 to %"struct.std::_Vector_base.1"*
  %37 = load i64, i64* %31, align 8
  %38 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %32, align 8
  call void @_ZNSt12_Vector_baseISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EEC2EmRKSD_(%"struct.std::_Vector_base.1"* %36, i64 %37, %"class.std::allocator.2"* dereferenceable(1) %38)
  %39 = load i64, i64* %31, align 8
  %40 = load i32, i32* @x.18
  %41 = load i32, i32* @y.19
  %42 = sub i32 %40, -1265347406
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -1265347406
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  br i1 %64, label %66, label %78

; <label>:66:                                     ; preds = %29
  invoke void @_ZNSt6vectorISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EE21_M_default_initializeEm(%"class.std::vector.0"* %35, i64 %39)
          to label %67 unwind label %68

; <label>:67:                                     ; preds = %66
  ret void

; <label>:68:                                     ; preds = %66
  %69 = landingpad { i8*, i32 }
          cleanup
  %70 = extractvalue { i8*, i32 } %69, 0
  store i8* %70, i8** %33, align 8
  %71 = extractvalue { i8*, i32 } %69, 1
  store i32 %71, i32* %34, align 4
  %72 = bitcast %"class.std::vector.0"* %35 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EED2Ev(%"struct.std::_Vector_base.1"* %72) #3
  br label %73

; <label>:73:                                     ; preds = %68
  %74 = load i8*, i8** %33, align 8
  %75 = load i32, i32* %34, align 4
  %76 = insertvalue { i8*, i32 } undef, i8* %74, 0
  %77 = insertvalue { i8*, i32 } %76, i32 %75, 1
  resume { i8*, i32 } %77

; <label>:78:                                     ; preds = %29, %3
  %79 = alloca %"class.std::vector.0"*, align 8
  %80 = alloca i64, align 8
  %81 = alloca %"class.std::allocator.2"*, align 8
  %82 = alloca i8*
  %83 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %79, align 8
  store i64 %1, i64* %80, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %81, align 8
  %84 = load %"class.std::vector.0"*, %"class.std::vector.0"** %79, align 8
  %85 = bitcast %"class.std::vector.0"* %84 to %"struct.std::_Vector_base.1"*
  %86 = load i64, i64* %80, align 8
  %87 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %81, align 8
  call void @_ZNSt12_Vector_baseISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EEC2EmRKSD_(%"struct.std::_Vector_base.1"* %85, i64 %86, %"class.std::allocator.2"* dereferenceable(1) %87)
  %88 = load i64, i64* %80, align 8
  br label %29
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEEED2Ev(%"class.std::allocator.2"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt3mapIxSt3setISt4pairIxxESt4lessIS4_ESaIS4_EES5_IxESaIS3_IKxS8_EEEED2Ev(%"class.__gnu_cxx::new_allocator.3"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt3absx(i64) #4 comdat {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %3 = load i64, i64* %2, align 8
  %4 = sub i64 0, -799842969665014821
  %5 = sub i64 %4, %3
  %6 = add i64 %5, -799842969665014821
  %7 = sub i64 0, %3
  %8 = icmp sge i64 %3, 0
  %9 = select i1 %8, i64 %3, i64 %6
  ret i64 %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZSt11lower_boundISt23_Rb_tree_const_iteratorISt4pairIxxEES2_ET_S4_S4_RKT0_(%"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::pair"* dereferenceable(16)) #0 comdat {
  %4 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %5 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %6 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %7 = alloca %"struct.std::pair"*, align 8
  %8 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %9 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %10 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_val", align 1
  %11 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_val", align 1
  %12 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %12, align 8
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %6, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %13, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %7, align 8
  %14 = bitcast %"struct.std::_Rb_tree_const_iterator"* %8 to i8*
  %15 = bitcast %"struct.std::_Rb_tree_const_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = bitcast %"struct.std::_Rb_tree_const_iterator"* %9 to i8*
  %17 = bitcast %"struct.std::_Rb_tree_const_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  call void @_ZN9__gnu_cxx5__ops15__iter_less_valEv()
  %19 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %8, i32 0, i32 0
  %20 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %19, align 8
  %21 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %9, i32 0, i32 0
  %22 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %21, align 8
  %23 = call %"struct.std::_Rb_tree_node_base"* @_ZSt13__lower_boundISt23_Rb_tree_const_iteratorISt4pairIxxEES2_N9__gnu_cxx5__ops14_Iter_less_valEET_S7_S7_RKT0_T1_(%"struct.std::_Rb_tree_node_base"* %20, %"struct.std::_Rb_tree_node_base"* %22, %"struct.std::pair"* dereferenceable(16) %18)
  %24 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %4, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %23, %"struct.std::_Rb_tree_node_base"** %24, align 8
  %25 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %4, i32 0, i32 0
  %26 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %25, align 8
  ret %"struct.std::_Rb_tree_node_base"* %26
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(48) %"class.std::map"* @_ZNSt6vectorISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EEixEm(%"class.std::vector.0"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::map"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.26
  %7 = load i32, i32* @y.27
  %8 = sub i32 %6, -381881307
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -381881307
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -468744838, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %65
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -468744838, label %20
    i32 -440969305, label %28
    i32 1505961002, label %53
    i32 -573429481, label %55
  ]

; <label>:19:                                     ; preds = %17
  br label %65

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -440969305, i32 -573429481
  store i32 %27, i32* %16
  br label %65

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.0"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector.0"*, %"class.std::vector.0"** %29, align 8
  %32 = bitcast %"class.std::vector.0"* %31 to %"struct.std::_Vector_base.1"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load %"class.std::map"*, %"class.std::map"** %34, align 8
  %36 = load i64, i64* %30, align 8
  %37 = getelementptr inbounds %"class.std::map", %"class.std::map"* %35, i64 %36
  store %"class.std::map"* %37, %"class.std::map"** %3
  %38 = load i32, i32* @x.26
  %39 = load i32, i32* @y.27
  %40 = add i32 %38, -480252954
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, -480252954
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 1505961002, i32 -573429481
  store i32 %52, i32* %16
  br label %65

; <label>:53:                                     ; preds = %17
  %54 = load volatile %"class.std::map"*, %"class.std::map"** %3
  ret %"class.std::map"* %54

; <label>:55:                                     ; preds = %17
  %56 = alloca %"class.std::vector.0"*, align 8
  %57 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %56, align 8
  store i64 %1, i64* %57, align 8
  %58 = load %"class.std::vector.0"*, %"class.std::vector.0"** %56, align 8
  %59 = bitcast %"class.std::vector.0"* %58 to %"struct.std::_Vector_base.1"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %59, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %60, i32 0, i32 0
  %62 = load %"class.std::map"*, %"class.std::map"** %61, align 8
  %63 = load i64, i64* %57, align 8
  %64 = getelementptr inbounds %"class.std::map", %"class.std::map"* %62, i64 %63
  store i32 -440969305, i32* %16
  br label %65

; <label>:65:                                     ; preds = %55, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(48) %"class.std::set"* @_ZNSt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEEixERS8_(%"class.std::map"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.std::set"*
  %4 = alloca i1
  %5 = alloca %"class.std::map"*
  %6 = alloca %"class.std::tuple.24"*
  %7 = alloca %"class.std::tuple"*
  %8 = alloca %"struct.std::_Rb_tree_const_iterator.23"*
  %9 = alloca %"struct.std::_Rb_tree_iterator"*
  %10 = alloca %"struct.std::less"*
  %11 = alloca %"struct.std::_Rb_tree_iterator"*
  %12 = alloca i64**
  %13 = alloca i1
  %14 = alloca i1
  %15 = load i32, i32* @x.28
  %16 = load i32, i32* @y.29
  %17 = sub i32 0, 1
  %18 = add i32 %15, %17
  %19 = sub i32 %15, 1
  %20 = mul i32 %15, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  store i1 %22, i1* %14
  %23 = icmp slt i32 %16, 10
  store i1 %23, i1* %13
  %24 = alloca i32
  store i32 -2087748195, i32* %24
  %25 = alloca i1
  br label %26

; <label>:26:                                     ; preds = %2, %280
  %27 = load i32, i32* %24
  switch i32 %27, label %28 [
    i32 -2087748195, label %29
    i32 535688402, label %49
    i32 1139662017, label %99
    i32 -1305599952, label %102
    i32 1879027421, label %111
    i32 1311527257, label %114
    i32 512293840, label %130
    i32 -887847812, label %177
    i32 2056283177, label %178
    i32 1330906705, label %206
    i32 -920608199, label %237
    i32 1054418242, label %239
    i32 -1526103623, label %256
    i32 -1503716147, label %276
  ]

; <label>:28:                                     ; preds = %26
  br label %280

; <label>:29:                                     ; preds = %26
  %30 = load volatile i1, i1* %14
  %31 = load volatile i1, i1* %13
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 false, true
  %35 = and i1 %32, false
  %36 = and i1 %30, %34
  %37 = and i1 %33, false
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 false, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 535688402, i32 1054418242
  store i32 %48, i32* %24
  br label %280

; <label>:49:                                     ; preds = %26
  %50 = alloca %"class.std::map"*, align 8
  %51 = alloca i64*, align 8
  store i64** %51, i64*** %12
  %52 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"struct.std::_Rb_tree_iterator"* %52, %"struct.std::_Rb_tree_iterator"** %11
  %53 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %54 = alloca %"struct.std::less", align 1
  store %"struct.std::less"* %54, %"struct.std::less"** %10
  %55 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"struct.std::_Rb_tree_iterator"* %55, %"struct.std::_Rb_tree_iterator"** %9
  %56 = alloca %"struct.std::_Rb_tree_const_iterator.23", align 8
  store %"struct.std::_Rb_tree_const_iterator.23"* %56, %"struct.std::_Rb_tree_const_iterator.23"** %8
  %57 = alloca %"class.std::tuple", align 8
  store %"class.std::tuple"* %57, %"class.std::tuple"** %7
  %58 = alloca %"class.std::tuple.24", align 1
  store %"class.std::tuple.24"* %58, %"class.std::tuple.24"** %6
  store %"class.std::map"* %0, %"class.std::map"** %50, align 8
  %59 = load volatile i64**, i64*** %12
  store i64* %1, i64** %59, align 8
  %60 = load %"class.std::map"*, %"class.std::map"** %50, align 8
  store %"class.std::map"* %60, %"class.std::map"** %5
  %61 = load volatile i64**, i64*** %12
  %62 = load i64*, i64** %61, align 8
  %63 = load volatile %"class.std::map"*, %"class.std::map"** %5
  %64 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEE11lower_boundERS8_(%"class.std::map"* %63, i64* dereferenceable(8) %62)
  %65 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %11
  %66 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %65, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %64, %"struct.std::_Rb_tree_node_base"** %66, align 8
  %67 = load volatile %"class.std::map"*, %"class.std::map"** %5
  %68 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEE3endEv(%"class.std::map"* %67) #3
  %69 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %53, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %68, %"struct.std::_Rb_tree_node_base"** %69, align 8
  %70 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %11
  %71 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEeqERKS9_(%"struct.std::_Rb_tree_iterator"* %70, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %53) #3
  store i1 %71, i1* %4
  %72 = load i32, i32* @x.28
  %73 = load i32, i32* @y.29
  %74 = sub i32 %72, -1854854718
  %75 = sub i32 %74, 1
  %76 = add i32 %75, -1854854718
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = xor i1 %80, true
  %83 = xor i1 %81, true
  %84 = xor i1 false, true
  %85 = and i1 %82, false
  %86 = and i1 %80, %84
  %87 = and i1 %83, false
  %88 = and i1 %81, %84
  %89 = or i1 %85, %86
  %90 = or i1 %87, %88
  %91 = xor i1 %89, %90
  %92 = or i1 %82, %83
  %93 = xor i1 %92, true
  %94 = or i1 false, %84
  %95 = and i1 %93, %94
  %96 = or i1 %91, %95
  %97 = or i1 %80, %81
  %98 = select i1 %96, i32 1139662017, i32 1054418242
  store i32 %98, i32* %24
  br label %280

; <label>:99:                                     ; preds = %26
  %100 = load volatile i1, i1* %4
  %101 = select i1 %100, i32 1879027421, i32 -1305599952
  store i32 %101, i32* %24
  store i1 true, i1* %25
  br label %280

; <label>:102:                                    ; preds = %26
  %103 = load volatile %"class.std::map"*, %"class.std::map"** %5
  call void @_ZNKSt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEE8key_compEv(%"class.std::map"* %103)
  %104 = load volatile i64**, i64*** %12
  %105 = load i64*, i64** %104, align 8
  %106 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %11
  %107 = call dereferenceable(56) %"struct.std::pair.20"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEdeEv(%"struct.std::_Rb_tree_iterator"* %106) #3
  %108 = getelementptr inbounds %"struct.std::pair.20", %"struct.std::pair.20"* %107, i32 0, i32 0
  %109 = load volatile %"struct.std::less"*, %"struct.std::less"** %10
  %110 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %109, i64* dereferenceable(8) %105, i64* dereferenceable(8) %108)
  store i32 1879027421, i32* %24
  store i1 %110, i1* %25
  br label %280

; <label>:111:                                    ; preds = %26
  %112 = load i1, i1* %25
  %113 = select i1 %112, i32 1311527257, i32 2056283177
  store i32 %113, i32* %24
  br label %280

; <label>:114:                                    ; preds = %26
  %115 = load i32, i32* @x.28
  %116 = load i32, i32* @y.29
  %117 = add i32 %115, -352070762
  %118 = sub i32 %117, 1
  %119 = sub i32 %118, -352070762
  %120 = sub i32 %115, 1
  %121 = mul i32 %115, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %116, 10
  %125 = and i1 %123, %124
  %126 = xor i1 %123, %124
  %127 = or i1 %125, %126
  %128 = or i1 %123, %124
  %129 = select i1 %127, i32 512293840, i32 -1526103623
  store i32 %129, i32* %24
  br label %280

; <label>:130:                                    ; preds = %26
  %131 = load volatile %"class.std::map"*, %"class.std::map"** %5
  %132 = getelementptr inbounds %"class.std::map", %"class.std::map"* %131, i32 0, i32 0
  %133 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %11
  %134 = load volatile %"struct.std::_Rb_tree_const_iterator.23"*, %"struct.std::_Rb_tree_const_iterator.23"** %8
  call void @_ZNSt23_Rb_tree_const_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEC2ERKSt17_Rb_tree_iteratorIS8_E(%"struct.std::_Rb_tree_const_iterator.23"* %134, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %133) #3
  %135 = load volatile i64**, i64*** %12
  %136 = load i64*, i64** %135, align 8
  %137 = load volatile %"class.std::tuple"*, %"class.std::tuple"** %7
  call void @_ZNSt5tupleIJRKxEEC2ES1_(%"class.std::tuple"* %137, i64* dereferenceable(8) %136)
  %138 = load volatile %"struct.std::_Rb_tree_const_iterator.23"*, %"struct.std::_Rb_tree_const_iterator.23"** %8
  %139 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.23", %"struct.std::_Rb_tree_const_iterator.23"* %138, i32 0, i32 0
  %140 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %139, align 8
  %141 = load volatile %"class.std::tuple"*, %"class.std::tuple"** %7
  %142 = load volatile %"class.std::tuple.24"*, %"class.std::tuple.24"** %6
  %143 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESI_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_(%"class.std::_Rb_tree"* %132, %"struct.std::_Rb_tree_node_base"* %140, %"struct.std::piecewise_construct_t"* dereferenceable(1) @_ZStL19piecewise_construct, %"class.std::tuple"* dereferenceable(8) %141, %"class.std::tuple.24"* dereferenceable(1) %142)
  %144 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %9
  %145 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %144, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %143, %"struct.std::_Rb_tree_node_base"** %145, align 8
  %146 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %11
  %147 = bitcast %"struct.std::_Rb_tree_iterator"* %146 to i8*
  %148 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %9
  %149 = bitcast %"struct.std::_Rb_tree_iterator"* %148 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %147, i8* %149, i64 8, i32 8, i1 false)
  %150 = load i32, i32* @x.28
  %151 = load i32, i32* @y.29
  %152 = add i32 %150, 1898531185
  %153 = sub i32 %152, 1
  %154 = sub i32 %153, 1898531185
  %155 = sub i32 %150, 1
  %156 = mul i32 %150, %154
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %151, 10
  %160 = xor i1 %158, true
  %161 = xor i1 %159, true
  %162 = xor i1 false, true
  %163 = and i1 %160, false
  %164 = and i1 %158, %162
  %165 = and i1 %161, false
  %166 = and i1 %159, %162
  %167 = or i1 %163, %164
  %168 = or i1 %165, %166
  %169 = xor i1 %167, %168
  %170 = or i1 %160, %161
  %171 = xor i1 %170, true
  %172 = or i1 false, %162
  %173 = and i1 %171, %172
  %174 = or i1 %169, %173
  %175 = or i1 %158, %159
  %176 = select i1 %174, i32 -887847812, i32 -1526103623
  store i32 %176, i32* %24
  br label %280

; <label>:177:                                    ; preds = %26
  store i32 2056283177, i32* %24
  br label %280

; <label>:178:                                    ; preds = %26
  %179 = load i32, i32* @x.28
  %180 = load i32, i32* @y.29
  %181 = sub i32 %179, 27965416
  %182 = sub i32 %181, 1
  %183 = add i32 %182, 27965416
  %184 = sub i32 %179, 1
  %185 = mul i32 %179, %183
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %180, 10
  %189 = xor i1 %187, true
  %190 = xor i1 %188, true
  %191 = xor i1 false, true
  %192 = and i1 %189, false
  %193 = and i1 %187, %191
  %194 = and i1 %190, false
  %195 = and i1 %188, %191
  %196 = or i1 %192, %193
  %197 = or i1 %194, %195
  %198 = xor i1 %196, %197
  %199 = or i1 %189, %190
  %200 = xor i1 %199, true
  %201 = or i1 false, %191
  %202 = and i1 %200, %201
  %203 = or i1 %198, %202
  %204 = or i1 %187, %188
  %205 = select i1 %203, i32 1330906705, i32 -1503716147
  store i32 %205, i32* %24
  br label %280

; <label>:206:                                    ; preds = %26
  %207 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %11
  %208 = call dereferenceable(56) %"struct.std::pair.20"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEdeEv(%"struct.std::_Rb_tree_iterator"* %207) #3
  %209 = getelementptr inbounds %"struct.std::pair.20", %"struct.std::pair.20"* %208, i32 0, i32 1
  store %"class.std::set"* %209, %"class.std::set"** %3
  %210 = load i32, i32* @x.28
  %211 = load i32, i32* @y.29
  %212 = add i32 %210, -172655023
  %213 = sub i32 %212, 1
  %214 = sub i32 %213, -172655023
  %215 = sub i32 %210, 1
  %216 = mul i32 %210, %214
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %211, 10
  %220 = xor i1 %218, true
  %221 = xor i1 %219, true
  %222 = xor i1 true, true
  %223 = and i1 %220, true
  %224 = and i1 %218, %222
  %225 = and i1 %221, true
  %226 = and i1 %219, %222
  %227 = or i1 %223, %224
  %228 = or i1 %225, %226
  %229 = xor i1 %227, %228
  %230 = or i1 %220, %221
  %231 = xor i1 %230, true
  %232 = or i1 true, %222
  %233 = and i1 %231, %232
  %234 = or i1 %229, %233
  %235 = or i1 %218, %219
  %236 = select i1 %234, i32 -920608199, i32 -1503716147
  store i32 %236, i32* %24
  br label %280

; <label>:237:                                    ; preds = %26
  %238 = load volatile %"class.std::set"*, %"class.std::set"** %3
  ret %"class.std::set"* %238

; <label>:239:                                    ; preds = %26
  %240 = alloca %"class.std::map"*, align 8
  %241 = alloca i64*, align 8
  %242 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %243 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %244 = alloca %"struct.std::less", align 1
  %245 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %246 = alloca %"struct.std::_Rb_tree_const_iterator.23", align 8
  %247 = alloca %"class.std::tuple", align 8
  %248 = alloca %"class.std::tuple.24", align 1
  store %"class.std::map"* %0, %"class.std::map"** %240, align 8
  store i64* %1, i64** %241, align 8
  %249 = load %"class.std::map"*, %"class.std::map"** %240, align 8
  %250 = load i64*, i64** %241, align 8
  %251 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEE11lower_boundERS8_(%"class.std::map"* %249, i64* dereferenceable(8) %250)
  %252 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %242, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %251, %"struct.std::_Rb_tree_node_base"** %252, align 8
  %253 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEE3endEv(%"class.std::map"* %249) #3
  %254 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %243, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %253, %"struct.std::_Rb_tree_node_base"** %254, align 8
  %255 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEeqERKS9_(%"struct.std::_Rb_tree_iterator"* %242, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %243) #3
  store i32 535688402, i32* %24
  br label %280

; <label>:256:                                    ; preds = %26
  %257 = load volatile %"class.std::map"*, %"class.std::map"** %5
  %258 = getelementptr inbounds %"class.std::map", %"class.std::map"* %257, i32 0, i32 0
  %259 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %11
  %260 = load volatile %"struct.std::_Rb_tree_const_iterator.23"*, %"struct.std::_Rb_tree_const_iterator.23"** %8
  call void @_ZNSt23_Rb_tree_const_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEC2ERKSt17_Rb_tree_iteratorIS8_E(%"struct.std::_Rb_tree_const_iterator.23"* %260, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %259) #3
  %261 = load volatile i64**, i64*** %12
  %262 = load i64*, i64** %261, align 8
  %263 = load volatile %"class.std::tuple"*, %"class.std::tuple"** %7
  call void @_ZNSt5tupleIJRKxEEC2ES1_(%"class.std::tuple"* %263, i64* dereferenceable(8) %262)
  %264 = load volatile %"struct.std::_Rb_tree_const_iterator.23"*, %"struct.std::_Rb_tree_const_iterator.23"** %8
  %265 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.23", %"struct.std::_Rb_tree_const_iterator.23"* %264, i32 0, i32 0
  %266 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %265, align 8
  %267 = load volatile %"class.std::tuple"*, %"class.std::tuple"** %7
  %268 = load volatile %"class.std::tuple.24"*, %"class.std::tuple.24"** %6
  %269 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESI_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_(%"class.std::_Rb_tree"* %258, %"struct.std::_Rb_tree_node_base"* %266, %"struct.std::piecewise_construct_t"* dereferenceable(1) @_ZStL19piecewise_construct, %"class.std::tuple"* dereferenceable(8) %267, %"class.std::tuple.24"* dereferenceable(1) %268)
  %270 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %9
  %271 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %270, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %269, %"struct.std::_Rb_tree_node_base"** %271, align 8
  %272 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %11
  %273 = bitcast %"struct.std::_Rb_tree_iterator"* %272 to i8*
  %274 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %9
  %275 = bitcast %"struct.std::_Rb_tree_iterator"* %274 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %273, i8* %275, i64 8, i32 8, i1 false)
  store i32 512293840, i32* %24
  br label %280

; <label>:276:                                    ; preds = %26
  %277 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %11
  %278 = call dereferenceable(56) %"struct.std::pair.20"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEdeEv(%"struct.std::_Rb_tree_iterator"* %277) #3
  %279 = getelementptr inbounds %"struct.std::pair.20", %"struct.std::pair.20"* %278, i32 0, i32 1
  store i32 1330906705, i32* %24
  br label %280

; <label>:280:                                    ; preds = %276, %256, %239, %206, %178, %177, %130, %114, %111, %102, %99, %49, %29, %28
  br label %26
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt3setISt4pairIxxESt4lessIS1_ESaIS1_EE5beginEv(%"class.std::set"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %3 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %3, align 8
  %4 = load %"class.std::set"*, %"class.std::set"** %3, align 8
  %5 = getelementptr inbounds %"class.std::set", %"class.std::set"* %4, i32 0, i32 0
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5beginEv(%"class.std::_Rb_tree.8"* %5) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %2, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %2, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  ret %"struct.std::_Rb_tree_node_base"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt3setISt4pairIxxESt4lessIS1_ESaIS1_EE3endEv(%"class.std::set"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %3 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %3, align 8
  %4 = load %"class.std::set"*, %"class.std::set"** %3, align 8
  %5 = getelementptr inbounds %"class.std::set", %"class.std::set"* %4, i32 0, i32 0
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE3endEv(%"class.std::_Rb_tree.8"* %5) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %2, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %2, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  ret %"struct.std::_Rb_tree_node_base"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIxxEC2IRxivEEOT_OT0_(%"struct.std::pair"*, i64* dereferenceable(8), i32* dereferenceable(4)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::pair"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i32*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 0
  %9 = load i64*, i64** %5, align 8
  %10 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %9) #3
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %8, align 8
  %12 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 1
  %13 = load i32*, i32** %6, align 8
  %14 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %13) #3
  %15 = load i32, i32* %14, align 4
  %16 = sext i32 %15 to i64
  store i64 %16, i64* %12, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIxxESaIS1_EEC2Ev(%"class.std::vector.14"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.36
  %3 = load i32, i32* @y.37
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 false, true
  %14 = and i1 %11, false
  %15 = and i1 %9, %13
  %16 = and i1 %12, false
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 false, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %91

; <label>:27:                                     ; preds = %1, %91
  %28 = alloca %"class.std::vector.14"*, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %28, align 8
  %29 = load %"class.std::vector.14"*, %"class.std::vector.14"** %28, align 8
  %30 = bitcast %"class.std::vector.14"* %29 to %"struct.std::_Vector_base.15"*
  %31 = load i32, i32* @x.36
  %32 = load i32, i32* @y.37
  %33 = sub i32 %31, -410121461
  %34 = sub i32 %33, 1
  %35 = add i32 %34, -410121461
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  br i1 %43, label %45, label %91

; <label>:45:                                     ; preds = %27
  invoke void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EEC2Ev(%"struct.std::_Vector_base.15"* %30)
          to label %46 unwind label %88

; <label>:46:                                     ; preds = %45
  %47 = load i32, i32* @x.36
  %48 = load i32, i32* @y.37
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  br i1 %58, label %60, label %95

; <label>:60:                                     ; preds = %46, %95
  %61 = load i32, i32* @x.36
  %62 = load i32, i32* @y.37
  %63 = sub i32 %61, 2003791761
  %64 = sub i32 %63, 1
  %65 = add i32 %64, 2003791761
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 false, true
  %74 = and i1 %71, false
  %75 = and i1 %69, %73
  %76 = and i1 %72, false
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 false, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  br i1 %85, label %87, label %95

; <label>:87:                                     ; preds = %60
  ret void

; <label>:88:                                     ; preds = %45
  %89 = landingpad { i8*, i32 }
          catch i8* null
  %90 = extractvalue { i8*, i32 } %89, 0
  call void @__clang_call_terminate(i8* %90) #12
  unreachable

; <label>:91:                                     ; preds = %27, %1
  %92 = alloca %"class.std::vector.14"*, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %92, align 8
  %93 = load %"class.std::vector.14"*, %"class.std::vector.14"** %92, align 8
  %94 = bitcast %"class.std::vector.14"* %93 to %"struct.std::_Vector_base.15"*
  br label %27

; <label>:95:                                     ; preds = %60, %46
  br label %60
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIxxEEneERKS2_(%"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %1, %"struct.std::_Rb_tree_const_iterator"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %8, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %11 = icmp ne %"struct.std::_Rb_tree_node_base"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair"* @_ZNKSt23_Rb_tree_const_iteratorISt4pairIxxEEdeEv(%"struct.std::_Rb_tree_const_iterator"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node.21"*
  %7 = invoke %"struct.std::pair"* @_ZNKSt13_Rb_tree_nodeISt4pairIxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node.21"* %6)
          to label %8 unwind label %62

; <label>:8:                                      ; preds = %1
  %9 = load i32, i32* @x.40
  %10 = load i32, i32* @y.41
  %11 = sub i32 %9, 1028422638
  %12 = sub i32 %11, 1
  %13 = add i32 %12, 1028422638
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %10, 10
  %19 = xor i1 %17, true
  %20 = xor i1 %18, true
  %21 = xor i1 false, true
  %22 = and i1 %19, false
  %23 = and i1 %17, %21
  %24 = and i1 %20, false
  %25 = and i1 %18, %21
  %26 = or i1 %22, %23
  %27 = or i1 %24, %25
  %28 = xor i1 %26, %27
  %29 = or i1 %19, %20
  %30 = xor i1 %29, true
  %31 = or i1 false, %21
  %32 = and i1 %30, %31
  %33 = or i1 %28, %32
  %34 = or i1 %17, %18
  br i1 %33, label %35, label %65

; <label>:35:                                     ; preds = %8, %65
  %36 = load i32, i32* @x.40
  %37 = load i32, i32* @y.41
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  br i1 %59, label %61, label %65

; <label>:61:                                     ; preds = %35
  ret %"struct.std::pair"* %7

; <label>:62:                                     ; preds = %1
  %63 = landingpad { i8*, i32 }
          catch i8* null
  %64 = extractvalue { i8*, i32 } %63, 0
  call void @__clang_call_terminate(i8* %64) #12
  unreachable

; <label>:65:                                     ; preds = %35, %8
  br label %35
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  store i64* %0, i64** %6, align 8
  store i64* %1, i64** %7, align 8
  %8 = load i64*, i64** %7, align 8
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %4
  %10 = load i64*, i64** %6, align 8
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 -805180877, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %73
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -805180877, label %16
    i32 1961390142, label %21
    i32 1218956417, label %49
    i32 1250340247, label %66
    i32 -835125534, label %67
    i32 495662898, label %69
    i32 1222153463, label %71
  ]

; <label>:15:                                     ; preds = %13
  br label %73

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %4
  %18 = load volatile i64, i64* %3
  %19 = icmp slt i64 %17, %18
  %20 = select i1 %19, i32 1961390142, i32 -835125534
  store i32 %20, i32* %12
  br label %73

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.42
  %23 = load i32, i32* @y.43
  %24 = add i32 %22, 1996358710
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, 1996358710
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 true, true
  %35 = and i1 %32, true
  %36 = and i1 %30, %34
  %37 = and i1 %33, true
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 true, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 1218956417, i32 1222153463
  store i32 %48, i32* %12
  br label %73

; <label>:49:                                     ; preds = %13
  %50 = load i64*, i64** %7, align 8
  store i64* %50, i64** %5, align 8
  %51 = load i32, i32* @x.42
  %52 = load i32, i32* @y.43
  %53 = add i32 %51, -207700140
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, -207700140
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 1250340247, i32 1222153463
  store i32 %65, i32* %12
  br label %73

; <label>:66:                                     ; preds = %13
  store i32 495662898, i32* %12
  br label %73

; <label>:67:                                     ; preds = %13
  %68 = load i64*, i64** %6, align 8
  store i64* %68, i64** %5, align 8
  store i32 495662898, i32* %12
  br label %73

; <label>:69:                                     ; preds = %13
  %70 = load i64*, i64** %5, align 8
  ret i64* %70

; <label>:71:                                     ; preds = %13
  %72 = load i64*, i64** %7, align 8
  store i64* %72, i64** %5, align 8
  store i32 1218956417, i32* %12
  br label %73

; <label>:73:                                     ; preds = %71, %67, %66, %49, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i64**
  %5 = alloca i64**
  %6 = alloca i64**
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.44
  %10 = load i32, i32* @y.45
  %11 = sub i32 %9, -1610895667
  %12 = sub i32 %11, 1
  %13 = add i32 %12, -1610895667
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 -177125099, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %106
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -177125099, label %23
    i32 -536317881, label %43
    i32 315334554, label %83
    i32 -140912925, label %86
    i32 -1089949523, label %90
    i32 1081885802, label %94
    i32 192277064, label %97
  ]

; <label>:22:                                     ; preds = %20
  br label %106

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 -536317881, i32 192277064
  store i32 %42, i32* %19
  br label %106

; <label>:43:                                     ; preds = %20
  %44 = alloca i64*, align 8
  store i64** %44, i64*** %6
  %45 = alloca i64*, align 8
  store i64** %45, i64*** %5
  %46 = alloca i64*, align 8
  store i64** %46, i64*** %4
  %47 = load volatile i64**, i64*** %5
  store i64* %0, i64** %47, align 8
  %48 = load volatile i64**, i64*** %4
  store i64* %1, i64** %48, align 8
  %49 = load volatile i64**, i64*** %5
  %50 = load i64*, i64** %49, align 8
  %51 = load i64, i64* %50, align 8
  %52 = load volatile i64**, i64*** %4
  %53 = load i64*, i64** %52, align 8
  %54 = load i64, i64* %53, align 8
  %55 = icmp slt i64 %51, %54
  store i1 %55, i1* %3
  %56 = load i32, i32* @x.44
  %57 = load i32, i32* @y.45
  %58 = sub i32 %56, -1386797690
  %59 = sub i32 %58, 1
  %60 = add i32 %59, -1386797690
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 true, true
  %69 = and i1 %66, true
  %70 = and i1 %64, %68
  %71 = and i1 %67, true
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 true, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  %82 = select i1 %80, i32 315334554, i32 192277064
  store i32 %82, i32* %19
  br label %106

; <label>:83:                                     ; preds = %20
  %84 = load volatile i1, i1* %3
  %85 = select i1 %84, i32 -140912925, i32 -1089949523
  store i32 %85, i32* %19
  br label %106

; <label>:86:                                     ; preds = %20
  %87 = load volatile i64**, i64*** %4
  %88 = load i64*, i64** %87, align 8
  %89 = load volatile i64**, i64*** %6
  store i64* %88, i64** %89, align 8
  store i32 1081885802, i32* %19
  br label %106

; <label>:90:                                     ; preds = %20
  %91 = load volatile i64**, i64*** %5
  %92 = load i64*, i64** %91, align 8
  %93 = load volatile i64**, i64*** %6
  store i64* %92, i64** %93, align 8
  store i32 1081885802, i32* %19
  br label %106

; <label>:94:                                     ; preds = %20
  %95 = load volatile i64**, i64*** %6
  %96 = load i64*, i64** %95, align 8
  ret i64* %96

; <label>:97:                                     ; preds = %20
  %98 = alloca i64*, align 8
  %99 = alloca i64*, align 8
  %100 = alloca i64*, align 8
  store i64* %0, i64** %99, align 8
  store i64* %1, i64** %100, align 8
  %101 = load i64*, i64** %99, align 8
  %102 = load i64, i64* %101, align 8
  %103 = load i64*, i64** %100, align 8
  %104 = load i64, i64* %103, align 8
  %105 = icmp slt i64 %102, %104
  store i32 -536317881, i32* %19
  br label %106

; <label>:106:                                    ; preds = %97, %90, %86, %83, %43, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIxxESaIS1_EE12emplace_backIJRKS1_EEEvDpOT_(%"class.std::vector.14"*, %"struct.std::pair"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"struct.std::pair"*
  %4 = alloca %"struct.std::pair"*
  %5 = alloca %"class.std::vector.14"*
  %6 = alloca %"class.std::vector.14"*, align 8
  %7 = alloca %"struct.std::pair"*, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %6, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %7, align 8
  %8 = load %"class.std::vector.14"*, %"class.std::vector.14"** %6, align 8
  store %"class.std::vector.14"* %8, %"class.std::vector.14"** %5
  %9 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %5
  %10 = bitcast %"class.std::vector.14"* %9 to %"struct.std::_Vector_base.15"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"struct.std::pair"*, %"struct.std::pair"** %12, align 8
  store %"struct.std::pair"* %13, %"struct.std::pair"** %4
  %14 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %5
  %15 = bitcast %"class.std::vector.14"* %14 to %"struct.std::_Vector_base.15"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load %"struct.std::pair"*, %"struct.std::pair"** %17, align 8
  store %"struct.std::pair"* %18, %"struct.std::pair"** %3
  %19 = alloca i32
  store i32 18087889, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %51
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 18087889, label %23
    i32 -1346163602, label %28
    i32 705788056, label %46
    i32 1326617903, label %50
  ]

; <label>:22:                                     ; preds = %20
  br label %51

; <label>:23:                                     ; preds = %20
  %24 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %4
  %25 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %3
  %26 = icmp ne %"struct.std::pair"* %24, %25
  %27 = select i1 %26, i32 -1346163602, i32 705788056
  store i32 %27, i32* %19
  br label %51

; <label>:28:                                     ; preds = %20
  %29 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %5
  %30 = bitcast %"class.std::vector.14"* %29 to %"struct.std::_Vector_base.15"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %31 to %"class.std::allocator.16"*
  %33 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %5
  %34 = bitcast %"class.std::vector.14"* %33 to %"struct.std::_Vector_base.15"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %35, i32 0, i32 1
  %37 = load %"struct.std::pair"*, %"struct.std::pair"** %36, align 8
  %38 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %39 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIxxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::pair"* dereferenceable(16) %38) #3
  call void @_ZNSt16allocator_traitsISaISt4pairIxxEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.16"* dereferenceable(1) %32, %"struct.std::pair"* %37, %"struct.std::pair"* dereferenceable(16) %39)
  %40 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %5
  %41 = bitcast %"class.std::vector.14"* %40 to %"struct.std::_Vector_base.15"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %42, i32 0, i32 1
  %44 = load %"struct.std::pair"*, %"struct.std::pair"** %43, align 8
  %45 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %44, i32 1
  store %"struct.std::pair"* %45, %"struct.std::pair"** %43, align 8
  store i32 1326617903, i32* %19
  br label %51

; <label>:46:                                     ; preds = %20
  %47 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %48 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIxxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::pair"* dereferenceable(16) %47) #3
  %49 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %5
  call void @_ZNSt6vectorISt4pairIxxESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_(%"class.std::vector.14"* %49, %"struct.std::pair"* dereferenceable(16) %48)
  store i32 1326617903, i32* %19
  br label %51

; <label>:50:                                     ; preds = %20
  ret void

; <label>:51:                                     ; preds = %46, %28, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt23_Rb_tree_const_iteratorISt4pairIxxEEppEi(%"struct.std::_Rb_tree_const_iterator"*, i32) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %4 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %5 = alloca i32, align 4
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %4, align 8
  store i32 %1, i32* %5, align 4
  %6 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %4, align 8
  %7 = bitcast %"struct.std::_Rb_tree_const_iterator"* %3 to i8*
  %8 = bitcast %"struct.std::_Rb_tree_const_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* %8, i64 8, i32 8, i1 false)
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %6, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %11 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %10) #15
  %12 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %6, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %12, align 8
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %3, i32 0, i32 0
  %14 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %13, align 8
  ret %"struct.std::_Rb_tree_node_base"* %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"* @_ZNSt6vectorISt4pairIxxESaIS1_EE5beginEv(%"class.std::vector.14"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.14"*, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %3, align 8
  %4 = load %"class.std::vector.14"*, %"class.std::vector.14"** %3, align 8
  %5 = bitcast %"class.std::vector.14"* %4 to %"struct.std::_Vector_base.15"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %2, %"struct.std::pair"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  ret %"struct.std::pair"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"* @_ZNSt6vectorISt4pairIxxESaIS1_EE3endEv(%"class.std::vector.14"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.14"*, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %3, align 8
  %4 = load %"class.std::vector.14"*, %"class.std::vector.14"** %3, align 8
  %5 = bitcast %"class.std::vector.14"* %4 to %"struct.std::_Vector_base.15"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"* %2, %"struct.std::pair"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  ret %"struct.std::pair"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPSt4pairIxxESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.54
  %7 = load i32, i32* @y.55
  %8 = sub i32 %6, -927452088
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -927452088
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1309932747, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %76
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1309932747, label %20
    i32 1583857290, label %40
    i32 -1195046197, label %64
    i32 241324673, label %66
  ]

; <label>:19:                                     ; preds = %17
  br label %76

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1583857290, i32 241324673
  store i32 %39, i32* %16
  br label %76

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %41, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %42, align 8
  %43 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %41, align 8
  %44 = call dereferenceable(8) %"struct.std::pair"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %43) #3
  %45 = load %"struct.std::pair"*, %"struct.std::pair"** %44, align 8
  %46 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %42, align 8
  %47 = call dereferenceable(8) %"struct.std::pair"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %46) #3
  %48 = load %"struct.std::pair"*, %"struct.std::pair"** %47, align 8
  %49 = icmp ne %"struct.std::pair"* %45, %48
  store i1 %49, i1* %3
  %50 = load i32, i32* @x.54
  %51 = load i32, i32* @y.55
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 -1195046197, i32 241324673
  store i32 %63, i32* %16
  br label %76

; <label>:64:                                     ; preds = %17
  %65 = load volatile i1, i1* %3
  ret i1 %65

; <label>:66:                                     ; preds = %17
  %67 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %68 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %67, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %68, align 8
  %69 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %67, align 8
  %70 = call dereferenceable(8) %"struct.std::pair"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %69) #3
  %71 = load %"struct.std::pair"*, %"struct.std::pair"** %70, align 8
  %72 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %68, align 8
  %73 = call dereferenceable(8) %"struct.std::pair"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %72) #3
  %74 = load %"struct.std::pair"*, %"struct.std::pair"** %73, align 8
  %75 = icmp ne %"struct.std::pair"* %71, %74
  store i32 1583857290, i32* %16
  br label %76

; <label>:76:                                     ; preds = %66, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::pair"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.56
  %6 = load i32, i32* @y.57
  %7 = sub i32 %5, 82660872
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 82660872
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1543378205, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1543378205, label %19
    i32 -1922603676, label %39
    i32 -70267497, label %71
    i32 1331632485, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1922603676, i32 1331632485
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %40, align 8
  %41 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %40, align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %41, i32 0, i32 0
  %43 = load %"struct.std::pair"*, %"struct.std::pair"** %42, align 8
  store %"struct.std::pair"* %43, %"struct.std::pair"** %2
  %44 = load i32, i32* @x.56
  %45 = load i32, i32* @y.57
  %46 = add i32 %44, -939865865
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -939865865
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -70267497, i32 1331632485
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %2
  ret %"struct.std::pair"* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %74, align 8
  %75 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %74, align 8
  %76 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %75, i32 0, i32 0
  %77 = load %"struct.std::pair"*, %"struct.std::pair"** %76, align 8
  store i32 -1922603676, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #6

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt3setISt4pairIxxESt4lessIS1_ESaIS1_EE5eraseERKS1_(%"class.std::set"*, %"struct.std::pair"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"class.std::set"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %"class.std::set"*, %"class.std::set"** %3, align 8
  %6 = getelementptr inbounds %"class.std::set", %"class.std::set"* %5, i32 0, i32 0
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %8 = call i64 @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5eraseERKS1_(%"class.std::_Rb_tree.8"* %6, %"struct.std::pair"* dereferenceable(16) %7)
  ret i64 %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.60
  %6 = load i32, i32* @y.61
  %7 = add i32 %5, -1148399902
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1148399902
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 804962446, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 804962446, label %19
    i32 1879531196, label %39
    i32 423675374, label %60
    i32 -2032292631, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1879531196, i32 -2032292631
  store i32 %38, i32* %15
  br label %68

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %40, align 8
  %41 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %40, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %41, %"class.__gnu_cxx::__normal_iterator"** %2
  %42 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %42, i32 0, i32 0
  %44 = load %"struct.std::pair"*, %"struct.std::pair"** %43, align 8
  %45 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %44, i32 1
  store %"struct.std::pair"* %45, %"struct.std::pair"** %43, align 8
  %46 = load i32, i32* @x.60
  %47 = load i32, i32* @y.61
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 423675374, i32 -2032292631
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2
  ret %"class.__gnu_cxx::__normal_iterator"* %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %63, align 8
  %64 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %63, align 8
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %64, i32 0, i32 0
  %66 = load %"struct.std::pair"*, %"struct.std::pair"** %65, align 8
  %67 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %66, i32 1
  store %"struct.std::pair"* %67, %"struct.std::pair"** %65, align 8
  store i32 1879531196, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt3setISt4pairIxxESt4lessIS1_ESaIS1_EE7emplaceIJRxS7_EEES0_ISt23_Rb_tree_const_iteratorIS1_EbEDpOT_(%"class.std::set"*, i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"struct.std::pair.19", align 8
  %5 = alloca %"class.std::set"*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"struct.std::pair.30", align 8
  store %"class.std::set"* %0, %"class.std::set"** %5, align 8
  store i64* %1, i64** %6, align 8
  store i64* %2, i64** %7, align 8
  %9 = load %"class.std::set"*, %"class.std::set"** %5, align 8
  %10 = getelementptr inbounds %"class.std::set", %"class.std::set"* %9, i32 0, i32 0
  %11 = load i64*, i64** %6, align 8
  %12 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %11) #3
  %13 = load i64*, i64** %7, align 8
  %14 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %13) #3
  %15 = call { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE17_M_emplace_uniqueIJRxS9_EEES0_ISt17_Rb_tree_iteratorIS1_EbEDpOT_(%"class.std::_Rb_tree.8"* %10, i64* dereferenceable(8) %12, i64* dereferenceable(8) %14)
  %16 = bitcast %"struct.std::pair.30"* %8 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %17 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %16, i32 0, i32 0
  %18 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %15, 0
  store %"struct.std::_Rb_tree_node_base"* %18, %"struct.std::_Rb_tree_node_base"** %17, align 8
  %19 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %16, i32 0, i32 1
  %20 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %15, 1
  store i8 %20, i8* %19, align 8
  call void @_ZNSt4pairISt23_Rb_tree_const_iteratorIS_IxxEEbEC2ISt17_Rb_tree_iteratorIS1_EbvEEOS_IT_T0_E(%"struct.std::pair.19"* %4, %"struct.std::pair.30"* dereferenceable(16) %8)
  %21 = bitcast %"struct.std::pair.19"* %4 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %22 = load { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %21, align 8
  ret { %"struct.std::_Rb_tree_node_base"*, i8 } %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIxxESaIS1_EED2Ev(%"class.std::vector.14"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.64
  %3 = load i32, i32* @y.65
  %4 = add i32 %2, 239703458
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 239703458
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %54

; <label>:16:                                     ; preds = %1, %54
  %17 = alloca %"class.std::vector.14"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %17, align 8
  %20 = load %"class.std::vector.14"*, %"class.std::vector.14"** %17, align 8
  %21 = bitcast %"class.std::vector.14"* %20 to %"struct.std::_Vector_base.15"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %21, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %22, i32 0, i32 0
  %24 = load %"struct.std::pair"*, %"struct.std::pair"** %23, align 8
  %25 = bitcast %"class.std::vector.14"* %20 to %"struct.std::_Vector_base.15"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %26, i32 0, i32 1
  %28 = load %"struct.std::pair"*, %"struct.std::pair"** %27, align 8
  %29 = bitcast %"class.std::vector.14"* %20 to %"struct.std::_Vector_base.15"*
  %30 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %29) #3
  %31 = load i32, i32* @x.64
  %32 = load i32, i32* @y.65
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  br i1 %42, label %44, label %54

; <label>:44:                                     ; preds = %16
  invoke void @_ZSt8_DestroyIPSt4pairIxxES1_EvT_S3_RSaIT0_E(%"struct.std::pair"* %24, %"struct.std::pair"* %28, %"class.std::allocator.16"* dereferenceable(1) %30)
          to label %45 unwind label %47

; <label>:45:                                     ; preds = %44
  %46 = bitcast %"class.std::vector.14"* %20 to %"struct.std::_Vector_base.15"*
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EED2Ev(%"struct.std::_Vector_base.15"* %46) #3
  ret void

; <label>:47:                                     ; preds = %44
  %48 = landingpad { i8*, i32 }
          catch i8* null
  %49 = extractvalue { i8*, i32 } %48, 0
  store i8* %49, i8** %18, align 8
  %50 = extractvalue { i8*, i32 } %48, 1
  store i32 %50, i32* %19, align 4
  %51 = bitcast %"class.std::vector.14"* %20 to %"struct.std::_Vector_base.15"*
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EED2Ev(%"struct.std::_Vector_base.15"* %51) #3
  br label %52

; <label>:52:                                     ; preds = %47
  %53 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %53) #12
  unreachable

; <label>:54:                                     ; preds = %16, %1
  %55 = alloca %"class.std::vector.14"*, align 8
  %56 = alloca i8*
  %57 = alloca i32
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %55, align 8
  %58 = load %"class.std::vector.14"*, %"class.std::vector.14"** %55, align 8
  %59 = bitcast %"class.std::vector.14"* %58 to %"struct.std::_Vector_base.15"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %59, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %60, i32 0, i32 0
  %62 = load %"struct.std::pair"*, %"struct.std::pair"** %61, align 8
  %63 = bitcast %"class.std::vector.14"* %58 to %"struct.std::_Vector_base.15"*
  %64 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %64, i32 0, i32 1
  %66 = load %"struct.std::pair"*, %"struct.std::pair"** %65, align 8
  %67 = bitcast %"class.std::vector.14"* %58 to %"struct.std::_Vector_base.15"*
  %68 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %67) #3
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EED2Ev(%"class.std::vector.0"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.0"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::map"*, %"class.std::map"** %8, align 8
  %10 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::map"*, %"class.std::map"** %12, align 8
  %14 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %15 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %14) #3
  invoke void @_ZSt8_DestroyIPSt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESC_EvT_SE_RSaIT0_E(%"class.std::map"* %9, %"class.std::map"* %13, %"class.std::allocator.2"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EED2Ev(%"struct.std::_Vector_base.1"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EED2Ev(%"struct.std::_Vector_base.1"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %24) #12
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorI3datSaIS0_EED2Ev(%"class.std::vector"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.68
  %3 = load i32, i32* @y.69
  %4 = add i32 %2, -1791232422
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -1791232422
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %150

; <label>:28:                                     ; preds = %1, %150
  %29 = alloca %"class.std::vector"*, align 8
  %30 = alloca i8*
  %31 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %29, align 8
  %32 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8
  %33 = bitcast %"class.std::vector"* %32 to %"struct.std::_Vector_base"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl", %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load %struct.dat*, %struct.dat** %35, align 8
  %37 = bitcast %"class.std::vector"* %32 to %"struct.std::_Vector_base"*
  %38 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl", %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %38, i32 0, i32 1
  %40 = load %struct.dat*, %struct.dat** %39, align 8
  %41 = bitcast %"class.std::vector"* %32 to %"struct.std::_Vector_base"*
  %42 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseI3datSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %41) #3
  %43 = load i32, i32* @x.68
  %44 = load i32, i32* @y.69
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  br i1 %54, label %56, label %150

; <label>:56:                                     ; preds = %28
  invoke void @_ZSt8_DestroyIP3datS0_EvT_S2_RSaIT0_E(%struct.dat* %36, %struct.dat* %40, %"class.std::allocator"* dereferenceable(1) %42)
          to label %57 unwind label %59

; <label>:57:                                     ; preds = %56
  %58 = bitcast %"class.std::vector"* %32 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseI3datSaIS0_EED2Ev(%"struct.std::_Vector_base"* %58) #3
  ret void

; <label>:59:                                     ; preds = %56
  %60 = load i32, i32* @x.68
  %61 = load i32, i32* @y.69
  %62 = sub i32 %60, 250136338
  %63 = sub i32 %62, 1
  %64 = add i32 %63, 250136338
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  br i1 %72, label %74, label %165

; <label>:74:                                     ; preds = %59, %165
  %75 = landingpad { i8*, i32 }
          catch i8* null
  %76 = extractvalue { i8*, i32 } %75, 0
  store i8* %76, i8** %30, align 8
  %77 = extractvalue { i8*, i32 } %75, 1
  store i32 %77, i32* %31, align 4
  %78 = bitcast %"class.std::vector"* %32 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseI3datSaIS0_EED2Ev(%"struct.std::_Vector_base"* %78) #3
  %79 = load i32, i32* @x.68
  %80 = load i32, i32* @y.69
  %81 = add i32 %79, -1643424138
  %82 = sub i32 %81, 1
  %83 = sub i32 %82, -1643424138
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = xor i1 %87, true
  %90 = xor i1 %88, true
  %91 = xor i1 true, true
  %92 = and i1 %89, true
  %93 = and i1 %87, %91
  %94 = and i1 %90, true
  %95 = and i1 %88, %91
  %96 = or i1 %92, %93
  %97 = or i1 %94, %95
  %98 = xor i1 %96, %97
  %99 = or i1 %89, %90
  %100 = xor i1 %99, true
  %101 = or i1 true, %91
  %102 = and i1 %100, %101
  %103 = or i1 %98, %102
  %104 = or i1 %87, %88
  br i1 %103, label %105, label %165

; <label>:105:                                    ; preds = %74
  br label %106

; <label>:106:                                    ; preds = %105
  %107 = load i32, i32* @x.68
  %108 = load i32, i32* @y.69
  %109 = sub i32 %107, 227680971
  %110 = sub i32 %109, 1
  %111 = add i32 %110, 227680971
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = xor i1 %115, true
  %118 = xor i1 %116, true
  %119 = xor i1 true, true
  %120 = and i1 %117, true
  %121 = and i1 %115, %119
  %122 = and i1 %118, true
  %123 = and i1 %116, %119
  %124 = or i1 %120, %121
  %125 = or i1 %122, %123
  %126 = xor i1 %124, %125
  %127 = or i1 %117, %118
  %128 = xor i1 %127, true
  %129 = or i1 true, %119
  %130 = and i1 %128, %129
  %131 = or i1 %126, %130
  %132 = or i1 %115, %116
  br i1 %131, label %133, label %170

; <label>:133:                                    ; preds = %106, %170
  %134 = load i8*, i8** %30, align 8
  call void @__clang_call_terminate(i8* %134) #12
  %135 = load i32, i32* @x.68
  %136 = load i32, i32* @y.69
  %137 = add i32 %135, 1210910104
  %138 = sub i32 %137, 1
  %139 = sub i32 %138, 1210910104
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = and i1 %143, %144
  %146 = xor i1 %143, %144
  %147 = or i1 %145, %146
  %148 = or i1 %143, %144
  br i1 %147, label %149, label %170

; <label>:149:                                    ; preds = %133
  unreachable

; <label>:150:                                    ; preds = %28, %1
  %151 = alloca %"class.std::vector"*, align 8
  %152 = alloca i8*
  %153 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %151, align 8
  %154 = load %"class.std::vector"*, %"class.std::vector"** %151, align 8
  %155 = bitcast %"class.std::vector"* %154 to %"struct.std::_Vector_base"*
  %156 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %155, i32 0, i32 0
  %157 = getelementptr inbounds %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl", %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %156, i32 0, i32 0
  %158 = load %struct.dat*, %struct.dat** %157, align 8
  %159 = bitcast %"class.std::vector"* %154 to %"struct.std::_Vector_base"*
  %160 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %159, i32 0, i32 0
  %161 = getelementptr inbounds %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl", %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %160, i32 0, i32 1
  %162 = load %struct.dat*, %struct.dat** %161, align 8
  %163 = bitcast %"class.std::vector"* %154 to %"struct.std::_Vector_base"*
  %164 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseI3datSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %163) #3
  br label %28

; <label>:165:                                    ; preds = %74, %59
  %166 = landingpad { i8*, i32 }
          catch i8* null
  %167 = extractvalue { i8*, i32 } %166, 0
  store i8* %167, i8** %30, align 8
  %168 = extractvalue { i8*, i32 } %166, 1
  store i32 %168, i32* %31, align 4
  %169 = bitcast %"class.std::vector"* %32 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseI3datSaIS0_EED2Ev(%"struct.std::_Vector_base"* %169) #3
  br label %74

; <label>:170:                                    ; preds = %133, %106
  %171 = load i8*, i8** %30, align 8
  call void @__clang_call_terminate(i8* %171) #12
  br label %133
}

; Function Attrs: nounwind readnone
declare double @acos(double) #7

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.70
  %6 = load i32, i32* @y.71
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -891814813, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %73
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -891814813, label %18
    i32 -13500101, label %38
    i32 -1500603931, label %68
    i32 -100775959, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %73

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -13500101, i32 -100775959
  store i32 %37, i32* %14
  br label %73

; <label>:38:                                     ; preds = %15
  %39 = alloca i64*, align 8
  store i64* %0, i64** %39, align 8
  %40 = load i64*, i64** %39, align 8
  store i64* %40, i64** %2
  %41 = load i32, i32* @x.70
  %42 = load i32, i32* @y.71
  %43 = sub i32 %41, -2070093543
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -2070093543
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -1500603931, i32 -100775959
  store i32 %67, i32* %14
  br label %73

; <label>:68:                                     ; preds = %15
  %69 = load volatile i64*, i64** %2
  ret i64* %69

; <label>:70:                                     ; preds = %15
  %71 = alloca i64*, align 8
  store i64* %0, i64** %71, align 8
  %72 = load i64*, i64** %71, align 8
  store i32 -13500101, i32* %14
  br label %73

; <label>:73:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4)) #4 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI3datEC2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.74
  %5 = load i32, i32* @y.75
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -796303430, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %59
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -796303430, label %17
    i32 186554759, label %37
    i32 762246162, label %55
    i32 177157737, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %59

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 186554759, i32 177157737
  store i32 %36, i32* %13
  br label %59

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %38, align 8
  %40 = load i32, i32* @x.74
  %41 = load i32, i32* @y.75
  %42 = sub i32 %40, -1934142947
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -1934142947
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 762246162, i32 177157737
  store i32 %54, i32* %13
  br label %59

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %57, align 8
  store i32 186554759, i32* %13
  br label %59

; <label>:59:                                     ; preds = %56, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI3datED2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI3datSaIS0_EEC2EmRKS1_(%"struct.std::_Vector_base"*, i64, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator"*, %"class.std::allocator"** %6, align 8
  call void @_ZNSt12_Vector_baseI3datSaIS0_EE12_Vector_implC2ERKS1_(%"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %10, %"class.std::allocator"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseI3datSaIS0_EE17_M_create_storageEm(%"struct.std::_Vector_base"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = load i32, i32* @x.78
  %16 = load i32, i32* @y.79
  %17 = sub i32 0, 1
  %18 = add i32 %15, %17
  %19 = sub i32 %15, 1
  %20 = mul i32 %15, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %16, 10
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  br i1 %26, label %28, label %117

; <label>:28:                                     ; preds = %14, %117
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  store i8* %30, i8** %7, align 8
  %31 = extractvalue { i8*, i32 } %29, 1
  store i32 %31, i32* %8, align 4
  call void @_ZNSt12_Vector_baseI3datSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %10) #3
  %32 = load i32, i32* @x.78
  %33 = load i32, i32* @y.79
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  br i1 %55, label %57, label %117

; <label>:57:                                     ; preds = %28
  br label %58

; <label>:58:                                     ; preds = %57
  %59 = load i32, i32* @x.78
  %60 = load i32, i32* @y.79
  %61 = add i32 %59, 775452399
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, 775452399
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 true, true
  %72 = and i1 %69, true
  %73 = and i1 %67, %71
  %74 = and i1 %70, true
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 true, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  br i1 %83, label %85, label %121

; <label>:85:                                     ; preds = %58, %121
  %86 = load i8*, i8** %7, align 8
  %87 = load i32, i32* %8, align 4
  %88 = insertvalue { i8*, i32 } undef, i8* %86, 0
  %89 = insertvalue { i8*, i32 } %88, i32 %87, 1
  %90 = load i32, i32* @x.78
  %91 = load i32, i32* @y.79
  %92 = add i32 %90, 1269489657
  %93 = sub i32 %92, 1
  %94 = sub i32 %93, 1269489657
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = xor i1 %98, true
  %101 = xor i1 %99, true
  %102 = xor i1 false, true
  %103 = and i1 %100, false
  %104 = and i1 %98, %102
  %105 = and i1 %101, false
  %106 = and i1 %99, %102
  %107 = or i1 %103, %104
  %108 = or i1 %105, %106
  %109 = xor i1 %107, %108
  %110 = or i1 %100, %101
  %111 = xor i1 %110, true
  %112 = or i1 false, %102
  %113 = and i1 %111, %112
  %114 = or i1 %109, %113
  %115 = or i1 %98, %99
  br i1 %114, label %116, label %121

; <label>:116:                                    ; preds = %85
  resume { i8*, i32 } %89

; <label>:117:                                    ; preds = %28, %14
  %118 = landingpad { i8*, i32 }
          cleanup
  %119 = extractvalue { i8*, i32 } %118, 0
  store i8* %119, i8** %7, align 8
  %120 = extractvalue { i8*, i32 } %118, 1
  store i32 %120, i32* %8, align 4
  call void @_ZNSt12_Vector_baseI3datSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %10) #3
  br label %28

; <label>:121:                                    ; preds = %85, %58
  %122 = load i8*, i8** %7, align 8
  %123 = load i32, i32* %8, align 4
  %124 = insertvalue { i8*, i32 } undef, i8* %122, 0
  %125 = insertvalue { i8*, i32 } %124, i32 %123, 1
  br label %85
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorI3datSaIS0_EE21_M_default_initializeEm(%"class.std::vector"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl", %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %struct.dat*, %struct.dat** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %12 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseI3datSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %11) #3
  %13 = call %struct.dat* @_ZSt27__uninitialized_default_n_aIP3datmS0_ET_S2_T0_RSaIT1_E(%struct.dat* %9, i64 %10, %"class.std::allocator"* dereferenceable(1) %12)
  %14 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl", %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %15, i32 0, i32 1
  store %struct.dat* %13, %struct.dat** %16, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI3datSaIS0_EED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.82
  %3 = load i32, i32* @y.83
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 true, true
  %14 = and i1 %11, true
  %15 = and i1 %9, %13
  %16 = and i1 %12, true
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 true, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %124

; <label>:27:                                     ; preds = %1, %124
  %28 = alloca %"struct.std::_Vector_base"*, align 8
  %29 = alloca i8*
  %30 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %28, align 8
  %31 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %28, align 8
  %32 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl", %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %32, i32 0, i32 0
  %34 = load %struct.dat*, %struct.dat** %33, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl", %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %35, i32 0, i32 2
  %37 = load %struct.dat*, %struct.dat** %36, align 8
  %38 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl", %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %38, i32 0, i32 0
  %40 = load %struct.dat*, %struct.dat** %39, align 8
  %41 = ptrtoint %struct.dat* %37 to i64
  %42 = ptrtoint %struct.dat* %40 to i64
  %43 = sub i64 0, %42
  %44 = add i64 %41, %43
  %45 = sub i64 %41, %42
  %46 = sdiv exact i64 %44, 24
  %47 = load i32, i32* @x.82
  %48 = load i32, i32* @y.83
  %49 = sub i32 %47, -978967627
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -978967627
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  br i1 %71, label %73, label %124

; <label>:73:                                     ; preds = %27
  invoke void @_ZNSt12_Vector_baseI3datSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base"* %31, %struct.dat* %34, i64 %46)
          to label %74 unwind label %76

; <label>:74:                                     ; preds = %73
  %75 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI3datSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %75) #3
  ret void

; <label>:76:                                     ; preds = %73
  %77 = landingpad { i8*, i32 }
          catch i8* null
  %78 = extractvalue { i8*, i32 } %77, 0
  store i8* %78, i8** %29, align 8
  %79 = extractvalue { i8*, i32 } %77, 1
  store i32 %79, i32* %30, align 4
  %80 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  call void @_ZNSt12_Vector_baseI3datSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %80) #3
  br label %81

; <label>:81:                                     ; preds = %76
  %82 = load i32, i32* @x.82
  %83 = load i32, i32* @y.83
  %84 = sub i32 0, 1
  %85 = add i32 %82, %84
  %86 = sub i32 %82, 1
  %87 = mul i32 %82, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %83, 10
  %91 = xor i1 %89, true
  %92 = xor i1 %90, true
  %93 = xor i1 false, true
  %94 = and i1 %91, false
  %95 = and i1 %89, %93
  %96 = and i1 %92, false
  %97 = and i1 %90, %93
  %98 = or i1 %94, %95
  %99 = or i1 %96, %97
  %100 = xor i1 %98, %99
  %101 = or i1 %91, %92
  %102 = xor i1 %101, true
  %103 = or i1 false, %93
  %104 = and i1 %102, %103
  %105 = or i1 %100, %104
  %106 = or i1 %89, %90
  br i1 %105, label %107, label %200

; <label>:107:                                    ; preds = %81, %200
  %108 = load i8*, i8** %29, align 8
  call void @__clang_call_terminate(i8* %108) #12
  %109 = load i32, i32* @x.82
  %110 = load i32, i32* @y.83
  %111 = add i32 %109, 1389807133
  %112 = sub i32 %111, 1
  %113 = sub i32 %112, 1389807133
  %114 = sub i32 %109, 1
  %115 = mul i32 %109, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %110, 10
  %119 = and i1 %117, %118
  %120 = xor i1 %117, %118
  %121 = or i1 %119, %120
  %122 = or i1 %117, %118
  br i1 %121, label %123, label %200

; <label>:123:                                    ; preds = %107
  unreachable

; <label>:124:                                    ; preds = %27, %1
  %125 = alloca %"struct.std::_Vector_base"*, align 8
  %126 = alloca i8*
  %127 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %125, align 8
  %128 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %125, align 8
  %129 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %128, i32 0, i32 0
  %130 = getelementptr inbounds %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl", %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %129, i32 0, i32 0
  %131 = load %struct.dat*, %struct.dat** %130, align 8
  %132 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %128, i32 0, i32 0
  %133 = getelementptr inbounds %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl", %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %132, i32 0, i32 2
  %134 = load %struct.dat*, %struct.dat** %133, align 8
  %135 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %128, i32 0, i32 0
  %136 = getelementptr inbounds %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl", %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %135, i32 0, i32 0
  %137 = load %struct.dat*, %struct.dat** %136, align 8
  %138 = ptrtoint %struct.dat* %134 to i64
  %139 = ptrtoint %struct.dat* %137 to i64
  %140 = shl i64 %138, %139
  %141 = sub i64 0, %138
  %142 = add i64 0, %141
  %143 = sub i64 0, %138
  %144 = sub i64 %142, -6152058572745801796
  %145 = add i64 %144, %139
  %146 = add i64 %145, -6152058572745801796
  %147 = add i64 %142, %139
  %148 = sub i64 0, -7025244255465649063
  %149 = sub i64 %148, %138
  %150 = add i64 %149, -7025244255465649063
  %151 = sub i64 0, %138
  %152 = sub i64 0, %139
  %153 = sub i64 %150, %152
  %154 = add i64 %150, %139
  %155 = sub i64 %138, 872107280858921873
  %156 = sub i64 %155, %139
  %157 = add i64 %156, 872107280858921873
  %158 = sub i64 %138, %139
  %159 = mul i64 %157, %139
  %160 = add i64 %138, 6057814505087559778
  %161 = sub i64 %160, %139
  %162 = sub i64 %161, 6057814505087559778
  %163 = sub i64 %138, %139
  %164 = mul i64 %162, %139
  %165 = sub i64 %138, -2673126034343388355
  %166 = sub i64 %165, %139
  %167 = add i64 %166, -2673126034343388355
  %168 = sub i64 %138, %139
  %169 = shl i64 %167, 24
  %170 = shl i64 %167, 24
  %171 = add i64 %167, 5464034183549556105
  %172 = sub i64 %171, 24
  %173 = sub i64 %172, 5464034183549556105
  %174 = sub i64 %167, 24
  %175 = mul i64 %173, 24
  %176 = add i64 %167, -1467482017519082373
  %177 = sub i64 %176, 24
  %178 = sub i64 %177, -1467482017519082373
  %179 = sub i64 %167, 24
  %180 = mul i64 %178, 24
  %181 = sub i64 0, 24
  %182 = add i64 %167, %181
  %183 = sub i64 %167, 24
  %184 = mul i64 %182, 24
  %185 = sub i64 0, 8747728102370430723
  %186 = sub i64 %185, %167
  %187 = add i64 %186, 8747728102370430723
  %188 = sub i64 0, %167
  %189 = sub i64 0, %187
  %190 = sub i64 0, 24
  %191 = add i64 %189, %190
  %192 = sub i64 0, %191
  %193 = add i64 %187, 24
  %194 = add i64 %167, 9036136127385458659
  %195 = sub i64 %194, 24
  %196 = sub i64 %195, 9036136127385458659
  %197 = sub i64 %167, 24
  %198 = mul i64 %196, 24
  %199 = sdiv exact i64 %167, 24
  br label %27

; <label>:200:                                    ; preds = %107, %81
  %201 = load i8*, i8** %29, align 8
  call void @__clang_call_terminate(i8* %201) #12
  br label %107
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI3datSaIS0_EE12_Vector_implC2ERKS1_(%"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %0, %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"*, %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %5 to %"class.std::allocator"*
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  call void @_ZNSaI3datEC2ERKS0_(%"class.std::allocator"* %6, %"class.std::allocator"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl", %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %5, i32 0, i32 0
  store %struct.dat* null, %struct.dat** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl", %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %5, i32 0, i32 1
  store %struct.dat* null, %struct.dat** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl", %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %5, i32 0, i32 2
  store %struct.dat* null, %struct.dat** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI3datSaIS0_EE17_M_create_storageEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.86
  %6 = load i32, i32* @y.87
  %7 = sub i32 %5, -2010490688
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -2010490688
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 905529719, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %94
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 905529719, label %19
    i32 -1482124017, label %27
    i32 -937508343, label %73
    i32 1434085865, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %94

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1482124017, i32 1434085865
  store i32 %26, i32* %15
  br label %94

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base"*, align 8
  %29 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %28, align 8
  %31 = load i64, i64* %29, align 8
  %32 = call %struct.dat* @_ZNSt12_Vector_baseI3datSaIS0_EE11_M_allocateEm(%"struct.std::_Vector_base"* %30, i64 %31)
  %33 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %30, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl", %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %33, i32 0, i32 0
  store %struct.dat* %32, %struct.dat** %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %30, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl", %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %35, i32 0, i32 0
  %37 = load %struct.dat*, %struct.dat** %36, align 8
  %38 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %30, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl", %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %38, i32 0, i32 1
  store %struct.dat* %37, %struct.dat** %39, align 8
  %40 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %30, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl", %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %40, i32 0, i32 0
  %42 = load %struct.dat*, %struct.dat** %41, align 8
  %43 = load i64, i64* %29, align 8
  %44 = getelementptr inbounds %struct.dat, %struct.dat* %42, i64 %43
  %45 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %30, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl", %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %45, i32 0, i32 2
  store %struct.dat* %44, %struct.dat** %46, align 8
  %47 = load i32, i32* @x.86
  %48 = load i32, i32* @y.87
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -937508343, i32 1434085865
  store i32 %72, i32* %15
  br label %94

; <label>:73:                                     ; preds = %16
  ret void

; <label>:74:                                     ; preds = %16
  %75 = alloca %"struct.std::_Vector_base"*, align 8
  %76 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %75, align 8
  store i64 %1, i64* %76, align 8
  %77 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %75, align 8
  %78 = load i64, i64* %76, align 8
  %79 = call %struct.dat* @_ZNSt12_Vector_baseI3datSaIS0_EE11_M_allocateEm(%"struct.std::_Vector_base"* %77, i64 %78)
  %80 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %77, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl", %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %80, i32 0, i32 0
  store %struct.dat* %79, %struct.dat** %81, align 8
  %82 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %77, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl", %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %82, i32 0, i32 0
  %84 = load %struct.dat*, %struct.dat** %83, align 8
  %85 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %77, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl", %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %85, i32 0, i32 1
  store %struct.dat* %84, %struct.dat** %86, align 8
  %87 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %77, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl", %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %87, i32 0, i32 0
  %89 = load %struct.dat*, %struct.dat** %88, align 8
  %90 = load i64, i64* %76, align 8
  %91 = getelementptr inbounds %struct.dat, %struct.dat* %89, i64 %90
  %92 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %77, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl", %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %92, i32 0, i32 2
  store %struct.dat* %91, %struct.dat** %93, align 8
  store i32 -1482124017, i32* %15
  br label %94

; <label>:94:                                     ; preds = %74, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI3datSaIS0_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.88
  %5 = load i32, i32* @y.89
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -381655414, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %73
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -381655414, label %17
    i32 -813062701, label %37
    i32 -1987639289, label %68
    i32 -1972871252, label %69
  ]

; <label>:16:                                     ; preds = %14
  br label %73

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -813062701, i32 -1972871252
  store i32 %36, i32* %13
  br label %73

; <label>:37:                                     ; preds = %14
  %38 = alloca %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %0, %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"** %38, align 8
  %39 = load %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"*, %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"** %38, align 8
  %40 = bitcast %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %39 to %"class.std::allocator"*
  call void @_ZNSaI3datED2Ev(%"class.std::allocator"* %40) #3
  %41 = load i32, i32* @x.88
  %42 = load i32, i32* @y.89
  %43 = sub i32 %41, -47864410
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -47864410
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -1987639289, i32 -1972871252
  store i32 %67, i32* %13
  br label %73

; <label>:68:                                     ; preds = %14
  ret void

; <label>:69:                                     ; preds = %14
  %70 = alloca %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %0, %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"** %70, align 8
  %71 = load %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"*, %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"** %70, align 8
  %72 = bitcast %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %71 to %"class.std::allocator"*
  call void @_ZNSaI3datED2Ev(%"class.std::allocator"* %72) #3
  store i32 -813062701, i32* %13
  br label %73

; <label>:73:                                     ; preds = %69, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI3datEC2ERKS0_(%"class.std::allocator"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorI3datEC2ERKS2_(%"class.__gnu_cxx::new_allocator"* %6, %"class.__gnu_cxx::new_allocator"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI3datEC2ERKS2_(%"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %3, align 8
  store %"class.__gnu_cxx::new_allocator"* %1, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.dat* @_ZNSt12_Vector_baseI3datSaIS0_EE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"struct.std::_Vector_base"*
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.94
  %9 = load i32, i32* @y.95
  %10 = add i32 %8, -245585609
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -245585609
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -811938874, i32* %18
  %19 = alloca %struct.dat*
  br label %20

; <label>:20:                                     ; preds = %2, %85
  %21 = load i32, i32* %18
  switch i32 %21, label %22 [
    i32 -811938874, label %23
    i32 298879108, label %43
    i32 -1179508052, label %66
    i32 2009395217, label %69
    i32 1980780427, label %76
    i32 -301205500, label %77
    i32 798407047, label %79
  ]

; <label>:22:                                     ; preds = %20
  br label %85

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %7
  %25 = load volatile i1, i1* %6
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 298879108, i32 798407047
  store i32 %42, i32* %18
  br label %85

; <label>:43:                                     ; preds = %20
  %44 = alloca %"struct.std::_Vector_base"*, align 8
  %45 = alloca i64, align 8
  store i64* %45, i64** %5
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %44, align 8
  %46 = load volatile i64*, i64** %5
  store i64 %1, i64* %46, align 8
  %47 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %44, align 8
  store %"struct.std::_Vector_base"* %47, %"struct.std::_Vector_base"** %4
  %48 = load volatile i64*, i64** %5
  %49 = load i64, i64* %48, align 8
  %50 = icmp ne i64 %49, 0
  store i1 %50, i1* %3
  %51 = load i32, i32* @x.94
  %52 = load i32, i32* @y.95
  %53 = add i32 %51, 106589742
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, 106589742
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 -1179508052, i32 798407047
  store i32 %65, i32* %18
  br label %85

; <label>:66:                                     ; preds = %20
  %67 = load volatile i1, i1* %3
  %68 = select i1 %67, i32 2009395217, i32 1980780427
  store i32 %68, i32* %18
  br label %85

; <label>:69:                                     ; preds = %20
  %70 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4
  %71 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %70, i32 0, i32 0
  %72 = bitcast %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %71 to %"class.std::allocator"*
  %73 = load volatile i64*, i64** %5
  %74 = load i64, i64* %73, align 8
  %75 = call %struct.dat* @_ZNSt16allocator_traitsISaI3datEE8allocateERS1_m(%"class.std::allocator"* dereferenceable(1) %72, i64 %74)
  store i32 -301205500, i32* %18
  store %struct.dat* %75, %struct.dat** %19
  br label %85

; <label>:76:                                     ; preds = %20
  store i32 -301205500, i32* %18
  store %struct.dat* null, %struct.dat** %19
  br label %85

; <label>:77:                                     ; preds = %20
  %78 = load %struct.dat*, %struct.dat** %19
  ret %struct.dat* %78

; <label>:79:                                     ; preds = %20
  %80 = alloca %"struct.std::_Vector_base"*, align 8
  %81 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %80, align 8
  store i64 %1, i64* %81, align 8
  %82 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %80, align 8
  %83 = load i64, i64* %81, align 8
  %84 = icmp ne i64 %83, 0
  store i32 298879108, i32* %18
  br label %85

; <label>:85:                                     ; preds = %79, %76, %69, %66, %43, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.dat* @_ZNSt16allocator_traitsISaI3datEE8allocateERS1_m(%"class.std::allocator"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load i64, i64* %4, align 8
  %8 = call %struct.dat* @_ZN9__gnu_cxx13new_allocatorI3datE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %6, i64 %7, i8* null)
  ret %struct.dat* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.dat* @_ZN9__gnu_cxx13new_allocatorI3datE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorI3datE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -1833822497, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %72
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1833822497, label %16
    i32 -572688668, label %21
    i32 -1378573909, label %49
    i32 50072428, label %65
    i32 721390371, label %66
    i32 506521063, label %71
  ]

; <label>:15:                                     ; preds = %13
  br label %72

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -572688668, i32 721390371
  store i32 %20, i32* %12
  br label %72

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.98
  %23 = load i32, i32* @y.99
  %24 = add i32 %22, 856127371
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, 856127371
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 true, true
  %35 = and i1 %32, true
  %36 = and i1 %30, %34
  %37 = and i1 %33, true
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 true, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 -1378573909, i32 506521063
  store i32 %48, i32* %12
  br label %72

; <label>:49:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #16
  %50 = load i32, i32* @x.98
  %51 = load i32, i32* @y.99
  %52 = add i32 %50, -1985140634
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -1985140634
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 50072428, i32 506521063
  store i32 %64, i32* %12
  br label %72

; <label>:65:                                     ; preds = %13
  unreachable

; <label>:66:                                     ; preds = %13
  %67 = load i64, i64* %7, align 8
  %68 = mul i64 %67, 24
  %69 = call i8* @_Znwm(i64 %68)
  %70 = bitcast i8* %69 to %struct.dat*
  ret %struct.dat* %70

; <label>:71:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #16
  store i32 -1378573909, i32* %12
  br label %72

; <label>:72:                                     ; preds = %71, %49, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorI3datE8max_sizeEv(%"class.__gnu_cxx::new_allocator"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.100
  %5 = load i32, i32* @y.101
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 975364706, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %58
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 975364706, label %17
    i32 340835190, label %25
    i32 -1480071258, label %54
    i32 -1676518817, label %55
  ]

; <label>:16:                                     ; preds = %14
  br label %58

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 340835190, i32 -1676518817
  store i32 %24, i32* %13
  br label %58

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %26, align 8
  %28 = load i32, i32* @x.100
  %29 = load i32, i32* @y.101
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 false, true
  %40 = and i1 %37, false
  %41 = and i1 %35, %39
  %42 = and i1 %38, false
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 false, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  %53 = select i1 %51, i32 -1480071258, i32 -1676518817
  store i32 %53, i32* %13
  br label %58

; <label>:54:                                     ; preds = %14
  ret i64 768614336404564650

; <label>:55:                                     ; preds = %14
  %56 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %56, align 8
  %57 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %56, align 8
  store i32 340835190, i32* %13
  br label %58

; <label>:58:                                     ; preds = %55, %25, %17, %16
  br label %14
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #8

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #9

; Function Attrs: noinline uwtable
define linkonce_odr %struct.dat* @_ZSt27__uninitialized_default_n_aIP3datmS0_ET_S2_T0_RSaIT1_E(%struct.dat*, i64, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = alloca %struct.dat*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  store %struct.dat* %0, %struct.dat** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %7 = load %struct.dat*, %struct.dat** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call %struct.dat* @_ZSt25__uninitialized_default_nIP3datmET_S2_T0_(%struct.dat* %7, i64 %8)
  ret %struct.dat* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseI3datSaIS0_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.dat* @_ZSt25__uninitialized_default_nIP3datmET_S2_T0_(%struct.dat*, i64) #0 comdat {
  %3 = alloca %struct.dat*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8, align 1
  store %struct.dat* %0, %struct.dat** %3, align 8
  store i64 %1, i64* %4, align 8
  store i8 1, i8* %5, align 1
  %6 = load %struct.dat*, %struct.dat** %3, align 8
  %7 = load i64, i64* %4, align 8
  %8 = call %struct.dat* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP3datmEET_S4_T0_(%struct.dat* %6, i64 %7)
  ret %struct.dat* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.dat* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIP3datmEET_S4_T0_(%struct.dat*, i64) #0 comdat align 2 {
  %3 = alloca %struct.dat*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.dat, align 8
  store %struct.dat* %0, %struct.dat** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = load %struct.dat*, %struct.dat** %3, align 8
  %7 = load i64, i64* %4, align 8
  %8 = bitcast %struct.dat* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* %8, i8 0, i64 24, i32 8, i1 false)
  %9 = call %struct.dat* @_ZSt6fill_nIP3datmS0_ET_S2_T0_RKT1_(%struct.dat* %6, i64 %7, %struct.dat* dereferenceable(24) %5)
  ret %struct.dat* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.dat* @_ZSt6fill_nIP3datmS0_ET_S2_T0_RKT1_(%struct.dat*, i64, %struct.dat* dereferenceable(24)) #0 comdat {
  %4 = alloca %struct.dat*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.dat*, align 8
  store %struct.dat* %0, %struct.dat** %4, align 8
  store i64 %1, i64* %5, align 8
  store %struct.dat* %2, %struct.dat** %6, align 8
  %7 = load %struct.dat*, %struct.dat** %4, align 8
  %8 = call %struct.dat* @_ZSt12__niter_baseIP3datENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.dat* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load %struct.dat*, %struct.dat** %6, align 8
  %11 = call %struct.dat* @_ZSt10__fill_n_aIP3datmS0_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES5_T0_RKS4_(%struct.dat* %8, i64 %9, %struct.dat* dereferenceable(24) %10)
  ret %struct.dat* %11
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #6

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.dat* @_ZSt10__fill_n_aIP3datmS0_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES5_T0_RKS4_(%struct.dat*, i64, %struct.dat* dereferenceable(24)) #4 comdat {
  %4 = alloca i1
  %5 = alloca %struct.dat*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %struct.dat*, align 8
  %8 = alloca i64, align 8
  store %struct.dat* %0, %struct.dat** %5, align 8
  store i64 %1, i64* %6, align 8
  store %struct.dat* %2, %struct.dat** %7, align 8
  %9 = load i64, i64* %6, align 8
  store i64 %9, i64* %8, align 8
  %10 = alloca i32
  store i32 -12917055, i32* %10
  br label %11

; <label>:11:                                     ; preds = %3, %128
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 -12917055, label %14
    i32 921682476, label %30
    i32 1298932589, label %48
    i32 -853394021, label %51
    i32 -821039025, label %78
    i32 317869026, label %110
    i32 575407077, label %111
    i32 1017336246, label %118
    i32 -1770673294, label %120
    i32 -625309821, label %123
  ]

; <label>:13:                                     ; preds = %11
  br label %128

; <label>:14:                                     ; preds = %11
  %15 = load i32, i32* @x.112
  %16 = load i32, i32* @y.113
  %17 = sub i32 %15, -1794060113
  %18 = sub i32 %17, 1
  %19 = add i32 %18, -1794060113
  %20 = sub i32 %15, 1
  %21 = mul i32 %15, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %16, 10
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 921682476, i32 -1770673294
  store i32 %29, i32* %10
  br label %128

; <label>:30:                                     ; preds = %11
  %31 = load i64, i64* %8, align 8
  %32 = icmp ugt i64 %31, 0
  store i1 %32, i1* %4
  %33 = load i32, i32* @x.112
  %34 = load i32, i32* @y.113
  %35 = sub i32 %33, 1603503707
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 1603503707
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 1298932589, i32 -1770673294
  store i32 %47, i32* %10
  br label %128

; <label>:48:                                     ; preds = %11
  %49 = load volatile i1, i1* %4
  %50 = select i1 %49, i32 -853394021, i32 1017336246
  store i32 %50, i32* %10
  br label %128

; <label>:51:                                     ; preds = %11
  %52 = load i32, i32* @x.112
  %53 = load i32, i32* @y.113
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 -821039025, i32 -625309821
  store i32 %77, i32* %10
  br label %128

; <label>:78:                                     ; preds = %11
  %79 = load %struct.dat*, %struct.dat** %7, align 8
  %80 = load %struct.dat*, %struct.dat** %5, align 8
  %81 = bitcast %struct.dat* %80 to i8*
  %82 = bitcast %struct.dat* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %81, i8* %82, i64 24, i32 8, i1 false)
  %83 = load i32, i32* @x.112
  %84 = load i32, i32* @y.113
  %85 = sub i32 %83, -721287855
  %86 = sub i32 %85, 1
  %87 = add i32 %86, -721287855
  %88 = sub i32 %83, 1
  %89 = mul i32 %83, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %84, 10
  %93 = xor i1 %91, true
  %94 = xor i1 %92, true
  %95 = xor i1 true, true
  %96 = and i1 %93, true
  %97 = and i1 %91, %95
  %98 = and i1 %94, true
  %99 = and i1 %92, %95
  %100 = or i1 %96, %97
  %101 = or i1 %98, %99
  %102 = xor i1 %100, %101
  %103 = or i1 %93, %94
  %104 = xor i1 %103, true
  %105 = or i1 true, %95
  %106 = and i1 %104, %105
  %107 = or i1 %102, %106
  %108 = or i1 %91, %92
  %109 = select i1 %107, i32 317869026, i32 -625309821
  store i32 %109, i32* %10
  br label %128

; <label>:110:                                    ; preds = %11
  store i32 575407077, i32* %10
  br label %128

; <label>:111:                                    ; preds = %11
  %112 = load i64, i64* %8, align 8
  %113 = sub i64 0, -1
  %114 = sub i64 %112, %113
  %115 = add i64 %112, -1
  store i64 %114, i64* %8, align 8
  %116 = load %struct.dat*, %struct.dat** %5, align 8
  %117 = getelementptr inbounds %struct.dat, %struct.dat* %116, i32 1
  store %struct.dat* %117, %struct.dat** %5, align 8
  store i32 -12917055, i32* %10
  br label %128

; <label>:118:                                    ; preds = %11
  %119 = load %struct.dat*, %struct.dat** %5, align 8
  ret %struct.dat* %119

; <label>:120:                                    ; preds = %11
  %121 = load i64, i64* %8, align 8
  %122 = icmp ugt i64 %121, 0
  store i32 921682476, i32* %10
  br label %128

; <label>:123:                                    ; preds = %11
  %124 = load %struct.dat*, %struct.dat** %7, align 8
  %125 = load %struct.dat*, %struct.dat** %5, align 8
  %126 = bitcast %struct.dat* %125 to i8*
  %127 = bitcast %struct.dat* %124 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %126, i8* %127, i64 24, i32 8, i1 false)
  store i32 -821039025, i32* %10
  br label %128

; <label>:128:                                    ; preds = %123, %120, %111, %110, %78, %51, %48, %30, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.dat* @_ZSt12__niter_baseIP3datENSt11_Niter_baseIT_E13iterator_typeES3_(%struct.dat*) #0 comdat {
  %2 = alloca %struct.dat*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.114
  %6 = load i32, i32* @y.115
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 288383748, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %74
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 288383748, label %18
    i32 893589639, label %38
    i32 -1263312825, label %68
    i32 -795740154, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %74

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 893589639, i32 -795740154
  store i32 %37, i32* %14
  br label %74

; <label>:38:                                     ; preds = %15
  %39 = alloca %struct.dat*, align 8
  store %struct.dat* %0, %struct.dat** %39, align 8
  %40 = load %struct.dat*, %struct.dat** %39, align 8
  %41 = call %struct.dat* @_ZNSt10_Iter_baseIP3datLb0EE7_S_baseES1_(%struct.dat* %40)
  store %struct.dat* %41, %struct.dat** %2
  %42 = load i32, i32* @x.114
  %43 = load i32, i32* @y.115
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -1263312825, i32 -795740154
  store i32 %67, i32* %14
  br label %74

; <label>:68:                                     ; preds = %15
  %69 = load volatile %struct.dat*, %struct.dat** %2
  ret %struct.dat* %69

; <label>:70:                                     ; preds = %15
  %71 = alloca %struct.dat*, align 8
  store %struct.dat* %0, %struct.dat** %71, align 8
  %72 = load %struct.dat*, %struct.dat** %71, align 8
  %73 = call %struct.dat* @_ZNSt10_Iter_baseIP3datLb0EE7_S_baseES1_(%struct.dat* %72)
  store i32 893589639, i32* %14
  br label %74

; <label>:74:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.dat* @_ZNSt10_Iter_baseIP3datLb0EE7_S_baseES1_(%struct.dat*) #4 comdat align 2 {
  %2 = alloca %struct.dat*, align 8
  store %struct.dat* %0, %struct.dat** %2, align 8
  %3 = load %struct.dat*, %struct.dat** %2, align 8
  ret %struct.dat* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseI3datSaIS0_EE13_M_deallocateEPS0_m(%"struct.std::_Vector_base"*, %struct.dat*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca i64*
  %7 = alloca %struct.dat**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.118
  %11 = load i32, i32* @y.119
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 1556215691, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %87
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1556215691, label %23
    i32 508852204, label %31
    i32 -1444424044, label %68
    i32 -1653566464, label %71
    i32 1821035461, label %79
    i32 -722232033, label %80
  ]

; <label>:22:                                     ; preds = %20
  br label %87

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 508852204, i32 -722232033
  store i32 %30, i32* %19
  br label %87

; <label>:31:                                     ; preds = %20
  %32 = alloca %"struct.std::_Vector_base"*, align 8
  %33 = alloca %struct.dat*, align 8
  store %struct.dat** %33, %struct.dat*** %7
  %34 = alloca i64, align 8
  store i64* %34, i64** %6
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %32, align 8
  %35 = load volatile %struct.dat**, %struct.dat*** %7
  store %struct.dat* %1, %struct.dat** %35, align 8
  %36 = load volatile i64*, i64** %6
  store i64 %2, i64* %36, align 8
  %37 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %32, align 8
  store %"struct.std::_Vector_base"* %37, %"struct.std::_Vector_base"** %5
  %38 = load volatile %struct.dat**, %struct.dat*** %7
  %39 = load %struct.dat*, %struct.dat** %38, align 8
  %40 = icmp ne %struct.dat* %39, null
  store i1 %40, i1* %4
  %41 = load i32, i32* @x.118
  %42 = load i32, i32* @y.119
  %43 = add i32 %41, 1023437987
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 1023437987
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -1444424044, i32 -722232033
  store i32 %67, i32* %19
  br label %87

; <label>:68:                                     ; preds = %20
  %69 = load volatile i1, i1* %4
  %70 = select i1 %69, i32 -1653566464, i32 1821035461
  store i32 %70, i32* %19
  br label %87

; <label>:71:                                     ; preds = %20
  %72 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %73 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %72, i32 0, i32 0
  %74 = bitcast %"struct.std::_Vector_base<dat, std::allocator<dat> >::_Vector_impl"* %73 to %"class.std::allocator"*
  %75 = load volatile %struct.dat**, %struct.dat*** %7
  %76 = load %struct.dat*, %struct.dat** %75, align 8
  %77 = load volatile i64*, i64** %6
  %78 = load i64, i64* %77, align 8
  call void @_ZNSt16allocator_traitsISaI3datEE10deallocateERS1_PS0_m(%"class.std::allocator"* dereferenceable(1) %74, %struct.dat* %76, i64 %78)
  store i32 1821035461, i32* %19
  br label %87

; <label>:79:                                     ; preds = %20
  ret void

; <label>:80:                                     ; preds = %20
  %81 = alloca %"struct.std::_Vector_base"*, align 8
  %82 = alloca %struct.dat*, align 8
  %83 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %81, align 8
  store %struct.dat* %1, %struct.dat** %82, align 8
  store i64 %2, i64* %83, align 8
  %84 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %81, align 8
  %85 = load %struct.dat*, %struct.dat** %82, align 8
  %86 = icmp ne %struct.dat* %85, null
  store i32 508852204, i32* %19
  br label %87

; <label>:87:                                     ; preds = %80, %71, %68, %31, %23, %22
  br label %20
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #10 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #12
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaI3datEE10deallocateERS1_PS0_m(%"class.std::allocator"* dereferenceable(1), %struct.dat*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.122
  %7 = load i32, i32* @y.123
  %8 = sub i32 %6, 168058721
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 168058721
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -962913537, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %71
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -962913537, label %20
    i32 -1520278306, label %40
    i32 1385777241, label %62
    i32 -299557057, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %71

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1520278306, i32 -299557057
  store i32 %39, i32* %16
  br label %71

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator"*, align 8
  %42 = alloca %struct.dat*, align 8
  %43 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %41, align 8
  store %struct.dat* %1, %struct.dat** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.std::allocator"*, %"class.std::allocator"** %41, align 8
  %45 = bitcast %"class.std::allocator"* %44 to %"class.__gnu_cxx::new_allocator"*
  %46 = load %struct.dat*, %struct.dat** %42, align 8
  %47 = load i64, i64* %43, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI3datE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator"* %45, %struct.dat* %46, i64 %47)
  %48 = load i32, i32* @x.122
  %49 = load i32, i32* @y.123
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 1385777241, i32 -299557057
  store i32 %61, i32* %16
  br label %71

; <label>:62:                                     ; preds = %17
  ret void

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.std::allocator"*, align 8
  %65 = alloca %struct.dat*, align 8
  %66 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %64, align 8
  store %struct.dat* %1, %struct.dat** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"class.std::allocator"*, %"class.std::allocator"** %64, align 8
  %68 = bitcast %"class.std::allocator"* %67 to %"class.__gnu_cxx::new_allocator"*
  %69 = load %struct.dat*, %struct.dat** %65, align 8
  %70 = load i64, i64* %66, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI3datE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator"* %68, %struct.dat* %69, i64 %70)
  store i32 -1520278306, i32* %16
  br label %71

; <label>:71:                                     ; preds = %63, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI3datE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator"*, %struct.dat*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca %struct.dat*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store %struct.dat* %1, %struct.dat** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load %struct.dat*, %struct.dat** %5, align 8
  %9 = bitcast %struct.dat* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #11

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP3datS0_EvT_S2_RSaIT0_E(%struct.dat*, %struct.dat*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = alloca %struct.dat*, align 8
  %5 = alloca %struct.dat*, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  store %struct.dat* %0, %struct.dat** %4, align 8
  store %struct.dat* %1, %struct.dat** %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %7 = load %struct.dat*, %struct.dat** %4, align 8
  %8 = load %struct.dat*, %struct.dat** %5, align 8
  call void @_ZSt8_DestroyIP3datEvT_S2_(%struct.dat* %7, %struct.dat* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIP3datEvT_S2_(%struct.dat*, %struct.dat*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.128
  %6 = load i32, i32* @y.129
  %7 = sub i32 %5, -88410130
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -88410130
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1592795044, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1592795044, label %19
    i32 -363259274, label %27
    i32 -261285194, label %59
    i32 -992434728, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -363259274, i32 -992434728
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %struct.dat*, align 8
  %29 = alloca %struct.dat*, align 8
  store %struct.dat* %0, %struct.dat** %28, align 8
  store %struct.dat* %1, %struct.dat** %29, align 8
  %30 = load %struct.dat*, %struct.dat** %28, align 8
  %31 = load %struct.dat*, %struct.dat** %29, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIP3datEEvT_S4_(%struct.dat* %30, %struct.dat* %31)
  %32 = load i32, i32* @x.128
  %33 = load i32, i32* @y.129
  %34 = sub i32 %32, -799929035
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -799929035
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -261285194, i32 -992434728
  store i32 %58, i32* %15
  br label %65

; <label>:59:                                     ; preds = %16
  ret void

; <label>:60:                                     ; preds = %16
  %61 = alloca %struct.dat*, align 8
  %62 = alloca %struct.dat*, align 8
  store %struct.dat* %0, %struct.dat** %61, align 8
  store %struct.dat* %1, %struct.dat** %62, align 8
  %63 = load %struct.dat*, %struct.dat** %61, align 8
  %64 = load %struct.dat*, %struct.dat** %62, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIP3datEEvT_S4_(%struct.dat* %63, %struct.dat* %64)
  store i32 -363259274, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIP3datEEvT_S4_(%struct.dat*, %struct.dat*) #4 comdat align 2 {
  %3 = alloca %struct.dat*, align 8
  %4 = alloca %struct.dat*, align 8
  store %struct.dat* %0, %struct.dat** %3, align 8
  store %struct.dat* %1, %struct.dat** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt3mapIxSt3setISt4pairIxxESt4lessIS4_ESaIS4_EES5_IxESaIS3_IKxS8_EEEEC2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt3mapIxSt3setISt4pairIxxESt4lessIS4_ESaIS4_EES5_IxESaIS3_IKxS8_EEEED2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.134
  %5 = load i32, i32* @y.135
  %6 = sub i32 %4, -135376781
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -135376781
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1619803857, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %59
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1619803857, label %18
    i32 643823560, label %26
    i32 -1731230845, label %55
    i32 -755550038, label %56
  ]

; <label>:17:                                     ; preds = %15
  br label %59

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 643823560, i32 -755550038
  store i32 %25, i32* %14
  br label %59

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %27, align 8
  %29 = load i32, i32* @x.134
  %30 = load i32, i32* @y.135
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 -1731230845, i32 -755550038
  store i32 %54, i32* %14
  br label %59

; <label>:55:                                     ; preds = %15
  ret void

; <label>:56:                                     ; preds = %15
  %57 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %57, align 8
  store i32 643823560, i32* %14
  br label %59

; <label>:59:                                     ; preds = %56, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EEC2EmRKSD_(%"struct.std::_Vector_base.1"*, i64, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.1"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %9 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %6, align 8
  call void @_ZNSt12_Vector_baseISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EE12_Vector_implC2ERKSD_(%"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %10, %"class.std::allocator.2"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EE17_M_create_storageEm(%"struct.std::_Vector_base.1"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %10) #3
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i32, i32* @x.136
  %20 = load i32, i32* @y.137
  %21 = sub i32 0, 1
  %22 = add i32 %19, %21
  %23 = sub i32 %19, 1
  %24 = mul i32 %19, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %20, 10
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 true, true
  %31 = and i1 %28, true
  %32 = and i1 %26, %30
  %33 = and i1 %29, true
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 true, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  br i1 %42, label %44, label %76

; <label>:44:                                     ; preds = %18, %76
  %45 = load i8*, i8** %7, align 8
  %46 = load i32, i32* %8, align 4
  %47 = insertvalue { i8*, i32 } undef, i8* %45, 0
  %48 = insertvalue { i8*, i32 } %47, i32 %46, 1
  %49 = load i32, i32* @x.136
  %50 = load i32, i32* @y.137
  %51 = add i32 %49, 1549344713
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, 1549344713
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  br i1 %73, label %75, label %76

; <label>:75:                                     ; preds = %44
  resume { i8*, i32 } %48

; <label>:76:                                     ; preds = %44, %18
  %77 = load i8*, i8** %7, align 8
  %78 = load i32, i32* %8, align 4
  %79 = insertvalue { i8*, i32 } undef, i8* %77, 0
  %80 = insertvalue { i8*, i32 } %79, i32 %78, 1
  br label %44
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EE21_M_default_initializeEm(%"class.std::vector.0"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::map"*, %"class.std::map"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %12 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %11) #3
  %13 = call %"class.std::map"* @_ZSt27__uninitialized_default_n_aIPSt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEEmSC_ET_SE_T0_RSaIT1_E(%"class.std::map"* %9, i64 %10, %"class.std::allocator.2"* dereferenceable(1) %12)
  %14 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %15, i32 0, i32 1
  store %"class.std::map"* %13, %"class.std::map"** %16, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EED2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %5 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::map"*, %"class.std::map"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::map"*, %"class.std::map"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::map"*, %"class.std::map"** %13, align 8
  %15 = ptrtoint %"class.std::map"* %11 to i64
  %16 = ptrtoint %"class.std::map"* %14 to i64
  %17 = add i64 %15, -6154663372416317604
  %18 = sub i64 %17, %16
  %19 = sub i64 %18, -6154663372416317604
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 48
  invoke void @_ZNSt12_Vector_baseISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EE13_M_deallocateEPSC_m(%"struct.std::_Vector_base.1"* %5, %"class.std::map"* %8, i64 %21)
          to label %22 unwind label %53

; <label>:22:                                     ; preds = %1
  %23 = load i32, i32* @x.140
  %24 = load i32, i32* @y.141
  %25 = add i32 %23, -538400189
  %26 = sub i32 %25, 1
  %27 = sub i32 %26, -538400189
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  br i1 %35, label %37, label %113

; <label>:37:                                     ; preds = %22, %113
  %38 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %38) #3
  %39 = load i32, i32* @x.140
  %40 = load i32, i32* @y.141
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %113

; <label>:52:                                     ; preds = %37
  ret void

; <label>:53:                                     ; preds = %1
  %54 = landingpad { i8*, i32 }
          catch i8* null
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %3, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %4, align 4
  %57 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %57) #3
  br label %58

; <label>:58:                                     ; preds = %53
  %59 = load i32, i32* @x.140
  %60 = load i32, i32* @y.141
  %61 = sub i32 %59, -1039011635
  %62 = sub i32 %61, 1
  %63 = add i32 %62, -1039011635
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 false, true
  %72 = and i1 %69, false
  %73 = and i1 %67, %71
  %74 = and i1 %70, false
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 false, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  br i1 %83, label %85, label %115

; <label>:85:                                     ; preds = %58, %115
  %86 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %86) #12
  %87 = load i32, i32* @x.140
  %88 = load i32, i32* @y.141
  %89 = sub i32 0, 1
  %90 = add i32 %87, %89
  %91 = sub i32 %87, 1
  %92 = mul i32 %87, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %88, 10
  %96 = xor i1 %94, true
  %97 = xor i1 %95, true
  %98 = xor i1 true, true
  %99 = and i1 %96, true
  %100 = and i1 %94, %98
  %101 = and i1 %97, true
  %102 = and i1 %95, %98
  %103 = or i1 %99, %100
  %104 = or i1 %101, %102
  %105 = xor i1 %103, %104
  %106 = or i1 %96, %97
  %107 = xor i1 %106, true
  %108 = or i1 true, %98
  %109 = and i1 %107, %108
  %110 = or i1 %105, %109
  %111 = or i1 %94, %95
  br i1 %110, label %112, label %115

; <label>:112:                                    ; preds = %85
  unreachable

; <label>:113:                                    ; preds = %37, %22
  %114 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %114) #3
  br label %37

; <label>:115:                                    ; preds = %85, %58
  %116 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %116) #12
  br label %85
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EE12_Vector_implC2ERKSD_(%"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.142
  %6 = load i32, i32* @y.143
  %7 = add i32 %5, 1234154434
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1234154434
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1202274710, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %72
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1202274710, label %19
    i32 -1550523141, label %39
    i32 -1362438783, label %62
    i32 -1566849354, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %72

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1550523141, i32 -1566849354
  store i32 %38, i32* %15
  br label %72

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"*, align 8
  %41 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"** %40, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %41, align 8
  %42 = load %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"** %40, align 8
  %43 = bitcast %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %42 to %"class.std::allocator.2"*
  %44 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %41, align 8
  call void @_ZNSaISt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEEEC2ERKSC_(%"class.std::allocator.2"* %43, %"class.std::allocator.2"* dereferenceable(1) %44) #3
  %45 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %42, i32 0, i32 0
  store %"class.std::map"* null, %"class.std::map"** %45, align 8
  %46 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %42, i32 0, i32 1
  store %"class.std::map"* null, %"class.std::map"** %46, align 8
  %47 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %42, i32 0, i32 2
  store %"class.std::map"* null, %"class.std::map"** %47, align 8
  %48 = load i32, i32* @x.142
  %49 = load i32, i32* @y.143
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -1362438783, i32 -1566849354
  store i32 %61, i32* %15
  br label %72

; <label>:62:                                     ; preds = %16
  ret void

; <label>:63:                                     ; preds = %16
  %64 = alloca %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"*, align 8
  %65 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"** %64, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %65, align 8
  %66 = load %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"** %64, align 8
  %67 = bitcast %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %66 to %"class.std::allocator.2"*
  %68 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %65, align 8
  call void @_ZNSaISt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEEEC2ERKSC_(%"class.std::allocator.2"* %67, %"class.std::allocator.2"* dereferenceable(1) %68) #3
  %69 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %66, i32 0, i32 0
  store %"class.std::map"* null, %"class.std::map"** %69, align 8
  %70 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %66, i32 0, i32 1
  store %"class.std::map"* null, %"class.std::map"** %70, align 8
  %71 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %66, i32 0, i32 2
  store %"class.std::map"* null, %"class.std::map"** %71, align 8
  store i32 -1550523141, i32* %15
  br label %72

; <label>:72:                                     ; preds = %63, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EE17_M_create_storageEm(%"struct.std::_Vector_base.1"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.1"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"class.std::map"* @_ZNSt12_Vector_baseISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EE11_M_allocateEm(%"struct.std::_Vector_base.1"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %8, i32 0, i32 0
  store %"class.std::map"* %7, %"class.std::map"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"class.std::map"*, %"class.std::map"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %13, i32 0, i32 1
  store %"class.std::map"* %12, %"class.std::map"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"class.std::map"*, %"class.std::map"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"class.std::map", %"class.std::map"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %20, i32 0, i32 2
  store %"class.std::map"* %19, %"class.std::map"** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %3 to %"class.std::allocator.2"*
  call void @_ZNSaISt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEEED2Ev(%"class.std::allocator.2"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEEEC2ERKSC_(%"class.std::allocator.2"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = bitcast %"class.std::allocator.2"* %7 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt3mapIxSt3setISt4pairIxxESt4lessIS4_ESaIS4_EES5_IxESaIS3_IKxS8_EEEEC2ERKSE_(%"class.__gnu_cxx::new_allocator.3"* %6, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt3mapIxSt3setISt4pairIxxESt4lessIS4_ESaIS4_EES5_IxESaIS3_IKxS8_EEEEC2ERKSE_(%"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.150
  %6 = load i32, i32* @y.151
  %7 = add i32 %5, -2133798261
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -2133798261
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1911970720, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %75
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1911970720, label %19
    i32 -880625352, label %39
    i32 -1133993342, label %70
    i32 242719986, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %75

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -880625352, i32 242719986
  store i32 %38, i32* %15
  br label %75

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %41 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %40, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %1, %"class.__gnu_cxx::new_allocator.3"** %41, align 8
  %42 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %40, align 8
  %43 = load i32, i32* @x.150
  %44 = load i32, i32* @y.151
  %45 = add i32 %43, -406701823
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -406701823
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -1133993342, i32 242719986
  store i32 %69, i32* %15
  br label %75

; <label>:70:                                     ; preds = %16
  ret void

; <label>:71:                                     ; preds = %16
  %72 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %73 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %72, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %1, %"class.__gnu_cxx::new_allocator.3"** %73, align 8
  %74 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %72, align 8
  store i32 -880625352, i32* %15
  br label %75

; <label>:75:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::map"* @_ZNSt12_Vector_baseISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EE11_M_allocateEm(%"struct.std::_Vector_base.1"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::map"*
  %4 = alloca %"class.std::map"*
  %5 = alloca i64
  %6 = alloca %"struct.std::_Vector_base.1"*
  %7 = alloca %"struct.std::_Vector_base.1"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %7, align 8
  store i64 %1, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %7, align 8
  store %"struct.std::_Vector_base.1"* %9, %"struct.std::_Vector_base.1"** %6
  %10 = load i64, i64* %8, align 8
  store i64 %10, i64* %5
  %11 = alloca i32
  store i32 884768358, i32* %11
  %12 = alloca %"class.std::map"*
  br label %13

; <label>:13:                                     ; preds = %2, %169
  %14 = load i32, i32* %11
  switch i32 %14, label %15 [
    i32 884768358, label %16
    i32 1773238887, label %20
    i32 442520084, label %48
    i32 1203260532, label %80
    i32 226444104, label %82
    i32 -871909458, label %98
    i32 -1474129738, label %126
    i32 -1662453370, label %127
    i32 463320796, label %143
    i32 -1311621367, label %159
    i32 -176165503, label %161
    i32 -749647075, label %167
    i32 -1265569511, label %168
  ]

; <label>:15:                                     ; preds = %13
  br label %169

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = icmp ne i64 %17, 0
  %19 = select i1 %18, i32 1773238887, i32 226444104
  store i32 %19, i32* %11
  br label %169

; <label>:20:                                     ; preds = %13
  %21 = load i32, i32* @x.152
  %22 = load i32, i32* @y.153
  %23 = add i32 %21, 1978736363
  %24 = sub i32 %23, 1
  %25 = sub i32 %24, 1978736363
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 false, true
  %34 = and i1 %31, false
  %35 = and i1 %29, %33
  %36 = and i1 %32, false
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 false, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  %47 = select i1 %45, i32 442520084, i32 -176165503
  store i32 %47, i32* %11
  br label %169

; <label>:48:                                     ; preds = %13
  %49 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %6
  %50 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %49, i32 0, i32 0
  %51 = bitcast %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %50 to %"class.std::allocator.2"*
  %52 = load i64, i64* %8, align 8
  %53 = call %"class.std::map"* @_ZNSt16allocator_traitsISaISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEEEE8allocateERSD_m(%"class.std::allocator.2"* dereferenceable(1) %51, i64 %52)
  store %"class.std::map"* %53, %"class.std::map"** %4
  %54 = load i32, i32* @x.152
  %55 = load i32, i32* @y.153
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 1203260532, i32 -176165503
  store i32 %79, i32* %11
  br label %169

; <label>:80:                                     ; preds = %13
  store i32 -1662453370, i32* %11
  %81 = load volatile %"class.std::map"*, %"class.std::map"** %4
  store %"class.std::map"* %81, %"class.std::map"** %12
  br label %169

; <label>:82:                                     ; preds = %13
  %83 = load i32, i32* @x.152
  %84 = load i32, i32* @y.153
  %85 = sub i32 %83, -1663022575
  %86 = sub i32 %85, 1
  %87 = add i32 %86, -1663022575
  %88 = sub i32 %83, 1
  %89 = mul i32 %83, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %84, 10
  %93 = and i1 %91, %92
  %94 = xor i1 %91, %92
  %95 = or i1 %93, %94
  %96 = or i1 %91, %92
  %97 = select i1 %95, i32 -871909458, i32 -749647075
  store i32 %97, i32* %11
  br label %169

; <label>:98:                                     ; preds = %13
  %99 = load i32, i32* @x.152
  %100 = load i32, i32* @y.153
  %101 = add i32 %99, 1405454397
  %102 = sub i32 %101, 1
  %103 = sub i32 %102, 1405454397
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = xor i1 %107, true
  %110 = xor i1 %108, true
  %111 = xor i1 false, true
  %112 = and i1 %109, false
  %113 = and i1 %107, %111
  %114 = and i1 %110, false
  %115 = and i1 %108, %111
  %116 = or i1 %112, %113
  %117 = or i1 %114, %115
  %118 = xor i1 %116, %117
  %119 = or i1 %109, %110
  %120 = xor i1 %119, true
  %121 = or i1 false, %111
  %122 = and i1 %120, %121
  %123 = or i1 %118, %122
  %124 = or i1 %107, %108
  %125 = select i1 %123, i32 -1474129738, i32 -749647075
  store i32 %125, i32* %11
  br label %169

; <label>:126:                                    ; preds = %13
  store i32 -1662453370, i32* %11
  store %"class.std::map"* null, %"class.std::map"** %12
  br label %169

; <label>:127:                                    ; preds = %13
  %128 = load %"class.std::map"*, %"class.std::map"** %12
  store %"class.std::map"* %128, %"class.std::map"** %3
  %129 = load i32, i32* @x.152
  %130 = load i32, i32* @y.153
  %131 = sub i32 0, 1
  %132 = add i32 %129, %131
  %133 = sub i32 %129, 1
  %134 = mul i32 %129, %132
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %130, 10
  %138 = and i1 %136, %137
  %139 = xor i1 %136, %137
  %140 = or i1 %138, %139
  %141 = or i1 %136, %137
  %142 = select i1 %140, i32 463320796, i32 -1265569511
  store i32 %142, i32* %11
  br label %169

; <label>:143:                                    ; preds = %13
  %144 = load i32, i32* @x.152
  %145 = load i32, i32* @y.153
  %146 = sub i32 %144, -432456378
  %147 = sub i32 %146, 1
  %148 = add i32 %147, -432456378
  %149 = sub i32 %144, 1
  %150 = mul i32 %144, %148
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %145, 10
  %154 = and i1 %152, %153
  %155 = xor i1 %152, %153
  %156 = or i1 %154, %155
  %157 = or i1 %152, %153
  %158 = select i1 %156, i32 -1311621367, i32 -1265569511
  store i32 %158, i32* %11
  br label %169

; <label>:159:                                    ; preds = %13
  %160 = load volatile %"class.std::map"*, %"class.std::map"** %3
  ret %"class.std::map"* %160

; <label>:161:                                    ; preds = %13
  %162 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %6
  %163 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %162, i32 0, i32 0
  %164 = bitcast %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %163 to %"class.std::allocator.2"*
  %165 = load i64, i64* %8, align 8
  %166 = call %"class.std::map"* @_ZNSt16allocator_traitsISaISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEEEE8allocateERSD_m(%"class.std::allocator.2"* dereferenceable(1) %164, i64 %165)
  store i32 442520084, i32* %11
  br label %169

; <label>:167:                                    ; preds = %13
  store i32 -871909458, i32* %11
  br label %169

; <label>:168:                                    ; preds = %13
  store i32 463320796, i32* %11
  br label %169

; <label>:169:                                    ; preds = %168, %167, %161, %143, %127, %126, %98, %82, %80, %48, %20, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::map"* @_ZNSt16allocator_traitsISaISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEEEE8allocateERSD_m(%"class.std::allocator.2"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::map"* @_ZN9__gnu_cxx13new_allocatorISt3mapIxSt3setISt4pairIxxESt4lessIS4_ESaIS4_EES5_IxESaIS3_IKxS8_EEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"* %6, i64 %7, i8* null)
  ret %"class.std::map"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::map"* @_ZN9__gnu_cxx13new_allocatorISt3mapIxSt3setISt4pairIxxESt4lessIS4_ESaIS4_EES5_IxESaIS3_IKxS8_EEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt3mapIxSt3setISt4pairIxxESt4lessIS4_ESaIS4_EES5_IxESaIS3_IKxS8_EEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -371225909, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -371225909, label %16
    i32 1675535998, label %21
    i32 -640424789, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 1675535998, i32 -640424789
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #16
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 48
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"class.std::map"*
  ret %"class.std::map"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt3mapIxSt3setISt4pairIxxESt4lessIS4_ESaIS4_EES5_IxESaIS3_IKxS8_EEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.158
  %5 = load i32, i32* @y.159
  %6 = sub i32 %4, -439209582
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -439209582
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1251837754, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1251837754, label %18
    i32 -451183558, label %38
    i32 902764553, label %68
    i32 804220094, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -451183558, i32 804220094
  store i32 %37, i32* %14
  br label %72

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %39, align 8
  %41 = load i32, i32* @x.158
  %42 = load i32, i32* @y.159
  %43 = sub i32 %41, -806619370
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -806619370
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 902764553, i32 804220094
  store i32 %67, i32* %14
  br label %72

; <label>:68:                                     ; preds = %15
  ret i64 384307168202282325

; <label>:69:                                     ; preds = %15
  %70 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %70, align 8
  %71 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %70, align 8
  store i32 -451183558, i32* %14
  br label %72

; <label>:72:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::map"* @_ZSt27__uninitialized_default_n_aIPSt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEEmSC_ET_SE_T0_RSaIT1_E(%"class.std::map"*, i64, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::map"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.160
  %8 = load i32, i32* @y.161
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -2007516337, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %58
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -2007516337, label %20
    i32 1382463548, label %28
    i32 -1068437709, label %49
    i32 -84010340, label %51
  ]

; <label>:19:                                     ; preds = %17
  br label %58

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1382463548, i32 -84010340
  store i32 %27, i32* %16
  br label %58

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::map"*, align 8
  %30 = alloca i64, align 8
  %31 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::map"* %0, %"class.std::map"** %29, align 8
  store i64 %1, i64* %30, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %31, align 8
  %32 = load %"class.std::map"*, %"class.std::map"** %29, align 8
  %33 = load i64, i64* %30, align 8
  %34 = call %"class.std::map"* @_ZSt25__uninitialized_default_nIPSt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEEmET_SE_T0_(%"class.std::map"* %32, i64 %33)
  store %"class.std::map"* %34, %"class.std::map"** %4
  %35 = load i32, i32* @x.160
  %36 = load i32, i32* @y.161
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -1068437709, i32 -84010340
  store i32 %48, i32* %16
  br label %58

; <label>:49:                                     ; preds = %17
  %50 = load volatile %"class.std::map"*, %"class.std::map"** %4
  ret %"class.std::map"* %50

; <label>:51:                                     ; preds = %17
  %52 = alloca %"class.std::map"*, align 8
  %53 = alloca i64, align 8
  %54 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::map"* %0, %"class.std::map"** %52, align 8
  store i64 %1, i64* %53, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %54, align 8
  %55 = load %"class.std::map"*, %"class.std::map"** %52, align 8
  %56 = load i64, i64* %53, align 8
  %57 = call %"class.std::map"* @_ZSt25__uninitialized_default_nIPSt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEEmET_SE_T0_(%"class.std::map"* %55, i64 %56)
  store i32 1382463548, i32* %16
  br label %58

; <label>:58:                                     ; preds = %51, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %3 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %4 to %"class.std::allocator.2"*
  ret %"class.std::allocator.2"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::map"* @_ZSt25__uninitialized_default_nIPSt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEEmET_SE_T0_(%"class.std::map"*, i64) #0 comdat {
  %3 = alloca %"class.std::map"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.164
  %7 = load i32, i32* @y.165
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 2055346656, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2055346656, label %19
    i32 -1896621868, label %27
    i32 1552617751, label %61
    i32 1390765469, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1896621868, i32 1390765469
  store i32 %26, i32* %15
  br label %70

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::map"*, align 8
  %29 = alloca i64, align 8
  %30 = alloca i8, align 1
  store %"class.std::map"* %0, %"class.std::map"** %28, align 8
  store i64 %1, i64* %29, align 8
  store i8 1, i8* %30, align 1
  %31 = load %"class.std::map"*, %"class.std::map"** %28, align 8
  %32 = load i64, i64* %29, align 8
  %33 = call %"class.std::map"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt3mapIxSt3setISt4pairIxxESt4lessIS5_ESaIS5_EES6_IxESaIS4_IKxS9_EEEmEET_SG_T0_(%"class.std::map"* %31, i64 %32)
  store %"class.std::map"* %33, %"class.std::map"** %3
  %34 = load i32, i32* @x.164
  %35 = load i32, i32* @y.165
  %36 = sub i32 %34, 951158362
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 951158362
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 1552617751, i32 1390765469
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  %62 = load volatile %"class.std::map"*, %"class.std::map"** %3
  ret %"class.std::map"* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::map"*, align 8
  %65 = alloca i64, align 8
  %66 = alloca i8, align 1
  store %"class.std::map"* %0, %"class.std::map"** %64, align 8
  store i64 %1, i64* %65, align 8
  store i8 1, i8* %66, align 1
  %67 = load %"class.std::map"*, %"class.std::map"** %64, align 8
  %68 = load i64, i64* %65, align 8
  %69 = call %"class.std::map"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt3mapIxSt3setISt4pairIxxESt4lessIS5_ESaIS5_EES6_IxESaIS4_IKxS9_EEEmEET_SG_T0_(%"class.std::map"* %67, i64 %68)
  store i32 -1896621868, i32* %15
  br label %70

; <label>:70:                                     ; preds = %63, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::map"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt3mapIxSt3setISt4pairIxxESt4lessIS5_ESaIS5_EES6_IxESaIS4_IKxS9_EEEmEET_SG_T0_(%"class.std::map"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::map"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::map"*, align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::map"* %0, %"class.std::map"** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = load %"class.std::map"*, %"class.std::map"** %3, align 8
  store %"class.std::map"* %8, %"class.std::map"** %5, align 8
  br label %9

; <label>:9:                                      ; preds = %136, %2
  %10 = load i32, i32* @x.166
  %11 = load i32, i32* @y.167
  %12 = add i32 %10, 197777894
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, 197777894
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %11, 10
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  br i1 %22, label %24, label %328

; <label>:24:                                     ; preds = %9, %328
  %25 = load i64, i64* %4, align 8
  %26 = icmp ugt i64 %25, 0
  %27 = load i32, i32* @x.166
  %28 = load i32, i32* @y.167
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 false, true
  %39 = and i1 %36, false
  %40 = and i1 %34, %38
  %41 = and i1 %37, false
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 false, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  br i1 %50, label %52, label %328

; <label>:52:                                     ; preds = %24
  br i1 %26, label %53, label %188

; <label>:53:                                     ; preds = %52
  %54 = load i32, i32* @x.166
  %55 = load i32, i32* @y.167
  %56 = add i32 %54, 1652901077
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, 1652901077
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  br i1 %66, label %68, label %331

; <label>:68:                                     ; preds = %53, %331
  %69 = load %"class.std::map"*, %"class.std::map"** %5, align 8
  %70 = call %"class.std::map"* @_ZSt11__addressofISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEEEPT_RSD_(%"class.std::map"* dereferenceable(48) %69) #3
  %71 = load i32, i32* @x.166
  %72 = load i32, i32* @y.167
  %73 = add i32 %71, -568131271
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, -568131271
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  br i1 %83, label %85, label %331

; <label>:85:                                     ; preds = %68
  invoke void @_ZSt10_ConstructISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEEJEEvPT_DpOT0_(%"class.std::map"* %70)
          to label %86 unwind label %137

; <label>:86:                                     ; preds = %85
  br label %87

; <label>:87:                                     ; preds = %86
  %88 = load i32, i32* @x.166
  %89 = load i32, i32* @y.167
  %90 = add i32 %88, -554912216
  %91 = sub i32 %90, 1
  %92 = sub i32 %91, -554912216
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = xor i1 %96, true
  %99 = xor i1 %97, true
  %100 = xor i1 false, true
  %101 = and i1 %98, false
  %102 = and i1 %96, %100
  %103 = and i1 %99, false
  %104 = and i1 %97, %100
  %105 = or i1 %101, %102
  %106 = or i1 %103, %104
  %107 = xor i1 %105, %106
  %108 = or i1 %98, %99
  %109 = xor i1 %108, true
  %110 = or i1 false, %100
  %111 = and i1 %109, %110
  %112 = or i1 %107, %111
  %113 = or i1 %96, %97
  br i1 %112, label %114, label %334

; <label>:114:                                    ; preds = %87, %334
  %115 = load i64, i64* %4, align 8
  %116 = sub i64 %115, 8720131537848646772
  %117 = add i64 %116, -1
  %118 = add i64 %117, 8720131537848646772
  %119 = add i64 %115, -1
  store i64 %118, i64* %4, align 8
  %120 = load %"class.std::map"*, %"class.std::map"** %5, align 8
  %121 = getelementptr inbounds %"class.std::map", %"class.std::map"* %120, i32 1
  store %"class.std::map"* %121, %"class.std::map"** %5, align 8
  %122 = load i32, i32* @x.166
  %123 = load i32, i32* @y.167
  %124 = add i32 %122, 1914791533
  %125 = sub i32 %124, 1
  %126 = sub i32 %125, 1914791533
  %127 = sub i32 %122, 1
  %128 = mul i32 %122, %126
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %123, 10
  %132 = and i1 %130, %131
  %133 = xor i1 %130, %131
  %134 = or i1 %132, %133
  %135 = or i1 %130, %131
  br i1 %134, label %136, label %334

; <label>:136:                                    ; preds = %114
  br label %9

; <label>:137:                                    ; preds = %85
  %138 = load i32, i32* @x.166
  %139 = load i32, i32* @y.167
  %140 = sub i32 %138, -728438935
  %141 = sub i32 %140, 1
  %142 = add i32 %141, -728438935
  %143 = sub i32 %138, 1
  %144 = mul i32 %138, %142
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %139, 10
  %148 = and i1 %146, %147
  %149 = xor i1 %146, %147
  %150 = or i1 %148, %149
  %151 = or i1 %146, %147
  br i1 %150, label %152, label %363

; <label>:152:                                    ; preds = %137, %363
  %153 = landingpad { i8*, i32 }
          catch i8* null
  %154 = extractvalue { i8*, i32 } %153, 0
  store i8* %154, i8** %6, align 8
  %155 = extractvalue { i8*, i32 } %153, 1
  store i32 %155, i32* %7, align 4
  %156 = load i32, i32* @x.166
  %157 = load i32, i32* @y.167
  %158 = sub i32 0, 1
  %159 = add i32 %156, %158
  %160 = sub i32 %156, 1
  %161 = mul i32 %156, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %157, 10
  %165 = xor i1 %163, true
  %166 = xor i1 %164, true
  %167 = xor i1 false, true
  %168 = and i1 %165, false
  %169 = and i1 %163, %167
  %170 = and i1 %166, false
  %171 = and i1 %164, %167
  %172 = or i1 %168, %169
  %173 = or i1 %170, %171
  %174 = xor i1 %172, %173
  %175 = or i1 %165, %166
  %176 = xor i1 %175, true
  %177 = or i1 false, %167
  %178 = and i1 %176, %177
  %179 = or i1 %174, %178
  %180 = or i1 %163, %164
  br i1 %179, label %181, label %363

; <label>:181:                                    ; preds = %152
  br label %182

; <label>:182:                                    ; preds = %181
  %183 = load i8*, i8** %6, align 8
  %184 = call i8* @__cxa_begin_catch(i8* %183) #3
  %185 = load %"class.std::map"*, %"class.std::map"** %3, align 8
  %186 = load %"class.std::map"*, %"class.std::map"** %5, align 8
  invoke void @_ZSt8_DestroyIPSt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEEEvT_SE_(%"class.std::map"* %185, %"class.std::map"* %186)
          to label %187 unwind label %232

; <label>:187:                                    ; preds = %182
  invoke void @__cxa_rethrow() #16
          to label %327 unwind label %232

; <label>:188:                                    ; preds = %52
  %189 = load i32, i32* @x.166
  %190 = load i32, i32* @y.167
  %191 = add i32 %189, -1625499145
  %192 = sub i32 %191, 1
  %193 = sub i32 %192, -1625499145
  %194 = sub i32 %189, 1
  %195 = mul i32 %189, %193
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %190, 10
  %199 = and i1 %197, %198
  %200 = xor i1 %197, %198
  %201 = or i1 %199, %200
  %202 = or i1 %197, %198
  br i1 %201, label %203, label %367

; <label>:203:                                    ; preds = %188, %367
  %204 = load %"class.std::map"*, %"class.std::map"** %5, align 8
  %205 = load i32, i32* @x.166
  %206 = load i32, i32* @y.167
  %207 = sub i32 %205, 341781971
  %208 = sub i32 %207, 1
  %209 = add i32 %208, 341781971
  %210 = sub i32 %205, 1
  %211 = mul i32 %205, %209
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %206, 10
  %215 = xor i1 %213, true
  %216 = xor i1 %214, true
  %217 = xor i1 true, true
  %218 = and i1 %215, true
  %219 = and i1 %213, %217
  %220 = and i1 %216, true
  %221 = and i1 %214, %217
  %222 = or i1 %218, %219
  %223 = or i1 %220, %221
  %224 = xor i1 %222, %223
  %225 = or i1 %215, %216
  %226 = xor i1 %225, true
  %227 = or i1 true, %217
  %228 = and i1 %226, %227
  %229 = or i1 %224, %228
  %230 = or i1 %213, %214
  br i1 %229, label %231, label %367

; <label>:231:                                    ; preds = %203
  ret %"class.std::map"* %204

; <label>:232:                                    ; preds = %187, %182
  %233 = load i32, i32* @x.166
  %234 = load i32, i32* @y.167
  %235 = sub i32 0, 1
  %236 = add i32 %233, %235
  %237 = sub i32 %233, 1
  %238 = mul i32 %233, %236
  %239 = urem i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %234, 10
  %242 = xor i1 %240, true
  %243 = xor i1 %241, true
  %244 = xor i1 true, true
  %245 = and i1 %242, true
  %246 = and i1 %240, %244
  %247 = and i1 %243, true
  %248 = and i1 %241, %244
  %249 = or i1 %245, %246
  %250 = or i1 %247, %248
  %251 = xor i1 %249, %250
  %252 = or i1 %242, %243
  %253 = xor i1 %252, true
  %254 = or i1 true, %244
  %255 = and i1 %253, %254
  %256 = or i1 %251, %255
  %257 = or i1 %240, %241
  br i1 %256, label %258, label %369

; <label>:258:                                    ; preds = %232, %369
  %259 = landingpad { i8*, i32 }
          cleanup
  %260 = extractvalue { i8*, i32 } %259, 0
  store i8* %260, i8** %6, align 8
  %261 = extractvalue { i8*, i32 } %259, 1
  store i32 %261, i32* %7, align 4
  %262 = load i32, i32* @x.166
  %263 = load i32, i32* @y.167
  %264 = sub i32 0, 1
  %265 = add i32 %262, %264
  %266 = sub i32 %262, 1
  %267 = mul i32 %262, %265
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %263, 10
  %271 = and i1 %269, %270
  %272 = xor i1 %269, %270
  %273 = or i1 %271, %272
  %274 = or i1 %269, %270
  br i1 %273, label %275, label %369

; <label>:275:                                    ; preds = %258
  invoke void @__cxa_end_catch()
          to label %276 unwind label %324

; <label>:276:                                    ; preds = %275
  %277 = load i32, i32* @x.166
  %278 = load i32, i32* @y.167
  %279 = add i32 %277, 842165761
  %280 = sub i32 %279, 1
  %281 = sub i32 %280, 842165761
  %282 = sub i32 %277, 1
  %283 = mul i32 %277, %281
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %278, 10
  %287 = xor i1 %285, true
  %288 = xor i1 %286, true
  %289 = xor i1 true, true
  %290 = and i1 %287, true
  %291 = and i1 %285, %289
  %292 = and i1 %288, true
  %293 = and i1 %286, %289
  %294 = or i1 %290, %291
  %295 = or i1 %292, %293
  %296 = xor i1 %294, %295
  %297 = or i1 %287, %288
  %298 = xor i1 %297, true
  %299 = or i1 true, %289
  %300 = and i1 %298, %299
  %301 = or i1 %296, %300
  %302 = or i1 %285, %286
  br i1 %301, label %303, label %373

; <label>:303:                                    ; preds = %276, %373
  %304 = load i32, i32* @x.166
  %305 = load i32, i32* @y.167
  %306 = sub i32 0, 1
  %307 = add i32 %304, %306
  %308 = sub i32 %304, 1
  %309 = mul i32 %304, %307
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %305, 10
  %313 = and i1 %311, %312
  %314 = xor i1 %311, %312
  %315 = or i1 %313, %314
  %316 = or i1 %311, %312
  br i1 %315, label %317, label %373

; <label>:317:                                    ; preds = %303
  br label %319
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:319:                                    ; preds = %317
  %320 = load i8*, i8** %6, align 8
  %321 = load i32, i32* %7, align 4
  %322 = insertvalue { i8*, i32 } undef, i8* %320, 0
  %323 = insertvalue { i8*, i32 } %322, i32 %321, 1
  resume { i8*, i32 } %323

; <label>:324:                                    ; preds = %275
  %325 = landingpad { i8*, i32 }
          catch i8* null
  %326 = extractvalue { i8*, i32 } %325, 0
  call void @__clang_call_terminate(i8* %326) #12
  unreachable

; <label>:327:                                    ; preds = %187
  unreachable

; <label>:328:                                    ; preds = %24, %9
  %329 = load i64, i64* %4, align 8
  %330 = icmp ugt i64 %329, 0
  br label %24

; <label>:331:                                    ; preds = %68, %53
  %332 = load %"class.std::map"*, %"class.std::map"** %5, align 8
  %333 = call %"class.std::map"* @_ZSt11__addressofISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEEEPT_RSD_(%"class.std::map"* dereferenceable(48) %332) #3
  br label %68

; <label>:334:                                    ; preds = %114, %87
  %335 = load i64, i64* %4, align 8
  %336 = shl i64 %335, -1
  %337 = add i64 %335, 6035345837698551249
  %338 = sub i64 %337, -1
  %339 = sub i64 %338, 6035345837698551249
  %340 = sub i64 %335, -1
  %341 = mul i64 %339, -1
  %342 = add i64 %335, -3150183483911037585
  %343 = sub i64 %342, -1
  %344 = sub i64 %343, -3150183483911037585
  %345 = sub i64 %335, -1
  %346 = mul i64 %344, -1
  %347 = sub i64 %335, 1029732394579797710
  %348 = sub i64 %347, -1
  %349 = add i64 %348, 1029732394579797710
  %350 = sub i64 %335, -1
  %351 = mul i64 %349, -1
  %352 = add i64 %335, 5054673507801113439
  %353 = sub i64 %352, -1
  %354 = sub i64 %353, 5054673507801113439
  %355 = sub i64 %335, -1
  %356 = mul i64 %354, -1
  %357 = sub i64 %335, -1924162240196293119
  %358 = add i64 %357, -1
  %359 = add i64 %358, -1924162240196293119
  %360 = add i64 %335, -1
  store i64 %359, i64* %4, align 8
  %361 = load %"class.std::map"*, %"class.std::map"** %5, align 8
  %362 = getelementptr inbounds %"class.std::map", %"class.std::map"* %361, i32 1
  store %"class.std::map"* %362, %"class.std::map"** %5, align 8
  br label %114

; <label>:363:                                    ; preds = %152, %137
  %364 = landingpad { i8*, i32 }
          catch i8* null
  %365 = extractvalue { i8*, i32 } %364, 0
  store i8* %365, i8** %6, align 8
  %366 = extractvalue { i8*, i32 } %364, 1
  store i32 %366, i32* %7, align 4
  br label %152

; <label>:367:                                    ; preds = %203, %188
  %368 = load %"class.std::map"*, %"class.std::map"** %5, align 8
  br label %203

; <label>:369:                                    ; preds = %258, %232
  %370 = landingpad { i8*, i32 }
          cleanup
  %371 = extractvalue { i8*, i32 } %370, 0
  store i8* %371, i8** %6, align 8
  %372 = extractvalue { i8*, i32 } %370, 1
  store i32 %372, i32* %7, align 4
  br label %258

; <label>:373:                                    ; preds = %303, %276
  br label %303
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEEJEEvPT_DpOT0_(%"class.std::map"*) #4 comdat {
  %2 = alloca %"class.std::map"*, align 8
  store %"class.std::map"* %0, %"class.std::map"** %2, align 8
  %3 = load %"class.std::map"*, %"class.std::map"** %2, align 8
  %4 = bitcast %"class.std::map"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::map"*
  call void @_ZNSt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEEC2Ev(%"class.std::map"* %5) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::map"* @_ZSt11__addressofISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEEEPT_RSD_(%"class.std::map"* dereferenceable(48)) #4 comdat {
  %2 = alloca %"class.std::map"*, align 8
  store %"class.std::map"* %0, %"class.std::map"** %2, align 8
  %3 = load %"class.std::map"*, %"class.std::map"** %2, align 8
  %4 = bitcast %"class.std::map"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::map"*
  ret %"class.std::map"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEEEvT_SE_(%"class.std::map"*, %"class.std::map"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.172
  %6 = load i32, i32* @y.173
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -511345476, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %64
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -511345476, label %18
    i32 1761250509, label %26
    i32 -1698297596, label %58
    i32 1083595244, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %64

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1761250509, i32 1083595244
  store i32 %25, i32* %14
  br label %64

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::map"*, align 8
  %28 = alloca %"class.std::map"*, align 8
  store %"class.std::map"* %0, %"class.std::map"** %27, align 8
  store %"class.std::map"* %1, %"class.std::map"** %28, align 8
  %29 = load %"class.std::map"*, %"class.std::map"** %27, align 8
  %30 = load %"class.std::map"*, %"class.std::map"** %28, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt3mapIxSt3setISt4pairIxxESt4lessIS5_ESaIS5_EES6_IxESaIS4_IKxS9_EEEEEvT_SG_(%"class.std::map"* %29, %"class.std::map"* %30)
  %31 = load i32, i32* @x.172
  %32 = load i32, i32* @y.173
  %33 = add i32 %31, -58323304
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -58323304
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -1698297596, i32 1083595244
  store i32 %57, i32* %14
  br label %64

; <label>:58:                                     ; preds = %15
  ret void

; <label>:59:                                     ; preds = %15
  %60 = alloca %"class.std::map"*, align 8
  %61 = alloca %"class.std::map"*, align 8
  store %"class.std::map"* %0, %"class.std::map"** %60, align 8
  store %"class.std::map"* %1, %"class.std::map"** %61, align 8
  %62 = load %"class.std::map"*, %"class.std::map"** %60, align 8
  %63 = load %"class.std::map"*, %"class.std::map"** %61, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt3mapIxSt3setISt4pairIxxESt4lessIS5_ESaIS5_EES6_IxESaIS4_IKxS9_EEEEEvT_SG_(%"class.std::map"* %62, %"class.std::map"* %63)
  store i32 1761250509, i32* %14
  br label %64

; <label>:64:                                     ; preds = %59, %26, %18, %17
  br label %15
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #12

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEEC2Ev(%"class.std::map"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::map"*, align 8
  store %"class.std::map"* %0, %"class.std::map"** %2, align 8
  %3 = load %"class.std::map"*, %"class.std::map"** %2, align 8
  %4 = getelementptr inbounds %"class.std::map", %"class.std::map"* %3, i32 0, i32 0
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EEC2Ev(%"class.std::_Rb_tree"* %4)
          to label %5 unwind label %59

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* @x.174
  %7 = load i32, i32* @y.175
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %7, 10
  %15 = xor i1 %13, true
  %16 = xor i1 %14, true
  %17 = xor i1 false, true
  %18 = and i1 %15, false
  %19 = and i1 %13, %17
  %20 = and i1 %16, false
  %21 = and i1 %14, %17
  %22 = or i1 %18, %19
  %23 = or i1 %20, %21
  %24 = xor i1 %22, %23
  %25 = or i1 %15, %16
  %26 = xor i1 %25, true
  %27 = or i1 false, %17
  %28 = and i1 %26, %27
  %29 = or i1 %24, %28
  %30 = or i1 %13, %14
  br i1 %29, label %31, label %62

; <label>:31:                                     ; preds = %5, %62
  %32 = load i32, i32* @x.174
  %33 = load i32, i32* @y.175
  %34 = add i32 %32, 408421189
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 408421189
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  br i1 %56, label %58, label %62

; <label>:58:                                     ; preds = %31
  ret void

; <label>:59:                                     ; preds = %1
  %60 = landingpad { i8*, i32 }
          catch i8* null
  %61 = extractvalue { i8*, i32 } %60, 0
  call void @__clang_call_terminate(i8* %61) #12
  unreachable

; <label>:62:                                     ; preds = %31, %5
  br label %31
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EEC2Ev(%"class.std::_Rb_tree"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE13_Rb_tree_implISB_Lb1EEC2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE13_Rb_tree_implISB_Lb1EEC2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"** %2, align 8
  %5 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"** %2, align 8
  %6 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %5 to %"class.std::allocator.5"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEEC2Ev(%"class.std::allocator.5"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %5, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %5, i32 0, i32 1
  %9 = bitcast %"struct.std::_Rb_tree_node_base"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* %9, i8 0, i64 32, i32 8, i1 false)
  %10 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %5, i32 0, i32 2
  store i64 0, i64* %10, align 8
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE13_Rb_tree_implISB_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %5)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %1
  ret void

; <label>:12:                                     ; preds = %1
  %13 = load i32, i32* @x.178
  %14 = load i32, i32* @y.179
  %15 = sub i32 %13, -733560745
  %16 = sub i32 %15, 1
  %17 = add i32 %16, -733560745
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %14, 10
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  br i1 %25, label %27, label %51

; <label>:27:                                     ; preds = %12, %51
  %28 = landingpad { i8*, i32 }
          cleanup
  %29 = extractvalue { i8*, i32 } %28, 0
  store i8* %29, i8** %3, align 8
  %30 = extractvalue { i8*, i32 } %28, 1
  store i32 %30, i32* %4, align 4
  %31 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %5 to %"class.std::allocator.5"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEED2Ev(%"class.std::allocator.5"* %31) #3
  %32 = load i32, i32* @x.178
  %33 = load i32, i32* @y.179
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  br i1 %43, label %45, label %51

; <label>:45:                                     ; preds = %27
  br label %46

; <label>:46:                                     ; preds = %45
  %47 = load i8*, i8** %3, align 8
  %48 = load i32, i32* %4, align 4
  %49 = insertvalue { i8*, i32 } undef, i8* %47, 0
  %50 = insertvalue { i8*, i32 } %49, i32 %48, 1
  resume { i8*, i32 } %50

; <label>:51:                                     ; preds = %27, %12
  %52 = landingpad { i8*, i32 }
          cleanup
  %53 = extractvalue { i8*, i32 } %52, 0
  store i8* %53, i8** %3, align 8
  %54 = extractvalue { i8*, i32 } %52, 1
  store i32 %54, i32* %4, align 4
  %55 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %5 to %"class.std::allocator.5"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEED2Ev(%"class.std::allocator.5"* %55) #3
  br label %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEEC2Ev(%"class.std::allocator.5"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %2, align 8
  %3 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %2, align 8
  %4 = bitcast %"class.std::allocator.5"* %3 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIS2_IxxESt4lessIS5_ESaIS5_EEEEEC2Ev(%"class.__gnu_cxx::new_allocator.6"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE13_Rb_tree_implISB_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"** %2, align 8
  %3 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %4, i32 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %6, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %9 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %9, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %8, %"struct.std::_Rb_tree_node_base"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %12 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %12, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %13, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEED2Ev(%"class.std::allocator.5"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %2, align 8
  %3 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %2, align 8
  %4 = bitcast %"class.std::allocator.5"* %3 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIS2_IxxESt4lessIS5_ESaIS5_EEEEED2Ev(%"class.__gnu_cxx::new_allocator.6"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIS2_IxxESt4lessIS5_ESaIS5_EEEEEC2Ev(%"class.__gnu_cxx::new_allocator.6"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIS2_IxxESt4lessIS5_ESaIS5_EEEEED2Ev(%"class.__gnu_cxx::new_allocator.6"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.188
  %5 = load i32, i32* @y.189
  %6 = sub i32 %4, 5689208
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 5689208
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -2066980197, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2066980197, label %18
    i32 1865503304, label %38
    i32 734665221, label %56
    i32 1880200230, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1865503304, i32 1880200230
  store i32 %37, i32* %14
  br label %60

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %39, align 8
  %41 = load i32, i32* @x.188
  %42 = load i32, i32* @y.189
  %43 = add i32 %41, -738571600
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -738571600
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 734665221, i32 1880200230
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %58, align 8
  store i32 1865503304, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt3mapIxSt3setISt4pairIxxESt4lessIS5_ESaIS5_EES6_IxESaIS4_IKxS9_EEEEEvT_SG_(%"class.std::map"*, %"class.std::map"*) #0 comdat align 2 {
  %3 = alloca %"class.std::map"*, align 8
  %4 = alloca %"class.std::map"*, align 8
  store %"class.std::map"* %0, %"class.std::map"** %3, align 8
  store %"class.std::map"* %1, %"class.std::map"** %4, align 8
  %5 = alloca i32
  store i32 -733645302, i32* %5
  br label %6

; <label>:6:                                      ; preds = %2, %21
  %7 = load i32, i32* %5
  switch i32 %7, label %8 [
    i32 -733645302, label %9
    i32 444613771, label %14
    i32 901219364, label %17
    i32 -1291920527, label %20
  ]

; <label>:8:                                      ; preds = %6
  br label %21

; <label>:9:                                      ; preds = %6
  %10 = load %"class.std::map"*, %"class.std::map"** %3, align 8
  %11 = load %"class.std::map"*, %"class.std::map"** %4, align 8
  %12 = icmp ne %"class.std::map"* %10, %11
  %13 = select i1 %12, i32 444613771, i32 -1291920527
  store i32 %13, i32* %5
  br label %21

; <label>:14:                                     ; preds = %6
  %15 = load %"class.std::map"*, %"class.std::map"** %3, align 8
  %16 = call %"class.std::map"* @_ZSt11__addressofISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEEEPT_RSD_(%"class.std::map"* dereferenceable(48) %15) #3
  call void @_ZSt8_DestroyISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEEEvPT_(%"class.std::map"* %16)
  store i32 901219364, i32* %5
  br label %21

; <label>:17:                                     ; preds = %6
  %18 = load %"class.std::map"*, %"class.std::map"** %3, align 8
  %19 = getelementptr inbounds %"class.std::map", %"class.std::map"* %18, i32 1
  store %"class.std::map"* %19, %"class.std::map"** %3, align 8
  store i32 -733645302, i32* %5
  br label %21

; <label>:20:                                     ; preds = %6
  ret void

; <label>:21:                                     ; preds = %17, %14, %9, %8
  br label %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEEEvPT_(%"class.std::map"*) #4 comdat {
  %2 = alloca %"class.std::map"*, align 8
  store %"class.std::map"* %0, %"class.std::map"** %2, align 8
  %3 = load %"class.std::map"*, %"class.std::map"** %2, align 8
  call void @_ZNSt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEED2Ev(%"class.std::map"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEED2Ev(%"class.std::map"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::map"*, align 8
  store %"class.std::map"* %0, %"class.std::map"** %2, align 8
  %3 = load %"class.std::map"*, %"class.std::map"** %2, align 8
  %4 = getelementptr inbounds %"class.std::map", %"class.std::map"* %3, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EED2Ev(%"class.std::_Rb_tree"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EED2Ev(%"class.std::_Rb_tree"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %5 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %6 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE8_M_beginEv(%"class.std::_Rb_tree"* %5) #3
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree"* %5, %"struct.std::_Rb_tree_node"* %6)
          to label %7 unwind label %9

; <label>:7:                                      ; preds = %1
  %8 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %5, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE13_Rb_tree_implISB_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %8) #3
  ret void

; <label>:9:                                      ; preds = %1
  %10 = landingpad { i8*, i32 }
          catch i8* null
  %11 = extractvalue { i8*, i32 } %10, 0
  store i8* %11, i8** %3, align 8
  %12 = extractvalue { i8*, i32 } %10, 1
  store i32 %12, i32* %4, align 4
  %13 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %5, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE13_Rb_tree_implISB_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %13) #3
  br label %14

; <label>:14:                                     ; preds = %9
  %15 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %15) #12
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %3 = alloca %"class.std::_Rb_tree"*
  %4 = alloca %"class.std::_Rb_tree"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %6 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %4, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
  %7 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  store %"class.std::_Rb_tree"* %7, %"class.std::_Rb_tree"** %3
  %8 = alloca i32
  store i32 271980003, i32* %8
  br label %9

; <label>:9:                                      ; preds = %2, %82
  %10 = load i32, i32* %8
  switch i32 %10, label %11 [
    i32 271980003, label %12
    i32 1064044191, label %16
    i32 790290650, label %43
    i32 601705362, label %69
    i32 -560483759, label %70
    i32 -83014481, label %71
  ]

; <label>:11:                                     ; preds = %9
  br label %82

; <label>:12:                                     ; preds = %9
  %13 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %14 = icmp ne %"struct.std::_Rb_tree_node"* %13, null
  %15 = select i1 %14, i32 1064044191, i32 -560483759
  store i32 %15, i32* %8
  br label %82

; <label>:16:                                     ; preds = %9
  %17 = load i32, i32* @x.198
  %18 = load i32, i32* @y.199
  %19 = sub i32 0, 1
  %20 = add i32 %17, %19
  %21 = sub i32 %17, 1
  %22 = mul i32 %17, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %18, 10
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 790290650, i32 -83014481
  store i32 %42, i32* %8
  br label %82

; <label>:43:                                     ; preds = %9
  %44 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %45 = bitcast %"struct.std::_Rb_tree_node"* %44 to %"struct.std::_Rb_tree_node_base"*
  %46 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %45) #3
  %47 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree"* %47, %"struct.std::_Rb_tree_node"* %46)
  %48 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %49 = bitcast %"struct.std::_Rb_tree_node"* %48 to %"struct.std::_Rb_tree_node_base"*
  %50 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %49) #3
  store %"struct.std::_Rb_tree_node"* %50, %"struct.std::_Rb_tree_node"** %6, align 8
  %51 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %52 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree"* %52, %"struct.std::_Rb_tree_node"* %51) #3
  %53 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  store %"struct.std::_Rb_tree_node"* %53, %"struct.std::_Rb_tree_node"** %5, align 8
  %54 = load i32, i32* @x.198
  %55 = load i32, i32* @y.199
  %56 = add i32 %54, -555254644
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, -555254644
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  %68 = select i1 %66, i32 601705362, i32 -83014481
  store i32 %68, i32* %8
  br label %82

; <label>:69:                                     ; preds = %9
  store i32 271980003, i32* %8
  br label %82

; <label>:70:                                     ; preds = %9
  ret void

; <label>:71:                                     ; preds = %9
  %72 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %73 = bitcast %"struct.std::_Rb_tree_node"* %72 to %"struct.std::_Rb_tree_node_base"*
  %74 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %73) #3
  %75 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree"* %75, %"struct.std::_Rb_tree_node"* %74)
  %76 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %77 = bitcast %"struct.std::_Rb_tree_node"* %76 to %"struct.std::_Rb_tree_node_base"*
  %78 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %77) #3
  store %"struct.std::_Rb_tree_node"* %78, %"struct.std::_Rb_tree_node"** %6, align 8
  %79 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %80 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree"* %80, %"struct.std::_Rb_tree_node"* %79) #3
  %81 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  store %"struct.std::_Rb_tree_node"* %81, %"struct.std::_Rb_tree_node"** %5, align 8
  store i32 790290650, i32* %8
  br label %82

; <label>:82:                                     ; preds = %71, %69, %43, %16, %12, %11
  br label %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE8_M_beginEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %5, i32 0, i32 1
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = bitcast %"struct.std::_Rb_tree_node_base"* %7 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE13_Rb_tree_implISB_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"** %2, align 8
  %3 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %3 to %"class.std::allocator.5"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEED2Ev(%"class.std::allocator.5"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 3
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 2
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #4 comdat align 2 {
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
  %5 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %6 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree"* %5, %"struct.std::_Rb_tree_node"* %6) #3
  %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree"* %5, %"struct.std::_Rb_tree_node"* %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
  %5 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %6 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %5) #3
  %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  %8 = invoke %"struct.std::pair.20"* @_ZNSt13_Rb_tree_nodeISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %7)
          to label %9 unwind label %41

; <label>:9:                                      ; preds = %2
  %10 = load i32, i32* @x.210
  %11 = load i32, i32* @y.211
  %12 = add i32 %10, -379396965
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, -379396965
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %11, 10
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  br i1 %22, label %24, label %44

; <label>:24:                                     ; preds = %9, %44
  %25 = load i32, i32* @x.210
  %26 = load i32, i32* @y.211
  %27 = sub i32 0, 1
  %28 = add i32 %25, %27
  %29 = sub i32 %25, 1
  %30 = mul i32 %25, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %26, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  br i1 %36, label %38, label %44

; <label>:38:                                     ; preds = %24
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3setIS1_IxxESt4lessIS4_ESaIS4_EEEEEE7destroyIS9_EEvRSB_PT_(%"class.std::allocator.5"* dereferenceable(1) %6, %"struct.std::pair.20"* %8)
          to label %39 unwind label %41

; <label>:39:                                     ; preds = %38
  %40 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  ret void

; <label>:41:                                     ; preds = %38, %2
  %42 = landingpad { i8*, i32 }
          catch i8* null
  %43 = extractvalue { i8*, i32 } %42, 0
  call void @__clang_call_terminate(i8* %43) #12
  unreachable

; <label>:44:                                     ; preds = %24, %9
  br label %24
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
  %5 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %6 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %5) #3
  %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3setIS1_IxxESt4lessIS4_ESaIS4_EEEEEE10deallocateERSB_PSA_m(%"class.std::allocator.5"* dereferenceable(1) %6, %"struct.std::_Rb_tree_node"* %7, i64 1)
          to label %8 unwind label %63

; <label>:8:                                      ; preds = %2
  %9 = load i32, i32* @x.212
  %10 = load i32, i32* @y.213
  %11 = sub i32 %9, -612510011
  %12 = sub i32 %11, 1
  %13 = add i32 %12, -612510011
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %10, 10
  %19 = xor i1 %17, true
  %20 = xor i1 %18, true
  %21 = xor i1 true, true
  %22 = and i1 %19, true
  %23 = and i1 %17, %21
  %24 = and i1 %20, true
  %25 = and i1 %18, %21
  %26 = or i1 %22, %23
  %27 = or i1 %24, %25
  %28 = xor i1 %26, %27
  %29 = or i1 %19, %20
  %30 = xor i1 %29, true
  %31 = or i1 true, %21
  %32 = and i1 %30, %31
  %33 = or i1 %28, %32
  %34 = or i1 %17, %18
  br i1 %33, label %35, label %66

; <label>:35:                                     ; preds = %8, %66
  %36 = load i32, i32* @x.212
  %37 = load i32, i32* @y.213
  %38 = sub i32 %36, 1242389907
  %39 = sub i32 %38, 1
  %40 = add i32 %39, 1242389907
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  br i1 %60, label %62, label %66

; <label>:62:                                     ; preds = %35
  ret void

; <label>:63:                                     ; preds = %2
  %64 = landingpad { i8*, i32 }
          catch i8* null
  %65 = extractvalue { i8*, i32 } %64, 0
  call void @__clang_call_terminate(i8* %65) #12
  unreachable

; <label>:66:                                     ; preds = %35, %8
  br label %35
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3setIS1_IxxESt4lessIS4_ESaIS4_EEEEEE7destroyIS9_EEvRSB_PT_(%"class.std::allocator.5"* dereferenceable(1), %"struct.std::pair.20"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.214
  %6 = load i32, i32* @y.215
  %7 = sub i32 %5, -1593480889
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1593480889
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -149815373, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %79
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -149815373, label %19
    i32 -836916209, label %39
    i32 1384737399, label %72
    i32 503194670, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %79

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -836916209, i32 503194670
  store i32 %38, i32* %15
  br label %79

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.5"*, align 8
  %41 = alloca %"struct.std::pair.20"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %40, align 8
  store %"struct.std::pair.20"* %1, %"struct.std::pair.20"** %41, align 8
  %42 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %40, align 8
  %43 = bitcast %"class.std::allocator.5"* %42 to %"class.__gnu_cxx::new_allocator.6"*
  %44 = load %"struct.std::pair.20"*, %"struct.std::pair.20"** %41, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIS2_IxxESt4lessIS5_ESaIS5_EEEEE7destroyISA_EEvPT_(%"class.__gnu_cxx::new_allocator.6"* %43, %"struct.std::pair.20"* %44)
  %45 = load i32, i32* @x.214
  %46 = load i32, i32* @y.215
  %47 = add i32 %45, 1224422583
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, 1224422583
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 1384737399, i32 503194670
  store i32 %71, i32* %15
  br label %79

; <label>:72:                                     ; preds = %16
  ret void

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::allocator.5"*, align 8
  %75 = alloca %"struct.std::pair.20"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %74, align 8
  store %"struct.std::pair.20"* %1, %"struct.std::pair.20"** %75, align 8
  %76 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %74, align 8
  %77 = bitcast %"class.std::allocator.5"* %76 to %"class.__gnu_cxx::new_allocator.6"*
  %78 = load %"struct.std::pair.20"*, %"struct.std::pair.20"** %75, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIS2_IxxESt4lessIS5_ESaIS5_EEEEE7destroyISA_EEvPT_(%"class.__gnu_cxx::new_allocator.6"* %77, %"struct.std::pair.20"* %78)
  store i32 -836916209, i32* %15
  br label %79

; <label>:79:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.5"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %4 to %"class.std::allocator.5"*
  ret %"class.std::allocator.5"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.20"* @_ZNSt13_Rb_tree_nodeISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEE9_M_valptrEv(%"struct.std::_Rb_tree_node"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %3, i32 0, i32 1
  %5 = call %"struct.std::pair.20"* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxSt3setIS1_IxxESt4lessIS4_ESaIS4_EEEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* %4) #3
  ret %"struct.std::pair.20"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIS2_IxxESt4lessIS5_ESaIS5_EEEEE7destroyISA_EEvPT_(%"class.__gnu_cxx::new_allocator.6"*, %"struct.std::pair.20"*) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %4 = alloca %"struct.std::pair.20"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %3, align 8
  store %"struct.std::pair.20"* %1, %"struct.std::pair.20"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %3, align 8
  %6 = load %"struct.std::pair.20"*, %"struct.std::pair.20"** %4, align 8
  call void @_ZNSt4pairIKxSt3setIS_IxxESt4lessIS2_ESaIS2_EEED2Ev(%"struct.std::pair.20"* %6) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIKxSt3setIS_IxxESt4lessIS2_ESaIS2_EEED2Ev(%"struct.std::pair.20"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.222
  %5 = load i32, i32* @y.223
  %6 = sub i32 %4, 613675926
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 613675926
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 535515748, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 535515748, label %18
    i32 -208919228, label %38
    i32 -448048539, label %56
    i32 -1978224676, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -208919228, i32 -1978224676
  store i32 %37, i32* %14
  br label %61

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::pair.20"*, align 8
  store %"struct.std::pair.20"* %0, %"struct.std::pair.20"** %39, align 8
  %40 = load %"struct.std::pair.20"*, %"struct.std::pair.20"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::pair.20", %"struct.std::pair.20"* %40, i32 0, i32 1
  call void @_ZNSt3setISt4pairIxxESt4lessIS1_ESaIS1_EED2Ev(%"class.std::set"* %41) #3
  %42 = load i32, i32* @x.222
  %43 = load i32, i32* @y.223
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -448048539, i32 -1978224676
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"struct.std::pair.20"*, align 8
  store %"struct.std::pair.20"* %0, %"struct.std::pair.20"** %58, align 8
  %59 = load %"struct.std::pair.20"*, %"struct.std::pair.20"** %58, align 8
  %60 = getelementptr inbounds %"struct.std::pair.20", %"struct.std::pair.20"* %59, i32 0, i32 1
  call void @_ZNSt3setISt4pairIxxESt4lessIS1_ESaIS1_EED2Ev(%"class.std::set"* %60) #3
  store i32 -208919228, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt3setISt4pairIxxESt4lessIS1_ESaIS1_EED2Ev(%"class.std::set"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.224
  %5 = load i32, i32* @y.225
  %6 = add i32 %4, -731800274
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -731800274
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 2015474687, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 2015474687, label %18
    i32 693066362, label %38
    i32 -1265321236, label %57
    i32 -675609893, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 693066362, i32 -675609893
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %39, align 8
  %40 = load %"class.std::set"*, %"class.std::set"** %39, align 8
  %41 = getelementptr inbounds %"class.std::set", %"class.std::set"* %40, i32 0, i32 0
  call void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EED2Ev(%"class.std::_Rb_tree.8"* %41) #3
  %42 = load i32, i32* @x.224
  %43 = load i32, i32* @y.225
  %44 = add i32 %42, -1611284246
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, -1611284246
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1265321236, i32 -675609893
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %59, align 8
  %60 = load %"class.std::set"*, %"class.std::set"** %59, align 8
  %61 = getelementptr inbounds %"class.std::set", %"class.std::set"* %60, i32 0, i32 0
  call void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EED2Ev(%"class.std::_Rb_tree.8"* %61) #3
  store i32 693066362, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EED2Ev(%"class.std::_Rb_tree.8"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.226
  %3 = load i32, i32* @y.227
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %45

; <label>:15:                                     ; preds = %1, %45
  %16 = alloca %"class.std::_Rb_tree.8"*, align 8
  %17 = alloca i8*
  %18 = alloca i32
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %16, align 8
  %19 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %16, align 8
  %20 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_beginEv(%"class.std::_Rb_tree.8"* %19) #3
  %21 = load i32, i32* @x.226
  %22 = load i32, i32* @y.227
  %23 = sub i32 %21, 306137939
  %24 = sub i32 %23, 1
  %25 = add i32 %24, 306137939
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  br i1 %33, label %35, label %45

; <label>:35:                                     ; preds = %15
  invoke void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_eraseEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.8"* %19, %"struct.std::_Rb_tree_node.21"* %20)
          to label %36 unwind label %38

; <label>:36:                                     ; preds = %35
  %37 = getelementptr inbounds %"class.std::_Rb_tree.8", %"class.std::_Rb_tree.8"* %19, i32 0, i32 0
  call void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EED2Ev(%"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %37) #3
  ret void

; <label>:38:                                     ; preds = %35
  %39 = landingpad { i8*, i32 }
          catch i8* null
  %40 = extractvalue { i8*, i32 } %39, 0
  store i8* %40, i8** %17, align 8
  %41 = extractvalue { i8*, i32 } %39, 1
  store i32 %41, i32* %18, align 4
  %42 = getelementptr inbounds %"class.std::_Rb_tree.8", %"class.std::_Rb_tree.8"* %19, i32 0, i32 0
  call void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EED2Ev(%"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %42) #3
  br label %43

; <label>:43:                                     ; preds = %38
  %44 = load i8*, i8** %17, align 8
  call void @__clang_call_terminate(i8* %44) #12
  unreachable

; <label>:45:                                     ; preds = %15, %1
  %46 = alloca %"class.std::_Rb_tree.8"*, align 8
  %47 = alloca i8*
  %48 = alloca i32
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %46, align 8
  %49 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %46, align 8
  %50 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_beginEv(%"class.std::_Rb_tree.8"* %49) #3
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_eraseEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.8"*, %"struct.std::_Rb_tree_node.21"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::_Rb_tree.8"*
  %5 = alloca %"struct.std::_Rb_tree_node.21"**
  %6 = alloca %"struct.std::_Rb_tree_node.21"**
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.228
  %10 = load i32, i32* @y.229
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 250424301, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %188
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 250424301, label %22
    i32 556564235, label %30
    i32 446858131, label %62
    i32 -2078529929, label %63
    i32 -1699686819, label %91
    i32 -1303183651, label %110
    i32 -2054130310, label %113
    i32 -2066031518, label %129
    i32 1009246342, label %160
    i32 506058324, label %161
    i32 -1541505518, label %162
    i32 -877654080, label %167
    i32 -1560594496, label %171
  ]

; <label>:21:                                     ; preds = %19
  br label %188

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %8
  %24 = load volatile i1, i1* %7
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 556564235, i32 -1541505518
  store i32 %29, i32* %18
  br label %188

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::_Rb_tree.8"*, align 8
  %32 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  store %"struct.std::_Rb_tree_node.21"** %32, %"struct.std::_Rb_tree_node.21"*** %6
  %33 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  store %"struct.std::_Rb_tree_node.21"** %33, %"struct.std::_Rb_tree_node.21"*** %5
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %31, align 8
  %34 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %6
  store %"struct.std::_Rb_tree_node.21"* %1, %"struct.std::_Rb_tree_node.21"** %34, align 8
  %35 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %31, align 8
  store %"class.std::_Rb_tree.8"* %35, %"class.std::_Rb_tree.8"** %4
  %36 = load i32, i32* @x.228
  %37 = load i32, i32* @y.229
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 446858131, i32 -1541505518
  store i32 %61, i32* %18
  br label %188

; <label>:62:                                     ; preds = %19
  store i32 -2078529929, i32* %18
  br label %188

; <label>:63:                                     ; preds = %19
  %64 = load i32, i32* @x.228
  %65 = load i32, i32* @y.229
  %66 = add i32 %64, 904567743
  %67 = sub i32 %66, 1
  %68 = sub i32 %67, 904567743
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 true, true
  %77 = and i1 %74, true
  %78 = and i1 %72, %76
  %79 = and i1 %75, true
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 true, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  %90 = select i1 %88, i32 -1699686819, i32 -877654080
  store i32 %90, i32* %18
  br label %188

; <label>:91:                                     ; preds = %19
  %92 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %6
  %93 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %92, align 8
  %94 = icmp ne %"struct.std::_Rb_tree_node.21"* %93, null
  store i1 %94, i1* %3
  %95 = load i32, i32* @x.228
  %96 = load i32, i32* @y.229
  %97 = sub i32 %95, 266527153
  %98 = sub i32 %97, 1
  %99 = add i32 %98, 266527153
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = and i1 %103, %104
  %106 = xor i1 %103, %104
  %107 = or i1 %105, %106
  %108 = or i1 %103, %104
  %109 = select i1 %107, i32 -1303183651, i32 -877654080
  store i32 %109, i32* %18
  br label %188

; <label>:110:                                    ; preds = %19
  %111 = load volatile i1, i1* %3
  %112 = select i1 %111, i32 -2054130310, i32 506058324
  store i32 %112, i32* %18
  br label %188

; <label>:113:                                    ; preds = %19
  %114 = load i32, i32* @x.228
  %115 = load i32, i32* @y.229
  %116 = add i32 %114, -100872946
  %117 = sub i32 %116, 1
  %118 = sub i32 %117, -100872946
  %119 = sub i32 %114, 1
  %120 = mul i32 %114, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %115, 10
  %124 = and i1 %122, %123
  %125 = xor i1 %122, %123
  %126 = or i1 %124, %125
  %127 = or i1 %122, %123
  %128 = select i1 %126, i32 -2066031518, i32 -1560594496
  store i32 %128, i32* %18
  br label %188

; <label>:129:                                    ; preds = %19
  %130 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %6
  %131 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %130, align 8
  %132 = bitcast %"struct.std::_Rb_tree_node.21"* %131 to %"struct.std::_Rb_tree_node_base"*
  %133 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %132) #3
  %134 = load volatile %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %4
  call void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_eraseEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.8"* %134, %"struct.std::_Rb_tree_node.21"* %133)
  %135 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %6
  %136 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %135, align 8
  %137 = bitcast %"struct.std::_Rb_tree_node.21"* %136 to %"struct.std::_Rb_tree_node_base"*
  %138 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %137) #3
  %139 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %5
  store %"struct.std::_Rb_tree_node.21"* %138, %"struct.std::_Rb_tree_node.21"** %139, align 8
  %140 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %6
  %141 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %140, align 8
  %142 = load volatile %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %4
  call void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.8"* %142, %"struct.std::_Rb_tree_node.21"* %141) #3
  %143 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %5
  %144 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %143, align 8
  %145 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %6
  store %"struct.std::_Rb_tree_node.21"* %144, %"struct.std::_Rb_tree_node.21"** %145, align 8
  %146 = load i32, i32* @x.228
  %147 = load i32, i32* @y.229
  %148 = sub i32 0, 1
  %149 = add i32 %146, %148
  %150 = sub i32 %146, 1
  %151 = mul i32 %146, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %147, 10
  %155 = and i1 %153, %154
  %156 = xor i1 %153, %154
  %157 = or i1 %155, %156
  %158 = or i1 %153, %154
  %159 = select i1 %157, i32 1009246342, i32 -1560594496
  store i32 %159, i32* %18
  br label %188

; <label>:160:                                    ; preds = %19
  store i32 -2078529929, i32* %18
  br label %188

; <label>:161:                                    ; preds = %19
  ret void

; <label>:162:                                    ; preds = %19
  %163 = alloca %"class.std::_Rb_tree.8"*, align 8
  %164 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  %165 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %163, align 8
  store %"struct.std::_Rb_tree_node.21"* %1, %"struct.std::_Rb_tree_node.21"** %164, align 8
  %166 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %163, align 8
  store i32 556564235, i32* %18
  br label %188

; <label>:167:                                    ; preds = %19
  %168 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %6
  %169 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %168, align 8
  %170 = icmp ne %"struct.std::_Rb_tree_node.21"* %169, null
  store i32 -1699686819, i32* %18
  br label %188

; <label>:171:                                    ; preds = %19
  %172 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %6
  %173 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %172, align 8
  %174 = bitcast %"struct.std::_Rb_tree_node.21"* %173 to %"struct.std::_Rb_tree_node_base"*
  %175 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %174) #3
  %176 = load volatile %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %4
  call void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_eraseEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.8"* %176, %"struct.std::_Rb_tree_node.21"* %175)
  %177 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %6
  %178 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %177, align 8
  %179 = bitcast %"struct.std::_Rb_tree_node.21"* %178 to %"struct.std::_Rb_tree_node_base"*
  %180 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %179) #3
  %181 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %5
  store %"struct.std::_Rb_tree_node.21"* %180, %"struct.std::_Rb_tree_node.21"** %181, align 8
  %182 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %6
  %183 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %182, align 8
  %184 = load volatile %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %4
  call void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.8"* %184, %"struct.std::_Rb_tree_node.21"* %183) #3
  %185 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %5
  %186 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %185, align 8
  %187 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %6
  store %"struct.std::_Rb_tree_node.21"* %186, %"struct.std::_Rb_tree_node.21"** %187, align 8
  store i32 -2066031518, i32* %18
  br label %188

; <label>:188:                                    ; preds = %171, %167, %162, %160, %129, %113, %110, %91, %63, %62, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_beginEv(%"class.std::_Rb_tree.8"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.21"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.230
  %6 = load i32, i32* @y.231
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -423314405, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %71
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -423314405, label %18
    i32 1732544073, label %26
    i32 920764880, label %61
    i32 -2025677420, label %63
  ]

; <label>:17:                                     ; preds = %15
  br label %71

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1732544073, i32 -2025677420
  store i32 %25, i32* %14
  br label %71

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::_Rb_tree.8"*, align 8
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %27, align 8
  %28 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %27, align 8
  %29 = getelementptr inbounds %"class.std::_Rb_tree.8", %"class.std::_Rb_tree.8"* %28, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %29, i32 0, i32 1
  %31 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %30, i32 0, i32 1
  %32 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %31, align 8
  %33 = bitcast %"struct.std::_Rb_tree_node_base"* %32 to %"struct.std::_Rb_tree_node.21"*
  store %"struct.std::_Rb_tree_node.21"* %33, %"struct.std::_Rb_tree_node.21"** %2
  %34 = load i32, i32* @x.230
  %35 = load i32, i32* @y.231
  %36 = sub i32 %34, -828789101
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -828789101
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 920764880, i32 -2025677420
  store i32 %60, i32* %14
  br label %71

; <label>:61:                                     ; preds = %15
  %62 = load volatile %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %2
  ret %"struct.std::_Rb_tree_node.21"* %62

; <label>:63:                                     ; preds = %15
  %64 = alloca %"class.std::_Rb_tree.8"*, align 8
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %64, align 8
  %65 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %64, align 8
  %66 = getelementptr inbounds %"class.std::_Rb_tree.8", %"class.std::_Rb_tree.8"* %65, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %66, i32 0, i32 1
  %68 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %67, i32 0, i32 1
  %69 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %68, align 8
  %70 = bitcast %"struct.std::_Rb_tree_node_base"* %69 to %"struct.std::_Rb_tree_node.21"*
  store i32 1732544073, i32* %14
  br label %71

; <label>:71:                                     ; preds = %63, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EED2Ev(%"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"** %2, align 8
  %3 = load %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %3 to %"class.std::allocator.9"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIxxEEED2Ev(%"class.std::allocator.9"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.21"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.234
  %6 = load i32, i32* @y.235
  %7 = sub i32 %5, 1563893029
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1563893029
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -901360939, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -901360939, label %19
    i32 99806148, label %39
    i32 1278133479, label %59
    i32 1306915272, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 99806148, i32 1306915272
  store i32 %38, i32* %15
  br label %67

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %40, align 8
  %41 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %41, i32 0, i32 3
  %43 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %42, align 8
  %44 = bitcast %"struct.std::_Rb_tree_node_base"* %43 to %"struct.std::_Rb_tree_node.21"*
  store %"struct.std::_Rb_tree_node.21"* %44, %"struct.std::_Rb_tree_node.21"** %2
  %45 = load i32, i32* @x.234
  %46 = load i32, i32* @y.235
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1278133479, i32 1306915272
  store i32 %58, i32* %15
  br label %67

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %2
  ret %"struct.std::_Rb_tree_node.21"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %62, align 8
  %63 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %63, i32 0, i32 3
  %65 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %64, align 8
  %66 = bitcast %"struct.std::_Rb_tree_node_base"* %65 to %"struct.std::_Rb_tree_node.21"*
  store i32 99806148, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 2
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node.21"*
  ret %"struct.std::_Rb_tree_node.21"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.8"*, %"struct.std::_Rb_tree_node.21"*) #4 comdat align 2 {
  %3 = alloca %"class.std::_Rb_tree.8"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %3, align 8
  store %"struct.std::_Rb_tree_node.21"* %1, %"struct.std::_Rb_tree_node.21"** %4, align 8
  %5 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %3, align 8
  %6 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %4, align 8
  call void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.8"* %5, %"struct.std::_Rb_tree_node.21"* %6) #3
  %7 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %4, align 8
  call void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.8"* %5, %"struct.std::_Rb_tree_node.21"* %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.8"*, %"struct.std::_Rb_tree_node.21"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.240
  %4 = load i32, i32* @y.241
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %97

; <label>:16:                                     ; preds = %2, %97
  %17 = alloca %"class.std::_Rb_tree.8"*, align 8
  %18 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %17, align 8
  store %"struct.std::_Rb_tree_node.21"* %1, %"struct.std::_Rb_tree_node.21"** %18, align 8
  %19 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %17, align 8
  %20 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.8"* %19) #3
  %21 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %18, align 8
  %22 = load i32, i32* @x.240
  %23 = load i32, i32* @y.241
  %24 = sub i32 0, 1
  %25 = add i32 %22, %24
  %26 = sub i32 %22, 1
  %27 = mul i32 %22, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %23, 10
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 true, true
  %34 = and i1 %31, true
  %35 = and i1 %29, %33
  %36 = and i1 %32, true
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 true, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  br i1 %45, label %47, label %97

; <label>:47:                                     ; preds = %16
  %48 = invoke %"struct.std::pair"* @_ZNSt13_Rb_tree_nodeISt4pairIxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node.21"* %21)
          to label %49 unwind label %94

; <label>:49:                                     ; preds = %47
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIxxEEEE7destroyIS2_EEvRS4_PT_(%"class.std::allocator.9"* dereferenceable(1) %20, %"struct.std::pair"* %48)
          to label %50 unwind label %94

; <label>:50:                                     ; preds = %49
  %51 = load i32, i32* @x.240
  %52 = load i32, i32* @y.241
  %53 = sub i32 %51, 445454882
  %54 = sub i32 %53, 1
  %55 = add i32 %54, 445454882
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  br i1 %63, label %65, label %103

; <label>:65:                                     ; preds = %50, %103
  %66 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %18, align 8
  %67 = load i32, i32* @x.240
  %68 = load i32, i32* @y.241
  %69 = sub i32 %67, 1470287011
  %70 = sub i32 %69, 1
  %71 = add i32 %70, 1470287011
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = xor i1 %75, true
  %78 = xor i1 %76, true
  %79 = xor i1 true, true
  %80 = and i1 %77, true
  %81 = and i1 %75, %79
  %82 = and i1 %78, true
  %83 = and i1 %76, %79
  %84 = or i1 %80, %81
  %85 = or i1 %82, %83
  %86 = xor i1 %84, %85
  %87 = or i1 %77, %78
  %88 = xor i1 %87, true
  %89 = or i1 true, %79
  %90 = and i1 %88, %89
  %91 = or i1 %86, %90
  %92 = or i1 %75, %76
  br i1 %91, label %93, label %103

; <label>:93:                                     ; preds = %65
  ret void

; <label>:94:                                     ; preds = %49, %47
  %95 = landingpad { i8*, i32 }
          catch i8* null
  %96 = extractvalue { i8*, i32 } %95, 0
  call void @__clang_call_terminate(i8* %96) #12
  unreachable

; <label>:97:                                     ; preds = %16, %2
  %98 = alloca %"class.std::_Rb_tree.8"*, align 8
  %99 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %98, align 8
  store %"struct.std::_Rb_tree_node.21"* %1, %"struct.std::_Rb_tree_node.21"** %99, align 8
  %100 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %98, align 8
  %101 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.8"* %100) #3
  %102 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %99, align 8
  br label %16

; <label>:103:                                    ; preds = %65, %50
  %104 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %18, align 8
  br label %65
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.8"*, %"struct.std::_Rb_tree_node.21"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Rb_tree.8"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %3, align 8
  store %"struct.std::_Rb_tree_node.21"* %1, %"struct.std::_Rb_tree_node.21"** %4, align 8
  %5 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %3, align 8
  %6 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.8"* %5) #3
  %7 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %4, align 8
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIxxEEEE10deallocateERS4_PS3_m(%"class.std::allocator.9"* dereferenceable(1) %6, %"struct.std::_Rb_tree_node.21"* %7, i64 1)
          to label %8 unwind label %9

; <label>:8:                                      ; preds = %2
  ret void

; <label>:9:                                      ; preds = %2
  %10 = landingpad { i8*, i32 }
          catch i8* null
  %11 = extractvalue { i8*, i32 } %10, 0
  call void @__clang_call_terminate(i8* %11) #12
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIxxEEEE7destroyIS2_EEvRS4_PT_(%"class.std::allocator.9"* dereferenceable(1), %"struct.std::pair"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.244
  %6 = load i32, i32* @y.245
  %7 = add i32 %5, 31375240
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 31375240
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1096167757, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1096167757, label %19
    i32 -871565496, label %39
    i32 -1763048122, label %59
    i32 598872859, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -871565496, i32 598872859
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.9"*, align 8
  %41 = alloca %"struct.std::pair"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %40, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %41, align 8
  %42 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %40, align 8
  %43 = bitcast %"class.std::allocator.9"* %42 to %"class.__gnu_cxx::new_allocator.10"*
  %44 = load %"struct.std::pair"*, %"struct.std::pair"** %41, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIxxEEE7destroyIS3_EEvPT_(%"class.__gnu_cxx::new_allocator.10"* %43, %"struct.std::pair"* %44)
  %45 = load i32, i32* @x.244
  %46 = load i32, i32* @y.245
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -1763048122, i32 598872859
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  ret void

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::allocator.9"*, align 8
  %62 = alloca %"struct.std::pair"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %61, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %62, align 8
  %63 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %61, align 8
  %64 = bitcast %"class.std::allocator.9"* %63 to %"class.__gnu_cxx::new_allocator.10"*
  %65 = load %"struct.std::pair"*, %"struct.std::pair"** %62, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIxxEEE7destroyIS3_EEvPT_(%"class.__gnu_cxx::new_allocator.10"* %64, %"struct.std::pair"* %65)
  store i32 -871565496, i32* %15
  br label %66

; <label>:66:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.8"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.8"*, align 8
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %2, align 8
  %3 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.8", %"class.std::_Rb_tree.8"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %4 to %"class.std::allocator.9"*
  ret %"class.std::allocator.9"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"* @_ZNSt13_Rb_tree_nodeISt4pairIxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node.21"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::pair"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.248
  %6 = load i32, i32* @y.249
  %7 = add i32 %5, 1913290110
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1913290110
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1062600827, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1062600827, label %19
    i32 -1070787538, label %39
    i32 -2126397362, label %59
    i32 52841988, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1070787538, i32 52841988
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  store %"struct.std::_Rb_tree_node.21"* %0, %"struct.std::_Rb_tree_node.21"** %40, align 8
  %41 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Rb_tree_node.21", %"struct.std::_Rb_tree_node.21"* %41, i32 0, i32 1
  %43 = call %"struct.std::pair"* @_ZN9__gnu_cxx16__aligned_membufISt4pairIxxEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.22"* %42) #3
  store %"struct.std::pair"* %43, %"struct.std::pair"** %2
  %44 = load i32, i32* @x.248
  %45 = load i32, i32* @y.249
  %46 = add i32 %44, -428545132
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -428545132
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -2126397362, i32 52841988
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %2
  ret %"struct.std::pair"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  store %"struct.std::_Rb_tree_node.21"* %0, %"struct.std::_Rb_tree_node.21"** %62, align 8
  %63 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::_Rb_tree_node.21", %"struct.std::_Rb_tree_node.21"* %63, i32 0, i32 1
  %65 = call %"struct.std::pair"* @_ZN9__gnu_cxx16__aligned_membufISt4pairIxxEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.22"* %64) #3
  store i32 -1070787538, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIxxEEE7destroyIS3_EEvPT_(%"class.__gnu_cxx::new_allocator.10"*, %"struct.std::pair"*) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %3, align 8
  %6 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"* @_ZN9__gnu_cxx16__aligned_membufISt4pairIxxEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.22"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf.22"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.22"* %0, %"struct.__gnu_cxx::__aligned_membuf.22"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf.22"*, %"struct.__gnu_cxx::__aligned_membuf.22"** %2, align 8
  %4 = call i8* @_ZN9__gnu_cxx16__aligned_membufISt4pairIxxEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf.22"* %3) #3
  %5 = bitcast i8* %4 to %"struct.std::pair"*
  ret %"struct.std::pair"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZN9__gnu_cxx16__aligned_membufISt4pairIxxEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf.22"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf.22"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.22"* %0, %"struct.__gnu_cxx::__aligned_membuf.22"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf.22"*, %"struct.__gnu_cxx::__aligned_membuf.22"** %2, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf.22", %"struct.__gnu_cxx::__aligned_membuf.22"* %3, i32 0, i32 0
  %5 = bitcast [16 x i8]* %4 to i8*
  ret i8* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIxxEEEE10deallocateERS4_PS3_m(%"class.std::allocator.9"* dereferenceable(1), %"struct.std::_Rb_tree_node.21"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.9"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %4, align 8
  store %"struct.std::_Rb_tree_node.21"* %1, %"struct.std::_Rb_tree_node.21"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %4, align 8
  %8 = bitcast %"class.std::allocator.9"* %7 to %"class.__gnu_cxx::new_allocator.10"*
  %9 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIxxEEE10deallocateEPS4_m(%"class.__gnu_cxx::new_allocator.10"* %8, %"struct.std::_Rb_tree_node.21"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIxxEEE10deallocateEPS4_m(%"class.__gnu_cxx::new_allocator.10"*, %"struct.std::_Rb_tree_node.21"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %4, align 8
  store %"struct.std::_Rb_tree_node.21"* %1, %"struct.std::_Rb_tree_node.21"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %4, align 8
  %8 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %5, align 8
  %9 = bitcast %"struct.std::_Rb_tree_node.21"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeISt4pairIxxEEED2Ev(%"class.std::allocator.9"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %2, align 8
  %3 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %2, align 8
  %4 = bitcast %"class.std::allocator.9"* %3 to %"class.__gnu_cxx::new_allocator.10"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIxxEEED2Ev(%"class.__gnu_cxx::new_allocator.10"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIxxEEED2Ev(%"class.__gnu_cxx::new_allocator.10"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.20"* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxSt3setIS1_IxxESt4lessIS4_ESaIS4_EEEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %4 = call i8* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxSt3setIS1_IxxESt4lessIS4_ESaIS4_EEEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* %3) #3
  %5 = bitcast i8* %4 to %"struct.std::pair.20"*
  ret %"struct.std::pair.20"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxSt3setIS1_IxxESt4lessIS4_ESaIS4_EEEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf", %"struct.__gnu_cxx::__aligned_membuf"* %3, i32 0, i32 0
  %5 = bitcast [56 x i8]* %4 to i8*
  ret i8* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3setIS1_IxxESt4lessIS4_ESaIS4_EEEEEE10deallocateERSB_PSA_m(%"class.std::allocator.5"* dereferenceable(1), %"struct.std::_Rb_tree_node"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.5"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %4, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %4, align 8
  %8 = bitcast %"class.std::allocator.5"* %7 to %"class.__gnu_cxx::new_allocator.6"*
  %9 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIS2_IxxESt4lessIS5_ESaIS5_EEEEE10deallocateEPSB_m(%"class.__gnu_cxx::new_allocator.6"* %8, %"struct.std::_Rb_tree_node"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIS2_IxxESt4lessIS5_ESaIS5_EEEEE10deallocateEPSB_m(%"class.__gnu_cxx::new_allocator.6"*, %"struct.std::_Rb_tree_node"*, i64) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.270
  %7 = load i32, i32* @y.271
  %8 = add i32 %6, 459836512
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 459836512
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1811907879, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %69
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1811907879, label %20
    i32 260371014, label %40
    i32 -1202790697, label %61
    i32 -1319953058, label %62
  ]

; <label>:19:                                     ; preds = %17
  br label %69

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 260371014, i32 -1319953058
  store i32 %39, i32* %16
  br label %69

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %42 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %43 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %41, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %41, align 8
  %45 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %42, align 8
  %46 = bitcast %"struct.std::_Rb_tree_node"* %45 to i8*
  call void @_ZdlPv(i8* %46) #3
  %47 = load i32, i32* @x.270
  %48 = load i32, i32* @y.271
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -1202790697, i32 -1319953058
  store i32 %60, i32* %16
  br label %69

; <label>:61:                                     ; preds = %17
  ret void

; <label>:62:                                     ; preds = %17
  %63 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %64 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %65 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %63, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %64, align 8
  store i64 %2, i64* %65, align 8
  %66 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %63, align 8
  %67 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %64, align 8
  %68 = bitcast %"struct.std::_Rb_tree_node"* %67 to i8*
  call void @_ZdlPv(i8* %68) #3
  store i32 260371014, i32* %16
  br label %69

; <label>:69:                                     ; preds = %62, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESaISC_EE13_M_deallocateEPSC_m(%"struct.std::_Vector_base.1"*, %"class.std::map"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::map"*
  %5 = alloca %"struct.std::_Vector_base.1"*
  %6 = alloca %"struct.std::_Vector_base.1"*, align 8
  %7 = alloca %"class.std::map"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %6, align 8
  store %"class.std::map"* %1, %"class.std::map"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %6, align 8
  store %"struct.std::_Vector_base.1"* %9, %"struct.std::_Vector_base.1"** %5
  %10 = load %"class.std::map"*, %"class.std::map"** %7, align 8
  store %"class.std::map"* %10, %"class.std::map"** %4
  %11 = alloca i32
  store i32 -2103515727, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -2103515727, label %15
    i32 1320390194, label %19
    i32 -2046241345, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::map"*, %"class.std::map"** %4
  %17 = icmp ne %"class.std::map"* %16, null
  %18 = select i1 %17, i32 1320390194, i32 -2046241345
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >, std::allocator<std::map<long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > > > >::_Vector_impl"* %21 to %"class.std::allocator.2"*
  %23 = load %"class.std::map"*, %"class.std::map"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEEEE10deallocateERSD_PSC_m(%"class.std::allocator.2"* dereferenceable(1) %22, %"class.std::map"* %23, i64 %24)
  store i32 -2046241345, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEEEE10deallocateERSD_PSC_m(%"class.std::allocator.2"* dereferenceable(1), %"class.std::map"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.2"*, align 8
  %5 = alloca %"class.std::map"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %4, align 8
  store %"class.std::map"* %1, %"class.std::map"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = bitcast %"class.std::allocator.2"* %7 to %"class.__gnu_cxx::new_allocator.3"*
  %9 = load %"class.std::map"*, %"class.std::map"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt3mapIxSt3setISt4pairIxxESt4lessIS4_ESaIS4_EES5_IxESaIS3_IKxS8_EEEE10deallocateEPSD_m(%"class.__gnu_cxx::new_allocator.3"* %8, %"class.std::map"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt3mapIxSt3setISt4pairIxxESt4lessIS4_ESaIS4_EES5_IxESaIS3_IKxS8_EEEE10deallocateEPSD_m(%"class.__gnu_cxx::new_allocator.3"*, %"class.std::map"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %5 = alloca %"class.std::map"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  store %"class.std::map"* %1, %"class.std::map"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  %8 = load %"class.std::map"*, %"class.std::map"** %5, align 8
  %9 = bitcast %"class.std::map"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEESC_EvT_SE_RSaIT0_E(%"class.std::map"*, %"class.std::map"*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::map"*, align 8
  %5 = alloca %"class.std::map"*, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::map"* %0, %"class.std::map"** %4, align 8
  store %"class.std::map"* %1, %"class.std::map"** %5, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %7 = load %"class.std::map"*, %"class.std::map"** %4, align 8
  %8 = load %"class.std::map"*, %"class.std::map"** %5, align 8
  call void @_ZSt8_DestroyIPSt3mapIxSt3setISt4pairIxxESt4lessIS3_ESaIS3_EES4_IxESaIS2_IKxS7_EEEEvT_SE_(%"class.std::map"* %7, %"class.std::map"* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEE11lower_boundERS8_(%"class.std::map"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %4 = alloca %"class.std::map"*, align 8
  %5 = alloca i64*, align 8
  store %"class.std::map"* %0, %"class.std::map"** %4, align 8
  store i64* %1, i64** %5, align 8
  %6 = load %"class.std::map"*, %"class.std::map"** %4, align 8
  %7 = getelementptr inbounds %"class.std::map", %"class.std::map"* %6, i32 0, i32 0
  %8 = load i64*, i64** %5, align 8
  %9 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE11lower_boundERS1_(%"class.std::_Rb_tree"* %7, i64* dereferenceable(8) %8)
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %9, %"struct.std::_Rb_tree_node_base"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  %12 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  ret %"struct.std::_Rb_tree_node_base"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEeqERKS9_(%"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"* dereferenceable(8)) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.282
  %7 = load i32, i32* @y.283
  %8 = sub i32 %6, -1917600505
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1917600505
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -508636208, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %65
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -508636208, label %20
    i32 2120798645, label %28
    i32 -1518073613, label %53
    i32 2071210537, label %55
  ]

; <label>:19:                                     ; preds = %17
  br label %65

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 2120798645, i32 2071210537
  store i32 %27, i32* %16
  br label %65

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %30 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %29, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %30, align 8
  %31 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %29, align 8
  %32 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %31, i32 0, i32 0
  %33 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %32, align 8
  %34 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %30, align 8
  %35 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %34, i32 0, i32 0
  %36 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::_Rb_tree_node_base"* %33, %36
  store i1 %37, i1* %3
  %38 = load i32, i32* @x.282
  %39 = load i32, i32* @y.283
  %40 = add i32 %38, -432239026
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, -432239026
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -1518073613, i32 2071210537
  store i32 %52, i32* %16
  br label %65

; <label>:53:                                     ; preds = %17
  %54 = load volatile i1, i1* %3
  ret i1 %54

; <label>:55:                                     ; preds = %17
  %56 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %57 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %56, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %57, align 8
  %58 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %56, align 8
  %59 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %58, i32 0, i32 0
  %60 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %59, align 8
  %61 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %57, align 8
  %62 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %61, i32 0, i32 0
  %63 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %62, align 8
  %64 = icmp eq %"struct.std::_Rb_tree_node_base"* %60, %63
  store i32 2120798645, i32* %16
  br label %65

; <label>:65:                                     ; preds = %55, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEE3endEv(%"class.std::map"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %3 = alloca %"class.std::map"*, align 8
  store %"class.std::map"* %0, %"class.std::map"** %3, align 8
  %4 = load %"class.std::map"*, %"class.std::map"** %3, align 8
  %5 = getelementptr inbounds %"class.std::map", %"class.std::map"* %4, i32 0, i32 0
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE3endEv(%"class.std::_Rb_tree"* %5) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %2, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %2, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  ret %"struct.std::_Rb_tree_node_base"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNKSt3mapIxSt3setISt4pairIxxESt4lessIS2_ESaIS2_EES3_IxESaIS1_IKxS6_EEE8key_compEv(%"class.std::map"*) #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.286
  %5 = load i32, i32* @y.287
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1634177832, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %53
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1634177832, label %17
    i32 1906550609, label %25
    i32 -162824561, label %46
    i32 1997458203, label %47
  ]

; <label>:16:                                     ; preds = %14
  br label %53

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 1906550609, i32 1997458203
  store i32 %24, i32* %13
  br label %53

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.std::less", align 1
  %27 = alloca %"class.std::map"*, align 8
  %28 = alloca %"struct.std::less", align 1
  store %"class.std::map"* %0, %"class.std::map"** %27, align 8
  %29 = load %"class.std::map"*, %"class.std::map"** %27, align 8
  %30 = getelementptr inbounds %"class.std::map", %"class.std::map"* %29, i32 0, i32 0
  call void @_ZNKSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE8key_compEv(%"class.std::_Rb_tree"* %30)
  %31 = load i32, i32* @x.286
  %32 = load i32, i32* @y.287
  %33 = add i32 %31, -828953406
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -828953406
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -162824561, i32 1997458203
  store i32 %45, i32* %13
  br label %53

; <label>:46:                                     ; preds = %14
  ret void

; <label>:47:                                     ; preds = %14
  %48 = alloca %"struct.std::less", align 1
  %49 = alloca %"class.std::map"*, align 8
  %50 = alloca %"struct.std::less", align 1
  store %"class.std::map"* %0, %"class.std::map"** %49, align 8
  %51 = load %"class.std::map"*, %"class.std::map"** %49, align 8
  %52 = getelementptr inbounds %"class.std::map", %"class.std::map"* %51, i32 0, i32 0
  call void @_ZNKSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE8key_compEv(%"class.std::_Rb_tree"* %52)
  store i32 1906550609, i32* %13
  br label %53

; <label>:53:                                     ; preds = %47, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"*, i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat align 2 {
  %4 = alloca %"struct.std::less"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"struct.std::less"* %0, %"struct.std::less"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"struct.std::less"*, %"struct.std::less"** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = load i64, i64* %8, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = load i64, i64* %10, align 8
  %12 = icmp slt i64 %9, %11
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(56) %"struct.std::pair.20"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEdeEv(%"struct.std::_Rb_tree_iterator"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node"*
  %7 = invoke %"struct.std::pair.20"* @_ZNSt13_Rb_tree_nodeISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %6)
          to label %8 unwind label %9

; <label>:8:                                      ; preds = %1
  ret %"struct.std::pair.20"* %7

; <label>:9:                                      ; preds = %1
  %10 = landingpad { i8*, i32 }
          catch i8* null
  %11 = extractvalue { i8*, i32 } %10, 0
  call void @__clang_call_terminate(i8* %11) #12
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESI_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.24"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = load i32, i32* @x.292
  %7 = load i32, i32* @y.293
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %7, 10
  %15 = and i1 %13, %14
  %16 = xor i1 %13, %14
  %17 = or i1 %15, %16
  %18 = or i1 %13, %14
  br i1 %17, label %19, label %237

; <label>:19:                                     ; preds = %5, %237
  %20 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %21 = alloca %"struct.std::_Rb_tree_const_iterator.23", align 8
  %22 = alloca %"class.std::_Rb_tree"*, align 8
  %23 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %24 = alloca %"class.std::tuple"*, align 8
  %25 = alloca %"class.std::tuple.24"*, align 8
  %26 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %27 = alloca %"struct.std::pair.25", align 8
  %28 = alloca %"struct.std::_Rb_tree_const_iterator.23", align 8
  %29 = alloca i8*
  %30 = alloca i32
  %31 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.23", %"struct.std::_Rb_tree_const_iterator.23"* %21, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %31, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %22, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %23, align 8
  store %"class.std::tuple"* %3, %"class.std::tuple"** %24, align 8
  store %"class.std::tuple.24"* %4, %"class.std::tuple.24"** %25, align 8
  %32 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %22, align 8
  %33 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %23, align 8
  %34 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %33) #3
  %35 = load %"class.std::tuple"*, %"class.std::tuple"** %24, align 8
  %36 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple"* dereferenceable(8) %35) #3
  %37 = load %"class.std::tuple.24"*, %"class.std::tuple.24"** %25, align 8
  %38 = call dereferenceable(1) %"class.std::tuple.24"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.24"* dereferenceable(1) %37) #3
  %39 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESI_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_(%"class.std::_Rb_tree"* %32, %"struct.std::piecewise_construct_t"* dereferenceable(1) %34, %"class.std::tuple"* dereferenceable(8) %36, %"class.std::tuple.24"* dereferenceable(1) %38)
  store %"struct.std::_Rb_tree_node"* %39, %"struct.std::_Rb_tree_node"** %26, align 8
  %40 = bitcast %"struct.std::_Rb_tree_const_iterator.23"* %28 to i8*
  %41 = bitcast %"struct.std::_Rb_tree_const_iterator.23"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 8, i32 8, i1 false)
  %42 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %26, align 8
  %43 = load i32, i32* @x.292
  %44 = load i32, i32* @y.293
  %45 = add i32 %43, 131791630
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 131791630
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  br i1 %55, label %57, label %237

; <label>:57:                                     ; preds = %19
  %58 = invoke dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E(%"struct.std::_Rb_tree_node"* %42)
          to label %59 unwind label %81

; <label>:59:                                     ; preds = %57
  %60 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.23", %"struct.std::_Rb_tree_const_iterator.23"* %28, i32 0, i32 0
  %61 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %60, align 8
  %62 = invoke { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS1_(%"class.std::_Rb_tree"* %32, %"struct.std::_Rb_tree_node_base"* %61, i64* dereferenceable(8) %58)
          to label %63 unwind label %81

; <label>:63:                                     ; preds = %59
  %64 = bitcast %"struct.std::pair.25"* %27 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %65 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %64, i32 0, i32 0
  %66 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %62, 0
  store %"struct.std::_Rb_tree_node_base"* %66, %"struct.std::_Rb_tree_node_base"** %65, align 8
  %67 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %64, i32 0, i32 1
  %68 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %62, 1
  store %"struct.std::_Rb_tree_node_base"* %68, %"struct.std::_Rb_tree_node_base"** %67, align 8
  %69 = getelementptr inbounds %"struct.std::pair.25", %"struct.std::pair.25"* %27, i32 0, i32 1
  %70 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %69, align 8
  %71 = icmp ne %"struct.std::_Rb_tree_node_base"* %70, null
  br i1 %71, label %72, label %172

; <label>:72:                                     ; preds = %63
  %73 = getelementptr inbounds %"struct.std::pair.25", %"struct.std::pair.25"* %27, i32 0, i32 0
  %74 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %73, align 8
  %75 = getelementptr inbounds %"struct.std::pair.25", %"struct.std::pair.25"* %27, i32 0, i32 1
  %76 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %75, align 8
  %77 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %26, align 8
  %78 = invoke %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSF_PSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree"* %32, %"struct.std::_Rb_tree_node_base"* %74, %"struct.std::_Rb_tree_node_base"* %76, %"struct.std::_Rb_tree_node"* %77)
          to label %79 unwind label %81

; <label>:79:                                     ; preds = %72
  %80 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %20, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %78, %"struct.std::_Rb_tree_node_base"** %80, align 8
  br label %225

; <label>:81:                                     ; preds = %72, %59, %57
  %82 = load i32, i32* @x.292
  %83 = load i32, i32* @y.293
  %84 = add i32 %82, -2100784574
  %85 = sub i32 %84, 1
  %86 = sub i32 %85, -2100784574
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  br i1 %94, label %96, label %261

; <label>:96:                                     ; preds = %81, %261
  %97 = landingpad { i8*, i32 }
          catch i8* null
  %98 = extractvalue { i8*, i32 } %97, 0
  store i8* %98, i8** %29, align 8
  %99 = extractvalue { i8*, i32 } %97, 1
  store i32 %99, i32* %30, align 4
  %100 = load i32, i32* @x.292
  %101 = load i32, i32* @y.293
  %102 = sub i32 0, 1
  %103 = add i32 %100, %102
  %104 = sub i32 %100, 1
  %105 = mul i32 %100, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %101, 10
  %109 = and i1 %107, %108
  %110 = xor i1 %107, %108
  %111 = or i1 %109, %110
  %112 = or i1 %107, %108
  br i1 %111, label %113, label %261

; <label>:113:                                    ; preds = %96
  br label %114

; <label>:114:                                    ; preds = %113
  %115 = load i32, i32* @x.292
  %116 = load i32, i32* @y.293
  %117 = add i32 %115, -369996780
  %118 = sub i32 %117, 1
  %119 = sub i32 %118, -369996780
  %120 = sub i32 %115, 1
  %121 = mul i32 %115, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %116, 10
  %125 = xor i1 %123, true
  %126 = xor i1 %124, true
  %127 = xor i1 false, true
  %128 = and i1 %125, false
  %129 = and i1 %123, %127
  %130 = and i1 %126, false
  %131 = and i1 %124, %127
  %132 = or i1 %128, %129
  %133 = or i1 %130, %131
  %134 = xor i1 %132, %133
  %135 = or i1 %125, %126
  %136 = xor i1 %135, true
  %137 = or i1 false, %127
  %138 = and i1 %136, %137
  %139 = or i1 %134, %138
  %140 = or i1 %123, %124
  br i1 %139, label %141, label %265

; <label>:141:                                    ; preds = %114, %265
  %142 = load i8*, i8** %29, align 8
  %143 = call i8* @__cxa_begin_catch(i8* %142) #3
  %144 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %26, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree"* %32, %"struct.std::_Rb_tree_node"* %144) #3
  %145 = load i32, i32* @x.292
  %146 = load i32, i32* @y.293
  %147 = add i32 %145, -507927967
  %148 = sub i32 %147, 1
  %149 = sub i32 %148, -507927967
  %150 = sub i32 %145, 1
  %151 = mul i32 %145, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %146, 10
  %155 = xor i1 %153, true
  %156 = xor i1 %154, true
  %157 = xor i1 false, true
  %158 = and i1 %155, false
  %159 = and i1 %153, %157
  %160 = and i1 %156, false
  %161 = and i1 %154, %157
  %162 = or i1 %158, %159
  %163 = or i1 %160, %161
  %164 = xor i1 %162, %163
  %165 = or i1 %155, %156
  %166 = xor i1 %165, true
  %167 = or i1 false, %157
  %168 = and i1 %166, %167
  %169 = or i1 %164, %168
  %170 = or i1 %153, %154
  br i1 %169, label %171, label %265

; <label>:171:                                    ; preds = %141
  invoke void @__cxa_rethrow() #16
          to label %236 unwind label %178

; <label>:172:                                    ; preds = %63
  %173 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %26, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree"* %32, %"struct.std::_Rb_tree_node"* %173) #3
  %174 = getelementptr inbounds %"struct.std::pair.25", %"struct.std::pair.25"* %27, i32 0, i32 0
  %175 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %174, align 8
  %176 = bitcast %"struct.std::_Rb_tree_node_base"* %175 to %"struct.std::_Rb_tree_node"*
  %177 = bitcast %"struct.std::_Rb_tree_node"* %176 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %20, %"struct.std::_Rb_tree_node_base"* %177) #3
  br label %225

; <label>:178:                                    ; preds = %171
  %179 = landingpad { i8*, i32 }
          cleanup
  %180 = extractvalue { i8*, i32 } %179, 0
  store i8* %180, i8** %29, align 8
  %181 = extractvalue { i8*, i32 } %179, 1
  store i32 %181, i32* %30, align 4
  invoke void @__cxa_end_catch()
          to label %182 unwind label %233

; <label>:182:                                    ; preds = %178
  %183 = load i32, i32* @x.292
  %184 = load i32, i32* @y.293
  %185 = sub i32 %183, 2063573424
  %186 = sub i32 %185, 1
  %187 = add i32 %186, 2063573424
  %188 = sub i32 %183, 1
  %189 = mul i32 %183, %187
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %184, 10
  %193 = and i1 %191, %192
  %194 = xor i1 %191, %192
  %195 = or i1 %193, %194
  %196 = or i1 %191, %192
  br i1 %195, label %197, label %269

; <label>:197:                                    ; preds = %182, %269
  %198 = load i32, i32* @x.292
  %199 = load i32, i32* @y.293
  %200 = sub i32 0, 1
  %201 = add i32 %198, %200
  %202 = sub i32 %198, 1
  %203 = mul i32 %198, %201
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %199, 10
  %207 = xor i1 %205, true
  %208 = xor i1 %206, true
  %209 = xor i1 true, true
  %210 = and i1 %207, true
  %211 = and i1 %205, %209
  %212 = and i1 %208, true
  %213 = and i1 %206, %209
  %214 = or i1 %210, %211
  %215 = or i1 %212, %213
  %216 = xor i1 %214, %215
  %217 = or i1 %207, %208
  %218 = xor i1 %217, true
  %219 = or i1 true, %209
  %220 = and i1 %218, %219
  %221 = or i1 %216, %220
  %222 = or i1 %205, %206
  br i1 %221, label %223, label %269

; <label>:223:                                    ; preds = %197
  br label %228
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:225:                                    ; preds = %172, %79
  %226 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %20, i32 0, i32 0
  %227 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %226, align 8
  ret %"struct.std::_Rb_tree_node_base"* %227

; <label>:228:                                    ; preds = %223
  %229 = load i8*, i8** %29, align 8
  %230 = load i32, i32* %30, align 4
  %231 = insertvalue { i8*, i32 } undef, i8* %229, 0
  %232 = insertvalue { i8*, i32 } %231, i32 %230, 1
  resume { i8*, i32 } %232

; <label>:233:                                    ; preds = %178
  %234 = landingpad { i8*, i32 }
          catch i8* null
  %235 = extractvalue { i8*, i32 } %234, 0
  call void @__clang_call_terminate(i8* %235) #12
  unreachable

; <label>:236:                                    ; preds = %171
  unreachable

; <label>:237:                                    ; preds = %19, %5
  %238 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %239 = alloca %"struct.std::_Rb_tree_const_iterator.23", align 8
  %240 = alloca %"class.std::_Rb_tree"*, align 8
  %241 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %242 = alloca %"class.std::tuple"*, align 8
  %243 = alloca %"class.std::tuple.24"*, align 8
  %244 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %245 = alloca %"struct.std::pair.25", align 8
  %246 = alloca %"struct.std::_Rb_tree_const_iterator.23", align 8
  %247 = alloca i8*
  %248 = alloca i32
  %249 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.23", %"struct.std::_Rb_tree_const_iterator.23"* %239, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %249, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %240, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %241, align 8
  store %"class.std::tuple"* %3, %"class.std::tuple"** %242, align 8
  store %"class.std::tuple.24"* %4, %"class.std::tuple.24"** %243, align 8
  %250 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %240, align 8
  %251 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %241, align 8
  %252 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %251) #3
  %253 = load %"class.std::tuple"*, %"class.std::tuple"** %242, align 8
  %254 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple"* dereferenceable(8) %253) #3
  %255 = load %"class.std::tuple.24"*, %"class.std::tuple.24"** %243, align 8
  %256 = call dereferenceable(1) %"class.std::tuple.24"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.24"* dereferenceable(1) %255) #3
  %257 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESI_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_(%"class.std::_Rb_tree"* %250, %"struct.std::piecewise_construct_t"* dereferenceable(1) %252, %"class.std::tuple"* dereferenceable(8) %254, %"class.std::tuple.24"* dereferenceable(1) %256)
  store %"struct.std::_Rb_tree_node"* %257, %"struct.std::_Rb_tree_node"** %244, align 8
  %258 = bitcast %"struct.std::_Rb_tree_const_iterator.23"* %246 to i8*
  %259 = bitcast %"struct.std::_Rb_tree_const_iterator.23"* %239 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %258, i8* %259, i64 8, i32 8, i1 false)
  %260 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %244, align 8
  br label %19

; <label>:261:                                    ; preds = %96, %81
  %262 = landingpad { i8*, i32 }
          catch i8* null
  %263 = extractvalue { i8*, i32 } %262, 0
  store i8* %263, i8** %29, align 8
  %264 = extractvalue { i8*, i32 } %262, 1
  store i32 %264, i32* %30, align 4
  br label %96

; <label>:265:                                    ; preds = %141, %114
  %266 = load i8*, i8** %29, align 8
  %267 = call i8* @__cxa_begin_catch(i8* %266) #3
  %268 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %26, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree"* %32, %"struct.std::_Rb_tree_node"* %268) #3
  br label %141

; <label>:269:                                    ; preds = %197, %182
  br label %197
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt23_Rb_tree_const_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEC2ERKSt17_Rb_tree_iteratorIS8_E(%"struct.std::_Rb_tree_const_iterator.23"*, %"struct.std::_Rb_tree_iterator"* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator.23"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator.23"* %0, %"struct.std::_Rb_tree_const_iterator.23"** %3, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_const_iterator.23"*, %"struct.std::_Rb_tree_const_iterator.23"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.23", %"struct.std::_Rb_tree_const_iterator.23"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  store %"struct.std::_Rb_tree_node_base"* %9, %"struct.std::_Rb_tree_node_base"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5tupleIJRKxEEC2ES1_(%"class.std::tuple"*, i64* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::tuple"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.std::tuple"*, %"class.std::tuple"** %3, align 8
  %6 = bitcast %"class.std::tuple"* %5 to %"struct.std::_Tuple_impl"*
  %7 = load i64*, i64** %4, align 8
  call void @_ZNSt11_Tuple_implILm0EJRKxEEC2ES1_(%"struct.std::_Tuple_impl"* %6, i64* dereferenceable(8) %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE11lower_boundERS1_(%"class.std::_Rb_tree"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %4 = alloca %"class.std::_Rb_tree"*, align 8
  %5 = alloca i64*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %4, align 8
  store i64* %1, i64** %5, align 8
  %6 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  %7 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE8_M_beginEv(%"class.std::_Rb_tree"* %6) #3
  %8 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE6_M_endEv(%"class.std::_Rb_tree"* %6) #3
  %9 = load i64*, i64** %5, align 8
  %10 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_ESG_RS1_(%"class.std::_Rb_tree"* %6, %"struct.std::_Rb_tree_node"* %7, %"struct.std::_Rb_tree_node"* %8, i64* dereferenceable(8) %9)
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %10, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %12 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  %13 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %12, align 8
  ret %"struct.std::_Rb_tree_node_base"* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS8_ESG_RS1_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %5 = alloca %"class.std::_Rb_tree"*
  %6 = alloca i64**
  %7 = alloca %"struct.std::_Rb_tree_node"**
  %8 = alloca %"struct.std::_Rb_tree_node"**
  %9 = alloca %"struct.std::_Rb_tree_iterator"*
  %10 = alloca i1
  %11 = alloca i1
  %12 = load i32, i32* @x.300
  %13 = load i32, i32* @y.301
  %14 = sub i32 %12, 1615460472
  %15 = sub i32 %14, 1
  %16 = add i32 %15, 1615460472
  %17 = sub i32 %12, 1
  %18 = mul i32 %12, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  store i1 %20, i1* %11
  %21 = icmp slt i32 %13, 10
  store i1 %21, i1* %10
  %22 = alloca i32
  store i32 129938145, i32* %22
  br label %23

; <label>:23:                                     ; preds = %4, %202
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 129938145, label %26
    i32 -750020316, label %34
    i32 111619696, label %71
    i32 77152131, label %72
    i32 1060494320, label %77
    i32 -1587999040, label %88
    i32 -615795808, label %97
    i32 -87249590, label %113
    i32 -736754878, label %134
    i32 -749728202, label %135
    i32 392149053, label %163
    i32 198833525, label %179
    i32 324464298, label %180
    i32 -1922856272, label %188
    i32 521685311, label %195
    i32 1782722858, label %201
  ]

; <label>:25:                                     ; preds = %23
  br label %202

; <label>:26:                                     ; preds = %23
  %27 = load volatile i1, i1* %11
  %28 = load volatile i1, i1* %10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  %33 = select i1 %31, i32 -750020316, i32 -1922856272
  store i32 %33, i32* %22
  br label %202

; <label>:34:                                     ; preds = %23
  %35 = alloca %"struct.std::_Rb_tree_iterator", align 8
  store %"struct.std::_Rb_tree_iterator"* %35, %"struct.std::_Rb_tree_iterator"** %9
  %36 = alloca %"class.std::_Rb_tree"*, align 8
  %37 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"** %37, %"struct.std::_Rb_tree_node"*** %8
  %38 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"** %38, %"struct.std::_Rb_tree_node"*** %7
  %39 = alloca i64*, align 8
  store i64** %39, i64*** %6
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %36, align 8
  %40 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %40, align 8
  %41 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %7
  store %"struct.std::_Rb_tree_node"* %2, %"struct.std::_Rb_tree_node"** %41, align 8
  %42 = load volatile i64**, i64*** %6
  store i64* %3, i64** %42, align 8
  %43 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %36, align 8
  store %"class.std::_Rb_tree"* %43, %"class.std::_Rb_tree"** %5
  %44 = load i32, i32* @x.300
  %45 = load i32, i32* @y.301
  %46 = sub i32 %44, 287718853
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 287718853
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 111619696, i32 -1922856272
  store i32 %70, i32* %22
  br label %202

; <label>:71:                                     ; preds = %23
  store i32 77152131, i32* %22
  br label %202

; <label>:72:                                     ; preds = %23
  %73 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %8
  %74 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %73, align 8
  %75 = icmp ne %"struct.std::_Rb_tree_node"* %74, null
  %76 = select i1 %75, i32 1060494320, i32 324464298
  store i32 %76, i32* %22
  br label %202

; <label>:77:                                     ; preds = %23
  %78 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5
  %79 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %78, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %79, i32 0, i32 0
  %81 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %8
  %82 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %81, align 8
  %83 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E(%"struct.std::_Rb_tree_node"* %82)
  %84 = load volatile i64**, i64*** %6
  %85 = load i64*, i64** %84, align 8
  %86 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %80, i64* dereferenceable(8) %83, i64* dereferenceable(8) %85)
  %87 = select i1 %86, i32 -615795808, i32 -1587999040
  store i32 %87, i32* %22
  br label %202

; <label>:88:                                     ; preds = %23
  %89 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %8
  %90 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %89, align 8
  %91 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %7
  store %"struct.std::_Rb_tree_node"* %90, %"struct.std::_Rb_tree_node"** %91, align 8
  %92 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %8
  %93 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %92, align 8
  %94 = bitcast %"struct.std::_Rb_tree_node"* %93 to %"struct.std::_Rb_tree_node_base"*
  %95 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %94) #3
  %96 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %8
  store %"struct.std::_Rb_tree_node"* %95, %"struct.std::_Rb_tree_node"** %96, align 8
  store i32 -749728202, i32* %22
  br label %202

; <label>:97:                                     ; preds = %23
  %98 = load i32, i32* @x.300
  %99 = load i32, i32* @y.301
  %100 = add i32 %98, 717908991
  %101 = sub i32 %100, 1
  %102 = sub i32 %101, 717908991
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = and i1 %106, %107
  %109 = xor i1 %106, %107
  %110 = or i1 %108, %109
  %111 = or i1 %106, %107
  %112 = select i1 %110, i32 -87249590, i32 521685311
  store i32 %112, i32* %22
  br label %202

; <label>:113:                                    ; preds = %23
  %114 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %8
  %115 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %114, align 8
  %116 = bitcast %"struct.std::_Rb_tree_node"* %115 to %"struct.std::_Rb_tree_node_base"*
  %117 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %116) #3
  %118 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %8
  store %"struct.std::_Rb_tree_node"* %117, %"struct.std::_Rb_tree_node"** %118, align 8
  %119 = load i32, i32* @x.300
  %120 = load i32, i32* @y.301
  %121 = add i32 %119, -1199758040
  %122 = sub i32 %121, 1
  %123 = sub i32 %122, -1199758040
  %124 = sub i32 %119, 1
  %125 = mul i32 %119, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %120, 10
  %129 = and i1 %127, %128
  %130 = xor i1 %127, %128
  %131 = or i1 %129, %130
  %132 = or i1 %127, %128
  %133 = select i1 %131, i32 -736754878, i32 521685311
  store i32 %133, i32* %22
  br label %202

; <label>:134:                                    ; preds = %23
  store i32 -749728202, i32* %22
  br label %202

; <label>:135:                                    ; preds = %23
  %136 = load i32, i32* @x.300
  %137 = load i32, i32* @y.301
  %138 = add i32 %136, 357793819
  %139 = sub i32 %138, 1
  %140 = sub i32 %139, 357793819
  %141 = sub i32 %136, 1
  %142 = mul i32 %136, %140
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %137, 10
  %146 = xor i1 %144, true
  %147 = xor i1 %145, true
  %148 = xor i1 false, true
  %149 = and i1 %146, false
  %150 = and i1 %144, %148
  %151 = and i1 %147, false
  %152 = and i1 %145, %148
  %153 = or i1 %149, %150
  %154 = or i1 %151, %152
  %155 = xor i1 %153, %154
  %156 = or i1 %146, %147
  %157 = xor i1 %156, true
  %158 = or i1 false, %148
  %159 = and i1 %157, %158
  %160 = or i1 %155, %159
  %161 = or i1 %144, %145
  %162 = select i1 %160, i32 392149053, i32 1782722858
  store i32 %162, i32* %22
  br label %202

; <label>:163:                                    ; preds = %23
  %164 = load i32, i32* @x.300
  %165 = load i32, i32* @y.301
  %166 = sub i32 %164, 1544963494
  %167 = sub i32 %166, 1
  %168 = add i32 %167, 1544963494
  %169 = sub i32 %164, 1
  %170 = mul i32 %164, %168
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %165, 10
  %174 = and i1 %172, %173
  %175 = xor i1 %172, %173
  %176 = or i1 %174, %175
  %177 = or i1 %172, %173
  %178 = select i1 %176, i32 198833525, i32 1782722858
  store i32 %178, i32* %22
  br label %202

; <label>:179:                                    ; preds = %23
  store i32 77152131, i32* %22
  br label %202

; <label>:180:                                    ; preds = %23
  %181 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %7
  %182 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %181, align 8
  %183 = bitcast %"struct.std::_Rb_tree_node"* %182 to %"struct.std::_Rb_tree_node_base"*
  %184 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %9
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %184, %"struct.std::_Rb_tree_node_base"* %183) #3
  %185 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %9
  %186 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %185, i32 0, i32 0
  %187 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %186, align 8
  ret %"struct.std::_Rb_tree_node_base"* %187

; <label>:188:                                    ; preds = %23
  %189 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %190 = alloca %"class.std::_Rb_tree"*, align 8
  %191 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %192 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %193 = alloca i64*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %190, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %191, align 8
  store %"struct.std::_Rb_tree_node"* %2, %"struct.std::_Rb_tree_node"** %192, align 8
  store i64* %3, i64** %193, align 8
  %194 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %190, align 8
  store i32 -750020316, i32* %22
  br label %202

; <label>:195:                                    ; preds = %23
  %196 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %8
  %197 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %196, align 8
  %198 = bitcast %"struct.std::_Rb_tree_node"* %197 to %"struct.std::_Rb_tree_node_base"*
  %199 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %198) #3
  %200 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %8
  store %"struct.std::_Rb_tree_node"* %199, %"struct.std::_Rb_tree_node"** %200, align 8
  store i32 -87249590, i32* %22
  br label %202

; <label>:201:                                    ; preds = %23
  store i32 392149053, i32* %22
  br label %202

; <label>:202:                                    ; preds = %201, %195, %188, %179, %163, %135, %134, %113, %97, %88, %77, %72, %71, %34, %26, %25
  br label %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE6_M_endEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E(%"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.304
  %6 = load i32, i32* @y.305
  %7 = sub i32 %5, 31431465
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 31431465
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1579226605, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1579226605, label %19
    i32 1893779695, label %39
    i32 -2091319745, label %60
    i32 1543742184, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1893779695, i32 1543742184
  store i32 %38, i32* %15
  br label %68

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %41 = alloca %"struct.std::_Select1st", align 1
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %40, align 8
  %42 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %40, align 8
  %43 = call dereferenceable(56) %"struct.std::pair.20"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE8_S_valueEPKSt13_Rb_tree_nodeIS8_E(%"struct.std::_Rb_tree_node"* %42)
  %44 = call dereferenceable(8) i64* @_ZNKSt10_Select1stISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEclERKS8_(%"struct.std::_Select1st"* %41, %"struct.std::pair.20"* dereferenceable(56) %43)
  store i64* %44, i64** %2
  %45 = load i32, i32* @x.304
  %46 = load i32, i32* @y.305
  %47 = add i32 %45, 2004318584
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, 2004318584
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -2091319745, i32 1543742184
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile i64*, i64** %2
  ret i64* %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %64 = alloca %"struct.std::_Select1st", align 1
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %63, align 8
  %65 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %63, align 8
  %66 = call dereferenceable(56) %"struct.std::pair.20"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE8_S_valueEPKSt13_Rb_tree_nodeIS8_E(%"struct.std::_Rb_tree_node"* %65)
  %67 = call dereferenceable(8) i64* @_ZNKSt10_Select1stISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEclERKS8_(%"struct.std::_Select1st"* %64, %"struct.std::pair.20"* dereferenceable(56) %66)
  store i32 1893779695, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_node_base"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  store %"struct.std::_Rb_tree_node_base"* %7, %"struct.std::_Rb_tree_node_base"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNKSt10_Select1stISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEclERKS8_(%"struct.std::_Select1st"*, %"struct.std::pair.20"* dereferenceable(56)) #4 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.308
  %7 = load i32, i32* @y.309
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 95384871, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 95384871, label %19
    i32 -1450445687, label %39
    i32 955674764, label %60
    i32 -1111954130, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1450445687, i32 -1111954130
  store i32 %38, i32* %15
  br label %68

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Select1st"*, align 8
  %41 = alloca %"struct.std::pair.20"*, align 8
  store %"struct.std::_Select1st"* %0, %"struct.std::_Select1st"** %40, align 8
  store %"struct.std::pair.20"* %1, %"struct.std::pair.20"** %41, align 8
  %42 = load %"struct.std::_Select1st"*, %"struct.std::_Select1st"** %40, align 8
  %43 = load %"struct.std::pair.20"*, %"struct.std::pair.20"** %41, align 8
  %44 = getelementptr inbounds %"struct.std::pair.20", %"struct.std::pair.20"* %43, i32 0, i32 0
  store i64* %44, i64** %3
  %45 = load i32, i32* @x.308
  %46 = load i32, i32* @y.309
  %47 = sub i32 %45, 1532132915
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 1532132915
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 955674764, i32 -1111954130
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile i64*, i64** %3
  ret i64* %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"struct.std::_Select1st"*, align 8
  %64 = alloca %"struct.std::pair.20"*, align 8
  store %"struct.std::_Select1st"* %0, %"struct.std::_Select1st"** %63, align 8
  store %"struct.std::pair.20"* %1, %"struct.std::pair.20"** %64, align 8
  %65 = load %"struct.std::_Select1st"*, %"struct.std::_Select1st"** %63, align 8
  %66 = load %"struct.std::pair.20"*, %"struct.std::pair.20"** %64, align 8
  %67 = getelementptr inbounds %"struct.std::pair.20", %"struct.std::pair.20"* %66, i32 0, i32 0
  store i32 -1450445687, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(56) %"struct.std::pair.20"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE8_S_valueEPKSt13_Rb_tree_nodeIS8_E(%"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
  %4 = call %"struct.std::pair.20"* @_ZNKSt13_Rb_tree_nodeISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %3)
  ret %"struct.std::pair.20"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.20"* @_ZNKSt13_Rb_tree_nodeISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEE9_M_valptrEv(%"struct.std::_Rb_tree_node"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %3, i32 0, i32 1
  %5 = call %"struct.std::pair.20"* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxSt3setIS1_IxxESt4lessIS4_ESaIS4_EEEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* %4) #3
  ret %"struct.std::pair.20"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.20"* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxSt3setIS1_IxxESt4lessIS4_ESaIS4_EEEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %4 = call i8* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxSt3setIS1_IxxESt4lessIS4_ESaIS4_EEEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* %3) #3
  %5 = bitcast i8* %4 to %"struct.std::pair.20"*
  ret %"struct.std::pair.20"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxSt3setIS1_IxxESt4lessIS4_ESaIS4_EEEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %2, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf", %"struct.__gnu_cxx::__aligned_membuf"* %3, i32 0, i32 0
  %5 = bitcast [56 x i8]* %4 to i8*
  ret i8* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE3endEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  %4 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %5, i32 0, i32 1
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %2, %"struct.std::_Rb_tree_node_base"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %2, i32 0, i32 0
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_node_base"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE8key_compEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::less", align 1
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  %4 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %5, i32 0, i32 0
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESI_IJEEEEEPSt13_Rb_tree_nodeIS8_EDpOT_(%"class.std::_Rb_tree"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.24"* dereferenceable(1)) #0 comdat align 2 {
  %5 = alloca %"class.std::_Rb_tree"*, align 8
  %6 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %7 = alloca %"class.std::tuple"*, align 8
  %8 = alloca %"class.std::tuple.24"*, align 8
  %9 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %5, align 8
  store %"struct.std::piecewise_construct_t"* %1, %"struct.std::piecewise_construct_t"** %6, align 8
  store %"class.std::tuple"* %2, %"class.std::tuple"** %7, align 8
  store %"class.std::tuple.24"* %3, %"class.std::tuple.24"** %8, align 8
  %10 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5, align 8
  %11 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE11_M_get_nodeEv(%"class.std::_Rb_tree"* %10)
  store %"struct.std::_Rb_tree_node"* %11, %"struct.std::_Rb_tree_node"** %9, align 8
  %12 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %13 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %6, align 8
  %14 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %13) #3
  %15 = load %"class.std::tuple"*, %"class.std::tuple"** %7, align 8
  %16 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple"* dereferenceable(8) %15) #3
  %17 = load %"class.std::tuple.24"*, %"class.std::tuple.24"** %8, align 8
  %18 = call dereferenceable(1) %"class.std::tuple.24"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.24"* dereferenceable(1) %17) #3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESI_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_(%"class.std::_Rb_tree"* %10, %"struct.std::_Rb_tree_node"* %12, %"struct.std::piecewise_construct_t"* dereferenceable(1) %14, %"class.std::tuple"* dereferenceable(8) %16, %"class.std::tuple.24"* dereferenceable(1) %18)
  %19 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  ret %"struct.std::_Rb_tree_node"* %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1)) #4 comdat {
  %2 = alloca %"struct.std::piecewise_construct_t"*, align 8
  store %"struct.std::piecewise_construct_t"* %0, %"struct.std::piecewise_construct_t"** %2, align 8
  %3 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %2, align 8
  ret %"struct.std::piecewise_construct_t"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"class.std::tuple"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.326
  %6 = load i32, i32* @y.327
  %7 = sub i32 %5, -870588859
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -870588859
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1492274261, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1492274261, label %19
    i32 1407610374, label %27
    i32 -1710957803, label %57
    i32 1004845474, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1407610374, i32 1004845474
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %28, align 8
  %29 = load %"class.std::tuple"*, %"class.std::tuple"** %28, align 8
  store %"class.std::tuple"* %29, %"class.std::tuple"** %2
  %30 = load i32, i32* @x.326
  %31 = load i32, i32* @y.327
  %32 = sub i32 %30, -2138584758
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -2138584758
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -1710957803, i32 1004845474
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"class.std::tuple"*, %"class.std::tuple"** %2
  ret %"class.std::tuple"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %60, align 8
  %61 = load %"class.std::tuple"*, %"class.std::tuple"** %60, align 8
  store i32 1407610374, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::tuple.24"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.24"* dereferenceable(1)) #4 comdat {
  %2 = alloca %"class.std::tuple.24"*, align 8
  store %"class.std::tuple.24"* %0, %"class.std::tuple.24"** %2, align 8
  %3 = load %"class.std::tuple.24"*, %"class.std::tuple.24"** %2, align 8
  ret %"class.std::tuple.24"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS1_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node_base"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca %"struct.std::_Rb_tree_node_base"*
  %7 = alloca %"struct.std::_Rb_tree_node_base"*
  %8 = alloca %"class.std::_Rb_tree"*
  %9 = alloca %"struct.std::pair.25", align 8
  %10 = alloca %"struct.std::_Rb_tree_const_iterator.23", align 8
  %11 = alloca %"class.std::_Rb_tree"*, align 8
  %12 = alloca i64*, align 8
  %13 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %14 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %15 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %16 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %17 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %18 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %19 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %20 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %21 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.23", %"struct.std::_Rb_tree_const_iterator.23"* %10, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %21, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %11, align 8
  store i64* %2, i64** %12, align 8
  %22 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %11, align 8
  store %"class.std::_Rb_tree"* %22, %"class.std::_Rb_tree"** %8
  %23 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEE13_M_const_castEv(%"struct.std::_Rb_tree_const_iterator.23"* %10) #3
  %24 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %23, %"struct.std::_Rb_tree_node_base"** %24, align 8
  %25 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  %26 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %25, align 8
  store %"struct.std::_Rb_tree_node_base"* %26, %"struct.std::_Rb_tree_node_base"** %7
  %27 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %28 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE6_M_endEv(%"class.std::_Rb_tree"* %27) #3
  %29 = bitcast %"struct.std::_Rb_tree_node"* %28 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %29, %"struct.std::_Rb_tree_node_base"** %6
  %30 = alloca i32
  store i32 1256280659, i32* %30
  br label %31

; <label>:31:                                     ; preds = %3, %596
  %32 = load i32, i32* %30
  switch i32 %32, label %33 [
    i32 1256280659, label %34
    i32 -30888072, label %39
    i32 1267727022, label %44
    i32 207846393, label %55
    i32 -1070818455, label %83
    i32 -1238339230, label %112
    i32 -1413577314, label %113
    i32 -1584796386, label %122
    i32 396427757, label %132
    i32 1384869562, label %160
    i32 -1053269373, label %184
    i32 -1150914004, label %187
    i32 -2087338502, label %192
    i32 453860131, label %203
    i32 789521509, label %209
    i32 -2022680011, label %237
    i32 665905247, label %254
    i32 1726300489, label %255
    i32 -2030891551, label %258
    i32 -1172254622, label %286
    i32 -1860503244, label %310
    i32 893841613, label %311
    i32 669954653, label %321
    i32 -305244314, label %331
    i32 1594063650, label %359
    i32 1376273590, label %388
    i32 -1611364487, label %389
    i32 -635823099, label %400
    i32 1040987041, label %416
    i32 -1481314811, label %447
    i32 -1115876606, label %450
    i32 1918006329, label %465
    i32 650732991, label %493
    i32 1538231553, label %494
    i32 1225238481, label %497
    i32 915062302, label %524
    i32 -966245281, label %548
    i32 -359174195, label %549
    i32 -76573159, label %551
    i32 423166021, label %554
    i32 325462038, label %557
    i32 -405892008, label %566
    i32 1282671456, label %568
    i32 -1184447123, label %577
    i32 -2032545775, label %580
    i32 183478126, label %585
    i32 -563239891, label %587
  ]

; <label>:33:                                     ; preds = %31
  br label %596

; <label>:34:                                     ; preds = %31
  %35 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7
  %36 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6
  %37 = icmp eq %"struct.std::_Rb_tree_node_base"* %35, %36
  %38 = select i1 %37, i32 -30888072, i32 -1584796386
  store i32 %38, i32* %30
  br label %596

; <label>:39:                                     ; preds = %31
  %40 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %41 = call i64 @_ZNKSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE4sizeEv(%"class.std::_Rb_tree"* %40) #3
  %42 = icmp ugt i64 %41, 0
  %43 = select i1 %42, i32 1267727022, i32 -1413577314
  store i32 %43, i32* %30
  br label %596

; <label>:44:                                     ; preds = %31
  %45 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %46 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %46, i32 0, i32 0
  %48 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %49 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE12_M_rightmostEv(%"class.std::_Rb_tree"* %48) #3
  %50 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %49, align 8
  %51 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %50)
  %52 = load i64*, i64** %12, align 8
  %53 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %47, i64* dereferenceable(8) %51, i64* dereferenceable(8) %52)
  %54 = select i1 %53, i32 207846393, i32 -1413577314
  store i32 %54, i32* %30
  br label %596

; <label>:55:                                     ; preds = %31
  %56 = load i32, i32* @x.330
  %57 = load i32, i32* @y.331
  %58 = sub i32 %56, 831095845
  %59 = sub i32 %58, 1
  %60 = add i32 %59, 831095845
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 true, true
  %69 = and i1 %66, true
  %70 = and i1 %64, %68
  %71 = and i1 %67, true
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 true, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  %82 = select i1 %80, i32 -1070818455, i32 423166021
  store i32 %82, i32* %30
  br label %596

; <label>:83:                                     ; preds = %31
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %14, align 8
  %84 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %85 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE12_M_rightmostEv(%"class.std::_Rb_tree"* %84) #3
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.25"* %9, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %14, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %85)
  %86 = load i32, i32* @x.330
  %87 = load i32, i32* @y.331
  %88 = sub i32 0, 1
  %89 = add i32 %86, %88
  %90 = sub i32 %86, 1
  %91 = mul i32 %86, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %87, 10
  %95 = xor i1 %93, true
  %96 = xor i1 %94, true
  %97 = xor i1 true, true
  %98 = and i1 %95, true
  %99 = and i1 %93, %97
  %100 = and i1 %96, true
  %101 = and i1 %94, %97
  %102 = or i1 %98, %99
  %103 = or i1 %100, %101
  %104 = xor i1 %102, %103
  %105 = or i1 %95, %96
  %106 = xor i1 %105, true
  %107 = or i1 true, %97
  %108 = and i1 %106, %107
  %109 = or i1 %104, %108
  %110 = or i1 %93, %94
  %111 = select i1 %109, i32 -1238339230, i32 423166021
  store i32 %111, i32* %30
  br label %596

; <label>:112:                                    ; preds = %31
  store i32 -76573159, i32* %30
  br label %596

; <label>:113:                                    ; preds = %31
  %114 = load i64*, i64** %12, align 8
  %115 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %116 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree"* %115, i64* dereferenceable(8) %114)
  %117 = bitcast %"struct.std::pair.25"* %9 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %118 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %117, i32 0, i32 0
  %119 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %116, 0
  store %"struct.std::_Rb_tree_node_base"* %119, %"struct.std::_Rb_tree_node_base"** %118, align 8
  %120 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %117, i32 0, i32 1
  %121 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %116, 1
  store %"struct.std::_Rb_tree_node_base"* %121, %"struct.std::_Rb_tree_node_base"** %120, align 8
  store i32 -76573159, i32* %30
  br label %596

; <label>:122:                                    ; preds = %31
  %123 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %124 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %123, i32 0, i32 0
  %125 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %124, i32 0, i32 0
  %126 = load i64*, i64** %12, align 8
  %127 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  %128 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %127, align 8
  %129 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %128)
  %130 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %125, i64* dereferenceable(8) %126, i64* dereferenceable(8) %129)
  %131 = select i1 %130, i32 396427757, i32 893841613
  store i32 %131, i32* %30
  br label %596

; <label>:132:                                    ; preds = %31
  %133 = load i32, i32* @x.330
  %134 = load i32, i32* @y.331
  %135 = add i32 %133, 968986294
  %136 = sub i32 %135, 1
  %137 = sub i32 %136, 968986294
  %138 = sub i32 %133, 1
  %139 = mul i32 %133, %137
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %134, 10
  %143 = xor i1 %141, true
  %144 = xor i1 %142, true
  %145 = xor i1 true, true
  %146 = and i1 %143, true
  %147 = and i1 %141, %145
  %148 = and i1 %144, true
  %149 = and i1 %142, %145
  %150 = or i1 %146, %147
  %151 = or i1 %148, %149
  %152 = xor i1 %150, %151
  %153 = or i1 %143, %144
  %154 = xor i1 %153, true
  %155 = or i1 true, %145
  %156 = and i1 %154, %155
  %157 = or i1 %152, %156
  %158 = or i1 %141, %142
  %159 = select i1 %157, i32 1384869562, i32 325462038
  store i32 %159, i32* %30
  br label %596

; <label>:160:                                    ; preds = %31
  %161 = bitcast %"struct.std::_Rb_tree_iterator"* %15 to i8*
  %162 = bitcast %"struct.std::_Rb_tree_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %161, i8* %162, i64 8, i32 8, i1 false)
  %163 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  %164 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %163, align 8
  %165 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %166 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE11_M_leftmostEv(%"class.std::_Rb_tree"* %165) #3
  %167 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %166, align 8
  %168 = icmp eq %"struct.std::_Rb_tree_node_base"* %164, %167
  store i1 %168, i1* %5
  %169 = load i32, i32* @x.330
  %170 = load i32, i32* @y.331
  %171 = sub i32 %169, -1750265129
  %172 = sub i32 %171, 1
  %173 = add i32 %172, -1750265129
  %174 = sub i32 %169, 1
  %175 = mul i32 %169, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %170, 10
  %179 = and i1 %177, %178
  %180 = xor i1 %177, %178
  %181 = or i1 %179, %180
  %182 = or i1 %177, %178
  %183 = select i1 %181, i32 -1053269373, i32 325462038
  store i32 %183, i32* %30
  br label %596

; <label>:184:                                    ; preds = %31
  %185 = load volatile i1, i1* %5
  %186 = select i1 %185, i32 -1150914004, i32 -2087338502
  store i32 %186, i32* %30
  br label %596

; <label>:187:                                    ; preds = %31
  %188 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %189 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE11_M_leftmostEv(%"class.std::_Rb_tree"* %188) #3
  %190 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %191 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE11_M_leftmostEv(%"class.std::_Rb_tree"* %190) #3
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair.25"* %9, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %189, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %191)
  store i32 -76573159, i32* %30
  br label %596

; <label>:192:                                    ; preds = %31
  %193 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %194 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %193, i32 0, i32 0
  %195 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %194, i32 0, i32 0
  %196 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEmmEv(%"struct.std::_Rb_tree_iterator"* %15) #3
  %197 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %196, i32 0, i32 0
  %198 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %197, align 8
  %199 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %198)
  %200 = load i64*, i64** %12, align 8
  %201 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %195, i64* dereferenceable(8) %199, i64* dereferenceable(8) %200)
  %202 = select i1 %201, i32 453860131, i32 -2030891551
  store i32 %202, i32* %30
  br label %596

; <label>:203:                                    ; preds = %31
  %204 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %15, i32 0, i32 0
  %205 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %204, align 8
  %206 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %205) #3
  %207 = icmp eq %"struct.std::_Rb_tree_node"* %206, null
  %208 = select i1 %207, i32 789521509, i32 1726300489
  store i32 %208, i32* %30
  br label %596

; <label>:209:                                    ; preds = %31
  %210 = load i32, i32* @x.330
  %211 = load i32, i32* @y.331
  %212 = add i32 %210, -2068014857
  %213 = sub i32 %212, 1
  %214 = sub i32 %213, -2068014857
  %215 = sub i32 %210, 1
  %216 = mul i32 %210, %214
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %211, 10
  %220 = xor i1 %218, true
  %221 = xor i1 %219, true
  %222 = xor i1 false, true
  %223 = and i1 %220, false
  %224 = and i1 %218, %222
  %225 = and i1 %221, false
  %226 = and i1 %219, %222
  %227 = or i1 %223, %224
  %228 = or i1 %225, %226
  %229 = xor i1 %227, %228
  %230 = or i1 %220, %221
  %231 = xor i1 %230, true
  %232 = or i1 false, %222
  %233 = and i1 %231, %232
  %234 = or i1 %229, %233
  %235 = or i1 %218, %219
  %236 = select i1 %234, i32 -2022680011, i32 -405892008
  store i32 %236, i32* %30
  br label %596

; <label>:237:                                    ; preds = %31
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %16, align 8
  %238 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %15, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.25"* %9, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %16, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %238)
  %239 = load i32, i32* @x.330
  %240 = load i32, i32* @y.331
  %241 = add i32 %239, -1928723141
  %242 = sub i32 %241, 1
  %243 = sub i32 %242, -1928723141
  %244 = sub i32 %239, 1
  %245 = mul i32 %239, %243
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %240, 10
  %249 = and i1 %247, %248
  %250 = xor i1 %247, %248
  %251 = or i1 %249, %250
  %252 = or i1 %247, %248
  %253 = select i1 %251, i32 665905247, i32 -405892008
  store i32 %253, i32* %30
  br label %596

; <label>:254:                                    ; preds = %31
  store i32 -76573159, i32* %30
  br label %596

; <label>:255:                                    ; preds = %31
  %256 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  %257 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair.25"* %9, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %256, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %257)
  store i32 -76573159, i32* %30
  br label %596

; <label>:258:                                    ; preds = %31
  %259 = load i32, i32* @x.330
  %260 = load i32, i32* @y.331
  %261 = add i32 %259, -801588452
  %262 = sub i32 %261, 1
  %263 = sub i32 %262, -801588452
  %264 = sub i32 %259, 1
  %265 = mul i32 %259, %263
  %266 = urem i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %260, 10
  %269 = xor i1 %267, true
  %270 = xor i1 %268, true
  %271 = xor i1 true, true
  %272 = and i1 %269, true
  %273 = and i1 %267, %271
  %274 = and i1 %270, true
  %275 = and i1 %268, %271
  %276 = or i1 %272, %273
  %277 = or i1 %274, %275
  %278 = xor i1 %276, %277
  %279 = or i1 %269, %270
  %280 = xor i1 %279, true
  %281 = or i1 true, %271
  %282 = and i1 %280, %281
  %283 = or i1 %278, %282
  %284 = or i1 %267, %268
  %285 = select i1 %283, i32 -1172254622, i32 1282671456
  store i32 %285, i32* %30
  br label %596

; <label>:286:                                    ; preds = %31
  %287 = load i64*, i64** %12, align 8
  %288 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %289 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree"* %288, i64* dereferenceable(8) %287)
  %290 = bitcast %"struct.std::pair.25"* %9 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %291 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %290, i32 0, i32 0
  %292 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %289, 0
  store %"struct.std::_Rb_tree_node_base"* %292, %"struct.std::_Rb_tree_node_base"** %291, align 8
  %293 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %290, i32 0, i32 1
  %294 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %289, 1
  store %"struct.std::_Rb_tree_node_base"* %294, %"struct.std::_Rb_tree_node_base"** %293, align 8
  %295 = load i32, i32* @x.330
  %296 = load i32, i32* @y.331
  %297 = add i32 %295, -323310259
  %298 = sub i32 %297, 1
  %299 = sub i32 %298, -323310259
  %300 = sub i32 %295, 1
  %301 = mul i32 %295, %299
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %296, 10
  %305 = and i1 %303, %304
  %306 = xor i1 %303, %304
  %307 = or i1 %305, %306
  %308 = or i1 %303, %304
  %309 = select i1 %307, i32 -1860503244, i32 1282671456
  store i32 %309, i32* %30
  br label %596

; <label>:310:                                    ; preds = %31
  store i32 -76573159, i32* %30
  br label %596

; <label>:311:                                    ; preds = %31
  %312 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %313 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %312, i32 0, i32 0
  %314 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %313, i32 0, i32 0
  %315 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  %316 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %315, align 8
  %317 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %316)
  %318 = load i64*, i64** %12, align 8
  %319 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %314, i64* dereferenceable(8) %317, i64* dereferenceable(8) %318)
  %320 = select i1 %319, i32 669954653, i32 -359174195
  store i32 %320, i32* %30
  br label %596

; <label>:321:                                    ; preds = %31
  %322 = bitcast %"struct.std::_Rb_tree_iterator"* %17 to i8*
  %323 = bitcast %"struct.std::_Rb_tree_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %322, i8* %323, i64 8, i32 8, i1 false)
  %324 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  %325 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %324, align 8
  %326 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %327 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE12_M_rightmostEv(%"class.std::_Rb_tree"* %326) #3
  %328 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %327, align 8
  %329 = icmp eq %"struct.std::_Rb_tree_node_base"* %325, %328
  %330 = select i1 %329, i32 -305244314, i32 -1611364487
  store i32 %330, i32* %30
  br label %596

; <label>:331:                                    ; preds = %31
  %332 = load i32, i32* @x.330
  %333 = load i32, i32* @y.331
  %334 = sub i32 %332, -361882692
  %335 = sub i32 %334, 1
  %336 = add i32 %335, -361882692
  %337 = sub i32 %332, 1
  %338 = mul i32 %332, %336
  %339 = urem i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %333, 10
  %342 = xor i1 %340, true
  %343 = xor i1 %341, true
  %344 = xor i1 false, true
  %345 = and i1 %342, false
  %346 = and i1 %340, %344
  %347 = and i1 %343, false
  %348 = and i1 %341, %344
  %349 = or i1 %345, %346
  %350 = or i1 %347, %348
  %351 = xor i1 %349, %350
  %352 = or i1 %342, %343
  %353 = xor i1 %352, true
  %354 = or i1 false, %344
  %355 = and i1 %353, %354
  %356 = or i1 %351, %355
  %357 = or i1 %340, %341
  %358 = select i1 %356, i32 1594063650, i32 -1184447123
  store i32 %358, i32* %30
  br label %596

; <label>:359:                                    ; preds = %31
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %18, align 8
  %360 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %361 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE12_M_rightmostEv(%"class.std::_Rb_tree"* %360) #3
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.25"* %9, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %18, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %361)
  %362 = load i32, i32* @x.330
  %363 = load i32, i32* @y.331
  %364 = sub i32 0, 1
  %365 = add i32 %362, %364
  %366 = sub i32 %362, 1
  %367 = mul i32 %362, %365
  %368 = urem i32 %367, 2
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %363, 10
  %371 = xor i1 %369, true
  %372 = xor i1 %370, true
  %373 = xor i1 false, true
  %374 = and i1 %371, false
  %375 = and i1 %369, %373
  %376 = and i1 %372, false
  %377 = and i1 %370, %373
  %378 = or i1 %374, %375
  %379 = or i1 %376, %377
  %380 = xor i1 %378, %379
  %381 = or i1 %371, %372
  %382 = xor i1 %381, true
  %383 = or i1 false, %373
  %384 = and i1 %382, %383
  %385 = or i1 %380, %384
  %386 = or i1 %369, %370
  %387 = select i1 %385, i32 1376273590, i32 -1184447123
  store i32 %387, i32* %30
  br label %596

; <label>:388:                                    ; preds = %31
  store i32 -76573159, i32* %30
  br label %596

; <label>:389:                                    ; preds = %31
  %390 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %391 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %390, i32 0, i32 0
  %392 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %391, i32 0, i32 0
  %393 = load i64*, i64** %12, align 8
  %394 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEppEv(%"struct.std::_Rb_tree_iterator"* %17) #3
  %395 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %394, i32 0, i32 0
  %396 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %395, align 8
  %397 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %396)
  %398 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %392, i64* dereferenceable(8) %393, i64* dereferenceable(8) %397)
  %399 = select i1 %398, i32 -635823099, i32 1225238481
  store i32 %399, i32* %30
  br label %596

; <label>:400:                                    ; preds = %31
  %401 = load i32, i32* @x.330
  %402 = load i32, i32* @y.331
  %403 = sub i32 %401, -1368270864
  %404 = sub i32 %403, 1
  %405 = add i32 %404, -1368270864
  %406 = sub i32 %401, 1
  %407 = mul i32 %401, %405
  %408 = urem i32 %407, 2
  %409 = icmp eq i32 %408, 0
  %410 = icmp slt i32 %402, 10
  %411 = and i1 %409, %410
  %412 = xor i1 %409, %410
  %413 = or i1 %411, %412
  %414 = or i1 %409, %410
  %415 = select i1 %413, i32 1040987041, i32 -2032545775
  store i32 %415, i32* %30
  br label %596

; <label>:416:                                    ; preds = %31
  %417 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  %418 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %417, align 8
  %419 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %418) #3
  %420 = icmp eq %"struct.std::_Rb_tree_node"* %419, null
  store i1 %420, i1* %4
  %421 = load i32, i32* @x.330
  %422 = load i32, i32* @y.331
  %423 = sub i32 0, 1
  %424 = add i32 %421, %423
  %425 = sub i32 %421, 1
  %426 = mul i32 %421, %424
  %427 = urem i32 %426, 2
  %428 = icmp eq i32 %427, 0
  %429 = icmp slt i32 %422, 10
  %430 = xor i1 %428, true
  %431 = xor i1 %429, true
  %432 = xor i1 false, true
  %433 = and i1 %430, false
  %434 = and i1 %428, %432
  %435 = and i1 %431, false
  %436 = and i1 %429, %432
  %437 = or i1 %433, %434
  %438 = or i1 %435, %436
  %439 = xor i1 %437, %438
  %440 = or i1 %430, %431
  %441 = xor i1 %440, true
  %442 = or i1 false, %432
  %443 = and i1 %441, %442
  %444 = or i1 %439, %443
  %445 = or i1 %428, %429
  %446 = select i1 %444, i32 -1481314811, i32 -2032545775
  store i32 %446, i32* %30
  br label %596

; <label>:447:                                    ; preds = %31
  %448 = load volatile i1, i1* %4
  %449 = select i1 %448, i32 -1115876606, i32 1538231553
  store i32 %449, i32* %30
  br label %596

; <label>:450:                                    ; preds = %31
  %451 = load i32, i32* @x.330
  %452 = load i32, i32* @y.331
  %453 = sub i32 0, 1
  %454 = add i32 %451, %453
  %455 = sub i32 %451, 1
  %456 = mul i32 %451, %454
  %457 = urem i32 %456, 2
  %458 = icmp eq i32 %457, 0
  %459 = icmp slt i32 %452, 10
  %460 = and i1 %458, %459
  %461 = xor i1 %458, %459
  %462 = or i1 %460, %461
  %463 = or i1 %458, %459
  %464 = select i1 %462, i32 1918006329, i32 183478126
  store i32 %464, i32* %30
  br label %596

; <label>:465:                                    ; preds = %31
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %19, align 8
  %466 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.25"* %9, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %19, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %466)
  %467 = load i32, i32* @x.330
  %468 = load i32, i32* @y.331
  %469 = sub i32 0, 1
  %470 = add i32 %467, %469
  %471 = sub i32 %467, 1
  %472 = mul i32 %467, %470
  %473 = urem i32 %472, 2
  %474 = icmp eq i32 %473, 0
  %475 = icmp slt i32 %468, 10
  %476 = xor i1 %474, true
  %477 = xor i1 %475, true
  %478 = xor i1 true, true
  %479 = and i1 %476, true
  %480 = and i1 %474, %478
  %481 = and i1 %477, true
  %482 = and i1 %475, %478
  %483 = or i1 %479, %480
  %484 = or i1 %481, %482
  %485 = xor i1 %483, %484
  %486 = or i1 %476, %477
  %487 = xor i1 %486, true
  %488 = or i1 true, %478
  %489 = and i1 %487, %488
  %490 = or i1 %485, %489
  %491 = or i1 %474, %475
  %492 = select i1 %490, i32 650732991, i32 183478126
  store i32 %492, i32* %30
  br label %596

; <label>:493:                                    ; preds = %31
  store i32 -76573159, i32* %30
  br label %596

; <label>:494:                                    ; preds = %31
  %495 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %17, i32 0, i32 0
  %496 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %17, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair.25"* %9, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %495, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %496)
  store i32 -76573159, i32* %30
  br label %596

; <label>:497:                                    ; preds = %31
  %498 = load i32, i32* @x.330
  %499 = load i32, i32* @y.331
  %500 = sub i32 0, 1
  %501 = add i32 %498, %500
  %502 = sub i32 %498, 1
  %503 = mul i32 %498, %501
  %504 = urem i32 %503, 2
  %505 = icmp eq i32 %504, 0
  %506 = icmp slt i32 %499, 10
  %507 = xor i1 %505, true
  %508 = xor i1 %506, true
  %509 = xor i1 true, true
  %510 = and i1 %507, true
  %511 = and i1 %505, %509
  %512 = and i1 %508, true
  %513 = and i1 %506, %509
  %514 = or i1 %510, %511
  %515 = or i1 %512, %513
  %516 = xor i1 %514, %515
  %517 = or i1 %507, %508
  %518 = xor i1 %517, true
  %519 = or i1 true, %509
  %520 = and i1 %518, %519
  %521 = or i1 %516, %520
  %522 = or i1 %505, %506
  %523 = select i1 %521, i32 915062302, i32 -563239891
  store i32 %523, i32* %30
  br label %596

; <label>:524:                                    ; preds = %31
  %525 = load i64*, i64** %12, align 8
  %526 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %527 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree"* %526, i64* dereferenceable(8) %525)
  %528 = bitcast %"struct.std::pair.25"* %9 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %529 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %528, i32 0, i32 0
  %530 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %527, 0
  store %"struct.std::_Rb_tree_node_base"* %530, %"struct.std::_Rb_tree_node_base"** %529, align 8
  %531 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %528, i32 0, i32 1
  %532 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %527, 1
  store %"struct.std::_Rb_tree_node_base"* %532, %"struct.std::_Rb_tree_node_base"** %531, align 8
  %533 = load i32, i32* @x.330
  %534 = load i32, i32* @y.331
  %535 = sub i32 %533, -1928931682
  %536 = sub i32 %535, 1
  %537 = add i32 %536, -1928931682
  %538 = sub i32 %533, 1
  %539 = mul i32 %533, %537
  %540 = urem i32 %539, 2
  %541 = icmp eq i32 %540, 0
  %542 = icmp slt i32 %534, 10
  %543 = and i1 %541, %542
  %544 = xor i1 %541, %542
  %545 = or i1 %543, %544
  %546 = or i1 %541, %542
  %547 = select i1 %545, i32 -966245281, i32 -563239891
  store i32 %547, i32* %30
  br label %596

; <label>:548:                                    ; preds = %31
  store i32 -76573159, i32* %30
  br label %596

; <label>:549:                                    ; preds = %31
  %550 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %20, align 8
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.25"* %9, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %550, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %20)
  store i32 -76573159, i32* %30
  br label %596

; <label>:551:                                    ; preds = %31
  %552 = bitcast %"struct.std::pair.25"* %9 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %553 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %552, align 8
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %553

; <label>:554:                                    ; preds = %31
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %14, align 8
  %555 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %556 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE12_M_rightmostEv(%"class.std::_Rb_tree"* %555) #3
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.25"* %9, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %14, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %556)
  store i32 -1070818455, i32* %30
  br label %596

; <label>:557:                                    ; preds = %31
  %558 = bitcast %"struct.std::_Rb_tree_iterator"* %15 to i8*
  %559 = bitcast %"struct.std::_Rb_tree_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %558, i8* %559, i64 8, i32 8, i1 false)
  %560 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  %561 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %560, align 8
  %562 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %563 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE11_M_leftmostEv(%"class.std::_Rb_tree"* %562) #3
  %564 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %563, align 8
  %565 = icmp eq %"struct.std::_Rb_tree_node_base"* %561, %564
  store i32 1384869562, i32* %30
  br label %596

; <label>:566:                                    ; preds = %31
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %16, align 8
  %567 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %15, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.25"* %9, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %16, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %567)
  store i32 -2022680011, i32* %30
  br label %596

; <label>:568:                                    ; preds = %31
  %569 = load i64*, i64** %12, align 8
  %570 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %571 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree"* %570, i64* dereferenceable(8) %569)
  %572 = bitcast %"struct.std::pair.25"* %9 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %573 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %572, i32 0, i32 0
  %574 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %571, 0
  store %"struct.std::_Rb_tree_node_base"* %574, %"struct.std::_Rb_tree_node_base"** %573, align 8
  %575 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %572, i32 0, i32 1
  %576 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %571, 1
  store %"struct.std::_Rb_tree_node_base"* %576, %"struct.std::_Rb_tree_node_base"** %575, align 8
  store i32 -1172254622, i32* %30
  br label %596

; <label>:577:                                    ; preds = %31
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %18, align 8
  %578 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %579 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE12_M_rightmostEv(%"class.std::_Rb_tree"* %578) #3
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.25"* %9, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %18, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %579)
  store i32 1594063650, i32* %30
  br label %596

; <label>:580:                                    ; preds = %31
  %581 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  %582 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %581, align 8
  %583 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %582) #3
  %584 = icmp eq %"struct.std::_Rb_tree_node"* %583, null
  store i32 1040987041, i32* %30
  br label %596

; <label>:585:                                    ; preds = %31
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %19, align 8
  %586 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.25"* %9, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %19, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %586)
  store i32 1918006329, i32* %30
  br label %596

; <label>:587:                                    ; preds = %31
  %588 = load i64*, i64** %12, align 8
  %589 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8
  %590 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree"* %589, i64* dereferenceable(8) %588)
  %591 = bitcast %"struct.std::pair.25"* %9 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %592 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %591, i32 0, i32 0
  %593 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %590, 0
  store %"struct.std::_Rb_tree_node_base"* %593, %"struct.std::_Rb_tree_node_base"** %592, align 8
  %594 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %591, i32 0, i32 1
  %595 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %590, 1
  store %"struct.std::_Rb_tree_node_base"* %595, %"struct.std::_Rb_tree_node_base"** %594, align 8
  store i32 915062302, i32* %30
  br label %596

; <label>:596:                                    ; preds = %587, %585, %580, %577, %568, %566, %557, %554, %549, %548, %524, %497, %494, %493, %465, %450, %447, %416, %400, %389, %388, %359, %331, %321, %311, %310, %286, %258, %255, %254, %237, %209, %203, %192, %187, %184, %160, %132, %122, %113, %112, %83, %55, %44, %39, %34, %33
  br label %31
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSF_PSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca %"struct.std::_Rb_tree_node_base"*
  %7 = alloca %"class.std::_Rb_tree"*
  %8 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %9 = alloca %"class.std::_Rb_tree"*, align 8
  %10 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %11 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %12 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %13 = alloca i8, align 1
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %9, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %10, align 8
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %11, align 8
  store %"struct.std::_Rb_tree_node"* %3, %"struct.std::_Rb_tree_node"** %12, align 8
  %14 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9, align 8
  store %"class.std::_Rb_tree"* %14, %"class.std::_Rb_tree"** %7
  %15 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
  store %"struct.std::_Rb_tree_node_base"* %15, %"struct.std::_Rb_tree_node_base"** %6
  %16 = alloca i32
  store i32 412127191, i32* %16
  %17 = alloca i1
  br label %18

; <label>:18:                                     ; preds = %4, %115
  %19 = load i32, i32* %16
  switch i32 %19, label %20 [
    i32 412127191, label %21
    i32 931454133, label %25
    i32 1457162743, label %53
    i32 -818453581, label %74
    i32 -195044855, label %77
    i32 390961416, label %86
    i32 916319486, label %109
  ]

; <label>:20:                                     ; preds = %18
  br label %115

; <label>:21:                                     ; preds = %18
  %22 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6
  %23 = icmp ne %"struct.std::_Rb_tree_node_base"* %22, null
  %24 = select i1 %23, i32 390961416, i32 931454133
  store i32 %24, i32* %16
  store i1 true, i1* %17
  br label %115

; <label>:25:                                     ; preds = %18
  %26 = load i32, i32* @x.332
  %27 = load i32, i32* @y.333
  %28 = sub i32 %26, 1329855081
  %29 = sub i32 %28, 1
  %30 = add i32 %29, 1329855081
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 true, true
  %39 = and i1 %36, true
  %40 = and i1 %34, %38
  %41 = and i1 %37, true
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 true, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  %52 = select i1 %50, i32 1457162743, i32 916319486
  store i32 %52, i32* %16
  br label %115

; <label>:53:                                     ; preds = %18
  %54 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %55 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %56 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE6_M_endEv(%"class.std::_Rb_tree"* %55) #3
  %57 = bitcast %"struct.std::_Rb_tree_node"* %56 to %"struct.std::_Rb_tree_node_base"*
  %58 = icmp eq %"struct.std::_Rb_tree_node_base"* %54, %57
  store i1 %58, i1* %5
  %59 = load i32, i32* @x.332
  %60 = load i32, i32* @y.333
  %61 = add i32 %59, -222399632
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, -222399632
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  %73 = select i1 %71, i32 -818453581, i32 916319486
  store i32 %73, i32* %16
  br label %115

; <label>:74:                                     ; preds = %18
  %75 = load volatile i1, i1* %5
  %76 = select i1 %75, i32 390961416, i32 -195044855
  store i32 %76, i32* %16
  store i1 true, i1* %17
  br label %115

; <label>:77:                                     ; preds = %18
  %78 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %79 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %78, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %79, i32 0, i32 0
  %81 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
  %82 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E(%"struct.std::_Rb_tree_node"* %81)
  %83 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %84 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %83)
  %85 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %80, i64* dereferenceable(8) %82, i64* dereferenceable(8) %84)
  store i32 390961416, i32* %16
  store i1 %85, i1* %17
  br label %115

; <label>:86:                                     ; preds = %18
  %87 = load i1, i1* %17
  %88 = zext i1 %87 to i8
  store i8 %88, i8* %13, align 1
  %89 = load i8, i8* %13, align 1
  %90 = trunc i8 %89 to i1
  %91 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
  %92 = bitcast %"struct.std::_Rb_tree_node"* %91 to %"struct.std::_Rb_tree_node_base"*
  %93 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %94 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %95 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %94, i32 0, i32 0
  %96 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %95, i32 0, i32 1
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %90, %"struct.std::_Rb_tree_node_base"* %92, %"struct.std::_Rb_tree_node_base"* %93, %"struct.std::_Rb_tree_node_base"* dereferenceable(32) %96) #3
  %97 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %98 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %97, i32 0, i32 0
  %99 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %98, i32 0, i32 2
  %100 = load i64, i64* %99, align 8
  %101 = add i64 %100, 6246398143149806231
  %102 = add i64 %101, 1
  %103 = sub i64 %102, 6246398143149806231
  %104 = add i64 %100, 1
  store i64 %103, i64* %99, align 8
  %105 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %12, align 8
  %106 = bitcast %"struct.std::_Rb_tree_node"* %105 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %8, %"struct.std::_Rb_tree_node_base"* %106) #3
  %107 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %8, i32 0, i32 0
  %108 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %107, align 8
  ret %"struct.std::_Rb_tree_node_base"* %108

; <label>:109:                                    ; preds = %18
  %110 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %111 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %112 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE6_M_endEv(%"class.std::_Rb_tree"* %111) #3
  %113 = bitcast %"struct.std::_Rb_tree_node"* %112 to %"struct.std::_Rb_tree_node_base"*
  %114 = icmp eq %"struct.std::_Rb_tree_node_base"* %110, %113
  store i32 1457162743, i32* %16
  br label %115

; <label>:115:                                    ; preds = %109, %77, %74, %53, %25, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE11_M_get_nodeEv(%"class.std::_Rb_tree"*) #0 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %3) #3
  %5 = call %"struct.std::_Rb_tree_node"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3setIS1_IxxESt4lessIS4_ESaIS4_EEEEEE8allocateERSB_m(%"class.std::allocator.5"* dereferenceable(1) %4, i64 1)
  ret %"struct.std::_Rb_tree_node"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE17_M_construct_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS1_EESI_IJEEEEEvPSt13_Rb_tree_nodeIS8_EDpOT_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.24"* dereferenceable(1)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %"class.std::_Rb_tree"*, align 8
  %7 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple"*, align 8
  %10 = alloca %"class.std::tuple.24"*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %6, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple"* %3, %"class.std::tuple"** %9, align 8
  store %"class.std::tuple.24"* %4, %"class.std::tuple.24"** %10, align 8
  %13 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6, align 8
  %14 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  %15 = bitcast %"struct.std::_Rb_tree_node"* %14 to i8*
  %16 = bitcast i8* %15 to %"struct.std::_Rb_tree_node"*
  %17 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %13) #3
  %18 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  %19 = invoke %"struct.std::pair.20"* @_ZNSt13_Rb_tree_nodeISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %18)
          to label %20 unwind label %28

; <label>:20:                                     ; preds = %5
  %21 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %22 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %21) #3
  %23 = load %"class.std::tuple"*, %"class.std::tuple"** %9, align 8
  %24 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple"* dereferenceable(8) %23) #3
  %25 = load %"class.std::tuple.24"*, %"class.std::tuple.24"** %10, align 8
  %26 = call dereferenceable(1) %"class.std::tuple.24"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.24"* dereferenceable(1) %25) #3
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3setIS1_IxxESt4lessIS4_ESaIS4_EEEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESH_IJEEEEEvRSB_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1) %17, %"struct.std::pair.20"* %19, %"struct.std::piecewise_construct_t"* dereferenceable(1) %22, %"class.std::tuple"* dereferenceable(8) %24, %"class.std::tuple.24"* dereferenceable(1) %26)
          to label %27 unwind label %28

; <label>:27:                                     ; preds = %20
  br label %42

; <label>:28:                                     ; preds = %20, %5
  %29 = landingpad { i8*, i32 }
          catch i8* null
  %30 = extractvalue { i8*, i32 } %29, 0
  store i8* %30, i8** %11, align 8
  %31 = extractvalue { i8*, i32 } %29, 1
  store i32 %31, i32* %12, align 4
  br label %32

; <label>:32:                                     ; preds = %28
  %33 = load i8*, i8** %11, align 8
  %34 = call i8* @__cxa_begin_catch(i8* %33) #3
  %35 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  %36 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS8_E(%"class.std::_Rb_tree"* %13, %"struct.std::_Rb_tree_node"* %36) #3
  invoke void @__cxa_rethrow() #16
          to label %122 unwind label %37

; <label>:37:                                     ; preds = %32
  %38 = landingpad { i8*, i32 }
          cleanup
  %39 = extractvalue { i8*, i32 } %38, 0
  store i8* %39, i8** %11, align 8
  %40 = extractvalue { i8*, i32 } %38, 1
  store i32 %40, i32* %12, align 4
  invoke void @__cxa_end_catch()
          to label %41 unwind label %119

; <label>:41:                                     ; preds = %37
  br label %73

; <label>:42:                                     ; preds = %27
  %43 = load i32, i32* @x.336
  %44 = load i32, i32* @y.337
  %45 = sub i32 %43, -1871984443
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -1871984443
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  br i1 %55, label %57, label %123

; <label>:57:                                     ; preds = %42, %123
  %58 = load i32, i32* @x.336
  %59 = load i32, i32* @y.337
  %60 = add i32 %58, 1572036489
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, 1572036489
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  br i1 %70, label %72, label %123

; <label>:72:                                     ; preds = %57
  ret void

; <label>:73:                                     ; preds = %41
  %74 = load i32, i32* @x.336
  %75 = load i32, i32* @y.337
  %76 = add i32 %74, 1796777972
  %77 = sub i32 %76, 1
  %78 = sub i32 %77, 1796777972
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = and i1 %82, %83
  %85 = xor i1 %82, %83
  %86 = or i1 %84, %85
  %87 = or i1 %82, %83
  br i1 %86, label %88, label %124

; <label>:88:                                     ; preds = %73, %124
  %89 = load i8*, i8** %11, align 8
  %90 = load i32, i32* %12, align 4
  %91 = insertvalue { i8*, i32 } undef, i8* %89, 0
  %92 = insertvalue { i8*, i32 } %91, i32 %90, 1
  %93 = load i32, i32* @x.336
  %94 = load i32, i32* @y.337
  %95 = sub i32 0, 1
  %96 = add i32 %93, %95
  %97 = sub i32 %93, 1
  %98 = mul i32 %93, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %94, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 false, true
  %105 = and i1 %102, false
  %106 = and i1 %100, %104
  %107 = and i1 %103, false
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 false, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  br i1 %116, label %118, label %124

; <label>:118:                                    ; preds = %88
  resume { i8*, i32 } %92

; <label>:119:                                    ; preds = %37
  %120 = landingpad { i8*, i32 }
          catch i8* null
  %121 = extractvalue { i8*, i32 } %120, 0
  call void @__clang_call_terminate(i8* %121) #12
  unreachable

; <label>:122:                                    ; preds = %32
  unreachable

; <label>:123:                                    ; preds = %57, %42
  br label %57

; <label>:124:                                    ; preds = %88, %73
  %125 = load i8*, i8** %11, align 8
  %126 = load i32, i32* %12, align 4
  %127 = insertvalue { i8*, i32 } undef, i8* %125, 0
  %128 = insertvalue { i8*, i32 } %127, i32 %126, 1
  br label %88
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3setIS1_IxxESt4lessIS4_ESaIS4_EEEEEE8allocateERSB_m(%"class.std::allocator.5"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.5"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %3, align 8
  %6 = bitcast %"class.std::allocator.5"* %5 to %"class.__gnu_cxx::new_allocator.6"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.std::_Rb_tree_node"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIS2_IxxESt4lessIS5_ESaIS5_EEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"* %6, i64 %7, i8* null)
  ret %"struct.std::_Rb_tree_node"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIS2_IxxESt4lessIS5_ESaIS5_EEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIS2_IxxESt4lessIS5_ESaIS5_EEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 79992067, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %84
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 79992067, label %16
    i32 547282738, label %21
    i32 -388999814, label %49
    i32 -46214424, label %77
    i32 577770014, label %78
    i32 -309967540, label %83
  ]

; <label>:15:                                     ; preds = %13
  br label %84

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 547282738, i32 577770014
  store i32 %20, i32* %12
  br label %84

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.340
  %23 = load i32, i32* @y.341
  %24 = sub i32 %22, 833451499
  %25 = sub i32 %24, 1
  %26 = add i32 %25, 833451499
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 true, true
  %35 = and i1 %32, true
  %36 = and i1 %30, %34
  %37 = and i1 %33, true
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 true, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 -388999814, i32 -309967540
  store i32 %48, i32* %12
  br label %84

; <label>:49:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #16
  %50 = load i32, i32* @x.340
  %51 = load i32, i32* @y.341
  %52 = add i32 %50, 1475023869
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 1475023869
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -46214424, i32 -309967540
  store i32 %76, i32* %12
  br label %84

; <label>:77:                                     ; preds = %13
  unreachable

; <label>:78:                                     ; preds = %13
  %79 = load i64, i64* %7, align 8
  %80 = mul i64 %79, 88
  %81 = call i8* @_Znwm(i64 %80)
  %82 = bitcast i8* %81 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %82

; <label>:83:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #16
  store i32 -388999814, i32* %12
  br label %84

; <label>:84:                                     ; preds = %83, %49, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIS2_IxxESt4lessIS5_ESaIS5_EEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  ret i64 209622091746699450
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt3setIS1_IxxESt4lessIS4_ESaIS4_EEEEEE9constructIS9_JRKSt21piecewise_construct_tSt5tupleIJRS2_EESH_IJEEEEEvRSB_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1), %"struct.std::pair.20"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.24"* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca %"class.std::allocator.5"*, align 8
  %7 = alloca %"struct.std::pair.20"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple"*, align 8
  %10 = alloca %"class.std::tuple.24"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %6, align 8
  store %"struct.std::pair.20"* %1, %"struct.std::pair.20"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple"* %3, %"class.std::tuple"** %9, align 8
  store %"class.std::tuple.24"* %4, %"class.std::tuple.24"** %10, align 8
  %11 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %6, align 8
  %12 = bitcast %"class.std::allocator.5"* %11 to %"class.__gnu_cxx::new_allocator.6"*
  %13 = load %"struct.std::pair.20"*, %"struct.std::pair.20"** %7, align 8
  %14 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %15 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %14) #3
  %16 = load %"class.std::tuple"*, %"class.std::tuple"** %9, align 8
  %17 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple"* dereferenceable(8) %16) #3
  %18 = load %"class.std::tuple.24"*, %"class.std::tuple.24"** %10, align 8
  %19 = call dereferenceable(1) %"class.std::tuple.24"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.24"* dereferenceable(1) %18) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIS2_IxxESt4lessIS5_ESaIS5_EEEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESH_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.6"* %12, %"struct.std::pair.20"* %13, %"struct.std::piecewise_construct_t"* dereferenceable(1) %15, %"class.std::tuple"* dereferenceable(8) %17, %"class.std::tuple.24"* dereferenceable(1) %19)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt3setIS2_IxxESt4lessIS5_ESaIS5_EEEEE9constructISA_JRKSt21piecewise_construct_tSt5tupleIJRS3_EESH_IJEEEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.6"*, %"struct.std::pair.20"*, %"struct.std::piecewise_construct_t"* dereferenceable(1), %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.24"* dereferenceable(1)) #0 comdat align 2 {
  %6 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %7 = alloca %"struct.std::pair.20"*, align 8
  %8 = alloca %"struct.std::piecewise_construct_t"*, align 8
  %9 = alloca %"class.std::tuple"*, align 8
  %10 = alloca %"class.std::tuple.24"*, align 8
  %11 = alloca %"struct.std::piecewise_construct_t", align 1
  %12 = alloca %"class.std::tuple", align 8
  %13 = alloca %"class.std::tuple.24", align 1
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %6, align 8
  store %"struct.std::pair.20"* %1, %"struct.std::pair.20"** %7, align 8
  store %"struct.std::piecewise_construct_t"* %2, %"struct.std::piecewise_construct_t"** %8, align 8
  store %"class.std::tuple"* %3, %"class.std::tuple"** %9, align 8
  store %"class.std::tuple.24"* %4, %"class.std::tuple.24"** %10, align 8
  %14 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %6, align 8
  %15 = load %"struct.std::pair.20"*, %"struct.std::pair.20"** %7, align 8
  %16 = bitcast %"struct.std::pair.20"* %15 to i8*
  %17 = bitcast i8* %16 to %"struct.std::pair.20"*
  %18 = load %"struct.std::piecewise_construct_t"*, %"struct.std::piecewise_construct_t"** %8, align 8
  %19 = call dereferenceable(1) %"struct.std::piecewise_construct_t"* @_ZSt7forwardIRKSt21piecewise_construct_tEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::piecewise_construct_t"* dereferenceable(1) %18) #3
  %20 = load %"class.std::tuple"*, %"class.std::tuple"** %9, align 8
  %21 = call dereferenceable(8) %"class.std::tuple"* @_ZSt7forwardISt5tupleIJRKxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::tuple"* dereferenceable(8) %20) #3
  call void @_ZNSt5tupleIJRKxEEC2EOS2_(%"class.std::tuple"* %12, %"class.std::tuple"* dereferenceable(8) %21) #3
  %22 = load %"class.std::tuple.24"*, %"class.std::tuple.24"** %10, align 8
  %23 = call dereferenceable(1) %"class.std::tuple.24"* @_ZSt7forwardISt5tupleIJEEEOT_RNSt16remove_referenceIS2_E4typeE(%"class.std::tuple.24"* dereferenceable(1) %22) #3
  %24 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %12, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %25, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  call void @_ZNSt4pairIKxSt3setIS_IxxESt4lessIS2_ESaIS2_EEEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE(%"struct.std::pair.20"* %17, i64* %27)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5tupleIJRKxEEC2EOS2_(%"class.std::tuple"*, %"class.std::tuple"* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::tuple"*, align 8
  %4 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %3, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %4, align 8
  %5 = load %"class.std::tuple"*, %"class.std::tuple"** %3, align 8
  %6 = bitcast %"class.std::tuple"* %5 to %"struct.std::_Tuple_impl"*
  %7 = load %"class.std::tuple"*, %"class.std::tuple"** %4, align 8
  %8 = bitcast %"class.std::tuple"* %7 to %"struct.std::_Tuple_impl"*
  call void @_ZNSt11_Tuple_implILm0EJRKxEEC2EOS2_(%"struct.std::_Tuple_impl"* %6, %"struct.std::_Tuple_impl"* dereferenceable(8) %8) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt4pairIKxSt3setIS_IxxESt4lessIS2_ESaIS2_EEEC2IJRS0_EJEEESt21piecewise_construct_tSt5tupleIJDpT_EESB_IJDpT0_EE(%"struct.std::pair.20"*, i64*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::piecewise_construct_t", align 1
  %4 = alloca %"class.std::tuple", align 8
  %5 = alloca %"class.std::tuple.24", align 1
  %6 = alloca %"struct.std::pair.20"*, align 8
  %7 = alloca %"struct.std::_Index_tuple", align 1
  %8 = alloca %"struct.std::_Index_tuple.26", align 1
  %9 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %4, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Tuple_impl", %"struct.std::_Tuple_impl"* %9, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %10, i32 0, i32 0
  store i64* %1, i64** %11, align 8
  store %"struct.std::pair.20"* %0, %"struct.std::pair.20"** %6, align 8
  %12 = load %"struct.std::pair.20"*, %"struct.std::pair.20"** %6, align 8
  call void @_ZNSt4pairIKxSt3setIS_IxxESt4lessIS2_ESaIS2_EEEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE(%"struct.std::pair.20"* %12, %"class.std::tuple"* dereferenceable(8) %4, %"class.std::tuple.24"* dereferenceable(1) %5)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJRKxEEC2EOS2_(%"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"* dereferenceable(8)) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_Tuple_impl"*, align 8
  %4 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %3, align 8
  store %"struct.std::_Tuple_impl"* %1, %"struct.std::_Tuple_impl"** %4, align 8
  %5 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Tuple_impl"* %5 to %"struct.std::_Head_base"*
  %7 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %4, align 8
  %8 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJRKxEE7_M_headERS2_(%"struct.std::_Tuple_impl"* dereferenceable(8) %7) #3
  %9 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %8) #3
  invoke void @_ZNSt10_Head_baseILm0ERKxLb0EEC2ES1_(%"struct.std::_Head_base"* %6, i64* dereferenceable(8) %9)
          to label %10 unwind label %11

; <label>:10:                                     ; preds = %2
  ret void

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* @x.352
  %13 = load i32, i32* @y.353
  %14 = sub i32 %12, -2013722374
  %15 = sub i32 %14, 1
  %16 = add i32 %15, -2013722374
  %17 = sub i32 %12, 1
  %18 = mul i32 %12, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %13, 10
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  br i1 %36, label %38, label %67

; <label>:38:                                     ; preds = %11, %67
  %39 = landingpad { i8*, i32 }
          catch i8* null
  %40 = extractvalue { i8*, i32 } %39, 0
  call void @__clang_call_terminate(i8* %40) #12
  %41 = load i32, i32* @x.352
  %42 = load i32, i32* @y.353
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  br i1 %64, label %66, label %67

; <label>:66:                                     ; preds = %38
  unreachable

; <label>:67:                                     ; preds = %38, %11
  %68 = landingpad { i8*, i32 }
          catch i8* null
  %69 = extractvalue { i8*, i32 } %68, 0
  call void @__clang_call_terminate(i8* %69) #12
  br label %38
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.354
  %6 = load i32, i32* @y.355
  %7 = sub i32 %5, 437628680
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 437628680
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1375381562, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1375381562, label %19
    i32 -353026975, label %39
    i32 136053596, label %57
    i32 1028738489, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -353026975, i32 1028738489
  store i32 %38, i32* %15
  br label %62

; <label>:39:                                     ; preds = %16
  %40 = alloca i64*, align 8
  store i64* %0, i64** %40, align 8
  %41 = load i64*, i64** %40, align 8
  store i64* %41, i64** %2
  %42 = load i32, i32* @x.354
  %43 = load i32, i32* @y.355
  %44 = add i32 %42, 58246468
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 58246468
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 136053596, i32 1028738489
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile i64*, i64** %2
  ret i64* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca i64*, align 8
  store i64* %0, i64** %60, align 8
  %61 = load i64*, i64** %60, align 8
  store i32 -353026975, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJRKxEE7_M_headERS2_(%"struct.std::_Tuple_impl"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl"* %3 to %"struct.std::_Head_base"*
  %5 = call dereferenceable(8) i64* @_ZNSt10_Head_baseILm0ERKxLb0EE7_M_headERS2_(%"struct.std::_Head_base"* dereferenceable(8) %4) #3
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm0ERKxLb0EEC2ES1_(%"struct.std::_Head_base"*, i64* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Head_base"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Head_base"* %0, %"struct.std::_Head_base"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Head_base"*, %"struct.std::_Head_base"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %5, i32 0, i32 0
  %7 = load i64*, i64** %4, align 8
  store i64* %7, i64** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt10_Head_baseILm0ERKxLb0EE7_M_headERS2_(%"struct.std::_Head_base"* dereferenceable(8)) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Head_base"*, align 8
  store %"struct.std::_Head_base"* %0, %"struct.std::_Head_base"** %2, align 8
  %3 = load %"struct.std::_Head_base"*, %"struct.std::_Head_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIKxSt3setIS_IxxESt4lessIS2_ESaIS2_EEEC2IJRS0_EJLm0EEJEJEEERSt5tupleIJDpT_EERSA_IJDpT1_EESt12_Index_tupleIJXspT0_EEESJ_IJXspT2_EEE(%"struct.std::pair.20"*, %"class.std::tuple"* dereferenceable(8), %"class.std::tuple.24"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.362
  %7 = load i32, i32* @y.363
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1597131423, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %81
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1597131423, label %19
    i32 -696634481, label %39
    i32 1212220232, label %67
    i32 -1516261647, label %68
  ]

; <label>:18:                                     ; preds = %16
  br label %81

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -696634481, i32 -1516261647
  store i32 %38, i32* %15
  br label %81

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Index_tuple", align 1
  %41 = alloca %"struct.std::_Index_tuple.26", align 1
  %42 = alloca %"struct.std::pair.20"*, align 8
  %43 = alloca %"class.std::tuple"*, align 8
  %44 = alloca %"class.std::tuple.24"*, align 8
  store %"struct.std::pair.20"* %0, %"struct.std::pair.20"** %42, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %43, align 8
  store %"class.std::tuple.24"* %2, %"class.std::tuple.24"** %44, align 8
  %45 = load %"struct.std::pair.20"*, %"struct.std::pair.20"** %42, align 8
  %46 = getelementptr inbounds %"struct.std::pair.20", %"struct.std::pair.20"* %45, i32 0, i32 0
  %47 = load %"class.std::tuple"*, %"class.std::tuple"** %43, align 8
  %48 = call dereferenceable(8) i64* @_ZSt3getILm0EJRKxEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_(%"class.std::tuple"* dereferenceable(8) %47) #3
  %49 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %48) #3
  %50 = load i64, i64* %49, align 8
  store i64 %50, i64* %46, align 8
  %51 = getelementptr inbounds %"struct.std::pair.20", %"struct.std::pair.20"* %45, i32 0, i32 1
  call void @_ZNSt3setISt4pairIxxESt4lessIS1_ESaIS1_EEC2Ev(%"class.std::set"* %51) #3
  %52 = load i32, i32* @x.362
  %53 = load i32, i32* @y.363
  %54 = sub i32 %52, -1285290238
  %55 = sub i32 %54, 1
  %56 = add i32 %55, -1285290238
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 1212220232, i32 -1516261647
  store i32 %66, i32* %15
  br label %81

; <label>:67:                                     ; preds = %16
  ret void

; <label>:68:                                     ; preds = %16
  %69 = alloca %"struct.std::_Index_tuple", align 1
  %70 = alloca %"struct.std::_Index_tuple.26", align 1
  %71 = alloca %"struct.std::pair.20"*, align 8
  %72 = alloca %"class.std::tuple"*, align 8
  %73 = alloca %"class.std::tuple.24"*, align 8
  store %"struct.std::pair.20"* %0, %"struct.std::pair.20"** %71, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %72, align 8
  store %"class.std::tuple.24"* %2, %"class.std::tuple.24"** %73, align 8
  %74 = load %"struct.std::pair.20"*, %"struct.std::pair.20"** %71, align 8
  %75 = getelementptr inbounds %"struct.std::pair.20", %"struct.std::pair.20"* %74, i32 0, i32 0
  %76 = load %"class.std::tuple"*, %"class.std::tuple"** %72, align 8
  %77 = call dereferenceable(8) i64* @_ZSt3getILm0EJRKxEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_(%"class.std::tuple"* dereferenceable(8) %76) #3
  %78 = call dereferenceable(8) i64* @_ZSt7forwardIRKxEOT_RNSt16remove_referenceIS2_E4typeE(i64* dereferenceable(8) %77) #3
  %79 = load i64, i64* %78, align 8
  store i64 %79, i64* %75, align 8
  %80 = getelementptr inbounds %"struct.std::pair.20", %"struct.std::pair.20"* %74, i32 0, i32 1
  call void @_ZNSt3setISt4pairIxxESt4lessIS1_ESaIS1_EEC2Ev(%"class.std::set"* %80) #3
  store i32 -696634481, i32* %15
  br label %81

; <label>:81:                                     ; preds = %68, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3getILm0EJRKxEERNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERS6_(%"class.std::tuple"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %2, align 8
  %3 = load %"class.std::tuple"*, %"class.std::tuple"** %2, align 8
  %4 = bitcast %"class.std::tuple"* %3 to %"struct.std::_Tuple_impl"*
  %5 = call dereferenceable(8) i64* @_ZSt12__get_helperILm0ERKxJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE(%"struct.std::_Tuple_impl"* dereferenceable(8) %4) #3
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt3setISt4pairIxxESt4lessIS1_ESaIS1_EEC2Ev(%"class.std::set"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %2, align 8
  %3 = load %"class.std::set"*, %"class.std::set"** %2, align 8
  %4 = getelementptr inbounds %"class.std::set", %"class.std::set"* %3, i32 0, i32 0
  invoke void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EEC2Ev(%"class.std::_Rb_tree.8"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #12
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt12__get_helperILm0ERKxJEERT0_RSt11_Tuple_implIXT_EJS2_DpT1_EE(%"struct.std::_Tuple_impl"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %2, align 8
  %4 = call dereferenceable(8) i64* @_ZNSt11_Tuple_implILm0EJRKxEE7_M_headERS2_(%"struct.std::_Tuple_impl"* dereferenceable(8) %3) #3
  ret i64* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EEC2Ev(%"class.std::_Rb_tree.8"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.8"*, align 8
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %2, align 8
  %3 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.8", %"class.std::_Rb_tree.8"* %3, i32 0, i32 0
  call void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EEC2Ev(%"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EEC2Ev(%"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"** %2, align 8
  %5 = load %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"** %2, align 8
  %6 = bitcast %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %5 to %"class.std::allocator.9"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIxxEEEC2Ev(%"class.std::allocator.9"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %5, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %5, i32 0, i32 1
  %9 = bitcast %"struct.std::_Rb_tree_node_base"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* %9, i8 0, i64 32, i32 8, i1 false)
  %10 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %5, i32 0, i32 2
  store i64 0, i64* %10, align 8
  invoke void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %5)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %1
  ret void

; <label>:12:                                     ; preds = %1
  %13 = load i32, i32* @x.372
  %14 = load i32, i32* @y.373
  %15 = add i32 %13, -1789130860
  %16 = sub i32 %15, 1
  %17 = sub i32 %16, -1789130860
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %14, 10
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  br i1 %37, label %39, label %64

; <label>:39:                                     ; preds = %12, %64
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = extractvalue { i8*, i32 } %40, 0
  store i8* %41, i8** %3, align 8
  %42 = extractvalue { i8*, i32 } %40, 1
  store i32 %42, i32* %4, align 4
  %43 = bitcast %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %5 to %"class.std::allocator.9"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIxxEEED2Ev(%"class.std::allocator.9"* %43) #3
  %44 = load i32, i32* @x.372
  %45 = load i32, i32* @y.373
  %46 = add i32 %44, -647794701
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -647794701
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  br i1 %56, label %58, label %64

; <label>:58:                                     ; preds = %39
  br label %59

; <label>:59:                                     ; preds = %58
  %60 = load i8*, i8** %3, align 8
  %61 = load i32, i32* %4, align 4
  %62 = insertvalue { i8*, i32 } undef, i8* %60, 0
  %63 = insertvalue { i8*, i32 } %62, i32 %61, 1
  resume { i8*, i32 } %63

; <label>:64:                                     ; preds = %39, %12
  %65 = landingpad { i8*, i32 }
          cleanup
  %66 = extractvalue { i8*, i32 } %65, 0
  store i8* %66, i8** %3, align 8
  %67 = extractvalue { i8*, i32 } %65, 1
  store i32 %67, i32* %4, align 4
  %68 = bitcast %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %5 to %"class.std::allocator.9"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIxxEEED2Ev(%"class.std::allocator.9"* %68) #3
  br label %39
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeISt4pairIxxEEEC2Ev(%"class.std::allocator.9"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.374
  %5 = load i32, i32* @y.375
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1854918353, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %61
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1854918353, label %17
    i32 1331918220, label %25
    i32 1686611482, label %56
    i32 -1133923982, label %57
  ]

; <label>:16:                                     ; preds = %14
  br label %61

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 1331918220, i32 -1133923982
  store i32 %24, i32* %13
  br label %61

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %26, align 8
  %27 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %26, align 8
  %28 = bitcast %"class.std::allocator.9"* %27 to %"class.__gnu_cxx::new_allocator.10"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIxxEEEC2Ev(%"class.__gnu_cxx::new_allocator.10"* %28) #3
  %29 = load i32, i32* @x.374
  %30 = load i32, i32* @y.375
  %31 = add i32 %29, 2109815667
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, 2109815667
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 1686611482, i32 -1133923982
  store i32 %55, i32* %13
  br label %61

; <label>:56:                                     ; preds = %14
  ret void

; <label>:57:                                     ; preds = %14
  %58 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %58, align 8
  %59 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %58, align 8
  %60 = bitcast %"class.std::allocator.9"* %59 to %"class.__gnu_cxx::new_allocator.10"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIxxEEEC2Ev(%"class.__gnu_cxx::new_allocator.10"* %60) #3
  store i32 1331918220, i32* %13
  br label %61

; <label>:61:                                     ; preds = %57, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"** %2, align 8
  %3 = load %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %4, i32 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %6, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %9 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %9, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %8, %"struct.std::_Rb_tree_node_base"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %12 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %12, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %13, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIxxEEEC2Ev(%"class.__gnu_cxx::new_allocator.10"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.378
  %5 = load i32, i32* @y.379
  %6 = add i32 %4, 1113753167
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1113753167
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -833158293, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -833158293, label %18
    i32 969236470, label %26
    i32 -132141180, label %56
    i32 262955945, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 969236470, i32 262955945
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %27, align 8
  %29 = load i32, i32* @x.378
  %30 = load i32, i32* @y.379
  %31 = sub i32 %29, -102997656
  %32 = sub i32 %31, 1
  %33 = add i32 %32, -102997656
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -132141180, i32 262955945
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %58, align 8
  store i32 969236470, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt23_Rb_tree_const_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEE13_M_const_castEv(%"struct.std::_Rb_tree_const_iterator.23"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %3 = alloca %"struct.std::_Rb_tree_const_iterator.23"*, align 8
  store %"struct.std::_Rb_tree_const_iterator.23"* %0, %"struct.std::_Rb_tree_const_iterator.23"** %3, align 8
  %4 = load %"struct.std::_Rb_tree_const_iterator.23"*, %"struct.std::_Rb_tree_const_iterator.23"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.23", %"struct.std::_Rb_tree_const_iterator.23"* %4, i32 0, i32 0
  %6 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %5, align 8
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %2, %"struct.std::_Rb_tree_node_base"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %2, i32 0, i32 0
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_node_base"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE4sizeEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.382
  %6 = load i32, i32* @y.383
  %7 = sub i32 %5, -1709579421
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1709579421
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1354798285, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1354798285, label %19
    i32 -300426664, label %39
    i32 -915367685, label %60
    i32 -1775562749, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -300426664, i32 -1775562749
  store i32 %38, i32* %15
  br label %68

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %40, align 8
  %41 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %40, align 8
  %42 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %42, i32 0, i32 2
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %2
  %45 = load i32, i32* @x.382
  %46 = load i32, i32* @y.383
  %47 = sub i32 %45, 1842563859
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 1842563859
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -915367685, i32 -1775562749
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile i64, i64* %2
  ret i64 %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %63, align 8
  %64 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %63, align 8
  %65 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %64, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %65, i32 0, i32 2
  %67 = load i64, i64* %66, align 8
  store i32 -300426664, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #0 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.384
  %6 = load i32, i32* @y.385
  %7 = sub i32 %5, 1501461429
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1501461429
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -462906612, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -462906612, label %19
    i32 -2065792248, label %27
    i32 -1329254709, label %59
    i32 465790144, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -2065792248, i32 465790144
  store i32 %26, i32* %15
  br label %67

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %29 = alloca %"struct.std::_Select1st", align 1
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %28, align 8
  %30 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %28, align 8
  %31 = call dereferenceable(56) %"struct.std::pair.20"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %30)
  %32 = call dereferenceable(8) i64* @_ZNKSt10_Select1stISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEclERKS8_(%"struct.std::_Select1st"* %29, %"struct.std::pair.20"* dereferenceable(56) %31)
  store i64* %32, i64** %2
  %33 = load i32, i32* @x.384
  %34 = load i32, i32* @y.385
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -1329254709, i32 465790144
  store i32 %58, i32* %15
  br label %67

; <label>:59:                                     ; preds = %16
  %60 = load volatile i64*, i64** %2
  ret i64* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %63 = alloca %"struct.std::_Select1st", align 1
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %62, align 8
  %64 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %62, align 8
  %65 = call dereferenceable(56) %"struct.std::pair.20"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %64)
  %66 = call dereferenceable(8) i64* @_ZNKSt10_Select1stISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEclERKS8_(%"struct.std::_Select1st"* %63, %"struct.std::pair.20"* dereferenceable(56) %65)
  store i32 -2065792248, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE12_M_rightmostEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.386
  %6 = load i32, i32* @y.387
  %7 = sub i32 %5, 1187753404
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1187753404
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 127260238, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 127260238, label %19
    i32 -1141963786, label %39
    i32 1643923004, label %59
    i32 547542673, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1141963786, i32 547542673
  store i32 %38, i32* %15
  br label %67

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %40, align 8
  %41 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %40, align 8
  %42 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %42, i32 0, i32 1
  %44 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %43, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"** %44, %"struct.std::_Rb_tree_node_base"*** %2
  %45 = load i32, i32* @x.386
  %46 = load i32, i32* @y.387
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1643923004, i32 547542673
  store i32 %58, i32* %15
  br label %67

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %2
  ret %"struct.std::_Rb_tree_node_base"** %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %62, align 8
  %63 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %62, align 8
  %64 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %64, i32 0, i32 1
  %66 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %65, i32 0, i32 3
  store i32 -1141963786, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEERKS1_OT_(%"struct.std::pair.25"*, %"struct.std::_Rb_tree_node_base"** dereferenceable(8), %"struct.std::_Rb_tree_node_base"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.388
  %7 = load i32, i32* @y.389
  %8 = add i32 %6, 1943051195
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1943051195
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 854550901, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %80
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 854550901, label %20
    i32 -1026761644, label %28
    i32 832069890, label %67
    i32 -1184440042, label %68
  ]

; <label>:19:                                     ; preds = %17
  br label %80

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1026761644, i32 -1184440042
  store i32 %27, i32* %16
  br label %80

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::pair.25"*, align 8
  %30 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  %31 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::pair.25"* %0, %"struct.std::pair.25"** %29, align 8
  store %"struct.std::_Rb_tree_node_base"** %1, %"struct.std::_Rb_tree_node_base"*** %30, align 8
  store %"struct.std::_Rb_tree_node_base"** %2, %"struct.std::_Rb_tree_node_base"*** %31, align 8
  %32 = load %"struct.std::pair.25"*, %"struct.std::pair.25"** %29, align 8
  %33 = getelementptr inbounds %"struct.std::pair.25", %"struct.std::pair.25"* %32, i32 0, i32 0
  %34 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %30, align 8
  %35 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %34, align 8
  store %"struct.std::_Rb_tree_node_base"* %35, %"struct.std::_Rb_tree_node_base"** %33, align 8
  %36 = getelementptr inbounds %"struct.std::pair.25", %"struct.std::pair.25"* %32, i32 0, i32 1
  %37 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %31, align 8
  %38 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %37) #3
  %39 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %38, align 8
  store %"struct.std::_Rb_tree_node_base"* %39, %"struct.std::_Rb_tree_node_base"** %36, align 8
  %40 = load i32, i32* @x.388
  %41 = load i32, i32* @y.389
  %42 = sub i32 %40, 12002850
  %43 = sub i32 %42, 1
  %44 = add i32 %43, 12002850
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 832069890, i32 -1184440042
  store i32 %66, i32* %16
  br label %80

; <label>:67:                                     ; preds = %17
  ret void

; <label>:68:                                     ; preds = %17
  %69 = alloca %"struct.std::pair.25"*, align 8
  %70 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  %71 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::pair.25"* %0, %"struct.std::pair.25"** %69, align 8
  store %"struct.std::_Rb_tree_node_base"** %1, %"struct.std::_Rb_tree_node_base"*** %70, align 8
  store %"struct.std::_Rb_tree_node_base"** %2, %"struct.std::_Rb_tree_node_base"*** %71, align 8
  %72 = load %"struct.std::pair.25"*, %"struct.std::pair.25"** %69, align 8
  %73 = getelementptr inbounds %"struct.std::pair.25", %"struct.std::pair.25"* %72, i32 0, i32 0
  %74 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %70, align 8
  %75 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %74, align 8
  store %"struct.std::_Rb_tree_node_base"* %75, %"struct.std::_Rb_tree_node_base"** %73, align 8
  %76 = getelementptr inbounds %"struct.std::pair.25", %"struct.std::pair.25"* %72, i32 0, i32 1
  %77 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %71, align 8
  %78 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %77) #3
  %79 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %78, align 8
  store %"struct.std::_Rb_tree_node_base"* %79, %"struct.std::_Rb_tree_node_base"** %76, align 8
  store i32 -1026761644, i32* %16
  br label %80

; <label>:80:                                     ; preds = %68, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE24_M_get_insert_unique_posERS1_(%"class.std::_Rb_tree"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca %"class.std::_Rb_tree"*
  %7 = alloca %"struct.std::pair.25", align 8
  %8 = alloca %"class.std::_Rb_tree"*, align 8
  %9 = alloca i64*, align 8
  %10 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %11 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %12 = alloca i8, align 1
  %13 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %14 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %15 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %8, align 8
  store i64* %1, i64** %9, align 8
  %16 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %8, align 8
  store %"class.std::_Rb_tree"* %16, %"class.std::_Rb_tree"** %6
  %17 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %18 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE8_M_beginEv(%"class.std::_Rb_tree"* %17) #3
  store %"struct.std::_Rb_tree_node"* %18, %"struct.std::_Rb_tree_node"** %10, align 8
  %19 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %20 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE6_M_endEv(%"class.std::_Rb_tree"* %19) #3
  store %"struct.std::_Rb_tree_node"* %20, %"struct.std::_Rb_tree_node"** %11, align 8
  store i8 1, i8* %12, align 1
  %21 = alloca i32
  store i32 -2124999251, i32* %21
  %22 = alloca %"struct.std::_Rb_tree_node"*
  br label %23

; <label>:23:                                     ; preds = %2, %242
  %24 = load i32, i32* %21
  switch i32 %24, label %25 [
    i32 -2124999251, label %26
    i32 -878631230, label %30
    i32 -2078717531, label %46
    i32 -4313013, label %85
    i32 -1855640150, label %88
    i32 -699775897, label %92
    i32 528689531, label %96
    i32 324182664, label %112
    i32 986402273, label %141
    i32 -1522096921, label %142
    i32 -829508892, label %148
    i32 -1813926147, label %154
    i32 -617731008, label %155
    i32 1012378844, label %157
    i32 -674626514, label %158
    i32 912729517, label %186
    i32 -568175525, label %210
    i32 2126012979, label %213
    i32 314878564, label %214
    i32 1519575599, label %216
    i32 604411077, label %219
    i32 782458617, label %231
    i32 -1352731551, label %233
  ]

; <label>:25:                                     ; preds = %23
  br label %242

; <label>:26:                                     ; preds = %23
  %27 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  %28 = icmp ne %"struct.std::_Rb_tree_node"* %27, null
  %29 = select i1 %28, i32 -878631230, i32 -1522096921
  store i32 %29, i32* %21
  br label %242

; <label>:30:                                     ; preds = %23
  %31 = load i32, i32* @x.390
  %32 = load i32, i32* @y.391
  %33 = add i32 %31, -153359511
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -153359511
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -2078717531, i32 604411077
  store i32 %45, i32* %21
  br label %242

; <label>:46:                                     ; preds = %23
  %47 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  store %"struct.std::_Rb_tree_node"* %47, %"struct.std::_Rb_tree_node"** %11, align 8
  %48 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %49 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %48, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %49, i32 0, i32 0
  %51 = load i64*, i64** %9, align 8
  %52 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  %53 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E(%"struct.std::_Rb_tree_node"* %52)
  %54 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %50, i64* dereferenceable(8) %51, i64* dereferenceable(8) %53)
  %55 = zext i1 %54 to i8
  store i8 %55, i8* %12, align 1
  %56 = load i8, i8* %12, align 1
  %57 = trunc i8 %56 to i1
  store i1 %57, i1* %5
  %58 = load i32, i32* @x.390
  %59 = load i32, i32* @y.391
  %60 = sub i32 %58, -1312565947
  %61 = sub i32 %60, 1
  %62 = add i32 %61, -1312565947
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 true, true
  %71 = and i1 %68, true
  %72 = and i1 %66, %70
  %73 = and i1 %69, true
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 true, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 -4313013, i32 604411077
  store i32 %84, i32* %21
  br label %242

; <label>:85:                                     ; preds = %23
  %86 = load volatile i1, i1* %5
  %87 = select i1 %86, i32 -1855640150, i32 -699775897
  store i32 %87, i32* %21
  br label %242

; <label>:88:                                     ; preds = %23
  %89 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  %90 = bitcast %"struct.std::_Rb_tree_node"* %89 to %"struct.std::_Rb_tree_node_base"*
  %91 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %90) #3
  store i32 528689531, i32* %21
  store %"struct.std::_Rb_tree_node"* %91, %"struct.std::_Rb_tree_node"** %22
  br label %242

; <label>:92:                                     ; preds = %23
  %93 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  %94 = bitcast %"struct.std::_Rb_tree_node"* %93 to %"struct.std::_Rb_tree_node_base"*
  %95 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %94) #3
  store i32 528689531, i32* %21
  store %"struct.std::_Rb_tree_node"* %95, %"struct.std::_Rb_tree_node"** %22
  br label %242

; <label>:96:                                     ; preds = %23
  %97 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %22
  store %"struct.std::_Rb_tree_node"* %97, %"struct.std::_Rb_tree_node"** %3
  %98 = load i32, i32* @x.390
  %99 = load i32, i32* @y.391
  %100 = sub i32 0, 1
  %101 = add i32 %98, %100
  %102 = sub i32 %98, 1
  %103 = mul i32 %98, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %99, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  %111 = select i1 %109, i32 324182664, i32 782458617
  store i32 %111, i32* %21
  br label %242

; <label>:112:                                    ; preds = %23
  %113 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %3
  store %"struct.std::_Rb_tree_node"* %113, %"struct.std::_Rb_tree_node"** %10, align 8
  %114 = load i32, i32* @x.390
  %115 = load i32, i32* @y.391
  %116 = sub i32 %114, 1563588415
  %117 = sub i32 %116, 1
  %118 = add i32 %117, 1563588415
  %119 = sub i32 %114, 1
  %120 = mul i32 %114, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %115, 10
  %124 = xor i1 %122, true
  %125 = xor i1 %123, true
  %126 = xor i1 true, true
  %127 = and i1 %124, true
  %128 = and i1 %122, %126
  %129 = and i1 %125, true
  %130 = and i1 %123, %126
  %131 = or i1 %127, %128
  %132 = or i1 %129, %130
  %133 = xor i1 %131, %132
  %134 = or i1 %124, %125
  %135 = xor i1 %134, true
  %136 = or i1 true, %126
  %137 = and i1 %135, %136
  %138 = or i1 %133, %137
  %139 = or i1 %122, %123
  %140 = select i1 %138, i32 986402273, i32 782458617
  store i32 %140, i32* %21
  br label %242

; <label>:141:                                    ; preds = %23
  store i32 -2124999251, i32* %21
  br label %242

; <label>:142:                                    ; preds = %23
  %143 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %11, align 8
  %144 = bitcast %"struct.std::_Rb_tree_node"* %143 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %13, %"struct.std::_Rb_tree_node_base"* %144) #3
  %145 = load i8, i8* %12, align 1
  %146 = trunc i8 %145 to i1
  %147 = select i1 %146, i32 -829508892, i32 -674626514
  store i32 %147, i32* %21
  br label %242

; <label>:148:                                    ; preds = %23
  %149 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %150 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE5beginEv(%"class.std::_Rb_tree"* %149) #3
  %151 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %14, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %150, %"struct.std::_Rb_tree_node_base"** %151, align 8
  %152 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEeqERKS9_(%"struct.std::_Rb_tree_iterator"* %13, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %14) #3
  %153 = select i1 %152, i32 -1813926147, i32 -617731008
  store i32 %153, i32* %21
  br label %242

; <label>:154:                                    ; preds = %23
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxSt3setIS_IxxESt4lessIS7_ESaIS7_EEEESF_vEEOT_OT0_(%"struct.std::pair.25"* %7, %"struct.std::_Rb_tree_node"** dereferenceable(8) %10, %"struct.std::_Rb_tree_node"** dereferenceable(8) %11)
  store i32 1519575599, i32* %21
  br label %242

; <label>:155:                                    ; preds = %23
  %156 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEmmEv(%"struct.std::_Rb_tree_iterator"* %13) #3
  store i32 1012378844, i32* %21
  br label %242

; <label>:157:                                    ; preds = %23
  store i32 -674626514, i32* %21
  br label %242

; <label>:158:                                    ; preds = %23
  %159 = load i32, i32* @x.390
  %160 = load i32, i32* @y.391
  %161 = sub i32 %159, -1544905855
  %162 = sub i32 %161, 1
  %163 = add i32 %162, -1544905855
  %164 = sub i32 %159, 1
  %165 = mul i32 %159, %163
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %160, 10
  %169 = xor i1 %167, true
  %170 = xor i1 %168, true
  %171 = xor i1 true, true
  %172 = and i1 %169, true
  %173 = and i1 %167, %171
  %174 = and i1 %170, true
  %175 = and i1 %168, %171
  %176 = or i1 %172, %173
  %177 = or i1 %174, %175
  %178 = xor i1 %176, %177
  %179 = or i1 %169, %170
  %180 = xor i1 %179, true
  %181 = or i1 true, %171
  %182 = and i1 %180, %181
  %183 = or i1 %178, %182
  %184 = or i1 %167, %168
  %185 = select i1 %183, i32 912729517, i32 -1352731551
  store i32 %185, i32* %21
  br label %242

; <label>:186:                                    ; preds = %23
  %187 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %188 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %187, i32 0, i32 0
  %189 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %188, i32 0, i32 0
  %190 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  %191 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %190, align 8
  %192 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %191)
  %193 = load i64*, i64** %9, align 8
  %194 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %189, i64* dereferenceable(8) %192, i64* dereferenceable(8) %193)
  store i1 %194, i1* %4
  %195 = load i32, i32* @x.390
  %196 = load i32, i32* @y.391
  %197 = sub i32 %195, -581633100
  %198 = sub i32 %197, 1
  %199 = add i32 %198, -581633100
  %200 = sub i32 %195, 1
  %201 = mul i32 %195, %199
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %196, 10
  %205 = and i1 %203, %204
  %206 = xor i1 %203, %204
  %207 = or i1 %205, %206
  %208 = or i1 %203, %204
  %209 = select i1 %207, i32 -568175525, i32 -1352731551
  store i32 %209, i32* %21
  br label %242

; <label>:210:                                    ; preds = %23
  %211 = load volatile i1, i1* %4
  %212 = select i1 %211, i32 2126012979, i32 314878564
  store i32 %212, i32* %21
  br label %242

; <label>:213:                                    ; preds = %23
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxSt3setIS_IxxESt4lessIS7_ESaIS7_EEEESF_vEEOT_OT0_(%"struct.std::pair.25"* %7, %"struct.std::_Rb_tree_node"** dereferenceable(8) %10, %"struct.std::_Rb_tree_node"** dereferenceable(8) %11)
  store i32 1519575599, i32* %21
  br label %242

; <label>:214:                                    ; preds = %23
  %215 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %15, align 8
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.25"* %7, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %215, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %15)
  store i32 1519575599, i32* %21
  br label %242

; <label>:216:                                    ; preds = %23
  %217 = bitcast %"struct.std::pair.25"* %7 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %218 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %217, align 8
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %218

; <label>:219:                                    ; preds = %23
  %220 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  store %"struct.std::_Rb_tree_node"* %220, %"struct.std::_Rb_tree_node"** %11, align 8
  %221 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %222 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %221, i32 0, i32 0
  %223 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %222, i32 0, i32 0
  %224 = load i64*, i64** %9, align 8
  %225 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  %226 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE6_S_keyEPKSt13_Rb_tree_nodeIS8_E(%"struct.std::_Rb_tree_node"* %225)
  %227 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %223, i64* dereferenceable(8) %224, i64* dereferenceable(8) %226)
  %228 = zext i1 %227 to i8
  store i8 %228, i8* %12, align 1
  %229 = load i8, i8* %12, align 1
  %230 = trunc i8 %229 to i1
  store i32 -2078717531, i32* %21
  br label %242

; <label>:231:                                    ; preds = %23
  %232 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %3
  store %"struct.std::_Rb_tree_node"* %232, %"struct.std::_Rb_tree_node"** %10, align 8
  store i32 324182664, i32* %21
  br label %242

; <label>:233:                                    ; preds = %23
  %234 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %6
  %235 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %234, i32 0, i32 0
  %236 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %235, i32 0, i32 0
  %237 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %13, i32 0, i32 0
  %238 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %237, align 8
  %239 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %238)
  %240 = load i64*, i64** %9, align 8
  %241 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %236, i64* dereferenceable(8) %239, i64* dereferenceable(8) %240)
  store i32 912729517, i32* %21
  br label %242

; <label>:242:                                    ; preds = %233, %231, %219, %214, %213, %210, %186, %158, %157, %155, %154, %148, %142, %141, %112, %96, %92, %88, %85, %46, %30, %26, %25
  br label %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE11_M_leftmostEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %5, i32 0, i32 2
  ret %"struct.std::_Rb_tree_node_base"** %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_S4_vEEOT_OT0_(%"struct.std::pair.25"*, %"struct.std::_Rb_tree_node_base"** dereferenceable(8), %"struct.std::_Rb_tree_node_base"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::pair.25"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  %6 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::pair.25"* %0, %"struct.std::pair.25"** %4, align 8
  store %"struct.std::_Rb_tree_node_base"** %1, %"struct.std::_Rb_tree_node_base"*** %5, align 8
  store %"struct.std::_Rb_tree_node_base"** %2, %"struct.std::_Rb_tree_node_base"*** %6, align 8
  %7 = load %"struct.std::pair.25"*, %"struct.std::pair.25"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair.25", %"struct.std::pair.25"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %5, align 8
  %10 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %9) #3
  %11 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
  store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %12 = getelementptr inbounds %"struct.std::pair.25", %"struct.std::pair.25"* %7, i32 0, i32 1
  %13 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %6, align 8
  %14 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %13) #3
  %15 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %14, align 8
  store %"struct.std::_Rb_tree_node_base"* %15, %"struct.std::_Rb_tree_node_base"** %12, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEmmEv(%"struct.std::_Rb_tree_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.396
  %6 = load i32, i32* @y.397
  %7 = sub i32 %5, 1201015531
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1201015531
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1824531420, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %72
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1824531420, label %19
    i32 -1139964406, label %39
    i32 1345942705, label %63
    i32 -765923038, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %72

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1139964406, i32 -765923038
  store i32 %38, i32* %15
  br label %72

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %40, align 8
  %41 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %40, align 8
  store %"struct.std::_Rb_tree_iterator"* %41, %"struct.std::_Rb_tree_iterator"** %2
  %42 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2
  %43 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %42, i32 0, i32 0
  %44 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %43, align 8
  %45 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %44) #15
  %46 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2
  %47 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %46, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %45, %"struct.std::_Rb_tree_node_base"** %47, align 8
  %48 = load i32, i32* @x.396
  %49 = load i32, i32* @y.397
  %50 = sub i32 %48, -497373017
  %51 = sub i32 %50, 1
  %52 = add i32 %51, -497373017
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 1345942705, i32 -765923038
  store i32 %62, i32* %15
  br label %72

; <label>:63:                                     ; preds = %16
  %64 = load volatile %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2
  ret %"struct.std::_Rb_tree_iterator"* %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %66, align 8
  %67 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %67, i32 0, i32 0
  %69 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %68, align 8
  %70 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %69) #15
  %71 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %67, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %70, %"struct.std::_Rb_tree_node_base"** %71, align 8
  store i32 -1139964406, i32* %15
  br label %72

; <label>:72:                                     ; preds = %65, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEppEv(%"struct.std::_Rb_tree_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %5) #15
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.25"*, %"struct.std::_Rb_tree_node_base"** dereferenceable(8), %"struct.std::_Rb_tree_node_base"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.400
  %7 = load i32, i32* @y.401
  %8 = sub i32 %6, 1625936016
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1625936016
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 208270960, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %80
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 208270960, label %20
    i32 625979174, label %28
    i32 -1932023464, label %67
    i32 749183550, label %68
  ]

; <label>:19:                                     ; preds = %17
  br label %80

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 625979174, i32 749183550
  store i32 %27, i32* %16
  br label %80

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::pair.25"*, align 8
  %30 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  %31 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::pair.25"* %0, %"struct.std::pair.25"** %29, align 8
  store %"struct.std::_Rb_tree_node_base"** %1, %"struct.std::_Rb_tree_node_base"*** %30, align 8
  store %"struct.std::_Rb_tree_node_base"** %2, %"struct.std::_Rb_tree_node_base"*** %31, align 8
  %32 = load %"struct.std::pair.25"*, %"struct.std::pair.25"** %29, align 8
  %33 = getelementptr inbounds %"struct.std::pair.25", %"struct.std::pair.25"* %32, i32 0, i32 0
  %34 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %30, align 8
  %35 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %34) #3
  %36 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %35, align 8
  store %"struct.std::_Rb_tree_node_base"* %36, %"struct.std::_Rb_tree_node_base"** %33, align 8
  %37 = getelementptr inbounds %"struct.std::pair.25", %"struct.std::pair.25"* %32, i32 0, i32 1
  %38 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %31, align 8
  %39 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %38, align 8
  store %"struct.std::_Rb_tree_node_base"* %39, %"struct.std::_Rb_tree_node_base"** %37, align 8
  %40 = load i32, i32* @x.400
  %41 = load i32, i32* @y.401
  %42 = sub i32 %40, 1069623401
  %43 = sub i32 %42, 1
  %44 = add i32 %43, 1069623401
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -1932023464, i32 749183550
  store i32 %66, i32* %16
  br label %80

; <label>:67:                                     ; preds = %17
  ret void

; <label>:68:                                     ; preds = %17
  %69 = alloca %"struct.std::pair.25"*, align 8
  %70 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  %71 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::pair.25"* %0, %"struct.std::pair.25"** %69, align 8
  store %"struct.std::_Rb_tree_node_base"** %1, %"struct.std::_Rb_tree_node_base"*** %70, align 8
  store %"struct.std::_Rb_tree_node_base"** %2, %"struct.std::_Rb_tree_node_base"*** %71, align 8
  %72 = load %"struct.std::pair.25"*, %"struct.std::pair.25"** %69, align 8
  %73 = getelementptr inbounds %"struct.std::pair.25", %"struct.std::pair.25"* %72, i32 0, i32 0
  %74 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %70, align 8
  %75 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %74) #3
  %76 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %75, align 8
  store %"struct.std::_Rb_tree_node_base"* %76, %"struct.std::_Rb_tree_node_base"** %73, align 8
  %77 = getelementptr inbounds %"struct.std::pair.25", %"struct.std::pair.25"* %72, i32 0, i32 1
  %78 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %71, align 8
  %79 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %78, align 8
  store %"struct.std::_Rb_tree_node_base"* %79, %"struct.std::_Rb_tree_node_base"** %77, align 8
  store i32 625979174, i32* %16
  br label %80

; <label>:80:                                     ; preds = %68, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(56) %"struct.std::pair.20"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = bitcast %"struct.std::_Rb_tree_node_base"* %3 to %"struct.std::_Rb_tree_node"*
  %5 = call %"struct.std::pair.20"* @_ZNKSt13_Rb_tree_nodeISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %4)
  ret %"struct.std::pair.20"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::_Rb_tree_node_base"** %0, %"struct.std::_Rb_tree_node_base"*** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %2, align 8
  ret %"struct.std::_Rb_tree_node_base"** %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEESt10_Select1stIS8_ES4_IxESaIS8_EE5beginEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  %4 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > >, std::_Select1st<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > >, std::less<long long>, std::allocator<std::pair<const long long, std::set<std::pair<long long, long long>, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > > > > >::_Rb_tree_impl"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %6, i32 0, i32 2
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt3setIS0_IxxESt4lessIS3_ESaIS3_EEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %2, %"struct.std::_Rb_tree_node_base"* %8) #3
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %2, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  ret %"struct.std::_Rb_tree_node_base"* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxSt3setIS_IxxESt4lessIS7_ESaIS7_EEEESF_vEEOT_OT0_(%"struct.std::pair.25"*, %"struct.std::_Rb_tree_node"** dereferenceable(8), %"struct.std::_Rb_tree_node"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::pair.25"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"**, align 8
  %6 = alloca %"struct.std::_Rb_tree_node"**, align 8
  store %"struct.std::pair.25"* %0, %"struct.std::pair.25"** %4, align 8
  store %"struct.std::_Rb_tree_node"** %1, %"struct.std::_Rb_tree_node"*** %5, align 8
  store %"struct.std::_Rb_tree_node"** %2, %"struct.std::_Rb_tree_node"*** %6, align 8
  %7 = load %"struct.std::pair.25"*, %"struct.std::pair.25"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair.25", %"struct.std::pair.25"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %5, align 8
  %10 = call dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxSt3setIS1_IxxESt4lessIS4_ESaIS4_EEEEEOT_RNSt16remove_referenceISD_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8) %9) #3
  %11 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  %12 = bitcast %"struct.std::_Rb_tree_node"* %11 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %12, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %13 = getelementptr inbounds %"struct.std::pair.25", %"struct.std::pair.25"* %7, i32 0, i32 1
  %14 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %6, align 8
  %15 = call dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxSt3setIS1_IxxESt4lessIS4_ESaIS4_EEEEEOT_RNSt16remove_referenceISD_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8) %14) #3
  %16 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %15, align 8
  %17 = bitcast %"struct.std::_Rb_tree_node"* %16 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %13, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxSt3setIS1_IxxESt4lessIS4_ESaIS4_EEEEEOT_RNSt16remove_referenceISD_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Rb_tree_node"**, align 8
  store %"struct.std::_Rb_tree_node"** %0, %"struct.std::_Rb_tree_node"*** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %2, align 8
  ret %"struct.std::_Rb_tree_node"** %3
}

; Function Attrs: nounwind readonly
declare %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #13

; Function Attrs: nounwind readonly
declare %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #13

; Function Attrs: nounwind
declare void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* dereferenceable(32)) #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJRKxEEC2ES1_(%"struct.std::_Tuple_impl"*, i64* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Tuple_impl"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Tuple_impl"* %5 to %"struct.std::_Head_base"*
  %7 = load i64*, i64** %4, align 8
  call void @_ZNSt10_Head_baseILm0ERKxLb0EEC2ES1_(%"struct.std::_Head_base"* %6, i64* dereferenceable(8) %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5beginEv(%"class.std::_Rb_tree.8"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %3 = alloca %"class.std::_Rb_tree.8"*, align 8
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %3, align 8
  %4 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree.8", %"class.std::_Rb_tree.8"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %6, i32 0, i32 2
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  call void @_ZNSt23_Rb_tree_const_iteratorISt4pairIxxEEC2EPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_const_iterator"* %2, %"struct.std::_Rb_tree_node_base"* %8) #3
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %2, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  ret %"struct.std::_Rb_tree_node_base"* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt23_Rb_tree_const_iteratorISt4pairIxxEEC2EPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_node_base"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  store %"struct.std::_Rb_tree_node_base"* %7, %"struct.std::_Rb_tree_node_base"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE3endEv(%"class.std::_Rb_tree.8"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %3 = alloca %"class.std::_Rb_tree.8"*, align 8
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %3, align 8
  %4 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree.8", %"class.std::_Rb_tree.8"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %5, i32 0, i32 1
  call void @_ZNSt23_Rb_tree_const_iteratorISt4pairIxxEEC2EPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_const_iterator"* %2, %"struct.std::_Rb_tree_node_base"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %2, i32 0, i32 0
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_node_base"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZSt13__lower_boundISt23_Rb_tree_const_iteratorISt4pairIxxEES2_N9__gnu_cxx5__ops14_Iter_less_valEET_S7_S7_RKT0_T1_(%"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::pair"* dereferenceable(16)) #0 comdat {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %6 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %7 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %8 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_val", align 1
  %9 = alloca %"struct.std::pair"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %12 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %13 = alloca i64, align 8
  %14 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %15 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %16 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %6, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %16, align 8
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %7, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %17, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %9, align 8
  %18 = bitcast %"struct.std::_Rb_tree_const_iterator"* %11 to i8*
  %19 = bitcast %"struct.std::_Rb_tree_const_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 8, i32 8, i1 false)
  %20 = bitcast %"struct.std::_Rb_tree_const_iterator"* %12 to i8*
  %21 = bitcast %"struct.std::_Rb_tree_const_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %11, i32 0, i32 0
  %23 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %12, i32 0, i32 0
  %25 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %24, align 8
  %26 = call i64 @_ZSt8distanceISt23_Rb_tree_const_iteratorISt4pairIxxEEENSt15iterator_traitsIT_E15difference_typeES5_S5_(%"struct.std::_Rb_tree_node_base"* %23, %"struct.std::_Rb_tree_node_base"* %25)
  store i64 %26, i64* %10, align 8
  %27 = alloca i32
  store i32 -1096394261, i32* %27
  br label %28

; <label>:28:                                     ; preds = %3, %117
  %29 = load i32, i32* %27
  switch i32 %29, label %30 [
    i32 -1096394261, label %31
    i32 1950178459, label %47
    i32 2080484519, label %77
    i32 -919249678, label %80
    i32 -1691848639, label %93
    i32 989838833, label %106
    i32 1158360632, label %108
    i32 -171843694, label %109
    i32 2122715574, label %114
  ]

; <label>:30:                                     ; preds = %28
  br label %117

; <label>:31:                                     ; preds = %28
  %32 = load i32, i32* @x.420
  %33 = load i32, i32* @y.421
  %34 = add i32 %32, 311096565
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 311096565
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 1950178459, i32 2122715574
  store i32 %46, i32* %27
  br label %117

; <label>:47:                                     ; preds = %28
  %48 = load i64, i64* %10, align 8
  %49 = icmp sgt i64 %48, 0
  store i1 %49, i1* %4
  %50 = load i32, i32* @x.420
  %51 = load i32, i32* @y.421
  %52 = sub i32 %50, 1682783384
  %53 = sub i32 %52, 1
  %54 = add i32 %53, 1682783384
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 2080484519, i32 2122715574
  store i32 %76, i32* %27
  br label %117

; <label>:77:                                     ; preds = %28
  %78 = load volatile i1, i1* %4
  %79 = select i1 %78, i32 -919249678, i32 -171843694
  store i32 %79, i32* %27
  br label %117

; <label>:80:                                     ; preds = %28
  %81 = load i64, i64* %10, align 8
  %82 = ashr i64 %81, 1
  store i64 %82, i64* %13, align 8
  %83 = bitcast %"struct.std::_Rb_tree_const_iterator"* %14 to i8*
  %84 = bitcast %"struct.std::_Rb_tree_const_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %83, i8* %84, i64 8, i32 8, i1 false)
  %85 = load i64, i64* %13, align 8
  call void @_ZSt7advanceISt23_Rb_tree_const_iteratorISt4pairIxxEElEvRT_T0_(%"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %14, i64 %85)
  %86 = bitcast %"struct.std::_Rb_tree_const_iterator"* %15 to i8*
  %87 = bitcast %"struct.std::_Rb_tree_const_iterator"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 8, i32 8, i1 false)
  %88 = load %"struct.std::pair"*, %"struct.std::pair"** %9, align 8
  %89 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %15, i32 0, i32 0
  %90 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %89, align 8
  %91 = call zeroext i1 @_ZNK9__gnu_cxx5__ops14_Iter_less_valclISt23_Rb_tree_const_iteratorISt4pairIxxEEKS5_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_less_val"* %8, %"struct.std::_Rb_tree_node_base"* %90, %"struct.std::pair"* dereferenceable(16) %88)
  %92 = select i1 %91, i32 -1691848639, i32 989838833
  store i32 %92, i32* %27
  br label %117

; <label>:93:                                     ; preds = %28
  %94 = bitcast %"struct.std::_Rb_tree_const_iterator"* %6 to i8*
  %95 = bitcast %"struct.std::_Rb_tree_const_iterator"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %94, i8* %95, i64 8, i32 8, i1 false)
  %96 = call dereferenceable(8) %"struct.std::_Rb_tree_const_iterator"* @_ZNSt23_Rb_tree_const_iteratorISt4pairIxxEEppEv(%"struct.std::_Rb_tree_const_iterator"* %6) #3
  %97 = load i64, i64* %10, align 8
  %98 = load i64, i64* %13, align 8
  %99 = sub i64 0, %98
  %100 = add i64 %97, %99
  %101 = sub nsw i64 %97, %98
  %102 = add i64 %100, 8873211037449482592
  %103 = sub i64 %102, 1
  %104 = sub i64 %103, 8873211037449482592
  %105 = sub nsw i64 %100, 1
  store i64 %104, i64* %10, align 8
  store i32 1158360632, i32* %27
  br label %117

; <label>:106:                                    ; preds = %28
  %107 = load i64, i64* %13, align 8
  store i64 %107, i64* %10, align 8
  store i32 1158360632, i32* %27
  br label %117

; <label>:108:                                    ; preds = %28
  store i32 -1096394261, i32* %27
  br label %117

; <label>:109:                                    ; preds = %28
  %110 = bitcast %"struct.std::_Rb_tree_const_iterator"* %5 to i8*
  %111 = bitcast %"struct.std::_Rb_tree_const_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %110, i8* %111, i64 8, i32 8, i1 false)
  %112 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  %113 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %112, align 8
  ret %"struct.std::_Rb_tree_node_base"* %113

; <label>:114:                                    ; preds = %28
  %115 = load i64, i64* %10, align 8
  %116 = icmp sgt i64 %115, 0
  store i32 1950178459, i32* %27
  br label %117

; <label>:117:                                    ; preds = %114, %108, %106, %93, %80, %77, %47, %31, %30
  br label %28
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops15__iter_less_valEv() #4 comdat {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_val", align 1
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZSt8distanceISt23_Rb_tree_const_iteratorISt4pairIxxEEENSt15iterator_traitsIT_E15difference_typeES5_S5_(%"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*) #0 comdat {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %4 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %5 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %6 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %7 = alloca %"struct.std::input_iterator_tag", align 1
  %8 = alloca %"struct.std::bidirectional_iterator_tag", align 1
  %9 = alloca %"struct.std::bidirectional_iterator_tag", align 1
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %4, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %12 = bitcast %"struct.std::_Rb_tree_const_iterator"* %5 to i8*
  %13 = bitcast %"struct.std::_Rb_tree_const_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"struct.std::_Rb_tree_const_iterator"* %6 to i8*
  %15 = bitcast %"struct.std::_Rb_tree_const_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  call void @_ZSt19__iterator_categoryISt23_Rb_tree_const_iteratorISt4pairIxxEEENSt15iterator_traitsIT_E17iterator_categoryERKS5_(%"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %3)
  %16 = bitcast %"struct.std::bidirectional_iterator_tag"* %8 to %"struct.std::input_iterator_tag"*
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  %18 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %17, align 8
  %19 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %6, i32 0, i32 0
  %20 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %19, align 8
  %21 = call i64 @_ZSt10__distanceISt23_Rb_tree_const_iteratorISt4pairIxxEEENSt15iterator_traitsIT_E15difference_typeES5_S5_St18input_iterator_tag(%"struct.std::_Rb_tree_node_base"* %18, %"struct.std::_Rb_tree_node_base"* %20)
  ret i64 %21
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt7advanceISt23_Rb_tree_const_iteratorISt4pairIxxEElEvRT_T0_(%"struct.std::_Rb_tree_const_iterator"* dereferenceable(8), i64) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.426
  %6 = load i32, i32* @y.427
  %7 = sub i32 %5, 644447464
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 644447464
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 684935586, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %75
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 684935586, label %19
    i32 1723241741, label %27
    i32 1000047019, label %64
    i32 -1459487263, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %75

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1723241741, i32 -1459487263
  store i32 %26, i32* %15
  br label %75

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %29 = alloca i64, align 8
  %30 = alloca i64, align 8
  %31 = alloca %"struct.std::bidirectional_iterator_tag", align 1
  %32 = alloca %"struct.std::bidirectional_iterator_tag", align 1
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %28, align 8
  store i64 %1, i64* %29, align 8
  %33 = load i64, i64* %29, align 8
  store i64 %33, i64* %30, align 8
  %34 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %28, align 8
  %35 = load i64, i64* %30, align 8
  %36 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %28, align 8
  call void @_ZSt19__iterator_categoryISt23_Rb_tree_const_iteratorISt4pairIxxEEENSt15iterator_traitsIT_E17iterator_categoryERKS5_(%"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %36)
  call void @_ZSt9__advanceISt23_Rb_tree_const_iteratorISt4pairIxxEElEvRT_T0_St26bidirectional_iterator_tag(%"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %34, i64 %35)
  %37 = load i32, i32* @x.426
  %38 = load i32, i32* @y.427
  %39 = sub i32 %37, -336849147
  %40 = sub i32 %39, 1
  %41 = add i32 %40, -336849147
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 1000047019, i32 -1459487263
  store i32 %63, i32* %15
  br label %75

; <label>:64:                                     ; preds = %16
  ret void

; <label>:65:                                     ; preds = %16
  %66 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %67 = alloca i64, align 8
  %68 = alloca i64, align 8
  %69 = alloca %"struct.std::bidirectional_iterator_tag", align 1
  %70 = alloca %"struct.std::bidirectional_iterator_tag", align 1
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %66, align 8
  store i64 %1, i64* %67, align 8
  %71 = load i64, i64* %67, align 8
  store i64 %71, i64* %68, align 8
  %72 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %66, align 8
  %73 = load i64, i64* %68, align 8
  %74 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %66, align 8
  call void @_ZSt19__iterator_categoryISt23_Rb_tree_const_iteratorISt4pairIxxEEENSt15iterator_traitsIT_E17iterator_categoryERKS5_(%"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %74)
  call void @_ZSt9__advanceISt23_Rb_tree_const_iteratorISt4pairIxxEElEvRT_T0_St26bidirectional_iterator_tag(%"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %72, i64 %73)
  store i32 1723241741, i32* %15
  br label %75

; <label>:75:                                     ; preds = %65, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNK9__gnu_cxx5__ops14_Iter_less_valclISt23_Rb_tree_const_iteratorISt4pairIxxEEKS5_EEbT_RT0_(%"struct.__gnu_cxx::__ops::_Iter_less_val"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::pair"* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %5 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_val"*, align 8
  %6 = alloca %"struct.std::pair"*, align 8
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %4, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %7, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_less_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_less_val"** %5, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %6, align 8
  %8 = load %"struct.__gnu_cxx::__ops::_Iter_less_val"*, %"struct.__gnu_cxx::__ops::_Iter_less_val"** %5, align 8
  %9 = call dereferenceable(16) %"struct.std::pair"* @_ZNKSt23_Rb_tree_const_iteratorISt4pairIxxEEdeEv(%"struct.std::_Rb_tree_const_iterator"* %4) #3
  %10 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %11 = call zeroext i1 @_ZStltIxxEbRKSt4pairIT_T0_ES5_(%"struct.std::pair"* dereferenceable(16) %9, %"struct.std::pair"* dereferenceable(16) %10)
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_const_iterator"* @_ZNSt23_Rb_tree_const_iteratorISt4pairIxxEEppEv(%"struct.std::_Rb_tree_const_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %5) #15
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_const_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt10__distanceISt23_Rb_tree_const_iteratorISt4pairIxxEEENSt15iterator_traitsIT_E15difference_typeES5_S5_St18input_iterator_tag(%"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*) #4 comdat {
  %3 = alloca i1
  %4 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %5 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %6 = alloca %"struct.std::input_iterator_tag", align 1
  %7 = alloca i64, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %4, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %9, align 8
  store i64 0, i64* %7, align 8
  %10 = alloca i32
  store i32 -1775238466, i32* %10
  br label %11

; <label>:11:                                     ; preds = %2, %157
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 -1775238466, label %14
    i32 -1920394379, label %41
    i32 -2024951097, label %69
    i32 -934192706, label %72
    i32 -1271123403, label %88
    i32 1960984680, label %111
    i32 -1296610624, label %112
    i32 -1172321636, label %114
    i32 656801574, label %116
  ]

; <label>:13:                                     ; preds = %11
  br label %157

; <label>:14:                                     ; preds = %11
  %15 = load i32, i32* @x.432
  %16 = load i32, i32* @y.433
  %17 = sub i32 0, 1
  %18 = add i32 %15, %17
  %19 = sub i32 %15, 1
  %20 = mul i32 %15, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %16, 10
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1920394379, i32 -1172321636
  store i32 %40, i32* %10
  br label %157

; <label>:41:                                     ; preds = %11
  %42 = call zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIxxEEneERKS2_(%"struct.std::_Rb_tree_const_iterator"* %4, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %5) #3
  store i1 %42, i1* %3
  %43 = load i32, i32* @x.432
  %44 = load i32, i32* @y.433
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -2024951097, i32 -1172321636
  store i32 %68, i32* %10
  br label %157

; <label>:69:                                     ; preds = %11
  %70 = load volatile i1, i1* %3
  %71 = select i1 %70, i32 -934192706, i32 -1296610624
  store i32 %71, i32* %10
  br label %157

; <label>:72:                                     ; preds = %11
  %73 = load i32, i32* @x.432
  %74 = load i32, i32* @y.433
  %75 = add i32 %73, 875286336
  %76 = sub i32 %75, 1
  %77 = sub i32 %76, 875286336
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = and i1 %81, %82
  %84 = xor i1 %81, %82
  %85 = or i1 %83, %84
  %86 = or i1 %81, %82
  %87 = select i1 %85, i32 -1271123403, i32 656801574
  store i32 %87, i32* %10
  br label %157

; <label>:88:                                     ; preds = %11
  %89 = call dereferenceable(8) %"struct.std::_Rb_tree_const_iterator"* @_ZNSt23_Rb_tree_const_iteratorISt4pairIxxEEppEv(%"struct.std::_Rb_tree_const_iterator"* %4) #3
  %90 = load i64, i64* %7, align 8
  %91 = sub i64 0, %90
  %92 = sub i64 0, 1
  %93 = add i64 %91, %92
  %94 = sub i64 0, %93
  %95 = add nsw i64 %90, 1
  store i64 %94, i64* %7, align 8
  %96 = load i32, i32* @x.432
  %97 = load i32, i32* @y.433
  %98 = add i32 %96, -1326397094
  %99 = sub i32 %98, 1
  %100 = sub i32 %99, -1326397094
  %101 = sub i32 %96, 1
  %102 = mul i32 %96, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %97, 10
  %106 = and i1 %104, %105
  %107 = xor i1 %104, %105
  %108 = or i1 %106, %107
  %109 = or i1 %104, %105
  %110 = select i1 %108, i32 1960984680, i32 656801574
  store i32 %110, i32* %10
  br label %157

; <label>:111:                                    ; preds = %11
  store i32 -1775238466, i32* %10
  br label %157

; <label>:112:                                    ; preds = %11
  %113 = load i64, i64* %7, align 8
  ret i64 %113

; <label>:114:                                    ; preds = %11
  %115 = call zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIxxEEneERKS2_(%"struct.std::_Rb_tree_const_iterator"* %4, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %5) #3
  store i32 -1920394379, i32* %10
  br label %157

; <label>:116:                                    ; preds = %11
  %117 = call dereferenceable(8) %"struct.std::_Rb_tree_const_iterator"* @_ZNSt23_Rb_tree_const_iteratorISt4pairIxxEEppEv(%"struct.std::_Rb_tree_const_iterator"* %4) #3
  %118 = load i64, i64* %7, align 8
  %119 = sub i64 0, 7941209466433241207
  %120 = sub i64 %119, %118
  %121 = add i64 %120, 7941209466433241207
  %122 = sub i64 0, %118
  %123 = sub i64 0, 1
  %124 = sub i64 %121, %123
  %125 = add i64 %121, 1
  %126 = shl i64 %118, 1
  %127 = sub i64 %118, 3605452579750900008
  %128 = sub i64 %127, 1
  %129 = add i64 %128, 3605452579750900008
  %130 = sub i64 %118, 1
  %131 = mul i64 %129, 1
  %132 = sub i64 0, 1
  %133 = add i64 %118, %132
  %134 = sub i64 %118, 1
  %135 = mul i64 %133, 1
  %136 = shl i64 %118, 1
  %137 = sub i64 0, %118
  %138 = add i64 0, %137
  %139 = sub i64 0, %118
  %140 = sub i64 0, 1
  %141 = sub i64 %138, %140
  %142 = add i64 %138, 1
  %143 = add i64 %118, -4276576245822814071
  %144 = sub i64 %143, 1
  %145 = sub i64 %144, -4276576245822814071
  %146 = sub i64 %118, 1
  %147 = mul i64 %145, 1
  %148 = sub i64 %118, 4877027149874542960
  %149 = sub i64 %148, 1
  %150 = add i64 %149, 4877027149874542960
  %151 = sub i64 %118, 1
  %152 = mul i64 %150, 1
  %153 = add i64 %118, 697023847428680438
  %154 = add i64 %153, 1
  %155 = sub i64 %154, 697023847428680438
  %156 = add nsw i64 %118, 1
  store i64 %155, i64* %7, align 8
  store i32 -1271123403, i32* %10
  br label %157

; <label>:157:                                    ; preds = %116, %114, %111, %88, %72, %69, %41, %14, %13
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt19__iterator_categoryISt23_Rb_tree_const_iteratorISt4pairIxxEEENSt15iterator_traitsIT_E17iterator_categoryERKS5_(%"struct.std::_Rb_tree_const_iterator"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::bidirectional_iterator_tag", align 1
  %3 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt9__advanceISt23_Rb_tree_const_iteratorISt4pairIxxEElEvRT_T0_St26bidirectional_iterator_tag(%"struct.std::_Rb_tree_const_iterator"* dereferenceable(8), i64) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i64
  %6 = alloca %"struct.std::bidirectional_iterator_tag", align 1
  %7 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %7, align 8
  store i64 %1, i64* %8, align 8
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %5
  %10 = alloca i32
  store i32 344947134, i32* %10
  br label %11

; <label>:11:                                     ; preds = %2, %274
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 344947134, label %14
    i32 886578094, label %18
    i32 865680234, label %19
    i32 366048949, label %47
    i32 353825722, label %81
    i32 1116351584, label %84
    i32 -601683638, label %111
    i32 -1200804379, label %141
    i32 1350112936, label %142
    i32 421089355, label %143
    i32 -1783971455, label %158
    i32 1963934823, label %174
    i32 -1863506149, label %175
    i32 -1333441363, label %202
    i32 -2026464289, label %224
    i32 -2018948491, label %227
    i32 1167948591, label %230
    i32 618853091, label %231
    i32 1564984419, label %232
    i32 1246177866, label %240
    i32 -178163672, label %243
    i32 1947152879, label %244
  ]

; <label>:13:                                     ; preds = %11
  br label %274

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %5
  %16 = icmp sgt i64 %15, 0
  %17 = select i1 %16, i32 886578094, i32 421089355
  store i32 %17, i32* %10
  br label %274

; <label>:18:                                     ; preds = %11
  store i32 865680234, i32* %10
  br label %274

; <label>:19:                                     ; preds = %11
  %20 = load i32, i32* @x.436
  %21 = load i32, i32* @y.437
  %22 = add i32 %20, 1654909013
  %23 = sub i32 %22, 1
  %24 = sub i32 %23, 1654909013
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 true, true
  %33 = and i1 %30, true
  %34 = and i1 %28, %32
  %35 = and i1 %31, true
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 true, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 366048949, i32 1564984419
  store i32 %46, i32* %10
  br label %274

; <label>:47:                                     ; preds = %11
  %48 = load i64, i64* %8, align 8
  %49 = add i64 %48, 4005309156320618483
  %50 = add i64 %49, -1
  %51 = sub i64 %50, 4005309156320618483
  %52 = add nsw i64 %48, -1
  store i64 %51, i64* %8, align 8
  %53 = icmp ne i64 %48, 0
  store i1 %53, i1* %4
  %54 = load i32, i32* @x.436
  %55 = load i32, i32* @y.437
  %56 = add i32 %54, -846524113
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, -846524113
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 true, true
  %67 = and i1 %64, true
  %68 = and i1 %62, %66
  %69 = and i1 %65, true
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 true, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  %80 = select i1 %78, i32 353825722, i32 1564984419
  store i32 %80, i32* %10
  br label %274

; <label>:81:                                     ; preds = %11
  %82 = load volatile i1, i1* %4
  %83 = select i1 %82, i32 1116351584, i32 1350112936
  store i32 %83, i32* %10
  br label %274

; <label>:84:                                     ; preds = %11
  %85 = load i32, i32* @x.436
  %86 = load i32, i32* @y.437
  %87 = sub i32 0, 1
  %88 = add i32 %85, %87
  %89 = sub i32 %85, 1
  %90 = mul i32 %85, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %86, 10
  %94 = xor i1 %92, true
  %95 = xor i1 %93, true
  %96 = xor i1 false, true
  %97 = and i1 %94, false
  %98 = and i1 %92, %96
  %99 = and i1 %95, false
  %100 = and i1 %93, %96
  %101 = or i1 %97, %98
  %102 = or i1 %99, %100
  %103 = xor i1 %101, %102
  %104 = or i1 %94, %95
  %105 = xor i1 %104, true
  %106 = or i1 false, %96
  %107 = and i1 %105, %106
  %108 = or i1 %103, %107
  %109 = or i1 %92, %93
  %110 = select i1 %108, i32 -601683638, i32 1246177866
  store i32 %110, i32* %10
  br label %274

; <label>:111:                                    ; preds = %11
  %112 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %7, align 8
  %113 = call dereferenceable(8) %"struct.std::_Rb_tree_const_iterator"* @_ZNSt23_Rb_tree_const_iteratorISt4pairIxxEEppEv(%"struct.std::_Rb_tree_const_iterator"* %112) #3
  %114 = load i32, i32* @x.436
  %115 = load i32, i32* @y.437
  %116 = add i32 %114, -691476697
  %117 = sub i32 %116, 1
  %118 = sub i32 %117, -691476697
  %119 = sub i32 %114, 1
  %120 = mul i32 %114, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %115, 10
  %124 = xor i1 %122, true
  %125 = xor i1 %123, true
  %126 = xor i1 true, true
  %127 = and i1 %124, true
  %128 = and i1 %122, %126
  %129 = and i1 %125, true
  %130 = and i1 %123, %126
  %131 = or i1 %127, %128
  %132 = or i1 %129, %130
  %133 = xor i1 %131, %132
  %134 = or i1 %124, %125
  %135 = xor i1 %134, true
  %136 = or i1 true, %126
  %137 = and i1 %135, %136
  %138 = or i1 %133, %137
  %139 = or i1 %122, %123
  %140 = select i1 %138, i32 -1200804379, i32 1246177866
  store i32 %140, i32* %10
  br label %274

; <label>:141:                                    ; preds = %11
  store i32 865680234, i32* %10
  br label %274

; <label>:142:                                    ; preds = %11
  store i32 618853091, i32* %10
  br label %274

; <label>:143:                                    ; preds = %11
  %144 = load i32, i32* @x.436
  %145 = load i32, i32* @y.437
  %146 = sub i32 0, 1
  %147 = add i32 %144, %146
  %148 = sub i32 %144, 1
  %149 = mul i32 %144, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %145, 10
  %153 = and i1 %151, %152
  %154 = xor i1 %151, %152
  %155 = or i1 %153, %154
  %156 = or i1 %151, %152
  %157 = select i1 %155, i32 -1783971455, i32 -178163672
  store i32 %157, i32* %10
  br label %274

; <label>:158:                                    ; preds = %11
  %159 = load i32, i32* @x.436
  %160 = load i32, i32* @y.437
  %161 = add i32 %159, 113037404
  %162 = sub i32 %161, 1
  %163 = sub i32 %162, 113037404
  %164 = sub i32 %159, 1
  %165 = mul i32 %159, %163
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %160, 10
  %169 = and i1 %167, %168
  %170 = xor i1 %167, %168
  %171 = or i1 %169, %170
  %172 = or i1 %167, %168
  %173 = select i1 %171, i32 1963934823, i32 -178163672
  store i32 %173, i32* %10
  br label %274

; <label>:174:                                    ; preds = %11
  store i32 -1863506149, i32* %10
  br label %274

; <label>:175:                                    ; preds = %11
  %176 = load i32, i32* @x.436
  %177 = load i32, i32* @y.437
  %178 = sub i32 0, 1
  %179 = add i32 %176, %178
  %180 = sub i32 %176, 1
  %181 = mul i32 %176, %179
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %177, 10
  %185 = xor i1 %183, true
  %186 = xor i1 %184, true
  %187 = xor i1 true, true
  %188 = and i1 %185, true
  %189 = and i1 %183, %187
  %190 = and i1 %186, true
  %191 = and i1 %184, %187
  %192 = or i1 %188, %189
  %193 = or i1 %190, %191
  %194 = xor i1 %192, %193
  %195 = or i1 %185, %186
  %196 = xor i1 %195, true
  %197 = or i1 true, %187
  %198 = and i1 %196, %197
  %199 = or i1 %194, %198
  %200 = or i1 %183, %184
  %201 = select i1 %199, i32 -1333441363, i32 1947152879
  store i32 %201, i32* %10
  br label %274

; <label>:202:                                    ; preds = %11
  %203 = load i64, i64* %8, align 8
  %204 = add i64 %203, 7211498233720061859
  %205 = add i64 %204, 1
  %206 = sub i64 %205, 7211498233720061859
  %207 = add nsw i64 %203, 1
  store i64 %206, i64* %8, align 8
  %208 = icmp ne i64 %203, 0
  store i1 %208, i1* %3
  %209 = load i32, i32* @x.436
  %210 = load i32, i32* @y.437
  %211 = add i32 %209, 70067262
  %212 = sub i32 %211, 1
  %213 = sub i32 %212, 70067262
  %214 = sub i32 %209, 1
  %215 = mul i32 %209, %213
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %210, 10
  %219 = and i1 %217, %218
  %220 = xor i1 %217, %218
  %221 = or i1 %219, %220
  %222 = or i1 %217, %218
  %223 = select i1 %221, i32 -2026464289, i32 1947152879
  store i32 %223, i32* %10
  br label %274

; <label>:224:                                    ; preds = %11
  %225 = load volatile i1, i1* %3
  %226 = select i1 %225, i32 -2018948491, i32 1167948591
  store i32 %226, i32* %10
  br label %274

; <label>:227:                                    ; preds = %11
  %228 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %7, align 8
  %229 = call dereferenceable(8) %"struct.std::_Rb_tree_const_iterator"* @_ZNSt23_Rb_tree_const_iteratorISt4pairIxxEEmmEv(%"struct.std::_Rb_tree_const_iterator"* %228) #3
  store i32 -1863506149, i32* %10
  br label %274

; <label>:230:                                    ; preds = %11
  store i32 618853091, i32* %10
  br label %274

; <label>:231:                                    ; preds = %11
  ret void

; <label>:232:                                    ; preds = %11
  %233 = load i64, i64* %8, align 8
  %234 = shl i64 %233, -1
  %235 = add i64 %233, 3850452267866242871
  %236 = add i64 %235, -1
  %237 = sub i64 %236, 3850452267866242871
  %238 = add nsw i64 %233, -1
  store i64 %237, i64* %8, align 8
  %239 = icmp ne i64 %233, 0
  store i32 366048949, i32* %10
  br label %274

; <label>:240:                                    ; preds = %11
  %241 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %7, align 8
  %242 = call dereferenceable(8) %"struct.std::_Rb_tree_const_iterator"* @_ZNSt23_Rb_tree_const_iteratorISt4pairIxxEEppEv(%"struct.std::_Rb_tree_const_iterator"* %241) #3
  store i32 -601683638, i32* %10
  br label %274

; <label>:243:                                    ; preds = %11
  store i32 -1783971455, i32* %10
  br label %274

; <label>:244:                                    ; preds = %11
  %245 = load i64, i64* %8, align 8
  %246 = sub i64 0, 1
  %247 = add i64 %245, %246
  %248 = sub i64 %245, 1
  %249 = mul i64 %247, 1
  %250 = add i64 %245, -4871371786432579270
  %251 = sub i64 %250, 1
  %252 = sub i64 %251, -4871371786432579270
  %253 = sub i64 %245, 1
  %254 = mul i64 %252, 1
  %255 = sub i64 0, 1
  %256 = add i64 %245, %255
  %257 = sub i64 %245, 1
  %258 = mul i64 %256, 1
  %259 = add i64 %245, 8668459012650994565
  %260 = sub i64 %259, 1
  %261 = sub i64 %260, 8668459012650994565
  %262 = sub i64 %245, 1
  %263 = mul i64 %261, 1
  %264 = sub i64 0, 1
  %265 = add i64 %245, %264
  %266 = sub i64 %245, 1
  %267 = mul i64 %265, 1
  %268 = shl i64 %245, 1
  %269 = sub i64 %245, 6155011048112919753
  %270 = add i64 %269, 1
  %271 = add i64 %270, 6155011048112919753
  %272 = add nsw i64 %245, 1
  store i64 %271, i64* %8, align 8
  %273 = icmp ne i64 %245, 0
  store i32 -1333441363, i32* %10
  br label %274

; <label>:274:                                    ; preds = %244, %243, %240, %232, %230, %227, %224, %202, %175, %174, %158, %143, %142, %141, %111, %84, %81, %47, %19, %18, %14, %13
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_const_iterator"* @_ZNSt23_Rb_tree_const_iteratorISt4pairIxxEEmmEv(%"struct.std::_Rb_tree_const_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %5) #15
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_const_iterator"* %3
}

; Function Attrs: nounwind readonly
declare %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #13

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZStltIxxEbRKSt4pairIT_T0_ES5_(%"struct.std::pair"* dereferenceable(16), %"struct.std::pair"* dereferenceable(16)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"struct.std::pair"*, align 8
  %8 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %7, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %8, align 8
  %9 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %10 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %9, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %6
  %12 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  %13 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %12, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %5
  %15 = alloca i32
  store i32 502489300, i32* %15
  %16 = alloca i1
  %17 = alloca i1
  br label %18

; <label>:18:                                     ; preds = %2, %146
  %19 = load i32, i32* %15
  switch i32 %19, label %20 [
    i32 502489300, label %21
    i32 1458151139, label %26
    i32 1650245422, label %42
    i32 -703289055, label %77
    i32 -398952376, label %80
    i32 308907515, label %88
    i32 -1653449499, label %90
    i32 -1505003592, label %107
    i32 -1663908875, label %135
    i32 1303589739, label %137
    i32 1879835624, label %145
  ]

; <label>:20:                                     ; preds = %18
  br label %146

; <label>:21:                                     ; preds = %18
  %22 = load volatile i64, i64* %6
  %23 = load volatile i64, i64* %5
  %24 = icmp slt i64 %22, %23
  %25 = select i1 %24, i32 -1653449499, i32 1458151139
  store i32 %25, i32* %15
  store i1 true, i1* %17
  br label %146

; <label>:26:                                     ; preds = %18
  %27 = load i32, i32* @x.440
  %28 = load i32, i32* @y.441
  %29 = add i32 %27, 997093617
  %30 = sub i32 %29, 1
  %31 = sub i32 %30, 997093617
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  %41 = select i1 %39, i32 1650245422, i32 1303589739
  store i32 %41, i32* %15
  br label %146

; <label>:42:                                     ; preds = %18
  %43 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  %44 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %43, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %47 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %46, i32 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = icmp slt i64 %45, %48
  store i1 %49, i1* %4
  %50 = load i32, i32* @x.440
  %51 = load i32, i32* @y.441
  %52 = sub i32 %50, 309790564
  %53 = sub i32 %52, 1
  %54 = add i32 %53, 309790564
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -703289055, i32 1303589739
  store i32 %76, i32* %15
  br label %146

; <label>:77:                                     ; preds = %18
  %78 = load volatile i1, i1* %4
  %79 = select i1 %78, i32 308907515, i32 -398952376
  store i32 %79, i32* %15
  store i1 false, i1* %16
  br label %146

; <label>:80:                                     ; preds = %18
  %81 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %82 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %81, i32 0, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  %85 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %84, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = icmp slt i64 %83, %86
  store i32 308907515, i32* %15
  store i1 %87, i1* %16
  br label %146

; <label>:88:                                     ; preds = %18
  %89 = load i1, i1* %16
  store i32 -1653449499, i32* %15
  store i1 %89, i1* %17
  br label %146

; <label>:90:                                     ; preds = %18
  %91 = load i1, i1* %17
  store i1 %91, i1* %3
  %92 = load i32, i32* @x.440
  %93 = load i32, i32* @y.441
  %94 = add i32 %92, 2127774474
  %95 = sub i32 %94, 1
  %96 = sub i32 %95, 2127774474
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  %106 = select i1 %104, i32 -1505003592, i32 1879835624
  store i32 %106, i32* %15
  br label %146

; <label>:107:                                    ; preds = %18
  %108 = load i32, i32* @x.440
  %109 = load i32, i32* @y.441
  %110 = add i32 %108, 105101031
  %111 = sub i32 %110, 1
  %112 = sub i32 %111, 105101031
  %113 = sub i32 %108, 1
  %114 = mul i32 %108, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %109, 10
  %118 = xor i1 %116, true
  %119 = xor i1 %117, true
  %120 = xor i1 true, true
  %121 = and i1 %118, true
  %122 = and i1 %116, %120
  %123 = and i1 %119, true
  %124 = and i1 %117, %120
  %125 = or i1 %121, %122
  %126 = or i1 %123, %124
  %127 = xor i1 %125, %126
  %128 = or i1 %118, %119
  %129 = xor i1 %128, true
  %130 = or i1 true, %120
  %131 = and i1 %129, %130
  %132 = or i1 %127, %131
  %133 = or i1 %116, %117
  %134 = select i1 %132, i32 -1663908875, i32 1879835624
  store i32 %134, i32* %15
  br label %146

; <label>:135:                                    ; preds = %18
  %136 = load volatile i1, i1* %3
  ret i1 %136

; <label>:137:                                    ; preds = %18
  %138 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  %139 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %138, i32 0, i32 0
  %140 = load i64, i64* %139, align 8
  %141 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %142 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %141, i32 0, i32 0
  %143 = load i64, i64* %142, align 8
  %144 = icmp slt i64 %140, %143
  store i32 1650245422, i32* %15
  br label %146

; <label>:145:                                    ; preds = %18
  store i32 -1505003592, i32* %15
  br label %146

; <label>:146:                                    ; preds = %145, %137, %107, %90, %88, %80, %77, %42, %26, %21, %20
  br label %18
}

; Function Attrs: nounwind readonly
declare %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #13

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EEC2Ev(%"struct.std::_Vector_base.15"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.442
  %5 = load i32, i32* @y.443
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1029585134, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %73
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1029585134, label %17
    i32 -1033533730, label %37
    i32 1647830850, label %68
    i32 -1258836348, label %69
  ]

; <label>:16:                                     ; preds = %14
  br label %73

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -1033533730, i32 -1258836348
  store i32 %36, i32* %13
  br label %73

; <label>:37:                                     ; preds = %14
  %38 = alloca %"struct.std::_Vector_base.15"*, align 8
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %38, align 8
  %39 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %38, align 8
  %40 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %39, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %40)
  %41 = load i32, i32* @x.442
  %42 = load i32, i32* @y.443
  %43 = sub i32 %41, 2044178090
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 2044178090
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 1647830850, i32 -1258836348
  store i32 %67, i32* %13
  br label %73

; <label>:68:                                     ; preds = %14
  ret void

; <label>:69:                                     ; preds = %14
  %70 = alloca %"struct.std::_Vector_base.15"*, align 8
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %70, align 8
  %71 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %71, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %72)
  store i32 -1033533730, i32* %13
  br label %73

; <label>:73:                                     ; preds = %69, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %3 to %"class.std::allocator.16"*
  call void @_ZNSaISt4pairIxxEEC2Ev(%"class.std::allocator.16"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %3, i32 0, i32 0
  store %"struct.std::pair"* null, %"struct.std::pair"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %3, i32 0, i32 1
  store %"struct.std::pair"* null, %"struct.std::pair"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %3, i32 0, i32 2
  store %"struct.std::pair"* null, %"struct.std::pair"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt4pairIxxEEC2Ev(%"class.std::allocator.16"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %2, align 8
  %3 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %2, align 8
  %4 = bitcast %"class.std::allocator.16"* %3 to %"class.__gnu_cxx::new_allocator.17"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEEC2Ev(%"class.__gnu_cxx::new_allocator.17"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEEC2Ev(%"class.__gnu_cxx::new_allocator.17"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt4pairIxxES1_EvT_S3_RSaIT0_E(%"struct.std::pair"*, %"struct.std::pair"*, %"class.std::allocator.16"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.450
  %7 = load i32, i32* @y.451
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -632046231, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -632046231, label %19
    i32 1378657072, label %39
    i32 600715366, label %60
    i32 2017866041, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1378657072, i32 2017866041
  store i32 %38, i32* %15
  br label %67

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::pair"*, align 8
  %41 = alloca %"struct.std::pair"*, align 8
  %42 = alloca %"class.std::allocator.16"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %40, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %41, align 8
  store %"class.std::allocator.16"* %2, %"class.std::allocator.16"** %42, align 8
  %43 = load %"struct.std::pair"*, %"struct.std::pair"** %40, align 8
  %44 = load %"struct.std::pair"*, %"struct.std::pair"** %41, align 8
  call void @_ZSt8_DestroyIPSt4pairIxxEEvT_S3_(%"struct.std::pair"* %43, %"struct.std::pair"* %44)
  %45 = load i32, i32* @x.450
  %46 = load i32, i32* @y.451
  %47 = sub i32 %45, 345403484
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 345403484
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 600715366, i32 2017866041
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::pair"*, align 8
  %63 = alloca %"struct.std::pair"*, align 8
  %64 = alloca %"class.std::allocator.16"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %62, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %63, align 8
  store %"class.std::allocator.16"* %2, %"class.std::allocator.16"** %64, align 8
  %65 = load %"struct.std::pair"*, %"struct.std::pair"** %62, align 8
  %66 = load %"struct.std::pair"*, %"struct.std::pair"** %63, align 8
  call void @_ZSt8_DestroyIPSt4pairIxxEEvT_S3_(%"struct.std::pair"* %65, %"struct.std::pair"* %66)
  store i32 1378657072, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.15"*, align 8
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %2, align 8
  %3 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %4 to %"class.std::allocator.16"*
  ret %"class.std::allocator.16"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EED2Ev(%"struct.std::_Vector_base.15"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.15"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %2, align 8
  %5 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"struct.std::pair"*, %"struct.std::pair"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"struct.std::pair"*, %"struct.std::pair"** %13, align 8
  %15 = ptrtoint %"struct.std::pair"* %11 to i64
  %16 = ptrtoint %"struct.std::pair"* %14 to i64
  %17 = sub i64 %15, 1302733220224357881
  %18 = sub i64 %17, %16
  %19 = add i64 %18, 1302733220224357881
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 16
  invoke void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.15"* %5, %"struct.std::pair"* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %28) #3
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %30) #12
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt4pairIxxEEvT_S3_(%"struct.std::pair"*, %"struct.std::pair"*) #0 comdat {
  %3 = alloca %"struct.std::pair"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %"struct.std::pair"*, %"struct.std::pair"** %3, align 8
  %6 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPSt4pairIxxEEEvT_S5_(%"struct.std::pair"* %5, %"struct.std::pair"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPSt4pairIxxEEEvT_S5_(%"struct.std::pair"*, %"struct.std::pair"*) #4 comdat align 2 {
  %3 = alloca %"struct.std::pair"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.15"*, %"struct.std::pair"*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.std::pair"*
  %5 = alloca %"struct.std::_Vector_base.15"*
  %6 = alloca %"struct.std::_Vector_base.15"*, align 8
  %7 = alloca %"struct.std::pair"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %6, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %6, align 8
  store %"struct.std::_Vector_base.15"* %9, %"struct.std::_Vector_base.15"** %5
  %10 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  store %"struct.std::pair"* %10, %"struct.std::pair"** %4
  %11 = alloca i32
  store i32 -224951569, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %74
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -224951569, label %15
    i32 -246412318, label %19
    i32 -781565666, label %34
    i32 847590038, label %66
    i32 1832266133, label %67
    i32 46226502, label %68
  ]

; <label>:14:                                     ; preds = %12
  br label %74

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %4
  %17 = icmp ne %"struct.std::pair"* %16, null
  %18 = select i1 %17, i32 -246412318, i32 1832266133
  store i32 %18, i32* %11
  br label %74

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.460
  %21 = load i32, i32* @y.461
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  %33 = select i1 %31, i32 -781565666, i32 46226502
  store i32 %33, i32* %11
  br label %74

; <label>:34:                                     ; preds = %12
  %35 = load volatile %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %5
  %36 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %35, i32 0, i32 0
  %37 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %36 to %"class.std::allocator.16"*
  %38 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %39 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt4pairIxxEEE10deallocateERS2_PS1_m(%"class.std::allocator.16"* dereferenceable(1) %37, %"struct.std::pair"* %38, i64 %39)
  %40 = load i32, i32* @x.460
  %41 = load i32, i32* @y.461
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 847590038, i32 46226502
  store i32 %65, i32* %11
  br label %74

; <label>:66:                                     ; preds = %12
  store i32 1832266133, i32* %11
  br label %74

; <label>:67:                                     ; preds = %12
  ret void

; <label>:68:                                     ; preds = %12
  %69 = load volatile %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %5
  %70 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %69, i32 0, i32 0
  %71 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %70 to %"class.std::allocator.16"*
  %72 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %73 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt4pairIxxEEE10deallocateERS2_PS1_m(%"class.std::allocator.16"* dereferenceable(1) %71, %"struct.std::pair"* %72, i64 %73)
  store i32 -781565666, i32* %11
  br label %74

; <label>:74:                                     ; preds = %68, %66, %34, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.462
  %5 = load i32, i32* @y.463
  %6 = sub i32 %4, 819033932
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 819033932
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 819002098, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 819002098, label %18
    i32 -1947338724, label %26
    i32 -1178719464, label %57
    i32 1070887304, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1947338724, i32 1070887304
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %27, align 8
  %28 = load %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %27, align 8
  %29 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %28 to %"class.std::allocator.16"*
  call void @_ZNSaISt4pairIxxEED2Ev(%"class.std::allocator.16"* %29) #3
  %30 = load i32, i32* @x.462
  %31 = load i32, i32* @y.463
  %32 = sub i32 %30, 267983660
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 267983660
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -1178719464, i32 1070887304
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %59, align 8
  %60 = load %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"** %59, align 8
  %61 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %60 to %"class.std::allocator.16"*
  call void @_ZNSaISt4pairIxxEED2Ev(%"class.std::allocator.16"* %61) #3
  store i32 -1947338724, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIxxEEE10deallocateERS2_PS1_m(%"class.std::allocator.16"* dereferenceable(1), %"struct.std::pair"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.464
  %7 = load i32, i32* @y.465
  %8 = sub i32 %6, -1188619054
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1188619054
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 716175864, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %60
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 716175864, label %20
    i32 -1042890123, label %28
    i32 440576103, label %51
    i32 1262451139, label %52
  ]

; <label>:19:                                     ; preds = %17
  br label %60

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1042890123, i32 1262451139
  store i32 %27, i32* %16
  br label %60

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.16"*, align 8
  %30 = alloca %"struct.std::pair"*, align 8
  %31 = alloca i64, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %29, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %29, align 8
  %33 = bitcast %"class.std::allocator.16"* %32 to %"class.__gnu_cxx::new_allocator.17"*
  %34 = load %"struct.std::pair"*, %"struct.std::pair"** %30, align 8
  %35 = load i64, i64* %31, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.17"* %33, %"struct.std::pair"* %34, i64 %35)
  %36 = load i32, i32* @x.464
  %37 = load i32, i32* @y.465
  %38 = add i32 %36, -1636912262
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, -1636912262
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 440576103, i32 1262451139
  store i32 %50, i32* %16
  br label %60

; <label>:51:                                     ; preds = %17
  ret void

; <label>:52:                                     ; preds = %17
  %53 = alloca %"class.std::allocator.16"*, align 8
  %54 = alloca %"struct.std::pair"*, align 8
  %55 = alloca i64, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %53, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %54, align 8
  store i64 %2, i64* %55, align 8
  %56 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %53, align 8
  %57 = bitcast %"class.std::allocator.16"* %56 to %"class.__gnu_cxx::new_allocator.17"*
  %58 = load %"struct.std::pair"*, %"struct.std::pair"** %54, align 8
  %59 = load i64, i64* %55, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.17"* %57, %"struct.std::pair"* %58, i64 %59)
  store i32 -1042890123, i32* %16
  br label %60

; <label>:60:                                     ; preds = %52, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.17"*, %"struct.std::pair"*, i64) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.466
  %7 = load i32, i32* @y.467
  %8 = add i32 %6, -1237743158
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1237743158
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1203379324, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1203379324, label %20
    i32 1066512263, label %40
    i32 1550875730, label %62
    i32 -906587078, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1066512263, i32 -906587078
  store i32 %39, i32* %16
  br label %70

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  %42 = alloca %"struct.std::pair"*, align 8
  %43 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %41, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %41, align 8
  %45 = load %"struct.std::pair"*, %"struct.std::pair"** %42, align 8
  %46 = bitcast %"struct.std::pair"* %45 to i8*
  call void @_ZdlPv(i8* %46) #3
  %47 = load i32, i32* @x.466
  %48 = load i32, i32* @y.467
  %49 = sub i32 %47, -704948772
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -704948772
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 1550875730, i32 -906587078
  store i32 %61, i32* %16
  br label %70

; <label>:62:                                     ; preds = %17
  ret void

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  %65 = alloca %"struct.std::pair"*, align 8
  %66 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %64, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %64, align 8
  %68 = load %"struct.std::pair"*, %"struct.std::pair"** %65, align 8
  %69 = bitcast %"struct.std::pair"* %68 to i8*
  call void @_ZdlPv(i8* %69) #3
  store i32 1066512263, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt4pairIxxEED2Ev(%"class.std::allocator.16"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %2, align 8
  %3 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %2, align 8
  %4 = bitcast %"class.std::allocator.16"* %3 to %"class.__gnu_cxx::new_allocator.17"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEED2Ev(%"class.__gnu_cxx::new_allocator.17"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEED2Ev(%"class.__gnu_cxx::new_allocator.17"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"* @_ZNKSt13_Rb_tree_nodeISt4pairIxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node.21"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  store %"struct.std::_Rb_tree_node.21"* %0, %"struct.std::_Rb_tree_node.21"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node.21", %"struct.std::_Rb_tree_node.21"* %3, i32 0, i32 1
  %5 = call %"struct.std::pair"* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIxxEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.22"* %4) #3
  ret %"struct.std::pair"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIxxEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.22"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf.22"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.22"* %0, %"struct.__gnu_cxx::__aligned_membuf.22"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf.22"*, %"struct.__gnu_cxx::__aligned_membuf.22"** %2, align 8
  %4 = call i8* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIxxEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf.22"* %3) #3
  %5 = bitcast i8* %4 to %"struct.std::pair"*
  ret %"struct.std::pair"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIxxEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf.22"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf.22"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.22"* %0, %"struct.__gnu_cxx::__aligned_membuf.22"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf.22"*, %"struct.__gnu_cxx::__aligned_membuf.22"** %2, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf.22", %"struct.__gnu_cxx::__aligned_membuf.22"* %3, i32 0, i32 0
  %5 = bitcast [16 x i8]* %4 to i8*
  ret i8* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIxxEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.16"* dereferenceable(1), %"struct.std::pair"*, %"struct.std::pair"* dereferenceable(16)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.16"*, align 8
  %5 = alloca %"struct.std::pair"*, align 8
  %6 = alloca %"struct.std::pair"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %4, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %5, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %6, align 8
  %7 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %4, align 8
  %8 = bitcast %"class.std::allocator.16"* %7 to %"class.__gnu_cxx::new_allocator.17"*
  %9 = load %"struct.std::pair"*, %"struct.std::pair"** %5, align 8
  %10 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %11 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIxxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::pair"* dereferenceable(16) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE9constructIS2_JRKS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.17"* %8, %"struct.std::pair"* %9, %"struct.std::pair"* dereferenceable(16) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIxxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::pair"* dereferenceable(16)) #4 comdat {
  %2 = alloca %"struct.std::pair"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.480
  %6 = load i32, i32* @y.481
  %7 = add i32 %5, -1169129837
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1169129837
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1973945243, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %50
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1973945243, label %19
    i32 -485148172, label %27
    i32 -249899501, label %45
    i32 -1898227693, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %50

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -485148172, i32 -1898227693
  store i32 %26, i32* %15
  br label %50

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %28, align 8
  %29 = load %"struct.std::pair"*, %"struct.std::pair"** %28, align 8
  store %"struct.std::pair"* %29, %"struct.std::pair"** %2
  %30 = load i32, i32* @x.480
  %31 = load i32, i32* @y.481
  %32 = add i32 %30, -1787645276
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -1787645276
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -249899501, i32 -1898227693
  store i32 %44, i32* %15
  br label %50

; <label>:45:                                     ; preds = %16
  %46 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %2
  ret %"struct.std::pair"* %46

; <label>:47:                                     ; preds = %16
  %48 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %48, align 8
  %49 = load %"struct.std::pair"*, %"struct.std::pair"** %48, align 8
  store i32 -485148172, i32* %15
  br label %50

; <label>:50:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIxxESaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_(%"class.std::vector.14"*, %"struct.std::pair"* dereferenceable(16)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.14"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.std::pair"*, align 8
  %7 = alloca %"struct.std::pair"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %10 = load %"class.std::vector.14"*, %"class.std::vector.14"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.14"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.14"* %10 to %"struct.std::_Vector_base.15"*
  %13 = load i64, i64* %5, align 8
  %14 = call %"struct.std::pair"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.15"* %12, i64 %13)
  store %"struct.std::pair"* %14, %"struct.std::pair"** %6, align 8
  %15 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  store %"struct.std::pair"* %15, %"struct.std::pair"** %7, align 8
  %16 = bitcast %"class.std::vector.14"* %10 to %"struct.std::_Vector_base.15"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %17 to %"class.std::allocator.16"*
  %19 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %20 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector.14"* %10) #3
  %21 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %19, i64 %20
  %22 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %23 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIxxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::pair"* dereferenceable(16) %22) #3
  invoke void @_ZNSt16allocator_traitsISaISt4pairIxxEEE9constructIS1_JRKS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.16"* dereferenceable(1) %18, %"struct.std::pair"* %21, %"struct.std::pair"* dereferenceable(16) %23)
          to label %24 unwind label %40

; <label>:24:                                     ; preds = %2
  store %"struct.std::pair"* null, %"struct.std::pair"** %7, align 8
  %25 = bitcast %"class.std::vector.14"* %10 to %"struct.std::_Vector_base.15"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %26, i32 0, i32 0
  %28 = load %"struct.std::pair"*, %"struct.std::pair"** %27, align 8
  %29 = bitcast %"class.std::vector.14"* %10 to %"struct.std::_Vector_base.15"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %30, i32 0, i32 1
  %32 = load %"struct.std::pair"*, %"struct.std::pair"** %31, align 8
  %33 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %34 = bitcast %"class.std::vector.14"* %10 to %"struct.std::_Vector_base.15"*
  %35 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %34) #3
  %36 = invoke %"struct.std::pair"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt4pairIxxES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.std::pair"* %28, %"struct.std::pair"* %32, %"struct.std::pair"* %33, %"class.std::allocator.16"* dereferenceable(1) %35)
          to label %37 unwind label %40

; <label>:37:                                     ; preds = %24
  store %"struct.std::pair"* %36, %"struct.std::pair"** %7, align 8
  %38 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %39 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %38, i32 1
  store %"struct.std::pair"* %39, %"struct.std::pair"** %7, align 8
  br label %154

; <label>:40:                                     ; preds = %24, %2
  %41 = landingpad { i8*, i32 }
          catch i8* null
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %8, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %9, align 4
  br label %44

; <label>:44:                                     ; preds = %40
  %45 = load i8*, i8** %8, align 8
  %46 = call i8* @__cxa_begin_catch(i8* %45) #3
  %47 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %48 = icmp ne %"struct.std::pair"* %47, null
  br i1 %48, label %102, label %49

; <label>:49:                                     ; preds = %44
  %50 = load i32, i32* @x.482
  %51 = load i32, i32* @y.483
  %52 = sub i32 %50, 361880245
  %53 = sub i32 %52, 1
  %54 = add i32 %53, 361880245
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  br i1 %74, label %76, label %249

; <label>:76:                                     ; preds = %49, %249
  %77 = bitcast %"class.std::vector.14"* %10 to %"struct.std::_Vector_base.15"*
  %78 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %77, i32 0, i32 0
  %79 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %78 to %"class.std::allocator.16"*
  %80 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %81 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector.14"* %10) #3
  %82 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %80, i64 %81
  %83 = load i32, i32* @x.482
  %84 = load i32, i32* @y.483
  %85 = sub i32 0, 1
  %86 = add i32 %83, %85
  %87 = sub i32 %83, 1
  %88 = mul i32 %83, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %84, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  br i1 %94, label %96, label %249

; <label>:96:                                     ; preds = %76
  invoke void @_ZNSt16allocator_traitsISaISt4pairIxxEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.16"* dereferenceable(1) %79, %"struct.std::pair"* %82)
          to label %97 unwind label %98

; <label>:97:                                     ; preds = %96
  br label %108

; <label>:98:                                     ; preds = %152, %108, %102, %96
  %99 = landingpad { i8*, i32 }
          cleanup
  %100 = extractvalue { i8*, i32 } %99, 0
  store i8* %100, i8** %8, align 8
  %101 = extractvalue { i8*, i32 } %99, 1
  store i32 %101, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %153 unwind label %245

; <label>:102:                                    ; preds = %44
  %103 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %104 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %105 = bitcast %"class.std::vector.14"* %10 to %"struct.std::_Vector_base.15"*
  %106 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %105) #3
  invoke void @_ZSt8_DestroyIPSt4pairIxxES1_EvT_S3_RSaIT0_E(%"struct.std::pair"* %103, %"struct.std::pair"* %104, %"class.std::allocator.16"* dereferenceable(1) %106)
          to label %107 unwind label %98

; <label>:107:                                    ; preds = %102
  br label %108

; <label>:108:                                    ; preds = %107, %97
  %109 = bitcast %"class.std::vector.14"* %10 to %"struct.std::_Vector_base.15"*
  %110 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %111 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.15"* %109, %"struct.std::pair"* %110, i64 %111)
          to label %112 unwind label %98

; <label>:112:                                    ; preds = %108
  %113 = load i32, i32* @x.482
  %114 = load i32, i32* @y.483
  %115 = sub i32 0, 1
  %116 = add i32 %113, %115
  %117 = sub i32 %113, 1
  %118 = mul i32 %113, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %114, 10
  %122 = xor i1 %120, true
  %123 = xor i1 %121, true
  %124 = xor i1 false, true
  %125 = and i1 %122, false
  %126 = and i1 %120, %124
  %127 = and i1 %123, false
  %128 = and i1 %121, %124
  %129 = or i1 %125, %126
  %130 = or i1 %127, %128
  %131 = xor i1 %129, %130
  %132 = or i1 %122, %123
  %133 = xor i1 %132, true
  %134 = or i1 false, %124
  %135 = and i1 %133, %134
  %136 = or i1 %131, %135
  %137 = or i1 %120, %121
  br i1 %136, label %138, label %256

; <label>:138:                                    ; preds = %112, %256
  %139 = load i32, i32* @x.482
  %140 = load i32, i32* @y.483
  %141 = sub i32 0, 1
  %142 = add i32 %139, %141
  %143 = sub i32 %139, 1
  %144 = mul i32 %139, %142
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %140, 10
  %148 = and i1 %146, %147
  %149 = xor i1 %146, %147
  %150 = or i1 %148, %149
  %151 = or i1 %146, %147
  br i1 %150, label %152, label %256

; <label>:152:                                    ; preds = %138
  invoke void @__cxa_rethrow() #16
          to label %248 unwind label %98

; <label>:153:                                    ; preds = %98
  br label %240

; <label>:154:                                    ; preds = %37
  %155 = load i32, i32* @x.482
  %156 = load i32, i32* @y.483
  %157 = sub i32 %155, -1670773129
  %158 = sub i32 %157, 1
  %159 = add i32 %158, -1670773129
  %160 = sub i32 %155, 1
  %161 = mul i32 %155, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %156, 10
  %165 = and i1 %163, %164
  %166 = xor i1 %163, %164
  %167 = or i1 %165, %166
  %168 = or i1 %163, %164
  br i1 %167, label %169, label %257

; <label>:169:                                    ; preds = %154, %257
  %170 = bitcast %"class.std::vector.14"* %10 to %"struct.std::_Vector_base.15"*
  %171 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %170, i32 0, i32 0
  %172 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %171, i32 0, i32 0
  %173 = load %"struct.std::pair"*, %"struct.std::pair"** %172, align 8
  %174 = bitcast %"class.std::vector.14"* %10 to %"struct.std::_Vector_base.15"*
  %175 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %174, i32 0, i32 0
  %176 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %175, i32 0, i32 1
  %177 = load %"struct.std::pair"*, %"struct.std::pair"** %176, align 8
  %178 = bitcast %"class.std::vector.14"* %10 to %"struct.std::_Vector_base.15"*
  %179 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %178) #3
  call void @_ZSt8_DestroyIPSt4pairIxxES1_EvT_S3_RSaIT0_E(%"struct.std::pair"* %173, %"struct.std::pair"* %177, %"class.std::allocator.16"* dereferenceable(1) %179)
  %180 = bitcast %"class.std::vector.14"* %10 to %"struct.std::_Vector_base.15"*
  %181 = bitcast %"class.std::vector.14"* %10 to %"struct.std::_Vector_base.15"*
  %182 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %181, i32 0, i32 0
  %183 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %182, i32 0, i32 0
  %184 = load %"struct.std::pair"*, %"struct.std::pair"** %183, align 8
  %185 = bitcast %"class.std::vector.14"* %10 to %"struct.std::_Vector_base.15"*
  %186 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %185, i32 0, i32 0
  %187 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %186, i32 0, i32 2
  %188 = load %"struct.std::pair"*, %"struct.std::pair"** %187, align 8
  %189 = bitcast %"class.std::vector.14"* %10 to %"struct.std::_Vector_base.15"*
  %190 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %189, i32 0, i32 0
  %191 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %190, i32 0, i32 0
  %192 = load %"struct.std::pair"*, %"struct.std::pair"** %191, align 8
  %193 = ptrtoint %"struct.std::pair"* %188 to i64
  %194 = ptrtoint %"struct.std::pair"* %192 to i64
  %195 = sub i64 0, %194
  %196 = add i64 %193, %195
  %197 = sub i64 %193, %194
  %198 = sdiv exact i64 %196, 16
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.15"* %180, %"struct.std::pair"* %184, i64 %198)
  %199 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %200 = bitcast %"class.std::vector.14"* %10 to %"struct.std::_Vector_base.15"*
  %201 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %200, i32 0, i32 0
  %202 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %201, i32 0, i32 0
  store %"struct.std::pair"* %199, %"struct.std::pair"** %202, align 8
  %203 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %204 = bitcast %"class.std::vector.14"* %10 to %"struct.std::_Vector_base.15"*
  %205 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %204, i32 0, i32 0
  %206 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %205, i32 0, i32 1
  store %"struct.std::pair"* %203, %"struct.std::pair"** %206, align 8
  %207 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %208 = load i64, i64* %5, align 8
  %209 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %207, i64 %208
  %210 = bitcast %"class.std::vector.14"* %10 to %"struct.std::_Vector_base.15"*
  %211 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %210, i32 0, i32 0
  %212 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %211, i32 0, i32 2
  store %"struct.std::pair"* %209, %"struct.std::pair"** %212, align 8
  %213 = load i32, i32* @x.482
  %214 = load i32, i32* @y.483
  %215 = sub i32 %213, -8410238
  %216 = sub i32 %215, 1
  %217 = add i32 %216, -8410238
  %218 = sub i32 %213, 1
  %219 = mul i32 %213, %217
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %214, 10
  %223 = xor i1 %221, true
  %224 = xor i1 %222, true
  %225 = xor i1 false, true
  %226 = and i1 %223, false
  %227 = and i1 %221, %225
  %228 = and i1 %224, false
  %229 = and i1 %222, %225
  %230 = or i1 %226, %227
  %231 = or i1 %228, %229
  %232 = xor i1 %230, %231
  %233 = or i1 %223, %224
  %234 = xor i1 %233, true
  %235 = or i1 false, %225
  %236 = and i1 %234, %235
  %237 = or i1 %232, %236
  %238 = or i1 %221, %222
  br i1 %237, label %239, label %257

; <label>:239:                                    ; preds = %169
  ret void

; <label>:240:                                    ; preds = %153
  %241 = load i8*, i8** %8, align 8
  %242 = load i32, i32* %9, align 4
  %243 = insertvalue { i8*, i32 } undef, i8* %241, 0
  %244 = insertvalue { i8*, i32 } %243, i32 %242, 1
  resume { i8*, i32 } %244

; <label>:245:                                    ; preds = %98
  %246 = landingpad { i8*, i32 }
          catch i8* null
  %247 = extractvalue { i8*, i32 } %246, 0
  call void @__clang_call_terminate(i8* %247) #12
  unreachable

; <label>:248:                                    ; preds = %152
  unreachable

; <label>:249:                                    ; preds = %76, %49
  %250 = bitcast %"class.std::vector.14"* %10 to %"struct.std::_Vector_base.15"*
  %251 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %250, i32 0, i32 0
  %252 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %251 to %"class.std::allocator.16"*
  %253 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %254 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector.14"* %10) #3
  %255 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %253, i64 %254
  br label %76

; <label>:256:                                    ; preds = %138, %112
  br label %138

; <label>:257:                                    ; preds = %169, %154
  %258 = bitcast %"class.std::vector.14"* %10 to %"struct.std::_Vector_base.15"*
  %259 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %258, i32 0, i32 0
  %260 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %259, i32 0, i32 0
  %261 = load %"struct.std::pair"*, %"struct.std::pair"** %260, align 8
  %262 = bitcast %"class.std::vector.14"* %10 to %"struct.std::_Vector_base.15"*
  %263 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %262, i32 0, i32 0
  %264 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %263, i32 0, i32 1
  %265 = load %"struct.std::pair"*, %"struct.std::pair"** %264, align 8
  %266 = bitcast %"class.std::vector.14"* %10 to %"struct.std::_Vector_base.15"*
  %267 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %266) #3
  call void @_ZSt8_DestroyIPSt4pairIxxES1_EvT_S3_RSaIT0_E(%"struct.std::pair"* %261, %"struct.std::pair"* %265, %"class.std::allocator.16"* dereferenceable(1) %267)
  %268 = bitcast %"class.std::vector.14"* %10 to %"struct.std::_Vector_base.15"*
  %269 = bitcast %"class.std::vector.14"* %10 to %"struct.std::_Vector_base.15"*
  %270 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %269, i32 0, i32 0
  %271 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %270, i32 0, i32 0
  %272 = load %"struct.std::pair"*, %"struct.std::pair"** %271, align 8
  %273 = bitcast %"class.std::vector.14"* %10 to %"struct.std::_Vector_base.15"*
  %274 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %273, i32 0, i32 0
  %275 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %274, i32 0, i32 2
  %276 = load %"struct.std::pair"*, %"struct.std::pair"** %275, align 8
  %277 = bitcast %"class.std::vector.14"* %10 to %"struct.std::_Vector_base.15"*
  %278 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %277, i32 0, i32 0
  %279 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %278, i32 0, i32 0
  %280 = load %"struct.std::pair"*, %"struct.std::pair"** %279, align 8
  %281 = ptrtoint %"struct.std::pair"* %276 to i64
  %282 = ptrtoint %"struct.std::pair"* %280 to i64
  %283 = sub i64 0, %282
  %284 = add i64 %281, %283
  %285 = sub i64 %281, %282
  %286 = mul i64 %284, %282
  %287 = shl i64 %281, %282
  %288 = sub i64 %281, 564617872239740369
  %289 = sub i64 %288, %282
  %290 = add i64 %289, 564617872239740369
  %291 = sub i64 %281, %282
  %292 = mul i64 %290, %282
  %293 = sub i64 0, %282
  %294 = add i64 %281, %293
  %295 = sub i64 %281, %282
  %296 = mul i64 %294, %282
  %297 = shl i64 %281, %282
  %298 = sub i64 %281, -4980283956047793382
  %299 = sub i64 %298, %282
  %300 = add i64 %299, -4980283956047793382
  %301 = sub i64 %281, %282
  %302 = mul i64 %300, %282
  %303 = sub i64 0, %282
  %304 = add i64 %281, %303
  %305 = sub i64 %281, %282
  %306 = sub i64 0, %304
  %307 = add i64 0, %306
  %308 = sub i64 0, %304
  %309 = sub i64 0, 16
  %310 = sub i64 %307, %309
  %311 = add i64 %307, 16
  %312 = sub i64 0, -9184164159382470940
  %313 = sub i64 %312, %304
  %314 = add i64 %313, -9184164159382470940
  %315 = sub i64 0, %304
  %316 = add i64 %314, -7792300183976933614
  %317 = add i64 %316, 16
  %318 = sub i64 %317, -7792300183976933614
  %319 = add i64 %314, 16
  %320 = sub i64 0, -8490136189993770473
  %321 = sub i64 %320, %304
  %322 = add i64 %321, -8490136189993770473
  %323 = sub i64 0, %304
  %324 = sub i64 %322, 404430208862021308
  %325 = add i64 %324, 16
  %326 = add i64 %325, 404430208862021308
  %327 = add i64 %322, 16
  %328 = sdiv exact i64 %304, 16
  call void @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.15"* %268, %"struct.std::pair"* %272, i64 %328)
  %329 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %330 = bitcast %"class.std::vector.14"* %10 to %"struct.std::_Vector_base.15"*
  %331 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %330, i32 0, i32 0
  %332 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %331, i32 0, i32 0
  store %"struct.std::pair"* %329, %"struct.std::pair"** %332, align 8
  %333 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %334 = bitcast %"class.std::vector.14"* %10 to %"struct.std::_Vector_base.15"*
  %335 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %334, i32 0, i32 0
  %336 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %335, i32 0, i32 1
  store %"struct.std::pair"* %333, %"struct.std::pair"** %336, align 8
  %337 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %338 = load i64, i64* %5, align 8
  %339 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %337, i64 %338
  %340 = bitcast %"class.std::vector.14"* %10 to %"struct.std::_Vector_base.15"*
  %341 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %340, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %341, i32 0, i32 2
  store %"struct.std::pair"* %339, %"struct.std::pair"** %342, align 8
  br label %169
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE9constructIS2_JRKS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.17"*, %"struct.std::pair"*, %"struct.std::pair"* dereferenceable(16)) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  %5 = alloca %"struct.std::pair"*, align 8
  %6 = alloca %"struct.std::pair"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %4, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %5, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %4, align 8
  %8 = load %"struct.std::pair"*, %"struct.std::pair"** %5, align 8
  %9 = bitcast %"struct.std::pair"* %8 to i8*
  %10 = bitcast i8* %9 to %"struct.std::pair"*
  %11 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %12 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIxxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::pair"* dereferenceable(16) %11) #3
  %13 = bitcast %"struct.std::pair"* %10 to i8*
  %14 = bitcast %"struct.std::pair"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 16, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.14"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i1
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca %"class.std::vector.14"*
  %9 = alloca %"class.std::vector.14"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %9, align 8
  store i64 %1, i64* %10, align 8
  store i8* %2, i8** %11, align 8
  %14 = load %"class.std::vector.14"*, %"class.std::vector.14"** %9, align 8
  store %"class.std::vector.14"* %14, %"class.std::vector.14"** %8
  %15 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %8
  %16 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE8max_sizeEv(%"class.std::vector.14"* %15) #3
  %17 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %8
  %18 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector.14"* %17) #3
  %19 = sub i64 %16, -1070583685975760943
  %20 = sub i64 %19, %18
  %21 = add i64 %20, -1070583685975760943
  %22 = sub i64 %16, %18
  store i64 %21, i64* %7
  %23 = load i64, i64* %10, align 8
  store i64 %23, i64* %6
  %24 = alloca i32
  store i32 -933700436, i32* %24
  %25 = alloca i64
  br label %26

; <label>:26:                                     ; preds = %3, %193
  %27 = load i32, i32* %24
  switch i32 %27, label %28 [
    i32 -933700436, label %29
    i32 -1106781482, label %34
    i32 487455474, label %62
    i32 -431926654, label %79
    i32 100260435, label %80
    i32 -1457233830, label %96
    i32 1275841621, label %112
    i32 759031967, label %143
    i32 352259420, label %146
    i32 -190953061, label %149
    i32 1013120575, label %151
    i32 1632049923, label %168
    i32 1596023389, label %183
    i32 1502291874, label %185
    i32 1982275010, label %187
    i32 419483181, label %192
  ]

; <label>:28:                                     ; preds = %26
  br label %193

; <label>:29:                                     ; preds = %26
  %30 = load volatile i64, i64* %7
  %31 = load volatile i64, i64* %6
  %32 = icmp ult i64 %30, %31
  %33 = select i1 %32, i32 -1106781482, i32 100260435
  store i32 %33, i32* %24
  br label %193

; <label>:34:                                     ; preds = %26
  %35 = load i32, i32* @x.486
  %36 = load i32, i32* @y.487
  %37 = sub i32 %35, 523331795
  %38 = sub i32 %37, 1
  %39 = add i32 %38, 523331795
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 487455474, i32 1502291874
  store i32 %61, i32* %24
  br label %193

; <label>:62:                                     ; preds = %26
  %63 = load i8*, i8** %11, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %63) #16
  %64 = load i32, i32* @x.486
  %65 = load i32, i32* @y.487
  %66 = sub i32 %64, 1484197593
  %67 = sub i32 %66, 1
  %68 = add i32 %67, 1484197593
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = and i1 %72, %73
  %75 = xor i1 %72, %73
  %76 = or i1 %74, %75
  %77 = or i1 %72, %73
  %78 = select i1 %76, i32 -431926654, i32 1502291874
  store i32 %78, i32* %24
  br label %193

; <label>:79:                                     ; preds = %26
  unreachable

; <label>:80:                                     ; preds = %26
  %81 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %8
  %82 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector.14"* %81) #3
  %83 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %8
  %84 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector.14"* %83) #3
  store i64 %84, i64* %13, align 8
  %85 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %86 = load i64, i64* %85, align 8
  %87 = sub i64 %82, 3683224125546383939
  %88 = add i64 %87, %86
  %89 = add i64 %88, 3683224125546383939
  %90 = add i64 %82, %86
  store i64 %89, i64* %12, align 8
  %91 = load i64, i64* %12, align 8
  %92 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %8
  %93 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector.14"* %92) #3
  %94 = icmp ult i64 %91, %93
  %95 = select i1 %94, i32 352259420, i32 -1457233830
  store i32 %95, i32* %24
  br label %193

; <label>:96:                                     ; preds = %26
  %97 = load i32, i32* @x.486
  %98 = load i32, i32* @y.487
  %99 = add i32 %97, 91214920
  %100 = sub i32 %99, 1
  %101 = sub i32 %100, 91214920
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  %111 = select i1 %109, i32 1275841621, i32 1982275010
  store i32 %111, i32* %24
  br label %193

; <label>:112:                                    ; preds = %26
  %113 = load i64, i64* %12, align 8
  %114 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %8
  %115 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE8max_sizeEv(%"class.std::vector.14"* %114) #3
  %116 = icmp ugt i64 %113, %115
  store i1 %116, i1* %5
  %117 = load i32, i32* @x.486
  %118 = load i32, i32* @y.487
  %119 = sub i32 0, 1
  %120 = add i32 %117, %119
  %121 = sub i32 %117, 1
  %122 = mul i32 %117, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %118, 10
  %126 = xor i1 %124, true
  %127 = xor i1 %125, true
  %128 = xor i1 false, true
  %129 = and i1 %126, false
  %130 = and i1 %124, %128
  %131 = and i1 %127, false
  %132 = and i1 %125, %128
  %133 = or i1 %129, %130
  %134 = or i1 %131, %132
  %135 = xor i1 %133, %134
  %136 = or i1 %126, %127
  %137 = xor i1 %136, true
  %138 = or i1 false, %128
  %139 = and i1 %137, %138
  %140 = or i1 %135, %139
  %141 = or i1 %124, %125
  %142 = select i1 %140, i32 759031967, i32 1982275010
  store i32 %142, i32* %24
  br label %193

; <label>:143:                                    ; preds = %26
  %144 = load volatile i1, i1* %5
  %145 = select i1 %144, i32 352259420, i32 -190953061
  store i32 %145, i32* %24
  br label %193

; <label>:146:                                    ; preds = %26
  %147 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %8
  %148 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE8max_sizeEv(%"class.std::vector.14"* %147) #3
  store i32 1013120575, i32* %24
  store i64 %148, i64* %25
  br label %193

; <label>:149:                                    ; preds = %26
  %150 = load i64, i64* %12, align 8
  store i32 1013120575, i32* %24
  store i64 %150, i64* %25
  br label %193

; <label>:151:                                    ; preds = %26
  %152 = load i64, i64* %25
  store i64 %152, i64* %4
  %153 = load i32, i32* @x.486
  %154 = load i32, i32* @y.487
  %155 = add i32 %153, 1612734755
  %156 = sub i32 %155, 1
  %157 = sub i32 %156, 1612734755
  %158 = sub i32 %153, 1
  %159 = mul i32 %153, %157
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %154, 10
  %163 = and i1 %161, %162
  %164 = xor i1 %161, %162
  %165 = or i1 %163, %164
  %166 = or i1 %161, %162
  %167 = select i1 %165, i32 1632049923, i32 419483181
  store i32 %167, i32* %24
  br label %193

; <label>:168:                                    ; preds = %26
  %169 = load i32, i32* @x.486
  %170 = load i32, i32* @y.487
  %171 = sub i32 0, 1
  %172 = add i32 %169, %171
  %173 = sub i32 %169, 1
  %174 = mul i32 %169, %172
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %170, 10
  %178 = and i1 %176, %177
  %179 = xor i1 %176, %177
  %180 = or i1 %178, %179
  %181 = or i1 %176, %177
  %182 = select i1 %180, i32 1596023389, i32 419483181
  store i32 %182, i32* %24
  br label %193

; <label>:183:                                    ; preds = %26
  %184 = load volatile i64, i64* %4
  ret i64 %184

; <label>:185:                                    ; preds = %26
  %186 = load i8*, i8** %11, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %186) #16
  store i32 487455474, i32* %24
  br label %193

; <label>:187:                                    ; preds = %26
  %188 = load i64, i64* %12, align 8
  %189 = load volatile %"class.std::vector.14"*, %"class.std::vector.14"** %8
  %190 = call i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE8max_sizeEv(%"class.std::vector.14"* %189) #3
  %191 = icmp ugt i64 %188, %190
  store i32 1275841621, i32* %24
  br label %193

; <label>:192:                                    ; preds = %26
  store i32 1632049923, i32* %24
  br label %193

; <label>:193:                                    ; preds = %192, %187, %185, %168, %151, %149, %146, %143, %112, %96, %80, %62, %34, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZNSt12_Vector_baseISt4pairIxxESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.15"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"struct.std::_Vector_base.15"*
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.488
  %9 = load i32, i32* @y.489
  %10 = sub i32 %8, 641823071
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 641823071
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -1163682073, i32* %18
  %19 = alloca %"struct.std::pair"*
  br label %20

; <label>:20:                                     ; preds = %2, %85
  %21 = load i32, i32* %18
  switch i32 %21, label %22 [
    i32 -1163682073, label %23
    i32 1547877797, label %43
    i32 -918214238, label %66
    i32 1728313481, label %69
    i32 -802006791, label %76
    i32 -1179745712, label %77
    i32 -1233937032, label %79
  ]

; <label>:22:                                     ; preds = %20
  br label %85

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %7
  %25 = load volatile i1, i1* %6
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 false, true
  %29 = and i1 %26, false
  %30 = and i1 %24, %28
  %31 = and i1 %27, false
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 false, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 1547877797, i32 -1233937032
  store i32 %42, i32* %18
  br label %85

; <label>:43:                                     ; preds = %20
  %44 = alloca %"struct.std::_Vector_base.15"*, align 8
  %45 = alloca i64, align 8
  store i64* %45, i64** %5
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %44, align 8
  %46 = load volatile i64*, i64** %5
  store i64 %1, i64* %46, align 8
  %47 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %44, align 8
  store %"struct.std::_Vector_base.15"* %47, %"struct.std::_Vector_base.15"** %4
  %48 = load volatile i64*, i64** %5
  %49 = load i64, i64* %48, align 8
  %50 = icmp ne i64 %49, 0
  store i1 %50, i1* %3
  %51 = load i32, i32* @x.488
  %52 = load i32, i32* @y.489
  %53 = sub i32 %51, -1244734319
  %54 = sub i32 %53, 1
  %55 = add i32 %54, -1244734319
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 -918214238, i32 -1233937032
  store i32 %65, i32* %18
  br label %85

; <label>:66:                                     ; preds = %20
  %67 = load volatile i1, i1* %3
  %68 = select i1 %67, i32 1728313481, i32 -802006791
  store i32 %68, i32* %18
  br label %85

; <label>:69:                                     ; preds = %20
  %70 = load volatile %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %4
  %71 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %70, i32 0, i32 0
  %72 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %71 to %"class.std::allocator.16"*
  %73 = load volatile i64*, i64** %5
  %74 = load i64, i64* %73, align 8
  %75 = call %"struct.std::pair"* @_ZNSt16allocator_traitsISaISt4pairIxxEEE8allocateERS2_m(%"class.std::allocator.16"* dereferenceable(1) %72, i64 %74)
  store i32 -1179745712, i32* %18
  store %"struct.std::pair"* %75, %"struct.std::pair"** %19
  br label %85

; <label>:76:                                     ; preds = %20
  store i32 -1179745712, i32* %18
  store %"struct.std::pair"* null, %"struct.std::pair"** %19
  br label %85

; <label>:77:                                     ; preds = %20
  %78 = load %"struct.std::pair"*, %"struct.std::pair"** %19
  ret %"struct.std::pair"* %78

; <label>:79:                                     ; preds = %20
  %80 = alloca %"struct.std::_Vector_base.15"*, align 8
  %81 = alloca i64, align 8
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %80, align 8
  store i64 %1, i64* %81, align 8
  %82 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %80, align 8
  %83 = load i64, i64* %81, align 8
  %84 = icmp ne i64 %83, 0
  store i32 1547877797, i32* %18
  br label %85

; <label>:85:                                     ; preds = %79, %76, %69, %66, %43, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE4sizeEv(%"class.std::vector.14"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.14"*, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %2, align 8
  %3 = load %"class.std::vector.14"*, %"class.std::vector.14"** %2, align 8
  %4 = bitcast %"class.std::vector.14"* %3 to %"struct.std::_Vector_base.15"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %8 = bitcast %"class.std::vector.14"* %3 to %"struct.std::_Vector_base.15"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"struct.std::pair"*, %"struct.std::pair"** %10, align 8
  %12 = ptrtoint %"struct.std::pair"* %7 to i64
  %13 = ptrtoint %"struct.std::pair"* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 16
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt4pairIxxES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.std::pair"*, %"struct.std::pair"*, %"struct.std::pair"*, %"class.std::allocator.16"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.std::pair"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.492
  %9 = load i32, i32* @y.493
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 1150654493, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %86
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1150654493, label %21
    i32 -1490042554, label %29
    i32 2135805862, label %64
    i32 1012253093, label %66
  ]

; <label>:20:                                     ; preds = %18
  br label %86

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1490042554, i32 1012253093
  store i32 %28, i32* %17
  br label %86

; <label>:29:                                     ; preds = %18
  %30 = alloca %"struct.std::pair"*, align 8
  %31 = alloca %"struct.std::pair"*, align 8
  %32 = alloca %"struct.std::pair"*, align 8
  %33 = alloca %"class.std::allocator.16"*, align 8
  %34 = alloca %"class.std::move_iterator", align 8
  %35 = alloca %"class.std::move_iterator", align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %30, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %31, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %32, align 8
  store %"class.std::allocator.16"* %3, %"class.std::allocator.16"** %33, align 8
  %36 = load %"struct.std::pair"*, %"struct.std::pair"** %30, align 8
  %37 = call %"struct.std::pair"* @_ZSt32__make_move_if_noexcept_iteratorIPSt4pairIxxESt13move_iteratorIS2_EET0_T_(%"struct.std::pair"* %36)
  %38 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %34, i32 0, i32 0
  store %"struct.std::pair"* %37, %"struct.std::pair"** %38, align 8
  %39 = load %"struct.std::pair"*, %"struct.std::pair"** %31, align 8
  %40 = call %"struct.std::pair"* @_ZSt32__make_move_if_noexcept_iteratorIPSt4pairIxxESt13move_iteratorIS2_EET0_T_(%"struct.std::pair"* %39)
  %41 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %35, i32 0, i32 0
  store %"struct.std::pair"* %40, %"struct.std::pair"** %41, align 8
  %42 = load %"struct.std::pair"*, %"struct.std::pair"** %32, align 8
  %43 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %33, align 8
  %44 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %34, i32 0, i32 0
  %45 = load %"struct.std::pair"*, %"struct.std::pair"** %44, align 8
  %46 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %35, i32 0, i32 0
  %47 = load %"struct.std::pair"*, %"struct.std::pair"** %46, align 8
  %48 = call %"struct.std::pair"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt4pairIxxEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.std::pair"* %45, %"struct.std::pair"* %47, %"struct.std::pair"* %42, %"class.std::allocator.16"* dereferenceable(1) %43)
  store %"struct.std::pair"* %48, %"struct.std::pair"** %5
  %49 = load i32, i32* @x.492
  %50 = load i32, i32* @y.493
  %51 = sub i32 %49, -843074194
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -843074194
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 2135805862, i32 1012253093
  store i32 %63, i32* %17
  br label %86

; <label>:64:                                     ; preds = %18
  %65 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %5
  ret %"struct.std::pair"* %65

; <label>:66:                                     ; preds = %18
  %67 = alloca %"struct.std::pair"*, align 8
  %68 = alloca %"struct.std::pair"*, align 8
  %69 = alloca %"struct.std::pair"*, align 8
  %70 = alloca %"class.std::allocator.16"*, align 8
  %71 = alloca %"class.std::move_iterator", align 8
  %72 = alloca %"class.std::move_iterator", align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %67, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %68, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %69, align 8
  store %"class.std::allocator.16"* %3, %"class.std::allocator.16"** %70, align 8
  %73 = load %"struct.std::pair"*, %"struct.std::pair"** %67, align 8
  %74 = call %"struct.std::pair"* @_ZSt32__make_move_if_noexcept_iteratorIPSt4pairIxxESt13move_iteratorIS2_EET0_T_(%"struct.std::pair"* %73)
  %75 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %71, i32 0, i32 0
  store %"struct.std::pair"* %74, %"struct.std::pair"** %75, align 8
  %76 = load %"struct.std::pair"*, %"struct.std::pair"** %68, align 8
  %77 = call %"struct.std::pair"* @_ZSt32__make_move_if_noexcept_iteratorIPSt4pairIxxESt13move_iteratorIS2_EET0_T_(%"struct.std::pair"* %76)
  %78 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %72, i32 0, i32 0
  store %"struct.std::pair"* %77, %"struct.std::pair"** %78, align 8
  %79 = load %"struct.std::pair"*, %"struct.std::pair"** %69, align 8
  %80 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %70, align 8
  %81 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %71, i32 0, i32 0
  %82 = load %"struct.std::pair"*, %"struct.std::pair"** %81, align 8
  %83 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %72, i32 0, i32 0
  %84 = load %"struct.std::pair"*, %"struct.std::pair"** %83, align 8
  %85 = call %"struct.std::pair"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt4pairIxxEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.std::pair"* %82, %"struct.std::pair"* %84, %"struct.std::pair"* %79, %"class.std::allocator.16"* dereferenceable(1) %80)
  store i32 -1490042554, i32* %17
  br label %86

; <label>:86:                                     ; preds = %66, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIxxEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.16"* dereferenceable(1), %"struct.std::pair"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.16"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %3, align 8
  %6 = bitcast %"class.std::allocator.16"* %5 to %"class.__gnu_cxx::new_allocator.17"*
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.17"* %6, %"struct.std::pair"* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt4pairIxxESaIS1_EE8max_sizeEv(%"class.std::vector.14"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.496
  %6 = load i32, i32* @y.497
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 950562062, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %54
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 950562062, label %18
    i32 -2079629375, label %26
    i32 -1182958061, label %46
    i32 2006388632, label %48
  ]

; <label>:17:                                     ; preds = %15
  br label %54

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -2079629375, i32 2006388632
  store i32 %25, i32* %14
  br label %54

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.14"*, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %27, align 8
  %28 = load %"class.std::vector.14"*, %"class.std::vector.14"** %27, align 8
  %29 = bitcast %"class.std::vector.14"* %28 to %"struct.std::_Vector_base.15"*
  %30 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNKSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %29) #3
  %31 = call i64 @_ZNSt16allocator_traitsISaISt4pairIxxEEE8max_sizeERKS2_(%"class.std::allocator.16"* dereferenceable(1) %30) #3
  store i64 %31, i64* %2
  %32 = load i32, i32* @x.496
  %33 = load i32, i32* @y.497
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -1182958061, i32 2006388632
  store i32 %45, i32* %14
  br label %54

; <label>:46:                                     ; preds = %15
  %47 = load volatile i64, i64* %2
  ret i64 %47

; <label>:48:                                     ; preds = %15
  %49 = alloca %"class.std::vector.14"*, align 8
  store %"class.std::vector.14"* %0, %"class.std::vector.14"** %49, align 8
  %50 = load %"class.std::vector.14"*, %"class.std::vector.14"** %49, align 8
  %51 = bitcast %"class.std::vector.14"* %50 to %"struct.std::_Vector_base.15"*
  %52 = call dereferenceable(1) %"class.std::allocator.16"* @_ZNKSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"* %51) #3
  %53 = call i64 @_ZNSt16allocator_traitsISaISt4pairIxxEEE8max_sizeERKS2_(%"class.std::allocator.16"* dereferenceable(1) %52) #3
  store i32 -2079629375, i32* %14
  br label %54

; <label>:54:                                     ; preds = %48, %26, %18, %17
  br label %15
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  store i64* %0, i64** %6, align 8
  store i64* %1, i64** %7, align 8
  %8 = load i64*, i64** %6, align 8
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %4
  %10 = load i64*, i64** %7, align 8
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 1277942406, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %73
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1277942406, label %16
    i32 653094931, label %21
    i32 1476662192, label %49
    i32 1504044492, label %66
    i32 1740983379, label %67
    i32 1643840509, label %69
    i32 1628716197, label %71
  ]

; <label>:15:                                     ; preds = %13
  br label %73

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %4
  %18 = load volatile i64, i64* %3
  %19 = icmp ult i64 %17, %18
  %20 = select i1 %19, i32 653094931, i32 1740983379
  store i32 %20, i32* %12
  br label %73

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.498
  %23 = load i32, i32* @y.499
  %24 = add i32 %22, -1431552695
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, -1431552695
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 true, true
  %35 = and i1 %32, true
  %36 = and i1 %30, %34
  %37 = and i1 %33, true
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 true, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 1476662192, i32 1628716197
  store i32 %48, i32* %12
  br label %73

; <label>:49:                                     ; preds = %13
  %50 = load i64*, i64** %7, align 8
  store i64* %50, i64** %5, align 8
  %51 = load i32, i32* @x.498
  %52 = load i32, i32* @y.499
  %53 = sub i32 %51, -414078469
  %54 = sub i32 %53, 1
  %55 = add i32 %54, -414078469
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 1504044492, i32 1628716197
  store i32 %65, i32* %12
  br label %73

; <label>:66:                                     ; preds = %13
  store i32 1643840509, i32* %12
  br label %73

; <label>:67:                                     ; preds = %13
  %68 = load i64*, i64** %6, align 8
  store i64* %68, i64** %5, align 8
  store i32 1643840509, i32* %12
  br label %73

; <label>:69:                                     ; preds = %13
  %70 = load i64*, i64** %5, align 8
  ret i64* %70

; <label>:71:                                     ; preds = %13
  %72 = load i64*, i64** %7, align 8
  store i64* %72, i64** %5, align 8
  store i32 1476662192, i32* %12
  br label %73

; <label>:73:                                     ; preds = %71, %67, %66, %49, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaISt4pairIxxEEE8max_sizeERKS2_(%"class.std::allocator.16"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %2, align 8
  %3 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %2, align 8
  %4 = bitcast %"class.std::allocator.16"* %3 to %"class.__gnu_cxx::new_allocator.17"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt4pairIxxEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.17"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.16"* @_ZNKSt12_Vector_baseISt4pairIxxESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.15"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.15"*, align 8
  store %"struct.std::_Vector_base.15"* %0, %"struct.std::_Vector_base.15"** %2, align 8
  %3 = load %"struct.std::_Vector_base.15"*, %"struct.std::_Vector_base.15"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.15", %"struct.std::_Vector_base.15"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::pair<long long, long long>, std::allocator<std::pair<long long, long long> > >::_Vector_impl"* %4 to %"class.std::allocator.16"*
  ret %"class.std::allocator.16"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt4pairIxxEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.17"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %2, align 8
  ret i64 1152921504606846975
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZNSt16allocator_traitsISaISt4pairIxxEEE8allocateERS2_m(%"class.std::allocator.16"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.16"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %3, align 8
  %6 = bitcast %"class.std::allocator.16"* %5 to %"class.__gnu_cxx::new_allocator.17"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.std::pair"* @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.17"* %6, i64 %7, i8* null)
  ret %"struct.std::pair"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.17"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt4pairIxxEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.17"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -706756274, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -706756274, label %16
    i32 -173798288, label %21
    i32 2021328424, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -173798288, i32 2021328424
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #16
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 16
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"struct.std::pair"*
  ret %"struct.std::pair"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt4pairIxxEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.std::pair"*, %"struct.std::pair"*, %"struct.std::pair"*, %"class.std::allocator.16"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.std::pair"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.510
  %9 = load i32, i32* @y.511
  %10 = sub i32 %8, 1208732948
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 1208732948
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 322346878, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %109
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 322346878, label %22
    i32 1743587730, label %42
    i32 1163434771, label %88
    i32 -368491457, label %90
  ]

; <label>:21:                                     ; preds = %19
  br label %109

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 1743587730, i32 -368491457
  store i32 %41, i32* %18
  br label %109

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.std::move_iterator", align 8
  %44 = alloca %"class.std::move_iterator", align 8
  %45 = alloca %"struct.std::pair"*, align 8
  %46 = alloca %"class.std::allocator.16"*, align 8
  %47 = alloca %"class.std::move_iterator", align 8
  %48 = alloca %"class.std::move_iterator", align 8
  %49 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %43, i32 0, i32 0
  store %"struct.std::pair"* %0, %"struct.std::pair"** %49, align 8
  %50 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %44, i32 0, i32 0
  store %"struct.std::pair"* %1, %"struct.std::pair"** %50, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %45, align 8
  store %"class.std::allocator.16"* %3, %"class.std::allocator.16"** %46, align 8
  %51 = bitcast %"class.std::move_iterator"* %47 to i8*
  %52 = bitcast %"class.std::move_iterator"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 8, i1 false)
  %53 = bitcast %"class.std::move_iterator"* %48 to i8*
  %54 = bitcast %"class.std::move_iterator"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 8, i32 8, i1 false)
  %55 = load %"struct.std::pair"*, %"struct.std::pair"** %45, align 8
  %56 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %47, i32 0, i32 0
  %57 = load %"struct.std::pair"*, %"struct.std::pair"** %56, align 8
  %58 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %48, i32 0, i32 0
  %59 = load %"struct.std::pair"*, %"struct.std::pair"** %58, align 8
  %60 = call %"struct.std::pair"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt4pairIxxEES3_ET0_T_S6_S5_(%"struct.std::pair"* %57, %"struct.std::pair"* %59, %"struct.std::pair"* %55)
  store %"struct.std::pair"* %60, %"struct.std::pair"** %5
  %61 = load i32, i32* @x.510
  %62 = load i32, i32* @y.511
  %63 = add i32 %61, 1482647222
  %64 = sub i32 %63, 1
  %65 = sub i32 %64, 1482647222
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 true, true
  %74 = and i1 %71, true
  %75 = and i1 %69, %73
  %76 = and i1 %72, true
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 true, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  %87 = select i1 %85, i32 1163434771, i32 -368491457
  store i32 %87, i32* %18
  br label %109

; <label>:88:                                     ; preds = %19
  %89 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %5
  ret %"struct.std::pair"* %89

; <label>:90:                                     ; preds = %19
  %91 = alloca %"class.std::move_iterator", align 8
  %92 = alloca %"class.std::move_iterator", align 8
  %93 = alloca %"struct.std::pair"*, align 8
  %94 = alloca %"class.std::allocator.16"*, align 8
  %95 = alloca %"class.std::move_iterator", align 8
  %96 = alloca %"class.std::move_iterator", align 8
  %97 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %91, i32 0, i32 0
  store %"struct.std::pair"* %0, %"struct.std::pair"** %97, align 8
  %98 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %92, i32 0, i32 0
  store %"struct.std::pair"* %1, %"struct.std::pair"** %98, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %93, align 8
  store %"class.std::allocator.16"* %3, %"class.std::allocator.16"** %94, align 8
  %99 = bitcast %"class.std::move_iterator"* %95 to i8*
  %100 = bitcast %"class.std::move_iterator"* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %99, i8* %100, i64 8, i32 8, i1 false)
  %101 = bitcast %"class.std::move_iterator"* %96 to i8*
  %102 = bitcast %"class.std::move_iterator"* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %101, i8* %102, i64 8, i32 8, i1 false)
  %103 = load %"struct.std::pair"*, %"struct.std::pair"** %93, align 8
  %104 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %95, i32 0, i32 0
  %105 = load %"struct.std::pair"*, %"struct.std::pair"** %104, align 8
  %106 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %96, i32 0, i32 0
  %107 = load %"struct.std::pair"*, %"struct.std::pair"** %106, align 8
  %108 = call %"struct.std::pair"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt4pairIxxEES3_ET0_T_S6_S5_(%"struct.std::pair"* %105, %"struct.std::pair"* %107, %"struct.std::pair"* %103)
  store i32 1743587730, i32* %18
  br label %109

; <label>:109:                                    ; preds = %90, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZSt32__make_move_if_noexcept_iteratorIPSt4pairIxxESt13move_iteratorIS2_EET0_T_(%"struct.std::pair"*) #0 comdat {
  %2 = alloca %"struct.std::pair"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.512
  %6 = load i32, i32* @y.513
  %7 = add i32 %5, -604173324
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -604173324
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1680947246, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1680947246, label %19
    i32 -1647537438, label %27
    i32 1803812280, label %60
    i32 854018798, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1647537438, i32 854018798
  store i32 %26, i32* %15
  br label %68

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator", align 8
  %29 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %29, align 8
  %30 = load %"struct.std::pair"*, %"struct.std::pair"** %29, align 8
  call void @_ZNSt13move_iteratorIPSt4pairIxxEEC2ES2_(%"class.std::move_iterator"* %28, %"struct.std::pair"* %30)
  %31 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %28, i32 0, i32 0
  %32 = load %"struct.std::pair"*, %"struct.std::pair"** %31, align 8
  store %"struct.std::pair"* %32, %"struct.std::pair"** %2
  %33 = load i32, i32* @x.512
  %34 = load i32, i32* @y.513
  %35 = sub i32 %33, 344985525
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 344985525
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 1803812280, i32 854018798
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %2
  ret %"struct.std::pair"* %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::move_iterator", align 8
  %64 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %64, align 8
  %65 = load %"struct.std::pair"*, %"struct.std::pair"** %64, align 8
  call void @_ZNSt13move_iteratorIPSt4pairIxxEEC2ES2_(%"class.std::move_iterator"* %63, %"struct.std::pair"* %65)
  %66 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %63, i32 0, i32 0
  %67 = load %"struct.std::pair"*, %"struct.std::pair"** %66, align 8
  store i32 -1647537438, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt4pairIxxEES3_ET0_T_S6_S5_(%"struct.std::pair"*, %"struct.std::pair"*, %"struct.std::pair"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"struct.std::pair"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %"struct.std::pair"* %0, %"struct.std::pair"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"struct.std::pair"* %1, %"struct.std::pair"** %11, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %18 = load %"struct.std::pair"*, %"struct.std::pair"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %"struct.std::pair"*, %"struct.std::pair"** %19, align 8
  %21 = call %"struct.std::pair"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt4pairIxxEES5_EET0_T_S8_S7_(%"struct.std::pair"* %18, %"struct.std::pair"* %20, %"struct.std::pair"* %16)
  ret %"struct.std::pair"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt4pairIxxEES5_EET0_T_S8_S7_(%"struct.std::pair"*, %"struct.std::pair"*, %"struct.std::pair"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"struct.std::pair"*, align 8
  %7 = alloca %"struct.std::pair"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %"struct.std::pair"* %0, %"struct.std::pair"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"struct.std::pair"* %1, %"struct.std::pair"** %11, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %6, align 8
  %12 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  store %"struct.std::pair"* %12, %"struct.std::pair"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %179, %3
  %14 = invoke zeroext i1 @_ZStneIPSt4pairIxxEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8) %4, %"class.std::move_iterator"* dereferenceable(8) %5)
          to label %15 unwind label %180

; <label>:15:                                     ; preds = %13
  br i1 %14, label %16, label %190

; <label>:16:                                     ; preds = %15
  %17 = load i32, i32* @x.516
  %18 = load i32, i32* @y.517
  %19 = sub i32 %17, -822166435
  %20 = sub i32 %19, 1
  %21 = add i32 %20, -822166435
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  br i1 %29, label %31, label %313

; <label>:31:                                     ; preds = %16, %313
  %32 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %33 = call %"struct.std::pair"* @_ZSt11__addressofISt4pairIxxEEPT_RS2_(%"struct.std::pair"* dereferenceable(16) %32) #3
  %34 = load i32, i32* @x.516
  %35 = load i32, i32* @y.517
  %36 = sub i32 %34, 576366684
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 576366684
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  br i1 %58, label %60, label %313

; <label>:60:                                     ; preds = %31
  %61 = invoke dereferenceable(16) %"struct.std::pair"* @_ZNKSt13move_iteratorIPSt4pairIxxEEdeEv(%"class.std::move_iterator"* %4)
          to label %62 unwind label %180

; <label>:62:                                     ; preds = %60
  %63 = load i32, i32* @x.516
  %64 = load i32, i32* @y.517
  %65 = sub i32 0, 1
  %66 = add i32 %63, %65
  %67 = sub i32 %63, 1
  %68 = mul i32 %63, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %64, 10
  %72 = and i1 %70, %71
  %73 = xor i1 %70, %71
  %74 = or i1 %72, %73
  %75 = or i1 %70, %71
  br i1 %74, label %76, label %316

; <label>:76:                                     ; preds = %62, %316
  %77 = load i32, i32* @x.516
  %78 = load i32, i32* @y.517
  %79 = sub i32 %77, 1102434317
  %80 = sub i32 %79, 1
  %81 = add i32 %80, 1102434317
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = xor i1 %85, true
  %88 = xor i1 %86, true
  %89 = xor i1 false, true
  %90 = and i1 %87, false
  %91 = and i1 %85, %89
  %92 = and i1 %88, false
  %93 = and i1 %86, %89
  %94 = or i1 %90, %91
  %95 = or i1 %92, %93
  %96 = xor i1 %94, %95
  %97 = or i1 %87, %88
  %98 = xor i1 %97, true
  %99 = or i1 false, %89
  %100 = and i1 %98, %99
  %101 = or i1 %96, %100
  %102 = or i1 %85, %86
  br i1 %101, label %103, label %316

; <label>:103:                                    ; preds = %76
  invoke void @_ZSt10_ConstructISt4pairIxxEJS1_EEvPT_DpOT0_(%"struct.std::pair"* %33, %"struct.std::pair"* dereferenceable(16) %61)
          to label %104 unwind label %180

; <label>:104:                                    ; preds = %103
  br label %105

; <label>:105:                                    ; preds = %104
  %106 = load i32, i32* @x.516
  %107 = load i32, i32* @y.517
  %108 = sub i32 0, 1
  %109 = add i32 %106, %108
  %110 = sub i32 %106, 1
  %111 = mul i32 %106, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %107, 10
  %115 = and i1 %113, %114
  %116 = xor i1 %113, %114
  %117 = or i1 %115, %116
  %118 = or i1 %113, %114
  br i1 %117, label %119, label %317

; <label>:119:                                    ; preds = %105, %317
  %120 = load i32, i32* @x.516
  %121 = load i32, i32* @y.517
  %122 = sub i32 0, 1
  %123 = add i32 %120, %122
  %124 = sub i32 %120, 1
  %125 = mul i32 %120, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %121, 10
  %129 = and i1 %127, %128
  %130 = xor i1 %127, %128
  %131 = or i1 %129, %130
  %132 = or i1 %127, %128
  br i1 %131, label %133, label %317

; <label>:133:                                    ; preds = %119
  %134 = invoke dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPSt4pairIxxEEppEv(%"class.std::move_iterator"* %4)
          to label %135 unwind label %180

; <label>:135:                                    ; preds = %133
  %136 = load i32, i32* @x.516
  %137 = load i32, i32* @y.517
  %138 = sub i32 %136, 1050576067
  %139 = sub i32 %138, 1
  %140 = add i32 %139, 1050576067
  %141 = sub i32 %136, 1
  %142 = mul i32 %136, %140
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %137, 10
  %146 = xor i1 %144, true
  %147 = xor i1 %145, true
  %148 = xor i1 false, true
  %149 = and i1 %146, false
  %150 = and i1 %144, %148
  %151 = and i1 %147, false
  %152 = and i1 %145, %148
  %153 = or i1 %149, %150
  %154 = or i1 %151, %152
  %155 = xor i1 %153, %154
  %156 = or i1 %146, %147
  %157 = xor i1 %156, true
  %158 = or i1 false, %148
  %159 = and i1 %157, %158
  %160 = or i1 %155, %159
  %161 = or i1 %144, %145
  br i1 %160, label %162, label %318

; <label>:162:                                    ; preds = %135, %318
  %163 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %164 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %163, i32 1
  store %"struct.std::pair"* %164, %"struct.std::pair"** %7, align 8
  %165 = load i32, i32* @x.516
  %166 = load i32, i32* @y.517
  %167 = sub i32 %165, 2070131898
  %168 = sub i32 %167, 1
  %169 = add i32 %168, 2070131898
  %170 = sub i32 %165, 1
  %171 = mul i32 %165, %169
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %166, 10
  %175 = and i1 %173, %174
  %176 = xor i1 %173, %174
  %177 = or i1 %175, %176
  %178 = or i1 %173, %174
  br i1 %177, label %179, label %318

; <label>:179:                                    ; preds = %162
  br label %13

; <label>:180:                                    ; preds = %133, %103, %60, %13
  %181 = landingpad { i8*, i32 }
          catch i8* null
  %182 = extractvalue { i8*, i32 } %181, 0
  store i8* %182, i8** %8, align 8
  %183 = extractvalue { i8*, i32 } %181, 1
  store i32 %183, i32* %9, align 4
  br label %184

; <label>:184:                                    ; preds = %180
  %185 = load i8*, i8** %8, align 8
  %186 = call i8* @__cxa_begin_catch(i8* %185) #3
  %187 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %188 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  invoke void @_ZSt8_DestroyIPSt4pairIxxEEvT_S3_(%"struct.std::pair"* %187, %"struct.std::pair"* %188)
          to label %189 unwind label %192

; <label>:189:                                    ; preds = %184
  invoke void @__cxa_rethrow() #16
          to label %260 unwind label %192

; <label>:190:                                    ; preds = %15
  %191 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  ret %"struct.std::pair"* %191

; <label>:192:                                    ; preds = %189, %184
  %193 = landingpad { i8*, i32 }
          cleanup
  %194 = extractvalue { i8*, i32 } %193, 0
  store i8* %194, i8** %8, align 8
  %195 = extractvalue { i8*, i32 } %193, 1
  store i32 %195, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %196 unwind label %257

; <label>:196:                                    ; preds = %192
  br label %198
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:198:                                    ; preds = %196
  %199 = load i32, i32* @x.516
  %200 = load i32, i32* @y.517
  %201 = sub i32 %199, 924322677
  %202 = sub i32 %201, 1
  %203 = add i32 %202, 924322677
  %204 = sub i32 %199, 1
  %205 = mul i32 %199, %203
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %200, 10
  %209 = xor i1 %207, true
  %210 = xor i1 %208, true
  %211 = xor i1 true, true
  %212 = and i1 %209, true
  %213 = and i1 %207, %211
  %214 = and i1 %210, true
  %215 = and i1 %208, %211
  %216 = or i1 %212, %213
  %217 = or i1 %214, %215
  %218 = xor i1 %216, %217
  %219 = or i1 %209, %210
  %220 = xor i1 %219, true
  %221 = or i1 true, %211
  %222 = and i1 %220, %221
  %223 = or i1 %218, %222
  %224 = or i1 %207, %208
  br i1 %223, label %225, label %321

; <label>:225:                                    ; preds = %198, %321
  %226 = load i8*, i8** %8, align 8
  %227 = load i32, i32* %9, align 4
  %228 = insertvalue { i8*, i32 } undef, i8* %226, 0
  %229 = insertvalue { i8*, i32 } %228, i32 %227, 1
  %230 = load i32, i32* @x.516
  %231 = load i32, i32* @y.517
  %232 = add i32 %230, -852275899
  %233 = sub i32 %232, 1
  %234 = sub i32 %233, -852275899
  %235 = sub i32 %230, 1
  %236 = mul i32 %230, %234
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %231, 10
  %240 = xor i1 %238, true
  %241 = xor i1 %239, true
  %242 = xor i1 false, true
  %243 = and i1 %240, false
  %244 = and i1 %238, %242
  %245 = and i1 %241, false
  %246 = and i1 %239, %242
  %247 = or i1 %243, %244
  %248 = or i1 %245, %246
  %249 = xor i1 %247, %248
  %250 = or i1 %240, %241
  %251 = xor i1 %250, true
  %252 = or i1 false, %242
  %253 = and i1 %251, %252
  %254 = or i1 %249, %253
  %255 = or i1 %238, %239
  br i1 %254, label %256, label %321

; <label>:256:                                    ; preds = %225
  resume { i8*, i32 } %229

; <label>:257:                                    ; preds = %192
  %258 = landingpad { i8*, i32 }
          catch i8* null
  %259 = extractvalue { i8*, i32 } %258, 0
  call void @__clang_call_terminate(i8* %259) #12
  unreachable

; <label>:260:                                    ; preds = %189
  %261 = load i32, i32* @x.516
  %262 = load i32, i32* @y.517
  %263 = sub i32 0, 1
  %264 = add i32 %261, %263
  %265 = sub i32 %261, 1
  %266 = mul i32 %261, %264
  %267 = urem i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %262, 10
  %270 = xor i1 %268, true
  %271 = xor i1 %269, true
  %272 = xor i1 true, true
  %273 = and i1 %270, true
  %274 = and i1 %268, %272
  %275 = and i1 %271, true
  %276 = and i1 %269, %272
  %277 = or i1 %273, %274
  %278 = or i1 %275, %276
  %279 = xor i1 %277, %278
  %280 = or i1 %270, %271
  %281 = xor i1 %280, true
  %282 = or i1 true, %272
  %283 = and i1 %281, %282
  %284 = or i1 %279, %283
  %285 = or i1 %268, %269
  br i1 %284, label %286, label %326

; <label>:286:                                    ; preds = %260, %326
  %287 = load i32, i32* @x.516
  %288 = load i32, i32* @y.517
  %289 = sub i32 0, 1
  %290 = add i32 %287, %289
  %291 = sub i32 %287, 1
  %292 = mul i32 %287, %290
  %293 = urem i32 %292, 2
  %294 = icmp eq i32 %293, 0
  %295 = icmp slt i32 %288, 10
  %296 = xor i1 %294, true
  %297 = xor i1 %295, true
  %298 = xor i1 true, true
  %299 = and i1 %296, true
  %300 = and i1 %294, %298
  %301 = and i1 %297, true
  %302 = and i1 %295, %298
  %303 = or i1 %299, %300
  %304 = or i1 %301, %302
  %305 = xor i1 %303, %304
  %306 = or i1 %296, %297
  %307 = xor i1 %306, true
  %308 = or i1 true, %298
  %309 = and i1 %307, %308
  %310 = or i1 %305, %309
  %311 = or i1 %294, %295
  br i1 %310, label %312, label %326

; <label>:312:                                    ; preds = %286
  unreachable

; <label>:313:                                    ; preds = %31, %16
  %314 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %315 = call %"struct.std::pair"* @_ZSt11__addressofISt4pairIxxEEPT_RS2_(%"struct.std::pair"* dereferenceable(16) %314) #3
  br label %31

; <label>:316:                                    ; preds = %76, %62
  br label %76

; <label>:317:                                    ; preds = %119, %105
  br label %119

; <label>:318:                                    ; preds = %162, %135
  %319 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %320 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %319, i32 1
  store %"struct.std::pair"* %320, %"struct.std::pair"** %7, align 8
  br label %162

; <label>:321:                                    ; preds = %225, %198
  %322 = load i8*, i8** %8, align 8
  %323 = load i32, i32* %9, align 4
  %324 = insertvalue { i8*, i32 } undef, i8* %322, 0
  %325 = insertvalue { i8*, i32 } %324, i32 %323, 1
  br label %225

; <label>:326:                                    ; preds = %286, %260
  br label %286
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPSt4pairIxxEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPSt4pairIxxEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8) %5, %"class.std::move_iterator"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = xor i1 true, true
  %13 = and i1 %12, true
  %14 = and i1 true, %10
  %15 = or i1 %9, %11
  %16 = or i1 %13, %14
  %17 = xor i1 %15, %16
  %18 = xor i1 %7, true
  ret i1 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt4pairIxxEJS1_EEvPT_DpOT0_(%"struct.std::pair"*, %"struct.std::pair"* dereferenceable(16)) #4 comdat {
  %3 = alloca %"struct.std::pair"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %"struct.std::pair"*, %"struct.std::pair"** %3, align 8
  %6 = bitcast %"struct.std::pair"* %5 to i8*
  %7 = bitcast i8* %6 to %"struct.std::pair"*
  %8 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %9 = call dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardISt4pairIxxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair"* dereferenceable(16) %8) #3
  %10 = bitcast %"struct.std::pair"* %7 to i8*
  %11 = bitcast %"struct.std::pair"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 16, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"* @_ZSt11__addressofISt4pairIxxEEPT_RS2_(%"struct.std::pair"* dereferenceable(16)) #4 comdat {
  %2 = alloca %"struct.std::pair"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.522
  %6 = load i32, i32* @y.523
  %7 = sub i32 %5, 540698848
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 540698848
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -373459444, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -373459444, label %19
    i32 1454205996, label %39
    i32 1914421576, label %71
    i32 1078148580, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1454205996, i32 1078148580
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %40, align 8
  %41 = load %"struct.std::pair"*, %"struct.std::pair"** %40, align 8
  %42 = bitcast %"struct.std::pair"* %41 to i8*
  %43 = bitcast i8* %42 to %"struct.std::pair"*
  store %"struct.std::pair"* %43, %"struct.std::pair"** %2
  %44 = load i32, i32* @x.522
  %45 = load i32, i32* @y.523
  %46 = sub i32 %44, 1631739453
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 1631739453
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 1914421576, i32 1078148580
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %2
  ret %"struct.std::pair"* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %74, align 8
  %75 = load %"struct.std::pair"*, %"struct.std::pair"** %74, align 8
  %76 = bitcast %"struct.std::pair"* %75 to i8*
  %77 = bitcast i8* %76 to %"struct.std::pair"*
  store i32 1454205996, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair"* @_ZNKSt13move_iteratorIPSt4pairIxxEEdeEv(%"class.std::move_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::pair"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.524
  %6 = load i32, i32* @y.525
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 259763529, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 259763529, label %18
    i32 179124008, label %26
    i32 809433728, label %58
    i32 933161759, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 179124008, i32 933161759
  store i32 %25, i32* %14
  br label %65

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %27, align 8
  %28 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %27, align 8
  %29 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %28, i32 0, i32 0
  %30 = load %"struct.std::pair"*, %"struct.std::pair"** %29, align 8
  store %"struct.std::pair"* %30, %"struct.std::pair"** %2
  %31 = load i32, i32* @x.524
  %32 = load i32, i32* @y.525
  %33 = add i32 %31, 1009254464
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 1009254464
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 809433728, i32 933161759
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %2
  ret %"struct.std::pair"* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %61, align 8
  %62 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %61, align 8
  %63 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %62, i32 0, i32 0
  %64 = load %"struct.std::pair"*, %"struct.std::pair"** %63, align 8
  store i32 179124008, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPSt4pairIxxEEppEv(%"class.std::move_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %5, i32 1
  store %"struct.std::pair"* %6, %"struct.std::pair"** %4, align 8
  ret %"class.std::move_iterator"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPSt4pairIxxEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = call %"struct.std::pair"* @_ZNKSt13move_iteratorIPSt4pairIxxEE4baseEv(%"class.std::move_iterator"* %5)
  %7 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %4, align 8
  %8 = call %"struct.std::pair"* @_ZNKSt13move_iteratorIPSt4pairIxxEE4baseEv(%"class.std::move_iterator"* %7)
  %9 = icmp eq %"struct.std::pair"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"* @_ZNKSt13move_iteratorIPSt4pairIxxEE4baseEv(%"class.std::move_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  ret %"struct.std::pair"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair"* @_ZSt7forwardISt4pairIxxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair"* dereferenceable(16)) #4 comdat {
  %2 = alloca %"struct.std::pair"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.532
  %6 = load i32, i32* @y.533
  %7 = sub i32 %5, -1272040803
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1272040803
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -577301909, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %49
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -577301909, label %19
    i32 -559681591, label %27
    i32 131988297, label %44
    i32 -1660858122, label %46
  ]

; <label>:18:                                     ; preds = %16
  br label %49

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -559681591, i32 -1660858122
  store i32 %26, i32* %15
  br label %49

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %28, align 8
  %29 = load %"struct.std::pair"*, %"struct.std::pair"** %28, align 8
  store %"struct.std::pair"* %29, %"struct.std::pair"** %2
  %30 = load i32, i32* @x.532
  %31 = load i32, i32* @y.533
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 131988297, i32 -1660858122
  store i32 %43, i32* %15
  br label %49

; <label>:44:                                     ; preds = %16
  %45 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %2
  ret %"struct.std::pair"* %45

; <label>:46:                                     ; preds = %16
  %47 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %47, align 8
  %48 = load %"struct.std::pair"*, %"struct.std::pair"** %47, align 8
  store i32 -559681591, i32* %15
  br label %49

; <label>:49:                                     ; preds = %46, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPSt4pairIxxEEC2ES2_(%"class.std::move_iterator"*, %"struct.std::pair"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  store %"struct.std::pair"* %7, %"struct.std::pair"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIxxEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.17"*, %"struct.std::pair"*) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %3, align 8
  %6 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator"*, %"struct.std::pair"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"struct.std::pair"**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"struct.std::pair"** %1, %"struct.std::pair"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::pair"**, %"struct.std::pair"*** %4, align 8
  %8 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  store %"struct.std::pair"* %8, %"struct.std::pair"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::pair"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIxxESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  ret %"struct.std::pair"** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5eraseERKS1_(%"class.std::_Rb_tree.8"*, %"struct.std::pair"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"class.std::_Rb_tree.8"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  %5 = alloca %"struct.std::pair.27", align 8
  %6 = alloca i64, align 8
  %7 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %8 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %9 = alloca %"struct.std::_Rb_tree_iterator.28", align 8
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %10 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %3, align 8
  %11 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %12 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11equal_rangeERKS1_(%"class.std::_Rb_tree.8"* %10, %"struct.std::pair"* dereferenceable(16) %11)
  %13 = bitcast %"struct.std::pair.27"* %5 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %14 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %13, i32 0, i32 0
  %15 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %12, 0
  store %"struct.std::_Rb_tree_node_base"* %15, %"struct.std::_Rb_tree_node_base"** %14, align 8
  %16 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %13, i32 0, i32 1
  %17 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %12, 1
  store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %16, align 8
  %18 = call i64 @_ZNKSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE4sizeEv(%"class.std::_Rb_tree.8"* %10) #3
  store i64 %18, i64* %6, align 8
  %19 = getelementptr inbounds %"struct.std::pair.27", %"struct.std::pair.27"* %5, i32 0, i32 0
  call void @_ZNSt23_Rb_tree_const_iteratorISt4pairIxxEEC2ERKSt17_Rb_tree_iteratorIS1_E(%"struct.std::_Rb_tree_const_iterator"* %7, %"struct.std::_Rb_tree_iterator.28"* dereferenceable(8) %19) #3
  %20 = getelementptr inbounds %"struct.std::pair.27", %"struct.std::pair.27"* %5, i32 0, i32 1
  call void @_ZNSt23_Rb_tree_const_iteratorISt4pairIxxEEC2ERKSt17_Rb_tree_iteratorIS1_E(%"struct.std::_Rb_tree_const_iterator"* %8, %"struct.std::_Rb_tree_iterator.28"* dereferenceable(8) %20) #3
  %21 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %7, i32 0, i32 0
  %22 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %21, align 8
  %23 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %8, i32 0, i32 0
  %24 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %23, align 8
  %25 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5eraseB5cxx11ESt23_Rb_tree_const_iteratorIS1_ES9_(%"class.std::_Rb_tree.8"* %10, %"struct.std::_Rb_tree_node_base"* %22, %"struct.std::_Rb_tree_node_base"* %24)
  %26 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %9, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %25, %"struct.std::_Rb_tree_node_base"** %26, align 8
  %27 = load i64, i64* %6, align 8
  %28 = call i64 @_ZNKSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE4sizeEv(%"class.std::_Rb_tree.8"* %10) #3
  %29 = add i64 %27, -6550613516081107056
  %30 = sub i64 %29, %28
  %31 = sub i64 %30, -6550613516081107056
  %32 = sub i64 %27, %28
  ret i64 %31
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11equal_rangeERKS1_(%"class.std::_Rb_tree.8"*, %"struct.std::pair"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
  %4 = alloca i1
  %5 = alloca %"class.std::_Rb_tree.8"*
  %6 = alloca %"struct.std::_Rb_tree_iterator.28"*
  %7 = alloca %"struct.std::_Rb_tree_iterator.28"*
  %8 = alloca %"struct.std::_Rb_tree_iterator.28"*
  %9 = alloca %"struct.std::_Rb_tree_iterator.28"*
  %10 = alloca %"struct.std::_Rb_tree_node.21"**
  %11 = alloca %"struct.std::_Rb_tree_node.21"**
  %12 = alloca %"struct.std::_Rb_tree_node.21"**
  %13 = alloca %"struct.std::_Rb_tree_node.21"**
  %14 = alloca %"struct.std::pair"**
  %15 = alloca %"struct.std::pair.27"*
  %16 = alloca i1
  %17 = alloca i1
  %18 = load i32, i32* @x.544
  %19 = load i32, i32* @y.545
  %20 = sub i32 0, 1
  %21 = add i32 %18, %20
  %22 = sub i32 %18, 1
  %23 = mul i32 %18, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  store i1 %25, i1* %17
  %26 = icmp slt i32 %19, 10
  store i1 %26, i1* %16
  %27 = alloca i32
  store i32 -1440768652, i32* %27
  br label %28

; <label>:28:                                     ; preds = %2, %525
  %29 = load i32, i32* %27
  switch i32 %29, label %30 [
    i32 -1440768652, label %31
    i32 -327357510, label %39
    i32 -288771480, label %85
    i32 -929085888, label %86
    i32 -479404499, label %101
    i32 1574785094, label %120
    i32 376771564, label %123
    i32 928153728, label %134
    i32 1437412240, label %162
    i32 -1223441815, label %183
    i32 -532785366, label %184
    i32 -1346332902, label %195
    i32 -773087002, label %204
    i32 695098330, label %232
    i32 1449268206, label %289
    i32 -916465448, label %290
    i32 -2075299078, label %291
    i32 -717893180, label %306
    i32 1300846030, label %322
    i32 676830294, label %323
    i32 -1353474139, label %339
    i32 -2070703822, label %378
    i32 -2092969049, label %379
    i32 816980128, label %407
    i32 -1635181285, label %438
    i32 111755784, label %440
    i32 616427595, label %455
    i32 -853868500, label %459
    i32 534868622, label %465
    i32 -199136363, label %508
    i32 -860308105, label %509
    i32 -582038027, label %521
  ]

; <label>:30:                                     ; preds = %28
  br label %525

; <label>:31:                                     ; preds = %28
  %32 = load volatile i1, i1* %17
  %33 = load volatile i1, i1* %16
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  %38 = select i1 %36, i32 -327357510, i32 111755784
  store i32 %38, i32* %27
  br label %525

; <label>:39:                                     ; preds = %28
  %40 = alloca %"struct.std::pair.27", align 8
  store %"struct.std::pair.27"* %40, %"struct.std::pair.27"** %15
  %41 = alloca %"class.std::_Rb_tree.8"*, align 8
  %42 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"** %42, %"struct.std::pair"*** %14
  %43 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  store %"struct.std::_Rb_tree_node.21"** %43, %"struct.std::_Rb_tree_node.21"*** %13
  %44 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  store %"struct.std::_Rb_tree_node.21"** %44, %"struct.std::_Rb_tree_node.21"*** %12
  %45 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  store %"struct.std::_Rb_tree_node.21"** %45, %"struct.std::_Rb_tree_node.21"*** %11
  %46 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  store %"struct.std::_Rb_tree_node.21"** %46, %"struct.std::_Rb_tree_node.21"*** %10
  %47 = alloca %"struct.std::_Rb_tree_iterator.28", align 8
  store %"struct.std::_Rb_tree_iterator.28"* %47, %"struct.std::_Rb_tree_iterator.28"** %9
  %48 = alloca %"struct.std::_Rb_tree_iterator.28", align 8
  store %"struct.std::_Rb_tree_iterator.28"* %48, %"struct.std::_Rb_tree_iterator.28"** %8
  %49 = alloca %"struct.std::_Rb_tree_iterator.28", align 8
  store %"struct.std::_Rb_tree_iterator.28"* %49, %"struct.std::_Rb_tree_iterator.28"** %7
  %50 = alloca %"struct.std::_Rb_tree_iterator.28", align 8
  store %"struct.std::_Rb_tree_iterator.28"* %50, %"struct.std::_Rb_tree_iterator.28"** %6
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %41, align 8
  %51 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %14
  store %"struct.std::pair"* %1, %"struct.std::pair"** %51, align 8
  %52 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %41, align 8
  store %"class.std::_Rb_tree.8"* %52, %"class.std::_Rb_tree.8"** %5
  %53 = load volatile %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %5
  %54 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_beginEv(%"class.std::_Rb_tree.8"* %53) #3
  %55 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %13
  store %"struct.std::_Rb_tree_node.21"* %54, %"struct.std::_Rb_tree_node.21"** %55, align 8
  %56 = load volatile %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %5
  %57 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_M_endEv(%"class.std::_Rb_tree.8"* %56) #3
  %58 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %12
  store %"struct.std::_Rb_tree_node.21"* %57, %"struct.std::_Rb_tree_node.21"** %58, align 8
  %59 = load i32, i32* @x.544
  %60 = load i32, i32* @y.545
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 -288771480, i32 111755784
  store i32 %84, i32* %27
  br label %525

; <label>:85:                                     ; preds = %28
  store i32 -929085888, i32* %27
  br label %525

; <label>:86:                                     ; preds = %28
  %87 = load i32, i32* @x.544
  %88 = load i32, i32* @y.545
  %89 = sub i32 0, 1
  %90 = add i32 %87, %89
  %91 = sub i32 %87, 1
  %92 = mul i32 %87, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %88, 10
  %96 = and i1 %94, %95
  %97 = xor i1 %94, %95
  %98 = or i1 %96, %97
  %99 = or i1 %94, %95
  %100 = select i1 %98, i32 -479404499, i32 616427595
  store i32 %100, i32* %27
  br label %525

; <label>:101:                                    ; preds = %28
  %102 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %13
  %103 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %102, align 8
  %104 = icmp ne %"struct.std::_Rb_tree_node.21"* %103, null
  store i1 %104, i1* %4
  %105 = load i32, i32* @x.544
  %106 = load i32, i32* @y.545
  %107 = add i32 %105, -391593715
  %108 = sub i32 %107, 1
  %109 = sub i32 %108, -391593715
  %110 = sub i32 %105, 1
  %111 = mul i32 %105, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %106, 10
  %115 = and i1 %113, %114
  %116 = xor i1 %113, %114
  %117 = or i1 %115, %116
  %118 = or i1 %113, %114
  %119 = select i1 %117, i32 1574785094, i32 616427595
  store i32 %119, i32* %27
  br label %525

; <label>:120:                                    ; preds = %28
  %121 = load volatile i1, i1* %4
  %122 = select i1 %121, i32 376771564, i32 676830294
  store i32 %122, i32* %27
  br label %525

; <label>:123:                                    ; preds = %28
  %124 = load volatile %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %5
  %125 = getelementptr inbounds %"class.std::_Rb_tree.8", %"class.std::_Rb_tree.8"* %124, i32 0, i32 0
  %126 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %125, i32 0, i32 0
  %127 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %13
  %128 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %127, align 8
  %129 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_S_keyEPKSt13_Rb_tree_nodeIS1_E(%"struct.std::_Rb_tree_node.21"* %128)
  %130 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %14
  %131 = load %"struct.std::pair"*, %"struct.std::pair"** %130, align 8
  %132 = call zeroext i1 @_ZNKSt4lessISt4pairIxxEEclERKS1_S4_(%"struct.std::less.12"* %126, %"struct.std::pair"* dereferenceable(16) %129, %"struct.std::pair"* dereferenceable(16) %131)
  %133 = select i1 %132, i32 928153728, i32 -532785366
  store i32 %133, i32* %27
  br label %525

; <label>:134:                                    ; preds = %28
  %135 = load i32, i32* @x.544
  %136 = load i32, i32* @y.545
  %137 = add i32 %135, 1135749391
  %138 = sub i32 %137, 1
  %139 = sub i32 %138, 1135749391
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = xor i1 %143, true
  %146 = xor i1 %144, true
  %147 = xor i1 true, true
  %148 = and i1 %145, true
  %149 = and i1 %143, %147
  %150 = and i1 %146, true
  %151 = and i1 %144, %147
  %152 = or i1 %148, %149
  %153 = or i1 %150, %151
  %154 = xor i1 %152, %153
  %155 = or i1 %145, %146
  %156 = xor i1 %155, true
  %157 = or i1 true, %147
  %158 = and i1 %156, %157
  %159 = or i1 %154, %158
  %160 = or i1 %143, %144
  %161 = select i1 %159, i32 1437412240, i32 -853868500
  store i32 %161, i32* %27
  br label %525

; <label>:162:                                    ; preds = %28
  %163 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %13
  %164 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %163, align 8
  %165 = bitcast %"struct.std::_Rb_tree_node.21"* %164 to %"struct.std::_Rb_tree_node_base"*
  %166 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %165) #3
  %167 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %13
  store %"struct.std::_Rb_tree_node.21"* %166, %"struct.std::_Rb_tree_node.21"** %167, align 8
  %168 = load i32, i32* @x.544
  %169 = load i32, i32* @y.545
  %170 = sub i32 %168, 1911248361
  %171 = sub i32 %170, 1
  %172 = add i32 %171, 1911248361
  %173 = sub i32 %168, 1
  %174 = mul i32 %168, %172
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %169, 10
  %178 = and i1 %176, %177
  %179 = xor i1 %176, %177
  %180 = or i1 %178, %179
  %181 = or i1 %176, %177
  %182 = select i1 %180, i32 -1223441815, i32 -853868500
  store i32 %182, i32* %27
  br label %525

; <label>:183:                                    ; preds = %28
  store i32 -2075299078, i32* %27
  br label %525

; <label>:184:                                    ; preds = %28
  %185 = load volatile %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %5
  %186 = getelementptr inbounds %"class.std::_Rb_tree.8", %"class.std::_Rb_tree.8"* %185, i32 0, i32 0
  %187 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %186, i32 0, i32 0
  %188 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %14
  %189 = load %"struct.std::pair"*, %"struct.std::pair"** %188, align 8
  %190 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %13
  %191 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %190, align 8
  %192 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_S_keyEPKSt13_Rb_tree_nodeIS1_E(%"struct.std::_Rb_tree_node.21"* %191)
  %193 = call zeroext i1 @_ZNKSt4lessISt4pairIxxEEclERKS1_S4_(%"struct.std::less.12"* %187, %"struct.std::pair"* dereferenceable(16) %189, %"struct.std::pair"* dereferenceable(16) %192)
  %194 = select i1 %193, i32 -1346332902, i32 -773087002
  store i32 %194, i32* %27
  br label %525

; <label>:195:                                    ; preds = %28
  %196 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %13
  %197 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %196, align 8
  %198 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %12
  store %"struct.std::_Rb_tree_node.21"* %197, %"struct.std::_Rb_tree_node.21"** %198, align 8
  %199 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %13
  %200 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %199, align 8
  %201 = bitcast %"struct.std::_Rb_tree_node.21"* %200 to %"struct.std::_Rb_tree_node_base"*
  %202 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %201) #3
  %203 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %13
  store %"struct.std::_Rb_tree_node.21"* %202, %"struct.std::_Rb_tree_node.21"** %203, align 8
  store i32 -916465448, i32* %27
  br label %525

; <label>:204:                                    ; preds = %28
  %205 = load i32, i32* @x.544
  %206 = load i32, i32* @y.545
  %207 = add i32 %205, -1828424797
  %208 = sub i32 %207, 1
  %209 = sub i32 %208, -1828424797
  %210 = sub i32 %205, 1
  %211 = mul i32 %205, %209
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %206, 10
  %215 = xor i1 %213, true
  %216 = xor i1 %214, true
  %217 = xor i1 false, true
  %218 = and i1 %215, false
  %219 = and i1 %213, %217
  %220 = and i1 %216, false
  %221 = and i1 %214, %217
  %222 = or i1 %218, %219
  %223 = or i1 %220, %221
  %224 = xor i1 %222, %223
  %225 = or i1 %215, %216
  %226 = xor i1 %225, true
  %227 = or i1 false, %217
  %228 = and i1 %226, %227
  %229 = or i1 %224, %228
  %230 = or i1 %213, %214
  %231 = select i1 %229, i32 695098330, i32 534868622
  store i32 %231, i32* %27
  br label %525

; <label>:232:                                    ; preds = %28
  %233 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %13
  %234 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %233, align 8
  %235 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %11
  store %"struct.std::_Rb_tree_node.21"* %234, %"struct.std::_Rb_tree_node.21"** %235, align 8
  %236 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %12
  %237 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %236, align 8
  %238 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %10
  store %"struct.std::_Rb_tree_node.21"* %237, %"struct.std::_Rb_tree_node.21"** %238, align 8
  %239 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %13
  %240 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %239, align 8
  %241 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %12
  store %"struct.std::_Rb_tree_node.21"* %240, %"struct.std::_Rb_tree_node.21"** %241, align 8
  %242 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %13
  %243 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %242, align 8
  %244 = bitcast %"struct.std::_Rb_tree_node.21"* %243 to %"struct.std::_Rb_tree_node_base"*
  %245 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %244) #3
  %246 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %13
  store %"struct.std::_Rb_tree_node.21"* %245, %"struct.std::_Rb_tree_node.21"** %246, align 8
  %247 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %11
  %248 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %247, align 8
  %249 = bitcast %"struct.std::_Rb_tree_node.21"* %248 to %"struct.std::_Rb_tree_node_base"*
  %250 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %249) #3
  %251 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %11
  store %"struct.std::_Rb_tree_node.21"* %250, %"struct.std::_Rb_tree_node.21"** %251, align 8
  %252 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %13
  %253 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %252, align 8
  %254 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %12
  %255 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %254, align 8
  %256 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %14
  %257 = load %"struct.std::pair"*, %"struct.std::pair"** %256, align 8
  %258 = load volatile %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %5
  %259 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS1_ESA_RKS1_(%"class.std::_Rb_tree.8"* %258, %"struct.std::_Rb_tree_node.21"* %253, %"struct.std::_Rb_tree_node.21"* %255, %"struct.std::pair"* dereferenceable(16) %257)
  %260 = load volatile %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %9
  %261 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %260, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %259, %"struct.std::_Rb_tree_node_base"** %261, align 8
  %262 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %11
  %263 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %262, align 8
  %264 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %10
  %265 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %264, align 8
  %266 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %14
  %267 = load %"struct.std::pair"*, %"struct.std::pair"** %266, align 8
  %268 = load volatile %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %5
  %269 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS1_ESA_RKS1_(%"class.std::_Rb_tree.8"* %268, %"struct.std::_Rb_tree_node.21"* %263, %"struct.std::_Rb_tree_node.21"* %265, %"struct.std::pair"* dereferenceable(16) %267)
  %270 = load volatile %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %8
  %271 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %270, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %269, %"struct.std::_Rb_tree_node_base"** %271, align 8
  %272 = load volatile %"struct.std::pair.27"*, %"struct.std::pair.27"** %15
  %273 = load volatile %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %9
  %274 = load volatile %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %8
  call void @_ZNSt4pairISt17_Rb_tree_iteratorIS_IxxEES2_EC2IS2_S2_vEEOT_OT0_(%"struct.std::pair.27"* %272, %"struct.std::_Rb_tree_iterator.28"* dereferenceable(8) %273, %"struct.std::_Rb_tree_iterator.28"* dereferenceable(8) %274)
  %275 = load i32, i32* @x.544
  %276 = load i32, i32* @y.545
  %277 = sub i32 0, 1
  %278 = add i32 %275, %277
  %279 = sub i32 %275, 1
  %280 = mul i32 %275, %278
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %276, 10
  %284 = and i1 %282, %283
  %285 = xor i1 %282, %283
  %286 = or i1 %284, %285
  %287 = or i1 %282, %283
  %288 = select i1 %286, i32 1449268206, i32 534868622
  store i32 %288, i32* %27
  br label %525

; <label>:289:                                    ; preds = %28
  store i32 -2092969049, i32* %27
  br label %525

; <label>:290:                                    ; preds = %28
  store i32 -2075299078, i32* %27
  br label %525

; <label>:291:                                    ; preds = %28
  %292 = load i32, i32* @x.544
  %293 = load i32, i32* @y.545
  %294 = sub i32 0, 1
  %295 = add i32 %292, %294
  %296 = sub i32 %292, 1
  %297 = mul i32 %292, %295
  %298 = urem i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %293, 10
  %301 = and i1 %299, %300
  %302 = xor i1 %299, %300
  %303 = or i1 %301, %302
  %304 = or i1 %299, %300
  %305 = select i1 %303, i32 -717893180, i32 -199136363
  store i32 %305, i32* %27
  br label %525

; <label>:306:                                    ; preds = %28
  %307 = load i32, i32* @x.544
  %308 = load i32, i32* @y.545
  %309 = sub i32 %307, 969392196
  %310 = sub i32 %309, 1
  %311 = add i32 %310, 969392196
  %312 = sub i32 %307, 1
  %313 = mul i32 %307, %311
  %314 = urem i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %308, 10
  %317 = and i1 %315, %316
  %318 = xor i1 %315, %316
  %319 = or i1 %317, %318
  %320 = or i1 %315, %316
  %321 = select i1 %319, i32 1300846030, i32 -199136363
  store i32 %321, i32* %27
  br label %525

; <label>:322:                                    ; preds = %28
  store i32 -929085888, i32* %27
  br label %525

; <label>:323:                                    ; preds = %28
  %324 = load i32, i32* @x.544
  %325 = load i32, i32* @y.545
  %326 = sub i32 %324, -640551919
  %327 = sub i32 %326, 1
  %328 = add i32 %327, -640551919
  %329 = sub i32 %324, 1
  %330 = mul i32 %324, %328
  %331 = urem i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = icmp slt i32 %325, 10
  %334 = and i1 %332, %333
  %335 = xor i1 %332, %333
  %336 = or i1 %334, %335
  %337 = or i1 %332, %333
  %338 = select i1 %336, i32 -1353474139, i32 -860308105
  store i32 %338, i32* %27
  br label %525

; <label>:339:                                    ; preds = %28
  %340 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %12
  %341 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %340, align 8
  %342 = bitcast %"struct.std::_Rb_tree_node.21"* %341 to %"struct.std::_Rb_tree_node_base"*
  %343 = load volatile %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %7
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.28"* %343, %"struct.std::_Rb_tree_node_base"* %342) #3
  %344 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %12
  %345 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %344, align 8
  %346 = bitcast %"struct.std::_Rb_tree_node.21"* %345 to %"struct.std::_Rb_tree_node_base"*
  %347 = load volatile %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %6
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.28"* %347, %"struct.std::_Rb_tree_node_base"* %346) #3
  %348 = load volatile %"struct.std::pair.27"*, %"struct.std::pair.27"** %15
  %349 = load volatile %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %7
  %350 = load volatile %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %6
  call void @_ZNSt4pairISt17_Rb_tree_iteratorIS_IxxEES2_EC2IS2_S2_vEEOT_OT0_(%"struct.std::pair.27"* %348, %"struct.std::_Rb_tree_iterator.28"* dereferenceable(8) %349, %"struct.std::_Rb_tree_iterator.28"* dereferenceable(8) %350)
  %351 = load i32, i32* @x.544
  %352 = load i32, i32* @y.545
  %353 = sub i32 %351, -1054851569
  %354 = sub i32 %353, 1
  %355 = add i32 %354, -1054851569
  %356 = sub i32 %351, 1
  %357 = mul i32 %351, %355
  %358 = urem i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %352, 10
  %361 = xor i1 %359, true
  %362 = xor i1 %360, true
  %363 = xor i1 true, true
  %364 = and i1 %361, true
  %365 = and i1 %359, %363
  %366 = and i1 %362, true
  %367 = and i1 %360, %363
  %368 = or i1 %364, %365
  %369 = or i1 %366, %367
  %370 = xor i1 %368, %369
  %371 = or i1 %361, %362
  %372 = xor i1 %371, true
  %373 = or i1 true, %363
  %374 = and i1 %372, %373
  %375 = or i1 %370, %374
  %376 = or i1 %359, %360
  %377 = select i1 %375, i32 -2070703822, i32 -860308105
  store i32 %377, i32* %27
  br label %525

; <label>:378:                                    ; preds = %28
  store i32 -2092969049, i32* %27
  br label %525

; <label>:379:                                    ; preds = %28
  %380 = load i32, i32* @x.544
  %381 = load i32, i32* @y.545
  %382 = add i32 %380, 1834969748
  %383 = sub i32 %382, 1
  %384 = sub i32 %383, 1834969748
  %385 = sub i32 %380, 1
  %386 = mul i32 %380, %384
  %387 = urem i32 %386, 2
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %381, 10
  %390 = xor i1 %388, true
  %391 = xor i1 %389, true
  %392 = xor i1 false, true
  %393 = and i1 %390, false
  %394 = and i1 %388, %392
  %395 = and i1 %391, false
  %396 = and i1 %389, %392
  %397 = or i1 %393, %394
  %398 = or i1 %395, %396
  %399 = xor i1 %397, %398
  %400 = or i1 %390, %391
  %401 = xor i1 %400, true
  %402 = or i1 false, %392
  %403 = and i1 %401, %402
  %404 = or i1 %399, %403
  %405 = or i1 %388, %389
  %406 = select i1 %404, i32 816980128, i32 -582038027
  store i32 %406, i32* %27
  br label %525

; <label>:407:                                    ; preds = %28
  %408 = load volatile %"struct.std::pair.27"*, %"struct.std::pair.27"** %15
  %409 = bitcast %"struct.std::pair.27"* %408 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %410 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %409, align 8
  store { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %410, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %3
  %411 = load i32, i32* @x.544
  %412 = load i32, i32* @y.545
  %413 = sub i32 %411, -2076364265
  %414 = sub i32 %413, 1
  %415 = add i32 %414, -2076364265
  %416 = sub i32 %411, 1
  %417 = mul i32 %411, %415
  %418 = urem i32 %417, 2
  %419 = icmp eq i32 %418, 0
  %420 = icmp slt i32 %412, 10
  %421 = xor i1 %419, true
  %422 = xor i1 %420, true
  %423 = xor i1 false, true
  %424 = and i1 %421, false
  %425 = and i1 %419, %423
  %426 = and i1 %422, false
  %427 = and i1 %420, %423
  %428 = or i1 %424, %425
  %429 = or i1 %426, %427
  %430 = xor i1 %428, %429
  %431 = or i1 %421, %422
  %432 = xor i1 %431, true
  %433 = or i1 false, %423
  %434 = and i1 %432, %433
  %435 = or i1 %430, %434
  %436 = or i1 %419, %420
  %437 = select i1 %435, i32 -1635181285, i32 -582038027
  store i32 %437, i32* %27
  br label %525

; <label>:438:                                    ; preds = %28
  %439 = load volatile { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %3
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %439

; <label>:440:                                    ; preds = %28
  %441 = alloca %"struct.std::pair.27", align 8
  %442 = alloca %"class.std::_Rb_tree.8"*, align 8
  %443 = alloca %"struct.std::pair"*, align 8
  %444 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  %445 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  %446 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  %447 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  %448 = alloca %"struct.std::_Rb_tree_iterator.28", align 8
  %449 = alloca %"struct.std::_Rb_tree_iterator.28", align 8
  %450 = alloca %"struct.std::_Rb_tree_iterator.28", align 8
  %451 = alloca %"struct.std::_Rb_tree_iterator.28", align 8
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %442, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %443, align 8
  %452 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %442, align 8
  %453 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_beginEv(%"class.std::_Rb_tree.8"* %452) #3
  store %"struct.std::_Rb_tree_node.21"* %453, %"struct.std::_Rb_tree_node.21"** %444, align 8
  %454 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_M_endEv(%"class.std::_Rb_tree.8"* %452) #3
  store %"struct.std::_Rb_tree_node.21"* %454, %"struct.std::_Rb_tree_node.21"** %445, align 8
  store i32 -327357510, i32* %27
  br label %525

; <label>:455:                                    ; preds = %28
  %456 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %13
  %457 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %456, align 8
  %458 = icmp ne %"struct.std::_Rb_tree_node.21"* %457, null
  store i32 -479404499, i32* %27
  br label %525

; <label>:459:                                    ; preds = %28
  %460 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %13
  %461 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %460, align 8
  %462 = bitcast %"struct.std::_Rb_tree_node.21"* %461 to %"struct.std::_Rb_tree_node_base"*
  %463 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %462) #3
  %464 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %13
  store %"struct.std::_Rb_tree_node.21"* %463, %"struct.std::_Rb_tree_node.21"** %464, align 8
  store i32 1437412240, i32* %27
  br label %525

; <label>:465:                                    ; preds = %28
  %466 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %13
  %467 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %466, align 8
  %468 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %11
  store %"struct.std::_Rb_tree_node.21"* %467, %"struct.std::_Rb_tree_node.21"** %468, align 8
  %469 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %12
  %470 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %469, align 8
  %471 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %10
  store %"struct.std::_Rb_tree_node.21"* %470, %"struct.std::_Rb_tree_node.21"** %471, align 8
  %472 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %13
  %473 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %472, align 8
  %474 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %12
  store %"struct.std::_Rb_tree_node.21"* %473, %"struct.std::_Rb_tree_node.21"** %474, align 8
  %475 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %13
  %476 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %475, align 8
  %477 = bitcast %"struct.std::_Rb_tree_node.21"* %476 to %"struct.std::_Rb_tree_node_base"*
  %478 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %477) #3
  %479 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %13
  store %"struct.std::_Rb_tree_node.21"* %478, %"struct.std::_Rb_tree_node.21"** %479, align 8
  %480 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %11
  %481 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %480, align 8
  %482 = bitcast %"struct.std::_Rb_tree_node.21"* %481 to %"struct.std::_Rb_tree_node_base"*
  %483 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %482) #3
  %484 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %11
  store %"struct.std::_Rb_tree_node.21"* %483, %"struct.std::_Rb_tree_node.21"** %484, align 8
  %485 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %13
  %486 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %485, align 8
  %487 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %12
  %488 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %487, align 8
  %489 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %14
  %490 = load %"struct.std::pair"*, %"struct.std::pair"** %489, align 8
  %491 = load volatile %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %5
  %492 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS1_ESA_RKS1_(%"class.std::_Rb_tree.8"* %491, %"struct.std::_Rb_tree_node.21"* %486, %"struct.std::_Rb_tree_node.21"* %488, %"struct.std::pair"* dereferenceable(16) %490)
  %493 = load volatile %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %9
  %494 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %493, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %492, %"struct.std::_Rb_tree_node_base"** %494, align 8
  %495 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %11
  %496 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %495, align 8
  %497 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %10
  %498 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %497, align 8
  %499 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %14
  %500 = load %"struct.std::pair"*, %"struct.std::pair"** %499, align 8
  %501 = load volatile %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %5
  %502 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS1_ESA_RKS1_(%"class.std::_Rb_tree.8"* %501, %"struct.std::_Rb_tree_node.21"* %496, %"struct.std::_Rb_tree_node.21"* %498, %"struct.std::pair"* dereferenceable(16) %500)
  %503 = load volatile %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %8
  %504 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %503, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %502, %"struct.std::_Rb_tree_node_base"** %504, align 8
  %505 = load volatile %"struct.std::pair.27"*, %"struct.std::pair.27"** %15
  %506 = load volatile %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %9
  %507 = load volatile %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %8
  call void @_ZNSt4pairISt17_Rb_tree_iteratorIS_IxxEES2_EC2IS2_S2_vEEOT_OT0_(%"struct.std::pair.27"* %505, %"struct.std::_Rb_tree_iterator.28"* dereferenceable(8) %506, %"struct.std::_Rb_tree_iterator.28"* dereferenceable(8) %507)
  store i32 695098330, i32* %27
  br label %525

; <label>:508:                                    ; preds = %28
  store i32 -717893180, i32* %27
  br label %525

; <label>:509:                                    ; preds = %28
  %510 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %12
  %511 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %510, align 8
  %512 = bitcast %"struct.std::_Rb_tree_node.21"* %511 to %"struct.std::_Rb_tree_node_base"*
  %513 = load volatile %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %7
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.28"* %513, %"struct.std::_Rb_tree_node_base"* %512) #3
  %514 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %12
  %515 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %514, align 8
  %516 = bitcast %"struct.std::_Rb_tree_node.21"* %515 to %"struct.std::_Rb_tree_node_base"*
  %517 = load volatile %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %6
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.28"* %517, %"struct.std::_Rb_tree_node_base"* %516) #3
  %518 = load volatile %"struct.std::pair.27"*, %"struct.std::pair.27"** %15
  %519 = load volatile %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %7
  %520 = load volatile %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %6
  call void @_ZNSt4pairISt17_Rb_tree_iteratorIS_IxxEES2_EC2IS2_S2_vEEOT_OT0_(%"struct.std::pair.27"* %518, %"struct.std::_Rb_tree_iterator.28"* dereferenceable(8) %519, %"struct.std::_Rb_tree_iterator.28"* dereferenceable(8) %520)
  store i32 -1353474139, i32* %27
  br label %525

; <label>:521:                                    ; preds = %28
  %522 = load volatile %"struct.std::pair.27"*, %"struct.std::pair.27"** %15
  %523 = bitcast %"struct.std::pair.27"* %522 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %524 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %523, align 8
  store i32 816980128, i32* %27
  br label %525

; <label>:525:                                    ; preds = %521, %509, %508, %465, %459, %455, %440, %407, %379, %378, %339, %323, %322, %306, %291, %290, %289, %232, %204, %195, %184, %183, %162, %134, %123, %120, %101, %86, %85, %39, %31, %30
  br label %28
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE4sizeEv(%"class.std::_Rb_tree.8"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.546
  %6 = load i32, i32* @y.547
  %7 = sub i32 %5, 574373705
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 574373705
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 68680325, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %56
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 68680325, label %19
    i32 46999429, label %27
    i32 -1583980616, label %48
    i32 293113806, label %50
  ]

; <label>:18:                                     ; preds = %16
  br label %56

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 46999429, i32 293113806
  store i32 %26, i32* %15
  br label %56

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::_Rb_tree.8"*, align 8
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %28, align 8
  %29 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %28, align 8
  %30 = getelementptr inbounds %"class.std::_Rb_tree.8", %"class.std::_Rb_tree.8"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %30, i32 0, i32 2
  %32 = load i64, i64* %31, align 8
  store i64 %32, i64* %2
  %33 = load i32, i32* @x.546
  %34 = load i32, i32* @y.547
  %35 = add i32 %33, 1930495755
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 1930495755
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 -1583980616, i32 293113806
  store i32 %47, i32* %15
  br label %56

; <label>:48:                                     ; preds = %16
  %49 = load volatile i64, i64* %2
  ret i64 %49

; <label>:50:                                     ; preds = %16
  %51 = alloca %"class.std::_Rb_tree.8"*, align 8
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %51, align 8
  %52 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %51, align 8
  %53 = getelementptr inbounds %"class.std::_Rb_tree.8", %"class.std::_Rb_tree.8"* %52, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %53, i32 0, i32 2
  %55 = load i64, i64* %54, align 8
  store i32 46999429, i32* %15
  br label %56

; <label>:56:                                     ; preds = %50, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5eraseB5cxx11ESt23_Rb_tree_const_iteratorIS1_ES9_(%"class.std::_Rb_tree.8"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Rb_tree_iterator.28", align 8
  %5 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %6 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %7 = alloca %"class.std::_Rb_tree.8"*, align 8
  %8 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %9 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %6, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %11, align 8
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %7, align 8
  %12 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %7, align 8
  %13 = bitcast %"struct.std::_Rb_tree_const_iterator"* %8 to i8*
  %14 = bitcast %"struct.std::_Rb_tree_const_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"struct.std::_Rb_tree_const_iterator"* %9 to i8*
  %16 = bitcast %"struct.std::_Rb_tree_const_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %8, i32 0, i32 0
  %18 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %17, align 8
  %19 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %9, i32 0, i32 0
  %20 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %19, align 8
  call void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS1_ES9_(%"class.std::_Rb_tree.8"* %12, %"struct.std::_Rb_tree_node_base"* %18, %"struct.std::_Rb_tree_node_base"* %20)
  %21 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt23_Rb_tree_const_iteratorISt4pairIxxEE13_M_const_castEv(%"struct.std::_Rb_tree_const_iterator"* %6) #3
  %22 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %4, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %21, %"struct.std::_Rb_tree_node_base"** %22, align 8
  %23 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %4, i32 0, i32 0
  %24 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %23, align 8
  ret %"struct.std::_Rb_tree_node_base"* %24
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt23_Rb_tree_const_iteratorISt4pairIxxEEC2ERKSt17_Rb_tree_iteratorIS1_E(%"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_iterator.28"* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.550
  %6 = load i32, i32* @y.551
  %7 = sub i32 %5, -387553744
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -387553744
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1548404018, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %59
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1548404018, label %19
    i32 -1086758944, label %27
    i32 -92937609, label %50
    i32 -1460892087, label %51
  ]

; <label>:18:                                     ; preds = %16
  br label %59

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1086758944, i32 -1460892087
  store i32 %26, i32* %15
  br label %59

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %29 = alloca %"struct.std::_Rb_tree_iterator.28"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %28, align 8
  store %"struct.std::_Rb_tree_iterator.28"* %1, %"struct.std::_Rb_tree_iterator.28"** %29, align 8
  %30 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %28, align 8
  %31 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %30, i32 0, i32 0
  %32 = load %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %29, align 8
  %33 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %32, i32 0, i32 0
  %34 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %33, align 8
  store %"struct.std::_Rb_tree_node_base"* %34, %"struct.std::_Rb_tree_node_base"** %31, align 8
  %35 = load i32, i32* @x.550
  %36 = load i32, i32* @y.551
  %37 = add i32 %35, -1650850829
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -1650850829
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 -92937609, i32 -1460892087
  store i32 %49, i32* %15
  br label %59

; <label>:50:                                     ; preds = %16
  ret void

; <label>:51:                                     ; preds = %16
  %52 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %53 = alloca %"struct.std::_Rb_tree_iterator.28"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %52, align 8
  store %"struct.std::_Rb_tree_iterator.28"* %1, %"struct.std::_Rb_tree_iterator.28"** %53, align 8
  %54 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %52, align 8
  %55 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %54, i32 0, i32 0
  %56 = load %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %53, align 8
  %57 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %56, i32 0, i32 0
  %58 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %57, align 8
  store %"struct.std::_Rb_tree_node_base"* %58, %"struct.std::_Rb_tree_node_base"** %55, align 8
  store i32 -1086758944, i32* %15
  br label %59

; <label>:59:                                     ; preds = %51, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_M_endEv(%"class.std::_Rb_tree.8"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.8"*, align 8
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %2, align 8
  %3 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.8", %"class.std::_Rb_tree.8"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node.21"*
  ret %"struct.std::_Rb_tree_node.21"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt4lessISt4pairIxxEEclERKS1_S4_(%"struct.std::less.12"*, %"struct.std::pair"* dereferenceable(16), %"struct.std::pair"* dereferenceable(16)) #4 comdat align 2 {
  %4 = alloca %"struct.std::less.12"*, align 8
  %5 = alloca %"struct.std::pair"*, align 8
  %6 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::less.12"* %0, %"struct.std::less.12"** %4, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %5, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %6, align 8
  %7 = load %"struct.std::less.12"*, %"struct.std::less.12"** %4, align 8
  %8 = load %"struct.std::pair"*, %"struct.std::pair"** %5, align 8
  %9 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %10 = call zeroext i1 @_ZStltIxxEbRKSt4pairIT_T0_ES5_(%"struct.std::pair"* dereferenceable(16) %8, %"struct.std::pair"* dereferenceable(16) %9)
  ret i1 %10
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_S_keyEPKSt13_Rb_tree_nodeIS1_E(%"struct.std::_Rb_tree_node.21"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  %3 = alloca %"struct.std::_Identity", align 1
  store %"struct.std::_Rb_tree_node.21"* %0, %"struct.std::_Rb_tree_node.21"** %2, align 8
  %4 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %2, align 8
  %5 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_S_valueEPKSt13_Rb_tree_nodeIS1_E(%"struct.std::_Rb_tree_node.21"* %4)
  %6 = call dereferenceable(16) %"struct.std::pair"* @_ZNKSt9_IdentityISt4pairIxxEEclERKS1_(%"struct.std::_Identity"* %3, %"struct.std::pair"* dereferenceable(16) %5)
  ret %"struct.std::pair"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE14_M_lower_boundEPSt13_Rb_tree_nodeIS1_ESA_RKS1_(%"class.std::_Rb_tree.8"*, %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"*, %"struct.std::pair"* dereferenceable(16)) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca %"class.std::_Rb_tree.8"*
  %7 = alloca %"struct.std::_Rb_tree_iterator.28", align 8
  %8 = alloca %"class.std::_Rb_tree.8"*, align 8
  %9 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  %10 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  %11 = alloca %"struct.std::pair"*, align 8
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %8, align 8
  store %"struct.std::_Rb_tree_node.21"* %1, %"struct.std::_Rb_tree_node.21"** %9, align 8
  store %"struct.std::_Rb_tree_node.21"* %2, %"struct.std::_Rb_tree_node.21"** %10, align 8
  store %"struct.std::pair"* %3, %"struct.std::pair"** %11, align 8
  %12 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %8, align 8
  store %"class.std::_Rb_tree.8"* %12, %"class.std::_Rb_tree.8"** %6
  %13 = alloca i32
  store i32 1352849798, i32* %13
  br label %14

; <label>:14:                                     ; preds = %4, %141
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1352849798, label %17
    i32 -112337744, label %32
    i32 2046463858, label %62
    i32 561007925, label %65
    i32 -1211419119, label %74
    i32 -866879225, label %102
    i32 -705948072, label %122
    i32 -1101821513, label %123
    i32 98757386, label %127
    i32 -1531051597, label %128
    i32 1421291257, label %133
    i32 -2123142449, label %136
  ]

; <label>:16:                                     ; preds = %14
  br label %141

; <label>:17:                                     ; preds = %14
  %18 = load i32, i32* @x.558
  %19 = load i32, i32* @y.559
  %20 = sub i32 0, 1
  %21 = add i32 %18, %20
  %22 = sub i32 %18, 1
  %23 = mul i32 %18, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %19, 10
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 -112337744, i32 1421291257
  store i32 %31, i32* %13
  br label %141

; <label>:32:                                     ; preds = %14
  %33 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %9, align 8
  %34 = icmp ne %"struct.std::_Rb_tree_node.21"* %33, null
  store i1 %34, i1* %5
  %35 = load i32, i32* @x.558
  %36 = load i32, i32* @y.559
  %37 = add i32 %35, -199535161
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -199535161
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 2046463858, i32 1421291257
  store i32 %61, i32* %13
  br label %141

; <label>:62:                                     ; preds = %14
  %63 = load volatile i1, i1* %5
  %64 = select i1 %63, i32 561007925, i32 -1531051597
  store i32 %64, i32* %13
  br label %141

; <label>:65:                                     ; preds = %14
  %66 = load volatile %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %6
  %67 = getelementptr inbounds %"class.std::_Rb_tree.8", %"class.std::_Rb_tree.8"* %66, i32 0, i32 0
  %68 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %67, i32 0, i32 0
  %69 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %9, align 8
  %70 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_S_keyEPKSt13_Rb_tree_nodeIS1_E(%"struct.std::_Rb_tree_node.21"* %69)
  %71 = load %"struct.std::pair"*, %"struct.std::pair"** %11, align 8
  %72 = call zeroext i1 @_ZNKSt4lessISt4pairIxxEEclERKS1_S4_(%"struct.std::less.12"* %68, %"struct.std::pair"* dereferenceable(16) %70, %"struct.std::pair"* dereferenceable(16) %71)
  %73 = select i1 %72, i32 -1101821513, i32 -1211419119
  store i32 %73, i32* %13
  br label %141

; <label>:74:                                     ; preds = %14
  %75 = load i32, i32* @x.558
  %76 = load i32, i32* @y.559
  %77 = add i32 %75, -1385501020
  %78 = sub i32 %77, 1
  %79 = sub i32 %78, -1385501020
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = xor i1 %83, true
  %86 = xor i1 %84, true
  %87 = xor i1 true, true
  %88 = and i1 %85, true
  %89 = and i1 %83, %87
  %90 = and i1 %86, true
  %91 = and i1 %84, %87
  %92 = or i1 %88, %89
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = or i1 %85, %86
  %96 = xor i1 %95, true
  %97 = or i1 true, %87
  %98 = and i1 %96, %97
  %99 = or i1 %94, %98
  %100 = or i1 %83, %84
  %101 = select i1 %99, i32 -866879225, i32 -2123142449
  store i32 %101, i32* %13
  br label %141

; <label>:102:                                    ; preds = %14
  %103 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %9, align 8
  store %"struct.std::_Rb_tree_node.21"* %103, %"struct.std::_Rb_tree_node.21"** %10, align 8
  %104 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %9, align 8
  %105 = bitcast %"struct.std::_Rb_tree_node.21"* %104 to %"struct.std::_Rb_tree_node_base"*
  %106 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %105) #3
  store %"struct.std::_Rb_tree_node.21"* %106, %"struct.std::_Rb_tree_node.21"** %9, align 8
  %107 = load i32, i32* @x.558
  %108 = load i32, i32* @y.559
  %109 = add i32 %107, -221616819
  %110 = sub i32 %109, 1
  %111 = sub i32 %110, -221616819
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = and i1 %115, %116
  %118 = xor i1 %115, %116
  %119 = or i1 %117, %118
  %120 = or i1 %115, %116
  %121 = select i1 %119, i32 -705948072, i32 -2123142449
  store i32 %121, i32* %13
  br label %141

; <label>:122:                                    ; preds = %14
  store i32 98757386, i32* %13
  br label %141

; <label>:123:                                    ; preds = %14
  %124 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %9, align 8
  %125 = bitcast %"struct.std::_Rb_tree_node.21"* %124 to %"struct.std::_Rb_tree_node_base"*
  %126 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %125) #3
  store %"struct.std::_Rb_tree_node.21"* %126, %"struct.std::_Rb_tree_node.21"** %9, align 8
  store i32 98757386, i32* %13
  br label %141

; <label>:127:                                    ; preds = %14
  store i32 1352849798, i32* %13
  br label %141

; <label>:128:                                    ; preds = %14
  %129 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %10, align 8
  %130 = bitcast %"struct.std::_Rb_tree_node.21"* %129 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.28"* %7, %"struct.std::_Rb_tree_node_base"* %130) #3
  %131 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %7, i32 0, i32 0
  %132 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %131, align 8
  ret %"struct.std::_Rb_tree_node_base"* %132

; <label>:133:                                    ; preds = %14
  %134 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %9, align 8
  %135 = icmp ne %"struct.std::_Rb_tree_node.21"* %134, null
  store i32 -112337744, i32* %13
  br label %141

; <label>:136:                                    ; preds = %14
  %137 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %9, align 8
  store %"struct.std::_Rb_tree_node.21"* %137, %"struct.std::_Rb_tree_node.21"** %10, align 8
  %138 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %9, align 8
  %139 = bitcast %"struct.std::_Rb_tree_node.21"* %138 to %"struct.std::_Rb_tree_node_base"*
  %140 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %139) #3
  store %"struct.std::_Rb_tree_node.21"* %140, %"struct.std::_Rb_tree_node.21"** %9, align 8
  store i32 -866879225, i32* %13
  br label %141

; <label>:141:                                    ; preds = %136, %133, %127, %123, %122, %102, %74, %65, %62, %32, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE14_M_upper_boundEPSt13_Rb_tree_nodeIS1_ESA_RKS1_(%"class.std::_Rb_tree.8"*, %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"*, %"struct.std::pair"* dereferenceable(16)) #0 comdat align 2 {
  %5 = alloca %"struct.std::_Rb_tree_node_base"*
  %6 = alloca i1
  %7 = alloca %"class.std::_Rb_tree.8"*
  %8 = alloca %"struct.std::pair"**
  %9 = alloca %"struct.std::_Rb_tree_node.21"**
  %10 = alloca %"struct.std::_Rb_tree_node.21"**
  %11 = alloca %"struct.std::_Rb_tree_iterator.28"*
  %12 = alloca i1
  %13 = alloca i1
  %14 = load i32, i32* @x.560
  %15 = load i32, i32* @y.561
  %16 = add i32 %14, 421087599
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, 421087599
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  store i1 %22, i1* %13
  %23 = icmp slt i32 %15, 10
  store i1 %23, i1* %12
  %24 = alloca i32
  store i32 -1709961781, i32* %24
  br label %25

; <label>:25:                                     ; preds = %4, %345
  %26 = load i32, i32* %24
  switch i32 %26, label %27 [
    i32 -1709961781, label %28
    i32 958822070, label %48
    i32 -1279043476, label %84
    i32 319457336, label %85
    i32 -365521213, label %90
    i32 -45175023, label %118
    i32 2031230781, label %143
    i32 483912179, label %146
    i32 588254095, label %155
    i32 -757096786, label %182
    i32 -793833567, label %215
    i32 -1305494960, label %216
    i32 1348776027, label %244
    i32 -1489863804, label %272
    i32 -1278332693, label %273
    i32 2091029529, label %289
    i32 712704987, label %311
    i32 -313791273, label %313
    i32 384465879, label %320
    i32 576458504, label %330
    i32 185748666, label %336
    i32 -321760821, label %337
  ]

; <label>:27:                                     ; preds = %25
  br label %345

; <label>:28:                                     ; preds = %25
  %29 = load volatile i1, i1* %13
  %30 = load volatile i1, i1* %12
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 false, true
  %34 = and i1 %31, false
  %35 = and i1 %29, %33
  %36 = and i1 %32, false
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 false, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  %47 = select i1 %45, i32 958822070, i32 -313791273
  store i32 %47, i32* %24
  br label %345

; <label>:48:                                     ; preds = %25
  %49 = alloca %"struct.std::_Rb_tree_iterator.28", align 8
  store %"struct.std::_Rb_tree_iterator.28"* %49, %"struct.std::_Rb_tree_iterator.28"** %11
  %50 = alloca %"class.std::_Rb_tree.8"*, align 8
  %51 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  store %"struct.std::_Rb_tree_node.21"** %51, %"struct.std::_Rb_tree_node.21"*** %10
  %52 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  store %"struct.std::_Rb_tree_node.21"** %52, %"struct.std::_Rb_tree_node.21"*** %9
  %53 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"** %53, %"struct.std::pair"*** %8
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %50, align 8
  %54 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %10
  store %"struct.std::_Rb_tree_node.21"* %1, %"struct.std::_Rb_tree_node.21"** %54, align 8
  %55 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %9
  store %"struct.std::_Rb_tree_node.21"* %2, %"struct.std::_Rb_tree_node.21"** %55, align 8
  %56 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %8
  store %"struct.std::pair"* %3, %"struct.std::pair"** %56, align 8
  %57 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %50, align 8
  store %"class.std::_Rb_tree.8"* %57, %"class.std::_Rb_tree.8"** %7
  %58 = load i32, i32* @x.560
  %59 = load i32, i32* @y.561
  %60 = sub i32 0, 1
  %61 = add i32 %58, %60
  %62 = sub i32 %58, 1
  %63 = mul i32 %58, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %59, 10
  %67 = xor i1 %65, true
  %68 = xor i1 %66, true
  %69 = xor i1 true, true
  %70 = and i1 %67, true
  %71 = and i1 %65, %69
  %72 = and i1 %68, true
  %73 = and i1 %66, %69
  %74 = or i1 %70, %71
  %75 = or i1 %72, %73
  %76 = xor i1 %74, %75
  %77 = or i1 %67, %68
  %78 = xor i1 %77, true
  %79 = or i1 true, %69
  %80 = and i1 %78, %79
  %81 = or i1 %76, %80
  %82 = or i1 %65, %66
  %83 = select i1 %81, i32 -1279043476, i32 -313791273
  store i32 %83, i32* %24
  br label %345

; <label>:84:                                     ; preds = %25
  store i32 319457336, i32* %24
  br label %345

; <label>:85:                                     ; preds = %25
  %86 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %10
  %87 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %86, align 8
  %88 = icmp ne %"struct.std::_Rb_tree_node.21"* %87, null
  %89 = select i1 %88, i32 -365521213, i32 -1278332693
  store i32 %89, i32* %24
  br label %345

; <label>:90:                                     ; preds = %25
  %91 = load i32, i32* @x.560
  %92 = load i32, i32* @y.561
  %93 = sub i32 %91, -1863342337
  %94 = sub i32 %93, 1
  %95 = add i32 %94, -1863342337
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = xor i1 %99, true
  %102 = xor i1 %100, true
  %103 = xor i1 false, true
  %104 = and i1 %101, false
  %105 = and i1 %99, %103
  %106 = and i1 %102, false
  %107 = and i1 %100, %103
  %108 = or i1 %104, %105
  %109 = or i1 %106, %107
  %110 = xor i1 %108, %109
  %111 = or i1 %101, %102
  %112 = xor i1 %111, true
  %113 = or i1 false, %103
  %114 = and i1 %112, %113
  %115 = or i1 %110, %114
  %116 = or i1 %99, %100
  %117 = select i1 %115, i32 -45175023, i32 384465879
  store i32 %117, i32* %24
  br label %345

; <label>:118:                                    ; preds = %25
  %119 = load volatile %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %7
  %120 = getelementptr inbounds %"class.std::_Rb_tree.8", %"class.std::_Rb_tree.8"* %119, i32 0, i32 0
  %121 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %120, i32 0, i32 0
  %122 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %8
  %123 = load %"struct.std::pair"*, %"struct.std::pair"** %122, align 8
  %124 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %10
  %125 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %124, align 8
  %126 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_S_keyEPKSt13_Rb_tree_nodeIS1_E(%"struct.std::_Rb_tree_node.21"* %125)
  %127 = call zeroext i1 @_ZNKSt4lessISt4pairIxxEEclERKS1_S4_(%"struct.std::less.12"* %121, %"struct.std::pair"* dereferenceable(16) %123, %"struct.std::pair"* dereferenceable(16) %126)
  store i1 %127, i1* %6
  %128 = load i32, i32* @x.560
  %129 = load i32, i32* @y.561
  %130 = sub i32 %128, -170297817
  %131 = sub i32 %130, 1
  %132 = add i32 %131, -170297817
  %133 = sub i32 %128, 1
  %134 = mul i32 %128, %132
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %129, 10
  %138 = and i1 %136, %137
  %139 = xor i1 %136, %137
  %140 = or i1 %138, %139
  %141 = or i1 %136, %137
  %142 = select i1 %140, i32 2031230781, i32 384465879
  store i32 %142, i32* %24
  br label %345

; <label>:143:                                    ; preds = %25
  %144 = load volatile i1, i1* %6
  %145 = select i1 %144, i32 483912179, i32 588254095
  store i32 %145, i32* %24
  br label %345

; <label>:146:                                    ; preds = %25
  %147 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %10
  %148 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %147, align 8
  %149 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %9
  store %"struct.std::_Rb_tree_node.21"* %148, %"struct.std::_Rb_tree_node.21"** %149, align 8
  %150 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %10
  %151 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %150, align 8
  %152 = bitcast %"struct.std::_Rb_tree_node.21"* %151 to %"struct.std::_Rb_tree_node_base"*
  %153 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %152) #3
  %154 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %10
  store %"struct.std::_Rb_tree_node.21"* %153, %"struct.std::_Rb_tree_node.21"** %154, align 8
  store i32 -1305494960, i32* %24
  br label %345

; <label>:155:                                    ; preds = %25
  %156 = load i32, i32* @x.560
  %157 = load i32, i32* @y.561
  %158 = sub i32 0, 1
  %159 = add i32 %156, %158
  %160 = sub i32 %156, 1
  %161 = mul i32 %156, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %157, 10
  %165 = xor i1 %163, true
  %166 = xor i1 %164, true
  %167 = xor i1 false, true
  %168 = and i1 %165, false
  %169 = and i1 %163, %167
  %170 = and i1 %166, false
  %171 = and i1 %164, %167
  %172 = or i1 %168, %169
  %173 = or i1 %170, %171
  %174 = xor i1 %172, %173
  %175 = or i1 %165, %166
  %176 = xor i1 %175, true
  %177 = or i1 false, %167
  %178 = and i1 %176, %177
  %179 = or i1 %174, %178
  %180 = or i1 %163, %164
  %181 = select i1 %179, i32 -757096786, i32 576458504
  store i32 %181, i32* %24
  br label %345

; <label>:182:                                    ; preds = %25
  %183 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %10
  %184 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %183, align 8
  %185 = bitcast %"struct.std::_Rb_tree_node.21"* %184 to %"struct.std::_Rb_tree_node_base"*
  %186 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %185) #3
  %187 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %10
  store %"struct.std::_Rb_tree_node.21"* %186, %"struct.std::_Rb_tree_node.21"** %187, align 8
  %188 = load i32, i32* @x.560
  %189 = load i32, i32* @y.561
  %190 = add i32 %188, 1138609823
  %191 = sub i32 %190, 1
  %192 = sub i32 %191, 1138609823
  %193 = sub i32 %188, 1
  %194 = mul i32 %188, %192
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %189, 10
  %198 = xor i1 %196, true
  %199 = xor i1 %197, true
  %200 = xor i1 false, true
  %201 = and i1 %198, false
  %202 = and i1 %196, %200
  %203 = and i1 %199, false
  %204 = and i1 %197, %200
  %205 = or i1 %201, %202
  %206 = or i1 %203, %204
  %207 = xor i1 %205, %206
  %208 = or i1 %198, %199
  %209 = xor i1 %208, true
  %210 = or i1 false, %200
  %211 = and i1 %209, %210
  %212 = or i1 %207, %211
  %213 = or i1 %196, %197
  %214 = select i1 %212, i32 -793833567, i32 576458504
  store i32 %214, i32* %24
  br label %345

; <label>:215:                                    ; preds = %25
  store i32 -1305494960, i32* %24
  br label %345

; <label>:216:                                    ; preds = %25
  %217 = load i32, i32* @x.560
  %218 = load i32, i32* @y.561
  %219 = add i32 %217, -952360751
  %220 = sub i32 %219, 1
  %221 = sub i32 %220, -952360751
  %222 = sub i32 %217, 1
  %223 = mul i32 %217, %221
  %224 = urem i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %218, 10
  %227 = xor i1 %225, true
  %228 = xor i1 %226, true
  %229 = xor i1 true, true
  %230 = and i1 %227, true
  %231 = and i1 %225, %229
  %232 = and i1 %228, true
  %233 = and i1 %226, %229
  %234 = or i1 %230, %231
  %235 = or i1 %232, %233
  %236 = xor i1 %234, %235
  %237 = or i1 %227, %228
  %238 = xor i1 %237, true
  %239 = or i1 true, %229
  %240 = and i1 %238, %239
  %241 = or i1 %236, %240
  %242 = or i1 %225, %226
  %243 = select i1 %241, i32 1348776027, i32 185748666
  store i32 %243, i32* %24
  br label %345

; <label>:244:                                    ; preds = %25
  %245 = load i32, i32* @x.560
  %246 = load i32, i32* @y.561
  %247 = sub i32 %245, -674528194
  %248 = sub i32 %247, 1
  %249 = add i32 %248, -674528194
  %250 = sub i32 %245, 1
  %251 = mul i32 %245, %249
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %246, 10
  %255 = xor i1 %253, true
  %256 = xor i1 %254, true
  %257 = xor i1 true, true
  %258 = and i1 %255, true
  %259 = and i1 %253, %257
  %260 = and i1 %256, true
  %261 = and i1 %254, %257
  %262 = or i1 %258, %259
  %263 = or i1 %260, %261
  %264 = xor i1 %262, %263
  %265 = or i1 %255, %256
  %266 = xor i1 %265, true
  %267 = or i1 true, %257
  %268 = and i1 %266, %267
  %269 = or i1 %264, %268
  %270 = or i1 %253, %254
  %271 = select i1 %269, i32 -1489863804, i32 185748666
  store i32 %271, i32* %24
  br label %345

; <label>:272:                                    ; preds = %25
  store i32 319457336, i32* %24
  br label %345

; <label>:273:                                    ; preds = %25
  %274 = load i32, i32* @x.560
  %275 = load i32, i32* @y.561
  %276 = add i32 %274, -911482324
  %277 = sub i32 %276, 1
  %278 = sub i32 %277, -911482324
  %279 = sub i32 %274, 1
  %280 = mul i32 %274, %278
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %275, 10
  %284 = and i1 %282, %283
  %285 = xor i1 %282, %283
  %286 = or i1 %284, %285
  %287 = or i1 %282, %283
  %288 = select i1 %286, i32 2091029529, i32 -321760821
  store i32 %288, i32* %24
  br label %345

; <label>:289:                                    ; preds = %25
  %290 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %9
  %291 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %290, align 8
  %292 = bitcast %"struct.std::_Rb_tree_node.21"* %291 to %"struct.std::_Rb_tree_node_base"*
  %293 = load volatile %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %11
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.28"* %293, %"struct.std::_Rb_tree_node_base"* %292) #3
  %294 = load volatile %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %11
  %295 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %294, i32 0, i32 0
  %296 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %295, align 8
  store %"struct.std::_Rb_tree_node_base"* %296, %"struct.std::_Rb_tree_node_base"** %5
  %297 = load i32, i32* @x.560
  %298 = load i32, i32* @y.561
  %299 = sub i32 0, 1
  %300 = add i32 %297, %299
  %301 = sub i32 %297, 1
  %302 = mul i32 %297, %300
  %303 = urem i32 %302, 2
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %298, 10
  %306 = and i1 %304, %305
  %307 = xor i1 %304, %305
  %308 = or i1 %306, %307
  %309 = or i1 %304, %305
  %310 = select i1 %308, i32 712704987, i32 -321760821
  store i32 %310, i32* %24
  br label %345

; <label>:311:                                    ; preds = %25
  %312 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %5
  ret %"struct.std::_Rb_tree_node_base"* %312

; <label>:313:                                    ; preds = %25
  %314 = alloca %"struct.std::_Rb_tree_iterator.28", align 8
  %315 = alloca %"class.std::_Rb_tree.8"*, align 8
  %316 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  %317 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  %318 = alloca %"struct.std::pair"*, align 8
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %315, align 8
  store %"struct.std::_Rb_tree_node.21"* %1, %"struct.std::_Rb_tree_node.21"** %316, align 8
  store %"struct.std::_Rb_tree_node.21"* %2, %"struct.std::_Rb_tree_node.21"** %317, align 8
  store %"struct.std::pair"* %3, %"struct.std::pair"** %318, align 8
  %319 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %315, align 8
  store i32 958822070, i32* %24
  br label %345

; <label>:320:                                    ; preds = %25
  %321 = load volatile %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %7
  %322 = getelementptr inbounds %"class.std::_Rb_tree.8", %"class.std::_Rb_tree.8"* %321, i32 0, i32 0
  %323 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %322, i32 0, i32 0
  %324 = load volatile %"struct.std::pair"**, %"struct.std::pair"*** %8
  %325 = load %"struct.std::pair"*, %"struct.std::pair"** %324, align 8
  %326 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %10
  %327 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %326, align 8
  %328 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_S_keyEPKSt13_Rb_tree_nodeIS1_E(%"struct.std::_Rb_tree_node.21"* %327)
  %329 = call zeroext i1 @_ZNKSt4lessISt4pairIxxEEclERKS1_S4_(%"struct.std::less.12"* %323, %"struct.std::pair"* dereferenceable(16) %325, %"struct.std::pair"* dereferenceable(16) %328)
  store i32 -45175023, i32* %24
  br label %345

; <label>:330:                                    ; preds = %25
  %331 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %10
  %332 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %331, align 8
  %333 = bitcast %"struct.std::_Rb_tree_node.21"* %332 to %"struct.std::_Rb_tree_node_base"*
  %334 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %333) #3
  %335 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %10
  store %"struct.std::_Rb_tree_node.21"* %334, %"struct.std::_Rb_tree_node.21"** %335, align 8
  store i32 -757096786, i32* %24
  br label %345

; <label>:336:                                    ; preds = %25
  store i32 1348776027, i32* %24
  br label %345

; <label>:337:                                    ; preds = %25
  %338 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %9
  %339 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %338, align 8
  %340 = bitcast %"struct.std::_Rb_tree_node.21"* %339 to %"struct.std::_Rb_tree_node_base"*
  %341 = load volatile %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %11
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.28"* %341, %"struct.std::_Rb_tree_node_base"* %340) #3
  %342 = load volatile %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %11
  %343 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %342, i32 0, i32 0
  %344 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %343, align 8
  store i32 2091029529, i32* %24
  br label %345

; <label>:345:                                    ; preds = %337, %336, %330, %320, %313, %289, %273, %272, %244, %216, %215, %182, %155, %146, %143, %118, %90, %85, %84, %48, %28, %27
  br label %25
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairISt17_Rb_tree_iteratorIS_IxxEES2_EC2IS2_S2_vEEOT_OT0_(%"struct.std::pair.27"*, %"struct.std::_Rb_tree_iterator.28"* dereferenceable(8), %"struct.std::_Rb_tree_iterator.28"* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.562
  %7 = load i32, i32* @y.563
  %8 = add i32 %6, 285421658
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 285421658
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 64776206, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %73
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 64776206, label %20
    i32 -2102663404, label %28
    i32 229085203, label %57
    i32 -692589456, label %58
  ]

; <label>:19:                                     ; preds = %17
  br label %73

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -2102663404, i32 -692589456
  store i32 %27, i32* %16
  br label %73

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::pair.27"*, align 8
  %30 = alloca %"struct.std::_Rb_tree_iterator.28"*, align 8
  %31 = alloca %"struct.std::_Rb_tree_iterator.28"*, align 8
  store %"struct.std::pair.27"* %0, %"struct.std::pair.27"** %29, align 8
  store %"struct.std::_Rb_tree_iterator.28"* %1, %"struct.std::_Rb_tree_iterator.28"** %30, align 8
  store %"struct.std::_Rb_tree_iterator.28"* %2, %"struct.std::_Rb_tree_iterator.28"** %31, align 8
  %32 = load %"struct.std::pair.27"*, %"struct.std::pair.27"** %29, align 8
  %33 = getelementptr inbounds %"struct.std::pair.27", %"struct.std::pair.27"* %32, i32 0, i32 0
  %34 = load %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %30, align 8
  %35 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator.28"* @_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIxxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_iterator.28"* dereferenceable(8) %34) #3
  %36 = bitcast %"struct.std::_Rb_tree_iterator.28"* %33 to i8*
  %37 = bitcast %"struct.std::_Rb_tree_iterator.28"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 8, i32 8, i1 false)
  %38 = getelementptr inbounds %"struct.std::pair.27", %"struct.std::pair.27"* %32, i32 0, i32 1
  %39 = load %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %31, align 8
  %40 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator.28"* @_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIxxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_iterator.28"* dereferenceable(8) %39) #3
  %41 = bitcast %"struct.std::_Rb_tree_iterator.28"* %38 to i8*
  %42 = bitcast %"struct.std::_Rb_tree_iterator.28"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = load i32, i32* @x.562
  %44 = load i32, i32* @y.563
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 229085203, i32 -692589456
  store i32 %56, i32* %16
  br label %73

; <label>:57:                                     ; preds = %17
  ret void

; <label>:58:                                     ; preds = %17
  %59 = alloca %"struct.std::pair.27"*, align 8
  %60 = alloca %"struct.std::_Rb_tree_iterator.28"*, align 8
  %61 = alloca %"struct.std::_Rb_tree_iterator.28"*, align 8
  store %"struct.std::pair.27"* %0, %"struct.std::pair.27"** %59, align 8
  store %"struct.std::_Rb_tree_iterator.28"* %1, %"struct.std::_Rb_tree_iterator.28"** %60, align 8
  store %"struct.std::_Rb_tree_iterator.28"* %2, %"struct.std::_Rb_tree_iterator.28"** %61, align 8
  %62 = load %"struct.std::pair.27"*, %"struct.std::pair.27"** %59, align 8
  %63 = getelementptr inbounds %"struct.std::pair.27", %"struct.std::pair.27"* %62, i32 0, i32 0
  %64 = load %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %60, align 8
  %65 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator.28"* @_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIxxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_iterator.28"* dereferenceable(8) %64) #3
  %66 = bitcast %"struct.std::_Rb_tree_iterator.28"* %63 to i8*
  %67 = bitcast %"struct.std::_Rb_tree_iterator.28"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %66, i8* %67, i64 8, i32 8, i1 false)
  %68 = getelementptr inbounds %"struct.std::pair.27", %"struct.std::pair.27"* %62, i32 0, i32 1
  %69 = load %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %61, align 8
  %70 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator.28"* @_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIxxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_iterator.28"* dereferenceable(8) %69) #3
  %71 = bitcast %"struct.std::_Rb_tree_iterator.28"* %68 to i8*
  %72 = bitcast %"struct.std::_Rb_tree_iterator.28"* %70 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %71, i8* %72, i64 8, i32 8, i1 false)
  store i32 -2102663404, i32* %16
  br label %73

; <label>:73:                                     ; preds = %58, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt17_Rb_tree_iteratorISt4pairIxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_node_base"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.564
  %6 = load i32, i32* @y.565
  %7 = sub i32 %5, -160743831
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -160743831
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1942723223, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %79
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1942723223, label %19
    i32 1011059108, label %39
    i32 141134413, label %72
    i32 -1292081117, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %79

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1011059108, i32 -1292081117
  store i32 %38, i32* %15
  br label %79

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_iterator.28"*, align 8
  %41 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_iterator.28"* %0, %"struct.std::_Rb_tree_iterator.28"** %40, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %41, align 8
  %42 = load %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %40, align 8
  %43 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %42, i32 0, i32 0
  %44 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %41, align 8
  store %"struct.std::_Rb_tree_node_base"* %44, %"struct.std::_Rb_tree_node_base"** %43, align 8
  %45 = load i32, i32* @x.564
  %46 = load i32, i32* @y.565
  %47 = sub i32 %45, -1235171839
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -1235171839
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 141134413, i32 -1292081117
  store i32 %71, i32* %15
  br label %79

; <label>:72:                                     ; preds = %16
  ret void

; <label>:73:                                     ; preds = %16
  %74 = alloca %"struct.std::_Rb_tree_iterator.28"*, align 8
  %75 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_iterator.28"* %0, %"struct.std::_Rb_tree_iterator.28"** %74, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %75, align 8
  %76 = load %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %74, align 8
  %77 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %76, i32 0, i32 0
  %78 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %75, align 8
  store %"struct.std::_Rb_tree_node_base"* %78, %"struct.std::_Rb_tree_node_base"** %77, align 8
  store i32 1011059108, i32* %15
  br label %79

; <label>:79:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair"* @_ZNKSt9_IdentityISt4pairIxxEEclERKS1_(%"struct.std::_Identity"*, %"struct.std::pair"* dereferenceable(16)) #4 comdat align 2 {
  %3 = alloca %"struct.std::pair"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.566
  %7 = load i32, i32* @y.567
  %8 = add i32 %6, -1524591885
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1524591885
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1213796470, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %67
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1213796470, label %20
    i32 776677345, label %28
    i32 1227325395, label %60
    i32 2083154301, label %62
  ]

; <label>:19:                                     ; preds = %17
  br label %67

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 776677345, i32 2083154301
  store i32 %27, i32* %16
  br label %67

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::_Identity"*, align 8
  %30 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::_Identity"* %0, %"struct.std::_Identity"** %29, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %30, align 8
  %31 = load %"struct.std::_Identity"*, %"struct.std::_Identity"** %29, align 8
  %32 = load %"struct.std::pair"*, %"struct.std::pair"** %30, align 8
  store %"struct.std::pair"* %32, %"struct.std::pair"** %3
  %33 = load i32, i32* @x.566
  %34 = load i32, i32* @y.567
  %35 = sub i32 %33, -226529486
  %36 = sub i32 %35, 1
  %37 = add i32 %36, -226529486
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 1227325395, i32 2083154301
  store i32 %59, i32* %16
  br label %67

; <label>:60:                                     ; preds = %17
  %61 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %3
  ret %"struct.std::pair"* %61

; <label>:62:                                     ; preds = %17
  %63 = alloca %"struct.std::_Identity"*, align 8
  %64 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::_Identity"* %0, %"struct.std::_Identity"** %63, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %64, align 8
  %65 = load %"struct.std::_Identity"*, %"struct.std::_Identity"** %63, align 8
  %66 = load %"struct.std::pair"*, %"struct.std::pair"** %64, align 8
  store i32 776677345, i32* %16
  br label %67

; <label>:67:                                     ; preds = %62, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_S_valueEPKSt13_Rb_tree_nodeIS1_E(%"struct.std::_Rb_tree_node.21"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  store %"struct.std::_Rb_tree_node.21"* %0, %"struct.std::_Rb_tree_node.21"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %2, align 8
  %4 = call %"struct.std::pair"* @_ZNKSt13_Rb_tree_nodeISt4pairIxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node.21"* %3)
  ret %"struct.std::pair"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator.28"* @_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIxxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_iterator.28"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Rb_tree_iterator.28"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.570
  %6 = load i32, i32* @y.571
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -820744606, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -820744606, label %18
    i32 -1299981704, label %26
    i32 1267492903, label %56
    i32 20581199, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1299981704, i32 20581199
  store i32 %25, i32* %14
  br label %61

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Rb_tree_iterator.28"*, align 8
  store %"struct.std::_Rb_tree_iterator.28"* %0, %"struct.std::_Rb_tree_iterator.28"** %27, align 8
  %28 = load %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %27, align 8
  store %"struct.std::_Rb_tree_iterator.28"* %28, %"struct.std::_Rb_tree_iterator.28"** %2
  %29 = load i32, i32* @x.570
  %30 = load i32, i32* @y.571
  %31 = sub i32 %29, 1158341269
  %32 = sub i32 %31, 1
  %33 = add i32 %32, 1158341269
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 1267492903, i32 20581199
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  %57 = load volatile %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %2
  ret %"struct.std::_Rb_tree_iterator.28"* %57

; <label>:58:                                     ; preds = %15
  %59 = alloca %"struct.std::_Rb_tree_iterator.28"*, align 8
  store %"struct.std::_Rb_tree_iterator.28"* %0, %"struct.std::_Rb_tree_iterator.28"** %59, align 8
  %60 = load %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %59, align 8
  store i32 -1299981704, i32* %14
  br label %61

; <label>:61:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS1_ES9_(%"class.std::_Rb_tree.8"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca %"class.std::_Rb_tree.8"*
  %8 = alloca %"struct.std::_Rb_tree_iterator.28"*
  %9 = alloca %"struct.std::_Rb_tree_const_iterator"*
  %10 = alloca %"struct.std::_Rb_tree_iterator.28"*
  %11 = alloca %"struct.std::_Rb_tree_const_iterator"*
  %12 = alloca %"struct.std::_Rb_tree_const_iterator"*
  %13 = alloca %"struct.std::_Rb_tree_const_iterator"*
  %14 = alloca i1
  %15 = alloca i1
  %16 = load i32, i32* @x.572
  %17 = load i32, i32* @y.573
  %18 = sub i32 %16, 341917025
  %19 = sub i32 %18, 1
  %20 = add i32 %19, 341917025
  %21 = sub i32 %16, 1
  %22 = mul i32 %16, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  store i1 %24, i1* %15
  %25 = icmp slt i32 %17, 10
  store i1 %25, i1* %14
  %26 = alloca i32
  store i32 -562997497, i32* %26
  %27 = alloca i1
  br label %28

; <label>:28:                                     ; preds = %3, %355
  %29 = load i32, i32* %26
  switch i32 %29, label %30 [
    i32 -562997497, label %31
    i32 -521721099, label %39
    i32 1263051795, label %85
    i32 -1213535376, label %88
    i32 1634669651, label %116
    i32 1297916679, label %153
    i32 -472585457, label %155
    i32 -1553208275, label %158
    i32 1064355031, label %160
    i32 182024558, label %161
    i32 379797853, label %177
    i32 198219590, label %196
    i32 952300887, label %199
    i32 -479023311, label %226
    i32 610613097, label %265
    i32 -1598641914, label %266
    i32 1332246482, label %267
    i32 1297018210, label %283
    i32 1784615334, label %311
    i32 -1961149776, label %312
    i32 1740255824, label %328
    i32 361291649, label %338
    i32 -216691018, label %342
    i32 -1376629474, label %354
  ]

; <label>:30:                                     ; preds = %28
  br label %355

; <label>:31:                                     ; preds = %28
  %32 = load volatile i1, i1* %15
  %33 = load volatile i1, i1* %14
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  %38 = select i1 %36, i32 -521721099, i32 -1961149776
  store i32 %38, i32* %26
  br label %355

; <label>:39:                                     ; preds = %28
  %40 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  store %"struct.std::_Rb_tree_const_iterator"* %40, %"struct.std::_Rb_tree_const_iterator"** %13
  %41 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  store %"struct.std::_Rb_tree_const_iterator"* %41, %"struct.std::_Rb_tree_const_iterator"** %12
  %42 = alloca %"class.std::_Rb_tree.8"*, align 8
  %43 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %44 = alloca %"struct.std::_Rb_tree_iterator.28", align 8
  %45 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  store %"struct.std::_Rb_tree_const_iterator"* %45, %"struct.std::_Rb_tree_const_iterator"** %11
  %46 = alloca %"struct.std::_Rb_tree_iterator.28", align 8
  store %"struct.std::_Rb_tree_iterator.28"* %46, %"struct.std::_Rb_tree_iterator.28"** %10
  %47 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  store %"struct.std::_Rb_tree_const_iterator"* %47, %"struct.std::_Rb_tree_const_iterator"** %9
  %48 = alloca %"struct.std::_Rb_tree_iterator.28", align 8
  store %"struct.std::_Rb_tree_iterator.28"* %48, %"struct.std::_Rb_tree_iterator.28"** %8
  %49 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %13
  %50 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %49, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %50, align 8
  %51 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %12
  %52 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %51, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %52, align 8
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %42, align 8
  %53 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %42, align 8
  store %"class.std::_Rb_tree.8"* %53, %"class.std::_Rb_tree.8"** %7
  %54 = load volatile %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %7
  %55 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5beginEv(%"class.std::_Rb_tree.8"* %54) #3
  %56 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %44, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %55, %"struct.std::_Rb_tree_node_base"** %56, align 8
  call void @_ZNSt23_Rb_tree_const_iteratorISt4pairIxxEEC2ERKSt17_Rb_tree_iteratorIS1_E(%"struct.std::_Rb_tree_const_iterator"* %43, %"struct.std::_Rb_tree_iterator.28"* dereferenceable(8) %44) #3
  %57 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %13
  %58 = call zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIxxEEeqERKS2_(%"struct.std::_Rb_tree_const_iterator"* %57, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %43) #3
  store i1 %58, i1* %6
  %59 = load i32, i32* @x.572
  %60 = load i32, i32* @y.573
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 true, true
  %71 = and i1 %68, true
  %72 = and i1 %66, %70
  %73 = and i1 %69, true
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 true, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 1263051795, i32 -1961149776
  store i32 %84, i32* %26
  br label %355

; <label>:85:                                     ; preds = %28
  %86 = load volatile i1, i1* %6
  %87 = select i1 %86, i32 -1213535376, i32 -472585457
  store i32 %87, i32* %26
  store i1 false, i1* %27
  br label %355

; <label>:88:                                     ; preds = %28
  %89 = load i32, i32* @x.572
  %90 = load i32, i32* @y.573
  %91 = sub i32 %89, 160622926
  %92 = sub i32 %91, 1
  %93 = add i32 %92, 160622926
  %94 = sub i32 %89, 1
  %95 = mul i32 %89, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %90, 10
  %99 = xor i1 %97, true
  %100 = xor i1 %98, true
  %101 = xor i1 true, true
  %102 = and i1 %99, true
  %103 = and i1 %97, %101
  %104 = and i1 %100, true
  %105 = and i1 %98, %101
  %106 = or i1 %102, %103
  %107 = or i1 %104, %105
  %108 = xor i1 %106, %107
  %109 = or i1 %99, %100
  %110 = xor i1 %109, true
  %111 = or i1 true, %101
  %112 = and i1 %110, %111
  %113 = or i1 %108, %112
  %114 = or i1 %97, %98
  %115 = select i1 %113, i32 1634669651, i32 1740255824
  store i32 %115, i32* %26
  br label %355

; <label>:116:                                    ; preds = %28
  %117 = load volatile %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %7
  %118 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE3endEv(%"class.std::_Rb_tree.8"* %117) #3
  %119 = load volatile %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %10
  %120 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %119, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %118, %"struct.std::_Rb_tree_node_base"** %120, align 8
  %121 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %11
  %122 = load volatile %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %10
  call void @_ZNSt23_Rb_tree_const_iteratorISt4pairIxxEEC2ERKSt17_Rb_tree_iteratorIS1_E(%"struct.std::_Rb_tree_const_iterator"* %121, %"struct.std::_Rb_tree_iterator.28"* dereferenceable(8) %122) #3
  %123 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %12
  %124 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %11
  %125 = call zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIxxEEeqERKS2_(%"struct.std::_Rb_tree_const_iterator"* %123, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %124) #3
  store i1 %125, i1* %5
  %126 = load i32, i32* @x.572
  %127 = load i32, i32* @y.573
  %128 = add i32 %126, 529056269
  %129 = sub i32 %128, 1
  %130 = sub i32 %129, 529056269
  %131 = sub i32 %126, 1
  %132 = mul i32 %126, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %127, 10
  %136 = xor i1 %134, true
  %137 = xor i1 %135, true
  %138 = xor i1 false, true
  %139 = and i1 %136, false
  %140 = and i1 %134, %138
  %141 = and i1 %137, false
  %142 = and i1 %135, %138
  %143 = or i1 %139, %140
  %144 = or i1 %141, %142
  %145 = xor i1 %143, %144
  %146 = or i1 %136, %137
  %147 = xor i1 %146, true
  %148 = or i1 false, %138
  %149 = and i1 %147, %148
  %150 = or i1 %145, %149
  %151 = or i1 %134, %135
  %152 = select i1 %150, i32 1297916679, i32 1740255824
  store i32 %152, i32* %26
  br label %355

; <label>:153:                                    ; preds = %28
  store i32 -472585457, i32* %26
  %154 = load volatile i1, i1* %5
  store i1 %154, i1* %27
  br label %355

; <label>:155:                                    ; preds = %28
  %156 = load i1, i1* %27
  %157 = select i1 %156, i32 -1553208275, i32 1064355031
  store i32 %157, i32* %26
  br label %355

; <label>:158:                                    ; preds = %28
  %159 = load volatile %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %7
  call void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5clearEv(%"class.std::_Rb_tree.8"* %159) #3
  store i32 1332246482, i32* %26
  br label %355

; <label>:160:                                    ; preds = %28
  store i32 182024558, i32* %26
  br label %355

; <label>:161:                                    ; preds = %28
  %162 = load i32, i32* @x.572
  %163 = load i32, i32* @y.573
  %164 = add i32 %162, -445767119
  %165 = sub i32 %164, 1
  %166 = sub i32 %165, -445767119
  %167 = sub i32 %162, 1
  %168 = mul i32 %162, %166
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %163, 10
  %172 = and i1 %170, %171
  %173 = xor i1 %170, %171
  %174 = or i1 %172, %173
  %175 = or i1 %170, %171
  %176 = select i1 %174, i32 379797853, i32 361291649
  store i32 %176, i32* %26
  br label %355

; <label>:177:                                    ; preds = %28
  %178 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %13
  %179 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %12
  %180 = call zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIxxEEneERKS2_(%"struct.std::_Rb_tree_const_iterator"* %178, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %179) #3
  store i1 %180, i1* %4
  %181 = load i32, i32* @x.572
  %182 = load i32, i32* @y.573
  %183 = add i32 %181, -2093256555
  %184 = sub i32 %183, 1
  %185 = sub i32 %184, -2093256555
  %186 = sub i32 %181, 1
  %187 = mul i32 %181, %185
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %182, 10
  %191 = and i1 %189, %190
  %192 = xor i1 %189, %190
  %193 = or i1 %191, %192
  %194 = or i1 %189, %190
  %195 = select i1 %193, i32 198219590, i32 361291649
  store i32 %195, i32* %26
  br label %355

; <label>:196:                                    ; preds = %28
  %197 = load volatile i1, i1* %4
  %198 = select i1 %197, i32 952300887, i32 -1598641914
  store i32 %198, i32* %26
  br label %355

; <label>:199:                                    ; preds = %28
  %200 = load i32, i32* @x.572
  %201 = load i32, i32* @y.573
  %202 = sub i32 0, 1
  %203 = add i32 %200, %202
  %204 = sub i32 %200, 1
  %205 = mul i32 %200, %203
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %201, 10
  %209 = xor i1 %207, true
  %210 = xor i1 %208, true
  %211 = xor i1 true, true
  %212 = and i1 %209, true
  %213 = and i1 %207, %211
  %214 = and i1 %210, true
  %215 = and i1 %208, %211
  %216 = or i1 %212, %213
  %217 = or i1 %214, %215
  %218 = xor i1 %216, %217
  %219 = or i1 %209, %210
  %220 = xor i1 %219, true
  %221 = or i1 true, %211
  %222 = and i1 %220, %221
  %223 = or i1 %218, %222
  %224 = or i1 %207, %208
  %225 = select i1 %223, i32 -479023311, i32 -216691018
  store i32 %225, i32* %26
  br label %355

; <label>:226:                                    ; preds = %28
  %227 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %13
  %228 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt23_Rb_tree_const_iteratorISt4pairIxxEEppEi(%"struct.std::_Rb_tree_const_iterator"* %227, i32 0) #3
  %229 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %9
  %230 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %229, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %228, %"struct.std::_Rb_tree_node_base"** %230, align 8
  %231 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %9
  %232 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %231, i32 0, i32 0
  %233 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %232, align 8
  %234 = load volatile %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %7
  %235 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5eraseB5cxx11ESt23_Rb_tree_const_iteratorIS1_E(%"class.std::_Rb_tree.8"* %234, %"struct.std::_Rb_tree_node_base"* %233)
  %236 = load volatile %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %8
  %237 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %236, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %235, %"struct.std::_Rb_tree_node_base"** %237, align 8
  %238 = load i32, i32* @x.572
  %239 = load i32, i32* @y.573
  %240 = add i32 %238, 1990904151
  %241 = sub i32 %240, 1
  %242 = sub i32 %241, 1990904151
  %243 = sub i32 %238, 1
  %244 = mul i32 %238, %242
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %239, 10
  %248 = xor i1 %246, true
  %249 = xor i1 %247, true
  %250 = xor i1 false, true
  %251 = and i1 %248, false
  %252 = and i1 %246, %250
  %253 = and i1 %249, false
  %254 = and i1 %247, %250
  %255 = or i1 %251, %252
  %256 = or i1 %253, %254
  %257 = xor i1 %255, %256
  %258 = or i1 %248, %249
  %259 = xor i1 %258, true
  %260 = or i1 false, %250
  %261 = and i1 %259, %260
  %262 = or i1 %257, %261
  %263 = or i1 %246, %247
  %264 = select i1 %262, i32 610613097, i32 -216691018
  store i32 %264, i32* %26
  br label %355

; <label>:265:                                    ; preds = %28
  store i32 182024558, i32* %26
  br label %355

; <label>:266:                                    ; preds = %28
  store i32 1332246482, i32* %26
  br label %355

; <label>:267:                                    ; preds = %28
  %268 = load i32, i32* @x.572
  %269 = load i32, i32* @y.573
  %270 = sub i32 %268, -906537220
  %271 = sub i32 %270, 1
  %272 = add i32 %271, -906537220
  %273 = sub i32 %268, 1
  %274 = mul i32 %268, %272
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %269, 10
  %278 = and i1 %276, %277
  %279 = xor i1 %276, %277
  %280 = or i1 %278, %279
  %281 = or i1 %276, %277
  %282 = select i1 %280, i32 1297018210, i32 -1376629474
  store i32 %282, i32* %26
  br label %355

; <label>:283:                                    ; preds = %28
  %284 = load i32, i32* @x.572
  %285 = load i32, i32* @y.573
  %286 = add i32 %284, 1202801586
  %287 = sub i32 %286, 1
  %288 = sub i32 %287, 1202801586
  %289 = sub i32 %284, 1
  %290 = mul i32 %284, %288
  %291 = urem i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %285, 10
  %294 = xor i1 %292, true
  %295 = xor i1 %293, true
  %296 = xor i1 true, true
  %297 = and i1 %294, true
  %298 = and i1 %292, %296
  %299 = and i1 %295, true
  %300 = and i1 %293, %296
  %301 = or i1 %297, %298
  %302 = or i1 %299, %300
  %303 = xor i1 %301, %302
  %304 = or i1 %294, %295
  %305 = xor i1 %304, true
  %306 = or i1 true, %296
  %307 = and i1 %305, %306
  %308 = or i1 %303, %307
  %309 = or i1 %292, %293
  %310 = select i1 %308, i32 1784615334, i32 -1376629474
  store i32 %310, i32* %26
  br label %355

; <label>:311:                                    ; preds = %28
  ret void

; <label>:312:                                    ; preds = %28
  %313 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %314 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %315 = alloca %"class.std::_Rb_tree.8"*, align 8
  %316 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %317 = alloca %"struct.std::_Rb_tree_iterator.28", align 8
  %318 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %319 = alloca %"struct.std::_Rb_tree_iterator.28", align 8
  %320 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %321 = alloca %"struct.std::_Rb_tree_iterator.28", align 8
  %322 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %313, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %322, align 8
  %323 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %314, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %323, align 8
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %315, align 8
  %324 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %315, align 8
  %325 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5beginEv(%"class.std::_Rb_tree.8"* %324) #3
  %326 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %317, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %325, %"struct.std::_Rb_tree_node_base"** %326, align 8
  call void @_ZNSt23_Rb_tree_const_iteratorISt4pairIxxEEC2ERKSt17_Rb_tree_iteratorIS1_E(%"struct.std::_Rb_tree_const_iterator"* %316, %"struct.std::_Rb_tree_iterator.28"* dereferenceable(8) %317) #3
  %327 = call zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIxxEEeqERKS2_(%"struct.std::_Rb_tree_const_iterator"* %313, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %316) #3
  store i32 -521721099, i32* %26
  br label %355

; <label>:328:                                    ; preds = %28
  %329 = load volatile %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %7
  %330 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE3endEv(%"class.std::_Rb_tree.8"* %329) #3
  %331 = load volatile %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %10
  %332 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %331, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %330, %"struct.std::_Rb_tree_node_base"** %332, align 8
  %333 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %11
  %334 = load volatile %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %10
  call void @_ZNSt23_Rb_tree_const_iteratorISt4pairIxxEEC2ERKSt17_Rb_tree_iteratorIS1_E(%"struct.std::_Rb_tree_const_iterator"* %333, %"struct.std::_Rb_tree_iterator.28"* dereferenceable(8) %334) #3
  %335 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %12
  %336 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %11
  %337 = call zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIxxEEeqERKS2_(%"struct.std::_Rb_tree_const_iterator"* %335, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %336) #3
  store i32 1634669651, i32* %26
  br label %355

; <label>:338:                                    ; preds = %28
  %339 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %13
  %340 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %12
  %341 = call zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIxxEEneERKS2_(%"struct.std::_Rb_tree_const_iterator"* %339, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %340) #3
  store i32 379797853, i32* %26
  br label %355

; <label>:342:                                    ; preds = %28
  %343 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %13
  %344 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt23_Rb_tree_const_iteratorISt4pairIxxEEppEi(%"struct.std::_Rb_tree_const_iterator"* %343, i32 0) #3
  %345 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %9
  %346 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %345, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %344, %"struct.std::_Rb_tree_node_base"** %346, align 8
  %347 = load volatile %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %9
  %348 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %347, i32 0, i32 0
  %349 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %348, align 8
  %350 = load volatile %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %7
  %351 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5eraseB5cxx11ESt23_Rb_tree_const_iteratorIS1_E(%"class.std::_Rb_tree.8"* %350, %"struct.std::_Rb_tree_node_base"* %349)
  %352 = load volatile %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %8
  %353 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %352, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %351, %"struct.std::_Rb_tree_node_base"** %353, align 8
  store i32 -479023311, i32* %26
  br label %355

; <label>:354:                                    ; preds = %28
  store i32 1297018210, i32* %26
  br label %355

; <label>:355:                                    ; preds = %354, %342, %338, %328, %312, %283, %267, %266, %265, %226, %199, %196, %177, %161, %160, %158, %155, %153, %116, %88, %85, %39, %31, %30
  br label %28
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt23_Rb_tree_const_iteratorISt4pairIxxEE13_M_const_castEv(%"struct.std::_Rb_tree_const_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator.28", align 8
  %3 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  %4 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %4, i32 0, i32 0
  %6 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %5, align 8
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.28"* %2, %"struct.std::_Rb_tree_node_base"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %2, i32 0, i32 0
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_node_base"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorISt4pairIxxEEeqERKS2_(%"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %1, %"struct.std::_Rb_tree_const_iterator"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %8, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %11 = icmp eq %"struct.std::_Rb_tree_node_base"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5beginEv(%"class.std::_Rb_tree.8"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator.28", align 8
  %3 = alloca %"class.std::_Rb_tree.8"*, align 8
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %3, align 8
  %4 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree.8", %"class.std::_Rb_tree.8"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %6, i32 0, i32 2
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.28"* %2, %"struct.std::_Rb_tree_node_base"* %8) #3
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %2, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  ret %"struct.std::_Rb_tree_node_base"* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE3endEv(%"class.std::_Rb_tree.8"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.580
  %6 = load i32, i32* @y.581
  %7 = add i32 %5, -185632584
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -185632584
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 337047128, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %72
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 337047128, label %19
    i32 -1755551301, label %39
    i32 -868200588, label %62
    i32 -934802178, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %72

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1755551301, i32 -934802178
  store i32 %38, i32* %15
  br label %72

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_iterator.28", align 8
  %41 = alloca %"class.std::_Rb_tree.8"*, align 8
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %41, align 8
  %42 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %41, align 8
  %43 = getelementptr inbounds %"class.std::_Rb_tree.8", %"class.std::_Rb_tree.8"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %43, i32 0, i32 1
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.28"* %40, %"struct.std::_Rb_tree_node_base"* %44) #3
  %45 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %40, i32 0, i32 0
  %46 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %45, align 8
  store %"struct.std::_Rb_tree_node_base"* %46, %"struct.std::_Rb_tree_node_base"** %2
  %47 = load i32, i32* @x.580
  %48 = load i32, i32* @y.581
  %49 = sub i32 %47, 1633028795
  %50 = sub i32 %49, 1
  %51 = add i32 %50, 1633028795
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -868200588, i32 -934802178
  store i32 %61, i32* %15
  br label %72

; <label>:62:                                     ; preds = %16
  %63 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2
  ret %"struct.std::_Rb_tree_node_base"* %63

; <label>:64:                                     ; preds = %16
  %65 = alloca %"struct.std::_Rb_tree_iterator.28", align 8
  %66 = alloca %"class.std::_Rb_tree.8"*, align 8
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %66, align 8
  %67 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %66, align 8
  %68 = getelementptr inbounds %"class.std::_Rb_tree.8", %"class.std::_Rb_tree.8"* %67, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %68, i32 0, i32 1
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.28"* %65, %"struct.std::_Rb_tree_node_base"* %69) #3
  %70 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %65, i32 0, i32 0
  %71 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %70, align 8
  store i32 -1755551301, i32* %15
  br label %72

; <label>:72:                                     ; preds = %64, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5clearEv(%"class.std::_Rb_tree.8"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.582
  %3 = load i32, i32* @y.583
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %158

; <label>:15:                                     ; preds = %1, %158
  %16 = alloca %"class.std::_Rb_tree.8"*, align 8
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %16, align 8
  %17 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %16, align 8
  %18 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_beginEv(%"class.std::_Rb_tree.8"* %17) #3
  %19 = load i32, i32* @x.582
  %20 = load i32, i32* @y.583
  %21 = sub i32 0, 1
  %22 = add i32 %19, %21
  %23 = sub i32 %19, 1
  %24 = mul i32 %19, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %20, 10
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 true, true
  %31 = and i1 %28, true
  %32 = and i1 %26, %30
  %33 = and i1 %29, true
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 true, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  br i1 %42, label %44, label %158

; <label>:44:                                     ; preds = %15
  invoke void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_eraseEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.8"* %17, %"struct.std::_Rb_tree_node.21"* %18)
          to label %45 unwind label %102

; <label>:45:                                     ; preds = %44
  %46 = getelementptr inbounds %"class.std::_Rb_tree.8", %"class.std::_Rb_tree.8"* %17, i32 0, i32 0
  invoke void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EE8_M_resetEv(%"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %46)
          to label %47 unwind label %102

; <label>:47:                                     ; preds = %45
  %48 = load i32, i32* @x.582
  %49 = load i32, i32* @y.583
  %50 = sub i32 %48, -1772241004
  %51 = sub i32 %50, 1
  %52 = add i32 %51, -1772241004
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  br i1 %72, label %74, label %162

; <label>:74:                                     ; preds = %47, %162
  %75 = load i32, i32* @x.582
  %76 = load i32, i32* @y.583
  %77 = add i32 %75, -1328815692
  %78 = sub i32 %77, 1
  %79 = sub i32 %78, -1328815692
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = xor i1 %83, true
  %86 = xor i1 %84, true
  %87 = xor i1 false, true
  %88 = and i1 %85, false
  %89 = and i1 %83, %87
  %90 = and i1 %86, false
  %91 = and i1 %84, %87
  %92 = or i1 %88, %89
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = or i1 %85, %86
  %96 = xor i1 %95, true
  %97 = or i1 false, %87
  %98 = and i1 %96, %97
  %99 = or i1 %94, %98
  %100 = or i1 %83, %84
  br i1 %99, label %101, label %162

; <label>:101:                                    ; preds = %74
  ret void

; <label>:102:                                    ; preds = %45, %44
  %103 = load i32, i32* @x.582
  %104 = load i32, i32* @y.583
  %105 = sub i32 0, 1
  %106 = add i32 %103, %105
  %107 = sub i32 %103, 1
  %108 = mul i32 %103, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %104, 10
  %112 = xor i1 %110, true
  %113 = xor i1 %111, true
  %114 = xor i1 false, true
  %115 = and i1 %112, false
  %116 = and i1 %110, %114
  %117 = and i1 %113, false
  %118 = and i1 %111, %114
  %119 = or i1 %115, %116
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = or i1 %112, %113
  %123 = xor i1 %122, true
  %124 = or i1 false, %114
  %125 = and i1 %123, %124
  %126 = or i1 %121, %125
  %127 = or i1 %110, %111
  br i1 %126, label %128, label %163

; <label>:128:                                    ; preds = %102, %163
  %129 = landingpad { i8*, i32 }
          catch i8* null
  %130 = extractvalue { i8*, i32 } %129, 0
  call void @__clang_call_terminate(i8* %130) #12
  %131 = load i32, i32* @x.582
  %132 = load i32, i32* @y.583
  %133 = add i32 %131, -914637025
  %134 = sub i32 %133, 1
  %135 = sub i32 %134, -914637025
  %136 = sub i32 %131, 1
  %137 = mul i32 %131, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %132, 10
  %141 = xor i1 %139, true
  %142 = xor i1 %140, true
  %143 = xor i1 false, true
  %144 = and i1 %141, false
  %145 = and i1 %139, %143
  %146 = and i1 %142, false
  %147 = and i1 %140, %143
  %148 = or i1 %144, %145
  %149 = or i1 %146, %147
  %150 = xor i1 %148, %149
  %151 = or i1 %141, %142
  %152 = xor i1 %151, true
  %153 = or i1 false, %143
  %154 = and i1 %152, %153
  %155 = or i1 %150, %154
  %156 = or i1 %139, %140
  br i1 %155, label %157, label %163

; <label>:157:                                    ; preds = %128
  unreachable

; <label>:158:                                    ; preds = %15, %1
  %159 = alloca %"class.std::_Rb_tree.8"*, align 8
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %159, align 8
  %160 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %159, align 8
  %161 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_beginEv(%"class.std::_Rb_tree.8"* %160) #3
  br label %15

; <label>:162:                                    ; preds = %74, %47
  br label %74

; <label>:163:                                    ; preds = %128, %102
  %164 = landingpad { i8*, i32 }
          catch i8* null
  %165 = extractvalue { i8*, i32 } %164, 0
  call void @__clang_call_terminate(i8* %165) #12
  br label %128
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5eraseB5cxx11ESt23_Rb_tree_const_iteratorIS1_E(%"class.std::_Rb_tree.8"*, %"struct.std::_Rb_tree_node_base"*) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator.28", align 8
  %4 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %5 = alloca %"class.std::_Rb_tree.8"*, align 8
  %6 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %7 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %4, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %8, align 8
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %5, align 8
  %9 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %5, align 8
  %10 = bitcast %"struct.std::_Rb_tree_const_iterator"* %6 to i8*
  %11 = bitcast %"struct.std::_Rb_tree_const_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 8, i32 8, i1 false)
  %12 = call dereferenceable(8) %"struct.std::_Rb_tree_const_iterator"* @_ZNSt23_Rb_tree_const_iteratorISt4pairIxxEEppEv(%"struct.std::_Rb_tree_const_iterator"* %6) #3
  %13 = bitcast %"struct.std::_Rb_tree_const_iterator"* %7 to i8*
  %14 = bitcast %"struct.std::_Rb_tree_const_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %7, i32 0, i32 0
  %16 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %15, align 8
  call void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS1_E(%"class.std::_Rb_tree.8"* %9, %"struct.std::_Rb_tree_node_base"* %16)
  %17 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt23_Rb_tree_const_iteratorISt4pairIxxEE13_M_const_castEv(%"struct.std::_Rb_tree_const_iterator"* %6) #3
  %18 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %18, align 8
  %19 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %3, i32 0, i32 0
  %20 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %19, align 8
  ret %"struct.std::_Rb_tree_node_base"* %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE13_Rb_tree_implIS5_Lb1EE8_M_resetEv(%"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.586
  %5 = load i32, i32* @y.587
  %6 = add i32 %4, 937111078
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 937111078
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1474369633, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %78
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1474369633, label %18
    i32 1250102175, label %38
    i32 1427097941, label %65
    i32 -353818258, label %66
  ]

; <label>:17:                                     ; preds = %15
  br label %78

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1250102175, i32 -353818258
  store i32 %37, i32* %14
  br label %78

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"** %39, align 8
  %40 = load %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %40, i32 0, i32 1
  %42 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %41, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %42, align 8
  %43 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %40, i32 0, i32 1
  %44 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %40, i32 0, i32 1
  %45 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %44, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %43, %"struct.std::_Rb_tree_node_base"** %45, align 8
  %46 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %40, i32 0, i32 1
  %47 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %40, i32 0, i32 1
  %48 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %47, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %46, %"struct.std::_Rb_tree_node_base"** %48, align 8
  %49 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %40, i32 0, i32 2
  store i64 0, i64* %49, align 8
  %50 = load i32, i32* @x.586
  %51 = load i32, i32* @y.587
  %52 = add i32 %50, 1751896266
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 1751896266
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 1427097941, i32 -353818258
  store i32 %64, i32* %14
  br label %78

; <label>:65:                                     ; preds = %15
  ret void

; <label>:66:                                     ; preds = %15
  %67 = alloca %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"** %67, align 8
  %68 = load %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"** %67, align 8
  %69 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %68, i32 0, i32 1
  %70 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %69, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %70, align 8
  %71 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %68, i32 0, i32 1
  %72 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %68, i32 0, i32 1
  %73 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %72, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %71, %"struct.std::_Rb_tree_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %68, i32 0, i32 1
  %75 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %68, i32 0, i32 1
  %76 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %75, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %74, %"struct.std::_Rb_tree_node_base"** %76, align 8
  %77 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %68, i32 0, i32 2
  store i64 0, i64* %77, align 8
  store i32 1250102175, i32* %14
  br label %78

; <label>:78:                                     ; preds = %66, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS1_E(%"class.std::_Rb_tree.8"*, %"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %4 = alloca %"class.std::_Rb_tree.8"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %6, align 8
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %4, align 8
  %7 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %3, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %10 = getelementptr inbounds %"class.std::_Rb_tree.8", %"class.std::_Rb_tree.8"* %7, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %10, i32 0, i32 1
  %12 = call %"struct.std::_Rb_tree_node_base"* @_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_(%"struct.std::_Rb_tree_node_base"* %9, %"struct.std::_Rb_tree_node_base"* dereferenceable(32) %11) #3
  %13 = bitcast %"struct.std::_Rb_tree_node_base"* %12 to %"struct.std::_Rb_tree_node.21"*
  store %"struct.std::_Rb_tree_node.21"* %13, %"struct.std::_Rb_tree_node.21"** %5, align 8
  %14 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %5, align 8
  call void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.8"* %7, %"struct.std::_Rb_tree_node.21"* %14) #3
  %15 = getelementptr inbounds %"class.std::_Rb_tree.8", %"class.std::_Rb_tree.8"* %7, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %15, i32 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, -5818991712771392365
  %19 = add i64 %18, -1
  %20 = sub i64 %19, -5818991712771392365
  %21 = add i64 %17, -1
  store i64 %20, i64* %16, align 8
  ret void
}

; Function Attrs: nounwind
declare %"struct.std::_Rb_tree_node_base"* @_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_(%"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* dereferenceable(32)) #2

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE17_M_emplace_uniqueIJRxS9_EEES0_ISt17_Rb_tree_iteratorIS1_EbEDpOT_(%"class.std::_Rb_tree.8"*, i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::pair.30", align 8
  %5 = alloca %"class.std::_Rb_tree.8"*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  %9 = alloca %"struct.std::pair.25", align 8
  %10 = alloca i8*
  %11 = alloca i32
  %12 = alloca %"struct.std::_Rb_tree_iterator.28", align 8
  %13 = alloca i8, align 1
  %14 = alloca %"struct.std::_Rb_tree_iterator.28", align 8
  %15 = alloca i8, align 1
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %5, align 8
  store i64* %1, i64** %6, align 8
  store i64* %2, i64** %7, align 8
  %16 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %5, align 8
  %17 = load i64*, i64** %6, align 8
  %18 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %17) #3
  %19 = load i64*, i64** %7, align 8
  %20 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %19) #3
  %21 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE14_M_create_nodeIJRxS9_EEEPSt13_Rb_tree_nodeIS1_EDpOT_(%"class.std::_Rb_tree.8"* %16, i64* dereferenceable(8) %18, i64* dereferenceable(8) %20)
  store %"struct.std::_Rb_tree_node.21"* %21, %"struct.std::_Rb_tree_node.21"** %8, align 8
  %22 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %8, align 8
  %23 = invoke dereferenceable(16) %"struct.std::pair"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_S_keyEPKSt13_Rb_tree_nodeIS1_E(%"struct.std::_Rb_tree_node.21"* %22)
          to label %24 unwind label %74

; <label>:24:                                     ; preds = %3
  %25 = invoke { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE24_M_get_insert_unique_posERKS1_(%"class.std::_Rb_tree.8"* %16, %"struct.std::pair"* dereferenceable(16) %23)
          to label %26 unwind label %74

; <label>:26:                                     ; preds = %24
  %27 = bitcast %"struct.std::pair.25"* %9 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %28 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %27, i32 0, i32 0
  %29 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %25, 0
  store %"struct.std::_Rb_tree_node_base"* %29, %"struct.std::_Rb_tree_node_base"** %28, align 8
  %30 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %27, i32 0, i32 1
  %31 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %25, 1
  store %"struct.std::_Rb_tree_node_base"* %31, %"struct.std::_Rb_tree_node_base"** %30, align 8
  %32 = getelementptr inbounds %"struct.std::pair.25", %"struct.std::pair.25"* %9, i32 0, i32 1
  %33 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %32, align 8
  %34 = icmp ne %"struct.std::_Rb_tree_node_base"* %33, null
  br i1 %34, label %35, label %165

; <label>:35:                                     ; preds = %26
  %36 = load i32, i32* @x.590
  %37 = load i32, i32* @y.591
  %38 = sub i32 %36, -2021453190
  %39 = sub i32 %38, 1
  %40 = add i32 %39, -2021453190
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  br i1 %48, label %50, label %313

; <label>:50:                                     ; preds = %35, %313
  %51 = getelementptr inbounds %"struct.std::pair.25", %"struct.std::pair.25"* %9, i32 0, i32 0
  %52 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %51, align 8
  %53 = getelementptr inbounds %"struct.std::pair.25", %"struct.std::pair.25"* %9, i32 0, i32 1
  %54 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %53, align 8
  %55 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %8, align 8
  %56 = load i32, i32* @x.590
  %57 = load i32, i32* @y.591
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  br i1 %67, label %69, label %313

; <label>:69:                                     ; preds = %50
  %70 = invoke %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseS9_PSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.8"* %16, %"struct.std::_Rb_tree_node_base"* %52, %"struct.std::_Rb_tree_node_base"* %54, %"struct.std::_Rb_tree_node.21"* %55)
          to label %71 unwind label %74

; <label>:71:                                     ; preds = %69
  %72 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %12, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %70, %"struct.std::_Rb_tree_node_base"** %72, align 8
  store i8 1, i8* %13, align 1
  invoke void @_ZNSt4pairISt17_Rb_tree_iteratorIS_IxxEEbEC2IS2_bvEEOT_OT0_(%"struct.std::pair.30"* %4, %"struct.std::_Rb_tree_iterator.28"* dereferenceable(8) %12, i8* dereferenceable(1) %13)
          to label %73 unwind label %74

; <label>:73:                                     ; preds = %71
  br label %231

; <label>:74:                                     ; preds = %165, %71, %69, %24, %3
  %75 = load i32, i32* @x.590
  %76 = load i32, i32* @y.591
  %77 = sub i32 %75, -1762986203
  %78 = sub i32 %77, 1
  %79 = add i32 %78, -1762986203
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = and i1 %83, %84
  %86 = xor i1 %83, %84
  %87 = or i1 %85, %86
  %88 = or i1 %83, %84
  br i1 %87, label %89, label %319

; <label>:89:                                     ; preds = %74, %319
  %90 = landingpad { i8*, i32 }
          catch i8* null
  %91 = extractvalue { i8*, i32 } %90, 0
  store i8* %91, i8** %10, align 8
  %92 = extractvalue { i8*, i32 } %90, 1
  store i32 %92, i32* %11, align 4
  %93 = load i32, i32* @x.590
  %94 = load i32, i32* @y.591
  %95 = sub i32 0, 1
  %96 = add i32 %93, %95
  %97 = sub i32 %93, 1
  %98 = mul i32 %93, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %94, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  br i1 %104, label %106, label %319

; <label>:106:                                    ; preds = %89
  br label %107

; <label>:107:                                    ; preds = %106
  %108 = load i32, i32* @x.590
  %109 = load i32, i32* @y.591
  %110 = sub i32 %108, 2034758913
  %111 = sub i32 %110, 1
  %112 = add i32 %111, 2034758913
  %113 = sub i32 %108, 1
  %114 = mul i32 %108, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %109, 10
  %118 = xor i1 %116, true
  %119 = xor i1 %117, true
  %120 = xor i1 true, true
  %121 = and i1 %118, true
  %122 = and i1 %116, %120
  %123 = and i1 %119, true
  %124 = and i1 %117, %120
  %125 = or i1 %121, %122
  %126 = or i1 %123, %124
  %127 = xor i1 %125, %126
  %128 = or i1 %118, %119
  %129 = xor i1 %128, true
  %130 = or i1 true, %120
  %131 = and i1 %129, %130
  %132 = or i1 %127, %131
  %133 = or i1 %116, %117
  br i1 %132, label %134, label %323

; <label>:134:                                    ; preds = %107, %323
  %135 = load i8*, i8** %10, align 8
  %136 = call i8* @__cxa_begin_catch(i8* %135) #3
  %137 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %8, align 8
  call void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.8"* %16, %"struct.std::_Rb_tree_node.21"* %137) #3
  %138 = load i32, i32* @x.590
  %139 = load i32, i32* @y.591
  %140 = sub i32 %138, 1631146878
  %141 = sub i32 %140, 1
  %142 = add i32 %141, 1631146878
  %143 = sub i32 %138, 1
  %144 = mul i32 %138, %142
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %139, 10
  %148 = xor i1 %146, true
  %149 = xor i1 %147, true
  %150 = xor i1 false, true
  %151 = and i1 %148, false
  %152 = and i1 %146, %150
  %153 = and i1 %149, false
  %154 = and i1 %147, %150
  %155 = or i1 %151, %152
  %156 = or i1 %153, %154
  %157 = xor i1 %155, %156
  %158 = or i1 %148, %149
  %159 = xor i1 %158, true
  %160 = or i1 false, %150
  %161 = and i1 %159, %160
  %162 = or i1 %157, %161
  %163 = or i1 %146, %147
  br i1 %162, label %164, label %323

; <label>:164:                                    ; preds = %134
  invoke void @__cxa_rethrow() #16
          to label %312 unwind label %172

; <label>:165:                                    ; preds = %26
  %166 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %8, align 8
  call void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.8"* %16, %"struct.std::_Rb_tree_node.21"* %166) #3
  %167 = getelementptr inbounds %"struct.std::pair.25", %"struct.std::pair.25"* %9, i32 0, i32 0
  %168 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %167, align 8
  %169 = bitcast %"struct.std::_Rb_tree_node_base"* %168 to %"struct.std::_Rb_tree_node.21"*
  %170 = bitcast %"struct.std::_Rb_tree_node.21"* %169 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.28"* %14, %"struct.std::_Rb_tree_node_base"* %170) #3
  store i8 0, i8* %15, align 1
  invoke void @_ZNSt4pairISt17_Rb_tree_iteratorIS_IxxEEbEC2IS2_bvEEOT_OT0_(%"struct.std::pair.30"* %4, %"struct.std::_Rb_tree_iterator.28"* dereferenceable(8) %14, i8* dereferenceable(1) %15)
          to label %171 unwind label %74

; <label>:171:                                    ; preds = %165
  br label %231

; <label>:172:                                    ; preds = %164
  %173 = landingpad { i8*, i32 }
          cleanup
  %174 = extractvalue { i8*, i32 } %173, 0
  store i8* %174, i8** %10, align 8
  %175 = extractvalue { i8*, i32 } %173, 1
  store i32 %175, i32* %11, align 4
  invoke void @__cxa_end_catch()
          to label %176 unwind label %268

; <label>:176:                                    ; preds = %172
  br label %263
                                                  ; No predecessors!
  %178 = load i32, i32* @x.590
  %179 = load i32, i32* @y.591
  %180 = sub i32 0, 1
  %181 = add i32 %178, %180
  %182 = sub i32 %178, 1
  %183 = mul i32 %178, %181
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %179, 10
  %187 = xor i1 %185, true
  %188 = xor i1 %186, true
  %189 = xor i1 false, true
  %190 = and i1 %187, false
  %191 = and i1 %185, %189
  %192 = and i1 %188, false
  %193 = and i1 %186, %189
  %194 = or i1 %190, %191
  %195 = or i1 %192, %193
  %196 = xor i1 %194, %195
  %197 = or i1 %187, %188
  %198 = xor i1 %197, true
  %199 = or i1 false, %189
  %200 = and i1 %198, %199
  %201 = or i1 %196, %200
  %202 = or i1 %185, %186
  br i1 %201, label %203, label %327

; <label>:203:                                    ; preds = %177, %327
  call void @llvm.trap()
  %204 = load i32, i32* @x.590
  %205 = load i32, i32* @y.591
  %206 = add i32 %204, 1830766500
  %207 = sub i32 %206, 1
  %208 = sub i32 %207, 1830766500
  %209 = sub i32 %204, 1
  %210 = mul i32 %204, %208
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %205, 10
  %214 = xor i1 %212, true
  %215 = xor i1 %213, true
  %216 = xor i1 false, true
  %217 = and i1 %214, false
  %218 = and i1 %212, %216
  %219 = and i1 %215, false
  %220 = and i1 %213, %216
  %221 = or i1 %217, %218
  %222 = or i1 %219, %220
  %223 = xor i1 %221, %222
  %224 = or i1 %214, %215
  %225 = xor i1 %224, true
  %226 = or i1 false, %216
  %227 = and i1 %225, %226
  %228 = or i1 %223, %227
  %229 = or i1 %212, %213
  br i1 %228, label %230, label %327

; <label>:230:                                    ; preds = %203
  unreachable

; <label>:231:                                    ; preds = %171, %73
  %232 = load i32, i32* @x.590
  %233 = load i32, i32* @y.591
  %234 = sub i32 0, 1
  %235 = add i32 %232, %234
  %236 = sub i32 %232, 1
  %237 = mul i32 %232, %235
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %233, 10
  %241 = and i1 %239, %240
  %242 = xor i1 %239, %240
  %243 = or i1 %241, %242
  %244 = or i1 %239, %240
  br i1 %243, label %245, label %328

; <label>:245:                                    ; preds = %231, %328
  %246 = bitcast %"struct.std::pair.30"* %4 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %247 = load { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %246, align 8
  %248 = load i32, i32* @x.590
  %249 = load i32, i32* @y.591
  %250 = sub i32 %248, 2112739190
  %251 = sub i32 %250, 1
  %252 = add i32 %251, 2112739190
  %253 = sub i32 %248, 1
  %254 = mul i32 %248, %252
  %255 = urem i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %249, 10
  %258 = and i1 %256, %257
  %259 = xor i1 %256, %257
  %260 = or i1 %258, %259
  %261 = or i1 %256, %257
  br i1 %260, label %262, label %328

; <label>:262:                                    ; preds = %245
  ret { %"struct.std::_Rb_tree_node_base"*, i8 } %247

; <label>:263:                                    ; preds = %176
  %264 = load i8*, i8** %10, align 8
  %265 = load i32, i32* %11, align 4
  %266 = insertvalue { i8*, i32 } undef, i8* %264, 0
  %267 = insertvalue { i8*, i32 } %266, i32 %265, 1
  resume { i8*, i32 } %267

; <label>:268:                                    ; preds = %172
  %269 = load i32, i32* @x.590
  %270 = load i32, i32* @y.591
  %271 = add i32 %269, -1686252664
  %272 = sub i32 %271, 1
  %273 = sub i32 %272, -1686252664
  %274 = sub i32 %269, 1
  %275 = mul i32 %269, %273
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %270, 10
  %279 = and i1 %277, %278
  %280 = xor i1 %277, %278
  %281 = or i1 %279, %280
  %282 = or i1 %277, %278
  br i1 %281, label %283, label %331

; <label>:283:                                    ; preds = %268, %331
  %284 = landingpad { i8*, i32 }
          catch i8* null
  %285 = extractvalue { i8*, i32 } %284, 0
  call void @__clang_call_terminate(i8* %285) #12
  %286 = load i32, i32* @x.590
  %287 = load i32, i32* @y.591
  %288 = sub i32 0, 1
  %289 = add i32 %286, %288
  %290 = sub i32 %286, 1
  %291 = mul i32 %286, %289
  %292 = urem i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %287, 10
  %295 = xor i1 %293, true
  %296 = xor i1 %294, true
  %297 = xor i1 true, true
  %298 = and i1 %295, true
  %299 = and i1 %293, %297
  %300 = and i1 %296, true
  %301 = and i1 %294, %297
  %302 = or i1 %298, %299
  %303 = or i1 %300, %301
  %304 = xor i1 %302, %303
  %305 = or i1 %295, %296
  %306 = xor i1 %305, true
  %307 = or i1 true, %297
  %308 = and i1 %306, %307
  %309 = or i1 %304, %308
  %310 = or i1 %293, %294
  br i1 %309, label %311, label %331

; <label>:311:                                    ; preds = %283
  unreachable

; <label>:312:                                    ; preds = %164
  unreachable

; <label>:313:                                    ; preds = %50, %35
  %314 = getelementptr inbounds %"struct.std::pair.25", %"struct.std::pair.25"* %9, i32 0, i32 0
  %315 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %314, align 8
  %316 = getelementptr inbounds %"struct.std::pair.25", %"struct.std::pair.25"* %9, i32 0, i32 1
  %317 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %316, align 8
  %318 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %8, align 8
  br label %50

; <label>:319:                                    ; preds = %89, %74
  %320 = landingpad { i8*, i32 }
          catch i8* null
  %321 = extractvalue { i8*, i32 } %320, 0
  store i8* %321, i8** %10, align 8
  %322 = extractvalue { i8*, i32 } %320, 1
  store i32 %322, i32* %11, align 4
  br label %89

; <label>:323:                                    ; preds = %134, %107
  %324 = load i8*, i8** %10, align 8
  %325 = call i8* @__cxa_begin_catch(i8* %324) #3
  %326 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %8, align 8
  call void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.8"* %16, %"struct.std::_Rb_tree_node.21"* %326) #3
  br label %134

; <label>:327:                                    ; preds = %203, %177
  call void @llvm.trap()
  br label %203

; <label>:328:                                    ; preds = %245, %231
  %329 = bitcast %"struct.std::pair.30"* %4 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %330 = load { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %329, align 8
  br label %245

; <label>:331:                                    ; preds = %283, %268
  %332 = landingpad { i8*, i32 }
          catch i8* null
  %333 = extractvalue { i8*, i32 } %332, 0
  call void @__clang_call_terminate(i8* %333) #12
  br label %283
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairISt23_Rb_tree_const_iteratorIS_IxxEEbEC2ISt17_Rb_tree_iteratorIS1_EbvEEOS_IT_T0_E(%"struct.std::pair.19"*, %"struct.std::pair.30"* dereferenceable(16)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.592
  %6 = load i32, i32* @y.593
  %7 = add i32 %5, -586715506
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -586715506
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -248473657, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %85
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -248473657, label %19
    i32 1461697130, label %39
    i32 -634274762, label %69
    i32 35502217, label %70
  ]

; <label>:18:                                     ; preds = %16
  br label %85

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1461697130, i32 35502217
  store i32 %38, i32* %15
  br label %85

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::pair.19"*, align 8
  %41 = alloca %"struct.std::pair.30"*, align 8
  store %"struct.std::pair.19"* %0, %"struct.std::pair.19"** %40, align 8
  store %"struct.std::pair.30"* %1, %"struct.std::pair.30"** %41, align 8
  %42 = load %"struct.std::pair.19"*, %"struct.std::pair.19"** %40, align 8
  %43 = getelementptr inbounds %"struct.std::pair.19", %"struct.std::pair.19"* %42, i32 0, i32 0
  %44 = load %"struct.std::pair.30"*, %"struct.std::pair.30"** %41, align 8
  %45 = getelementptr inbounds %"struct.std::pair.30", %"struct.std::pair.30"* %44, i32 0, i32 0
  %46 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator.28"* @_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIxxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_iterator.28"* dereferenceable(8) %45) #3
  call void @_ZNSt23_Rb_tree_const_iteratorISt4pairIxxEEC2ERKSt17_Rb_tree_iteratorIS1_E(%"struct.std::_Rb_tree_const_iterator"* %43, %"struct.std::_Rb_tree_iterator.28"* dereferenceable(8) %46) #3
  %47 = getelementptr inbounds %"struct.std::pair.19", %"struct.std::pair.19"* %42, i32 0, i32 1
  %48 = load %"struct.std::pair.30"*, %"struct.std::pair.30"** %41, align 8
  %49 = getelementptr inbounds %"struct.std::pair.30", %"struct.std::pair.30"* %48, i32 0, i32 1
  %50 = call dereferenceable(1) i8* @_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE(i8* dereferenceable(1) %49) #3
  %51 = load i8, i8* %50, align 1
  %52 = trunc i8 %51 to i1
  %53 = zext i1 %52 to i8
  store i8 %53, i8* %47, align 8
  %54 = load i32, i32* @x.592
  %55 = load i32, i32* @y.593
  %56 = add i32 %54, 122012382
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, 122012382
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  %68 = select i1 %66, i32 -634274762, i32 35502217
  store i32 %68, i32* %15
  br label %85

; <label>:69:                                     ; preds = %16
  ret void

; <label>:70:                                     ; preds = %16
  %71 = alloca %"struct.std::pair.19"*, align 8
  %72 = alloca %"struct.std::pair.30"*, align 8
  store %"struct.std::pair.19"* %0, %"struct.std::pair.19"** %71, align 8
  store %"struct.std::pair.30"* %1, %"struct.std::pair.30"** %72, align 8
  %73 = load %"struct.std::pair.19"*, %"struct.std::pair.19"** %71, align 8
  %74 = getelementptr inbounds %"struct.std::pair.19", %"struct.std::pair.19"* %73, i32 0, i32 0
  %75 = load %"struct.std::pair.30"*, %"struct.std::pair.30"** %72, align 8
  %76 = getelementptr inbounds %"struct.std::pair.30", %"struct.std::pair.30"* %75, i32 0, i32 0
  %77 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator.28"* @_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIxxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_iterator.28"* dereferenceable(8) %76) #3
  call void @_ZNSt23_Rb_tree_const_iteratorISt4pairIxxEEC2ERKSt17_Rb_tree_iteratorIS1_E(%"struct.std::_Rb_tree_const_iterator"* %74, %"struct.std::_Rb_tree_iterator.28"* dereferenceable(8) %77) #3
  %78 = getelementptr inbounds %"struct.std::pair.19", %"struct.std::pair.19"* %73, i32 0, i32 1
  %79 = load %"struct.std::pair.30"*, %"struct.std::pair.30"** %72, align 8
  %80 = getelementptr inbounds %"struct.std::pair.30", %"struct.std::pair.30"* %79, i32 0, i32 1
  %81 = call dereferenceable(1) i8* @_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE(i8* dereferenceable(1) %80) #3
  %82 = load i8, i8* %81, align 1
  %83 = trunc i8 %82 to i1
  %84 = zext i1 %83 to i8
  store i8 %84, i8* %78, align 8
  store i32 1461697130, i32* %15
  br label %85

; <label>:85:                                     ; preds = %70, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE14_M_create_nodeIJRxS9_EEEPSt13_Rb_tree_nodeIS1_EDpOT_(%"class.std::_Rb_tree.8"*, i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"class.std::_Rb_tree.8"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %8 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %4, align 8
  %9 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_M_get_nodeEv(%"class.std::_Rb_tree.8"* %8)
  store %"struct.std::_Rb_tree_node.21"* %9, %"struct.std::_Rb_tree_node.21"** %7, align 8
  %10 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %7, align 8
  %11 = load i64*, i64** %5, align 8
  %12 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %11) #3
  %13 = load i64*, i64** %6, align 8
  %14 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %13) #3
  call void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE17_M_construct_nodeIJRxS9_EEEvPSt13_Rb_tree_nodeIS1_EDpOT_(%"class.std::_Rb_tree.8"* %8, %"struct.std::_Rb_tree_node.21"* %10, i64* dereferenceable(8) %12, i64* dereferenceable(8) %14)
  %15 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %7, align 8
  ret %"struct.std::_Rb_tree_node.21"* %15
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE24_M_get_insert_unique_posERKS1_(%"class.std::_Rb_tree.8"*, %"struct.std::pair"* dereferenceable(16)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node.21"*
  %4 = alloca %"class.std::_Rb_tree.8"*
  %5 = alloca %"struct.std::pair.25", align 8
  %6 = alloca %"class.std::_Rb_tree.8"*, align 8
  %7 = alloca %"struct.std::pair"*, align 8
  %8 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  %9 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  %10 = alloca i8, align 1
  %11 = alloca %"struct.std::_Rb_tree_iterator.28", align 8
  %12 = alloca %"struct.std::_Rb_tree_iterator.28", align 8
  %13 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %6, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %7, align 8
  %14 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %6, align 8
  store %"class.std::_Rb_tree.8"* %14, %"class.std::_Rb_tree.8"** %4
  %15 = load volatile %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %4
  %16 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_M_beginEv(%"class.std::_Rb_tree.8"* %15) #3
  store %"struct.std::_Rb_tree_node.21"* %16, %"struct.std::_Rb_tree_node.21"** %8, align 8
  %17 = load volatile %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %4
  %18 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_M_endEv(%"class.std::_Rb_tree.8"* %17) #3
  store %"struct.std::_Rb_tree_node.21"* %18, %"struct.std::_Rb_tree_node.21"** %9, align 8
  store i8 1, i8* %10, align 1
  %19 = alloca i32
  store i32 860736203, i32* %19
  %20 = alloca %"struct.std::_Rb_tree_node.21"*
  br label %21

; <label>:21:                                     ; preds = %2, %235
  %22 = load i32, i32* %19
  switch i32 %22, label %23 [
    i32 860736203, label %24
    i32 -113641780, label %28
    i32 1593078664, label %41
    i32 -99549161, label %45
    i32 2097803851, label %73
    i32 467069728, label %104
    i32 203742106, label %106
    i32 458122051, label %108
    i32 -1721993138, label %114
    i32 -425498772, label %120
    i32 -182671193, label %121
    i32 -623397679, label %149
    i32 -1724109208, label %166
    i32 -863070396, label %167
    i32 1141655454, label %195
    i32 1973092370, label %211
    i32 1106174292, label %212
    i32 -399098928, label %222
    i32 -1099821730, label %223
    i32 1534105955, label %225
    i32 -2071606539, label %228
    i32 -457783509, label %232
    i32 -397600369, label %234
  ]

; <label>:23:                                     ; preds = %21
  br label %235

; <label>:24:                                     ; preds = %21
  %25 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %8, align 8
  %26 = icmp ne %"struct.std::_Rb_tree_node.21"* %25, null
  %27 = select i1 %26, i32 -113641780, i32 458122051
  store i32 %27, i32* %19
  br label %235

; <label>:28:                                     ; preds = %21
  %29 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %8, align 8
  store %"struct.std::_Rb_tree_node.21"* %29, %"struct.std::_Rb_tree_node.21"** %9, align 8
  %30 = load volatile %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %4
  %31 = getelementptr inbounds %"class.std::_Rb_tree.8", %"class.std::_Rb_tree.8"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %31, i32 0, i32 0
  %33 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %34 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %8, align 8
  %35 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_S_keyEPKSt13_Rb_tree_nodeIS1_E(%"struct.std::_Rb_tree_node.21"* %34)
  %36 = call zeroext i1 @_ZNKSt4lessISt4pairIxxEEclERKS1_S4_(%"struct.std::less.12"* %32, %"struct.std::pair"* dereferenceable(16) %33, %"struct.std::pair"* dereferenceable(16) %35)
  %37 = zext i1 %36 to i8
  store i8 %37, i8* %10, align 1
  %38 = load i8, i8* %10, align 1
  %39 = trunc i8 %38 to i1
  %40 = select i1 %39, i32 1593078664, i32 -99549161
  store i32 %40, i32* %19
  br label %235

; <label>:41:                                     ; preds = %21
  %42 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %8, align 8
  %43 = bitcast %"struct.std::_Rb_tree_node.21"* %42 to %"struct.std::_Rb_tree_node_base"*
  %44 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %43) #3
  store i32 203742106, i32* %19
  store %"struct.std::_Rb_tree_node.21"* %44, %"struct.std::_Rb_tree_node.21"** %20
  br label %235

; <label>:45:                                     ; preds = %21
  %46 = load i32, i32* @x.596
  %47 = load i32, i32* @y.597
  %48 = add i32 %46, 441604716
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, 441604716
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 2097803851, i32 -2071606539
  store i32 %72, i32* %19
  br label %235

; <label>:73:                                     ; preds = %21
  %74 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %8, align 8
  %75 = bitcast %"struct.std::_Rb_tree_node.21"* %74 to %"struct.std::_Rb_tree_node_base"*
  %76 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %75) #3
  store %"struct.std::_Rb_tree_node.21"* %76, %"struct.std::_Rb_tree_node.21"** %3
  %77 = load i32, i32* @x.596
  %78 = load i32, i32* @y.597
  %79 = sub i32 %77, 976475853
  %80 = sub i32 %79, 1
  %81 = add i32 %80, 976475853
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = xor i1 %85, true
  %88 = xor i1 %86, true
  %89 = xor i1 true, true
  %90 = and i1 %87, true
  %91 = and i1 %85, %89
  %92 = and i1 %88, true
  %93 = and i1 %86, %89
  %94 = or i1 %90, %91
  %95 = or i1 %92, %93
  %96 = xor i1 %94, %95
  %97 = or i1 %87, %88
  %98 = xor i1 %97, true
  %99 = or i1 true, %89
  %100 = and i1 %98, %99
  %101 = or i1 %96, %100
  %102 = or i1 %85, %86
  %103 = select i1 %101, i32 467069728, i32 -2071606539
  store i32 %103, i32* %19
  br label %235

; <label>:104:                                    ; preds = %21
  store i32 203742106, i32* %19
  %105 = load volatile %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %3
  store %"struct.std::_Rb_tree_node.21"* %105, %"struct.std::_Rb_tree_node.21"** %20
  br label %235

; <label>:106:                                    ; preds = %21
  %107 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %20
  store %"struct.std::_Rb_tree_node.21"* %107, %"struct.std::_Rb_tree_node.21"** %8, align 8
  store i32 860736203, i32* %19
  br label %235

; <label>:108:                                    ; preds = %21
  %109 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %9, align 8
  %110 = bitcast %"struct.std::_Rb_tree_node.21"* %109 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.28"* %11, %"struct.std::_Rb_tree_node_base"* %110) #3
  %111 = load i8, i8* %10, align 1
  %112 = trunc i8 %111 to i1
  %113 = select i1 %112, i32 -1721993138, i32 1106174292
  store i32 %113, i32* %19
  br label %235

; <label>:114:                                    ; preds = %21
  %115 = load volatile %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %4
  %116 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE5beginEv(%"class.std::_Rb_tree.8"* %115) #3
  %117 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %12, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %116, %"struct.std::_Rb_tree_node_base"** %117, align 8
  %118 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIxxEEeqERKS2_(%"struct.std::_Rb_tree_iterator.28"* %11, %"struct.std::_Rb_tree_iterator.28"* dereferenceable(8) %12) #3
  %119 = select i1 %118, i32 -425498772, i32 -182671193
  store i32 %119, i32* %19
  br label %235

; <label>:120:                                    ; preds = %21
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IxxEES8_vEEOT_OT0_(%"struct.std::pair.25"* %5, %"struct.std::_Rb_tree_node.21"** dereferenceable(8) %8, %"struct.std::_Rb_tree_node.21"** dereferenceable(8) %9)
  store i32 1534105955, i32* %19
  br label %235

; <label>:121:                                    ; preds = %21
  %122 = load i32, i32* @x.596
  %123 = load i32, i32* @y.597
  %124 = sub i32 %122, 1982047083
  %125 = sub i32 %124, 1
  %126 = add i32 %125, 1982047083
  %127 = sub i32 %122, 1
  %128 = mul i32 %122, %126
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %123, 10
  %132 = xor i1 %130, true
  %133 = xor i1 %131, true
  %134 = xor i1 false, true
  %135 = and i1 %132, false
  %136 = and i1 %130, %134
  %137 = and i1 %133, false
  %138 = and i1 %131, %134
  %139 = or i1 %135, %136
  %140 = or i1 %137, %138
  %141 = xor i1 %139, %140
  %142 = or i1 %132, %133
  %143 = xor i1 %142, true
  %144 = or i1 false, %134
  %145 = and i1 %143, %144
  %146 = or i1 %141, %145
  %147 = or i1 %130, %131
  %148 = select i1 %146, i32 -623397679, i32 -457783509
  store i32 %148, i32* %19
  br label %235

; <label>:149:                                    ; preds = %21
  %150 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator.28"* @_ZNSt17_Rb_tree_iteratorISt4pairIxxEEmmEv(%"struct.std::_Rb_tree_iterator.28"* %11) #3
  %151 = load i32, i32* @x.596
  %152 = load i32, i32* @y.597
  %153 = sub i32 %151, 1677680288
  %154 = sub i32 %153, 1
  %155 = add i32 %154, 1677680288
  %156 = sub i32 %151, 1
  %157 = mul i32 %151, %155
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %152, 10
  %161 = and i1 %159, %160
  %162 = xor i1 %159, %160
  %163 = or i1 %161, %162
  %164 = or i1 %159, %160
  %165 = select i1 %163, i32 -1724109208, i32 -457783509
  store i32 %165, i32* %19
  br label %235

; <label>:166:                                    ; preds = %21
  store i32 -863070396, i32* %19
  br label %235

; <label>:167:                                    ; preds = %21
  %168 = load i32, i32* @x.596
  %169 = load i32, i32* @y.597
  %170 = add i32 %168, 310571769
  %171 = sub i32 %170, 1
  %172 = sub i32 %171, 310571769
  %173 = sub i32 %168, 1
  %174 = mul i32 %168, %172
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %169, 10
  %178 = xor i1 %176, true
  %179 = xor i1 %177, true
  %180 = xor i1 false, true
  %181 = and i1 %178, false
  %182 = and i1 %176, %180
  %183 = and i1 %179, false
  %184 = and i1 %177, %180
  %185 = or i1 %181, %182
  %186 = or i1 %183, %184
  %187 = xor i1 %185, %186
  %188 = or i1 %178, %179
  %189 = xor i1 %188, true
  %190 = or i1 false, %180
  %191 = and i1 %189, %190
  %192 = or i1 %187, %191
  %193 = or i1 %176, %177
  %194 = select i1 %192, i32 1141655454, i32 -397600369
  store i32 %194, i32* %19
  br label %235

; <label>:195:                                    ; preds = %21
  %196 = load i32, i32* @x.596
  %197 = load i32, i32* @y.597
  %198 = sub i32 %196, 1887937867
  %199 = sub i32 %198, 1
  %200 = add i32 %199, 1887937867
  %201 = sub i32 %196, 1
  %202 = mul i32 %196, %200
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %197, 10
  %206 = and i1 %204, %205
  %207 = xor i1 %204, %205
  %208 = or i1 %206, %207
  %209 = or i1 %204, %205
  %210 = select i1 %208, i32 1973092370, i32 -397600369
  store i32 %210, i32* %19
  br label %235

; <label>:211:                                    ; preds = %21
  store i32 1106174292, i32* %19
  br label %235

; <label>:212:                                    ; preds = %21
  %213 = load volatile %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %4
  %214 = getelementptr inbounds %"class.std::_Rb_tree.8", %"class.std::_Rb_tree.8"* %213, i32 0, i32 0
  %215 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %214, i32 0, i32 0
  %216 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %11, i32 0, i32 0
  %217 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %216, align 8
  %218 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %217)
  %219 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %220 = call zeroext i1 @_ZNKSt4lessISt4pairIxxEEclERKS1_S4_(%"struct.std::less.12"* %215, %"struct.std::pair"* dereferenceable(16) %218, %"struct.std::pair"* dereferenceable(16) %219)
  %221 = select i1 %220, i32 -399098928, i32 -1099821730
  store i32 %221, i32* %19
  br label %235

; <label>:222:                                    ; preds = %21
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IxxEES8_vEEOT_OT0_(%"struct.std::pair.25"* %5, %"struct.std::_Rb_tree_node.21"** dereferenceable(8) %8, %"struct.std::_Rb_tree_node.21"** dereferenceable(8) %9)
  store i32 1534105955, i32* %19
  br label %235

; <label>:223:                                    ; preds = %21
  %224 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %11, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %13, align 8
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.25"* %5, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %224, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %13)
  store i32 1534105955, i32* %19
  br label %235

; <label>:225:                                    ; preds = %21
  %226 = bitcast %"struct.std::pair.25"* %5 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %227 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %226, align 8
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %227

; <label>:228:                                    ; preds = %21
  %229 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %8, align 8
  %230 = bitcast %"struct.std::_Rb_tree_node.21"* %229 to %"struct.std::_Rb_tree_node_base"*
  %231 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %230) #3
  store i32 2097803851, i32* %19
  br label %235

; <label>:232:                                    ; preds = %21
  %233 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator.28"* @_ZNSt17_Rb_tree_iteratorISt4pairIxxEEmmEv(%"struct.std::_Rb_tree_iterator.28"* %11) #3
  store i32 -623397679, i32* %19
  br label %235

; <label>:234:                                    ; preds = %21
  store i32 1141655454, i32* %19
  br label %235

; <label>:235:                                    ; preds = %234, %232, %228, %223, %222, %212, %211, %195, %167, %166, %149, %121, %120, %114, %108, %106, %104, %73, %45, %41, %28, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseS9_PSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.8"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node.21"*) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca %"struct.std::_Rb_tree_node_base"*
  %7 = alloca %"class.std::_Rb_tree.8"*
  %8 = alloca %"struct.std::_Rb_tree_iterator.28", align 8
  %9 = alloca %"class.std::_Rb_tree.8"*, align 8
  %10 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %11 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %12 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  %13 = alloca i8, align 1
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %9, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %10, align 8
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %11, align 8
  store %"struct.std::_Rb_tree_node.21"* %3, %"struct.std::_Rb_tree_node.21"** %12, align 8
  %14 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %9, align 8
  store %"class.std::_Rb_tree.8"* %14, %"class.std::_Rb_tree.8"** %7
  %15 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
  store %"struct.std::_Rb_tree_node_base"* %15, %"struct.std::_Rb_tree_node_base"** %6
  %16 = alloca i32
  store i32 386010264, i32* %16
  %17 = alloca i1
  br label %18

; <label>:18:                                     ; preds = %4, %131
  %19 = load i32, i32* %16
  switch i32 %19, label %20 [
    i32 386010264, label %21
    i32 165039531, label %25
    i32 2038749468, label %32
    i32 594899819, label %60
    i32 1087715353, label %96
    i32 519845644, label %98
    i32 433255075, label %122
  ]

; <label>:20:                                     ; preds = %18
  br label %131

; <label>:21:                                     ; preds = %18
  %22 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6
  %23 = icmp ne %"struct.std::_Rb_tree_node_base"* %22, null
  %24 = select i1 %23, i32 519845644, i32 165039531
  store i32 %24, i32* %16
  store i1 true, i1* %17
  br label %131

; <label>:25:                                     ; preds = %18
  %26 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %27 = load volatile %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %7
  %28 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_M_endEv(%"class.std::_Rb_tree.8"* %27) #3
  %29 = bitcast %"struct.std::_Rb_tree_node.21"* %28 to %"struct.std::_Rb_tree_node_base"*
  %30 = icmp eq %"struct.std::_Rb_tree_node_base"* %26, %29
  %31 = select i1 %30, i32 519845644, i32 2038749468
  store i32 %31, i32* %16
  store i1 true, i1* %17
  br label %131

; <label>:32:                                     ; preds = %18
  %33 = load i32, i32* @x.598
  %34 = load i32, i32* @y.599
  %35 = sub i32 %33, -197281127
  %36 = sub i32 %35, 1
  %37 = add i32 %36, -197281127
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 594899819, i32 433255075
  store i32 %59, i32* %16
  br label %131

; <label>:60:                                     ; preds = %18
  %61 = load volatile %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %7
  %62 = getelementptr inbounds %"class.std::_Rb_tree.8", %"class.std::_Rb_tree.8"* %61, i32 0, i32 0
  %63 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %62, i32 0, i32 0
  %64 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %12, align 8
  %65 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_S_keyEPKSt13_Rb_tree_nodeIS1_E(%"struct.std::_Rb_tree_node.21"* %64)
  %66 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %67 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %66)
  %68 = call zeroext i1 @_ZNKSt4lessISt4pairIxxEEclERKS1_S4_(%"struct.std::less.12"* %63, %"struct.std::pair"* dereferenceable(16) %65, %"struct.std::pair"* dereferenceable(16) %67)
  store i1 %68, i1* %5
  %69 = load i32, i32* @x.598
  %70 = load i32, i32* @y.599
  %71 = sub i32 %69, 412770529
  %72 = sub i32 %71, 1
  %73 = add i32 %72, 412770529
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = xor i1 %77, true
  %80 = xor i1 %78, true
  %81 = xor i1 true, true
  %82 = and i1 %79, true
  %83 = and i1 %77, %81
  %84 = and i1 %80, true
  %85 = and i1 %78, %81
  %86 = or i1 %82, %83
  %87 = or i1 %84, %85
  %88 = xor i1 %86, %87
  %89 = or i1 %79, %80
  %90 = xor i1 %89, true
  %91 = or i1 true, %81
  %92 = and i1 %90, %91
  %93 = or i1 %88, %92
  %94 = or i1 %77, %78
  %95 = select i1 %93, i32 1087715353, i32 433255075
  store i32 %95, i32* %16
  br label %131

; <label>:96:                                     ; preds = %18
  store i32 519845644, i32* %16
  %97 = load volatile i1, i1* %5
  store i1 %97, i1* %17
  br label %131

; <label>:98:                                     ; preds = %18
  %99 = load i1, i1* %17
  %100 = zext i1 %99 to i8
  store i8 %100, i8* %13, align 1
  %101 = load i8, i8* %13, align 1
  %102 = trunc i8 %101 to i1
  %103 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %12, align 8
  %104 = bitcast %"struct.std::_Rb_tree_node.21"* %103 to %"struct.std::_Rb_tree_node_base"*
  %105 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %106 = load volatile %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %7
  %107 = getelementptr inbounds %"class.std::_Rb_tree.8", %"class.std::_Rb_tree.8"* %106, i32 0, i32 0
  %108 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %107, i32 0, i32 1
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %102, %"struct.std::_Rb_tree_node_base"* %104, %"struct.std::_Rb_tree_node_base"* %105, %"struct.std::_Rb_tree_node_base"* dereferenceable(32) %108) #3
  %109 = load volatile %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %7
  %110 = getelementptr inbounds %"class.std::_Rb_tree.8", %"class.std::_Rb_tree.8"* %109, i32 0, i32 0
  %111 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %110, i32 0, i32 2
  %112 = load i64, i64* %111, align 8
  %113 = sub i64 0, %112
  %114 = sub i64 0, 1
  %115 = add i64 %113, %114
  %116 = sub i64 0, %115
  %117 = add i64 %112, 1
  store i64 %116, i64* %111, align 8
  %118 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %12, align 8
  %119 = bitcast %"struct.std::_Rb_tree_node.21"* %118 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIxxEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.28"* %8, %"struct.std::_Rb_tree_node_base"* %119) #3
  %120 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %8, i32 0, i32 0
  %121 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %120, align 8
  ret %"struct.std::_Rb_tree_node_base"* %121

; <label>:122:                                    ; preds = %18
  %123 = load volatile %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %7
  %124 = getelementptr inbounds %"class.std::_Rb_tree.8", %"class.std::_Rb_tree.8"* %123, i32 0, i32 0
  %125 = getelementptr inbounds %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::pair<long long, long long>, std::pair<long long, long long>, std::_Identity<std::pair<long long, long long> >, std::less<std::pair<long long, long long> >, std::allocator<std::pair<long long, long long> > >::_Rb_tree_impl"* %124, i32 0, i32 0
  %126 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %12, align 8
  %127 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_S_keyEPKSt13_Rb_tree_nodeIS1_E(%"struct.std::_Rb_tree_node.21"* %126)
  %128 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %129 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %128)
  %130 = call zeroext i1 @_ZNKSt4lessISt4pairIxxEEclERKS1_S4_(%"struct.std::less.12"* %125, %"struct.std::pair"* dereferenceable(16) %127, %"struct.std::pair"* dereferenceable(16) %129)
  store i32 594899819, i32* %16
  br label %131

; <label>:131:                                    ; preds = %122, %96, %60, %32, %25, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairISt17_Rb_tree_iteratorIS_IxxEEbEC2IS2_bvEEOT_OT0_(%"struct.std::pair.30"*, %"struct.std::_Rb_tree_iterator.28"* dereferenceable(8), i8* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::pair.30"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_iterator.28"*, align 8
  %6 = alloca i8*, align 8
  store %"struct.std::pair.30"* %0, %"struct.std::pair.30"** %4, align 8
  store %"struct.std::_Rb_tree_iterator.28"* %1, %"struct.std::_Rb_tree_iterator.28"** %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"struct.std::pair.30"*, %"struct.std::pair.30"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair.30", %"struct.std::pair.30"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %5, align 8
  %10 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator.28"* @_ZSt7forwardISt17_Rb_tree_iteratorISt4pairIxxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_iterator.28"* dereferenceable(8) %9) #3
  %11 = bitcast %"struct.std::_Rb_tree_iterator.28"* %8 to i8*
  %12 = bitcast %"struct.std::_Rb_tree_iterator.28"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"struct.std::pair.30", %"struct.std::pair.30"* %7, i32 0, i32 1
  %14 = load i8*, i8** %6, align 8
  %15 = call dereferenceable(1) i8* @_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE(i8* dereferenceable(1) %14) #3
  %16 = load i8, i8* %15, align 1
  %17 = trunc i8 %16 to i1
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %13, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.21"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_M_get_nodeEv(%"class.std::_Rb_tree.8"*) #0 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.8"*, align 8
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %2, align 8
  %3 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %2, align 8
  %4 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.8"* %3) #3
  %5 = call %"struct.std::_Rb_tree_node.21"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIxxEEEE8allocateERS4_m(%"class.std::allocator.9"* dereferenceable(1) %4, i64 1)
  ret %"struct.std::_Rb_tree_node.21"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE17_M_construct_nodeIJRxS9_EEEvPSt13_Rb_tree_nodeIS1_EDpOT_(%"class.std::_Rb_tree.8"*, %"struct.std::_Rb_tree_node.21"*, i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.604
  %6 = load i32, i32* @y.605
  %7 = sub i32 %5, 2091299292
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 2091299292
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %6, 10
  %15 = and i1 %13, %14
  %16 = xor i1 %13, %14
  %17 = or i1 %15, %16
  %18 = or i1 %13, %14
  br i1 %17, label %19, label %254

; <label>:19:                                     ; preds = %4, %254
  %20 = alloca %"class.std::_Rb_tree.8"*, align 8
  %21 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  %22 = alloca i64*, align 8
  %23 = alloca i64*, align 8
  %24 = alloca i8*
  %25 = alloca i32
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %20, align 8
  store %"struct.std::_Rb_tree_node.21"* %1, %"struct.std::_Rb_tree_node.21"** %21, align 8
  store i64* %2, i64** %22, align 8
  store i64* %3, i64** %23, align 8
  %26 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %20, align 8
  %27 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %21, align 8
  %28 = bitcast %"struct.std::_Rb_tree_node.21"* %27 to i8*
  %29 = bitcast i8* %28 to %"struct.std::_Rb_tree_node.21"*
  %30 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.8"* %26) #3
  %31 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %21, align 8
  %32 = load i32, i32* @x.604
  %33 = load i32, i32* @y.605
  %34 = sub i32 %32, 1214380757
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 1214380757
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %254

; <label>:46:                                     ; preds = %19
  %47 = invoke %"struct.std::pair"* @_ZNSt13_Rb_tree_nodeISt4pairIxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node.21"* %31)
          to label %48 unwind label %54

; <label>:48:                                     ; preds = %46
  %49 = load i64*, i64** %22, align 8
  %50 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %49) #3
  %51 = load i64*, i64** %23, align 8
  %52 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %51) #3
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIxxEEEE9constructIS2_JRxS7_EEEvRS4_PT_DpOT0_(%"class.std::allocator.9"* dereferenceable(1) %30, %"struct.std::pair"* %47, i64* dereferenceable(8) %50, i64* dereferenceable(8) %52)
          to label %53 unwind label %54

; <label>:53:                                     ; preds = %48
  br label %121

; <label>:54:                                     ; preds = %48, %46
  %55 = landingpad { i8*, i32 }
          catch i8* null
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %24, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %25, align 4
  br label %58

; <label>:58:                                     ; preds = %54
  %59 = load i32, i32* @x.604
  %60 = load i32, i32* @y.605
  %61 = add i32 %59, -1319266798
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, -1319266798
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 false, true
  %72 = and i1 %69, false
  %73 = and i1 %67, %71
  %74 = and i1 %70, false
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 false, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  br i1 %83, label %85, label %267

; <label>:85:                                     ; preds = %58, %267
  %86 = load i8*, i8** %24, align 8
  %87 = call i8* @__cxa_begin_catch(i8* %86) #3
  %88 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %21, align 8
  %89 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %21, align 8
  call void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.8"* %26, %"struct.std::_Rb_tree_node.21"* %89) #3
  %90 = load i32, i32* @x.604
  %91 = load i32, i32* @y.605
  %92 = sub i32 0, 1
  %93 = add i32 %90, %92
  %94 = sub i32 %90, 1
  %95 = mul i32 %90, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %91, 10
  %99 = xor i1 %97, true
  %100 = xor i1 %98, true
  %101 = xor i1 false, true
  %102 = and i1 %99, false
  %103 = and i1 %97, %101
  %104 = and i1 %100, false
  %105 = and i1 %98, %101
  %106 = or i1 %102, %103
  %107 = or i1 %104, %105
  %108 = xor i1 %106, %107
  %109 = or i1 %99, %100
  %110 = xor i1 %109, true
  %111 = or i1 false, %101
  %112 = and i1 %110, %111
  %113 = or i1 %108, %112
  %114 = or i1 %97, %98
  br i1 %113, label %115, label %267

; <label>:115:                                    ; preds = %85
  invoke void @__cxa_rethrow() #16
          to label %253 unwind label %116

; <label>:116:                                    ; preds = %115
  %117 = landingpad { i8*, i32 }
          cleanup
  %118 = extractvalue { i8*, i32 } %117, 0
  store i8* %118, i8** %24, align 8
  %119 = extractvalue { i8*, i32 } %117, 1
  store i32 %119, i32* %25, align 4
  invoke void @__cxa_end_catch()
          to label %120 unwind label %209

; <label>:120:                                    ; preds = %116
  br label %162

; <label>:121:                                    ; preds = %53
  %122 = load i32, i32* @x.604
  %123 = load i32, i32* @y.605
  %124 = sub i32 0, 1
  %125 = add i32 %122, %124
  %126 = sub i32 %122, 1
  %127 = mul i32 %122, %125
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %123, 10
  %131 = xor i1 %129, true
  %132 = xor i1 %130, true
  %133 = xor i1 false, true
  %134 = and i1 %131, false
  %135 = and i1 %129, %133
  %136 = and i1 %132, false
  %137 = and i1 %130, %133
  %138 = or i1 %134, %135
  %139 = or i1 %136, %137
  %140 = xor i1 %138, %139
  %141 = or i1 %131, %132
  %142 = xor i1 %141, true
  %143 = or i1 false, %133
  %144 = and i1 %142, %143
  %145 = or i1 %140, %144
  %146 = or i1 %129, %130
  br i1 %145, label %147, label %272

; <label>:147:                                    ; preds = %121, %272
  %148 = load i32, i32* @x.604
  %149 = load i32, i32* @y.605
  %150 = sub i32 0, 1
  %151 = add i32 %148, %150
  %152 = sub i32 %148, 1
  %153 = mul i32 %148, %151
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %149, 10
  %157 = and i1 %155, %156
  %158 = xor i1 %155, %156
  %159 = or i1 %157, %158
  %160 = or i1 %155, %156
  br i1 %159, label %161, label %272

; <label>:161:                                    ; preds = %147
  ret void

; <label>:162:                                    ; preds = %120
  %163 = load i32, i32* @x.604
  %164 = load i32, i32* @y.605
  %165 = sub i32 %163, 1245003235
  %166 = sub i32 %165, 1
  %167 = add i32 %166, 1245003235
  %168 = sub i32 %163, 1
  %169 = mul i32 %163, %167
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %164, 10
  %173 = and i1 %171, %172
  %174 = xor i1 %171, %172
  %175 = or i1 %173, %174
  %176 = or i1 %171, %172
  br i1 %175, label %177, label %273

; <label>:177:                                    ; preds = %162, %273
  %178 = load i8*, i8** %24, align 8
  %179 = load i32, i32* %25, align 4
  %180 = insertvalue { i8*, i32 } undef, i8* %178, 0
  %181 = insertvalue { i8*, i32 } %180, i32 %179, 1
  %182 = load i32, i32* @x.604
  %183 = load i32, i32* @y.605
  %184 = sub i32 %182, 249403141
  %185 = sub i32 %184, 1
  %186 = add i32 %185, 249403141
  %187 = sub i32 %182, 1
  %188 = mul i32 %182, %186
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %183, 10
  %192 = xor i1 %190, true
  %193 = xor i1 %191, true
  %194 = xor i1 false, true
  %195 = and i1 %192, false
  %196 = and i1 %190, %194
  %197 = and i1 %193, false
  %198 = and i1 %191, %194
  %199 = or i1 %195, %196
  %200 = or i1 %197, %198
  %201 = xor i1 %199, %200
  %202 = or i1 %192, %193
  %203 = xor i1 %202, true
  %204 = or i1 false, %194
  %205 = and i1 %203, %204
  %206 = or i1 %201, %205
  %207 = or i1 %190, %191
  br i1 %206, label %208, label %273

; <label>:208:                                    ; preds = %177
  resume { i8*, i32 } %181

; <label>:209:                                    ; preds = %116
  %210 = load i32, i32* @x.604
  %211 = load i32, i32* @y.605
  %212 = sub i32 0, 1
  %213 = add i32 %210, %212
  %214 = sub i32 %210, 1
  %215 = mul i32 %210, %213
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %211, 10
  %219 = xor i1 %217, true
  %220 = xor i1 %218, true
  %221 = xor i1 true, true
  %222 = and i1 %219, true
  %223 = and i1 %217, %221
  %224 = and i1 %220, true
  %225 = and i1 %218, %221
  %226 = or i1 %222, %223
  %227 = or i1 %224, %225
  %228 = xor i1 %226, %227
  %229 = or i1 %219, %220
  %230 = xor i1 %229, true
  %231 = or i1 true, %221
  %232 = and i1 %230, %231
  %233 = or i1 %228, %232
  %234 = or i1 %217, %218
  br i1 %233, label %235, label %278

; <label>:235:                                    ; preds = %209, %278
  %236 = landingpad { i8*, i32 }
          catch i8* null
  %237 = extractvalue { i8*, i32 } %236, 0
  call void @__clang_call_terminate(i8* %237) #12
  %238 = load i32, i32* @x.604
  %239 = load i32, i32* @y.605
  %240 = sub i32 %238, 1904275803
  %241 = sub i32 %240, 1
  %242 = add i32 %241, 1904275803
  %243 = sub i32 %238, 1
  %244 = mul i32 %238, %242
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %239, 10
  %248 = and i1 %246, %247
  %249 = xor i1 %246, %247
  %250 = or i1 %248, %249
  %251 = or i1 %246, %247
  br i1 %250, label %252, label %278

; <label>:252:                                    ; preds = %235
  unreachable

; <label>:253:                                    ; preds = %115
  unreachable

; <label>:254:                                    ; preds = %19, %4
  %255 = alloca %"class.std::_Rb_tree.8"*, align 8
  %256 = alloca %"struct.std::_Rb_tree_node.21"*, align 8
  %257 = alloca i64*, align 8
  %258 = alloca i64*, align 8
  %259 = alloca i8*
  %260 = alloca i32
  store %"class.std::_Rb_tree.8"* %0, %"class.std::_Rb_tree.8"** %255, align 8
  store %"struct.std::_Rb_tree_node.21"* %1, %"struct.std::_Rb_tree_node.21"** %256, align 8
  store i64* %2, i64** %257, align 8
  store i64* %3, i64** %258, align 8
  %261 = load %"class.std::_Rb_tree.8"*, %"class.std::_Rb_tree.8"** %255, align 8
  %262 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %256, align 8
  %263 = bitcast %"struct.std::_Rb_tree_node.21"* %262 to i8*
  %264 = bitcast i8* %263 to %"struct.std::_Rb_tree_node.21"*
  %265 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.8"* %261) #3
  %266 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %256, align 8
  br label %19

; <label>:267:                                    ; preds = %85, %58
  %268 = load i8*, i8** %24, align 8
  %269 = call i8* @__cxa_begin_catch(i8* %268) #3
  %270 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %21, align 8
  %271 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %21, align 8
  call void @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS1_E(%"class.std::_Rb_tree.8"* %26, %"struct.std::_Rb_tree_node.21"* %271) #3
  br label %85

; <label>:272:                                    ; preds = %147, %121
  br label %147

; <label>:273:                                    ; preds = %177, %162
  %274 = load i8*, i8** %24, align 8
  %275 = load i32, i32* %25, align 4
  %276 = insertvalue { i8*, i32 } undef, i8* %274, 0
  %277 = insertvalue { i8*, i32 } %276, i32 %275, 1
  br label %177

; <label>:278:                                    ; preds = %235, %209
  %279 = landingpad { i8*, i32 }
          catch i8* null
  %280 = extractvalue { i8*, i32 } %279, 0
  call void @__clang_call_terminate(i8* %280) #12
  br label %235
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.21"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIxxEEEE8allocateERS4_m(%"class.std::allocator.9"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.9"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %3, align 8
  %6 = bitcast %"class.std::allocator.9"* %5 to %"class.__gnu_cxx::new_allocator.10"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.std::_Rb_tree_node.21"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIxxEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.10"* %6, i64 %7, i8* null)
  ret %"struct.std::_Rb_tree_node.21"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.21"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIxxEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.10"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Rb_tree_node.21"*
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIxxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.10"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 -75625857, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %86
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -75625857, label %17
    i32 2123346010, label %22
    i32 -331719633, label %23
    i32 -199132452, label %39
    i32 1783320651, label %59
    i32 448715046, label %61
  ]

; <label>:16:                                     ; preds = %14
  br label %86

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 2123346010, i32 -331719633
  store i32 %21, i32* %13
  br label %86

; <label>:22:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #16
  unreachable

; <label>:23:                                     ; preds = %14
  %24 = load i32, i32* @x.608
  %25 = load i32, i32* @y.609
  %26 = sub i32 %24, 529186768
  %27 = sub i32 %26, 1
  %28 = add i32 %27, 529186768
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  %38 = select i1 %36, i32 -199132452, i32 448715046
  store i32 %38, i32* %13
  br label %86

; <label>:39:                                     ; preds = %14
  %40 = load i64, i64* %8, align 8
  %41 = mul i64 %40, 48
  %42 = call i8* @_Znwm(i64 %41)
  %43 = bitcast i8* %42 to %"struct.std::_Rb_tree_node.21"*
  store %"struct.std::_Rb_tree_node.21"* %43, %"struct.std::_Rb_tree_node.21"** %4
  %44 = load i32, i32* @x.608
  %45 = load i32, i32* @y.609
  %46 = sub i32 %44, -1614370866
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -1614370866
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1783320651, i32 448715046
  store i32 %58, i32* %13
  br label %86

; <label>:59:                                     ; preds = %14
  %60 = load volatile %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %4
  ret %"struct.std::_Rb_tree_node.21"* %60

; <label>:61:                                     ; preds = %14
  %62 = load i64, i64* %8, align 8
  %63 = shl i64 %62, 48
  %64 = sub i64 0, %62
  %65 = add i64 0, %64
  %66 = sub i64 0, %62
  %67 = sub i64 0, 48
  %68 = sub i64 %65, %67
  %69 = add i64 %65, 48
  %70 = sub i64 0, 3303483742773062012
  %71 = sub i64 %70, %62
  %72 = add i64 %71, 3303483742773062012
  %73 = sub i64 0, %62
  %74 = add i64 %72, -1982132260562877376
  %75 = add i64 %74, 48
  %76 = sub i64 %75, -1982132260562877376
  %77 = add i64 %72, 48
  %78 = add i64 %62, -94981501242847335
  %79 = sub i64 %78, 48
  %80 = sub i64 %79, -94981501242847335
  %81 = sub i64 %62, 48
  %82 = mul i64 %80, 48
  %83 = mul i64 %62, 48
  %84 = call i8* @_Znwm(i64 %83)
  %85 = bitcast i8* %84 to %"struct.std::_Rb_tree_node.21"*
  store i32 -199132452, i32* %13
  br label %86

; <label>:86:                                     ; preds = %61, %39, %23, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIxxEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.10"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %2, align 8
  ret i64 384307168202282325
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIxxEEEE9constructIS2_JRxS7_EEEvRS4_PT_DpOT0_(%"class.std::allocator.9"* dereferenceable(1), %"struct.std::pair"*, i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %5 = alloca %"class.std::allocator.9"*, align 8
  %6 = alloca %"struct.std::pair"*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %5, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %6, align 8
  store i64* %2, i64** %7, align 8
  store i64* %3, i64** %8, align 8
  %9 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %5, align 8
  %10 = bitcast %"class.std::allocator.9"* %9 to %"class.__gnu_cxx::new_allocator.10"*
  %11 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %12 = load i64*, i64** %7, align 8
  %13 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %12) #3
  %14 = load i64*, i64** %8, align 8
  %15 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %14) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIxxEEE9constructIS3_JRxS7_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.10"* %10, %"struct.std::pair"* %11, i64* dereferenceable(8) %13, i64* dereferenceable(8) %15)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIxxEEE9constructIS3_JRxS7_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.10"*, %"struct.std::pair"*, i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %5 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %6 = alloca %"struct.std::pair"*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %5, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %6, align 8
  store i64* %2, i64** %7, align 8
  store i64* %3, i64** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %5, align 8
  %10 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %11 = bitcast %"struct.std::pair"* %10 to i8*
  %12 = bitcast i8* %11 to %"struct.std::pair"*
  %13 = load i64*, i64** %7, align 8
  %14 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %13) #3
  %15 = load i64*, i64** %8, align 8
  %16 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %15) #3
  call void @_ZNSt4pairIxxEC2IRxS2_vEEOT_OT0_(%"struct.std::pair"* %12, i64* dereferenceable(8) %14, i64* dereferenceable(8) %16)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIxxEC2IRxS2_vEEOT_OT0_(%"struct.std::pair"*, i64* dereferenceable(8), i64* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::pair"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 0
  %9 = load i64*, i64** %5, align 8
  %10 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %9) #3
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %8, align 8
  %12 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 1
  %13 = load i64*, i64** %6, align 8
  %14 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %13) #3
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIxxEEeqERKS2_(%"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"* dereferenceable(8)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator.28"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_iterator.28"*, align 8
  store %"struct.std::_Rb_tree_iterator.28"* %0, %"struct.std::_Rb_tree_iterator.28"** %3, align 8
  store %"struct.std::_Rb_tree_iterator.28"* %1, %"struct.std::_Rb_tree_iterator.28"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = load %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %8, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %11 = icmp eq %"struct.std::_Rb_tree_node_base"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IxxEES8_vEEOT_OT0_(%"struct.std::pair.25"*, %"struct.std::_Rb_tree_node.21"** dereferenceable(8), %"struct.std::_Rb_tree_node.21"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::pair.25"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node.21"**, align 8
  %6 = alloca %"struct.std::_Rb_tree_node.21"**, align 8
  store %"struct.std::pair.25"* %0, %"struct.std::pair.25"** %4, align 8
  store %"struct.std::_Rb_tree_node.21"** %1, %"struct.std::_Rb_tree_node.21"*** %5, align 8
  store %"struct.std::_Rb_tree_node.21"** %2, %"struct.std::_Rb_tree_node.21"*** %6, align 8
  %7 = load %"struct.std::pair.25"*, %"struct.std::pair.25"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair.25", %"struct.std::pair.25"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %5, align 8
  %10 = call dereferenceable(8) %"struct.std::_Rb_tree_node.21"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIxxEEEOT_RNSt16remove_referenceIS6_E4typeE(%"struct.std::_Rb_tree_node.21"** dereferenceable(8) %9) #3
  %11 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %10, align 8
  %12 = bitcast %"struct.std::_Rb_tree_node.21"* %11 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %12, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %13 = getelementptr inbounds %"struct.std::pair.25", %"struct.std::pair.25"* %7, i32 0, i32 1
  %14 = load %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %6, align 8
  %15 = call dereferenceable(8) %"struct.std::_Rb_tree_node.21"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIxxEEEOT_RNSt16remove_referenceIS6_E4typeE(%"struct.std::_Rb_tree_node.21"** dereferenceable(8) %14) #3
  %16 = load %"struct.std::_Rb_tree_node.21"*, %"struct.std::_Rb_tree_node.21"** %15, align 8
  %17 = bitcast %"struct.std::_Rb_tree_node.21"* %16 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %13, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator.28"* @_ZNSt17_Rb_tree_iteratorISt4pairIxxEEmmEv(%"struct.std::_Rb_tree_iterator.28"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator.28"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.622
  %6 = load i32, i32* @y.623
  %7 = add i32 %5, 2143684241
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 2143684241
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1969976526, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %83
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1969976526, label %19
    i32 -1482498943, label %39
    i32 2099926112, label %74
    i32 1797434130, label %76
  ]

; <label>:18:                                     ; preds = %16
  br label %83

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1482498943, i32 1797434130
  store i32 %38, i32* %15
  br label %83

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_iterator.28"*, align 8
  store %"struct.std::_Rb_tree_iterator.28"* %0, %"struct.std::_Rb_tree_iterator.28"** %40, align 8
  %41 = load %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %40, align 8
  store %"struct.std::_Rb_tree_iterator.28"* %41, %"struct.std::_Rb_tree_iterator.28"** %2
  %42 = load volatile %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %2
  %43 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %42, i32 0, i32 0
  %44 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %43, align 8
  %45 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %44) #15
  %46 = load volatile %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %2
  %47 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %46, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %45, %"struct.std::_Rb_tree_node_base"** %47, align 8
  %48 = load i32, i32* @x.622
  %49 = load i32, i32* @y.623
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 2099926112, i32 1797434130
  store i32 %73, i32* %15
  br label %83

; <label>:74:                                     ; preds = %16
  %75 = load volatile %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %2
  ret %"struct.std::_Rb_tree_iterator.28"* %75

; <label>:76:                                     ; preds = %16
  %77 = alloca %"struct.std::_Rb_tree_iterator.28"*, align 8
  store %"struct.std::_Rb_tree_iterator.28"* %0, %"struct.std::_Rb_tree_iterator.28"** %77, align 8
  %78 = load %"struct.std::_Rb_tree_iterator.28"*, %"struct.std::_Rb_tree_iterator.28"** %77, align 8
  %79 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %78, i32 0, i32 0
  %80 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %79, align 8
  %81 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %80) #15
  %82 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.28", %"struct.std::_Rb_tree_iterator.28"* %78, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %81, %"struct.std::_Rb_tree_node_base"** %82, align 8
  store i32 -1482498943, i32* %15
  br label %83

; <label>:83:                                     ; preds = %76, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %3 = alloca %"struct.std::_Identity", align 1
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %5 = call dereferenceable(16) %"struct.std::pair"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %4)
  %6 = call dereferenceable(16) %"struct.std::pair"* @_ZNKSt9_IdentityISt4pairIxxEEclERKS1_(%"struct.std::_Identity"* %3, %"struct.std::pair"* dereferenceable(16) %5)
  ret %"struct.std::pair"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node.21"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIxxEEEOT_RNSt16remove_referenceIS6_E4typeE(%"struct.std::_Rb_tree_node.21"** dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Rb_tree_node.21"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.626
  %6 = load i32, i32* @y.627
  %7 = add i32 %5, -1987921566
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1987921566
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 750827515, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 750827515, label %19
    i32 -903840271, label %39
    i32 2124058373, label %56
    i32 -1760071122, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -903840271, i32 -1760071122
  store i32 %38, i32* %15
  br label %61

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_node.21"**, align 8
  store %"struct.std::_Rb_tree_node.21"** %0, %"struct.std::_Rb_tree_node.21"*** %40, align 8
  %41 = load %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %40, align 8
  store %"struct.std::_Rb_tree_node.21"** %41, %"struct.std::_Rb_tree_node.21"*** %2
  %42 = load i32, i32* @x.626
  %43 = load i32, i32* @y.627
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 2124058373, i32 -1760071122
  store i32 %55, i32* %15
  br label %61

; <label>:56:                                     ; preds = %16
  %57 = load volatile %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %2
  ret %"struct.std::_Rb_tree_node.21"** %57

; <label>:58:                                     ; preds = %16
  %59 = alloca %"struct.std::_Rb_tree_node.21"**, align 8
  store %"struct.std::_Rb_tree_node.21"** %0, %"struct.std::_Rb_tree_node.21"*** %59, align 8
  %60 = load %"struct.std::_Rb_tree_node.21"**, %"struct.std::_Rb_tree_node.21"*** %59, align 8
  store i32 -903840271, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::pair"* @_ZNSt8_Rb_treeISt4pairIxxES1_St9_IdentityIS1_ESt4lessIS1_ESaIS1_EE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::pair"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.628
  %6 = load i32, i32* @y.629
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1044979141, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %52
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1044979141, label %18
    i32 -701535430, label %26
    i32 -1462988407, label %45
    i32 -1105572831, label %47
  ]

; <label>:17:                                     ; preds = %15
  br label %52

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -701535430, i32 -1105572831
  store i32 %25, i32* %14
  br label %52

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %27, align 8
  %28 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %27, align 8
  %29 = bitcast %"struct.std::_Rb_tree_node_base"* %28 to %"struct.std::_Rb_tree_node.21"*
  %30 = call %"struct.std::pair"* @_ZNKSt13_Rb_tree_nodeISt4pairIxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node.21"* %29)
  store %"struct.std::pair"* %30, %"struct.std::pair"** %2
  %31 = load i32, i32* @x.628
  %32 = load i32, i32* @y.629
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -1462988407, i32 -1105572831
  store i32 %44, i32* %14
  br label %52

; <label>:45:                                     ; preds = %15
  %46 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %2
  ret %"struct.std::pair"* %46

; <label>:47:                                     ; preds = %15
  %48 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %48, align 8
  %49 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %48, align 8
  %50 = bitcast %"struct.std::_Rb_tree_node_base"* %49 to %"struct.std::_Rb_tree_node.21"*
  %51 = call %"struct.std::pair"* @_ZNKSt13_Rb_tree_nodeISt4pairIxxEE9_M_valptrEv(%"struct.std::_Rb_tree_node.21"* %50)
  store i32 -701535430, i32* %14
  br label %52

; <label>:52:                                     ; preds = %47, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) i8* @_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE(i8* dereferenceable(1)) #4 comdat {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s137250277.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  call void @__cxx_global_var_init.1()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noinline noreturn nounwind }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind }
attributes #13 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone }
attributes #15 = { nounwind readonly }
attributes #16 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
