; ModuleID = 'Project_CodeNet_C++1400/p02840/s580643020.cpp'
source_filename = "Project_CodeNet_C++1400/p02840/s580643020.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::multimap" = type { %"class.std::_Rb_tree" }
%"class.std::_Rb_tree" = type { %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl" = type { %"struct.std::less", %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::less" = type { i8 }
%"struct.std::_Rb_tree_node_base" = type { i32, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%"class.std::set" = type { %"class.std::_Rb_tree.0" }
%"class.std::_Rb_tree.0" = type { %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl" = type { %"struct.std::less", %"struct.std::_Rb_tree_node_base", i64 }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl" }
%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl" = type { i64*, i64*, i64* }
%"class.std::initializer_list" = type { i64*, i64 }
%"class.std::allocator.4" = type { i8 }
%"struct.std::_Rb_tree_iterator" = type { %"struct.std::_Rb_tree_node_base"* }
%"struct.std::pair" = type <{ %"struct.std::_Rb_tree_const_iterator", i8, [7 x i8] }>
%"struct.std::_Rb_tree_const_iterator" = type { %"struct.std::_Rb_tree_node_base"* }
%"class.std::vector.7" = type { %"struct.std::_Vector_base.8" }
%"struct.std::_Vector_base.8" = type { %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl" = type { %"class.std::multiset"*, %"class.std::multiset"*, %"class.std::multiset"* }
%"class.std::multiset" = type { %"class.std::_Rb_tree.12" }
%"class.std::_Rb_tree.12" = type { %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl" }
%"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl" = type { %"struct.std::less.16", %"struct.std::_Rb_tree_node_base", i64 }
%"struct.std::less.16" = type { i8 }
%"class.std::allocator.9" = type { i8 }
%"struct.std::_Rb_tree_const_iterator.19" = type { %"struct.std::_Rb_tree_node_base"* }
%"struct.std::pair.18" = type { i64, %"class.std::vector" }
%"class.__gnu_cxx::new_allocator.5" = type { i8 }
%"struct.std::forward_iterator_tag" = type { i8 }
%"struct.std::random_access_iterator_tag" = type { i8 }
%"struct.std::pair.23" = type <{ %"struct.std::_Rb_tree_iterator.24", i8, [7 x i8] }>
%"struct.std::_Rb_tree_iterator.24" = type { %"struct.std::_Rb_tree_node_base"* }
%"class.__gnu_cxx::new_allocator.10" = type { i8 }
%"struct.std::_Rb_tree_node.20" = type { %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf.21" }
%"struct.__gnu_cxx::__aligned_membuf.21" = type { [32 x i8] }
%"struct.std::_Rb_tree_node" = type { %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf" }
%"struct.__gnu_cxx::__aligned_membuf" = type { [8 x i8] }
%"struct.std::_Rb_tree_iterator.29" = type { %"struct.std::_Rb_tree_node_base"* }
%"struct.std::_Rb_tree_node.27" = type { %"struct.std::_Rb_tree_node_base", %"struct.__gnu_cxx::__aligned_membuf.28" }
%"struct.__gnu_cxx::__aligned_membuf.28" = type { [24 x i8] }
%"class.std::allocator.1" = type { i8 }
%"class.__gnu_cxx::new_allocator.2" = type { i8 }
%"class.std::allocator" = type { i8 }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"struct.std::pair.22" = type { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
%"struct.std::_Select1st" = type { i8 }
%"class.__gnu_cxx::__normal_iterator" = type { i64* }
%"struct.std::_Identity" = type { i8 }
%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node" = type { %"class.std::_Rb_tree.0"* }
%"class.std::allocator.13" = type { i8 }
%"class.__gnu_cxx::new_allocator.14" = type { i8 }
%"struct.std::_Identity.30" = type { i8 }
%"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node" = type { %"class.std::_Rb_tree.12"* }
%"struct.__gnu_cxx::__ops::_Iter_less_iter" = type { i8 }

$_ZSt4swapIxEvRT_S1_ = comdat any

$_ZNSt8multimapIxSt6vectorIxSaIxEESt4lessIxESaISt4pairIKxS2_EEEC2Ev = comdat any

$_ZNSt3setIxSt4lessIxESaIxEEC2Ev = comdat any

$_ZNSaIxEC2Ev = comdat any

$_ZNSt6vectorIxSaIxEEC2ESt16initializer_listIxERKS0_ = comdat any

$_ZNSaIxED2Ev = comdat any

$_ZNSt6vectorIxSaIxEEixEm = comdat any

$_ZNSt8multimapIxSt6vectorIxSaIxEESt4lessIxESaISt4pairIKxS2_EEE7emplaceIJxRS2_EEESt17_Rb_tree_iteratorIS7_EDpOT_ = comdat any

$_ZSt3absx = comdat any

$_ZNSt3setIxSt4lessIxESaIxEE6insertEOx = comdat any

$_ZNSt6vectorIxSaIxEED2Ev = comdat any

$_ZNSt8multimapIxSt6vectorIxSaIxEESt4lessIxESaISt4pairIKxS2_EEE5beginEv = comdat any

$_ZNKSt3setIxSt4lessIxESaIxEE4sizeEv = comdat any

$_ZNSaISt8multisetISt6vectorIxSaIxEESt4lessIS2_ESaIS2_EEEC2Ev = comdat any

$_ZNSt6vectorISt8multisetIS_IxSaIxEESt4lessIS2_ESaIS2_EESaIS6_EEC2EmRKS7_ = comdat any

$_ZNSaISt8multisetISt6vectorIxSaIxEESt4lessIS2_ESaIS2_EEED2Ev = comdat any

$_ZNKSt3setIxSt4lessIxESaIxEE5beginEv = comdat any

$_ZNKSt23_Rb_tree_const_iteratorIxEneERKS0_ = comdat any

$_ZNKSt3setIxSt4lessIxESaIxEE3endEv = comdat any

$_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt6vectorIxSaIxEEEEneERKS6_ = comdat any

$_ZNSt8multimapIxSt6vectorIxSaIxEESt4lessIxESaISt4pairIKxS2_EEE3endEv = comdat any

$_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt6vectorIxSaIxEEEEdeEv = comdat any

$_ZNKSt23_Rb_tree_const_iteratorIxEdeEv = comdat any

$_ZNSt6vectorISt8multisetIS_IxSaIxEESt4lessIS2_ESaIS2_EESaIS6_EEixEm = comdat any

$_ZNSt8multisetISt6vectorIxSaIxEESt4lessIS2_ESaIS2_EE6insertEOS2_ = comdat any

$_ZNSt17_Rb_tree_iteratorISt4pairIKxSt6vectorIxSaIxEEEEppEi = comdat any

$_ZNSt23_Rb_tree_const_iteratorIxEppEi = comdat any

$_ZNKSt8multisetISt6vectorIxSaIxEESt4lessIS2_ESaIS2_EE5beginEv = comdat any

$_ZNKSt23_Rb_tree_const_iteratorISt6vectorIxSaIxEEEneERKS3_ = comdat any

$_ZNKSt8multisetISt6vectorIxSaIxEESt4lessIS2_ESaIS2_EE3endEv = comdat any

$_ZNKSt23_Rb_tree_const_iteratorISt6vectorIxSaIxEEEdeEv = comdat any

$_ZNKSt6vectorIxSaIxEEixEm = comdat any

$_ZNSt23_Rb_tree_const_iteratorISt6vectorIxSaIxEEEppEi = comdat any

$_ZNSt6vectorISt8multisetIS_IxSaIxEESt4lessIS2_ESaIS2_EESaIS6_EED2Ev = comdat any

$_ZNSt3setIxSt4lessIxESaIxEED2Ev = comdat any

$_ZNSt8multimapIxSt6vectorIxSaIxEESt4lessIxESaISt4pairIKxS2_EEED2Ev = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEED2Ev = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_eraseEPSt13_Rb_tree_nodeIxE = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_drop_nodeEPSt13_Rb_tree_nodeIxE = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIxE = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_put_nodeEPSt13_Rb_tree_nodeIxE = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE7destroyIxEEvRS2_PT_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv = comdat any

$_ZNSt13_Rb_tree_nodeIxE9_M_valptrEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE7destroyIxEEvPT_ = comdat any

$_ZN9__gnu_cxx16__aligned_membufIxE6_M_ptrEv = comdat any

$_ZN9__gnu_cxx16__aligned_membufIxE7_M_addrEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE10deallocateEPS2_m = comdat any

$_ZNSaISt13_Rb_tree_nodeIxEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEED2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EED2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE8_M_beginEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE13_Rb_tree_implIS9_Lb1EED2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS5_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS5_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS5_E = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEEE7destroyIS6_EEvRS8_PT_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE21_M_get_Node_allocatorEv = comdat any

$_ZNSt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEE9_M_valptrEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEE7destroyIS7_EEvPT_ = comdat any

$_ZNSt4pairIKxSt6vectorIxSaIxEEED2Ev = comdat any

$_ZN9__gnu_cxx16__aligned_membufISt4pairIKxSt6vectorIxSaIxEEEE6_M_ptrEv = comdat any

$_ZN9__gnu_cxx16__aligned_membufISt4pairIKxSt6vectorIxSaIxEEEE7_M_addrEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEEE10deallocateERS8_PS7_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEE10deallocateEPS8_m = comdat any

$_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEED2Ev = comdat any

$_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EEC2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE13_Rb_tree_implIS9_Lb1EEC2Ev = comdat any

$_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEEC2Ev = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE13_Rb_tree_implIS9_Lb1EE13_M_initializeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEEC2Ev = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEEC2Ev = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EEC2Ev = comdat any

$_ZNSaISt13_Rb_tree_nodeIxEEC2Ev = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EE13_M_initializeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIxEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIxED2Ev = comdat any

$_ZNSt12_Vector_baseIxSaIxEEC2ERKS0_ = comdat any

$_ZNSt6vectorIxSaIxEE19_M_range_initializeIPKxEEvT_S5_St20forward_iterator_tag = comdat any

$_ZNKSt16initializer_listIxE5beginEv = comdat any

$_ZNKSt16initializer_listIxE3endEv = comdat any

$_ZNSt12_Vector_baseIxSaIxEED2Ev = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_ = comdat any

$_ZSt8distanceIPKxENSt15iterator_traitsIT_E15difference_typeES3_S3_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm = comdat any

$_ZSt22__uninitialized_copy_aIPKxPxxET0_T_S4_S3_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv = comdat any

$_ZSt10__distanceIPKxENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag = comdat any

$_ZSt19__iterator_categoryIPKxENSt15iterator_traitsIT_E17iterator_categoryERKS3_ = comdat any

$_ZNSt16allocator_traitsISaIxEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv = comdat any

$_ZSt18uninitialized_copyIPKxPxET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKxPxEET0_T_S6_S5_ = comdat any

$_ZSt4copyIPKxPxET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb0EPKxPxET1_T0_S4_S3_ = comdat any

$_ZSt12__miter_baseIPKxENSt11_Miter_baseIT_E13iterator_typeES3_ = comdat any

$_ZSt13__copy_move_aILb0EPKxPxET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIPKxENSt11_Niter_baseIT_E13iterator_typeES3_ = comdat any

$_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseIPKxLb0EE7_S_baseES1_ = comdat any

$_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_ = comdat any

$_ZNKSt16initializer_listIxE4sizeEv = comdat any

$_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm = comdat any

$_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E = comdat any

$_ZSt8_DestroyIPxEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE16_M_emplace_equalIJxRS4_EEESt17_Rb_tree_iteratorIS5_EDpOT_ = comdat any

$_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZSt7forwardIRSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE14_M_create_nodeIJxRS4_EEEPSt13_Rb_tree_nodeIS5_EDpOT_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE23_M_get_insert_equal_posERS1_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS5_E = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE11_M_get_nodeEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE17_M_construct_nodeIJxRS4_EEEvPSt13_Rb_tree_nodeIS5_EDpOT_ = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEEE8allocateERS8_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEEE9constructIS6_JxRS5_EEEvRS8_PT_DpOT0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEE9constructIS7_JxRS6_EEEvPT_DpOT0_ = comdat any

$_ZNSt4pairIKxSt6vectorIxSaIxEEEC2IxRS3_vEEOT_OT0_ = comdat any

$_ZNSt6vectorIxSaIxEEC2ERKS1_ = comdat any

$_ZNKSt6vectorIxSaIxEE4sizeEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIxEE17_S_select_on_copyERKS1_ = comdat any

$_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_ = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxxET0_T_SA_S9_RSaIT1_E = comdat any

$_ZNKSt6vectorIxSaIxEE5beginEv = comdat any

$_ZNKSt6vectorIxSaIxEE3endEv = comdat any

$_ZNSt16allocator_traitsISaIxEE37select_on_container_copy_constructionERKS0_ = comdat any

$_ZNSaIxEC2ERKS_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE17_M_create_storageEm = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxEET0_T_SC_SB_ = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET1_T0_SA_S9_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb1EE7_S_baseES7_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb0EE7_S_baseES7_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE6_M_endEv = comdat any

$_ZNKSt4lessIxEclERKxS2_ = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxSt6vectorIxSaIxEEEESC_vEEOT_OT0_ = comdat any

$_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEEOT_RNSt16remove_referenceISA_E4typeE = comdat any

$_ZNKSt10_Select1stISt4pairIKxSt6vectorIxSaIxEEEEclERKS5_ = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE8_S_valueEPKSt13_Rb_tree_nodeIS5_E = comdat any

$_ZNKSt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEE9_M_valptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxSt6vectorIxSaIxEEEE6_M_ptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxSt6vectorIxSaIxEEEE7_M_addrEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE6_S_keyEPKSt18_Rb_tree_node_base = comdat any

$_ZNSt17_Rb_tree_iteratorISt4pairIKxSt6vectorIxSaIxEEEEC2EPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE8_S_valueEPKSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE16_M_insert_uniqueIxEESt4pairISt17_Rb_tree_iteratorIxEbEOT_ = comdat any

$_ZNSt4pairISt23_Rb_tree_const_iteratorIxEbEC2IRSt17_Rb_tree_iteratorIxERbvEEOT_OT0_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE24_M_get_insert_unique_posERKx = comdat any

$_ZNKSt9_IdentityIxEclERx = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeC2ERS5_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE10_M_insert_IxNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIxEPSt18_Rb_tree_node_baseSB_OT_RT0_ = comdat any

$_ZNSt4pairISt17_Rb_tree_iteratorIxEbEC2IS1_bvEEOT_OT0_ = comdat any

$_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_M_endEv = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt13_Rb_tree_nodeIxE = comdat any

$_ZNKSt17_Rb_tree_iteratorIxEeqERKS0_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5beginEv = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIxES7_vEEOT_OT0_ = comdat any

$_ZNSt17_Rb_tree_iteratorIxEmmEv = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_ = comdat any

$_ZNKSt9_IdentityIxEclERKx = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt13_Rb_tree_nodeIxE = comdat any

$_ZNKSt13_Rb_tree_nodeIxE9_M_valptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufIxE6_M_ptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufIxE7_M_addrEv = comdat any

$_ZSt7forwardIRPSt13_Rb_tree_nodeIxEEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt18_Rb_tree_node_base = comdat any

$_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeclIxEEPSt13_Rb_tree_nodeIxEOT_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE14_M_create_nodeIJxEEEPSt13_Rb_tree_nodeIxEDpOT_ = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_get_nodeEv = comdat any

$_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE17_M_construct_nodeIJxEEEvPSt13_Rb_tree_nodeIxEDpOT_ = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE9constructIxJxEEEvRS2_PT_DpOT0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE9constructIxJxEEEvPT_DpOT0_ = comdat any

$_ZSt7forwardISt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZSt7forwardIRSt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNSt23_Rb_tree_const_iteratorIxEC2ERKSt17_Rb_tree_iteratorIxE = comdat any

$_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE5beginEv = comdat any

$_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE4sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt8multisetISt6vectorIxSaIxEESt4lessIS4_ESaIS4_EEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt8multisetISt6vectorIxSaIxEESt4lessIS4_ESaIS4_EEED2Ev = comdat any

$_ZNSt12_Vector_baseISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EESaIS7_EEC2EmRKS8_ = comdat any

$_ZNSt6vectorISt8multisetIS_IxSaIxEESt4lessIS2_ESaIS2_EESaIS6_EE21_M_default_initializeEm = comdat any

$_ZNSt12_Vector_baseISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EESaIS7_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EESaIS7_EE12_Vector_implC2ERKS8_ = comdat any

$_ZNSt12_Vector_baseISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EESaIS7_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EESaIS7_EE12_Vector_implD2Ev = comdat any

$_ZNSaISt8multisetISt6vectorIxSaIxEESt4lessIS2_ESaIS2_EEEC2ERKS7_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt8multisetISt6vectorIxSaIxEESt4lessIS4_ESaIS4_EEEC2ERKS9_ = comdat any

$_ZNSt12_Vector_baseISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EESaIS7_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EEEE8allocateERS8_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt8multisetISt6vectorIxSaIxEESt4lessIS4_ESaIS4_EEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt8multisetISt6vectorIxSaIxEESt4lessIS4_ESaIS4_EEE8max_sizeEv = comdat any

$_ZSt27__uninitialized_default_n_aIPSt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EEmS7_ET_S9_T0_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EESaIS7_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt25__uninitialized_default_nIPSt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EEmET_S9_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8multisetISt6vectorIxSaIxEESt4lessIS5_ESaIS5_EEmEET_SB_T0_ = comdat any

$_ZSt10_ConstructISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EEJEEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EEEPT_RS8_ = comdat any

$_ZSt8_DestroyIPSt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EEEvT_S9_ = comdat any

$_ZNSt8multisetISt6vectorIxSaIxEESt4lessIS2_ESaIS2_EEC2Ev = comdat any

$_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EEC2Ev = comdat any

$_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE13_Rb_tree_implIS6_Lb1EEC2Ev = comdat any

$_ZNSaISt13_Rb_tree_nodeISt6vectorIxSaIxEEEEC2Ev = comdat any

$_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE13_Rb_tree_implIS6_Lb1EE13_M_initializeEv = comdat any

$_ZNSaISt13_Rb_tree_nodeISt6vectorIxSaIxEEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt6vectorIxSaIxEEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt6vectorIxSaIxEEEED2Ev = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt8multisetISt6vectorIxSaIxEESt4lessIS5_ESaIS5_EEEEvT_SB_ = comdat any

$_ZSt8_DestroyISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EEEvPT_ = comdat any

$_ZNSt8multisetISt6vectorIxSaIxEESt4lessIS2_ESaIS2_EED2Ev = comdat any

$_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EED2Ev = comdat any

$_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E = comdat any

$_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_beginEv = comdat any

$_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev = comdat any

$_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E = comdat any

$_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E = comdat any

$_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt6vectorIxSaIxEEEEE7destroyIS3_EEvRS5_PT_ = comdat any

$_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE21_M_get_Node_allocatorEv = comdat any

$_ZNSt13_Rb_tree_nodeISt6vectorIxSaIxEEE9_M_valptrEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt6vectorIxSaIxEEEE7destroyIS4_EEvPT_ = comdat any

$_ZN9__gnu_cxx16__aligned_membufISt6vectorIxSaIxEEE6_M_ptrEv = comdat any

$_ZN9__gnu_cxx16__aligned_membufISt6vectorIxSaIxEEE7_M_addrEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt6vectorIxSaIxEEEEE10deallocateERS5_PS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt6vectorIxSaIxEEEE10deallocateEPS5_m = comdat any

$_ZNSt12_Vector_baseISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EESaIS7_EE13_M_deallocateEPS7_m = comdat any

$_ZNSt16allocator_traitsISaISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EEEE10deallocateERS8_PS7_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt8multisetISt6vectorIxSaIxEESt4lessIS4_ESaIS4_EEE10deallocateEPS8_m = comdat any

$_ZSt8_DestroyIPSt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EES7_EvT_S9_RSaIT0_E = comdat any

$_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5beginEv = comdat any

$_ZNSt23_Rb_tree_const_iteratorIxEC2EPKSt18_Rb_tree_node_base = comdat any

$_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE3endEv = comdat any

$_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE3endEv = comdat any

$_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE15_M_insert_equalIS2_EESt17_Rb_tree_iteratorIS2_EOT_ = comdat any

$_ZSt4moveIRSt6vectorIxSaIxEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt23_Rb_tree_const_iteratorISt6vectorIxSaIxEEEC2ERKSt17_Rb_tree_iteratorIS2_E = comdat any

$_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE23_M_get_insert_equal_posERKS2_ = comdat any

$_ZNKSt9_IdentityISt6vectorIxSaIxEEEclERS2_ = comdat any

$_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_Alloc_nodeC2ERS8_ = comdat any

$_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSE_OT_RT0_ = comdat any

$_ZSt7forwardISt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE6_M_endEv = comdat any

$_ZNKSt4lessISt6vectorIxSaIxEEEclERKS2_S5_ = comdat any

$_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E = comdat any

$_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeISt6vectorIxSaIxEEESA_vEEOT_OT0_ = comdat any

$_ZStltIxSaIxEEbRKSt6vectorIT_T0_ES6_ = comdat any

$_ZSt23lexicographical_compareIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEES7_EbT_S8_T0_S9_ = comdat any

$_ZSt29__lexicographical_compare_auxIPKxS1_EbT_S2_T0_S3_ = comdat any

$_ZNSt25__lexicographical_compareILb0EE4__lcIPKxS3_EEbT_S4_T0_S5_ = comdat any

$_ZSt30__lexicographical_compare_implIPKxS1_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S5_T0_S6_T1_ = comdat any

$_ZN9__gnu_cxx5__ops16__iter_less_iterEv = comdat any

$_ZNSt8__lc_raiISt26random_access_iterator_tagS0_E10__newlast1IPKxS4_EET_S5_S5_T0_S6_ = comdat any

$_ZNSt8__lc_raiISt26random_access_iterator_tagS0_E6__cnd2IPKxEEbT_S5_ = comdat any

$_ZNK9__gnu_cxx5__ops15_Iter_less_iterclIPKxS4_EEbT_T0_ = comdat any

$_ZNKSt9_IdentityISt6vectorIxSaIxEEEclERKS2_ = comdat any

$_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E = comdat any

$_ZNKSt13_Rb_tree_nodeISt6vectorIxSaIxEEE9_M_valptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufISt6vectorIxSaIxEEE6_M_ptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufISt6vectorIxSaIxEEE7_M_addrEv = comdat any

$_ZSt7forwardIRPSt13_Rb_tree_nodeISt6vectorIxSaIxEEEEOT_RNSt16remove_referenceIS7_E4typeE = comdat any

$_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base = comdat any

$_ZNKSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_Alloc_nodeclIS2_EEPSt13_Rb_tree_nodeIS2_EOT_ = comdat any

$_ZNSt17_Rb_tree_iteratorISt6vectorIxSaIxEEEC2EPSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base = comdat any

$_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE14_M_create_nodeIJS2_EEEPSt13_Rb_tree_nodeIS2_EDpOT_ = comdat any

$_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_M_get_nodeEv = comdat any

$_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE17_M_construct_nodeIJS2_EEEvPSt13_Rb_tree_nodeIS2_EDpOT_ = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt6vectorIxSaIxEEEEE8allocateERS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt6vectorIxSaIxEEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt6vectorIxSaIxEEEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt6vectorIxSaIxEEEEE9constructIS3_JS3_EEEvRS5_PT_DpOT0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt6vectorIxSaIxEEEE9constructIS4_JS4_EEEvPT_DpOT0_ = comdat any

$_ZNSt6vectorIxSaIxEEC2EOS1_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEEC2EOS1_ = comdat any

$_ZSt4moveIRSaIxEEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2EOS0_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_impl12_M_swap_dataERS2_ = comdat any

$_ZSt4swapIPxEvRT_S2_ = comdat any

$_ZSt4moveIRPxEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZNKSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE5beginEv = comdat any

$_ZNSt23_Rb_tree_const_iteratorISt6vectorIxSaIxEEEC2EPKSt18_Rb_tree_node_base = comdat any

$_ZNKSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE3endEv = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@x = global i64 0, align 8
@d = global i64 0, align 8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s580643020.cpp, i8* null }]
@x.1 = common global i32 0
@y = common global i32 0
@x.2 = common global i32 0
@y.3 = common global i32 0
@x.4 = common global i32 0
@y.5 = common global i32 0
@x.6 = common global i32 0
@y.7 = common global i32 0
@x.8 = common global i32 0
@y.9 = common global i32 0
@x.10 = common global i32 0
@y.11 = common global i32 0
@x.12 = common global i32 0
@y.13 = common global i32 0
@x.14 = common global i32 0
@y.15 = common global i32 0
@x.16 = common global i32 0
@y.17 = common global i32 0
@x.18 = common global i32 0
@y.19 = common global i32 0
@x.20 = common global i32 0
@y.21 = common global i32 0
@x.22 = common global i32 0
@y.23 = common global i32 0
@x.24 = common global i32 0
@y.25 = common global i32 0
@x.26 = common global i32 0
@y.27 = common global i32 0
@x.28 = common global i32 0
@y.29 = common global i32 0
@x.30 = common global i32 0
@y.31 = common global i32 0
@x.32 = common global i32 0
@y.33 = common global i32 0
@x.34 = common global i32 0
@y.35 = common global i32 0
@x.36 = common global i32 0
@y.37 = common global i32 0
@x.38 = common global i32 0
@y.39 = common global i32 0
@x.40 = common global i32 0
@y.41 = common global i32 0
@x.42 = common global i32 0
@y.43 = common global i32 0
@x.44 = common global i32 0
@y.45 = common global i32 0
@x.46 = common global i32 0
@y.47 = common global i32 0
@x.48 = common global i32 0
@y.49 = common global i32 0
@x.50 = common global i32 0
@y.51 = common global i32 0
@x.52 = common global i32 0
@y.53 = common global i32 0
@x.54 = common global i32 0
@y.55 = common global i32 0
@x.56 = common global i32 0
@y.57 = common global i32 0
@x.58 = common global i32 0
@y.59 = common global i32 0
@x.60 = common global i32 0
@y.61 = common global i32 0
@x.62 = common global i32 0
@y.63 = common global i32 0
@x.64 = common global i32 0
@y.65 = common global i32 0
@x.66 = common global i32 0
@y.67 = common global i32 0
@x.68 = common global i32 0
@y.69 = common global i32 0
@x.70 = common global i32 0
@y.71 = common global i32 0
@x.72 = common global i32 0
@y.73 = common global i32 0
@x.74 = common global i32 0
@y.75 = common global i32 0
@x.76 = common global i32 0
@y.77 = common global i32 0
@x.78 = common global i32 0
@y.79 = common global i32 0
@x.80 = common global i32 0
@y.81 = common global i32 0
@x.82 = common global i32 0
@y.83 = common global i32 0
@x.84 = common global i32 0
@y.85 = common global i32 0
@x.86 = common global i32 0
@y.87 = common global i32 0
@x.88 = common global i32 0
@y.89 = common global i32 0
@x.90 = common global i32 0
@y.91 = common global i32 0
@x.92 = common global i32 0
@y.93 = common global i32 0
@x.94 = common global i32 0
@y.95 = common global i32 0
@x.96 = common global i32 0
@y.97 = common global i32 0
@x.98 = common global i32 0
@y.99 = common global i32 0
@x.100 = common global i32 0
@y.101 = common global i32 0
@x.102 = common global i32 0
@y.103 = common global i32 0
@x.104 = common global i32 0
@y.105 = common global i32 0
@x.106 = common global i32 0
@y.107 = common global i32 0
@x.108 = common global i32 0
@y.109 = common global i32 0
@x.110 = common global i32 0
@y.111 = common global i32 0
@x.112 = common global i32 0
@y.113 = common global i32 0
@x.114 = common global i32 0
@y.115 = common global i32 0
@x.116 = common global i32 0
@y.117 = common global i32 0
@x.118 = common global i32 0
@y.119 = common global i32 0
@x.120 = common global i32 0
@y.121 = common global i32 0
@x.122 = common global i32 0
@y.123 = common global i32 0
@x.124 = common global i32 0
@y.125 = common global i32 0
@x.126 = common global i32 0
@y.127 = common global i32 0
@x.128 = common global i32 0
@y.129 = common global i32 0
@x.130 = common global i32 0
@y.131 = common global i32 0
@x.132 = common global i32 0
@y.133 = common global i32 0
@x.134 = common global i32 0
@y.135 = common global i32 0
@x.136 = common global i32 0
@y.137 = common global i32 0
@x.138 = common global i32 0
@y.139 = common global i32 0
@x.140 = common global i32 0
@y.141 = common global i32 0
@x.142 = common global i32 0
@y.143 = common global i32 0
@x.144 = common global i32 0
@y.145 = common global i32 0
@x.146 = common global i32 0
@y.147 = common global i32 0
@x.148 = common global i32 0
@y.149 = common global i32 0
@x.150 = common global i32 0
@y.151 = common global i32 0
@x.152 = common global i32 0
@y.153 = common global i32 0
@x.154 = common global i32 0
@y.155 = common global i32 0
@x.156 = common global i32 0
@y.157 = common global i32 0
@x.158 = common global i32 0
@y.159 = common global i32 0
@x.160 = common global i32 0
@y.161 = common global i32 0
@x.162 = common global i32 0
@y.163 = common global i32 0
@x.164 = common global i32 0
@y.165 = common global i32 0
@x.166 = common global i32 0
@y.167 = common global i32 0
@x.168 = common global i32 0
@y.169 = common global i32 0
@x.170 = common global i32 0
@y.171 = common global i32 0
@x.172 = common global i32 0
@y.173 = common global i32 0
@x.174 = common global i32 0
@y.175 = common global i32 0
@x.176 = common global i32 0
@y.177 = common global i32 0
@x.178 = common global i32 0
@y.179 = common global i32 0
@x.180 = common global i32 0
@y.181 = common global i32 0
@x.182 = common global i32 0
@y.183 = common global i32 0
@x.184 = common global i32 0
@y.185 = common global i32 0
@x.186 = common global i32 0
@y.187 = common global i32 0
@x.188 = common global i32 0
@y.189 = common global i32 0
@x.190 = common global i32 0
@y.191 = common global i32 0
@x.192 = common global i32 0
@y.193 = common global i32 0
@x.194 = common global i32 0
@y.195 = common global i32 0
@x.196 = common global i32 0
@y.197 = common global i32 0
@x.198 = common global i32 0
@y.199 = common global i32 0
@x.200 = common global i32 0
@y.201 = common global i32 0
@x.202 = common global i32 0
@y.203 = common global i32 0
@x.204 = common global i32 0
@y.205 = common global i32 0
@x.206 = common global i32 0
@y.207 = common global i32 0
@x.208 = common global i32 0
@y.209 = common global i32 0
@x.210 = common global i32 0
@y.211 = common global i32 0
@x.212 = common global i32 0
@y.213 = common global i32 0
@x.214 = common global i32 0
@y.215 = common global i32 0
@x.216 = common global i32 0
@y.217 = common global i32 0
@x.218 = common global i32 0
@y.219 = common global i32 0
@x.220 = common global i32 0
@y.221 = common global i32 0
@x.222 = common global i32 0
@y.223 = common global i32 0
@x.224 = common global i32 0
@y.225 = common global i32 0
@x.226 = common global i32 0
@y.227 = common global i32 0
@x.228 = common global i32 0
@y.229 = common global i32 0
@x.230 = common global i32 0
@y.231 = common global i32 0
@x.232 = common global i32 0
@y.233 = common global i32 0
@x.234 = common global i32 0
@y.235 = common global i32 0
@x.236 = common global i32 0
@y.237 = common global i32 0
@x.238 = common global i32 0
@y.239 = common global i32 0
@x.240 = common global i32 0
@y.241 = common global i32 0
@x.242 = common global i32 0
@y.243 = common global i32 0
@x.244 = common global i32 0
@y.245 = common global i32 0
@x.246 = common global i32 0
@y.247 = common global i32 0
@x.248 = common global i32 0
@y.249 = common global i32 0
@x.250 = common global i32 0
@y.251 = common global i32 0
@x.252 = common global i32 0
@y.253 = common global i32 0
@x.254 = common global i32 0
@y.255 = common global i32 0
@x.256 = common global i32 0
@y.257 = common global i32 0
@x.258 = common global i32 0
@y.259 = common global i32 0
@x.260 = common global i32 0
@y.261 = common global i32 0
@x.262 = common global i32 0
@y.263 = common global i32 0
@x.264 = common global i32 0
@y.265 = common global i32 0
@x.266 = common global i32 0
@y.267 = common global i32 0
@x.268 = common global i32 0
@y.269 = common global i32 0
@x.270 = common global i32 0
@y.271 = common global i32 0
@x.272 = common global i32 0
@y.273 = common global i32 0
@x.274 = common global i32 0
@y.275 = common global i32 0
@x.276 = common global i32 0
@y.277 = common global i32 0
@x.278 = common global i32 0
@y.279 = common global i32 0
@x.280 = common global i32 0
@y.281 = common global i32 0
@x.282 = common global i32 0
@y.283 = common global i32 0
@x.284 = common global i32 0
@y.285 = common global i32 0
@x.286 = common global i32 0
@y.287 = common global i32 0
@x.288 = common global i32 0
@y.289 = common global i32 0
@x.290 = common global i32 0
@y.291 = common global i32 0
@x.292 = common global i32 0
@y.293 = common global i32 0
@x.294 = common global i32 0
@y.295 = common global i32 0
@x.296 = common global i32 0
@y.297 = common global i32 0
@x.298 = common global i32 0
@y.299 = common global i32 0
@x.300 = common global i32 0
@y.301 = common global i32 0
@x.302 = common global i32 0
@y.303 = common global i32 0
@x.304 = common global i32 0
@y.305 = common global i32 0
@x.306 = common global i32 0
@y.307 = common global i32 0
@x.308 = common global i32 0
@y.309 = common global i32 0
@x.310 = common global i32 0
@y.311 = common global i32 0
@x.312 = common global i32 0
@y.313 = common global i32 0
@x.314 = common global i32 0
@y.315 = common global i32 0
@x.316 = common global i32 0
@y.317 = common global i32 0
@x.318 = common global i32 0
@y.319 = common global i32 0
@x.320 = common global i32 0
@y.321 = common global i32 0
@x.322 = common global i32 0
@y.323 = common global i32 0
@x.324 = common global i32 0
@y.325 = common global i32 0
@x.326 = common global i32 0
@y.327 = common global i32 0
@x.328 = common global i32 0
@y.329 = common global i32 0
@x.330 = common global i32 0
@y.331 = common global i32 0
@x.332 = common global i32 0
@y.333 = common global i32 0
@x.334 = common global i32 0
@y.335 = common global i32 0
@x.336 = common global i32 0
@y.337 = common global i32 0
@x.338 = common global i32 0
@y.339 = common global i32 0
@x.340 = common global i32 0
@y.341 = common global i32 0
@x.342 = common global i32 0
@y.343 = common global i32 0
@x.344 = common global i32 0
@y.345 = common global i32 0
@x.346 = common global i32 0
@y.347 = common global i32 0
@x.348 = common global i32 0
@y.349 = common global i32 0
@x.350 = common global i32 0
@y.351 = common global i32 0
@x.352 = common global i32 0
@y.353 = common global i32 0
@x.354 = common global i32 0
@y.355 = common global i32 0
@x.356 = common global i32 0
@y.357 = common global i32 0
@x.358 = common global i32 0
@y.359 = common global i32 0
@x.360 = common global i32 0
@y.361 = common global i32 0
@x.362 = common global i32 0
@y.363 = common global i32 0
@x.364 = common global i32 0
@y.365 = common global i32 0
@x.366 = common global i32 0
@y.367 = common global i32 0
@x.368 = common global i32 0
@y.369 = common global i32 0
@x.370 = common global i32 0
@y.371 = common global i32 0
@x.372 = common global i32 0
@y.373 = common global i32 0
@x.374 = common global i32 0
@y.375 = common global i32 0
@x.376 = common global i32 0
@y.377 = common global i32 0
@x.378 = common global i32 0
@y.379 = common global i32 0
@x.380 = common global i32 0
@y.381 = common global i32 0
@x.382 = common global i32 0
@y.383 = common global i32 0
@x.384 = common global i32 0
@y.385 = common global i32 0
@x.386 = common global i32 0
@y.387 = common global i32 0
@x.388 = common global i32 0
@y.389 = common global i32 0
@x.390 = common global i32 0
@y.391 = common global i32 0
@x.392 = common global i32 0
@y.393 = common global i32 0
@x.394 = common global i32 0
@y.395 = common global i32 0
@x.396 = common global i32 0
@y.397 = common global i32 0
@x.398 = common global i32 0
@y.399 = common global i32 0
@x.400 = common global i32 0
@y.401 = common global i32 0
@x.402 = common global i32 0
@y.403 = common global i32 0
@x.404 = common global i32 0
@y.405 = common global i32 0
@x.406 = common global i32 0
@y.407 = common global i32 0
@x.408 = common global i32 0
@y.409 = common global i32 0
@x.410 = common global i32 0
@y.411 = common global i32 0
@x.412 = common global i32 0
@y.413 = common global i32 0
@x.414 = common global i32 0
@y.415 = common global i32 0
@x.416 = common global i32 0
@y.417 = common global i32 0
@x.418 = common global i32 0
@y.419 = common global i32 0
@x.420 = common global i32 0
@y.421 = common global i32 0
@x.422 = common global i32 0
@y.423 = common global i32 0
@x.424 = common global i32 0
@y.425 = common global i32 0
@x.426 = common global i32 0
@y.427 = common global i32 0
@x.428 = common global i32 0
@y.429 = common global i32 0
@x.430 = common global i32 0
@y.431 = common global i32 0
@x.432 = common global i32 0
@y.433 = common global i32 0
@x.434 = common global i32 0
@y.435 = common global i32 0
@x.436 = common global i32 0
@y.437 = common global i32 0
@x.438 = common global i32 0
@y.439 = common global i32 0
@x.440 = common global i32 0
@y.441 = common global i32 0
@x.442 = common global i32 0
@y.443 = common global i32 0
@x.444 = common global i32 0
@y.445 = common global i32 0
@x.446 = common global i32 0
@y.447 = common global i32 0
@x.448 = common global i32 0
@y.449 = common global i32 0
@x.450 = common global i32 0
@y.451 = common global i32 0
@x.452 = common global i32 0
@y.453 = common global i32 0
@x.454 = common global i32 0
@y.455 = common global i32 0
@x.456 = common global i32 0
@y.457 = common global i32 0
@x.458 = common global i32 0
@y.459 = common global i32 0
@x.460 = common global i32 0
@y.461 = common global i32 0
@x.462 = common global i32 0
@y.463 = common global i32 0
@x.464 = common global i32 0
@y.465 = common global i32 0
@x.466 = common global i32 0
@y.467 = common global i32 0
@x.468 = common global i32 0
@y.469 = common global i32 0
@x.470 = common global i32 0
@y.471 = common global i32 0
@x.472 = common global i32 0
@y.473 = common global i32 0
@x.474 = common global i32 0
@y.475 = common global i32 0
@x.476 = common global i32 0
@y.477 = common global i32 0
@x.478 = common global i32 0
@y.479 = common global i32 0
@x.480 = common global i32 0
@y.481 = common global i32 0
@x.482 = common global i32 0
@y.483 = common global i32 0
@x.484 = common global i32 0
@y.485 = common global i32 0
@x.486 = common global i32 0
@y.487 = common global i32 0
@x.488 = common global i32 0
@y.489 = common global i32 0
@x.490 = common global i32 0
@y.491 = common global i32 0
@x.492 = common global i32 0
@y.493 = common global i32 0
@x.494 = common global i32 0
@y.495 = common global i32 0
@x.496 = common global i32 0
@y.497 = common global i32 0
@x.498 = common global i32 0
@y.499 = common global i32 0
@x.500 = common global i32 0
@y.501 = common global i32 0
@x.502 = common global i32 0
@y.503 = common global i32 0
@x.504 = common global i32 0
@y.505 = common global i32 0
@x.506 = common global i32 0
@y.507 = common global i32 0
@x.508 = common global i32 0
@y.509 = common global i32 0
@x.510 = common global i32 0
@y.511 = common global i32 0
@x.512 = common global i32 0
@y.513 = common global i32 0
@x.514 = common global i32 0
@y.515 = common global i32 0
@x.516 = common global i32 0
@y.517 = common global i32 0
@x.518 = common global i32 0
@y.519 = common global i32 0
@x.520 = common global i32 0
@y.521 = common global i32 0
@x.522 = common global i32 0
@y.523 = common global i32 0
@x.524 = common global i32 0
@y.525 = common global i32 0
@x.526 = common global i32 0
@y.527 = common global i32 0
@x.528 = common global i32 0
@y.529 = common global i32 0
@x.530 = common global i32 0
@y.531 = common global i32 0
@x.532 = common global i32 0
@y.533 = common global i32 0
@x.534 = common global i32 0
@y.535 = common global i32 0
@x.536 = common global i32 0
@y.537 = common global i32 0
@x.538 = common global i32 0
@y.539 = common global i32 0
@x.540 = common global i32 0
@y.541 = common global i32 0
@x.542 = common global i32 0
@y.543 = common global i32 0
@x.544 = common global i32 0
@y.545 = common global i32 0
@x.546 = common global i32 0
@y.547 = common global i32 0
@x.548 = common global i32 0
@y.549 = common global i32 0
@x.550 = common global i32 0
@y.551 = common global i32 0
@x.552 = common global i32 0
@y.553 = common global i32 0
@x.554 = common global i32 0
@y.555 = common global i32 0
@x.556 = common global i32 0
@y.557 = common global i32 0
@x.558 = common global i32 0
@y.559 = common global i32 0
@x.560 = common global i32 0
@y.561 = common global i32 0
@x.562 = common global i32 0
@y.563 = common global i32 0
@x.564 = common global i32 0
@y.565 = common global i32 0
@x.566 = common global i32 0
@y.567 = common global i32 0
@x.568 = common global i32 0
@y.569 = common global i32 0
@x.570 = common global i32 0
@y.571 = common global i32 0
@x.572 = common global i32 0
@y.573 = common global i32 0
@x.574 = common global i32 0
@y.575 = common global i32 0
@x.576 = common global i32 0
@y.577 = common global i32 0
@x.578 = common global i32 0
@y.579 = common global i32 0
@x.580 = common global i32 0
@y.581 = common global i32 0
@x.582 = common global i32 0
@y.583 = common global i32 0
@x.584 = common global i32 0
@y.585 = common global i32 0
@x.586 = common global i32 0
@y.587 = common global i32 0
@x.588 = common global i32 0
@y.589 = common global i32 0
@x.590 = common global i32 0
@y.591 = common global i32 0
@x.592 = common global i32 0
@y.593 = common global i32 0
@x.594 = common global i32 0
@y.595 = common global i32 0
@x.596 = common global i32 0
@y.597 = common global i32 0
@x.598 = common global i32 0
@y.599 = common global i32 0
@x.600 = common global i32 0
@y.601 = common global i32 0
@x.602 = common global i32 0
@y.603 = common global i32 0
@x.604 = common global i32 0
@y.605 = common global i32 0
@x.606 = common global i32 0
@y.607 = common global i32 0
@x.608 = common global i32 0
@y.609 = common global i32 0
@x.610 = common global i32 0
@y.611 = common global i32 0
@x.612 = common global i32 0
@y.613 = common global i32 0
@x.614 = common global i32 0
@y.615 = common global i32 0
@x.616 = common global i32 0
@y.617 = common global i32 0
@x.618 = common global i32 0
@y.619 = common global i32 0
@x.620 = common global i32 0
@y.621 = common global i32 0
@x.622 = common global i32 0
@y.623 = common global i32 0
@x.624 = common global i32 0
@y.625 = common global i32 0
@x.626 = common global i32 0
@y.627 = common global i32 0
@x.628 = common global i32 0
@y.629 = common global i32 0
@x.630 = common global i32 0
@y.631 = common global i32 0
@x.632 = common global i32 0
@y.633 = common global i32 0
@x.634 = common global i32 0
@y.635 = common global i32 0
@x.636 = common global i32 0
@y.637 = common global i32 0
@x.638 = common global i32 0
@y.639 = common global i32 0
@x.640 = common global i32 0
@y.641 = common global i32 0
@x.642 = common global i32 0
@y.643 = common global i32 0
@x.644 = common global i32 0
@y.645 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define i64 @_Z3gcdxx(i64, i64) #4 {
  %3 = alloca i1
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  store i64 %0, i64* %7, align 8
  store i64 %1, i64* %8, align 8
  %10 = load i64, i64* %8, align 8
  store i64 %10, i64* %5
  %11 = load i64, i64* %7, align 8
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -1695776952, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %139
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1695776952, label %16
    i32 -44129983, label %21
    i32 -378693474, label %22
    i32 -815286776, label %38
    i32 257781889, label %58
    i32 -828127616, label %61
    i32 -1229228640, label %63
    i32 888241403, label %64
    i32 -1717894651, label %68
    i32 -388691217, label %74
    i32 2116441794, label %89
    i32 801588803, label %106
    i32 1629921347, label %107
    i32 205820283, label %109
    i32 -1366228339, label %137
  ]

; <label>:15:                                     ; preds = %13
  br label %139

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp slt i64 %17, %18
  %20 = select i1 %19, i32 -44129983, i32 -378693474
  store i32 %20, i32* %12
  br label %139

; <label>:21:                                     ; preds = %13
  call void @_ZSt4swapIxEvRT_S1_(i64* dereferenceable(8) %7, i64* dereferenceable(8) %8) #3
  store i32 -378693474, i32* %12
  br label %139

; <label>:22:                                     ; preds = %13
  %23 = load i32, i32* @x.2
  %24 = load i32, i32* @y.3
  %25 = add i32 %23, -1123593293
  %26 = sub i32 %25, 1
  %27 = sub i32 %26, -1123593293
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  %37 = select i1 %35, i32 -815286776, i32 205820283
  store i32 %37, i32* %12
  br label %139

; <label>:38:                                     ; preds = %13
  %39 = load i64, i64* %7, align 8
  %40 = load i64, i64* %8, align 8
  %41 = srem i64 %39, %40
  store i64 %41, i64* %9, align 8
  %42 = load i64, i64* %9, align 8
  %43 = icmp eq i64 %42, 0
  store i1 %43, i1* %3
  %44 = load i32, i32* @x.2
  %45 = load i32, i32* @y.3
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 257781889, i32 205820283
  store i32 %57, i32* %12
  br label %139

; <label>:58:                                     ; preds = %13
  %59 = load volatile i1, i1* %3
  %60 = select i1 %59, i32 -828127616, i32 -1229228640
  store i32 %60, i32* %12
  br label %139

; <label>:61:                                     ; preds = %13
  %62 = load i64, i64* %8, align 8
  store i64 %62, i64* %6, align 8
  store i32 1629921347, i32* %12
  br label %139

; <label>:63:                                     ; preds = %13
  store i32 888241403, i32* %12
  br label %139

; <label>:64:                                     ; preds = %13
  %65 = load i64, i64* %9, align 8
  %66 = icmp ne i64 %65, 0
  %67 = select i1 %66, i32 -1717894651, i32 -388691217
  store i32 %67, i32* %12
  br label %139

; <label>:68:                                     ; preds = %13
  %69 = load i64, i64* %7, align 8
  %70 = load i64, i64* %8, align 8
  %71 = srem i64 %69, %70
  store i64 %71, i64* %9, align 8
  %72 = load i64, i64* %8, align 8
  store i64 %72, i64* %7, align 8
  %73 = load i64, i64* %9, align 8
  store i64 %73, i64* %8, align 8
  store i32 888241403, i32* %12
  br label %139

; <label>:74:                                     ; preds = %13
  %75 = load i32, i32* @x.2
  %76 = load i32, i32* @y.3
  %77 = sub i32 0, 1
  %78 = add i32 %75, %77
  %79 = sub i32 %75, 1
  %80 = mul i32 %75, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %76, 10
  %84 = and i1 %82, %83
  %85 = xor i1 %82, %83
  %86 = or i1 %84, %85
  %87 = or i1 %82, %83
  %88 = select i1 %86, i32 2116441794, i32 -1366228339
  store i32 %88, i32* %12
  br label %139

; <label>:89:                                     ; preds = %13
  %90 = load i64, i64* %7, align 8
  store i64 %90, i64* %6, align 8
  %91 = load i32, i32* @x.2
  %92 = load i32, i32* @y.3
  %93 = add i32 %91, 1026160112
  %94 = sub i32 %93, 1
  %95 = sub i32 %94, 1026160112
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = and i1 %99, %100
  %102 = xor i1 %99, %100
  %103 = or i1 %101, %102
  %104 = or i1 %99, %100
  %105 = select i1 %103, i32 801588803, i32 -1366228339
  store i32 %105, i32* %12
  br label %139

; <label>:106:                                    ; preds = %13
  store i32 1629921347, i32* %12
  br label %139

; <label>:107:                                    ; preds = %13
  %108 = load i64, i64* %6, align 8
  ret i64 %108

; <label>:109:                                    ; preds = %13
  %110 = load i64, i64* %7, align 8
  %111 = load i64, i64* %8, align 8
  %112 = sub i64 0, 9030709897377713730
  %113 = sub i64 %112, %110
  %114 = add i64 %113, 9030709897377713730
  %115 = sub i64 0, %110
  %116 = add i64 %114, -2644893042464117517
  %117 = add i64 %116, %111
  %118 = sub i64 %117, -2644893042464117517
  %119 = add i64 %114, %111
  %120 = sub i64 0, %110
  %121 = add i64 0, %120
  %122 = sub i64 0, %110
  %123 = add i64 %121, 2075158583239854454
  %124 = add i64 %123, %111
  %125 = sub i64 %124, 2075158583239854454
  %126 = add i64 %121, %111
  %127 = sub i64 0, 469986134623251393
  %128 = sub i64 %127, %110
  %129 = add i64 %128, 469986134623251393
  %130 = sub i64 0, %110
  %131 = sub i64 0, %111
  %132 = sub i64 %129, %131
  %133 = add i64 %129, %111
  %134 = srem i64 %110, %111
  store i64 %134, i64* %9, align 8
  %135 = load i64, i64* %9, align 8
  %136 = icmp eq i64 %135, 0
  store i32 -815286776, i32* %12
  br label %139

; <label>:137:                                    ; preds = %13
  %138 = load i64, i64* %7, align 8
  store i64 %138, i64* %6, align 8
  store i32 2116441794, i32* %12
  br label %139

; <label>:139:                                    ; preds = %137, %109, %106, %89, %74, %68, %64, %63, %61, %58, %38, %22, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIxEvRT_S1_(i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.4
  %6 = load i32, i32* @y.5
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1937082027, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %93
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1937082027, label %18
    i32 1706055250, label %38
    i32 1536162852, label %78
    i32 1219480154, label %79
  ]

; <label>:17:                                     ; preds = %15
  br label %93

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1706055250, i32 1219480154
  store i32 %37, i32* %14
  br label %93

; <label>:38:                                     ; preds = %15
  %39 = alloca i64*, align 8
  %40 = alloca i64*, align 8
  %41 = alloca i64, align 8
  store i64* %0, i64** %39, align 8
  store i64* %1, i64** %40, align 8
  %42 = load i64*, i64** %39, align 8
  %43 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %42) #3
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %41, align 8
  %45 = load i64*, i64** %40, align 8
  %46 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %45) #3
  %47 = load i64, i64* %46, align 8
  %48 = load i64*, i64** %39, align 8
  store i64 %47, i64* %48, align 8
  %49 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %41) #3
  %50 = load i64, i64* %49, align 8
  %51 = load i64*, i64** %40, align 8
  store i64 %50, i64* %51, align 8
  %52 = load i32, i32* @x.4
  %53 = load i32, i32* @y.5
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 1536162852, i32 1219480154
  store i32 %77, i32* %14
  br label %93

; <label>:78:                                     ; preds = %15
  ret void

; <label>:79:                                     ; preds = %15
  %80 = alloca i64*, align 8
  %81 = alloca i64*, align 8
  %82 = alloca i64, align 8
  store i64* %0, i64** %80, align 8
  store i64* %1, i64** %81, align 8
  %83 = load i64*, i64** %80, align 8
  %84 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %83) #3
  %85 = load i64, i64* %84, align 8
  store i64 %85, i64* %82, align 8
  %86 = load i64*, i64** %81, align 8
  %87 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %86) #3
  %88 = load i64, i64* %87, align 8
  %89 = load i64*, i64** %80, align 8
  store i64 %88, i64* %89, align 8
  %90 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %82) #3
  %91 = load i64, i64* %90, align 8
  %92 = load i64*, i64** %81, align 8
  store i64 %91, i64* %92, align 8
  store i32 1706055250, i32* %14
  br label %93

; <label>:93:                                     ; preds = %79, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define i64 @_Z2waxxx(i64, i64, i64) #4 {
  %4 = alloca i64
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.6
  %8 = load i32, i32* @y.7
  %9 = sub i32 %7, -135664893
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -135664893
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -176744974, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %169
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -176744974, label %21
    i32 -2085227509, label %29
    i32 866026818, label %76
    i32 1844141946, label %78
  ]

; <label>:20:                                     ; preds = %18
  br label %169

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -2085227509, i32 1844141946
  store i32 %28, i32* %17
  br label %169

; <label>:29:                                     ; preds = %18
  %30 = alloca i64, align 8
  %31 = alloca i64, align 8
  %32 = alloca i64, align 8
  store i64 %0, i64* %30, align 8
  store i64 %1, i64* %31, align 8
  store i64 %2, i64* %32, align 8
  %33 = load i64, i64* %31, align 8
  %34 = load i64, i64* %30, align 8
  %35 = mul nsw i64 %33, %34
  %36 = load i64, i64* %32, align 8
  %37 = load i64, i64* %30, align 8
  %38 = load i64, i64* %30, align 8
  %39 = sub i64 %38, 5183933095593152633
  %40 = sub i64 %39, 1
  %41 = add i64 %40, 5183933095593152633
  %42 = sub nsw i64 %38, 1
  %43 = mul nsw i64 %37, %41
  %44 = sdiv i64 %43, 2
  %45 = mul nsw i64 %36, %44
  %46 = sub i64 0, %45
  %47 = sub i64 %35, %46
  %48 = add nsw i64 %35, %45
  store i64 %47, i64* %4
  %49 = load i32, i32* @x.6
  %50 = load i32, i32* @y.7
  %51 = sub i32 %49, -721222380
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -721222380
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 866026818, i32 1844141946
  store i32 %75, i32* %17
  br label %169

; <label>:76:                                     ; preds = %18
  %77 = load volatile i64, i64* %4
  ret i64 %77

; <label>:78:                                     ; preds = %18
  %79 = alloca i64, align 8
  %80 = alloca i64, align 8
  %81 = alloca i64, align 8
  store i64 %0, i64* %79, align 8
  store i64 %1, i64* %80, align 8
  store i64 %2, i64* %81, align 8
  %82 = load i64, i64* %80, align 8
  %83 = load i64, i64* %79, align 8
  %84 = shl i64 %82, %83
  %85 = shl i64 %82, %83
  %86 = shl i64 %82, %83
  %87 = sub i64 0, %83
  %88 = add i64 %82, %87
  %89 = sub i64 %82, %83
  %90 = mul i64 %88, %83
  %91 = add i64 %82, 2906143058782642175
  %92 = sub i64 %91, %83
  %93 = sub i64 %92, 2906143058782642175
  %94 = sub i64 %82, %83
  %95 = mul i64 %93, %83
  %96 = shl i64 %82, %83
  %97 = sub i64 %82, 2595105756360405585
  %98 = sub i64 %97, %83
  %99 = add i64 %98, 2595105756360405585
  %100 = sub i64 %82, %83
  %101 = mul i64 %99, %83
  %102 = add i64 0, 4345923113524657691
  %103 = sub i64 %102, %82
  %104 = sub i64 %103, 4345923113524657691
  %105 = sub i64 0, %82
  %106 = sub i64 0, %83
  %107 = sub i64 %104, %106
  %108 = add i64 %104, %83
  %109 = shl i64 %82, %83
  %110 = mul nsw i64 %82, %83
  %111 = load i64, i64* %81, align 8
  %112 = load i64, i64* %79, align 8
  %113 = load i64, i64* %79, align 8
  %114 = sub i64 0, %113
  %115 = add i64 0, %114
  %116 = sub i64 0, %113
  %117 = sub i64 0, 1
  %118 = sub i64 %115, %117
  %119 = add i64 %115, 1
  %120 = add i64 %113, 4473783850621879827
  %121 = sub i64 %120, 1
  %122 = sub i64 %121, 4473783850621879827
  %123 = sub nsw i64 %113, 1
  %124 = add i64 %112, -2634820065140834421
  %125 = sub i64 %124, %122
  %126 = sub i64 %125, -2634820065140834421
  %127 = sub i64 %112, %122
  %128 = mul i64 %126, %122
  %129 = mul nsw i64 %112, %122
  %130 = add i64 0, -1220353108749913962
  %131 = sub i64 %130, %129
  %132 = sub i64 %131, -1220353108749913962
  %133 = sub i64 0, %129
  %134 = sub i64 0, %132
  %135 = sub i64 0, 2
  %136 = add i64 %134, %135
  %137 = sub i64 0, %136
  %138 = add i64 %132, 2
  %139 = sdiv i64 %129, 2
  %140 = shl i64 %111, %139
  %141 = sub i64 0, 1965711582701334007
  %142 = sub i64 %141, %111
  %143 = add i64 %142, 1965711582701334007
  %144 = sub i64 0, %111
  %145 = sub i64 0, %143
  %146 = sub i64 0, %139
  %147 = add i64 %145, %146
  %148 = sub i64 0, %147
  %149 = add i64 %143, %139
  %150 = mul nsw i64 %111, %139
  %151 = add i64 %110, -82782398194922526
  %152 = sub i64 %151, %150
  %153 = sub i64 %152, -82782398194922526
  %154 = sub i64 %110, %150
  %155 = mul i64 %153, %150
  %156 = add i64 0, -6160162434485237877
  %157 = sub i64 %156, %110
  %158 = sub i64 %157, -6160162434485237877
  %159 = sub i64 0, %110
  %160 = add i64 %158, 2931692260570850564
  %161 = add i64 %160, %150
  %162 = sub i64 %161, 2931692260570850564
  %163 = add i64 %158, %150
  %164 = shl i64 %110, %150
  %165 = add i64 %110, -2243800382812369521
  %166 = add i64 %165, %150
  %167 = sub i64 %166, -2243800382812369521
  %168 = add nsw i64 %110, %150
  store i32 -2085227509, i32* %17
  br label %169

; <label>:169:                                    ; preds = %78, %29, %21, %20
  br label %18
}

; Function Attrs: noinline norecurse uwtable
define i32 @main(i32, i8**) #5 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"class.std::multimap", align 8
  %9 = alloca %"class.std::set", align 8
  %10 = alloca i32, align 4
  %11 = alloca %"class.std::vector", align 8
  %12 = alloca %"class.std::initializer_list", align 8
  %13 = alloca [2 x i64], align 8
  %14 = alloca i8*
  %15 = alloca i32
  %16 = alloca %"class.std::allocator.4", align 1
  %17 = alloca i64, align 8
  %18 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %19 = alloca i64, align 8
  %20 = alloca %"struct.std::pair", align 8
  %21 = alloca i64, align 8
  %22 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %23 = alloca %"class.std::vector.7", align 8
  %24 = alloca %"class.std::allocator.9", align 1
  %25 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %26 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %27 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %28 = alloca %"class.std::vector", align 8
  %29 = alloca %"class.std::initializer_list", align 8
  %30 = alloca [2 x i64], align 8
  %31 = alloca %"class.std::allocator.4", align 1
  %32 = alloca %"struct.std::_Rb_tree_const_iterator.19", align 8
  %33 = alloca %"class.std::vector", align 8
  %34 = alloca %"class.std::initializer_list", align 8
  %35 = alloca [2 x i64], align 8
  %36 = alloca %"class.std::allocator.4", align 1
  %37 = alloca %"struct.std::_Rb_tree_const_iterator.19", align 8
  %38 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %39 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %40 = alloca i32, align 4
  %41 = alloca i64, align 8
  %42 = alloca i64, align 8
  %43 = alloca %"struct.std::_Rb_tree_const_iterator.19", align 8
  %44 = alloca %"struct.std::_Rb_tree_const_iterator.19", align 8
  %45 = alloca %"struct.std::_Rb_tree_const_iterator.19", align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %46 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) %6)
  %47 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %46, i64* dereferenceable(8) @x)
  %48 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %47, i64* dereferenceable(8) @d)
  %49 = load i64, i64* @d, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %110

; <label>:51:                                     ; preds = %2
  %52 = load i64, i64* @x, align 8
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %110

; <label>:54:                                     ; preds = %51
  %55 = load i32, i32* @x.8
  %56 = load i32, i32* @y.9
  %57 = sub i32 %55, -1527339014
  %58 = sub i32 %57, 1
  %59 = add i32 %58, -1527339014
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 true, true
  %68 = and i1 %65, true
  %69 = and i1 %63, %67
  %70 = and i1 %66, true
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 true, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  br i1 %79, label %81, label %1012

; <label>:81:                                     ; preds = %54, %1012
  %82 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* @_ZSt4cout, i32 1)
  %83 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272) %82, i8 signext 10)
  store i32 0, i32* %3, align 4
  %84 = load i32, i32* @x.8
  %85 = load i32, i32* @y.9
  %86 = sub i32 0, 1
  %87 = add i32 %84, %86
  %88 = sub i32 %84, 1
  %89 = mul i32 %84, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %85, 10
  %93 = xor i1 %91, true
  %94 = xor i1 %92, true
  %95 = xor i1 false, true
  %96 = and i1 %93, false
  %97 = and i1 %91, %95
  %98 = and i1 %94, false
  %99 = and i1 %92, %95
  %100 = or i1 %96, %97
  %101 = or i1 %98, %99
  %102 = xor i1 %100, %101
  %103 = or i1 %93, %94
  %104 = xor i1 %103, true
  %105 = or i1 false, %95
  %106 = and i1 %104, %105
  %107 = or i1 %102, %106
  %108 = or i1 %91, %92
  br i1 %107, label %109, label %1012

; <label>:109:                                    ; preds = %81
  br label %1005

; <label>:110:                                    ; preds = %51, %2
  %111 = load i64, i64* @d, align 8
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %174

; <label>:113:                                    ; preds = %110
  %114 = load i32, i32* @x.8
  %115 = load i32, i32* @y.9
  %116 = add i32 %114, 245984042
  %117 = sub i32 %116, 1
  %118 = sub i32 %117, 245984042
  %119 = sub i32 %114, 1
  %120 = mul i32 %114, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %115, 10
  %124 = xor i1 %122, true
  %125 = xor i1 %123, true
  %126 = xor i1 true, true
  %127 = and i1 %124, true
  %128 = and i1 %122, %126
  %129 = and i1 %125, true
  %130 = and i1 %123, %126
  %131 = or i1 %127, %128
  %132 = or i1 %129, %130
  %133 = xor i1 %131, %132
  %134 = or i1 %124, %125
  %135 = xor i1 %134, true
  %136 = or i1 true, %126
  %137 = and i1 %135, %136
  %138 = or i1 %133, %137
  %139 = or i1 %122, %123
  br i1 %138, label %140, label %1015

; <label>:140:                                    ; preds = %113, %1015
  %141 = load i64, i64* %6, align 8
  %142 = sub i64 0, 1
  %143 = sub i64 %141, %142
  %144 = add nsw i64 %141, 1
  %145 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* @_ZSt4cout, i64 %143)
  %146 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272) %145, i8 signext 10)
  store i32 0, i32* %3, align 4
  %147 = load i32, i32* @x.8
  %148 = load i32, i32* @y.9
  %149 = sub i32 %147, 90637348
  %150 = sub i32 %149, 1
  %151 = add i32 %150, 90637348
  %152 = sub i32 %147, 1
  %153 = mul i32 %147, %151
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %148, 10
  %157 = xor i1 %155, true
  %158 = xor i1 %156, true
  %159 = xor i1 false, true
  %160 = and i1 %157, false
  %161 = and i1 %155, %159
  %162 = and i1 %158, false
  %163 = and i1 %156, %159
  %164 = or i1 %160, %161
  %165 = or i1 %162, %163
  %166 = xor i1 %164, %165
  %167 = or i1 %157, %158
  %168 = xor i1 %167, true
  %169 = or i1 false, %159
  %170 = and i1 %168, %169
  %171 = or i1 %166, %170
  %172 = or i1 %155, %156
  br i1 %171, label %173, label %1015

; <label>:173:                                    ; preds = %140
  br label %1005

; <label>:174:                                    ; preds = %110
  store i64 0, i64* %7, align 8
  call void @_ZNSt8multimapIxSt6vectorIxSaIxEESt4lessIxESaISt4pairIKxS2_EEEC2Ev(%"class.std::multimap"* %8) #3
  call void @_ZNSt3setIxSt4lessIxESaIxEEC2Ev(%"class.std::set"* %9) #3
  store i32 0, i32* %10, align 4
  br label %175

; <label>:175:                                    ; preds = %423, %174
  %176 = load i32, i32* @x.8
  %177 = load i32, i32* @y.9
  %178 = add i32 %176, 2055347386
  %179 = sub i32 %178, 1
  %180 = sub i32 %179, 2055347386
  %181 = sub i32 %176, 1
  %182 = mul i32 %176, %180
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %177, 10
  %186 = xor i1 %184, true
  %187 = xor i1 %185, true
  %188 = xor i1 false, true
  %189 = and i1 %186, false
  %190 = and i1 %184, %188
  %191 = and i1 %187, false
  %192 = and i1 %185, %188
  %193 = or i1 %189, %190
  %194 = or i1 %191, %192
  %195 = xor i1 %193, %194
  %196 = or i1 %186, %187
  %197 = xor i1 %196, true
  %198 = or i1 false, %188
  %199 = and i1 %197, %198
  %200 = or i1 %195, %199
  %201 = or i1 %184, %185
  br i1 %200, label %202, label %1040

; <label>:202:                                    ; preds = %175, %1040
  %203 = load i32, i32* %10, align 4
  %204 = sext i32 %203 to i64
  %205 = load i64, i64* %6, align 8
  %206 = icmp sle i64 %204, %205
  %207 = load i32, i32* @x.8
  %208 = load i32, i32* @y.9
  %209 = sub i32 %207, -1340896581
  %210 = sub i32 %209, 1
  %211 = add i32 %210, -1340896581
  %212 = sub i32 %207, 1
  %213 = mul i32 %207, %211
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %208, 10
  %217 = xor i1 %215, true
  %218 = xor i1 %216, true
  %219 = xor i1 false, true
  %220 = and i1 %217, false
  %221 = and i1 %215, %219
  %222 = and i1 %218, false
  %223 = and i1 %216, %219
  %224 = or i1 %220, %221
  %225 = or i1 %222, %223
  %226 = xor i1 %224, %225
  %227 = or i1 %217, %218
  %228 = xor i1 %227, true
  %229 = or i1 false, %219
  %230 = and i1 %228, %229
  %231 = or i1 %226, %230
  %232 = or i1 %215, %216
  br i1 %231, label %233, label %1040

; <label>:233:                                    ; preds = %202
  br i1 %206, label %234, label %433

; <label>:234:                                    ; preds = %233
  %235 = getelementptr inbounds [2 x i64], [2 x i64]* %13, i64 0, i64 0
  %236 = load i32, i32* %10, align 4
  %237 = sext i32 %236 to i64
  %238 = load i64, i64* @x, align 8
  %239 = load i64, i64* @d, align 8
  %240 = invoke i64 @_Z2waxxx(i64 %237, i64 %238, i64 %239)
          to label %241 unwind label %320

; <label>:241:                                    ; preds = %234
  store i64 %240, i64* %235, align 8
  %242 = getelementptr inbounds i64, i64* %235, i64 1
  %243 = load i64, i64* %6, align 8
  %244 = load i64, i64* @x, align 8
  %245 = load i64, i64* @d, align 8
  %246 = invoke i64 @_Z2waxxx(i64 %243, i64 %244, i64 %245)
          to label %247 unwind label %320

; <label>:247:                                    ; preds = %241
  %248 = load i32, i32* @x.8
  %249 = load i32, i32* @y.9
  %250 = sub i32 %248, 588594774
  %251 = sub i32 %250, 1
  %252 = add i32 %251, 588594774
  %253 = sub i32 %248, 1
  %254 = mul i32 %248, %252
  %255 = urem i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %249, 10
  %258 = xor i1 %256, true
  %259 = xor i1 %257, true
  %260 = xor i1 true, true
  %261 = and i1 %258, true
  %262 = and i1 %256, %260
  %263 = and i1 %259, true
  %264 = and i1 %257, %260
  %265 = or i1 %261, %262
  %266 = or i1 %263, %264
  %267 = xor i1 %265, %266
  %268 = or i1 %258, %259
  %269 = xor i1 %268, true
  %270 = or i1 true, %260
  %271 = and i1 %269, %270
  %272 = or i1 %267, %271
  %273 = or i1 %256, %257
  br i1 %272, label %274, label %1045

; <label>:274:                                    ; preds = %247, %1045
  %275 = load i64, i64* %6, align 8
  %276 = load i32, i32* %10, align 4
  %277 = sext i32 %276 to i64
  %278 = sub i64 0, %277
  %279 = add i64 %275, %278
  %280 = sub nsw i64 %275, %277
  %281 = load i64, i64* @x, align 8
  %282 = load i64, i64* @d, align 8
  %283 = load i32, i32* @x.8
  %284 = load i32, i32* @y.9
  %285 = sub i32 0, 1
  %286 = add i32 %283, %285
  %287 = sub i32 %283, 1
  %288 = mul i32 %283, %286
  %289 = urem i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %284, 10
  %292 = and i1 %290, %291
  %293 = xor i1 %290, %291
  %294 = or i1 %292, %293
  %295 = or i1 %290, %291
  br i1 %294, label %296, label %1045

; <label>:296:                                    ; preds = %274
  %297 = invoke i64 @_Z2waxxx(i64 %279, i64 %281, i64 %282)
          to label %298 unwind label %320

; <label>:298:                                    ; preds = %296
  %299 = sub i64 %246, 5972967660850569956
  %300 = sub i64 %299, %297
  %301 = add i64 %300, 5972967660850569956
  %302 = sub nsw i64 %246, %297
  store i64 %301, i64* %242, align 8
  %303 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %12, i32 0, i32 0
  %304 = getelementptr inbounds [2 x i64], [2 x i64]* %13, i64 0, i64 0
  store i64* %304, i64** %303, align 8
  %305 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %12, i32 0, i32 1
  store i64 2, i64* %305, align 8
  call void @_ZNSaIxEC2Ev(%"class.std::allocator.4"* %16) #3
  %306 = bitcast %"class.std::initializer_list"* %12 to { i64*, i64 }*
  %307 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %306, i32 0, i32 0
  %308 = load i64*, i64** %307, align 8
  %309 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %306, i32 0, i32 1
  %310 = load i64, i64* %309, align 8
  invoke void @_ZNSt6vectorIxSaIxEEC2ESt16initializer_listIxERKS0_(%"class.std::vector"* %11, i64* %308, i64 %310, %"class.std::allocator.4"* dereferenceable(1) %16)
          to label %311 unwind label %324

; <label>:311:                                    ; preds = %298
  call void @_ZNSaIxED2Ev(%"class.std::allocator.4"* %16) #3
  %312 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %11, i64 0) #3
  %313 = load i64, i64* %312, align 8
  %314 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %11, i64 1) #3
  %315 = load i64, i64* %314, align 8
  %316 = icmp sgt i64 %313, %315
  br i1 %316, label %317, label %328

; <label>:317:                                    ; preds = %311
  %318 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %11, i64 0) #3
  %319 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %11, i64 1) #3
  call void @_ZSt4swapIxEvRT_S1_(i64* dereferenceable(8) %318, i64* dereferenceable(8) %319) #3
  br label %328

; <label>:320:                                    ; preds = %296, %241, %234
  %321 = landingpad { i8*, i32 }
          cleanup
  %322 = extractvalue { i8*, i32 } %321, 0
  store i8* %322, i8** %14, align 8
  %323 = extractvalue { i8*, i32 } %321, 1
  store i32 %323, i32* %15, align 4
  br label %962

; <label>:324:                                    ; preds = %298
  %325 = landingpad { i8*, i32 }
          cleanup
  %326 = extractvalue { i8*, i32 } %325, 0
  store i8* %326, i8** %14, align 8
  %327 = extractvalue { i8*, i32 } %325, 1
  store i32 %327, i32* %15, align 4
  call void @_ZNSaIxED2Ev(%"class.std::allocator.4"* %16) #3
  br label %962

; <label>:328:                                    ; preds = %317, %311
  %329 = load i32, i32* @x.8
  %330 = load i32, i32* @y.9
  %331 = sub i32 0, 1
  %332 = add i32 %329, %331
  %333 = sub i32 %329, 1
  %334 = mul i32 %329, %332
  %335 = urem i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %330, 10
  %338 = and i1 %336, %337
  %339 = xor i1 %336, %337
  %340 = or i1 %338, %339
  %341 = or i1 %336, %337
  br i1 %340, label %342, label %1070

; <label>:342:                                    ; preds = %328, %1070
  %343 = load i32, i32* %10, align 4
  %344 = sext i32 %343 to i64
  %345 = load i64, i64* @x, align 8
  %346 = mul nsw i64 %344, %345
  %347 = load i64, i64* @d, align 8
  %348 = load i32, i32* @x.8
  %349 = load i32, i32* @y.9
  %350 = sub i32 0, 1
  %351 = add i32 %348, %350
  %352 = sub i32 %348, 1
  %353 = mul i32 %348, %351
  %354 = urem i32 %353, 2
  %355 = icmp eq i32 %354, 0
  %356 = icmp slt i32 %349, 10
  %357 = and i1 %355, %356
  %358 = xor i1 %355, %356
  %359 = or i1 %357, %358
  %360 = or i1 %355, %356
  br i1 %359, label %361, label %1070

; <label>:361:                                    ; preds = %342
  %362 = invoke i64 @_ZSt3absx(i64 %347)
          to label %363 unwind label %429

; <label>:363:                                    ; preds = %361
  %364 = srem i64 %346, %362
  store i64 %364, i64* %17, align 8
  %365 = invoke %"struct.std::_Rb_tree_node_base"* @_ZNSt8multimapIxSt6vectorIxSaIxEESt4lessIxESaISt4pairIKxS2_EEE7emplaceIJxRS2_EEESt17_Rb_tree_iteratorIS7_EDpOT_(%"class.std::multimap"* %8, i64* dereferenceable(8) %17, %"class.std::vector"* dereferenceable(24) %11)
          to label %366 unwind label %429

; <label>:366:                                    ; preds = %363
  %367 = load i32, i32* @x.8
  %368 = load i32, i32* @y.9
  %369 = sub i32 0, 1
  %370 = add i32 %367, %369
  %371 = sub i32 %367, 1
  %372 = mul i32 %367, %370
  %373 = urem i32 %372, 2
  %374 = icmp eq i32 %373, 0
  %375 = icmp slt i32 %368, 10
  %376 = and i1 %374, %375
  %377 = xor i1 %374, %375
  %378 = or i1 %376, %377
  %379 = or i1 %374, %375
  br i1 %378, label %380, label %1112

; <label>:380:                                    ; preds = %366, %1112
  %381 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %18, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %365, %"struct.std::_Rb_tree_node_base"** %381, align 8
  %382 = load i32, i32* %10, align 4
  %383 = sext i32 %382 to i64
  %384 = load i64, i64* @x, align 8
  %385 = mul nsw i64 %383, %384
  %386 = load i64, i64* @d, align 8
  %387 = load i32, i32* @x.8
  %388 = load i32, i32* @y.9
  %389 = sub i32 0, 1
  %390 = add i32 %387, %389
  %391 = sub i32 %387, 1
  %392 = mul i32 %387, %390
  %393 = urem i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = icmp slt i32 %388, 10
  %396 = xor i1 %394, true
  %397 = xor i1 %395, true
  %398 = xor i1 false, true
  %399 = and i1 %396, false
  %400 = and i1 %394, %398
  %401 = and i1 %397, false
  %402 = and i1 %395, %398
  %403 = or i1 %399, %400
  %404 = or i1 %401, %402
  %405 = xor i1 %403, %404
  %406 = or i1 %396, %397
  %407 = xor i1 %406, true
  %408 = or i1 false, %398
  %409 = and i1 %407, %408
  %410 = or i1 %405, %409
  %411 = or i1 %394, %395
  br i1 %410, label %412, label %1112

; <label>:412:                                    ; preds = %380
  %413 = invoke i64 @_ZSt3absx(i64 %386)
          to label %414 unwind label %429

; <label>:414:                                    ; preds = %412
  %415 = srem i64 %385, %413
  store i64 %415, i64* %19, align 8
  %416 = invoke { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt3setIxSt4lessIxESaIxEE6insertEOx(%"class.std::set"* %9, i64* dereferenceable(8) %19)
          to label %417 unwind label %429

; <label>:417:                                    ; preds = %414
  %418 = bitcast %"struct.std::pair"* %20 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %419 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %418, i32 0, i32 0
  %420 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %416, 0
  store %"struct.std::_Rb_tree_node_base"* %420, %"struct.std::_Rb_tree_node_base"** %419, align 8
  %421 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %418, i32 0, i32 1
  %422 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %416, 1
  store i8 %422, i8* %421, align 8
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector"* %11) #3
  br label %423

; <label>:423:                                    ; preds = %417
  %424 = load i32, i32* %10, align 4
  %425 = sub i32 %424, -1778316894
  %426 = add i32 %425, 1
  %427 = add i32 %426, -1778316894
  %428 = add nsw i32 %424, 1
  store i32 %427, i32* %10, align 4
  br label %175

; <label>:429:                                    ; preds = %414, %412, %363, %361
  %430 = landingpad { i8*, i32 }
          cleanup
  %431 = extractvalue { i8*, i32 } %430, 0
  store i8* %431, i8** %14, align 8
  %432 = extractvalue { i8*, i32 } %430, 1
  store i32 %432, i32* %15, align 4
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector"* %11) #3
  br label %962

; <label>:433:                                    ; preds = %233
  store i64 0, i64* %21, align 8
  %434 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8multimapIxSt6vectorIxSaIxEESt4lessIxESaISt4pairIKxS2_EEE5beginEv(%"class.std::multimap"* %8) #3
  %435 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %22, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %434, %"struct.std::_Rb_tree_node_base"** %435, align 8
  %436 = call i64 @_ZNKSt3setIxSt4lessIxESaIxEE4sizeEv(%"class.std::set"* %9) #3
  call void @_ZNSaISt8multisetISt6vectorIxSaIxEESt4lessIS2_ESaIS2_EEEC2Ev(%"class.std::allocator.9"* %24) #3
  invoke void @_ZNSt6vectorISt8multisetIS_IxSaIxEESt4lessIS2_ESaIS2_EESaIS6_EEC2EmRKS7_(%"class.std::vector.7"* %23, i64 %436, %"class.std::allocator.9"* dereferenceable(1) %24)
          to label %437 unwind label %543

; <label>:437:                                    ; preds = %433
  call void @_ZNSaISt8multisetISt6vectorIxSaIxEESt4lessIS2_ESaIS2_EEED2Ev(%"class.std::allocator.9"* %24) #3
  %438 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt3setIxSt4lessIxESaIxEE5beginEv(%"class.std::set"* %9) #3
  %439 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %25, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %438, %"struct.std::_Rb_tree_node_base"** %439, align 8
  br label %440

; <label>:440:                                    ; preds = %672, %437
  %441 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt3setIxSt4lessIxESaIxEE3endEv(%"class.std::set"* %9) #3
  %442 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %26, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %441, %"struct.std::_Rb_tree_node_base"** %442, align 8
  %443 = call zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorIxEneERKS0_(%"struct.std::_Rb_tree_const_iterator"* %25, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8) %26) #3
  br i1 %443, label %444, label %673

; <label>:444:                                    ; preds = %440
  br label %445

; <label>:445:                                    ; preds = %539, %444
  %446 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8multimapIxSt6vectorIxSaIxEESt4lessIxESaISt4pairIKxS2_EEE3endEv(%"class.std::multimap"* %8) #3
  %447 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %27, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %446, %"struct.std::_Rb_tree_node_base"** %447, align 8
  %448 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt6vectorIxSaIxEEEEneERKS6_(%"struct.std::_Rb_tree_iterator"* %22, %"struct.std::_Rb_tree_iterator"* dereferenceable(8) %27) #3
  br i1 %448, label %449, label %456

; <label>:449:                                    ; preds = %445
  %450 = call dereferenceable(32) %"struct.std::pair.18"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt6vectorIxSaIxEEEEdeEv(%"struct.std::_Rb_tree_iterator"* %22) #3
  %451 = getelementptr inbounds %"struct.std::pair.18", %"struct.std::pair.18"* %450, i32 0, i32 0
  %452 = load i64, i64* %451, align 8
  %453 = call dereferenceable(8) i64* @_ZNKSt23_Rb_tree_const_iteratorIxEdeEv(%"struct.std::_Rb_tree_const_iterator"* %25) #3
  %454 = load i64, i64* %453, align 8
  %455 = icmp eq i64 %452, %454
  br label %456

; <label>:456:                                    ; preds = %449, %445
  %457 = phi i1 [ false, %445 ], [ %455, %449 ]
  br i1 %457, label %458, label %624

; <label>:458:                                    ; preds = %456
  %459 = load i64, i64* %21, align 8
  %460 = call dereferenceable(48) %"class.std::multiset"* @_ZNSt6vectorISt8multisetIS_IxSaIxEESt4lessIS2_ESaIS2_EESaIS6_EEixEm(%"class.std::vector.7"* %23, i64 %459) #3
  %461 = getelementptr inbounds [2 x i64], [2 x i64]* %30, i64 0, i64 0
  %462 = call dereferenceable(32) %"struct.std::pair.18"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt6vectorIxSaIxEEEEdeEv(%"struct.std::_Rb_tree_iterator"* %22) #3
  %463 = getelementptr inbounds %"struct.std::pair.18", %"struct.std::pair.18"* %462, i32 0, i32 1
  %464 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %463, i64 0) #3
  %465 = load i64, i64* %464, align 8
  store i64 %465, i64* %461, align 8
  %466 = getelementptr inbounds i64, i64* %461, i64 1
  store i64 -1, i64* %466, align 8
  %467 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %29, i32 0, i32 0
  %468 = getelementptr inbounds [2 x i64], [2 x i64]* %30, i64 0, i64 0
  store i64* %468, i64** %467, align 8
  %469 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %29, i32 0, i32 1
  store i64 2, i64* %469, align 8
  call void @_ZNSaIxEC2Ev(%"class.std::allocator.4"* %31) #3
  %470 = bitcast %"class.std::initializer_list"* %29 to { i64*, i64 }*
  %471 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %470, i32 0, i32 0
  %472 = load i64*, i64** %471, align 8
  %473 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %470, i32 0, i32 1
  %474 = load i64, i64* %473, align 8
  invoke void @_ZNSt6vectorIxSaIxEEC2ESt16initializer_listIxERKS0_(%"class.std::vector"* %28, i64* %472, i64 %474, %"class.std::allocator.4"* dereferenceable(1) %31)
          to label %475 unwind label %577

; <label>:475:                                    ; preds = %458
  %476 = invoke %"struct.std::_Rb_tree_node_base"* @_ZNSt8multisetISt6vectorIxSaIxEESt4lessIS2_ESaIS2_EE6insertEOS2_(%"class.std::multiset"* %460, %"class.std::vector"* dereferenceable(24) %28)
          to label %477 unwind label %610

; <label>:477:                                    ; preds = %475
  %478 = load i32, i32* @x.8
  %479 = load i32, i32* @y.9
  %480 = add i32 %478, 79713394
  %481 = sub i32 %480, 1
  %482 = sub i32 %481, 79713394
  %483 = sub i32 %478, 1
  %484 = mul i32 %478, %482
  %485 = urem i32 %484, 2
  %486 = icmp eq i32 %485, 0
  %487 = icmp slt i32 %479, 10
  %488 = and i1 %486, %487
  %489 = xor i1 %486, %487
  %490 = or i1 %488, %489
  %491 = or i1 %486, %487
  br i1 %490, label %492, label %1131

; <label>:492:                                    ; preds = %477, %1131
  %493 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.19", %"struct.std::_Rb_tree_const_iterator.19"* %32, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %476, %"struct.std::_Rb_tree_node_base"** %493, align 8
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector"* %28) #3
  call void @_ZNSaIxED2Ev(%"class.std::allocator.4"* %31) #3
  %494 = load i64, i64* %21, align 8
  %495 = call dereferenceable(48) %"class.std::multiset"* @_ZNSt6vectorISt8multisetIS_IxSaIxEESt4lessIS2_ESaIS2_EESaIS6_EEixEm(%"class.std::vector.7"* %23, i64 %494) #3
  %496 = getelementptr inbounds [2 x i64], [2 x i64]* %35, i64 0, i64 0
  %497 = call dereferenceable(32) %"struct.std::pair.18"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt6vectorIxSaIxEEEEdeEv(%"struct.std::_Rb_tree_iterator"* %22) #3
  %498 = getelementptr inbounds %"struct.std::pair.18", %"struct.std::pair.18"* %497, i32 0, i32 1
  %499 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %498, i64 1) #3
  %500 = load i64, i64* %499, align 8
  store i64 %500, i64* %496, align 8
  %501 = getelementptr inbounds i64, i64* %496, i64 1
  store i64 1, i64* %501, align 8
  %502 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %34, i32 0, i32 0
  %503 = getelementptr inbounds [2 x i64], [2 x i64]* %35, i64 0, i64 0
  store i64* %503, i64** %502, align 8
  %504 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %34, i32 0, i32 1
  store i64 2, i64* %504, align 8
  call void @_ZNSaIxEC2Ev(%"class.std::allocator.4"* %36) #3
  %505 = bitcast %"class.std::initializer_list"* %34 to { i64*, i64 }*
  %506 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %505, i32 0, i32 0
  %507 = load i64*, i64** %506, align 8
  %508 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %505, i32 0, i32 1
  %509 = load i64, i64* %508, align 8
  %510 = load i32, i32* @x.8
  %511 = load i32, i32* @y.9
  %512 = sub i32 %510, 873578090
  %513 = sub i32 %512, 1
  %514 = add i32 %513, 873578090
  %515 = sub i32 %510, 1
  %516 = mul i32 %510, %514
  %517 = urem i32 %516, 2
  %518 = icmp eq i32 %517, 0
  %519 = icmp slt i32 %511, 10
  %520 = xor i1 %518, true
  %521 = xor i1 %519, true
  %522 = xor i1 false, true
  %523 = and i1 %520, false
  %524 = and i1 %518, %522
  %525 = and i1 %521, false
  %526 = and i1 %519, %522
  %527 = or i1 %523, %524
  %528 = or i1 %525, %526
  %529 = xor i1 %527, %528
  %530 = or i1 %520, %521
  %531 = xor i1 %530, true
  %532 = or i1 false, %522
  %533 = and i1 %531, %532
  %534 = or i1 %529, %533
  %535 = or i1 %518, %519
  br i1 %534, label %536, label %1131

; <label>:536:                                    ; preds = %492
  invoke void @_ZNSt6vectorIxSaIxEEC2ESt16initializer_listIxERKS0_(%"class.std::vector"* %33, i64* %507, i64 %509, %"class.std::allocator.4"* dereferenceable(1) %36)
          to label %537 unwind label %615

; <label>:537:                                    ; preds = %536
  %538 = invoke %"struct.std::_Rb_tree_node_base"* @_ZNSt8multisetISt6vectorIxSaIxEESt4lessIS2_ESaIS2_EE6insertEOS2_(%"class.std::multiset"* %495, %"class.std::vector"* dereferenceable(24) %33)
          to label %539 unwind label %619

; <label>:539:                                    ; preds = %537
  %540 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.19", %"struct.std::_Rb_tree_const_iterator.19"* %37, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %538, %"struct.std::_Rb_tree_node_base"** %540, align 8
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector"* %33) #3
  call void @_ZNSaIxED2Ev(%"class.std::allocator.4"* %36) #3
  %541 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt6vectorIxSaIxEEEEppEi(%"struct.std::_Rb_tree_iterator"* %22, i32 0) #3
  %542 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %38, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %541, %"struct.std::_Rb_tree_node_base"** %542, align 8
  br label %445

; <label>:543:                                    ; preds = %433
  %544 = load i32, i32* @x.8
  %545 = load i32, i32* @y.9
  %546 = sub i32 %544, -401043122
  %547 = sub i32 %546, 1
  %548 = add i32 %547, -401043122
  %549 = sub i32 %544, 1
  %550 = mul i32 %544, %548
  %551 = urem i32 %550, 2
  %552 = icmp eq i32 %551, 0
  %553 = icmp slt i32 %545, 10
  %554 = and i1 %552, %553
  %555 = xor i1 %552, %553
  %556 = or i1 %554, %555
  %557 = or i1 %552, %553
  br i1 %556, label %558, label %1149

; <label>:558:                                    ; preds = %543, %1149
  %559 = landingpad { i8*, i32 }
          cleanup
  %560 = extractvalue { i8*, i32 } %559, 0
  store i8* %560, i8** %14, align 8
  %561 = extractvalue { i8*, i32 } %559, 1
  store i32 %561, i32* %15, align 4
  call void @_ZNSaISt8multisetISt6vectorIxSaIxEESt4lessIS2_ESaIS2_EEED2Ev(%"class.std::allocator.9"* %24) #3
  %562 = load i32, i32* @x.8
  %563 = load i32, i32* @y.9
  %564 = add i32 %562, -1542232122
  %565 = sub i32 %564, 1
  %566 = sub i32 %565, -1542232122
  %567 = sub i32 %562, 1
  %568 = mul i32 %562, %566
  %569 = urem i32 %568, 2
  %570 = icmp eq i32 %569, 0
  %571 = icmp slt i32 %563, 10
  %572 = and i1 %570, %571
  %573 = xor i1 %570, %571
  %574 = or i1 %572, %573
  %575 = or i1 %570, %571
  br i1 %574, label %576, label %1149

; <label>:576:                                    ; preds = %558
  br label %962

; <label>:577:                                    ; preds = %458
  %578 = load i32, i32* @x.8
  %579 = load i32, i32* @y.9
  %580 = sub i32 0, 1
  %581 = add i32 %578, %580
  %582 = sub i32 %578, 1
  %583 = mul i32 %578, %581
  %584 = urem i32 %583, 2
  %585 = icmp eq i32 %584, 0
  %586 = icmp slt i32 %579, 10
  %587 = and i1 %585, %586
  %588 = xor i1 %585, %586
  %589 = or i1 %587, %588
  %590 = or i1 %585, %586
  br i1 %589, label %591, label %1153

; <label>:591:                                    ; preds = %577, %1153
  %592 = landingpad { i8*, i32 }
          cleanup
  %593 = extractvalue { i8*, i32 } %592, 0
  store i8* %593, i8** %14, align 8
  %594 = extractvalue { i8*, i32 } %592, 1
  store i32 %594, i32* %15, align 4
  %595 = load i32, i32* @x.8
  %596 = load i32, i32* @y.9
  %597 = add i32 %595, 131978648
  %598 = sub i32 %597, 1
  %599 = sub i32 %598, 131978648
  %600 = sub i32 %595, 1
  %601 = mul i32 %595, %599
  %602 = urem i32 %601, 2
  %603 = icmp eq i32 %602, 0
  %604 = icmp slt i32 %596, 10
  %605 = and i1 %603, %604
  %606 = xor i1 %603, %604
  %607 = or i1 %605, %606
  %608 = or i1 %603, %604
  br i1 %607, label %609, label %1153

; <label>:609:                                    ; preds = %591
  br label %614

; <label>:610:                                    ; preds = %475
  %611 = landingpad { i8*, i32 }
          cleanup
  %612 = extractvalue { i8*, i32 } %611, 0
  store i8* %612, i8** %14, align 8
  %613 = extractvalue { i8*, i32 } %611, 1
  store i32 %613, i32* %15, align 4
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector"* %28) #3
  br label %614

; <label>:614:                                    ; preds = %610, %609
  call void @_ZNSaIxED2Ev(%"class.std::allocator.4"* %31) #3
  br label %961

; <label>:615:                                    ; preds = %536
  %616 = landingpad { i8*, i32 }
          cleanup
  %617 = extractvalue { i8*, i32 } %616, 0
  store i8* %617, i8** %14, align 8
  %618 = extractvalue { i8*, i32 } %616, 1
  store i32 %618, i32* %15, align 4
  br label %623

; <label>:619:                                    ; preds = %537
  %620 = landingpad { i8*, i32 }
          cleanup
  %621 = extractvalue { i8*, i32 } %620, 0
  store i8* %621, i8** %14, align 8
  %622 = extractvalue { i8*, i32 } %620, 1
  store i32 %622, i32* %15, align 4
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector"* %33) #3
  br label %623

; <label>:623:                                    ; preds = %619, %615
  call void @_ZNSaIxED2Ev(%"class.std::allocator.4"* %36) #3
  br label %961

; <label>:624:                                    ; preds = %456
  br label %625

; <label>:625:                                    ; preds = %624
  %626 = load i32, i32* @x.8
  %627 = load i32, i32* @y.9
  %628 = sub i32 %626, 2089511820
  %629 = sub i32 %628, 1
  %630 = add i32 %629, 2089511820
  %631 = sub i32 %626, 1
  %632 = mul i32 %626, %630
  %633 = urem i32 %632, 2
  %634 = icmp eq i32 %633, 0
  %635 = icmp slt i32 %627, 10
  %636 = xor i1 %634, true
  %637 = xor i1 %635, true
  %638 = xor i1 false, true
  %639 = and i1 %636, false
  %640 = and i1 %634, %638
  %641 = and i1 %637, false
  %642 = and i1 %635, %638
  %643 = or i1 %639, %640
  %644 = or i1 %641, %642
  %645 = xor i1 %643, %644
  %646 = or i1 %636, %637
  %647 = xor i1 %646, true
  %648 = or i1 false, %638
  %649 = and i1 %647, %648
  %650 = or i1 %645, %649
  %651 = or i1 %634, %635
  br i1 %650, label %652, label %1157

; <label>:652:                                    ; preds = %625, %1157
  %653 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt23_Rb_tree_const_iteratorIxEppEi(%"struct.std::_Rb_tree_const_iterator"* %25, i32 0) #3
  %654 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %39, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %653, %"struct.std::_Rb_tree_node_base"** %654, align 8
  %655 = load i64, i64* %21, align 8
  %656 = sub i64 0, 1
  %657 = sub i64 %655, %656
  %658 = add nsw i64 %655, 1
  store i64 %657, i64* %21, align 8
  %659 = load i32, i32* @x.8
  %660 = load i32, i32* @y.9
  %661 = sub i32 0, 1
  %662 = add i32 %659, %661
  %663 = sub i32 %659, 1
  %664 = mul i32 %659, %662
  %665 = urem i32 %664, 2
  %666 = icmp eq i32 %665, 0
  %667 = icmp slt i32 %660, 10
  %668 = and i1 %666, %667
  %669 = xor i1 %666, %667
  %670 = or i1 %668, %669
  %671 = or i1 %666, %667
  br i1 %670, label %672, label %1157

; <label>:672:                                    ; preds = %652
  br label %440

; <label>:673:                                    ; preds = %440
  %674 = load i32, i32* @x.8
  %675 = load i32, i32* @y.9
  %676 = sub i32 %674, -1363505301
  %677 = sub i32 %676, 1
  %678 = add i32 %677, -1363505301
  %679 = sub i32 %674, 1
  %680 = mul i32 %674, %678
  %681 = urem i32 %680, 2
  %682 = icmp eq i32 %681, 0
  %683 = icmp slt i32 %675, 10
  %684 = xor i1 %682, true
  %685 = xor i1 %683, true
  %686 = xor i1 false, true
  %687 = and i1 %684, false
  %688 = and i1 %682, %686
  %689 = and i1 %685, false
  %690 = and i1 %683, %686
  %691 = or i1 %687, %688
  %692 = or i1 %689, %690
  %693 = xor i1 %691, %692
  %694 = or i1 %684, %685
  %695 = xor i1 %694, true
  %696 = or i1 false, %686
  %697 = and i1 %695, %696
  %698 = or i1 %693, %697
  %699 = or i1 %682, %683
  br i1 %698, label %700, label %1188

; <label>:700:                                    ; preds = %673, %1188
  store i32 0, i32* %40, align 4
  %701 = load i32, i32* @x.8
  %702 = load i32, i32* @y.9
  %703 = add i32 %701, 597176173
  %704 = sub i32 %703, 1
  %705 = sub i32 %704, 597176173
  %706 = sub i32 %701, 1
  %707 = mul i32 %701, %705
  %708 = urem i32 %707, 2
  %709 = icmp eq i32 %708, 0
  %710 = icmp slt i32 %702, 10
  %711 = xor i1 %709, true
  %712 = xor i1 %710, true
  %713 = xor i1 true, true
  %714 = and i1 %711, true
  %715 = and i1 %709, %713
  %716 = and i1 %712, true
  %717 = and i1 %710, %713
  %718 = or i1 %714, %715
  %719 = or i1 %716, %717
  %720 = xor i1 %718, %719
  %721 = or i1 %711, %712
  %722 = xor i1 %721, true
  %723 = or i1 true, %713
  %724 = and i1 %722, %723
  %725 = or i1 %720, %724
  %726 = or i1 %709, %710
  br i1 %725, label %727, label %1188

; <label>:727:                                    ; preds = %700
  br label %728

; <label>:728:                                    ; preds = %919, %727
  %729 = load i32, i32* @x.8
  %730 = load i32, i32* @y.9
  %731 = sub i32 0, 1
  %732 = add i32 %729, %731
  %733 = sub i32 %729, 1
  %734 = mul i32 %729, %732
  %735 = urem i32 %734, 2
  %736 = icmp eq i32 %735, 0
  %737 = icmp slt i32 %730, 10
  %738 = and i1 %736, %737
  %739 = xor i1 %736, %737
  %740 = or i1 %738, %739
  %741 = or i1 %736, %737
  br i1 %740, label %742, label %1189

; <label>:742:                                    ; preds = %728, %1189
  %743 = load i32, i32* %40, align 4
  %744 = sext i32 %743 to i64
  %745 = call i64 @_ZNKSt3setIxSt4lessIxESaIxEE4sizeEv(%"class.std::set"* %9) #3
  %746 = icmp ult i64 %744, %745
  %747 = load i32, i32* @x.8
  %748 = load i32, i32* @y.9
  %749 = sub i32 0, 1
  %750 = add i32 %747, %749
  %751 = sub i32 %747, 1
  %752 = mul i32 %747, %750
  %753 = urem i32 %752, 2
  %754 = icmp eq i32 %753, 0
  %755 = icmp slt i32 %748, 10
  %756 = xor i1 %754, true
  %757 = xor i1 %755, true
  %758 = xor i1 false, true
  %759 = and i1 %756, false
  %760 = and i1 %754, %758
  %761 = and i1 %757, false
  %762 = and i1 %755, %758
  %763 = or i1 %759, %760
  %764 = or i1 %761, %762
  %765 = xor i1 %763, %764
  %766 = or i1 %756, %757
  %767 = xor i1 %766, true
  %768 = or i1 false, %758
  %769 = and i1 %767, %768
  %770 = or i1 %765, %769
  %771 = or i1 %754, %755
  br i1 %770, label %772, label %1189

; <label>:772:                                    ; preds = %742
  br i1 %746, label %773, label %926

; <label>:773:                                    ; preds = %772
  store i64 0, i64* %41, align 8
  store i64 -100000000000000000, i64* %42, align 8
  %774 = load i32, i32* %40, align 4
  %775 = sext i32 %774 to i64
  %776 = call dereferenceable(48) %"class.std::multiset"* @_ZNSt6vectorISt8multisetIS_IxSaIxEESt4lessIS2_ESaIS2_EESaIS6_EEixEm(%"class.std::vector.7"* %23, i64 %775) #3
  %777 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt8multisetISt6vectorIxSaIxEESt4lessIS2_ESaIS2_EE5beginEv(%"class.std::multiset"* %776) #3
  %778 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.19", %"struct.std::_Rb_tree_const_iterator.19"* %43, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %777, %"struct.std::_Rb_tree_node_base"** %778, align 8
  br label %779

; <label>:779:                                    ; preds = %915, %773
  %780 = load i32, i32* %40, align 4
  %781 = sext i32 %780 to i64
  %782 = call dereferenceable(48) %"class.std::multiset"* @_ZNSt6vectorISt8multisetIS_IxSaIxEESt4lessIS2_ESaIS2_EESaIS6_EEixEm(%"class.std::vector.7"* %23, i64 %781) #3
  %783 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt8multisetISt6vectorIxSaIxEESt4lessIS2_ESaIS2_EE3endEv(%"class.std::multiset"* %782) #3
  %784 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.19", %"struct.std::_Rb_tree_const_iterator.19"* %44, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %783, %"struct.std::_Rb_tree_node_base"** %784, align 8
  %785 = call zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorISt6vectorIxSaIxEEEneERKS3_(%"struct.std::_Rb_tree_const_iterator.19"* %43, %"struct.std::_Rb_tree_const_iterator.19"* dereferenceable(8) %44) #3
  br i1 %785, label %786, label %918

; <label>:786:                                    ; preds = %779
  %787 = call dereferenceable(24) %"class.std::vector"* @_ZNKSt23_Rb_tree_const_iteratorISt6vectorIxSaIxEEEdeEv(%"struct.std::_Rb_tree_const_iterator.19"* %43) #3
  %788 = call dereferenceable(8) i64* @_ZNKSt6vectorIxSaIxEEixEm(%"class.std::vector"* %787, i64 1) #3
  %789 = load i64, i64* %788, align 8
  %790 = icmp eq i64 %789, -1
  br i1 %790, label %791, label %846

; <label>:791:                                    ; preds = %786
  %792 = load i64, i64* %41, align 8
  %793 = icmp eq i64 %792, 0
  br i1 %793, label %794, label %798

; <label>:794:                                    ; preds = %791
  %795 = call dereferenceable(24) %"class.std::vector"* @_ZNKSt23_Rb_tree_const_iteratorISt6vectorIxSaIxEEEdeEv(%"struct.std::_Rb_tree_const_iterator.19"* %43) #3
  %796 = call dereferenceable(8) i64* @_ZNKSt6vectorIxSaIxEEixEm(%"class.std::vector"* %795, i64 0) #3
  %797 = load i64, i64* %796, align 8
  store i64 %797, i64* %42, align 8
  br label %798

; <label>:798:                                    ; preds = %794, %791
  %799 = load i32, i32* @x.8
  %800 = load i32, i32* @y.9
  %801 = sub i32 %799, -86470918
  %802 = sub i32 %801, 1
  %803 = add i32 %802, -86470918
  %804 = sub i32 %799, 1
  %805 = mul i32 %799, %803
  %806 = urem i32 %805, 2
  %807 = icmp eq i32 %806, 0
  %808 = icmp slt i32 %800, 10
  %809 = xor i1 %807, true
  %810 = xor i1 %808, true
  %811 = xor i1 true, true
  %812 = and i1 %809, true
  %813 = and i1 %807, %811
  %814 = and i1 %810, true
  %815 = and i1 %808, %811
  %816 = or i1 %812, %813
  %817 = or i1 %814, %815
  %818 = xor i1 %816, %817
  %819 = or i1 %809, %810
  %820 = xor i1 %819, true
  %821 = or i1 true, %811
  %822 = and i1 %820, %821
  %823 = or i1 %818, %822
  %824 = or i1 %807, %808
  br i1 %823, label %825, label %1194

; <label>:825:                                    ; preds = %798, %1194
  %826 = load i64, i64* %41, align 8
  %827 = sub i64 %826, 7143273905636222745
  %828 = add i64 %827, 1
  %829 = add i64 %828, 7143273905636222745
  %830 = add nsw i64 %826, 1
  store i64 %829, i64* %41, align 8
  %831 = load i32, i32* @x.8
  %832 = load i32, i32* @y.9
  %833 = add i32 %831, -718549100
  %834 = sub i32 %833, 1
  %835 = sub i32 %834, -718549100
  %836 = sub i32 %831, 1
  %837 = mul i32 %831, %835
  %838 = urem i32 %837, 2
  %839 = icmp eq i32 %838, 0
  %840 = icmp slt i32 %832, 10
  %841 = and i1 %839, %840
  %842 = xor i1 %839, %840
  %843 = or i1 %841, %842
  %844 = or i1 %839, %840
  br i1 %843, label %845, label %1194

; <label>:845:                                    ; preds = %825
  br label %914

; <label>:846:                                    ; preds = %786
  %847 = load i32, i32* @x.8
  %848 = load i32, i32* @y.9
  %849 = add i32 %847, 1707818839
  %850 = sub i32 %849, 1
  %851 = sub i32 %850, 1707818839
  %852 = sub i32 %847, 1
  %853 = mul i32 %847, %851
  %854 = urem i32 %853, 2
  %855 = icmp eq i32 %854, 0
  %856 = icmp slt i32 %848, 10
  %857 = and i1 %855, %856
  %858 = xor i1 %855, %856
  %859 = or i1 %857, %858
  %860 = or i1 %855, %856
  br i1 %859, label %861, label %1218

; <label>:861:                                    ; preds = %846, %1218
  %862 = load i64, i64* %41, align 8
  %863 = sub i64 0, -1
  %864 = sub i64 %862, %863
  %865 = add nsw i64 %862, -1
  store i64 %864, i64* %41, align 8
  %866 = load i64, i64* %41, align 8
  %867 = icmp eq i64 %866, 0
  %868 = load i32, i32* @x.8
  %869 = load i32, i32* @y.9
  %870 = add i32 %868, 220384025
  %871 = sub i32 %870, 1
  %872 = sub i32 %871, 220384025
  %873 = sub i32 %868, 1
  %874 = mul i32 %868, %872
  %875 = urem i32 %874, 2
  %876 = icmp eq i32 %875, 0
  %877 = icmp slt i32 %869, 10
  %878 = and i1 %876, %877
  %879 = xor i1 %876, %877
  %880 = or i1 %878, %879
  %881 = or i1 %876, %877
  br i1 %880, label %882, label %1218

; <label>:882:                                    ; preds = %861
  br i1 %867, label %883, label %913

; <label>:883:                                    ; preds = %882
  %884 = call dereferenceable(24) %"class.std::vector"* @_ZNKSt23_Rb_tree_const_iteratorISt6vectorIxSaIxEEEdeEv(%"struct.std::_Rb_tree_const_iterator.19"* %43) #3
  %885 = call dereferenceable(8) i64* @_ZNKSt6vectorIxSaIxEEixEm(%"class.std::vector"* %884, i64 0) #3
  %886 = load i64, i64* %885, align 8
  %887 = load i64, i64* %42, align 8
  %888 = add i64 %886, -6646579133833044049
  %889 = sub i64 %888, %887
  %890 = sub i64 %889, -6646579133833044049
  %891 = sub nsw i64 %886, %887
  %892 = load i64, i64* @d, align 8
  %893 = invoke i64 @_ZSt3absx(i64 %892)
          to label %894 unwind label %909

; <label>:894:                                    ; preds = %883
  %895 = sdiv i64 %890, %893
  %896 = sub i64 %895, 4157082099540429009
  %897 = add i64 %896, 1
  %898 = add i64 %897, 4157082099540429009
  %899 = add nsw i64 %895, 1
  %900 = load i64, i64* %7, align 8
  %901 = sub i64 0, %900
  %902 = sub i64 0, %898
  %903 = add i64 %901, %902
  %904 = sub i64 0, %903
  %905 = add nsw i64 %900, %898
  store i64 %904, i64* %7, align 8
  %906 = call dereferenceable(24) %"class.std::vector"* @_ZNKSt23_Rb_tree_const_iteratorISt6vectorIxSaIxEEEdeEv(%"struct.std::_Rb_tree_const_iterator.19"* %43) #3
  %907 = call dereferenceable(8) i64* @_ZNKSt6vectorIxSaIxEEixEm(%"class.std::vector"* %906, i64 0) #3
  %908 = load i64, i64* %907, align 8
  store i64 %908, i64* %42, align 8
  br label %913

; <label>:909:                                    ; preds = %958, %956, %883
  %910 = landingpad { i8*, i32 }
          cleanup
  %911 = extractvalue { i8*, i32 } %910, 0
  store i8* %911, i8** %14, align 8
  %912 = extractvalue { i8*, i32 } %910, 1
  store i32 %912, i32* %15, align 4
  br label %961

; <label>:913:                                    ; preds = %894, %882
  br label %914

; <label>:914:                                    ; preds = %913, %845
  br label %915

; <label>:915:                                    ; preds = %914
  %916 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt23_Rb_tree_const_iteratorISt6vectorIxSaIxEEEppEi(%"struct.std::_Rb_tree_const_iterator.19"* %43, i32 0) #3
  %917 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.19", %"struct.std::_Rb_tree_const_iterator.19"* %45, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %916, %"struct.std::_Rb_tree_node_base"** %917, align 8
  br label %779

; <label>:918:                                    ; preds = %779
  br label %919

; <label>:919:                                    ; preds = %918
  %920 = load i32, i32* %40, align 4
  %921 = sub i32 0, %920
  %922 = sub i32 0, 1
  %923 = add i32 %921, %922
  %924 = sub i32 0, %923
  %925 = add nsw i32 %920, 1
  store i32 %924, i32* %40, align 4
  br label %728

; <label>:926:                                    ; preds = %772
  %927 = load i32, i32* @x.8
  %928 = load i32, i32* @y.9
  %929 = sub i32 0, 1
  %930 = add i32 %927, %929
  %931 = sub i32 %927, 1
  %932 = mul i32 %927, %930
  %933 = urem i32 %932, 2
  %934 = icmp eq i32 %933, 0
  %935 = icmp slt i32 %928, 10
  %936 = and i1 %934, %935
  %937 = xor i1 %934, %935
  %938 = or i1 %936, %937
  %939 = or i1 %934, %935
  br i1 %938, label %940, label %1238

; <label>:940:                                    ; preds = %926, %1238
  %941 = load i64, i64* %7, align 8
  %942 = load i32, i32* @x.8
  %943 = load i32, i32* @y.9
  %944 = add i32 %942, 41642351
  %945 = sub i32 %944, 1
  %946 = sub i32 %945, 41642351
  %947 = sub i32 %942, 1
  %948 = mul i32 %942, %946
  %949 = urem i32 %948, 2
  %950 = icmp eq i32 %949, 0
  %951 = icmp slt i32 %943, 10
  %952 = and i1 %950, %951
  %953 = xor i1 %950, %951
  %954 = or i1 %952, %953
  %955 = or i1 %950, %951
  br i1 %954, label %956, label %1238

; <label>:956:                                    ; preds = %940
  %957 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* @_ZSt4cout, i64 %941)
          to label %958 unwind label %909

; <label>:958:                                    ; preds = %956
  %959 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272) %957, i8 signext 10)
          to label %960 unwind label %909

; <label>:960:                                    ; preds = %958
  store i32 0, i32* %3, align 4
  call void @_ZNSt6vectorISt8multisetIS_IxSaIxEESt4lessIS2_ESaIS2_EESaIS6_EED2Ev(%"class.std::vector.7"* %23) #3
  call void @_ZNSt3setIxSt4lessIxESaIxEED2Ev(%"class.std::set"* %9) #3
  call void @_ZNSt8multimapIxSt6vectorIxSaIxEESt4lessIxESaISt4pairIKxS2_EEED2Ev(%"class.std::multimap"* %8) #3
  br label %1005

; <label>:961:                                    ; preds = %909, %623, %614
  call void @_ZNSt6vectorISt8multisetIS_IxSaIxEESt4lessIS2_ESaIS2_EESaIS6_EED2Ev(%"class.std::vector.7"* %23) #3
  br label %962

; <label>:962:                                    ; preds = %961, %576, %429, %324, %320
  %963 = load i32, i32* @x.8
  %964 = load i32, i32* @y.9
  %965 = add i32 %963, -622284280
  %966 = sub i32 %965, 1
  %967 = sub i32 %966, -622284280
  %968 = sub i32 %963, 1
  %969 = mul i32 %963, %967
  %970 = urem i32 %969, 2
  %971 = icmp eq i32 %970, 0
  %972 = icmp slt i32 %964, 10
  %973 = xor i1 %971, true
  %974 = xor i1 %972, true
  %975 = xor i1 true, true
  %976 = and i1 %973, true
  %977 = and i1 %971, %975
  %978 = and i1 %974, true
  %979 = and i1 %972, %975
  %980 = or i1 %976, %977
  %981 = or i1 %978, %979
  %982 = xor i1 %980, %981
  %983 = or i1 %973, %974
  %984 = xor i1 %983, true
  %985 = or i1 true, %975
  %986 = and i1 %984, %985
  %987 = or i1 %982, %986
  %988 = or i1 %971, %972
  br i1 %987, label %989, label %1240

; <label>:989:                                    ; preds = %962, %1240
  call void @_ZNSt3setIxSt4lessIxESaIxEED2Ev(%"class.std::set"* %9) #3
  call void @_ZNSt8multimapIxSt6vectorIxSaIxEESt4lessIxESaISt4pairIKxS2_EEED2Ev(%"class.std::multimap"* %8) #3
  %990 = load i32, i32* @x.8
  %991 = load i32, i32* @y.9
  %992 = sub i32 %990, 65545173
  %993 = sub i32 %992, 1
  %994 = add i32 %993, 65545173
  %995 = sub i32 %990, 1
  %996 = mul i32 %990, %994
  %997 = urem i32 %996, 2
  %998 = icmp eq i32 %997, 0
  %999 = icmp slt i32 %991, 10
  %1000 = and i1 %998, %999
  %1001 = xor i1 %998, %999
  %1002 = or i1 %1000, %1001
  %1003 = or i1 %998, %999
  br i1 %1002, label %1004, label %1240

; <label>:1004:                                   ; preds = %989
  br label %1007

; <label>:1005:                                   ; preds = %960, %173, %109
  %1006 = load i32, i32* %3, align 4
  ret i32 %1006

; <label>:1007:                                   ; preds = %1004
  %1008 = load i8*, i8** %14, align 8
  %1009 = load i32, i32* %15, align 4
  %1010 = insertvalue { i8*, i32 } undef, i8* %1008, 0
  %1011 = insertvalue { i8*, i32 } %1010, i32 %1009, 1
  resume { i8*, i32 } %1011

; <label>:1012:                                   ; preds = %81, %54
  %1013 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* @_ZSt4cout, i32 1)
  %1014 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272) %1013, i8 signext 10)
  store i32 0, i32* %3, align 4
  br label %81

; <label>:1015:                                   ; preds = %140, %113
  %1016 = load i64, i64* %6, align 8
  %1017 = add i64 %1016, -9097789608585200493
  %1018 = sub i64 %1017, 1
  %1019 = sub i64 %1018, -9097789608585200493
  %1020 = sub i64 %1016, 1
  %1021 = mul i64 %1019, 1
  %1022 = shl i64 %1016, 1
  %1023 = add i64 0, 3416326011631757575
  %1024 = sub i64 %1023, %1016
  %1025 = sub i64 %1024, 3416326011631757575
  %1026 = sub i64 0, %1016
  %1027 = sub i64 %1025, 7603972403361787994
  %1028 = add i64 %1027, 1
  %1029 = add i64 %1028, 7603972403361787994
  %1030 = add i64 %1025, 1
  %1031 = shl i64 %1016, 1
  %1032 = shl i64 %1016, 1
  %1033 = shl i64 %1016, 1
  %1034 = sub i64 %1016, 5795905150839404194
  %1035 = add i64 %1034, 1
  %1036 = add i64 %1035, 5795905150839404194
  %1037 = add nsw i64 %1016, 1
  %1038 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* @_ZSt4cout, i64 %1036)
  %1039 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272) %1038, i8 signext 10)
  store i32 0, i32* %3, align 4
  br label %140

; <label>:1040:                                   ; preds = %202, %175
  %1041 = load i32, i32* %10, align 4
  %1042 = sext i32 %1041 to i64
  %1043 = load i64, i64* %6, align 8
  %1044 = icmp sle i64 %1042, %1043
  br label %202

; <label>:1045:                                   ; preds = %274, %247
  %1046 = load i64, i64* %6, align 8
  %1047 = load i32, i32* %10, align 4
  %1048 = sext i32 %1047 to i64
  %1049 = sub i64 %1046, -2122508359289579497
  %1050 = sub i64 %1049, %1048
  %1051 = add i64 %1050, -2122508359289579497
  %1052 = sub i64 %1046, %1048
  %1053 = mul i64 %1051, %1048
  %1054 = shl i64 %1046, %1048
  %1055 = shl i64 %1046, %1048
  %1056 = sub i64 0, %1046
  %1057 = add i64 0, %1056
  %1058 = sub i64 0, %1046
  %1059 = sub i64 0, %1057
  %1060 = sub i64 0, %1048
  %1061 = add i64 %1059, %1060
  %1062 = sub i64 0, %1061
  %1063 = add i64 %1057, %1048
  %1064 = add i64 %1046, -3198829840773555337
  %1065 = sub i64 %1064, %1048
  %1066 = sub i64 %1065, -3198829840773555337
  %1067 = sub nsw i64 %1046, %1048
  %1068 = load i64, i64* @x, align 8
  %1069 = load i64, i64* @d, align 8
  br label %274

; <label>:1070:                                   ; preds = %342, %328
  %1071 = load i32, i32* %10, align 4
  %1072 = sext i32 %1071 to i64
  %1073 = load i64, i64* @x, align 8
  %1074 = add i64 0, 9149325967258501383
  %1075 = sub i64 %1074, %1072
  %1076 = sub i64 %1075, 9149325967258501383
  %1077 = sub i64 0, %1072
  %1078 = sub i64 %1076, 958256366204577842
  %1079 = add i64 %1078, %1073
  %1080 = add i64 %1079, 958256366204577842
  %1081 = add i64 %1076, %1073
  %1082 = sub i64 0, -195295979472655040
  %1083 = sub i64 %1082, %1072
  %1084 = add i64 %1083, -195295979472655040
  %1085 = sub i64 0, %1072
  %1086 = add i64 %1084, -5641995117215338454
  %1087 = add i64 %1086, %1073
  %1088 = sub i64 %1087, -5641995117215338454
  %1089 = add i64 %1084, %1073
  %1090 = sub i64 0, -836792369485903219
  %1091 = sub i64 %1090, %1072
  %1092 = add i64 %1091, -836792369485903219
  %1093 = sub i64 0, %1072
  %1094 = sub i64 0, %1073
  %1095 = sub i64 %1092, %1094
  %1096 = add i64 %1092, %1073
  %1097 = add i64 0, 7126739552087070344
  %1098 = sub i64 %1097, %1072
  %1099 = sub i64 %1098, 7126739552087070344
  %1100 = sub i64 0, %1072
  %1101 = sub i64 0, %1099
  %1102 = sub i64 0, %1073
  %1103 = add i64 %1101, %1102
  %1104 = sub i64 0, %1103
  %1105 = add i64 %1099, %1073
  %1106 = sub i64 0, %1073
  %1107 = add i64 %1072, %1106
  %1108 = sub i64 %1072, %1073
  %1109 = mul i64 %1107, %1073
  %1110 = mul nsw i64 %1072, %1073
  %1111 = load i64, i64* @d, align 8
  br label %342

; <label>:1112:                                   ; preds = %380, %366
  %1113 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %18, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %365, %"struct.std::_Rb_tree_node_base"** %1113, align 8
  %1114 = load i32, i32* %10, align 4
  %1115 = sext i32 %1114 to i64
  %1116 = load i64, i64* @x, align 8
  %1117 = sub i64 0, %1116
  %1118 = add i64 %1115, %1117
  %1119 = sub i64 %1115, %1116
  %1120 = mul i64 %1118, %1116
  %1121 = sub i64 0, -3278137584131237179
  %1122 = sub i64 %1121, %1115
  %1123 = add i64 %1122, -3278137584131237179
  %1124 = sub i64 0, %1115
  %1125 = sub i64 0, %1116
  %1126 = sub i64 %1123, %1125
  %1127 = add i64 %1123, %1116
  %1128 = shl i64 %1115, %1116
  %1129 = mul nsw i64 %1115, %1116
  %1130 = load i64, i64* @d, align 8
  br label %380

; <label>:1131:                                   ; preds = %492, %477
  %1132 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.19", %"struct.std::_Rb_tree_const_iterator.19"* %32, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %476, %"struct.std::_Rb_tree_node_base"** %1132, align 8
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector"* %28) #3
  call void @_ZNSaIxED2Ev(%"class.std::allocator.4"* %31) #3
  %1133 = load i64, i64* %21, align 8
  %1134 = call dereferenceable(48) %"class.std::multiset"* @_ZNSt6vectorISt8multisetIS_IxSaIxEESt4lessIS2_ESaIS2_EESaIS6_EEixEm(%"class.std::vector.7"* %23, i64 %1133) #3
  %1135 = getelementptr inbounds [2 x i64], [2 x i64]* %35, i64 0, i64 0
  %1136 = call dereferenceable(32) %"struct.std::pair.18"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt6vectorIxSaIxEEEEdeEv(%"struct.std::_Rb_tree_iterator"* %22) #3
  %1137 = getelementptr inbounds %"struct.std::pair.18", %"struct.std::pair.18"* %1136, i32 0, i32 1
  %1138 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"* %1137, i64 1) #3
  %1139 = load i64, i64* %1138, align 8
  store i64 %1139, i64* %1135, align 8
  %1140 = getelementptr inbounds i64, i64* %1135, i64 1
  store i64 1, i64* %1140, align 8
  %1141 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %34, i32 0, i32 0
  %1142 = getelementptr inbounds [2 x i64], [2 x i64]* %35, i64 0, i64 0
  store i64* %1142, i64** %1141, align 8
  %1143 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %34, i32 0, i32 1
  store i64 2, i64* %1143, align 8
  call void @_ZNSaIxEC2Ev(%"class.std::allocator.4"* %36) #3
  %1144 = bitcast %"class.std::initializer_list"* %34 to { i64*, i64 }*
  %1145 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1144, i32 0, i32 0
  %1146 = load i64*, i64** %1145, align 8
  %1147 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %1144, i32 0, i32 1
  %1148 = load i64, i64* %1147, align 8
  br label %492

; <label>:1149:                                   ; preds = %558, %543
  %1150 = landingpad { i8*, i32 }
          cleanup
  %1151 = extractvalue { i8*, i32 } %1150, 0
  store i8* %1151, i8** %14, align 8
  %1152 = extractvalue { i8*, i32 } %1150, 1
  store i32 %1152, i32* %15, align 4
  call void @_ZNSaISt8multisetISt6vectorIxSaIxEESt4lessIS2_ESaIS2_EEED2Ev(%"class.std::allocator.9"* %24) #3
  br label %558

; <label>:1153:                                   ; preds = %591, %577
  %1154 = landingpad { i8*, i32 }
          cleanup
  %1155 = extractvalue { i8*, i32 } %1154, 0
  store i8* %1155, i8** %14, align 8
  %1156 = extractvalue { i8*, i32 } %1154, 1
  store i32 %1156, i32* %15, align 4
  br label %591

; <label>:1157:                                   ; preds = %652, %625
  %1158 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt23_Rb_tree_const_iteratorIxEppEi(%"struct.std::_Rb_tree_const_iterator"* %25, i32 0) #3
  %1159 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %39, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %1158, %"struct.std::_Rb_tree_node_base"** %1159, align 8
  %1160 = load i64, i64* %21, align 8
  %1161 = sub i64 0, 7747632124871130880
  %1162 = sub i64 %1161, %1160
  %1163 = add i64 %1162, 7747632124871130880
  %1164 = sub i64 0, %1160
  %1165 = sub i64 0, %1163
  %1166 = sub i64 0, 1
  %1167 = add i64 %1165, %1166
  %1168 = sub i64 0, %1167
  %1169 = add i64 %1163, 1
  %1170 = add i64 0, 1908180666073288430
  %1171 = sub i64 %1170, %1160
  %1172 = sub i64 %1171, 1908180666073288430
  %1173 = sub i64 0, %1160
  %1174 = sub i64 %1172, -8538696989103858143
  %1175 = add i64 %1174, 1
  %1176 = add i64 %1175, -8538696989103858143
  %1177 = add i64 %1172, 1
  %1178 = add i64 %1160, -5460689098575748535
  %1179 = sub i64 %1178, 1
  %1180 = sub i64 %1179, -5460689098575748535
  %1181 = sub i64 %1160, 1
  %1182 = mul i64 %1180, 1
  %1183 = shl i64 %1160, 1
  %1184 = sub i64 %1160, -1978415414774522776
  %1185 = add i64 %1184, 1
  %1186 = add i64 %1185, -1978415414774522776
  %1187 = add nsw i64 %1160, 1
  store i64 %1186, i64* %21, align 8
  br label %652

; <label>:1188:                                   ; preds = %700, %673
  store i32 0, i32* %40, align 4
  br label %700

; <label>:1189:                                   ; preds = %742, %728
  %1190 = load i32, i32* %40, align 4
  %1191 = sext i32 %1190 to i64
  %1192 = call i64 @_ZNKSt3setIxSt4lessIxESaIxEE4sizeEv(%"class.std::set"* %9) #3
  %1193 = icmp ult i64 %1191, %1192
  br label %742

; <label>:1194:                                   ; preds = %825, %798
  %1195 = load i64, i64* %41, align 8
  %1196 = sub i64 0, 1
  %1197 = add i64 %1195, %1196
  %1198 = sub i64 %1195, 1
  %1199 = mul i64 %1197, 1
  %1200 = add i64 0, 1575559685068319055
  %1201 = sub i64 %1200, %1195
  %1202 = sub i64 %1201, 1575559685068319055
  %1203 = sub i64 0, %1195
  %1204 = add i64 %1202, 7452443842924699853
  %1205 = add i64 %1204, 1
  %1206 = sub i64 %1205, 7452443842924699853
  %1207 = add i64 %1202, 1
  %1208 = sub i64 0, 1
  %1209 = add i64 %1195, %1208
  %1210 = sub i64 %1195, 1
  %1211 = mul i64 %1209, 1
  %1212 = shl i64 %1195, 1
  %1213 = sub i64 0, %1195
  %1214 = sub i64 0, 1
  %1215 = add i64 %1213, %1214
  %1216 = sub i64 0, %1215
  %1217 = add nsw i64 %1195, 1
  store i64 %1216, i64* %41, align 8
  br label %825

; <label>:1218:                                   ; preds = %861, %846
  %1219 = load i64, i64* %41, align 8
  %1220 = shl i64 %1219, -1
  %1221 = shl i64 %1219, -1
  %1222 = shl i64 %1219, -1
  %1223 = add i64 0, -5907549395981154519
  %1224 = sub i64 %1223, %1219
  %1225 = sub i64 %1224, -5907549395981154519
  %1226 = sub i64 0, %1219
  %1227 = sub i64 %1225, 6844264895660704953
  %1228 = add i64 %1227, -1
  %1229 = add i64 %1228, 6844264895660704953
  %1230 = add i64 %1225, -1
  %1231 = sub i64 0, %1219
  %1232 = sub i64 0, -1
  %1233 = add i64 %1231, %1232
  %1234 = sub i64 0, %1233
  %1235 = add nsw i64 %1219, -1
  store i64 %1234, i64* %41, align 8
  %1236 = load i64, i64* %41, align 8
  %1237 = icmp eq i64 %1236, 0
  br label %861

; <label>:1238:                                   ; preds = %940, %926
  %1239 = load i64, i64* %7, align 8
  br label %940

; <label>:1240:                                   ; preds = %989, %962
  call void @_ZNSt3setIxSt4lessIxESaIxEED2Ev(%"class.std::set"* %9) #3
  call void @_ZNSt8multimapIxSt6vectorIxSaIxEESt4lessIxESaISt4pairIKxS2_EEED2Ev(%"class.std::multimap"* %8) #3
  br label %989
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8multimapIxSt6vectorIxSaIxEESt4lessIxESaISt4pairIKxS2_EEEC2Ev(%"class.std::multimap"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::multimap"*, align 8
  store %"class.std::multimap"* %0, %"class.std::multimap"** %2, align 8
  %3 = load %"class.std::multimap"*, %"class.std::multimap"** %2, align 8
  %4 = getelementptr inbounds %"class.std::multimap", %"class.std::multimap"* %3, i32 0, i32 0
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EEC2Ev(%"class.std::_Rb_tree"* %4)
          to label %5 unwind label %46

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* @x.10
  %7 = load i32, i32* @y.11
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %7, 10
  %15 = xor i1 %13, true
  %16 = xor i1 %14, true
  %17 = xor i1 true, true
  %18 = and i1 %15, true
  %19 = and i1 %13, %17
  %20 = and i1 %16, true
  %21 = and i1 %14, %17
  %22 = or i1 %18, %19
  %23 = or i1 %20, %21
  %24 = xor i1 %22, %23
  %25 = or i1 %15, %16
  %26 = xor i1 %25, true
  %27 = or i1 true, %17
  %28 = and i1 %26, %27
  %29 = or i1 %24, %28
  %30 = or i1 %13, %14
  br i1 %29, label %31, label %91

; <label>:31:                                     ; preds = %5, %91
  %32 = load i32, i32* @x.10
  %33 = load i32, i32* @y.11
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  br i1 %43, label %45, label %91

; <label>:45:                                     ; preds = %31
  ret void

; <label>:46:                                     ; preds = %1
  %47 = load i32, i32* @x.10
  %48 = load i32, i32* @y.11
  %49 = add i32 %47, -710023589
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -710023589
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  br i1 %59, label %61, label %92

; <label>:61:                                     ; preds = %46, %92
  %62 = landingpad { i8*, i32 }
          catch i8* null
  %63 = extractvalue { i8*, i32 } %62, 0
  call void @__clang_call_terminate(i8* %63) #11
  %64 = load i32, i32* @x.10
  %65 = load i32, i32* @y.11
  %66 = sub i32 %64, -295084330
  %67 = sub i32 %66, 1
  %68 = add i32 %67, -295084330
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 false, true
  %77 = and i1 %74, false
  %78 = and i1 %72, %76
  %79 = and i1 %75, false
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 false, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  br i1 %88, label %90, label %92

; <label>:90:                                     ; preds = %61
  unreachable

; <label>:91:                                     ; preds = %31, %5
  br label %31

; <label>:92:                                     ; preds = %61, %46
  %93 = landingpad { i8*, i32 }
          catch i8* null
  %94 = extractvalue { i8*, i32 } %93, 0
  call void @__clang_call_terminate(i8* %94) #11
  br label %61
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt3setIxSt4lessIxESaIxEEC2Ev(%"class.std::set"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %2, align 8
  %3 = load %"class.std::set"*, %"class.std::set"** %2, align 8
  %4 = getelementptr inbounds %"class.std::set", %"class.std::set"* %3, i32 0, i32 0
  invoke void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEEC2Ev(%"class.std::_Rb_tree.0"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #11
  unreachable
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIxEC2Ev(%"class.std::allocator.4"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.14
  %5 = load i32, i32* @y.15
  %6 = sub i32 %4, 1634905700
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1634905700
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1642297387, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1642297387, label %18
    i32 1742117179, label %38
    i32 -1876547271, label %57
    i32 -913725027, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1742117179, i32 -913725027
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.4"*, align 8
  store %"class.std::allocator.4"* %0, %"class.std::allocator.4"** %39, align 8
  %40 = load %"class.std::allocator.4"*, %"class.std::allocator.4"** %39, align 8
  %41 = bitcast %"class.std::allocator.4"* %40 to %"class.__gnu_cxx::new_allocator.5"*
  call void @_ZN9__gnu_cxx13new_allocatorIxEC2Ev(%"class.__gnu_cxx::new_allocator.5"* %41) #3
  %42 = load i32, i32* @x.14
  %43 = load i32, i32* @y.15
  %44 = sub i32 %42, -998315295
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -998315295
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1876547271, i32 -913725027
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::allocator.4"*, align 8
  store %"class.std::allocator.4"* %0, %"class.std::allocator.4"** %59, align 8
  %60 = load %"class.std::allocator.4"*, %"class.std::allocator.4"** %59, align 8
  %61 = bitcast %"class.std::allocator.4"* %60 to %"class.__gnu_cxx::new_allocator.5"*
  call void @_ZN9__gnu_cxx13new_allocatorIxEC2Ev(%"class.__gnu_cxx::new_allocator.5"* %61) #3
  store i32 1742117179, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEEC2ESt16initializer_listIxERKS0_(%"class.std::vector"*, i64*, i64, %"class.std::allocator.4"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.16
  %6 = load i32, i32* @y.17
  %7 = sub i32 %5, 1539877379
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1539877379
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %6, 10
  %15 = and i1 %13, %14
  %16 = xor i1 %13, %14
  %17 = or i1 %15, %16
  %18 = or i1 %13, %14
  br i1 %17, label %19, label %90

; <label>:19:                                     ; preds = %4, %90
  %20 = alloca %"class.std::initializer_list", align 8
  %21 = alloca %"class.std::vector"*, align 8
  %22 = alloca %"class.std::allocator.4"*, align 8
  %23 = alloca %"struct.std::forward_iterator_tag", align 1
  %24 = alloca %"struct.std::random_access_iterator_tag", align 1
  %25 = alloca i8*
  %26 = alloca i32
  %27 = bitcast %"class.std::initializer_list"* %20 to { i64*, i64 }*
  %28 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %27, i32 0, i32 0
  store i64* %1, i64** %28, align 8
  %29 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %27, i32 0, i32 1
  store i64 %2, i64* %29, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %21, align 8
  store %"class.std::allocator.4"* %3, %"class.std::allocator.4"** %22, align 8
  %30 = load %"class.std::vector"*, %"class.std::vector"** %21, align 8
  %31 = bitcast %"class.std::vector"* %30 to %"struct.std::_Vector_base"*
  %32 = load %"class.std::allocator.4"*, %"class.std::allocator.4"** %22, align 8
  call void @_ZNSt12_Vector_baseIxSaIxEEC2ERKS0_(%"struct.std::_Vector_base"* %31, %"class.std::allocator.4"* dereferenceable(1) %32) #3
  %33 = call i64* @_ZNKSt16initializer_listIxE5beginEv(%"class.std::initializer_list"* %20) #3
  %34 = call i64* @_ZNKSt16initializer_listIxE3endEv(%"class.std::initializer_list"* %20) #3
  %35 = bitcast %"struct.std::random_access_iterator_tag"* %24 to %"struct.std::forward_iterator_tag"*
  %36 = load i32, i32* @x.16
  %37 = load i32, i32* @y.17
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  br i1 %47, label %49, label %90

; <label>:49:                                     ; preds = %19
  invoke void @_ZNSt6vectorIxSaIxEE19_M_range_initializeIPKxEEvT_S5_St20forward_iterator_tag(%"class.std::vector"* %30, i64* %33, i64* %34)
          to label %50 unwind label %51

; <label>:50:                                     ; preds = %49
  ret void

; <label>:51:                                     ; preds = %49
  %52 = load i32, i32* @x.16
  %53 = load i32, i32* @y.17
  %54 = sub i32 %52, -1906344573
  %55 = sub i32 %54, 1
  %56 = add i32 %55, -1906344573
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  br i1 %64, label %66, label %107

; <label>:66:                                     ; preds = %51, %107
  %67 = landingpad { i8*, i32 }
          cleanup
  %68 = extractvalue { i8*, i32 } %67, 0
  store i8* %68, i8** %25, align 8
  %69 = extractvalue { i8*, i32 } %67, 1
  store i32 %69, i32* %26, align 4
  %70 = bitcast %"class.std::vector"* %30 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base"* %70) #3
  %71 = load i32, i32* @x.16
  %72 = load i32, i32* @y.17
  %73 = sub i32 0, 1
  %74 = add i32 %71, %73
  %75 = sub i32 %71, 1
  %76 = mul i32 %71, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %72, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  br i1 %82, label %84, label %107

; <label>:84:                                     ; preds = %66
  br label %85

; <label>:85:                                     ; preds = %84
  %86 = load i8*, i8** %25, align 8
  %87 = load i32, i32* %26, align 4
  %88 = insertvalue { i8*, i32 } undef, i8* %86, 0
  %89 = insertvalue { i8*, i32 } %88, i32 %87, 1
  resume { i8*, i32 } %89

; <label>:90:                                     ; preds = %19, %4
  %91 = alloca %"class.std::initializer_list", align 8
  %92 = alloca %"class.std::vector"*, align 8
  %93 = alloca %"class.std::allocator.4"*, align 8
  %94 = alloca %"struct.std::forward_iterator_tag", align 1
  %95 = alloca %"struct.std::random_access_iterator_tag", align 1
  %96 = alloca i8*
  %97 = alloca i32
  %98 = bitcast %"class.std::initializer_list"* %91 to { i64*, i64 }*
  %99 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %98, i32 0, i32 0
  store i64* %1, i64** %99, align 8
  %100 = getelementptr inbounds { i64*, i64 }, { i64*, i64 }* %98, i32 0, i32 1
  store i64 %2, i64* %100, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %92, align 8
  store %"class.std::allocator.4"* %3, %"class.std::allocator.4"** %93, align 8
  %101 = load %"class.std::vector"*, %"class.std::vector"** %92, align 8
  %102 = bitcast %"class.std::vector"* %101 to %"struct.std::_Vector_base"*
  %103 = load %"class.std::allocator.4"*, %"class.std::allocator.4"** %93, align 8
  call void @_ZNSt12_Vector_baseIxSaIxEEC2ERKS0_(%"struct.std::_Vector_base"* %102, %"class.std::allocator.4"* dereferenceable(1) %103) #3
  %104 = call i64* @_ZNKSt16initializer_listIxE5beginEv(%"class.std::initializer_list"* %91) #3
  %105 = call i64* @_ZNKSt16initializer_listIxE3endEv(%"class.std::initializer_list"* %91) #3
  %106 = bitcast %"struct.std::random_access_iterator_tag"* %95 to %"struct.std::forward_iterator_tag"*
  br label %19

; <label>:107:                                    ; preds = %66, %51
  %108 = landingpad { i8*, i32 }
          cleanup
  %109 = extractvalue { i8*, i32 } %108, 0
  store i8* %109, i8** %25, align 8
  %110 = extractvalue { i8*, i32 } %108, 1
  store i32 %110, i32* %26, align 4
  %111 = bitcast %"class.std::vector"* %30 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base"* %111) #3
  br label %66
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIxED2Ev(%"class.std::allocator.4"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.4"*, align 8
  store %"class.std::allocator.4"* %0, %"class.std::allocator.4"** %2, align 8
  %3 = load %"class.std::allocator.4"*, %"class.std::allocator.4"** %2, align 8
  %4 = bitcast %"class.std::allocator.4"* %3 to %"class.__gnu_cxx::new_allocator.5"*
  call void @_ZN9__gnu_cxx13new_allocatorIxED2Ev(%"class.__gnu_cxx::new_allocator.5"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds i64, i64* %9, i64 %10
  ret i64* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8multimapIxSt6vectorIxSaIxEESt4lessIxESaISt4pairIKxS2_EEE7emplaceIJxRS2_EEESt17_Rb_tree_iteratorIS7_EDpOT_(%"class.std::multimap"*, i64* dereferenceable(8), %"class.std::vector"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %5 = alloca %"class.std::multimap"*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.std::vector"*, align 8
  store %"class.std::multimap"* %0, %"class.std::multimap"** %5, align 8
  store i64* %1, i64** %6, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %7, align 8
  %8 = load %"class.std::multimap"*, %"class.std::multimap"** %5, align 8
  %9 = getelementptr inbounds %"class.std::multimap", %"class.std::multimap"* %8, i32 0, i32 0
  %10 = load i64*, i64** %6, align 8
  %11 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %10) #3
  %12 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  %13 = call dereferenceable(24) %"class.std::vector"* @_ZSt7forwardIRSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::vector"* dereferenceable(24) %12) #3
  %14 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE16_M_emplace_equalIJxRS4_EEESt17_Rb_tree_iteratorIS5_EDpOT_(%"class.std::_Rb_tree"* %9, i64* dereferenceable(8) %11, %"class.std::vector"* dereferenceable(24) %13)
  %15 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %4, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %14, %"struct.std::_Rb_tree_node_base"** %15, align 8
  %16 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %4, i32 0, i32 0
  %17 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %16, align 8
  ret %"struct.std::_Rb_tree_node_base"* %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt3absx(i64) #4 comdat {
  %2 = alloca i64, align 8
  store i64 %0, i64* %2, align 8
  %3 = load i64, i64* %2, align 8
  %4 = add i64 0, 4557991402335134634
  %5 = sub i64 %4, %3
  %6 = sub i64 %5, 4557991402335134634
  %7 = sub i64 0, %3
  %8 = icmp sge i64 %3, 0
  %9 = select i1 %8, i64 %3, i64 %6
  ret i64 %9
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt3setIxSt4lessIxESaIxEE6insertEOx(%"class.std::set"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::pair", align 8
  %4 = alloca %"class.std::set"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca %"struct.std::pair.23", align 8
  store %"class.std::set"* %0, %"class.std::set"** %4, align 8
  store i64* %1, i64** %5, align 8
  %7 = load %"class.std::set"*, %"class.std::set"** %4, align 8
  %8 = getelementptr inbounds %"class.std::set", %"class.std::set"* %7, i32 0, i32 0
  %9 = load i64*, i64** %5, align 8
  %10 = call dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %9) #3
  %11 = call { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE16_M_insert_uniqueIxEESt4pairISt17_Rb_tree_iteratorIxEbEOT_(%"class.std::_Rb_tree.0"* %8, i64* dereferenceable(8) %10)
  %12 = bitcast %"struct.std::pair.23"* %6 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %13 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %12, i32 0, i32 0
  %14 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %11, 0
  store %"struct.std::_Rb_tree_node_base"* %14, %"struct.std::_Rb_tree_node_base"** %13, align 8
  %15 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %12, i32 0, i32 1
  %16 = extractvalue { %"struct.std::_Rb_tree_node_base"*, i8 } %11, 1
  store i8 %16, i8* %15, align 8
  %17 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %6, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %6, i32 0, i32 1
  call void @_ZNSt4pairISt23_Rb_tree_const_iteratorIxEbEC2IRSt17_Rb_tree_iteratorIxERbvEEOT_OT0_(%"struct.std::pair"* %3, %"struct.std::_Rb_tree_iterator.24"* dereferenceable(8) %17, i8* dereferenceable(1) %18)
  %19 = bitcast %"struct.std::pair"* %3 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %20 = load { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %19, align 8
  ret { %"struct.std::_Rb_tree_node_base"*, i8 } %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator.4"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %14) #3
  invoke void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %9, i64* %13, %"class.std::allocator.4"* dereferenceable(1) %15)
          to label %16 unwind label %72

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.28
  %18 = load i32, i32* @y.29
  %19 = add i32 %17, 173127878
  %20 = sub i32 %19, 1
  %21 = sub i32 %20, 173127878
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  br i1 %41, label %43, label %121

; <label>:43:                                     ; preds = %16, %121
  %44 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base"* %44) #3
  %45 = load i32, i32* @x.28
  %46 = load i32, i32* @y.29
  %47 = add i32 %45, -1062423055
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -1062423055
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  br i1 %69, label %71, label %121

; <label>:71:                                     ; preds = %43
  ret void

; <label>:72:                                     ; preds = %1
  %73 = landingpad { i8*, i32 }
          catch i8* null
  %74 = extractvalue { i8*, i32 } %73, 0
  store i8* %74, i8** %3, align 8
  %75 = extractvalue { i8*, i32 } %73, 1
  store i32 %75, i32* %4, align 4
  %76 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base"* %76) #3
  br label %77

; <label>:77:                                     ; preds = %72
  %78 = load i32, i32* @x.28
  %79 = load i32, i32* @y.29
  %80 = sub i32 %78, -499588255
  %81 = sub i32 %80, 1
  %82 = add i32 %81, -499588255
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = and i1 %86, %87
  %89 = xor i1 %86, %87
  %90 = or i1 %88, %89
  %91 = or i1 %86, %87
  br i1 %90, label %92, label %123

; <label>:92:                                     ; preds = %77, %123
  %93 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %93) #11
  %94 = load i32, i32* @x.28
  %95 = load i32, i32* @y.29
  %96 = add i32 %94, -1639226157
  %97 = sub i32 %96, 1
  %98 = sub i32 %97, -1639226157
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = xor i1 %102, true
  %105 = xor i1 %103, true
  %106 = xor i1 false, true
  %107 = and i1 %104, false
  %108 = and i1 %102, %106
  %109 = and i1 %105, false
  %110 = and i1 %103, %106
  %111 = or i1 %107, %108
  %112 = or i1 %109, %110
  %113 = xor i1 %111, %112
  %114 = or i1 %104, %105
  %115 = xor i1 %114, true
  %116 = or i1 false, %106
  %117 = and i1 %115, %116
  %118 = or i1 %113, %117
  %119 = or i1 %102, %103
  br i1 %118, label %120, label %123

; <label>:120:                                    ; preds = %92
  unreachable

; <label>:121:                                    ; preds = %43, %16
  %122 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base"* %122) #3
  br label %43

; <label>:123:                                    ; preds = %92, %77
  %124 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %124) #11
  br label %92
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8multimapIxSt6vectorIxSaIxEESt4lessIxESaISt4pairIKxS2_EEE5beginEv(%"class.std::multimap"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %3 = alloca %"class.std::multimap"*, align 8
  store %"class.std::multimap"* %0, %"class.std::multimap"** %3, align 8
  %4 = load %"class.std::multimap"*, %"class.std::multimap"** %3, align 8
  %5 = getelementptr inbounds %"class.std::multimap", %"class.std::multimap"* %4, i32 0, i32 0
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE5beginEv(%"class.std::_Rb_tree"* %5) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %2, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %2, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  ret %"struct.std::_Rb_tree_node_base"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt3setIxSt4lessIxESaIxEE4sizeEv(%"class.std::set"*) #4 comdat align 2 {
  %2 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %2, align 8
  %3 = load %"class.std::set"*, %"class.std::set"** %2, align 8
  %4 = getelementptr inbounds %"class.std::set", %"class.std::set"* %3, i32 0, i32 0
  %5 = call i64 @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE4sizeEv(%"class.std::_Rb_tree.0"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt8multisetISt6vectorIxSaIxEESt4lessIS2_ESaIS2_EEEC2Ev(%"class.std::allocator.9"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %2, align 8
  %3 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %2, align 8
  %4 = bitcast %"class.std::allocator.9"* %3 to %"class.__gnu_cxx::new_allocator.10"*
  call void @_ZN9__gnu_cxx13new_allocatorISt8multisetISt6vectorIxSaIxEESt4lessIS4_ESaIS4_EEEC2Ev(%"class.__gnu_cxx::new_allocator.10"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt8multisetIS_IxSaIxEESt4lessIS2_ESaIS2_EESaIS6_EEC2EmRKS7_(%"class.std::vector.7"*, i64, %"class.std::allocator.9"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.7"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.9"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.9"* %2, %"class.std::allocator.9"** %6, align 8
  %9 = load %"class.std::vector.7"*, %"class.std::vector.7"** %4, align 8
  %10 = bitcast %"class.std::vector.7"* %9 to %"struct.std::_Vector_base.8"*
  %11 = load i64, i64* %5, align 8
  %12 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %6, align 8
  call void @_ZNSt12_Vector_baseISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EESaIS7_EEC2EmRKS8_(%"struct.std::_Vector_base.8"* %10, i64 %11, %"class.std::allocator.9"* dereferenceable(1) %12)
  %13 = load i64, i64* %5, align 8
  invoke void @_ZNSt6vectorISt8multisetIS_IxSaIxEESt4lessIS2_ESaIS2_EESaIS6_EE21_M_default_initializeEm(%"class.std::vector.7"* %9, i64 %13)
          to label %14 unwind label %15

; <label>:14:                                     ; preds = %3
  ret void

; <label>:15:                                     ; preds = %3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  store i8* %17, i8** %7, align 8
  %18 = extractvalue { i8*, i32 } %16, 1
  store i32 %18, i32* %8, align 4
  %19 = bitcast %"class.std::vector.7"* %9 to %"struct.std::_Vector_base.8"*
  call void @_ZNSt12_Vector_baseISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EESaIS7_EED2Ev(%"struct.std::_Vector_base.8"* %19) #3
  br label %20

; <label>:20:                                     ; preds = %15
  %21 = load i8*, i8** %7, align 8
  %22 = load i32, i32* %8, align 4
  %23 = insertvalue { i8*, i32 } undef, i8* %21, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt8multisetISt6vectorIxSaIxEESt4lessIS2_ESaIS2_EEED2Ev(%"class.std::allocator.9"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %2, align 8
  %3 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %2, align 8
  %4 = bitcast %"class.std::allocator.9"* %3 to %"class.__gnu_cxx::new_allocator.10"*
  call void @_ZN9__gnu_cxx13new_allocatorISt8multisetISt6vectorIxSaIxEESt4lessIS4_ESaIS4_EEED2Ev(%"class.__gnu_cxx::new_allocator.10"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt3setIxSt4lessIxESaIxEE5beginEv(%"class.std::set"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %3 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %3, align 8
  %4 = load %"class.std::set"*, %"class.std::set"** %3, align 8
  %5 = getelementptr inbounds %"class.std::set", %"class.std::set"* %4, i32 0, i32 0
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5beginEv(%"class.std::_Rb_tree.0"* %5) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %2, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %2, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  ret %"struct.std::_Rb_tree_node_base"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorIxEneERKS0_(%"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"* dereferenceable(8)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %1, %"struct.std::_Rb_tree_const_iterator"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %8, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %11 = icmp ne %"struct.std::_Rb_tree_node_base"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt3setIxSt4lessIxESaIxEE3endEv(%"class.std::set"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %3 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %3, align 8
  %4 = load %"class.std::set"*, %"class.std::set"** %3, align 8
  %5 = getelementptr inbounds %"class.std::set", %"class.std::set"* %4, i32 0, i32 0
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE3endEv(%"class.std::_Rb_tree.0"* %5) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %2, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %2, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  ret %"struct.std::_Rb_tree_node_base"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt6vectorIxSaIxEEEEneERKS6_(%"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"* dereferenceable(8)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_iterator"* %1, %"struct.std::_Rb_tree_iterator"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %8, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %11 = icmp ne %"struct.std::_Rb_tree_node_base"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8multimapIxSt6vectorIxSaIxEESt4lessIxESaISt4pairIKxS2_EEE3endEv(%"class.std::multimap"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.48
  %6 = load i32, i32* @y.49
  %7 = sub i32 %5, -39106252
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -39106252
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1589689001, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1589689001, label %19
    i32 1824844432, label %27
    i32 -395739574, label %51
    i32 427362122, label %53
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1824844432, i32 427362122
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %29 = alloca %"class.std::multimap"*, align 8
  store %"class.std::multimap"* %0, %"class.std::multimap"** %29, align 8
  %30 = load %"class.std::multimap"*, %"class.std::multimap"** %29, align 8
  %31 = getelementptr inbounds %"class.std::multimap", %"class.std::multimap"* %30, i32 0, i32 0
  %32 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE3endEv(%"class.std::_Rb_tree"* %31) #3
  %33 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %28, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %32, %"struct.std::_Rb_tree_node_base"** %33, align 8
  %34 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %28, i32 0, i32 0
  %35 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %34, align 8
  store %"struct.std::_Rb_tree_node_base"* %35, %"struct.std::_Rb_tree_node_base"** %2
  %36 = load i32, i32* @x.48
  %37 = load i32, i32* @y.49
  %38 = sub i32 %36, -219530242
  %39 = sub i32 %38, 1
  %40 = add i32 %39, -219530242
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 -395739574, i32 427362122
  store i32 %50, i32* %15
  br label %62

; <label>:51:                                     ; preds = %16
  %52 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2
  ret %"struct.std::_Rb_tree_node_base"* %52

; <label>:53:                                     ; preds = %16
  %54 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %55 = alloca %"class.std::multimap"*, align 8
  store %"class.std::multimap"* %0, %"class.std::multimap"** %55, align 8
  %56 = load %"class.std::multimap"*, %"class.std::multimap"** %55, align 8
  %57 = getelementptr inbounds %"class.std::multimap", %"class.std::multimap"* %56, i32 0, i32 0
  %58 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE3endEv(%"class.std::_Rb_tree"* %57) #3
  %59 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %54, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %58, %"struct.std::_Rb_tree_node_base"** %59, align 8
  %60 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %54, i32 0, i32 0
  %61 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %60, align 8
  store i32 1824844432, i32* %15
  br label %62

; <label>:62:                                     ; preds = %53, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::pair.18"* @_ZNKSt17_Rb_tree_iteratorISt4pairIKxSt6vectorIxSaIxEEEEdeEv(%"struct.std::_Rb_tree_iterator"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node.20"*
  %7 = invoke %"struct.std::pair.18"* @_ZNSt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEE9_M_valptrEv(%"struct.std::_Rb_tree_node.20"* %6)
          to label %8 unwind label %9

; <label>:8:                                      ; preds = %1
  ret %"struct.std::pair.18"* %7

; <label>:9:                                      ; preds = %1
  %10 = landingpad { i8*, i32 }
          catch i8* null
  %11 = extractvalue { i8*, i32 } %10, 0
  call void @__clang_call_terminate(i8* %11) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNKSt23_Rb_tree_const_iteratorIxEdeEv(%"struct.std::_Rb_tree_const_iterator"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node"*
  %7 = invoke i64* @_ZNKSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %6)
          to label %8 unwind label %9

; <label>:8:                                      ; preds = %1
  ret i64* %7

; <label>:9:                                      ; preds = %1
  %10 = landingpad { i8*, i32 }
          catch i8* null
  %11 = extractvalue { i8*, i32 } %10, 0
  call void @__clang_call_terminate(i8* %11) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(48) %"class.std::multiset"* @_ZNSt6vectorISt8multisetIS_IxSaIxEESt4lessIS2_ESaIS2_EESaIS6_EEixEm(%"class.std::vector.7"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector.7"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.7"*, %"class.std::vector.7"** %3, align 8
  %6 = bitcast %"class.std::vector.7"* %5 to %"struct.std::_Vector_base.8"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::multiset"*, %"class.std::multiset"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::multiset", %"class.std::multiset"* %9, i64 %10
  ret %"class.std::multiset"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8multisetISt6vectorIxSaIxEESt4lessIS2_ESaIS2_EE6insertEOS2_(%"class.std::multiset"*, %"class.std::vector"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator.19", align 8
  %4 = alloca %"class.std::multiset"*, align 8
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca %"struct.std::_Rb_tree_iterator.29", align 8
  store %"class.std::multiset"* %0, %"class.std::multiset"** %4, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %5, align 8
  %7 = load %"class.std::multiset"*, %"class.std::multiset"** %4, align 8
  %8 = getelementptr inbounds %"class.std::multiset", %"class.std::multiset"* %7, i32 0, i32 0
  %9 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %10 = call dereferenceable(24) %"class.std::vector"* @_ZSt4moveIRSt6vectorIxSaIxEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::vector"* dereferenceable(24) %9) #3
  %11 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE15_M_insert_equalIS2_EESt17_Rb_tree_iteratorIS2_EOT_(%"class.std::_Rb_tree.12"* %8, %"class.std::vector"* dereferenceable(24) %10)
  %12 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.29", %"struct.std::_Rb_tree_iterator.29"* %6, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %12, align 8
  call void @_ZNSt23_Rb_tree_const_iteratorISt6vectorIxSaIxEEEC2ERKSt17_Rb_tree_iteratorIS2_E(%"struct.std::_Rb_tree_const_iterator.19"* %3, %"struct.std::_Rb_tree_iterator.29"* dereferenceable(8) %6) #3
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.19", %"struct.std::_Rb_tree_const_iterator.19"* %3, i32 0, i32 0
  %14 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %13, align 8
  ret %"struct.std::_Rb_tree_node_base"* %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt6vectorIxSaIxEEEEppEi(%"struct.std::_Rb_tree_iterator"*, i32) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node_base"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.58
  %7 = load i32, i32* @y.59
  %8 = add i32 %6, -662709300
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -662709300
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1556090604, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %83
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1556090604, label %20
    i32 805707228, label %40
    i32 918373464, label %68
    i32 -478083305, label %70
  ]

; <label>:19:                                     ; preds = %17
  br label %83

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 805707228, i32 -478083305
  store i32 %39, i32* %16
  br label %83

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %42 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %43 = alloca i32, align 4
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %42, align 8
  store i32 %1, i32* %43, align 4
  %44 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %42, align 8
  %45 = bitcast %"struct.std::_Rb_tree_iterator"* %41 to i8*
  %46 = bitcast %"struct.std::_Rb_tree_iterator"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %46, i64 8, i32 8, i1 false)
  %47 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %44, i32 0, i32 0
  %48 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %47, align 8
  %49 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %48) #13
  %50 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %44, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %49, %"struct.std::_Rb_tree_node_base"** %50, align 8
  %51 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %41, i32 0, i32 0
  %52 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %51, align 8
  store %"struct.std::_Rb_tree_node_base"* %52, %"struct.std::_Rb_tree_node_base"** %3
  %53 = load i32, i32* @x.58
  %54 = load i32, i32* @y.59
  %55 = add i32 %53, 1546848086
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, 1546848086
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 918373464, i32 -478083305
  store i32 %67, i32* %16
  br label %83

; <label>:68:                                     ; preds = %17
  %69 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %3
  ret %"struct.std::_Rb_tree_node_base"* %69

; <label>:70:                                     ; preds = %17
  %71 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %72 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %73 = alloca i32, align 4
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %72, align 8
  store i32 %1, i32* %73, align 4
  %74 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %72, align 8
  %75 = bitcast %"struct.std::_Rb_tree_iterator"* %71 to i8*
  %76 = bitcast %"struct.std::_Rb_tree_iterator"* %74 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %75, i8* %76, i64 8, i32 8, i1 false)
  %77 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %74, i32 0, i32 0
  %78 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %77, align 8
  %79 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %78) #13
  %80 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %74, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %79, %"struct.std::_Rb_tree_node_base"** %80, align 8
  %81 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %71, i32 0, i32 0
  %82 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %81, align 8
  store i32 805707228, i32* %16
  br label %83

; <label>:83:                                     ; preds = %70, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt23_Rb_tree_const_iteratorIxEppEi(%"struct.std::_Rb_tree_const_iterator"*, i32) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node_base"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.60
  %7 = load i32, i32* @y.61
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 2087778532, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2087778532, label %19
    i32 1084677530, label %27
    i32 -1033416031, label %55
    i32 -1707251790, label %57
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1084677530, i32 -1707251790
  store i32 %26, i32* %15
  br label %70

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %29 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %30 = alloca i32, align 4
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %29, align 8
  store i32 %1, i32* %30, align 4
  %31 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %29, align 8
  %32 = bitcast %"struct.std::_Rb_tree_const_iterator"* %28 to i8*
  %33 = bitcast %"struct.std::_Rb_tree_const_iterator"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 8, i32 8, i1 false)
  %34 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %31, i32 0, i32 0
  %35 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %34, align 8
  %36 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %35) #13
  %37 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %31, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %36, %"struct.std::_Rb_tree_node_base"** %37, align 8
  %38 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %28, i32 0, i32 0
  %39 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %38, align 8
  store %"struct.std::_Rb_tree_node_base"* %39, %"struct.std::_Rb_tree_node_base"** %3
  %40 = load i32, i32* @x.60
  %41 = load i32, i32* @y.61
  %42 = sub i32 %40, 1970967793
  %43 = sub i32 %42, 1
  %44 = add i32 %43, 1970967793
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -1033416031, i32 -1707251790
  store i32 %54, i32* %15
  br label %70

; <label>:55:                                     ; preds = %16
  %56 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %3
  ret %"struct.std::_Rb_tree_node_base"* %56

; <label>:57:                                     ; preds = %16
  %58 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %59 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %60 = alloca i32, align 4
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %59, align 8
  store i32 %1, i32* %60, align 4
  %61 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %59, align 8
  %62 = bitcast %"struct.std::_Rb_tree_const_iterator"* %58 to i8*
  %63 = bitcast %"struct.std::_Rb_tree_const_iterator"* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %62, i8* %63, i64 8, i32 8, i1 false)
  %64 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %61, i32 0, i32 0
  %65 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %64, align 8
  %66 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %65) #13
  %67 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %61, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %66, %"struct.std::_Rb_tree_node_base"** %67, align 8
  %68 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %58, i32 0, i32 0
  %69 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %68, align 8
  store i32 1084677530, i32* %15
  br label %70

; <label>:70:                                     ; preds = %57, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt8multisetISt6vectorIxSaIxEESt4lessIS2_ESaIS2_EE5beginEv(%"class.std::multiset"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_const_iterator.19", align 8
  %3 = alloca %"class.std::multiset"*, align 8
  store %"class.std::multiset"* %0, %"class.std::multiset"** %3, align 8
  %4 = load %"class.std::multiset"*, %"class.std::multiset"** %3, align 8
  %5 = getelementptr inbounds %"class.std::multiset", %"class.std::multiset"* %4, i32 0, i32 0
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE5beginEv(%"class.std::_Rb_tree.12"* %5) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.19", %"struct.std::_Rb_tree_const_iterator.19"* %2, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.19", %"struct.std::_Rb_tree_const_iterator.19"* %2, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  ret %"struct.std::_Rb_tree_node_base"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt23_Rb_tree_const_iteratorISt6vectorIxSaIxEEEneERKS3_(%"struct.std::_Rb_tree_const_iterator.19"*, %"struct.std::_Rb_tree_const_iterator.19"* dereferenceable(8)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator.19"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_const_iterator.19"*, align 8
  store %"struct.std::_Rb_tree_const_iterator.19"* %0, %"struct.std::_Rb_tree_const_iterator.19"** %3, align 8
  store %"struct.std::_Rb_tree_const_iterator.19"* %1, %"struct.std::_Rb_tree_const_iterator.19"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_const_iterator.19"*, %"struct.std::_Rb_tree_const_iterator.19"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.19", %"struct.std::_Rb_tree_const_iterator.19"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = load %"struct.std::_Rb_tree_const_iterator.19"*, %"struct.std::_Rb_tree_const_iterator.19"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.19", %"struct.std::_Rb_tree_const_iterator.19"* %8, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %11 = icmp ne %"struct.std::_Rb_tree_node_base"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt8multisetISt6vectorIxSaIxEESt4lessIS2_ESaIS2_EE3endEv(%"class.std::multiset"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_const_iterator.19", align 8
  %3 = alloca %"class.std::multiset"*, align 8
  store %"class.std::multiset"* %0, %"class.std::multiset"** %3, align 8
  %4 = load %"class.std::multiset"*, %"class.std::multiset"** %3, align 8
  %5 = getelementptr inbounds %"class.std::multiset", %"class.std::multiset"* %4, i32 0, i32 0
  %6 = call %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE3endEv(%"class.std::_Rb_tree.12"* %5) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.19", %"struct.std::_Rb_tree_const_iterator.19"* %2, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %6, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.19", %"struct.std::_Rb_tree_const_iterator.19"* %2, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  ret %"struct.std::_Rb_tree_node_base"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector"* @_ZNKSt23_Rb_tree_const_iteratorISt6vectorIxSaIxEEEdeEv(%"struct.std::_Rb_tree_const_iterator.19"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Rb_tree_const_iterator.19"*, align 8
  store %"struct.std::_Rb_tree_const_iterator.19"* %0, %"struct.std::_Rb_tree_const_iterator.19"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_const_iterator.19"*, %"struct.std::_Rb_tree_const_iterator.19"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.19", %"struct.std::_Rb_tree_const_iterator.19"* %3, i32 0, i32 0
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node.27"*
  %7 = invoke %"class.std::vector"* @_ZNKSt13_Rb_tree_nodeISt6vectorIxSaIxEEE9_M_valptrEv(%"struct.std::_Rb_tree_node.27"* %6)
          to label %8 unwind label %9

; <label>:8:                                      ; preds = %1
  ret %"class.std::vector"* %7

; <label>:9:                                      ; preds = %1
  %10 = landingpad { i8*, i32 }
          catch i8* null
  %11 = extractvalue { i8*, i32 } %10, 0
  call void @__clang_call_terminate(i8* %11) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNKSt6vectorIxSaIxEEixEm(%"class.std::vector"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds i64, i64* %9, i64 %10
  ret i64* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt23_Rb_tree_const_iteratorISt6vectorIxSaIxEEEppEi(%"struct.std::_Rb_tree_const_iterator.19"*, i32) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator.19", align 8
  %4 = alloca %"struct.std::_Rb_tree_const_iterator.19"*, align 8
  %5 = alloca i32, align 4
  store %"struct.std::_Rb_tree_const_iterator.19"* %0, %"struct.std::_Rb_tree_const_iterator.19"** %4, align 8
  store i32 %1, i32* %5, align 4
  %6 = load %"struct.std::_Rb_tree_const_iterator.19"*, %"struct.std::_Rb_tree_const_iterator.19"** %4, align 8
  %7 = bitcast %"struct.std::_Rb_tree_const_iterator.19"* %3 to i8*
  %8 = bitcast %"struct.std::_Rb_tree_const_iterator.19"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* %8, i64 8, i32 8, i1 false)
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.19", %"struct.std::_Rb_tree_const_iterator.19"* %6, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  %11 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %10) #13
  %12 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.19", %"struct.std::_Rb_tree_const_iterator.19"* %6, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %12, align 8
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.19", %"struct.std::_Rb_tree_const_iterator.19"* %3, i32 0, i32 0
  %14 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %13, align 8
  ret %"struct.std::_Rb_tree_node_base"* %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt8multisetIS_IxSaIxEESt4lessIS2_ESaIS2_EESaIS6_EED2Ev(%"class.std::vector.7"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.7"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %2, align 8
  %5 = load %"class.std::vector.7"*, %"class.std::vector.7"** %2, align 8
  %6 = bitcast %"class.std::vector.7"* %5 to %"struct.std::_Vector_base.8"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::multiset"*, %"class.std::multiset"** %8, align 8
  %10 = bitcast %"class.std::vector.7"* %5 to %"struct.std::_Vector_base.8"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::multiset"*, %"class.std::multiset"** %12, align 8
  %14 = bitcast %"class.std::vector.7"* %5 to %"struct.std::_Vector_base.8"*
  %15 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt12_Vector_baseISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EESaIS7_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"* %14) #3
  invoke void @_ZSt8_DestroyIPSt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EES7_EvT_S9_RSaIT0_E(%"class.std::multiset"* %9, %"class.std::multiset"* %13, %"class.std::allocator.9"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.7"* %5 to %"struct.std::_Vector_base.8"*
  call void @_ZNSt12_Vector_baseISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EESaIS7_EED2Ev(%"struct.std::_Vector_base.8"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector.7"* %5 to %"struct.std::_Vector_base.8"*
  call void @_ZNSt12_Vector_baseISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EESaIS7_EED2Ev(%"struct.std::_Vector_base.8"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %24) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt3setIxSt4lessIxESaIxEED2Ev(%"class.std::set"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::set"*, align 8
  store %"class.std::set"* %0, %"class.std::set"** %2, align 8
  %3 = load %"class.std::set"*, %"class.std::set"** %2, align 8
  %4 = getelementptr inbounds %"class.std::set", %"class.std::set"* %3, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEED2Ev(%"class.std::_Rb_tree.0"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8multimapIxSt6vectorIxSaIxEESt4lessIxESaISt4pairIKxS2_EEED2Ev(%"class.std::multimap"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::multimap"*, align 8
  store %"class.std::multimap"* %0, %"class.std::multimap"** %2, align 8
  %3 = load %"class.std::multimap"*, %"class.std::multimap"** %2, align 8
  %4 = getelementptr inbounds %"class.std::multimap", %"class.std::multimap"* %3, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EED2Ev(%"class.std::_Rb_tree"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEED2Ev(%"class.std::_Rb_tree.0"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.80
  %3 = load i32, i32* @y.81
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 true, true
  %14 = and i1 %11, true
  %15 = and i1 %9, %13
  %16 = and i1 %12, true
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 true, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %109

; <label>:27:                                     ; preds = %1, %109
  %28 = alloca %"class.std::_Rb_tree.0"*, align 8
  %29 = alloca i8*
  %30 = alloca i32
  store %"class.std::_Rb_tree.0"* %0, %"class.std::_Rb_tree.0"** %28, align 8
  %31 = load %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %28, align 8
  %32 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv(%"class.std::_Rb_tree.0"* %31) #3
  %33 = load i32, i32* @x.80
  %34 = load i32, i32* @y.81
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  br i1 %56, label %58, label %109

; <label>:58:                                     ; preds = %27
  invoke void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_eraseEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree.0"* %31, %"struct.std::_Rb_tree_node"* %32)
          to label %59 unwind label %102

; <label>:59:                                     ; preds = %58
  %60 = load i32, i32* @x.80
  %61 = load i32, i32* @y.81
  %62 = sub i32 0, 1
  %63 = add i32 %60, %62
  %64 = sub i32 %60, 1
  %65 = mul i32 %60, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %61, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 false, true
  %72 = and i1 %69, false
  %73 = and i1 %67, %71
  %74 = and i1 %70, false
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 false, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  br i1 %83, label %85, label %115

; <label>:85:                                     ; preds = %59, %115
  %86 = getelementptr inbounds %"class.std::_Rb_tree.0", %"class.std::_Rb_tree.0"* %31, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %86) #3
  %87 = load i32, i32* @x.80
  %88 = load i32, i32* @y.81
  %89 = add i32 %87, 587040030
  %90 = sub i32 %89, 1
  %91 = sub i32 %90, 587040030
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = and i1 %95, %96
  %98 = xor i1 %95, %96
  %99 = or i1 %97, %98
  %100 = or i1 %95, %96
  br i1 %99, label %101, label %115

; <label>:101:                                    ; preds = %85
  ret void

; <label>:102:                                    ; preds = %58
  %103 = landingpad { i8*, i32 }
          catch i8* null
  %104 = extractvalue { i8*, i32 } %103, 0
  store i8* %104, i8** %29, align 8
  %105 = extractvalue { i8*, i32 } %103, 1
  store i32 %105, i32* %30, align 4
  %106 = getelementptr inbounds %"class.std::_Rb_tree.0", %"class.std::_Rb_tree.0"* %31, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %106) #3
  br label %107

; <label>:107:                                    ; preds = %102
  %108 = load i8*, i8** %29, align 8
  call void @__clang_call_terminate(i8* %108) #11
  unreachable

; <label>:109:                                    ; preds = %27, %1
  %110 = alloca %"class.std::_Rb_tree.0"*, align 8
  %111 = alloca i8*
  %112 = alloca i32
  store %"class.std::_Rb_tree.0"* %0, %"class.std::_Rb_tree.0"** %110, align 8
  %113 = load %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %110, align 8
  %114 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv(%"class.std::_Rb_tree.0"* %113) #3
  br label %27

; <label>:115:                                    ; preds = %85, %59
  %116 = getelementptr inbounds %"class.std::_Rb_tree.0", %"class.std::_Rb_tree.0"* %31, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %116) #3
  br label %85
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_eraseEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree.0"*, %"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::_Rb_tree.0"*
  %5 = alloca %"class.std::_Rb_tree.0"*, align 8
  %6 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %7 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree.0"* %0, %"class.std::_Rb_tree.0"** %5, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %6, align 8
  %8 = load %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %5, align 8
  store %"class.std::_Rb_tree.0"* %8, %"class.std::_Rb_tree.0"** %4
  %9 = alloca i32
  store i32 -1121812897, i32* %9
  br label %10

; <label>:10:                                     ; preds = %2, %88
  %11 = load i32, i32* %9
  switch i32 %11, label %12 [
    i32 -1121812897, label %13
    i32 -228109563, label %40
    i32 1963222825, label %70
    i32 784513302, label %73
    i32 741006622, label %84
    i32 1977947319, label %85
  ]

; <label>:12:                                     ; preds = %10
  br label %88

; <label>:13:                                     ; preds = %10
  %14 = load i32, i32* @x.82
  %15 = load i32, i32* @y.83
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %15, 10
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -228109563, i32 1977947319
  store i32 %39, i32* %9
  br label %88

; <label>:40:                                     ; preds = %10
  %41 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %42 = icmp ne %"struct.std::_Rb_tree_node"* %41, null
  store i1 %42, i1* %3
  %43 = load i32, i32* @x.82
  %44 = load i32, i32* @y.83
  %45 = add i32 %43, -1802886660
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -1802886660
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 1963222825, i32 1977947319
  store i32 %69, i32* %9
  br label %88

; <label>:70:                                     ; preds = %10
  %71 = load volatile i1, i1* %3
  %72 = select i1 %71, i32 784513302, i32 741006622
  store i32 %72, i32* %9
  br label %88

; <label>:73:                                     ; preds = %10
  %74 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %75 = bitcast %"struct.std::_Rb_tree_node"* %74 to %"struct.std::_Rb_tree_node_base"*
  %76 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %75) #3
  %77 = load volatile %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %4
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_eraseEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree.0"* %77, %"struct.std::_Rb_tree_node"* %76)
  %78 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %79 = bitcast %"struct.std::_Rb_tree_node"* %78 to %"struct.std::_Rb_tree_node_base"*
  %80 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %79) #3
  store %"struct.std::_Rb_tree_node"* %80, %"struct.std::_Rb_tree_node"** %7, align 8
  %81 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %82 = load volatile %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %4
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_drop_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree.0"* %82, %"struct.std::_Rb_tree_node"* %81) #3
  %83 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %7, align 8
  store %"struct.std::_Rb_tree_node"* %83, %"struct.std::_Rb_tree_node"** %6, align 8
  store i32 -1121812897, i32* %9
  br label %88

; <label>:84:                                     ; preds = %10
  ret void

; <label>:85:                                     ; preds = %10
  %86 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %6, align 8
  %87 = icmp ne %"struct.std::_Rb_tree_node"* %86, null
  store i32 -228109563, i32* %9
  br label %88

; <label>:88:                                     ; preds = %85, %73, %70, %40, %13, %12
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv(%"class.std::_Rb_tree.0"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.0"*, align 8
  store %"class.std::_Rb_tree.0"* %0, %"class.std::_Rb_tree.0"** %2, align 8
  %3 = load %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.0", %"class.std::_Rb_tree.0"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %5, i32 0, i32 1
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = bitcast %"struct.std::_Rb_tree_node_base"* %7 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %2, align 8
  %3 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %3 to %"class.std::allocator.1"*
  call void @_ZNSaISt13_Rb_tree_nodeIxEED2Ev(%"class.std::allocator.1"* %4) #3
  ret void
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #6 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.88
  %5 = load i32, i32* @y.89
  %6 = sub i32 %4, -239768562
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -239768562
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1445644968, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %58
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1445644968, label %18
    i32 1283534304, label %38
    i32 2024637613, label %55
    i32 -1028747775, label %56
  ]

; <label>:17:                                     ; preds = %15
  br label %58

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1283534304, i32 -1028747775
  store i32 %37, i32* %14
  br label %58

; <label>:38:                                     ; preds = %15
  %39 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #11
  %40 = load i32, i32* @x.88
  %41 = load i32, i32* @y.89
  %42 = sub i32 %40, -1688551499
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -1688551499
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 2024637613, i32 -1028747775
  store i32 %54, i32* %14
  br label %58

; <label>:55:                                     ; preds = %15
  unreachable

; <label>:56:                                     ; preds = %15
  %57 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #11
  store i32 1283534304, i32* %14
  br label %58

; <label>:58:                                     ; preds = %56, %38, %18, %17
  br label %15
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.90
  %6 = load i32, i32* @y.91
  %7 = sub i32 %5, 320481952
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 320481952
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 485877558, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 485877558, label %19
    i32 -1293178510, label %39
    i32 -1374114620, label %60
    i32 1740451949, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1293178510, i32 1740451949
  store i32 %38, i32* %15
  br label %68

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %40, align 8
  %41 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %41, i32 0, i32 3
  %43 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %42, align 8
  %44 = bitcast %"struct.std::_Rb_tree_node_base"* %43 to %"struct.std::_Rb_tree_node"*
  store %"struct.std::_Rb_tree_node"* %44, %"struct.std::_Rb_tree_node"** %2
  %45 = load i32, i32* @x.90
  %46 = load i32, i32* @y.91
  %47 = sub i32 %45, 1339992205
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 1339992205
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -1374114620, i32 1740451949
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2
  ret %"struct.std::_Rb_tree_node"* %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %63, align 8
  %64 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %63, align 8
  %65 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %64, i32 0, i32 3
  %66 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %65, align 8
  %67 = bitcast %"struct.std::_Rb_tree_node_base"* %66 to %"struct.std::_Rb_tree_node"*
  store i32 -1293178510, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.92
  %6 = load i32, i32* @y.93
  %7 = add i32 %5, 1789001963
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1789001963
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -161461561, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %80
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -161461561, label %19
    i32 -1579409350, label %39
    i32 -1007635461, label %72
    i32 -1205178606, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %80

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1579409350, i32 -1205178606
  store i32 %38, i32* %15
  br label %80

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %40, align 8
  %41 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %41, i32 0, i32 2
  %43 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %42, align 8
  %44 = bitcast %"struct.std::_Rb_tree_node_base"* %43 to %"struct.std::_Rb_tree_node"*
  store %"struct.std::_Rb_tree_node"* %44, %"struct.std::_Rb_tree_node"** %2
  %45 = load i32, i32* @x.92
  %46 = load i32, i32* @y.93
  %47 = add i32 %45, -477506526
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -477506526
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -1007635461, i32 -1205178606
  store i32 %71, i32* %15
  br label %80

; <label>:72:                                     ; preds = %16
  %73 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2
  ret %"struct.std::_Rb_tree_node"* %73

; <label>:74:                                     ; preds = %16
  %75 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %75, align 8
  %76 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %75, align 8
  %77 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %76, i32 0, i32 2
  %78 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %77, align 8
  %79 = bitcast %"struct.std::_Rb_tree_node_base"* %78 to %"struct.std::_Rb_tree_node"*
  store i32 -1579409350, i32* %15
  br label %80

; <label>:80:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE12_M_drop_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree.0"*, %"struct.std::_Rb_tree_node"*) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.94
  %6 = load i32, i32* @y.95
  %7 = add i32 %5, 1988160617
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1988160617
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1331683499, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1331683499, label %19
    i32 1759173682, label %39
    i32 -650613350, label %60
    i32 889260803, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1759173682, i32 889260803
  store i32 %38, i32* %15
  br label %67

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Rb_tree.0"*, align 8
  %41 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree.0"* %0, %"class.std::_Rb_tree.0"** %40, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %41, align 8
  %42 = load %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %40, align 8
  %43 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %41, align 8
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree.0"* %42, %"struct.std::_Rb_tree_node"* %43) #3
  %44 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %41, align 8
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_put_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree.0"* %42, %"struct.std::_Rb_tree_node"* %44) #3
  %45 = load i32, i32* @x.94
  %46 = load i32, i32* @y.95
  %47 = add i32 %45, 1928925275
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, 1928925275
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -650613350, i32 889260803
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::_Rb_tree.0"*, align 8
  %63 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree.0"* %0, %"class.std::_Rb_tree.0"** %62, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %63, align 8
  %64 = load %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %62, align 8
  %65 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %63, align 8
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree.0"* %64, %"struct.std::_Rb_tree_node"* %65) #3
  %66 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %63, align 8
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_put_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree.0"* %64, %"struct.std::_Rb_tree_node"* %66) #3
  store i32 1759173682, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree.0"*, %"struct.std::_Rb_tree_node"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Rb_tree.0"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree.0"* %0, %"class.std::_Rb_tree.0"** %3, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
  %5 = load %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %3, align 8
  %6 = call dereferenceable(1) %"class.std::allocator.1"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.0"* %5) #3
  %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  %8 = invoke i64* @_ZNSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %7)
          to label %9 unwind label %54

; <label>:9:                                      ; preds = %2
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE7destroyIxEEvRS2_PT_(%"class.std::allocator.1"* dereferenceable(1) %6, i64* %8)
          to label %10 unwind label %54

; <label>:10:                                     ; preds = %9
  %11 = load i32, i32* @x.96
  %12 = load i32, i32* @y.97
  %13 = add i32 %11, -1538018144
  %14 = sub i32 %13, 1
  %15 = sub i32 %14, -1538018144
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %12, 10
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  br i1 %23, label %25, label %57

; <label>:25:                                     ; preds = %10, %57
  %26 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  %27 = load i32, i32* @x.96
  %28 = load i32, i32* @y.97
  %29 = add i32 %27, 894331786
  %30 = sub i32 %29, 1
  %31 = sub i32 %30, 894331786
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 false, true
  %40 = and i1 %37, false
  %41 = and i1 %35, %39
  %42 = and i1 %38, false
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 false, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  br i1 %51, label %53, label %57

; <label>:53:                                     ; preds = %25
  ret void

; <label>:54:                                     ; preds = %9, %2
  %55 = landingpad { i8*, i32 }
          catch i8* null
  %56 = extractvalue { i8*, i32 } %55, 0
  call void @__clang_call_terminate(i8* %56) #11
  unreachable

; <label>:57:                                     ; preds = %25, %10
  %58 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  br label %25
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_put_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree.0"*, %"struct.std::_Rb_tree_node"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Rb_tree.0"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree.0"* %0, %"class.std::_Rb_tree.0"** %3, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %4, align 8
  %5 = load %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %3, align 8
  %6 = call dereferenceable(1) %"class.std::allocator.1"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.0"* %5) #3
  %7 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4, align 8
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE10deallocateERS2_PS1_m(%"class.std::allocator.1"* dereferenceable(1) %6, %"struct.std::_Rb_tree_node"* %7, i64 1)
          to label %8 unwind label %51

; <label>:8:                                      ; preds = %2
  %9 = load i32, i32* @x.98
  %10 = load i32, i32* @y.99
  %11 = add i32 %9, 276857184
  %12 = sub i32 %11, 1
  %13 = sub i32 %12, 276857184
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %10, 10
  %19 = xor i1 %17, true
  %20 = xor i1 %18, true
  %21 = xor i1 false, true
  %22 = and i1 %19, false
  %23 = and i1 %17, %21
  %24 = and i1 %20, false
  %25 = and i1 %18, %21
  %26 = or i1 %22, %23
  %27 = or i1 %24, %25
  %28 = xor i1 %26, %27
  %29 = or i1 %19, %20
  %30 = xor i1 %29, true
  %31 = or i1 false, %21
  %32 = and i1 %30, %31
  %33 = or i1 %28, %32
  %34 = or i1 %17, %18
  br i1 %33, label %35, label %84

; <label>:35:                                     ; preds = %8, %84
  %36 = load i32, i32* @x.98
  %37 = load i32, i32* @y.99
  %38 = sub i32 %36, -980264588
  %39 = sub i32 %38, 1
  %40 = add i32 %39, -980264588
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  br i1 %48, label %50, label %84

; <label>:50:                                     ; preds = %35
  ret void

; <label>:51:                                     ; preds = %2
  %52 = load i32, i32* @x.98
  %53 = load i32, i32* @y.99
  %54 = add i32 %52, 864179649
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, 864179649
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  br i1 %64, label %66, label %85

; <label>:66:                                     ; preds = %51, %85
  %67 = landingpad { i8*, i32 }
          catch i8* null
  %68 = extractvalue { i8*, i32 } %67, 0
  call void @__clang_call_terminate(i8* %68) #11
  %69 = load i32, i32* @x.98
  %70 = load i32, i32* @y.99
  %71 = add i32 %69, 235477086
  %72 = sub i32 %71, 1
  %73 = sub i32 %72, 235477086
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  br i1 %81, label %83, label %85

; <label>:83:                                     ; preds = %66
  unreachable

; <label>:84:                                     ; preds = %35, %8
  br label %35

; <label>:85:                                     ; preds = %66, %51
  %86 = landingpad { i8*, i32 }
          catch i8* null
  %87 = extractvalue { i8*, i32 } %86, 0
  call void @__clang_call_terminate(i8* %87) #11
  br label %66
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE7destroyIxEEvRS2_PT_(%"class.std::allocator.1"* dereferenceable(1), i64*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.100
  %6 = load i32, i32* @y.101
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 130817367, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %66
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 130817367, label %18
    i32 -286915133, label %26
    i32 1326565397, label %59
    i32 -99375780, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %66

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -286915133, i32 -99375780
  store i32 %25, i32* %14
  br label %66

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.1"*, align 8
  %28 = alloca i64*, align 8
  store %"class.std::allocator.1"* %0, %"class.std::allocator.1"** %27, align 8
  store i64* %1, i64** %28, align 8
  %29 = load %"class.std::allocator.1"*, %"class.std::allocator.1"** %27, align 8
  %30 = bitcast %"class.std::allocator.1"* %29 to %"class.__gnu_cxx::new_allocator.2"*
  %31 = load i64*, i64** %28, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE7destroyIxEEvPT_(%"class.__gnu_cxx::new_allocator.2"* %30, i64* %31)
  %32 = load i32, i32* @x.100
  %33 = load i32, i32* @y.101
  %34 = add i32 %32, -2006609063
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -2006609063
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 1326565397, i32 -99375780
  store i32 %58, i32* %14
  br label %66

; <label>:59:                                     ; preds = %15
  ret void

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::allocator.1"*, align 8
  %62 = alloca i64*, align 8
  store %"class.std::allocator.1"* %0, %"class.std::allocator.1"** %61, align 8
  store i64* %1, i64** %62, align 8
  %63 = load %"class.std::allocator.1"*, %"class.std::allocator.1"** %61, align 8
  %64 = bitcast %"class.std::allocator.1"* %63 to %"class.__gnu_cxx::new_allocator.2"*
  %65 = load i64*, i64** %62, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE7destroyIxEEvPT_(%"class.__gnu_cxx::new_allocator.2"* %64, i64* %65)
  store i32 -286915133, i32* %14
  br label %66

; <label>:66:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.1"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.0"*) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.1"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.102
  %6 = load i32, i32* @y.103
  %7 = sub i32 %5, 1965589620
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1965589620
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1855586585, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1855586585, label %19
    i32 281446882, label %27
    i32 -80550239, label %47
    i32 -972082228, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 281446882, i32 -972082228
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::_Rb_tree.0"*, align 8
  store %"class.std::_Rb_tree.0"* %0, %"class.std::_Rb_tree.0"** %28, align 8
  %29 = load %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %28, align 8
  %30 = getelementptr inbounds %"class.std::_Rb_tree.0", %"class.std::_Rb_tree.0"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %30 to %"class.std::allocator.1"*
  store %"class.std::allocator.1"* %31, %"class.std::allocator.1"** %2
  %32 = load i32, i32* @x.102
  %33 = load i32, i32* @y.103
  %34 = add i32 %32, -2141333633
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -2141333633
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -80550239, i32 -972082228
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile %"class.std::allocator.1"*, %"class.std::allocator.1"** %2
  ret %"class.std::allocator.1"* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::_Rb_tree.0"*, align 8
  store %"class.std::_Rb_tree.0"* %0, %"class.std::_Rb_tree.0"** %50, align 8
  %51 = load %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %50, align 8
  %52 = getelementptr inbounds %"class.std::_Rb_tree.0", %"class.std::_Rb_tree.0"* %51, i32 0, i32 0
  %53 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %52 to %"class.std::allocator.1"*
  store i32 281446882, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %3, i32 0, i32 1
  %5 = call i64* @_ZN9__gnu_cxx16__aligned_membufIxE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* %4) #3
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE7destroyIxEEvPT_(%"class.__gnu_cxx::new_allocator.2"*, i64*) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.2"*, align 8
  %4 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.2"* %0, %"class.__gnu_cxx::new_allocator.2"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.2"*, %"class.__gnu_cxx::new_allocator.2"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZN9__gnu_cxx16__aligned_membufIxE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.108
  %6 = load i32, i32* @y.109
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1844265317, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %53
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1844265317, label %18
    i32 1215019548, label %26
    i32 -869341864, label %46
    i32 -1363881165, label %48
  ]

; <label>:17:                                     ; preds = %15
  br label %53

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1215019548, i32 -1363881165
  store i32 %25, i32* %14
  br label %53

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %27, align 8
  %28 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %27, align 8
  %29 = call i8* @_ZN9__gnu_cxx16__aligned_membufIxE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* %28) #3
  %30 = bitcast i8* %29 to i64*
  store i64* %30, i64** %2
  %31 = load i32, i32* @x.108
  %32 = load i32, i32* @y.109
  %33 = sub i32 %31, -582333178
  %34 = sub i32 %33, 1
  %35 = add i32 %34, -582333178
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -869341864, i32 -1363881165
  store i32 %45, i32* %14
  br label %53

; <label>:46:                                     ; preds = %15
  %47 = load volatile i64*, i64** %2
  ret i64* %47

; <label>:48:                                     ; preds = %15
  %49 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %49, align 8
  %50 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %49, align 8
  %51 = call i8* @_ZN9__gnu_cxx16__aligned_membufIxE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* %50) #3
  %52 = bitcast i8* %51 to i64*
  store i32 1215019548, i32* %14
  br label %53

; <label>:53:                                     ; preds = %48, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZN9__gnu_cxx16__aligned_membufIxE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #4 comdat align 2 {
  %2 = alloca i8*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.110
  %6 = load i32, i32* @y.111
  %7 = add i32 %5, -376786313
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -376786313
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 422219311, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %53
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 422219311, label %19
    i32 -590020984, label %27
    i32 1381425595, label %46
    i32 2006914142, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %53

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -590020984, i32 2006914142
  store i32 %26, i32* %15
  br label %53

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %28, align 8
  %29 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %28, align 8
  %30 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf", %"struct.__gnu_cxx::__aligned_membuf"* %29, i32 0, i32 0
  %31 = bitcast [8 x i8]* %30 to i8*
  store i8* %31, i8** %2
  %32 = load i32, i32* @x.110
  %33 = load i32, i32* @y.111
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 1381425595, i32 2006914142
  store i32 %45, i32* %15
  br label %53

; <label>:46:                                     ; preds = %16
  %47 = load volatile i8*, i8** %2
  ret i8* %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %49, align 8
  %50 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %49, align 8
  %51 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf", %"struct.__gnu_cxx::__aligned_membuf"* %50, i32 0, i32 0
  %52 = bitcast [8 x i8]* %51 to i8*
  store i32 -590020984, i32* %15
  br label %53

; <label>:53:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE10deallocateERS2_PS1_m(%"class.std::allocator.1"* dereferenceable(1), %"struct.std::_Rb_tree_node"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.1"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.1"* %0, %"class.std::allocator.1"** %4, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.1"*, %"class.std::allocator.1"** %4, align 8
  %8 = bitcast %"class.std::allocator.1"* %7 to %"class.__gnu_cxx::new_allocator.2"*
  %9 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.2"* %8, %"struct.std::_Rb_tree_node"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.2"*, %"struct.std::_Rb_tree_node"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.2"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.2"* %0, %"class.__gnu_cxx::new_allocator.2"** %4, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.2"*, %"class.__gnu_cxx::new_allocator.2"** %4, align 8
  %8 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %9 = bitcast %"struct.std::_Rb_tree_node"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #7

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeIxEED2Ev(%"class.std::allocator.1"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.1"*, align 8
  store %"class.std::allocator.1"* %0, %"class.std::allocator.1"** %2, align 8
  %3 = load %"class.std::allocator.1"*, %"class.std::allocator.1"** %2, align 8
  %4 = bitcast %"class.std::allocator.1"* %3 to %"class.__gnu_cxx::new_allocator.2"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEED2Ev(%"class.__gnu_cxx::new_allocator.2"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEED2Ev(%"class.__gnu_cxx::new_allocator.2"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.118
  %5 = load i32, i32* @y.119
  %6 = sub i32 %4, -1277550928
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1277550928
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1813262518, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1813262518, label %18
    i32 1761463314, label %26
    i32 330963355, label %56
    i32 1822790390, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1761463314, i32 1822790390
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.2"*, align 8
  store %"class.__gnu_cxx::new_allocator.2"* %0, %"class.__gnu_cxx::new_allocator.2"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.2"*, %"class.__gnu_cxx::new_allocator.2"** %27, align 8
  %29 = load i32, i32* @x.118
  %30 = load i32, i32* @y.119
  %31 = add i32 %29, 1581478323
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, 1581478323
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 330963355, i32 1822790390
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.2"*, align 8
  store %"class.__gnu_cxx::new_allocator.2"* %0, %"class.__gnu_cxx::new_allocator.2"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.2"*, %"class.__gnu_cxx::new_allocator.2"** %58, align 8
  store i32 1761463314, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EED2Ev(%"class.std::_Rb_tree"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %5 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %6 = call %"struct.std::_Rb_tree_node.20"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE8_M_beginEv(%"class.std::_Rb_tree"* %5) #3
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E(%"class.std::_Rb_tree"* %5, %"struct.std::_Rb_tree_node.20"* %6)
          to label %7 unwind label %9

; <label>:7:                                      ; preds = %1
  %8 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %5, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE13_Rb_tree_implIS9_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %8) #3
  ret void

; <label>:9:                                      ; preds = %1
  %10 = landingpad { i8*, i32 }
          catch i8* null
  %11 = extractvalue { i8*, i32 } %10, 0
  store i8* %11, i8** %3, align 8
  %12 = extractvalue { i8*, i32 } %10, 1
  store i32 %12, i32* %4, align 4
  %13 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %5, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE13_Rb_tree_implIS9_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %13) #3
  br label %14

; <label>:14:                                     ; preds = %9
  %15 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %15) #11
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node.20"*) #0 comdat align 2 {
  %3 = alloca %"class.std::_Rb_tree"*
  %4 = alloca %"class.std::_Rb_tree"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node.20"*, align 8
  %6 = alloca %"struct.std::_Rb_tree_node.20"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %4, align 8
  store %"struct.std::_Rb_tree_node.20"* %1, %"struct.std::_Rb_tree_node.20"** %5, align 8
  %7 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %4, align 8
  store %"class.std::_Rb_tree"* %7, %"class.std::_Rb_tree"** %3
  %8 = alloca i32
  store i32 -413399624, i32* %8
  br label %9

; <label>:9:                                      ; preds = %2, %59
  %10 = load i32, i32* %8
  switch i32 %10, label %11 [
    i32 -413399624, label %12
    i32 -1909422000, label %16
    i32 140914802, label %27
    i32 -834836276, label %42
    i32 -960694979, label %57
    i32 -1878244176, label %58
  ]

; <label>:11:                                     ; preds = %9
  br label %59

; <label>:12:                                     ; preds = %9
  %13 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %5, align 8
  %14 = icmp ne %"struct.std::_Rb_tree_node.20"* %13, null
  %15 = select i1 %14, i32 -1909422000, i32 140914802
  store i32 %15, i32* %8
  br label %59

; <label>:16:                                     ; preds = %9
  %17 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %5, align 8
  %18 = bitcast %"struct.std::_Rb_tree_node.20"* %17 to %"struct.std::_Rb_tree_node_base"*
  %19 = call %"struct.std::_Rb_tree_node.20"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %18) #3
  %20 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E(%"class.std::_Rb_tree"* %20, %"struct.std::_Rb_tree_node.20"* %19)
  %21 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %5, align 8
  %22 = bitcast %"struct.std::_Rb_tree_node.20"* %21 to %"struct.std::_Rb_tree_node_base"*
  %23 = call %"struct.std::_Rb_tree_node.20"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %22) #3
  store %"struct.std::_Rb_tree_node.20"* %23, %"struct.std::_Rb_tree_node.20"** %6, align 8
  %24 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %5, align 8
  %25 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS5_E(%"class.std::_Rb_tree"* %25, %"struct.std::_Rb_tree_node.20"* %24) #3
  %26 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %6, align 8
  store %"struct.std::_Rb_tree_node.20"* %26, %"struct.std::_Rb_tree_node.20"** %5, align 8
  store i32 -413399624, i32* %8
  br label %59

; <label>:27:                                     ; preds = %9
  %28 = load i32, i32* @x.122
  %29 = load i32, i32* @y.123
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  %41 = select i1 %39, i32 -834836276, i32 -1878244176
  store i32 %41, i32* %8
  br label %59

; <label>:42:                                     ; preds = %9
  %43 = load i32, i32* @x.122
  %44 = load i32, i32* @y.123
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -960694979, i32 -1878244176
  store i32 %56, i32* %8
  br label %59

; <label>:57:                                     ; preds = %9
  ret void

; <label>:58:                                     ; preds = %9
  store i32 -834836276, i32* %8
  br label %59

; <label>:59:                                     ; preds = %58, %42, %27, %16, %12, %11
  br label %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.20"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE8_M_beginEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %5, i32 0, i32 1
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = bitcast %"struct.std::_Rb_tree_node_base"* %7 to %"struct.std::_Rb_tree_node.20"*
  ret %"struct.std::_Rb_tree_node.20"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE13_Rb_tree_implIS9_Lb1EED2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.126
  %5 = load i32, i32* @y.127
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1097963452, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %61
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1097963452, label %17
    i32 -1077622219, label %25
    i32 -1542636505, label %56
    i32 -666957574, label %57
  ]

; <label>:16:                                     ; preds = %14
  br label %61

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -1077622219, i32 -666957574
  store i32 %24, i32* %13
  br label %61

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"** %26, align 8
  %27 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"** %26, align 8
  %28 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %27 to %"class.std::allocator"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEED2Ev(%"class.std::allocator"* %28) #3
  %29 = load i32, i32* @x.126
  %30 = load i32, i32* @y.127
  %31 = add i32 %29, 159122098
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, 159122098
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -1542636505, i32 -666957574
  store i32 %55, i32* %13
  br label %61

; <label>:56:                                     ; preds = %14
  ret void

; <label>:57:                                     ; preds = %14
  %58 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"** %58, align 8
  %59 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"** %58, align 8
  %60 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %59 to %"class.std::allocator"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEED2Ev(%"class.std::allocator"* %60) #3
  store i32 -1077622219, i32* %13
  br label %61

; <label>:61:                                     ; preds = %57, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.20"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 3
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node.20"*
  ret %"struct.std::_Rb_tree_node.20"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.20"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.20"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.130
  %6 = load i32, i32* @y.131
  %7 = sub i32 %5, -1077357500
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1077357500
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -390583237, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %80
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -390583237, label %19
    i32 -1681083442, label %39
    i32 2093942542, label %72
    i32 -1580307078, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %80

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1681083442, i32 -1580307078
  store i32 %38, i32* %15
  br label %80

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %40, align 8
  %41 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %41, i32 0, i32 2
  %43 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %42, align 8
  %44 = bitcast %"struct.std::_Rb_tree_node_base"* %43 to %"struct.std::_Rb_tree_node.20"*
  store %"struct.std::_Rb_tree_node.20"* %44, %"struct.std::_Rb_tree_node.20"** %2
  %45 = load i32, i32* @x.130
  %46 = load i32, i32* @y.131
  %47 = add i32 %45, 1818352992
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, 1818352992
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 2093942542, i32 -1580307078
  store i32 %71, i32* %15
  br label %80

; <label>:72:                                     ; preds = %16
  %73 = load volatile %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %2
  ret %"struct.std::_Rb_tree_node.20"* %73

; <label>:74:                                     ; preds = %16
  %75 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %75, align 8
  %76 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %75, align 8
  %77 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %76, i32 0, i32 2
  %78 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %77, align 8
  %79 = bitcast %"struct.std::_Rb_tree_node_base"* %78 to %"struct.std::_Rb_tree_node.20"*
  store i32 -1681083442, i32* %15
  br label %80

; <label>:80:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS5_E(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node.20"*) #4 comdat align 2 {
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node.20"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  store %"struct.std::_Rb_tree_node.20"* %1, %"struct.std::_Rb_tree_node.20"** %4, align 8
  %5 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %6 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %4, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS5_E(%"class.std::_Rb_tree"* %5, %"struct.std::_Rb_tree_node.20"* %6) #3
  %7 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %4, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS5_E(%"class.std::_Rb_tree"* %5, %"struct.std::_Rb_tree_node.20"* %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS5_E(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node.20"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.134
  %4 = load i32, i32* @y.135
  %5 = sub i32 %3, 347415539
  %6 = sub i32 %5, 1
  %7 = add i32 %6, 347415539
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %99

; <label>:29:                                     ; preds = %2, %99
  %30 = alloca %"class.std::_Rb_tree"*, align 8
  %31 = alloca %"struct.std::_Rb_tree_node.20"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %30, align 8
  store %"struct.std::_Rb_tree_node.20"* %1, %"struct.std::_Rb_tree_node.20"** %31, align 8
  %32 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %30, align 8
  %33 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %32) #3
  %34 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %31, align 8
  %35 = load i32, i32* @x.134
  %36 = load i32, i32* @y.135
  %37 = add i32 %35, -1300911023
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -1300911023
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  br i1 %47, label %49, label %99

; <label>:49:                                     ; preds = %29
  %50 = invoke %"struct.std::pair.18"* @_ZNSt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEE9_M_valptrEv(%"struct.std::_Rb_tree_node.20"* %34)
          to label %51 unwind label %96

; <label>:51:                                     ; preds = %49
  %52 = load i32, i32* @x.134
  %53 = load i32, i32* @y.135
  %54 = sub i32 %52, -551662021
  %55 = sub i32 %54, 1
  %56 = add i32 %55, -551662021
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  br i1 %64, label %66, label %105

; <label>:66:                                     ; preds = %51, %105
  %67 = load i32, i32* @x.134
  %68 = load i32, i32* @y.135
  %69 = sub i32 %67, -2045585520
  %70 = sub i32 %69, 1
  %71 = add i32 %70, -2045585520
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = xor i1 %75, true
  %78 = xor i1 %76, true
  %79 = xor i1 false, true
  %80 = and i1 %77, false
  %81 = and i1 %75, %79
  %82 = and i1 %78, false
  %83 = and i1 %76, %79
  %84 = or i1 %80, %81
  %85 = or i1 %82, %83
  %86 = xor i1 %84, %85
  %87 = or i1 %77, %78
  %88 = xor i1 %87, true
  %89 = or i1 false, %79
  %90 = and i1 %88, %89
  %91 = or i1 %86, %90
  %92 = or i1 %75, %76
  br i1 %91, label %93, label %105

; <label>:93:                                     ; preds = %66
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEEE7destroyIS6_EEvRS8_PT_(%"class.std::allocator"* dereferenceable(1) %33, %"struct.std::pair.18"* %50)
          to label %94 unwind label %96

; <label>:94:                                     ; preds = %93
  %95 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %31, align 8
  ret void

; <label>:96:                                     ; preds = %93, %49
  %97 = landingpad { i8*, i32 }
          catch i8* null
  %98 = extractvalue { i8*, i32 } %97, 0
  call void @__clang_call_terminate(i8* %98) #11
  unreachable

; <label>:99:                                     ; preds = %29, %2
  %100 = alloca %"class.std::_Rb_tree"*, align 8
  %101 = alloca %"struct.std::_Rb_tree_node.20"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %100, align 8
  store %"struct.std::_Rb_tree_node.20"* %1, %"struct.std::_Rb_tree_node.20"** %101, align 8
  %102 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %100, align 8
  %103 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %102) #3
  %104 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %101, align 8
  br label %29

; <label>:105:                                    ; preds = %66, %51
  br label %66
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS5_E(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node.20"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node.20"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  store %"struct.std::_Rb_tree_node.20"* %1, %"struct.std::_Rb_tree_node.20"** %4, align 8
  %5 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %6 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %5) #3
  %7 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %4, align 8
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEEE10deallocateERS8_PS7_m(%"class.std::allocator"* dereferenceable(1) %6, %"struct.std::_Rb_tree_node.20"* %7, i64 1)
          to label %8 unwind label %9

; <label>:8:                                      ; preds = %2
  ret void

; <label>:9:                                      ; preds = %2
  %10 = landingpad { i8*, i32 }
          catch i8* null
  %11 = extractvalue { i8*, i32 } %10, 0
  call void @__clang_call_terminate(i8* %11) #11
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEEE7destroyIS6_EEvRS8_PT_(%"class.std::allocator"* dereferenceable(1), %"struct.std::pair.18"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca %"struct.std::pair.18"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store %"struct.std::pair.18"* %1, %"struct.std::pair.18"** %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load %"struct.std::pair.18"*, %"struct.std::pair.18"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEE7destroyIS7_EEvPT_(%"class.__gnu_cxx::new_allocator"* %6, %"struct.std::pair.18"* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.140
  %6 = load i32, i32* @y.141
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -884019993, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -884019993, label %18
    i32 -1286233967, label %38
    i32 182865451, label %58
    i32 1904999653, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1286233967, i32 1904999653
  store i32 %37, i32* %14
  br label %65

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %39, align 8
  %40 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %39, align 8
  %41 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %40, i32 0, i32 0
  %42 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %41 to %"class.std::allocator"*
  store %"class.std::allocator"* %42, %"class.std::allocator"** %2
  %43 = load i32, i32* @x.140
  %44 = load i32, i32* @y.141
  %45 = add i32 %43, -650110536
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -650110536
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 182865451, i32 1904999653
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile %"class.std::allocator"*, %"class.std::allocator"** %2
  ret %"class.std::allocator"* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %61, align 8
  %62 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %61, align 8
  %63 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %63 to %"class.std::allocator"*
  store i32 -1286233967, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.18"* @_ZNSt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEE9_M_valptrEv(%"struct.std::_Rb_tree_node.20"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.20"*, align 8
  store %"struct.std::_Rb_tree_node.20"* %0, %"struct.std::_Rb_tree_node.20"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node.20", %"struct.std::_Rb_tree_node.20"* %3, i32 0, i32 1
  %5 = call %"struct.std::pair.18"* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxSt6vectorIxSaIxEEEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.21"* %4) #3
  ret %"struct.std::pair.18"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEE7destroyIS7_EEvPT_(%"class.__gnu_cxx::new_allocator"*, %"struct.std::pair.18"*) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %4 = alloca %"struct.std::pair.18"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %3, align 8
  store %"struct.std::pair.18"* %1, %"struct.std::pair.18"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %3, align 8
  %6 = load %"struct.std::pair.18"*, %"struct.std::pair.18"** %4, align 8
  call void @_ZNSt4pairIKxSt6vectorIxSaIxEEED2Ev(%"struct.std::pair.18"* %6) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIKxSt6vectorIxSaIxEEED2Ev(%"struct.std::pair.18"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::pair.18"*, align 8
  store %"struct.std::pair.18"* %0, %"struct.std::pair.18"** %2, align 8
  %3 = load %"struct.std::pair.18"*, %"struct.std::pair.18"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::pair.18", %"struct.std::pair.18"* %3, i32 0, i32 1
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.18"* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxSt6vectorIxSaIxEEEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.21"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf.21"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.21"* %0, %"struct.__gnu_cxx::__aligned_membuf.21"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf.21"*, %"struct.__gnu_cxx::__aligned_membuf.21"** %2, align 8
  %4 = call i8* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxSt6vectorIxSaIxEEEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf.21"* %3) #3
  %5 = bitcast i8* %4 to %"struct.std::pair.18"*
  ret %"struct.std::pair.18"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZN9__gnu_cxx16__aligned_membufISt4pairIKxSt6vectorIxSaIxEEEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf.21"*) #4 comdat align 2 {
  %2 = alloca i8*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.150
  %6 = load i32, i32* @y.151
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 409868963, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 409868963, label %18
    i32 -357787778, label %26
    i32 1698060061, label %58
    i32 -1389569698, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -357787778, i32 -1389569698
  store i32 %25, i32* %14
  br label %65

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.__gnu_cxx::__aligned_membuf.21"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.21"* %0, %"struct.__gnu_cxx::__aligned_membuf.21"** %27, align 8
  %28 = load %"struct.__gnu_cxx::__aligned_membuf.21"*, %"struct.__gnu_cxx::__aligned_membuf.21"** %27, align 8
  %29 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf.21", %"struct.__gnu_cxx::__aligned_membuf.21"* %28, i32 0, i32 0
  %30 = bitcast [32 x i8]* %29 to i8*
  store i8* %30, i8** %2
  %31 = load i32, i32* @x.150
  %32 = load i32, i32* @y.151
  %33 = add i32 %31, -685795625
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -685795625
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 1698060061, i32 -1389569698
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile i8*, i8** %2
  ret i8* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"struct.__gnu_cxx::__aligned_membuf.21"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.21"* %0, %"struct.__gnu_cxx::__aligned_membuf.21"** %61, align 8
  %62 = load %"struct.__gnu_cxx::__aligned_membuf.21"*, %"struct.__gnu_cxx::__aligned_membuf.21"** %61, align 8
  %63 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf.21", %"struct.__gnu_cxx::__aligned_membuf.21"* %62, i32 0, i32 0
  %64 = bitcast [32 x i8]* %63 to i8*
  store i32 -357787778, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEEE10deallocateERS8_PS7_m(%"class.std::allocator"* dereferenceable(1), %"struct.std::_Rb_tree_node.20"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.152
  %7 = load i32, i32* @y.153
  %8 = sub i32 %6, 1794941690
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1794941690
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1177730271, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %84
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1177730271, label %20
    i32 -1483870273, label %40
    i32 540254843, label %75
    i32 -2052176605, label %76
  ]

; <label>:19:                                     ; preds = %17
  br label %84

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1483870273, i32 -2052176605
  store i32 %39, i32* %16
  br label %84

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator"*, align 8
  %42 = alloca %"struct.std::_Rb_tree_node.20"*, align 8
  %43 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %41, align 8
  store %"struct.std::_Rb_tree_node.20"* %1, %"struct.std::_Rb_tree_node.20"** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.std::allocator"*, %"class.std::allocator"** %41, align 8
  %45 = bitcast %"class.std::allocator"* %44 to %"class.__gnu_cxx::new_allocator"*
  %46 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %42, align 8
  %47 = load i64, i64* %43, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEE10deallocateEPS8_m(%"class.__gnu_cxx::new_allocator"* %45, %"struct.std::_Rb_tree_node.20"* %46, i64 %47)
  %48 = load i32, i32* @x.152
  %49 = load i32, i32* @y.153
  %50 = sub i32 %48, -1854568275
  %51 = sub i32 %50, 1
  %52 = add i32 %51, -1854568275
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 540254843, i32 -2052176605
  store i32 %74, i32* %16
  br label %84

; <label>:75:                                     ; preds = %17
  ret void

; <label>:76:                                     ; preds = %17
  %77 = alloca %"class.std::allocator"*, align 8
  %78 = alloca %"struct.std::_Rb_tree_node.20"*, align 8
  %79 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %77, align 8
  store %"struct.std::_Rb_tree_node.20"* %1, %"struct.std::_Rb_tree_node.20"** %78, align 8
  store i64 %2, i64* %79, align 8
  %80 = load %"class.std::allocator"*, %"class.std::allocator"** %77, align 8
  %81 = bitcast %"class.std::allocator"* %80 to %"class.__gnu_cxx::new_allocator"*
  %82 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %78, align 8
  %83 = load i64, i64* %79, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEE10deallocateEPS8_m(%"class.__gnu_cxx::new_allocator"* %81, %"struct.std::_Rb_tree_node.20"* %82, i64 %83)
  store i32 -1483870273, i32* %16
  br label %84

; <label>:84:                                     ; preds = %76, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEE10deallocateEPS8_m(%"class.__gnu_cxx::new_allocator"*, %"struct.std::_Rb_tree_node.20"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node.20"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store %"struct.std::_Rb_tree_node.20"* %1, %"struct.std::_Rb_tree_node.20"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %5, align 8
  %9 = bitcast %"struct.std::_Rb_tree_node.20"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEED2Ev(%"class.std::allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEED2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEED2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt4moveIRxEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.160
  %6 = load i32, i32* @y.161
  %7 = add i32 %5, -1802754508
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1802754508
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1516224852, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %50
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1516224852, label %19
    i32 -1511107718, label %27
    i32 1190369920, label %45
    i32 2020334447, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %50

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1511107718, i32 2020334447
  store i32 %26, i32* %15
  br label %50

; <label>:27:                                     ; preds = %16
  %28 = alloca i64*, align 8
  store i64* %0, i64** %28, align 8
  %29 = load i64*, i64** %28, align 8
  store i64* %29, i64** %2
  %30 = load i32, i32* @x.160
  %31 = load i32, i32* @y.161
  %32 = sub i32 %30, -1751465082
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -1751465082
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 1190369920, i32 2020334447
  store i32 %44, i32* %15
  br label %50

; <label>:45:                                     ; preds = %16
  %46 = load volatile i64*, i64** %2
  ret i64* %46

; <label>:47:                                     ; preds = %16
  %48 = alloca i64*, align 8
  store i64* %0, i64** %48, align 8
  %49 = load i64*, i64** %48, align 8
  store i32 -1511107718, i32* %15
  br label %50

; <label>:50:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EEC2Ev(%"class.std::_Rb_tree"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE13_Rb_tree_implIS9_Lb1EEC2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE13_Rb_tree_implIS9_Lb1EEC2Ev(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.164
  %3 = load i32, i32* @y.165
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %51

; <label>:15:                                     ; preds = %1, %51
  %16 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"*, align 8
  %17 = alloca i8*
  %18 = alloca i32
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"** %16, align 8
  %19 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"** %16, align 8
  %20 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %19 to %"class.std::allocator"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEEC2Ev(%"class.std::allocator"* %20) #3
  %21 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %19, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %19, i32 0, i32 1
  %23 = bitcast %"struct.std::_Rb_tree_node_base"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* %23, i8 0, i64 32, i32 8, i1 false)
  %24 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %19, i32 0, i32 2
  store i64 0, i64* %24, align 8
  %25 = load i32, i32* @x.164
  %26 = load i32, i32* @y.165
  %27 = add i32 %25, 1214082638
  %28 = sub i32 %27, 1
  %29 = sub i32 %28, 1214082638
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  br i1 %37, label %39, label %51

; <label>:39:                                     ; preds = %15
  invoke void @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE13_Rb_tree_implIS9_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %19)
          to label %40 unwind label %41

; <label>:40:                                     ; preds = %39
  ret void

; <label>:41:                                     ; preds = %39
  %42 = landingpad { i8*, i32 }
          cleanup
  %43 = extractvalue { i8*, i32 } %42, 0
  store i8* %43, i8** %17, align 8
  %44 = extractvalue { i8*, i32 } %42, 1
  store i32 %44, i32* %18, align 4
  %45 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %19 to %"class.std::allocator"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEED2Ev(%"class.std::allocator"* %45) #3
  br label %46

; <label>:46:                                     ; preds = %41
  %47 = load i8*, i8** %17, align 8
  %48 = load i32, i32* %18, align 4
  %49 = insertvalue { i8*, i32 } undef, i8* %47, 0
  %50 = insertvalue { i8*, i32 } %49, i32 %48, 1
  resume { i8*, i32 } %50

; <label>:51:                                     ; preds = %15, %1
  %52 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"*, align 8
  %53 = alloca i8*
  %54 = alloca i32
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"** %52, align 8
  %55 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"** %52, align 8
  %56 = bitcast %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %55 to %"class.std::allocator"*
  call void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEEC2Ev(%"class.std::allocator"* %56) #3
  %57 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %55, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %55, i32 0, i32 1
  %59 = bitcast %"struct.std::_Rb_tree_node_base"* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* %59, i8 0, i64 32, i32 8, i1 false)
  %60 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %55, i32 0, i32 2
  store i64 0, i64* %60, align 8
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEEC2Ev(%"class.std::allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEEC2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE13_Rb_tree_implIS9_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"** %2, align 8
  %3 = load %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %4, i32 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %6, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %9 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %9, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %8, %"struct.std::_Rb_tree_node_base"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %12 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %12, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %13, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEEC2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEEC2Ev(%"class.std::_Rb_tree.0"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.0"*, align 8
  store %"class.std::_Rb_tree.0"* %0, %"class.std::_Rb_tree.0"** %2, align 8
  %3 = load %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.0", %"class.std::_Rb_tree.0"* %3, i32 0, i32 0
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EEC2Ev(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EEC2Ev(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %2, align 8
  %5 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %2, align 8
  %6 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %5 to %"class.std::allocator.1"*
  call void @_ZNSaISt13_Rb_tree_nodeIxEEC2Ev(%"class.std::allocator.1"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %5, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %5, i32 0, i32 1
  %9 = bitcast %"struct.std::_Rb_tree_node_base"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* %9, i8 0, i64 32, i32 8, i1 false)
  %10 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %5, i32 0, i32 2
  store i64 0, i64* %10, align 8
  invoke void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %5)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %1
  ret void

; <label>:12:                                     ; preds = %1
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  store i8* %14, i8** %3, align 8
  %15 = extractvalue { i8*, i32 } %13, 1
  store i32 %15, i32* %4, align 4
  %16 = bitcast %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %5 to %"class.std::allocator.1"*
  call void @_ZNSaISt13_Rb_tree_nodeIxEED2Ev(%"class.std::allocator.1"* %16) #3
  br label %17

; <label>:17:                                     ; preds = %12
  %18 = load i32, i32* @x.174
  %19 = load i32, i32* @y.175
  %20 = sub i32 0, 1
  %21 = add i32 %18, %20
  %22 = sub i32 %18, 1
  %23 = mul i32 %18, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %19, 10
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  br i1 %29, label %31, label %51

; <label>:31:                                     ; preds = %17, %51
  %32 = load i8*, i8** %3, align 8
  %33 = load i32, i32* %4, align 4
  %34 = insertvalue { i8*, i32 } undef, i8* %32, 0
  %35 = insertvalue { i8*, i32 } %34, i32 %33, 1
  %36 = load i32, i32* @x.174
  %37 = load i32, i32* @y.175
  %38 = sub i32 %36, 780059062
  %39 = sub i32 %38, 1
  %40 = add i32 %39, 780059062
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  br i1 %48, label %50, label %51

; <label>:50:                                     ; preds = %31
  resume { i8*, i32 } %35

; <label>:51:                                     ; preds = %31, %17
  %52 = load i8*, i8** %3, align 8
  %53 = load i32, i32* %4, align 4
  %54 = insertvalue { i8*, i32 } undef, i8* %52, 0
  %55 = insertvalue { i8*, i32 } %54, i32 %53, 1
  br label %31
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeIxEEC2Ev(%"class.std::allocator.1"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.1"*, align 8
  store %"class.std::allocator.1"* %0, %"class.std::allocator.1"** %2, align 8
  %3 = load %"class.std::allocator.1"*, %"class.std::allocator.1"** %2, align 8
  %4 = bitcast %"class.std::allocator.1"* %3 to %"class.__gnu_cxx::new_allocator.2"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEEC2Ev(%"class.__gnu_cxx::new_allocator.2"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE13_Rb_tree_implIS3_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.178
  %5 = load i32, i32* @y.179
  %6 = sub i32 %4, 167968312
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 167968312
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -158410541, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %68
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -158410541, label %18
    i32 469489394, label %26
    i32 1335529429, label %54
    i32 -2092844853, label %55
  ]

; <label>:17:                                     ; preds = %15
  br label %68

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 469489394, i32 -2092844853
  store i32 %25, i32* %14
  br label %68

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %27, align 8
  %28 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %28, i32 0, i32 1
  %30 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %29, i32 0, i32 0
  store i32 0, i32* %30, align 8
  %31 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %28, i32 0, i32 1
  %32 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %31, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %32, align 8
  %33 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %28, i32 0, i32 1
  %34 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %28, i32 0, i32 1
  %35 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %34, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %33, %"struct.std::_Rb_tree_node_base"** %35, align 8
  %36 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %28, i32 0, i32 1
  %37 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %28, i32 0, i32 1
  %38 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %37, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %36, %"struct.std::_Rb_tree_node_base"** %38, align 8
  %39 = load i32, i32* @x.178
  %40 = load i32, i32* @y.179
  %41 = add i32 %39, -1353800287
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, -1353800287
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 1335529429, i32 -2092844853
  store i32 %53, i32* %14
  br label %68

; <label>:54:                                     ; preds = %15
  ret void

; <label>:55:                                     ; preds = %15
  %56 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %56, align 8
  %57 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"** %56, align 8
  %58 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %57, i32 0, i32 1
  %59 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %58, i32 0, i32 0
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %57, i32 0, i32 1
  %61 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %60, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %61, align 8
  %62 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %57, i32 0, i32 1
  %63 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %57, i32 0, i32 1
  %64 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %63, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %62, %"struct.std::_Rb_tree_node_base"** %64, align 8
  %65 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %57, i32 0, i32 1
  %66 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %57, i32 0, i32 1
  %67 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %66, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %65, %"struct.std::_Rb_tree_node_base"** %67, align 8
  store i32 469489394, i32* %14
  br label %68

; <label>:68:                                     ; preds = %55, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEEC2Ev(%"class.__gnu_cxx::new_allocator.2"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.180
  %5 = load i32, i32* @y.181
  %6 = add i32 %4, 62083694
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 62083694
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 855280930, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %48
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 855280930, label %18
    i32 -282415794, label %26
    i32 191743162, label %44
    i32 1933527637, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %48

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -282415794, i32 1933527637
  store i32 %25, i32* %14
  br label %48

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.2"*, align 8
  store %"class.__gnu_cxx::new_allocator.2"* %0, %"class.__gnu_cxx::new_allocator.2"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.2"*, %"class.__gnu_cxx::new_allocator.2"** %27, align 8
  %29 = load i32, i32* @x.180
  %30 = load i32, i32* @y.181
  %31 = add i32 %29, 556464419
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, 556464419
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 191743162, i32 1933527637
  store i32 %43, i32* %14
  br label %48

; <label>:44:                                     ; preds = %15
  ret void

; <label>:45:                                     ; preds = %15
  %46 = alloca %"class.__gnu_cxx::new_allocator.2"*, align 8
  store %"class.__gnu_cxx::new_allocator.2"* %0, %"class.__gnu_cxx::new_allocator.2"** %46, align 8
  %47 = load %"class.__gnu_cxx::new_allocator.2"*, %"class.__gnu_cxx::new_allocator.2"** %46, align 8
  store i32 -282415794, i32* %14
  br label %48

; <label>:48:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxEC2Ev(%"class.__gnu_cxx::new_allocator.5"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.5"*, align 8
  store %"class.__gnu_cxx::new_allocator.5"* %0, %"class.__gnu_cxx::new_allocator.5"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.5"*, %"class.__gnu_cxx::new_allocator.5"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxED2Ev(%"class.__gnu_cxx::new_allocator.5"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.5"*, align 8
  store %"class.__gnu_cxx::new_allocator.5"* %0, %"class.__gnu_cxx::new_allocator.5"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.5"*, %"class.__gnu_cxx::new_allocator.5"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEEC2ERKS0_(%"struct.std::_Vector_base"*, %"class.std::allocator.4"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base"*, align 8
  %4 = alloca %"class.std::allocator.4"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %3, align 8
  store %"class.std::allocator.4"* %1, %"class.std::allocator.4"** %4, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = load %"class.std::allocator.4"*, %"class.std::allocator.4"** %4, align 8
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %6, %"class.std::allocator.4"* dereferenceable(1) %7) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE19_M_range_initializeIPKxEEvT_S5_St20forward_iterator_tag(%"class.std::vector"*, i64*, i64*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.188
  %7 = load i32, i32* @y.189
  %8 = add i32 %6, -1244133961
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1244133961
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 752210198, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %130
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 752210198, label %20
    i32 -1876697272, label %28
    i32 -1223766140, label %92
    i32 -633485748, label %93
  ]

; <label>:19:                                     ; preds = %17
  br label %130

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1876697272, i32 -633485748
  store i32 %27, i32* %16
  br label %130

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::forward_iterator_tag", align 1
  %30 = alloca %"class.std::vector"*, align 8
  %31 = alloca i64*, align 8
  %32 = alloca i64*, align 8
  %33 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %30, align 8
  store i64* %1, i64** %31, align 8
  store i64* %2, i64** %32, align 8
  %34 = load %"class.std::vector"*, %"class.std::vector"** %30, align 8
  %35 = load i64*, i64** %31, align 8
  %36 = load i64*, i64** %32, align 8
  %37 = call i64 @_ZSt8distanceIPKxENSt15iterator_traitsIT_E15difference_typeES3_S3_(i64* %35, i64* %36)
  store i64 %37, i64* %33, align 8
  %38 = bitcast %"class.std::vector"* %34 to %"struct.std::_Vector_base"*
  %39 = load i64, i64* %33, align 8
  %40 = call i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base"* %38, i64 %39)
  %41 = bitcast %"class.std::vector"* %34 to %"struct.std::_Vector_base"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %42, i32 0, i32 0
  store i64* %40, i64** %43, align 8
  %44 = bitcast %"class.std::vector"* %34 to %"struct.std::_Vector_base"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %45, i32 0, i32 0
  %47 = load i64*, i64** %46, align 8
  %48 = load i64, i64* %33, align 8
  %49 = getelementptr inbounds i64, i64* %47, i64 %48
  %50 = bitcast %"class.std::vector"* %34 to %"struct.std::_Vector_base"*
  %51 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %50, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %51, i32 0, i32 2
  store i64* %49, i64** %52, align 8
  %53 = load i64*, i64** %31, align 8
  %54 = load i64*, i64** %32, align 8
  %55 = bitcast %"class.std::vector"* %34 to %"struct.std::_Vector_base"*
  %56 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %55, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %56, i32 0, i32 0
  %58 = load i64*, i64** %57, align 8
  %59 = bitcast %"class.std::vector"* %34 to %"struct.std::_Vector_base"*
  %60 = call dereferenceable(1) %"class.std::allocator.4"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %59) #3
  %61 = call i64* @_ZSt22__uninitialized_copy_aIPKxPxxET0_T_S4_S3_RSaIT1_E(i64* %53, i64* %54, i64* %58, %"class.std::allocator.4"* dereferenceable(1) %60)
  %62 = bitcast %"class.std::vector"* %34 to %"struct.std::_Vector_base"*
  %63 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %62, i32 0, i32 0
  %64 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %63, i32 0, i32 1
  store i64* %61, i64** %64, align 8
  %65 = load i32, i32* @x.188
  %66 = load i32, i32* @y.189
  %67 = sub i32 %65, -2070788395
  %68 = sub i32 %67, 1
  %69 = add i32 %68, -2070788395
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = xor i1 %73, true
  %76 = xor i1 %74, true
  %77 = xor i1 true, true
  %78 = and i1 %75, true
  %79 = and i1 %73, %77
  %80 = and i1 %76, true
  %81 = and i1 %74, %77
  %82 = or i1 %78, %79
  %83 = or i1 %80, %81
  %84 = xor i1 %82, %83
  %85 = or i1 %75, %76
  %86 = xor i1 %85, true
  %87 = or i1 true, %77
  %88 = and i1 %86, %87
  %89 = or i1 %84, %88
  %90 = or i1 %73, %74
  %91 = select i1 %89, i32 -1223766140, i32 -633485748
  store i32 %91, i32* %16
  br label %130

; <label>:92:                                     ; preds = %17
  ret void

; <label>:93:                                     ; preds = %17
  %94 = alloca %"struct.std::forward_iterator_tag", align 1
  %95 = alloca %"class.std::vector"*, align 8
  %96 = alloca i64*, align 8
  %97 = alloca i64*, align 8
  %98 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %95, align 8
  store i64* %1, i64** %96, align 8
  store i64* %2, i64** %97, align 8
  %99 = load %"class.std::vector"*, %"class.std::vector"** %95, align 8
  %100 = load i64*, i64** %96, align 8
  %101 = load i64*, i64** %97, align 8
  %102 = call i64 @_ZSt8distanceIPKxENSt15iterator_traitsIT_E15difference_typeES3_S3_(i64* %100, i64* %101)
  store i64 %102, i64* %98, align 8
  %103 = bitcast %"class.std::vector"* %99 to %"struct.std::_Vector_base"*
  %104 = load i64, i64* %98, align 8
  %105 = call i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base"* %103, i64 %104)
  %106 = bitcast %"class.std::vector"* %99 to %"struct.std::_Vector_base"*
  %107 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %106, i32 0, i32 0
  %108 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %107, i32 0, i32 0
  store i64* %105, i64** %108, align 8
  %109 = bitcast %"class.std::vector"* %99 to %"struct.std::_Vector_base"*
  %110 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %109, i32 0, i32 0
  %111 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %110, i32 0, i32 0
  %112 = load i64*, i64** %111, align 8
  %113 = load i64, i64* %98, align 8
  %114 = getelementptr inbounds i64, i64* %112, i64 %113
  %115 = bitcast %"class.std::vector"* %99 to %"struct.std::_Vector_base"*
  %116 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %115, i32 0, i32 0
  %117 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %116, i32 0, i32 2
  store i64* %114, i64** %117, align 8
  %118 = load i64*, i64** %96, align 8
  %119 = load i64*, i64** %97, align 8
  %120 = bitcast %"class.std::vector"* %99 to %"struct.std::_Vector_base"*
  %121 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %120, i32 0, i32 0
  %122 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %121, i32 0, i32 0
  %123 = load i64*, i64** %122, align 8
  %124 = bitcast %"class.std::vector"* %99 to %"struct.std::_Vector_base"*
  %125 = call dereferenceable(1) %"class.std::allocator.4"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %124) #3
  %126 = call i64* @_ZSt22__uninitialized_copy_aIPKxPxxET0_T_S4_S3_RSaIT1_E(i64* %118, i64* %119, i64* %123, %"class.std::allocator.4"* dereferenceable(1) %125)
  %127 = bitcast %"class.std::vector"* %99 to %"struct.std::_Vector_base"*
  %128 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %127, i32 0, i32 0
  %129 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %128, i32 0, i32 1
  store i64* %126, i64** %129, align 8
  store i32 -1876697272, i32* %16
  br label %130

; <label>:130:                                    ; preds = %93, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt16initializer_listIxE5beginEv(%"class.std::initializer_list"*) #4 comdat align 2 {
  %2 = alloca %"class.std::initializer_list"*, align 8
  store %"class.std::initializer_list"* %0, %"class.std::initializer_list"** %2, align 8
  %3 = load %"class.std::initializer_list"*, %"class.std::initializer_list"** %2, align 8
  %4 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt16initializer_listIxE3endEv(%"class.std::initializer_list"*) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.192
  %6 = load i32, i32* @y.193
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -30343315, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %66
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -30343315, label %18
    i32 -1306386321, label %38
    i32 576751144, label %58
    i32 -1678349967, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %66

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1306386321, i32 -1678349967
  store i32 %37, i32* %14
  br label %66

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::initializer_list"*, align 8
  store %"class.std::initializer_list"* %0, %"class.std::initializer_list"** %39, align 8
  %40 = load %"class.std::initializer_list"*, %"class.std::initializer_list"** %39, align 8
  %41 = call i64* @_ZNKSt16initializer_listIxE5beginEv(%"class.std::initializer_list"* %40) #3
  %42 = call i64 @_ZNKSt16initializer_listIxE4sizeEv(%"class.std::initializer_list"* %40) #3
  %43 = getelementptr inbounds i64, i64* %41, i64 %42
  store i64* %43, i64** %2
  %44 = load i32, i32* @x.192
  %45 = load i32, i32* @y.193
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 576751144, i32 -1678349967
  store i32 %57, i32* %14
  br label %66

; <label>:58:                                     ; preds = %15
  %59 = load volatile i64*, i64** %2
  ret i64* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::initializer_list"*, align 8
  store %"class.std::initializer_list"* %0, %"class.std::initializer_list"** %61, align 8
  %62 = load %"class.std::initializer_list"*, %"class.std::initializer_list"** %61, align 8
  %63 = call i64* @_ZNKSt16initializer_listIxE5beginEv(%"class.std::initializer_list"* %62) #3
  %64 = call i64 @_ZNKSt16initializer_listIxE4sizeEv(%"class.std::initializer_list"* %62) #3
  %65 = getelementptr inbounds i64, i64* %63, i64 %64
  store i32 -1306386321, i32* %14
  br label %66

; <label>:66:                                     ; preds = %60, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.194
  %3 = load i32, i32* @y.195
  %4 = add i32 %2, -1431915435
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -1431915435
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %85

; <label>:28:                                     ; preds = %1, %85
  %29 = alloca %"struct.std::_Vector_base"*, align 8
  %30 = alloca i8*
  %31 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %29, align 8
  %32 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %29, align 8
  %33 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %32, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %36, i32 0, i32 2
  %38 = load i64*, i64** %37, align 8
  %39 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %32, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %39, i32 0, i32 0
  %41 = load i64*, i64** %40, align 8
  %42 = ptrtoint i64* %38 to i64
  %43 = ptrtoint i64* %41 to i64
  %44 = add i64 %42, 2280417518127910736
  %45 = sub i64 %44, %43
  %46 = sub i64 %45, 2280417518127910736
  %47 = sub i64 %42, %43
  %48 = sdiv exact i64 %46, 8
  %49 = load i32, i32* @x.194
  %50 = load i32, i32* @y.195
  %51 = add i32 %49, 1975506492
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, 1975506492
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  br i1 %73, label %75, label %85

; <label>:75:                                     ; preds = %28
  invoke void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base"* %32, i64* %35, i64 %48)
          to label %76 unwind label %78

; <label>:76:                                     ; preds = %75
  %77 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %77) #3
  ret void

; <label>:78:                                     ; preds = %75
  %79 = landingpad { i8*, i32 }
          catch i8* null
  %80 = extractvalue { i8*, i32 } %79, 0
  store i8* %80, i8** %30, align 8
  %81 = extractvalue { i8*, i32 } %79, 1
  store i32 %81, i32* %31, align 4
  %82 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %82) #3
  br label %83

; <label>:83:                                     ; preds = %78
  %84 = load i8*, i8** %30, align 8
  call void @__clang_call_terminate(i8* %84) #11
  unreachable

; <label>:85:                                     ; preds = %28, %1
  %86 = alloca %"struct.std::_Vector_base"*, align 8
  %87 = alloca i8*
  %88 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %86, align 8
  %89 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %86, align 8
  %90 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %89, i32 0, i32 0
  %91 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %90, i32 0, i32 0
  %92 = load i64*, i64** %91, align 8
  %93 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %89, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %93, i32 0, i32 2
  %95 = load i64*, i64** %94, align 8
  %96 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %89, i32 0, i32 0
  %97 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %96, i32 0, i32 0
  %98 = load i64*, i64** %97, align 8
  %99 = ptrtoint i64* %95 to i64
  %100 = ptrtoint i64* %98 to i64
  %101 = sub i64 0, %100
  %102 = add i64 %99, %101
  %103 = sub i64 %99, %100
  %104 = mul i64 %102, %100
  %105 = sub i64 0, %99
  %106 = add i64 0, %105
  %107 = sub i64 0, %99
  %108 = sub i64 0, %100
  %109 = sub i64 %106, %108
  %110 = add i64 %106, %100
  %111 = add i64 0, -4216458938444604235
  %112 = sub i64 %111, %99
  %113 = sub i64 %112, -4216458938444604235
  %114 = sub i64 0, %99
  %115 = sub i64 0, %113
  %116 = sub i64 0, %100
  %117 = add i64 %115, %116
  %118 = sub i64 0, %117
  %119 = add i64 %113, %100
  %120 = sub i64 0, 2757115234999361277
  %121 = sub i64 %120, %99
  %122 = add i64 %121, 2757115234999361277
  %123 = sub i64 0, %99
  %124 = sub i64 %122, -736073075303984094
  %125 = add i64 %124, %100
  %126 = add i64 %125, -736073075303984094
  %127 = add i64 %122, %100
  %128 = sub i64 %99, -8812158660021606897
  %129 = sub i64 %128, %100
  %130 = add i64 %129, -8812158660021606897
  %131 = sub i64 %99, %100
  %132 = mul i64 %130, %100
  %133 = shl i64 %99, %100
  %134 = shl i64 %99, %100
  %135 = add i64 %99, -815903999179497977
  %136 = sub i64 %135, %100
  %137 = sub i64 %136, -815903999179497977
  %138 = sub i64 %99, %100
  %139 = sub i64 0, 5192677373183907783
  %140 = sub i64 %139, %137
  %141 = add i64 %140, 5192677373183907783
  %142 = sub i64 0, %137
  %143 = add i64 %141, -7556925871472903969
  %144 = add i64 %143, 8
  %145 = sub i64 %144, -7556925871472903969
  %146 = add i64 %141, 8
  %147 = shl i64 %137, 8
  %148 = add i64 0, 3904384820612247292
  %149 = sub i64 %148, %137
  %150 = sub i64 %149, 3904384820612247292
  %151 = sub i64 0, %137
  %152 = sub i64 0, 8
  %153 = sub i64 %150, %152
  %154 = add i64 %150, 8
  %155 = sub i64 0, 8
  %156 = add i64 %137, %155
  %157 = sub i64 %137, 8
  %158 = mul i64 %156, 8
  %159 = sub i64 0, -7101498590653744626
  %160 = sub i64 %159, %137
  %161 = add i64 %160, -7101498590653744626
  %162 = sub i64 0, %137
  %163 = sub i64 %161, -2195189941496291180
  %164 = add i64 %163, 8
  %165 = add i64 %164, -2195189941496291180
  %166 = add i64 %161, 8
  %167 = sub i64 %137, -1971979657065257864
  %168 = sub i64 %167, 8
  %169 = add i64 %168, -1971979657065257864
  %170 = sub i64 %137, 8
  %171 = mul i64 %169, 8
  %172 = sdiv exact i64 %137, 8
  br label %28
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"class.std::allocator.4"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.4"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.4"* %1, %"class.std::allocator.4"** %4, align 8
  %5 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5 to %"class.std::allocator.4"*
  %7 = load %"class.std::allocator.4"*, %"class.std::allocator.4"** %4, align 8
  call void @_ZNSaIxEC2ERKS_(%"class.std::allocator.4"* %6, %"class.std::allocator.4"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 0
  store i64* null, i64** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 1
  store i64* null, i64** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 2
  store i64* null, i64** %10, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_(%"class.__gnu_cxx::new_allocator.5"*, %"class.__gnu_cxx::new_allocator.5"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.5"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.5"*, align 8
  store %"class.__gnu_cxx::new_allocator.5"* %0, %"class.__gnu_cxx::new_allocator.5"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.5"* %1, %"class.__gnu_cxx::new_allocator.5"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.5"*, %"class.__gnu_cxx::new_allocator.5"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZSt8distanceIPKxENSt15iterator_traitsIT_E15difference_typeES3_S3_(i64*, i64*) #0 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca %"struct.std::random_access_iterator_tag", align 1
  %6 = alloca %"struct.std::random_access_iterator_tag", align 1
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  %7 = load i64*, i64** %3, align 8
  %8 = load i64*, i64** %4, align 8
  call void @_ZSt19__iterator_categoryIPKxENSt15iterator_traitsIT_E17iterator_categoryERKS3_(i64** dereferenceable(8) %3)
  %9 = call i64 @_ZSt10__distanceIPKxENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag(i64* %7, i64* %8)
  ret i64 %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.202
  %10 = load i32, i32* @y.203
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 -177345323, i32* %18
  %19 = alloca i64*
  br label %20

; <label>:20:                                     ; preds = %2, %147
  %21 = load i32, i32* %18
  switch i32 %21, label %22 [
    i32 -177345323, label %23
    i32 1783910091, label %43
    i32 -1353043073, label %65
    i32 -1951296835, label %68
    i32 -1705273190, label %96
    i32 -1643672676, label %129
    i32 236024039, label %131
    i32 1352462872, label %132
    i32 300434, label %134
    i32 -1656813910, label %140
  ]

; <label>:22:                                     ; preds = %20
  br label %147

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 1783910091, i32 300434
  store i32 %42, i32* %18
  br label %147

; <label>:43:                                     ; preds = %20
  %44 = alloca %"struct.std::_Vector_base"*, align 8
  %45 = alloca i64, align 8
  store i64* %45, i64** %6
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %44, align 8
  %46 = load volatile i64*, i64** %6
  store i64 %1, i64* %46, align 8
  %47 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %44, align 8
  store %"struct.std::_Vector_base"* %47, %"struct.std::_Vector_base"** %5
  %48 = load volatile i64*, i64** %6
  %49 = load i64, i64* %48, align 8
  %50 = icmp ne i64 %49, 0
  store i1 %50, i1* %4
  %51 = load i32, i32* @x.202
  %52 = load i32, i32* @y.203
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -1353043073, i32 300434
  store i32 %64, i32* %18
  br label %147

; <label>:65:                                     ; preds = %20
  %66 = load volatile i1, i1* %4
  %67 = select i1 %66, i32 -1951296835, i32 236024039
  store i32 %67, i32* %18
  br label %147

; <label>:68:                                     ; preds = %20
  %69 = load i32, i32* @x.202
  %70 = load i32, i32* @y.203
  %71 = sub i32 %69, 1377771977
  %72 = sub i32 %71, 1
  %73 = add i32 %72, 1377771977
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = xor i1 %77, true
  %80 = xor i1 %78, true
  %81 = xor i1 false, true
  %82 = and i1 %79, false
  %83 = and i1 %77, %81
  %84 = and i1 %80, false
  %85 = and i1 %78, %81
  %86 = or i1 %82, %83
  %87 = or i1 %84, %85
  %88 = xor i1 %86, %87
  %89 = or i1 %79, %80
  %90 = xor i1 %89, true
  %91 = or i1 false, %81
  %92 = and i1 %90, %91
  %93 = or i1 %88, %92
  %94 = or i1 %77, %78
  %95 = select i1 %93, i32 -1705273190, i32 -1656813910
  store i32 %95, i32* %18
  br label %147

; <label>:96:                                     ; preds = %20
  %97 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %98 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %97, i32 0, i32 0
  %99 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %98 to %"class.std::allocator.4"*
  %100 = load volatile i64*, i64** %6
  %101 = load i64, i64* %100, align 8
  %102 = call i64* @_ZNSt16allocator_traitsISaIxEE8allocateERS0_m(%"class.std::allocator.4"* dereferenceable(1) %99, i64 %101)
  store i64* %102, i64** %3
  %103 = load i32, i32* @x.202
  %104 = load i32, i32* @y.203
  %105 = sub i32 0, 1
  %106 = add i32 %103, %105
  %107 = sub i32 %103, 1
  %108 = mul i32 %103, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %104, 10
  %112 = xor i1 %110, true
  %113 = xor i1 %111, true
  %114 = xor i1 true, true
  %115 = and i1 %112, true
  %116 = and i1 %110, %114
  %117 = and i1 %113, true
  %118 = and i1 %111, %114
  %119 = or i1 %115, %116
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = or i1 %112, %113
  %123 = xor i1 %122, true
  %124 = or i1 true, %114
  %125 = and i1 %123, %124
  %126 = or i1 %121, %125
  %127 = or i1 %110, %111
  %128 = select i1 %126, i32 -1643672676, i32 -1656813910
  store i32 %128, i32* %18
  br label %147

; <label>:129:                                    ; preds = %20
  store i32 1352462872, i32* %18
  %130 = load volatile i64*, i64** %3
  store i64* %130, i64** %19
  br label %147

; <label>:131:                                    ; preds = %20
  store i32 1352462872, i32* %18
  store i64* null, i64** %19
  br label %147

; <label>:132:                                    ; preds = %20
  %133 = load i64*, i64** %19
  ret i64* %133

; <label>:134:                                    ; preds = %20
  %135 = alloca %"struct.std::_Vector_base"*, align 8
  %136 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %135, align 8
  store i64 %1, i64* %136, align 8
  %137 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %135, align 8
  %138 = load i64, i64* %136, align 8
  %139 = icmp ne i64 %138, 0
  store i32 1783910091, i32* %18
  br label %147

; <label>:140:                                    ; preds = %20
  %141 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %142 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %141, i32 0, i32 0
  %143 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %142 to %"class.std::allocator.4"*
  %144 = load volatile i64*, i64** %6
  %145 = load i64, i64* %144, align 8
  %146 = call i64* @_ZNSt16allocator_traitsISaIxEE8allocateERS0_m(%"class.std::allocator.4"* dereferenceable(1) %143, i64 %145)
  store i32 -1705273190, i32* %18
  br label %147

; <label>:147:                                    ; preds = %140, %134, %131, %129, %96, %68, %65, %43, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt22__uninitialized_copy_aIPKxPxxET0_T_S4_S3_RSaIT1_E(i64*, i64*, i64*, %"class.std::allocator.4"* dereferenceable(1)) #0 comdat {
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.204
  %9 = load i32, i32* @y.205
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -1398006576, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %63
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1398006576, label %21
    i32 -655915176, label %29
    i32 -662505487, label %52
    i32 1833776971, label %54
  ]

; <label>:20:                                     ; preds = %18
  br label %63

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -655915176, i32 1833776971
  store i32 %28, i32* %17
  br label %63

; <label>:29:                                     ; preds = %18
  %30 = alloca i64*, align 8
  %31 = alloca i64*, align 8
  %32 = alloca i64*, align 8
  %33 = alloca %"class.std::allocator.4"*, align 8
  store i64* %0, i64** %30, align 8
  store i64* %1, i64** %31, align 8
  store i64* %2, i64** %32, align 8
  store %"class.std::allocator.4"* %3, %"class.std::allocator.4"** %33, align 8
  %34 = load i64*, i64** %30, align 8
  %35 = load i64*, i64** %31, align 8
  %36 = load i64*, i64** %32, align 8
  %37 = call i64* @_ZSt18uninitialized_copyIPKxPxET0_T_S4_S3_(i64* %34, i64* %35, i64* %36)
  store i64* %37, i64** %5
  %38 = load i32, i32* @x.204
  %39 = load i32, i32* @y.205
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 -662505487, i32 1833776971
  store i32 %51, i32* %17
  br label %63

; <label>:52:                                     ; preds = %18
  %53 = load volatile i64*, i64** %5
  ret i64* %53

; <label>:54:                                     ; preds = %18
  %55 = alloca i64*, align 8
  %56 = alloca i64*, align 8
  %57 = alloca i64*, align 8
  %58 = alloca %"class.std::allocator.4"*, align 8
  store i64* %0, i64** %55, align 8
  store i64* %1, i64** %56, align 8
  store i64* %2, i64** %57, align 8
  store %"class.std::allocator.4"* %3, %"class.std::allocator.4"** %58, align 8
  %59 = load i64*, i64** %55, align 8
  %60 = load i64*, i64** %56, align 8
  %61 = load i64*, i64** %57, align 8
  %62 = call i64* @_ZSt18uninitialized_copyIPKxPxET0_T_S4_S3_(i64* %59, i64* %60, i64* %61)
  store i32 -655915176, i32* %17
  br label %63

; <label>:63:                                     ; preds = %54, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.4"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.4"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.206
  %6 = load i32, i32* @y.207
  %7 = sub i32 %5, -1612671877
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1612671877
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1827889794, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1827889794, label %19
    i32 885056734, label %39
    i32 635987648, label %59
    i32 25618311, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 885056734, i32 25618311
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %40, align 8
  %41 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %42 to %"class.std::allocator.4"*
  store %"class.std::allocator.4"* %43, %"class.std::allocator.4"** %2
  %44 = load i32, i32* @x.206
  %45 = load i32, i32* @y.207
  %46 = add i32 %44, 1085271608
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 1085271608
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 635987648, i32 25618311
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"class.std::allocator.4"*, %"class.std::allocator.4"** %2
  ret %"class.std::allocator.4"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %62, align 8
  %63 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %63, i32 0, i32 0
  %65 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %64 to %"class.std::allocator.4"*
  store i32 885056734, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt10__distanceIPKxENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag(i64*, i64*) #4 comdat {
  %3 = alloca %"struct.std::random_access_iterator_tag", align 1
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  %6 = load i64*, i64** %5, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = ptrtoint i64* %6 to i64
  %9 = ptrtoint i64* %7 to i64
  %10 = add i64 %8, 1846891149670862383
  %11 = sub i64 %10, %9
  %12 = sub i64 %11, 1846891149670862383
  %13 = sub i64 %8, %9
  %14 = sdiv exact i64 %12, 8
  ret i64 %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt19__iterator_categoryIPKxENSt15iterator_traitsIT_E17iterator_categoryERKS3_(i64** dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::random_access_iterator_tag", align 1
  %3 = alloca i64**, align 8
  store i64** %0, i64*** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt16allocator_traitsISaIxEE8allocateERS0_m(%"class.std::allocator.4"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.212
  %7 = load i32, i32* @y.213
  %8 = add i32 %6, -1611953729
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1611953729
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 508360472, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %71
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 508360472, label %20
    i32 732810882, label %28
    i32 -1863943057, label %62
    i32 -955439254, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %71

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 732810882, i32 -955439254
  store i32 %27, i32* %16
  br label %71

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.4"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::allocator.4"* %0, %"class.std::allocator.4"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::allocator.4"*, %"class.std::allocator.4"** %29, align 8
  %32 = bitcast %"class.std::allocator.4"* %31 to %"class.__gnu_cxx::new_allocator.5"*
  %33 = load i64, i64* %30, align 8
  %34 = call i64* @_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.5"* %32, i64 %33, i8* null)
  store i64* %34, i64** %3
  %35 = load i32, i32* @x.212
  %36 = load i32, i32* @y.213
  %37 = sub i32 %35, 1128528786
  %38 = sub i32 %37, 1
  %39 = add i32 %38, 1128528786
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 -1863943057, i32 -955439254
  store i32 %61, i32* %16
  br label %71

; <label>:62:                                     ; preds = %17
  %63 = load volatile i64*, i64** %3
  ret i64* %63

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::allocator.4"*, align 8
  %66 = alloca i64, align 8
  store %"class.std::allocator.4"* %0, %"class.std::allocator.4"** %65, align 8
  store i64 %1, i64* %66, align 8
  %67 = load %"class.std::allocator.4"*, %"class.std::allocator.4"** %65, align 8
  %68 = bitcast %"class.std::allocator.4"* %67 to %"class.__gnu_cxx::new_allocator.5"*
  %69 = load i64, i64* %66, align 8
  %70 = call i64* @_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.5"* %68, i64 %69, i8* null)
  store i32 732810882, i32* %16
  br label %71

; <label>:71:                                     ; preds = %64, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.5"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.5"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.5"* %0, %"class.__gnu_cxx::new_allocator.5"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.5"*, %"class.__gnu_cxx::new_allocator.5"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.5"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 2125851921, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 2125851921, label %16
    i32 -412293148, label %21
    i32 -128507554, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -412293148, i32 -128507554
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #14
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 8
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to i64*
  ret i64* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.5"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.216
  %5 = load i32, i32* @y.217
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1628615563, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %59
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1628615563, label %17
    i32 1664191634, label %25
    i32 559438607, label %55
    i32 -331495796, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %59

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 1664191634, i32 -331495796
  store i32 %24, i32* %13
  br label %59

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator.5"*, align 8
  store %"class.__gnu_cxx::new_allocator.5"* %0, %"class.__gnu_cxx::new_allocator.5"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator.5"*, %"class.__gnu_cxx::new_allocator.5"** %26, align 8
  %28 = load i32, i32* @x.216
  %29 = load i32, i32* @y.217
  %30 = sub i32 %28, -1001434034
  %31 = sub i32 %30, 1
  %32 = add i32 %31, -1001434034
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 559438607, i32 -331495796
  store i32 %54, i32* %13
  br label %59

; <label>:55:                                     ; preds = %14
  ret i64 2305843009213693951

; <label>:56:                                     ; preds = %14
  %57 = alloca %"class.__gnu_cxx::new_allocator.5"*, align 8
  store %"class.__gnu_cxx::new_allocator.5"* %0, %"class.__gnu_cxx::new_allocator.5"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.5"*, %"class.__gnu_cxx::new_allocator.5"** %57, align 8
  store i32 1664191634, i32* %13
  br label %59

; <label>:59:                                     ; preds = %56, %25, %17, %16
  br label %14
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #9

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #10

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt18uninitialized_copyIPKxPxET0_T_S4_S3_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i64*, i64** %4, align 8
  %9 = load i64*, i64** %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKxPxEET0_T_S6_S5_(i64* %8, i64* %9, i64* %10)
  ret i64* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKxPxEET0_T_S6_S5_(i64*, i64*, i64*) #0 comdat align 2 {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = call i64* @_ZSt4copyIPKxPxET0_T_S4_S3_(i64* %7, i64* %8, i64* %9)
  ret i64* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt4copyIPKxPxET0_T_S4_S3_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = call i64* @_ZSt12__miter_baseIPKxENSt11_Miter_baseIT_E13iterator_typeES3_(i64* %7)
  %9 = load i64*, i64** %5, align 8
  %10 = call i64* @_ZSt12__miter_baseIPKxENSt11_Miter_baseIT_E13iterator_typeES3_(i64* %9)
  %11 = load i64*, i64** %6, align 8
  %12 = call i64* @_ZSt14__copy_move_a2ILb0EPKxPxET1_T0_S4_S3_(i64* %8, i64* %10, i64* %11)
  ret i64* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt14__copy_move_a2ILb0EPKxPxET1_T0_S4_S3_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = call i64* @_ZSt12__niter_baseIPKxENSt11_Niter_baseIT_E13iterator_typeES3_(i64* %7)
  %9 = load i64*, i64** %5, align 8
  %10 = call i64* @_ZSt12__niter_baseIPKxENSt11_Niter_baseIT_E13iterator_typeES3_(i64* %9)
  %11 = load i64*, i64** %6, align 8
  %12 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %11)
  %13 = call i64* @_ZSt13__copy_move_aILb0EPKxPxET1_T0_S4_S3_(i64* %8, i64* %10, i64* %12)
  ret i64* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt12__miter_baseIPKxENSt11_Miter_baseIT_E13iterator_typeES3_(i64*) #4 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  %4 = call i64* @_ZNSt10_Iter_baseIPKxLb0EE7_S_baseES1_(i64* %3)
  ret i64* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt13__copy_move_aILb0EPKxPxET1_T0_S4_S3_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.228
  %8 = load i32, i32* @y.229
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -1908230122, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %75
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1908230122, label %20
    i32 -986442867, label %28
    i32 -271265337, label %64
    i32 1045470619, label %66
  ]

; <label>:19:                                     ; preds = %17
  br label %75

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -986442867, i32 1045470619
  store i32 %27, i32* %16
  br label %75

; <label>:28:                                     ; preds = %17
  %29 = alloca i64*, align 8
  %30 = alloca i64*, align 8
  %31 = alloca i64*, align 8
  %32 = alloca i8, align 1
  store i64* %0, i64** %29, align 8
  store i64* %1, i64** %30, align 8
  store i64* %2, i64** %31, align 8
  store i8 1, i8* %32, align 1
  %33 = load i64*, i64** %29, align 8
  %34 = load i64*, i64** %30, align 8
  %35 = load i64*, i64** %31, align 8
  %36 = call i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64* %33, i64* %34, i64* %35)
  store i64* %36, i64** %4
  %37 = load i32, i32* @x.228
  %38 = load i32, i32* @y.229
  %39 = add i32 %37, 624107542
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, 624107542
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -271265337, i32 1045470619
  store i32 %63, i32* %16
  br label %75

; <label>:64:                                     ; preds = %17
  %65 = load volatile i64*, i64** %4
  ret i64* %65

; <label>:66:                                     ; preds = %17
  %67 = alloca i64*, align 8
  %68 = alloca i64*, align 8
  %69 = alloca i64*, align 8
  %70 = alloca i8, align 1
  store i64* %0, i64** %67, align 8
  store i64* %1, i64** %68, align 8
  store i64* %2, i64** %69, align 8
  store i8 1, i8* %70, align 1
  %71 = load i64*, i64** %67, align 8
  %72 = load i64*, i64** %68, align 8
  %73 = load i64*, i64** %69, align 8
  %74 = call i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64* %71, i64* %72, i64* %73)
  store i32 -986442867, i32* %16
  br label %75

; <label>:75:                                     ; preds = %66, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIPKxENSt11_Niter_baseIT_E13iterator_typeES3_(i64*) #0 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  %4 = call i64* @_ZNSt10_Iter_baseIPKxLb0EE7_S_baseES1_(i64* %3)
  ret i64* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64*) #0 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  %4 = call i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64* %3)
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64*, i64*, i64*) #4 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca i64
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i64, align 8
  store i64* %0, i64** %6, align 8
  store i64* %1, i64** %7, align 8
  store i64* %2, i64** %8, align 8
  %10 = load i64*, i64** %7, align 8
  %11 = load i64*, i64** %6, align 8
  %12 = ptrtoint i64* %10 to i64
  %13 = ptrtoint i64* %11 to i64
  %14 = add i64 %12, 7203481036859314407
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, 7203481036859314407
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 8
  store i64 %18, i64* %9, align 8
  %19 = load i64, i64* %9, align 8
  store i64 %19, i64* %5
  %20 = alloca i32
  store i32 581600261, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %100
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 581600261, label %24
    i32 377525112, label %28
    i32 1483312766, label %35
    i32 -937377142, label %63
    i32 1572464414, label %94
    i32 138029109, label %96
  ]

; <label>:23:                                     ; preds = %21
  br label %100

; <label>:24:                                     ; preds = %21
  %25 = load volatile i64, i64* %5
  %26 = icmp ne i64 %25, 0
  %27 = select i1 %26, i32 377525112, i32 1483312766
  store i32 %27, i32* %20
  br label %100

; <label>:28:                                     ; preds = %21
  %29 = load i64*, i64** %8, align 8
  %30 = bitcast i64* %29 to i8*
  %31 = load i64*, i64** %6, align 8
  %32 = bitcast i64* %31 to i8*
  %33 = load i64, i64* %9, align 8
  %34 = mul i64 8, %33
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %30, i8* %32, i64 %34, i32 8, i1 false)
  store i32 1483312766, i32* %20
  br label %100

; <label>:35:                                     ; preds = %21
  %36 = load i32, i32* @x.234
  %37 = load i32, i32* @y.235
  %38 = add i32 %36, -2013844841
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, -2013844841
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 -937377142, i32 138029109
  store i32 %62, i32* %20
  br label %100

; <label>:63:                                     ; preds = %21
  %64 = load i64*, i64** %8, align 8
  %65 = load i64, i64* %9, align 8
  %66 = getelementptr inbounds i64, i64* %64, i64 %65
  store i64* %66, i64** %4
  %67 = load i32, i32* @x.234
  %68 = load i32, i32* @y.235
  %69 = add i32 %67, 1612448389
  %70 = sub i32 %69, 1
  %71 = sub i32 %70, 1612448389
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = xor i1 %75, true
  %78 = xor i1 %76, true
  %79 = xor i1 false, true
  %80 = and i1 %77, false
  %81 = and i1 %75, %79
  %82 = and i1 %78, false
  %83 = and i1 %76, %79
  %84 = or i1 %80, %81
  %85 = or i1 %82, %83
  %86 = xor i1 %84, %85
  %87 = or i1 %77, %78
  %88 = xor i1 %87, true
  %89 = or i1 false, %79
  %90 = and i1 %88, %89
  %91 = or i1 %86, %90
  %92 = or i1 %75, %76
  %93 = select i1 %91, i32 1572464414, i32 138029109
  store i32 %93, i32* %20
  br label %100

; <label>:94:                                     ; preds = %21
  %95 = load volatile i64*, i64** %4
  ret i64* %95

; <label>:96:                                     ; preds = %21
  %97 = load i64*, i64** %8, align 8
  %98 = load i64, i64* %9, align 8
  %99 = getelementptr inbounds i64, i64* %97, i64 %98
  store i32 -937377142, i32* %20
  br label %100

; <label>:100:                                    ; preds = %96, %63, %35, %28, %24, %23
  br label %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIPKxLb0EE7_S_baseES1_(i64*) #4 comdat align 2 {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64*) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.238
  %6 = load i32, i32* @y.239
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -879355762, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %48
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -879355762, label %18
    i32 399723770, label %26
    i32 -317194872, label %43
    i32 2034749788, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %48

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 399723770, i32 2034749788
  store i32 %25, i32* %14
  br label %48

; <label>:26:                                     ; preds = %15
  %27 = alloca i64*, align 8
  store i64* %0, i64** %27, align 8
  %28 = load i64*, i64** %27, align 8
  store i64* %28, i64** %2
  %29 = load i32, i32* @x.238
  %30 = load i32, i32* @y.239
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 -317194872, i32 2034749788
  store i32 %42, i32* %14
  br label %48

; <label>:43:                                     ; preds = %15
  %44 = load volatile i64*, i64** %2
  ret i64* %44

; <label>:45:                                     ; preds = %15
  %46 = alloca i64*, align 8
  store i64* %0, i64** %46, align 8
  %47 = load i64*, i64** %46, align 8
  store i32 399723770, i32* %14
  br label %48

; <label>:48:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt16initializer_listIxE4sizeEv(%"class.std::initializer_list"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.240
  %6 = load i32, i32* @y.241
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 2068797291, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 2068797291, label %18
    i32 1199710692, label %26
    i32 653525408, label %58
    i32 -1714372621, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1199710692, i32 -1714372621
  store i32 %25, i32* %14
  br label %65

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::initializer_list"*, align 8
  store %"class.std::initializer_list"* %0, %"class.std::initializer_list"** %27, align 8
  %28 = load %"class.std::initializer_list"*, %"class.std::initializer_list"** %27, align 8
  %29 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %28, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %2
  %31 = load i32, i32* @x.240
  %32 = load i32, i32* @y.241
  %33 = sub i32 %31, 343342253
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 343342253
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 653525408, i32 -1714372621
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile i64, i64* %2
  ret i64 %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::initializer_list"*, align 8
  store %"class.std::initializer_list"* %0, %"class.std::initializer_list"** %61, align 8
  %62 = load %"class.std::initializer_list"*, %"class.std::initializer_list"** %61, align 8
  %63 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %62, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  store i32 1199710692, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base"*, i64*, i64) #0 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca %"struct.std::_Vector_base"*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %6, align 8
  store i64* %1, i64** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6, align 8
  store %"struct.std::_Vector_base"* %9, %"struct.std::_Vector_base"** %5
  %10 = load i64*, i64** %7, align 8
  store i64* %10, i64** %4
  %11 = alloca i32
  store i32 88890166, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 88890166, label %15
    i32 -261418081, label %19
    i32 -2099281451, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64*, i64** %4
  %17 = icmp ne i64* %16, null
  %18 = select i1 %17, i32 -261418081, i32 -2099281451
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %21 to %"class.std::allocator.4"*
  %23 = load i64*, i64** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm(%"class.std::allocator.4"* dereferenceable(1) %22, i64* %23, i64 %24)
  store i32 -2099281451, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %3 to %"class.std::allocator.4"*
  call void @_ZNSaIxED2Ev(%"class.std::allocator.4"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm(%"class.std::allocator.4"* dereferenceable(1), i64*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.4"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.4"* %0, %"class.std::allocator.4"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.4"*, %"class.std::allocator.4"** %4, align 8
  %8 = bitcast %"class.std::allocator.4"* %7 to %"class.__gnu_cxx::new_allocator.5"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm(%"class.__gnu_cxx::new_allocator.5"* %8, i64* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm(%"class.__gnu_cxx::new_allocator.5"*, i64*, i64) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.248
  %7 = load i32, i32* @y.249
  %8 = sub i32 %6, -1134114995
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1134114995
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -79631717, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -79631717, label %20
    i32 282896700, label %40
    i32 2090272036, label %62
    i32 1509158473, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 282896700, i32 1509158473
  store i32 %39, i32* %16
  br label %70

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::new_allocator.5"*, align 8
  %42 = alloca i64*, align 8
  %43 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.5"* %0, %"class.__gnu_cxx::new_allocator.5"** %41, align 8
  store i64* %1, i64** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.__gnu_cxx::new_allocator.5"*, %"class.__gnu_cxx::new_allocator.5"** %41, align 8
  %45 = load i64*, i64** %42, align 8
  %46 = bitcast i64* %45 to i8*
  call void @_ZdlPv(i8* %46) #3
  %47 = load i32, i32* @x.248
  %48 = load i32, i32* @y.249
  %49 = add i32 %47, 1952811287
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, 1952811287
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 2090272036, i32 1509158473
  store i32 %61, i32* %16
  br label %70

; <label>:62:                                     ; preds = %17
  ret void

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.__gnu_cxx::new_allocator.5"*, align 8
  %65 = alloca i64*, align 8
  %66 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.5"* %0, %"class.__gnu_cxx::new_allocator.5"** %64, align 8
  store i64* %1, i64** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"class.__gnu_cxx::new_allocator.5"*, %"class.__gnu_cxx::new_allocator.5"** %64, align 8
  %68 = load i64*, i64** %65, align 8
  %69 = bitcast i64* %68 to i8*
  call void @_ZdlPv(i8* %69) #3
  store i32 282896700, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64*, i64*, %"class.std::allocator.4"* dereferenceable(1)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca %"class.std::allocator.4"*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store %"class.std::allocator.4"* %2, %"class.std::allocator.4"** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = load i64*, i64** %5, align 8
  call void @_ZSt8_DestroyIPxEvT_S1_(i64* %7, i64* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPxEvT_S1_(i64*, i64*) #0 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load i64*, i64** %3, align 8
  %6 = load i64*, i64** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_(i64* %5, i64* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_(i64*, i64*) #4 comdat align 2 {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE16_M_emplace_equalIJxRS4_EEESt17_Rb_tree_iteratorIS5_EDpOT_(%"class.std::_Rb_tree"*, i64* dereferenceable(8), %"class.std::vector"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %5 = alloca %"class.std::_Rb_tree"*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.std::vector"*, align 8
  %8 = alloca %"struct.std::_Rb_tree_node.20"*, align 8
  %9 = alloca %"struct.std::pair.22", align 8
  %10 = alloca i8*
  %11 = alloca i32
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %5, align 8
  store i64* %1, i64** %6, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %7, align 8
  %12 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5, align 8
  %13 = load i64*, i64** %6, align 8
  %14 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %13) #3
  %15 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  %16 = call dereferenceable(24) %"class.std::vector"* @_ZSt7forwardIRSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::vector"* dereferenceable(24) %15) #3
  %17 = call %"struct.std::_Rb_tree_node.20"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE14_M_create_nodeIJxRS4_EEEPSt13_Rb_tree_nodeIS5_EDpOT_(%"class.std::_Rb_tree"* %12, i64* dereferenceable(8) %14, %"class.std::vector"* dereferenceable(24) %16)
  store %"struct.std::_Rb_tree_node.20"* %17, %"struct.std::_Rb_tree_node.20"** %8, align 8
  %18 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %8, align 8
  %19 = invoke dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E(%"struct.std::_Rb_tree_node.20"* %18)
          to label %20 unwind label %80

; <label>:20:                                     ; preds = %3
  %21 = load i32, i32* @x.256
  %22 = load i32, i32* @y.257
  %23 = sub i32 %21, -577324191
  %24 = sub i32 %23, 1
  %25 = add i32 %24, -577324191
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 true, true
  %34 = and i1 %31, true
  %35 = and i1 %29, %33
  %36 = and i1 %32, true
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 true, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  br i1 %45, label %47, label %214

; <label>:47:                                     ; preds = %20, %214
  %48 = load i32, i32* @x.256
  %49 = load i32, i32* @y.257
  %50 = add i32 %48, -77413170
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, -77413170
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  br i1 %60, label %62, label %214

; <label>:62:                                     ; preds = %47
  %63 = invoke { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE23_M_get_insert_equal_posERS1_(%"class.std::_Rb_tree"* %12, i64* dereferenceable(8) %19)
          to label %64 unwind label %80

; <label>:64:                                     ; preds = %62
  %65 = bitcast %"struct.std::pair.22"* %9 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %66 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %65, i32 0, i32 0
  %67 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %63, 0
  store %"struct.std::_Rb_tree_node_base"* %67, %"struct.std::_Rb_tree_node_base"** %66, align 8
  %68 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %65, i32 0, i32 1
  %69 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %63, 1
  store %"struct.std::_Rb_tree_node_base"* %69, %"struct.std::_Rb_tree_node_base"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::pair.22", %"struct.std::pair.22"* %9, i32 0, i32 0
  %71 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::pair.22", %"struct.std::pair.22"* %9, i32 0, i32 1
  %73 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %72, align 8
  %74 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %8, align 8
  %75 = invoke %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS5_E(%"class.std::_Rb_tree"* %12, %"struct.std::_Rb_tree_node_base"* %71, %"struct.std::_Rb_tree_node_base"* %73, %"struct.std::_Rb_tree_node.20"* %74)
          to label %76 unwind label %80

; <label>:76:                                     ; preds = %64
  %77 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %4, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %75, %"struct.std::_Rb_tree_node_base"** %77, align 8
  %78 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %4, i32 0, i32 0
  %79 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %78, align 8
  ret %"struct.std::_Rb_tree_node_base"* %79

; <label>:80:                                     ; preds = %64, %62, %3
  %81 = load i32, i32* @x.256
  %82 = load i32, i32* @y.257
  %83 = sub i32 %81, -224941524
  %84 = sub i32 %83, 1
  %85 = add i32 %84, -224941524
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  br i1 %93, label %95, label %215

; <label>:95:                                     ; preds = %80, %215
  %96 = landingpad { i8*, i32 }
          catch i8* null
  %97 = extractvalue { i8*, i32 } %96, 0
  store i8* %97, i8** %10, align 8
  %98 = extractvalue { i8*, i32 } %96, 1
  store i32 %98, i32* %11, align 4
  %99 = load i32, i32* @x.256
  %100 = load i32, i32* @y.257
  %101 = sub i32 0, 1
  %102 = add i32 %99, %101
  %103 = sub i32 %99, 1
  %104 = mul i32 %99, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %100, 10
  %108 = and i1 %106, %107
  %109 = xor i1 %106, %107
  %110 = or i1 %108, %109
  %111 = or i1 %106, %107
  br i1 %110, label %112, label %215

; <label>:112:                                    ; preds = %95
  br label %113

; <label>:113:                                    ; preds = %112
  %114 = load i8*, i8** %10, align 8
  %115 = call i8* @__cxa_begin_catch(i8* %114) #3
  %116 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %8, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS5_E(%"class.std::_Rb_tree"* %12, %"struct.std::_Rb_tree_node.20"* %116) #3
  invoke void @__cxa_rethrow() #14
          to label %160 unwind label %117

; <label>:117:                                    ; preds = %113
  %118 = load i32, i32* @x.256
  %119 = load i32, i32* @y.257
  %120 = sub i32 0, 1
  %121 = add i32 %118, %120
  %122 = sub i32 %118, 1
  %123 = mul i32 %118, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %119, 10
  %127 = and i1 %125, %126
  %128 = xor i1 %125, %126
  %129 = or i1 %127, %128
  %130 = or i1 %125, %126
  br i1 %129, label %131, label %219

; <label>:131:                                    ; preds = %117, %219
  %132 = landingpad { i8*, i32 }
          cleanup
  %133 = extractvalue { i8*, i32 } %132, 0
  store i8* %133, i8** %10, align 8
  %134 = extractvalue { i8*, i32 } %132, 1
  store i32 %134, i32* %11, align 4
  %135 = load i32, i32* @x.256
  %136 = load i32, i32* @y.257
  %137 = sub i32 %135, 863708263
  %138 = sub i32 %137, 1
  %139 = add i32 %138, 863708263
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = and i1 %143, %144
  %146 = xor i1 %143, %144
  %147 = or i1 %145, %146
  %148 = or i1 %143, %144
  br i1 %147, label %149, label %219

; <label>:149:                                    ; preds = %131
  invoke void @__cxa_end_catch()
          to label %150 unwind label %157

; <label>:150:                                    ; preds = %149
  br label %152
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:152:                                    ; preds = %150
  %153 = load i8*, i8** %10, align 8
  %154 = load i32, i32* %11, align 4
  %155 = insertvalue { i8*, i32 } undef, i8* %153, 0
  %156 = insertvalue { i8*, i32 } %155, i32 %154, 1
  resume { i8*, i32 } %156

; <label>:157:                                    ; preds = %149
  %158 = landingpad { i8*, i32 }
          catch i8* null
  %159 = extractvalue { i8*, i32 } %158, 0
  call void @__clang_call_terminate(i8* %159) #11
  unreachable

; <label>:160:                                    ; preds = %113
  %161 = load i32, i32* @x.256
  %162 = load i32, i32* @y.257
  %163 = sub i32 %161, 421634451
  %164 = sub i32 %163, 1
  %165 = add i32 %164, 421634451
  %166 = sub i32 %161, 1
  %167 = mul i32 %161, %165
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %162, 10
  %171 = xor i1 %169, true
  %172 = xor i1 %170, true
  %173 = xor i1 true, true
  %174 = and i1 %171, true
  %175 = and i1 %169, %173
  %176 = and i1 %172, true
  %177 = and i1 %170, %173
  %178 = or i1 %174, %175
  %179 = or i1 %176, %177
  %180 = xor i1 %178, %179
  %181 = or i1 %171, %172
  %182 = xor i1 %181, true
  %183 = or i1 true, %173
  %184 = and i1 %182, %183
  %185 = or i1 %180, %184
  %186 = or i1 %169, %170
  br i1 %185, label %187, label %223

; <label>:187:                                    ; preds = %160, %223
  %188 = load i32, i32* @x.256
  %189 = load i32, i32* @y.257
  %190 = sub i32 0, 1
  %191 = add i32 %188, %190
  %192 = sub i32 %188, 1
  %193 = mul i32 %188, %191
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %189, 10
  %197 = xor i1 %195, true
  %198 = xor i1 %196, true
  %199 = xor i1 false, true
  %200 = and i1 %197, false
  %201 = and i1 %195, %199
  %202 = and i1 %198, false
  %203 = and i1 %196, %199
  %204 = or i1 %200, %201
  %205 = or i1 %202, %203
  %206 = xor i1 %204, %205
  %207 = or i1 %197, %198
  %208 = xor i1 %207, true
  %209 = or i1 false, %199
  %210 = and i1 %208, %209
  %211 = or i1 %206, %210
  %212 = or i1 %195, %196
  br i1 %211, label %213, label %223

; <label>:213:                                    ; preds = %187
  unreachable

; <label>:214:                                    ; preds = %47, %20
  br label %47

; <label>:215:                                    ; preds = %95, %80
  %216 = landingpad { i8*, i32 }
          catch i8* null
  %217 = extractvalue { i8*, i32 } %216, 0
  store i8* %217, i8** %10, align 8
  %218 = extractvalue { i8*, i32 } %216, 1
  store i32 %218, i32* %11, align 4
  br label %95

; <label>:219:                                    ; preds = %131, %117
  %220 = landingpad { i8*, i32 }
          cleanup
  %221 = extractvalue { i8*, i32 } %220, 0
  store i8* %221, i8** %10, align 8
  %222 = extractvalue { i8*, i32 } %220, 1
  store i32 %222, i32* %11, align 4
  br label %131

; <label>:223:                                    ; preds = %187, %160
  br label %187
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.258
  %6 = load i32, i32* @y.259
  %7 = add i32 %5, -1847690400
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1847690400
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -233818067, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -233818067, label %19
    i32 630091906, label %27
    i32 -1016215861, label %57
    i32 585825580, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 630091906, i32 585825580
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca i64*, align 8
  store i64* %0, i64** %28, align 8
  %29 = load i64*, i64** %28, align 8
  store i64* %29, i64** %2
  %30 = load i32, i32* @x.258
  %31 = load i32, i32* @y.259
  %32 = add i32 %30, -1781008286
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -1781008286
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -1016215861, i32 585825580
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile i64*, i64** %2
  ret i64* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca i64*, align 8
  store i64* %0, i64** %60, align 8
  %61 = load i64*, i64** %60, align 8
  store i32 630091906, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector"* @_ZSt7forwardIRSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::vector"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.260
  %6 = load i32, i32* @y.261
  %7 = add i32 %5, -1820161535
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1820161535
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1693786791, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %49
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1693786791, label %19
    i32 13362303, label %27
    i32 -2106427463, label %44
    i32 1052265435, label %46
  ]

; <label>:18:                                     ; preds = %16
  br label %49

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 13362303, i32 1052265435
  store i32 %26, i32* %15
  br label %49

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %28, align 8
  %29 = load %"class.std::vector"*, %"class.std::vector"** %28, align 8
  store %"class.std::vector"* %29, %"class.std::vector"** %2
  %30 = load i32, i32* @x.260
  %31 = load i32, i32* @y.261
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -2106427463, i32 1052265435
  store i32 %43, i32* %15
  br label %49

; <label>:44:                                     ; preds = %16
  %45 = load volatile %"class.std::vector"*, %"class.std::vector"** %2
  ret %"class.std::vector"* %45

; <label>:46:                                     ; preds = %16
  %47 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %47, align 8
  %48 = load %"class.std::vector"*, %"class.std::vector"** %47, align 8
  store i32 13362303, i32* %15
  br label %49

; <label>:49:                                     ; preds = %46, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.20"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE14_M_create_nodeIJxRS4_EEEPSt13_Rb_tree_nodeIS5_EDpOT_(%"class.std::_Rb_tree"*, i64* dereferenceable(8), %"class.std::vector"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"struct.std::_Rb_tree_node.20"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.262
  %8 = load i32, i32* @y.263
  %9 = add i32 %7, 1043867810
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 1043867810
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1694077314, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %96
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1694077314, label %21
    i32 191594823, label %41
    i32 1126732754, label %81
    i32 692567373, label %83
  ]

; <label>:20:                                     ; preds = %18
  br label %96

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 191594823, i32 692567373
  store i32 %40, i32* %17
  br label %96

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::_Rb_tree"*, align 8
  %43 = alloca i64*, align 8
  %44 = alloca %"class.std::vector"*, align 8
  %45 = alloca %"struct.std::_Rb_tree_node.20"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %42, align 8
  store i64* %1, i64** %43, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %44, align 8
  %46 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %42, align 8
  %47 = call %"struct.std::_Rb_tree_node.20"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE11_M_get_nodeEv(%"class.std::_Rb_tree"* %46)
  store %"struct.std::_Rb_tree_node.20"* %47, %"struct.std::_Rb_tree_node.20"** %45, align 8
  %48 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %45, align 8
  %49 = load i64*, i64** %43, align 8
  %50 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %49) #3
  %51 = load %"class.std::vector"*, %"class.std::vector"** %44, align 8
  %52 = call dereferenceable(24) %"class.std::vector"* @_ZSt7forwardIRSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::vector"* dereferenceable(24) %51) #3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE17_M_construct_nodeIJxRS4_EEEvPSt13_Rb_tree_nodeIS5_EDpOT_(%"class.std::_Rb_tree"* %46, %"struct.std::_Rb_tree_node.20"* %48, i64* dereferenceable(8) %50, %"class.std::vector"* dereferenceable(24) %52)
  %53 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %45, align 8
  store %"struct.std::_Rb_tree_node.20"* %53, %"struct.std::_Rb_tree_node.20"** %4
  %54 = load i32, i32* @x.262
  %55 = load i32, i32* @y.263
  %56 = add i32 %54, -276117121
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, -276117121
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 true, true
  %67 = and i1 %64, true
  %68 = and i1 %62, %66
  %69 = and i1 %65, true
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 true, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  %80 = select i1 %78, i32 1126732754, i32 692567373
  store i32 %80, i32* %17
  br label %96

; <label>:81:                                     ; preds = %18
  %82 = load volatile %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %4
  ret %"struct.std::_Rb_tree_node.20"* %82

; <label>:83:                                     ; preds = %18
  %84 = alloca %"class.std::_Rb_tree"*, align 8
  %85 = alloca i64*, align 8
  %86 = alloca %"class.std::vector"*, align 8
  %87 = alloca %"struct.std::_Rb_tree_node.20"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %84, align 8
  store i64* %1, i64** %85, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %86, align 8
  %88 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %84, align 8
  %89 = call %"struct.std::_Rb_tree_node.20"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE11_M_get_nodeEv(%"class.std::_Rb_tree"* %88)
  store %"struct.std::_Rb_tree_node.20"* %89, %"struct.std::_Rb_tree_node.20"** %87, align 8
  %90 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %87, align 8
  %91 = load i64*, i64** %85, align 8
  %92 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %91) #3
  %93 = load %"class.std::vector"*, %"class.std::vector"** %86, align 8
  %94 = call dereferenceable(24) %"class.std::vector"* @_ZSt7forwardIRSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::vector"* dereferenceable(24) %93) #3
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE17_M_construct_nodeIJxRS4_EEEvPSt13_Rb_tree_nodeIS5_EDpOT_(%"class.std::_Rb_tree"* %88, %"struct.std::_Rb_tree_node.20"* %90, i64* dereferenceable(8) %92, %"class.std::vector"* dereferenceable(24) %94)
  %95 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %87, align 8
  store i32 191594823, i32* %17
  br label %96

; <label>:96:                                     ; preds = %83, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE23_M_get_insert_equal_posERS1_(%"class.std::_Rb_tree"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.std::_Rb_tree"*
  %4 = alloca %"struct.std::_Rb_tree_node.20"**
  %5 = alloca %"struct.std::_Rb_tree_node.20"**
  %6 = alloca i64**
  %7 = alloca %"struct.std::pair.22"*
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.264
  %11 = load i32, i32* @y.265
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 -1320641109, i32* %19
  %20 = alloca %"struct.std::_Rb_tree_node.20"*
  br label %21

; <label>:21:                                     ; preds = %2, %122
  %22 = load i32, i32* %19
  switch i32 %22, label %23 [
    i32 -1320641109, label %24
    i32 1354316500, label %32
    i32 -69746574, label %73
    i32 -1685041755, label %74
    i32 1817852329, label %79
    i32 -1997807035, label %93
    i32 2050862744, label %98
    i32 -1132373271, label %103
    i32 -1500650605, label %106
    i32 404241726, label %113
  ]

; <label>:23:                                     ; preds = %21
  br label %122

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 1354316500, i32 404241726
  store i32 %31, i32* %19
  br label %122

; <label>:32:                                     ; preds = %21
  %33 = alloca %"struct.std::pair.22", align 8
  store %"struct.std::pair.22"* %33, %"struct.std::pair.22"** %7
  %34 = alloca %"class.std::_Rb_tree"*, align 8
  %35 = alloca i64*, align 8
  store i64** %35, i64*** %6
  %36 = alloca %"struct.std::_Rb_tree_node.20"*, align 8
  store %"struct.std::_Rb_tree_node.20"** %36, %"struct.std::_Rb_tree_node.20"*** %5
  %37 = alloca %"struct.std::_Rb_tree_node.20"*, align 8
  store %"struct.std::_Rb_tree_node.20"** %37, %"struct.std::_Rb_tree_node.20"*** %4
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %34, align 8
  %38 = load volatile i64**, i64*** %6
  store i64* %1, i64** %38, align 8
  %39 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %34, align 8
  store %"class.std::_Rb_tree"* %39, %"class.std::_Rb_tree"** %3
  %40 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3
  %41 = call %"struct.std::_Rb_tree_node.20"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE8_M_beginEv(%"class.std::_Rb_tree"* %40) #3
  %42 = load volatile %"struct.std::_Rb_tree_node.20"**, %"struct.std::_Rb_tree_node.20"*** %5
  store %"struct.std::_Rb_tree_node.20"* %41, %"struct.std::_Rb_tree_node.20"** %42, align 8
  %43 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3
  %44 = call %"struct.std::_Rb_tree_node.20"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE6_M_endEv(%"class.std::_Rb_tree"* %43) #3
  %45 = load volatile %"struct.std::_Rb_tree_node.20"**, %"struct.std::_Rb_tree_node.20"*** %4
  store %"struct.std::_Rb_tree_node.20"* %44, %"struct.std::_Rb_tree_node.20"** %45, align 8
  %46 = load i32, i32* @x.264
  %47 = load i32, i32* @y.265
  %48 = add i32 %46, -1132769060
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, -1132769060
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -69746574, i32 404241726
  store i32 %72, i32* %19
  br label %122

; <label>:73:                                     ; preds = %21
  store i32 -1685041755, i32* %19
  br label %122

; <label>:74:                                     ; preds = %21
  %75 = load volatile %"struct.std::_Rb_tree_node.20"**, %"struct.std::_Rb_tree_node.20"*** %5
  %76 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %75, align 8
  %77 = icmp ne %"struct.std::_Rb_tree_node.20"* %76, null
  %78 = select i1 %77, i32 1817852329, i32 -1500650605
  store i32 %78, i32* %19
  br label %122

; <label>:79:                                     ; preds = %21
  %80 = load volatile %"struct.std::_Rb_tree_node.20"**, %"struct.std::_Rb_tree_node.20"*** %5
  %81 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %80, align 8
  %82 = load volatile %"struct.std::_Rb_tree_node.20"**, %"struct.std::_Rb_tree_node.20"*** %4
  store %"struct.std::_Rb_tree_node.20"* %81, %"struct.std::_Rb_tree_node.20"** %82, align 8
  %83 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3
  %84 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %83, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %84, i32 0, i32 0
  %86 = load volatile i64**, i64*** %6
  %87 = load i64*, i64** %86, align 8
  %88 = load volatile %"struct.std::_Rb_tree_node.20"**, %"struct.std::_Rb_tree_node.20"*** %5
  %89 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %88, align 8
  %90 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E(%"struct.std::_Rb_tree_node.20"* %89)
  %91 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %85, i64* dereferenceable(8) %87, i64* dereferenceable(8) %90)
  %92 = select i1 %91, i32 -1997807035, i32 2050862744
  store i32 %92, i32* %19
  br label %122

; <label>:93:                                     ; preds = %21
  %94 = load volatile %"struct.std::_Rb_tree_node.20"**, %"struct.std::_Rb_tree_node.20"*** %5
  %95 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %94, align 8
  %96 = bitcast %"struct.std::_Rb_tree_node.20"* %95 to %"struct.std::_Rb_tree_node_base"*
  %97 = call %"struct.std::_Rb_tree_node.20"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %96) #3
  store i32 -1132373271, i32* %19
  store %"struct.std::_Rb_tree_node.20"* %97, %"struct.std::_Rb_tree_node.20"** %20
  br label %122

; <label>:98:                                     ; preds = %21
  %99 = load volatile %"struct.std::_Rb_tree_node.20"**, %"struct.std::_Rb_tree_node.20"*** %5
  %100 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %99, align 8
  %101 = bitcast %"struct.std::_Rb_tree_node.20"* %100 to %"struct.std::_Rb_tree_node_base"*
  %102 = call %"struct.std::_Rb_tree_node.20"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %101) #3
  store i32 -1132373271, i32* %19
  store %"struct.std::_Rb_tree_node.20"* %102, %"struct.std::_Rb_tree_node.20"** %20
  br label %122

; <label>:103:                                    ; preds = %21
  %104 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %20
  %105 = load volatile %"struct.std::_Rb_tree_node.20"**, %"struct.std::_Rb_tree_node.20"*** %5
  store %"struct.std::_Rb_tree_node.20"* %104, %"struct.std::_Rb_tree_node.20"** %105, align 8
  store i32 -1685041755, i32* %19
  br label %122

; <label>:106:                                    ; preds = %21
  %107 = load volatile %"struct.std::pair.22"*, %"struct.std::pair.22"** %7
  %108 = load volatile %"struct.std::_Rb_tree_node.20"**, %"struct.std::_Rb_tree_node.20"*** %5
  %109 = load volatile %"struct.std::_Rb_tree_node.20"**, %"struct.std::_Rb_tree_node.20"*** %4
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxSt6vectorIxSaIxEEEESC_vEEOT_OT0_(%"struct.std::pair.22"* %107, %"struct.std::_Rb_tree_node.20"** dereferenceable(8) %108, %"struct.std::_Rb_tree_node.20"** dereferenceable(8) %109)
  %110 = load volatile %"struct.std::pair.22"*, %"struct.std::pair.22"** %7
  %111 = bitcast %"struct.std::pair.22"* %110 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %112 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %111, align 8
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %112

; <label>:113:                                    ; preds = %21
  %114 = alloca %"struct.std::pair.22", align 8
  %115 = alloca %"class.std::_Rb_tree"*, align 8
  %116 = alloca i64*, align 8
  %117 = alloca %"struct.std::_Rb_tree_node.20"*, align 8
  %118 = alloca %"struct.std::_Rb_tree_node.20"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %115, align 8
  store i64* %1, i64** %116, align 8
  %119 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %115, align 8
  %120 = call %"struct.std::_Rb_tree_node.20"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE8_M_beginEv(%"class.std::_Rb_tree"* %119) #3
  store %"struct.std::_Rb_tree_node.20"* %120, %"struct.std::_Rb_tree_node.20"** %117, align 8
  %121 = call %"struct.std::_Rb_tree_node.20"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE6_M_endEv(%"class.std::_Rb_tree"* %119) #3
  store %"struct.std::_Rb_tree_node.20"* %121, %"struct.std::_Rb_tree_node.20"** %118, align 8
  store i32 1354316500, i32* %19
  br label %122

; <label>:122:                                    ; preds = %113, %103, %98, %93, %79, %74, %73, %32, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E(%"struct.std::_Rb_tree_node.20"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.20"*, align 8
  %3 = alloca %"struct.std::_Select1st", align 1
  store %"struct.std::_Rb_tree_node.20"* %0, %"struct.std::_Rb_tree_node.20"** %2, align 8
  %4 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %2, align 8
  %5 = call dereferenceable(32) %"struct.std::pair.18"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE8_S_valueEPKSt13_Rb_tree_nodeIS5_E(%"struct.std::_Rb_tree_node.20"* %4)
  %6 = call dereferenceable(8) i64* @_ZNKSt10_Select1stISt4pairIKxSt6vectorIxSaIxEEEEclERKS5_(%"struct.std::_Select1st"* %3, %"struct.std::pair.18"* dereferenceable(32) %5)
  ret i64* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSD_PSt13_Rb_tree_nodeIS5_E(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node.20"*) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca %"struct.std::_Rb_tree_node_base"*
  %7 = alloca %"class.std::_Rb_tree"*
  %8 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %9 = alloca %"class.std::_Rb_tree"*, align 8
  %10 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %11 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %12 = alloca %"struct.std::_Rb_tree_node.20"*, align 8
  %13 = alloca i8, align 1
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %9, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %10, align 8
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %11, align 8
  store %"struct.std::_Rb_tree_node.20"* %3, %"struct.std::_Rb_tree_node.20"** %12, align 8
  %14 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %9, align 8
  store %"class.std::_Rb_tree"* %14, %"class.std::_Rb_tree"** %7
  %15 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
  store %"struct.std::_Rb_tree_node_base"* %15, %"struct.std::_Rb_tree_node_base"** %6
  %16 = alloca i32
  store i32 -370702156, i32* %16
  %17 = alloca i1
  br label %18

; <label>:18:                                     ; preds = %4, %104
  %19 = load i32, i32* %16
  switch i32 %19, label %20 [
    i32 -370702156, label %21
    i32 -625432955, label %25
    i32 -821054200, label %41
    i32 -1785211748, label %62
    i32 -664508871, label %65
    i32 670647799, label %74
    i32 -813570436, label %98
  ]

; <label>:20:                                     ; preds = %18
  br label %104

; <label>:21:                                     ; preds = %18
  %22 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6
  %23 = icmp ne %"struct.std::_Rb_tree_node_base"* %22, null
  %24 = select i1 %23, i32 670647799, i32 -625432955
  store i32 %24, i32* %16
  store i1 true, i1* %17
  br label %104

; <label>:25:                                     ; preds = %18
  %26 = load i32, i32* @x.268
  %27 = load i32, i32* @y.269
  %28 = sub i32 %26, 348842488
  %29 = sub i32 %28, 1
  %30 = add i32 %29, 348842488
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  %40 = select i1 %38, i32 -821054200, i32 -813570436
  store i32 %40, i32* %16
  br label %104

; <label>:41:                                     ; preds = %18
  %42 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %43 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %44 = call %"struct.std::_Rb_tree_node.20"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE6_M_endEv(%"class.std::_Rb_tree"* %43) #3
  %45 = bitcast %"struct.std::_Rb_tree_node.20"* %44 to %"struct.std::_Rb_tree_node_base"*
  %46 = icmp eq %"struct.std::_Rb_tree_node_base"* %42, %45
  store i1 %46, i1* %5
  %47 = load i32, i32* @x.268
  %48 = load i32, i32* @y.269
  %49 = add i32 %47, -1925351073
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -1925351073
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -1785211748, i32 -813570436
  store i32 %61, i32* %16
  br label %104

; <label>:62:                                     ; preds = %18
  %63 = load volatile i1, i1* %5
  %64 = select i1 %63, i32 670647799, i32 -664508871
  store i32 %64, i32* %16
  store i1 true, i1* %17
  br label %104

; <label>:65:                                     ; preds = %18
  %66 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %67 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %66, i32 0, i32 0
  %68 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %67, i32 0, i32 0
  %69 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %12, align 8
  %70 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE6_S_keyEPKSt13_Rb_tree_nodeIS5_E(%"struct.std::_Rb_tree_node.20"* %69)
  %71 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %72 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %71)
  %73 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %68, i64* dereferenceable(8) %70, i64* dereferenceable(8) %72)
  store i32 670647799, i32* %16
  store i1 %73, i1* %17
  br label %104

; <label>:74:                                     ; preds = %18
  %75 = load i1, i1* %17
  %76 = zext i1 %75 to i8
  store i8 %76, i8* %13, align 1
  %77 = load i8, i8* %13, align 1
  %78 = trunc i8 %77 to i1
  %79 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %12, align 8
  %80 = bitcast %"struct.std::_Rb_tree_node.20"* %79 to %"struct.std::_Rb_tree_node_base"*
  %81 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %82 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %83 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %82, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %83, i32 0, i32 1
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %78, %"struct.std::_Rb_tree_node_base"* %80, %"struct.std::_Rb_tree_node_base"* %81, %"struct.std::_Rb_tree_node_base"* dereferenceable(32) %84) #3
  %85 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %86 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %85, i32 0, i32 0
  %87 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %86, i32 0, i32 2
  %88 = load i64, i64* %87, align 8
  %89 = sub i64 0, %88
  %90 = sub i64 0, 1
  %91 = add i64 %89, %90
  %92 = sub i64 0, %91
  %93 = add i64 %88, 1
  store i64 %92, i64* %87, align 8
  %94 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %12, align 8
  %95 = bitcast %"struct.std::_Rb_tree_node.20"* %94 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt6vectorIxSaIxEEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %8, %"struct.std::_Rb_tree_node_base"* %95) #3
  %96 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %8, i32 0, i32 0
  %97 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %96, align 8
  ret %"struct.std::_Rb_tree_node_base"* %97

; <label>:98:                                     ; preds = %18
  %99 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %11, align 8
  %100 = load volatile %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %7
  %101 = call %"struct.std::_Rb_tree_node.20"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE6_M_endEv(%"class.std::_Rb_tree"* %100) #3
  %102 = bitcast %"struct.std::_Rb_tree_node.20"* %101 to %"struct.std::_Rb_tree_node_base"*
  %103 = icmp eq %"struct.std::_Rb_tree_node_base"* %99, %102
  store i32 -821054200, i32* %16
  br label %104

; <label>:104:                                    ; preds = %98, %65, %62, %41, %25, %21, %20
  br label %18
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #11

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.20"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE11_M_get_nodeEv(%"class.std::_Rb_tree"*) #0 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %3) #3
  %5 = call %"struct.std::_Rb_tree_node.20"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEEE8allocateERS8_m(%"class.std::allocator"* dereferenceable(1) %4, i64 1)
  ret %"struct.std::_Rb_tree_node.20"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE17_M_construct_nodeIJxRS4_EEEvPSt13_Rb_tree_nodeIS5_EDpOT_(%"class.std::_Rb_tree"*, %"struct.std::_Rb_tree_node.20"*, i64* dereferenceable(8), %"class.std::vector"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::_Rb_tree"*, align 8
  %6 = alloca %"struct.std::_Rb_tree_node.20"*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::vector"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %5, align 8
  store %"struct.std::_Rb_tree_node.20"* %1, %"struct.std::_Rb_tree_node.20"** %6, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::vector"* %3, %"class.std::vector"** %8, align 8
  %11 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %5, align 8
  %12 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %6, align 8
  %13 = bitcast %"struct.std::_Rb_tree_node.20"* %12 to i8*
  %14 = bitcast i8* %13 to %"struct.std::_Rb_tree_node.20"*
  %15 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree"* %11) #3
  %16 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %6, align 8
  %17 = invoke %"struct.std::pair.18"* @_ZNSt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEE9_M_valptrEv(%"struct.std::_Rb_tree_node.20"* %16)
          to label %18 unwind label %65

; <label>:18:                                     ; preds = %4
  %19 = load i32, i32* @x.272
  %20 = load i32, i32* @y.273
  %21 = sub i32 %19, -1376116055
  %22 = sub i32 %21, 1
  %23 = add i32 %22, -1376116055
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  br i1 %31, label %33, label %278

; <label>:33:                                     ; preds = %18, %278
  %34 = load i64*, i64** %7, align 8
  %35 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %34) #3
  %36 = load %"class.std::vector"*, %"class.std::vector"** %8, align 8
  %37 = call dereferenceable(24) %"class.std::vector"* @_ZSt7forwardIRSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::vector"* dereferenceable(24) %36) #3
  %38 = load i32, i32* @x.272
  %39 = load i32, i32* @y.273
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  br i1 %61, label %63, label %278

; <label>:63:                                     ; preds = %33
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEEE9constructIS6_JxRS5_EEEvRS8_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1) %15, %"struct.std::pair.18"* %17, i64* dereferenceable(8) %35, %"class.std::vector"* dereferenceable(24) %37)
          to label %64 unwind label %65

; <label>:64:                                     ; preds = %63
  br label %174

; <label>:65:                                     ; preds = %63, %4
  %66 = landingpad { i8*, i32 }
          catch i8* null
  %67 = extractvalue { i8*, i32 } %66, 0
  store i8* %67, i8** %9, align 8
  %68 = extractvalue { i8*, i32 } %66, 1
  store i32 %68, i32* %10, align 4
  br label %69

; <label>:69:                                     ; preds = %65
  %70 = load i32, i32* @x.272
  %71 = load i32, i32* @y.273
  %72 = sub i32 %70, -397804683
  %73 = sub i32 %72, 1
  %74 = add i32 %73, -397804683
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 true, true
  %83 = and i1 %80, true
  %84 = and i1 %78, %82
  %85 = and i1 %81, true
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 true, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  br i1 %94, label %96, label %283

; <label>:96:                                     ; preds = %69, %283
  %97 = load i8*, i8** %9, align 8
  %98 = call i8* @__cxa_begin_catch(i8* %97) #3
  %99 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %6, align 8
  %100 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %6, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS5_E(%"class.std::_Rb_tree"* %11, %"struct.std::_Rb_tree_node.20"* %100) #3
  %101 = load i32, i32* @x.272
  %102 = load i32, i32* @y.273
  %103 = sub i32 0, 1
  %104 = add i32 %101, %103
  %105 = sub i32 %101, 1
  %106 = mul i32 %101, %104
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %102, 10
  %110 = xor i1 %108, true
  %111 = xor i1 %109, true
  %112 = xor i1 false, true
  %113 = and i1 %110, false
  %114 = and i1 %108, %112
  %115 = and i1 %111, false
  %116 = and i1 %109, %112
  %117 = or i1 %113, %114
  %118 = or i1 %115, %116
  %119 = xor i1 %117, %118
  %120 = or i1 %110, %111
  %121 = xor i1 %120, true
  %122 = or i1 false, %112
  %123 = and i1 %121, %122
  %124 = or i1 %119, %123
  %125 = or i1 %108, %109
  br i1 %124, label %126, label %283

; <label>:126:                                    ; preds = %96
  invoke void @__cxa_rethrow() #14
          to label %235 unwind label %127

; <label>:127:                                    ; preds = %126
  %128 = load i32, i32* @x.272
  %129 = load i32, i32* @y.273
  %130 = add i32 %128, 1364668021
  %131 = sub i32 %130, 1
  %132 = sub i32 %131, 1364668021
  %133 = sub i32 %128, 1
  %134 = mul i32 %128, %132
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %129, 10
  %138 = and i1 %136, %137
  %139 = xor i1 %136, %137
  %140 = or i1 %138, %139
  %141 = or i1 %136, %137
  br i1 %140, label %142, label %288

; <label>:142:                                    ; preds = %127, %288
  %143 = landingpad { i8*, i32 }
          cleanup
  %144 = extractvalue { i8*, i32 } %143, 0
  store i8* %144, i8** %9, align 8
  %145 = extractvalue { i8*, i32 } %143, 1
  store i32 %145, i32* %10, align 4
  %146 = load i32, i32* @x.272
  %147 = load i32, i32* @y.273
  %148 = sub i32 %146, 1216952578
  %149 = sub i32 %148, 1
  %150 = add i32 %149, 1216952578
  %151 = sub i32 %146, 1
  %152 = mul i32 %146, %150
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %147, 10
  %156 = xor i1 %154, true
  %157 = xor i1 %155, true
  %158 = xor i1 true, true
  %159 = and i1 %156, true
  %160 = and i1 %154, %158
  %161 = and i1 %157, true
  %162 = and i1 %155, %158
  %163 = or i1 %159, %160
  %164 = or i1 %161, %162
  %165 = xor i1 %163, %164
  %166 = or i1 %156, %157
  %167 = xor i1 %166, true
  %168 = or i1 true, %158
  %169 = and i1 %167, %168
  %170 = or i1 %165, %169
  %171 = or i1 %154, %155
  br i1 %170, label %172, label %288

; <label>:172:                                    ; preds = %142
  invoke void @__cxa_end_catch()
          to label %173 unwind label %180

; <label>:173:                                    ; preds = %172
  br label %175

; <label>:174:                                    ; preds = %64
  ret void

; <label>:175:                                    ; preds = %173
  %176 = load i8*, i8** %9, align 8
  %177 = load i32, i32* %10, align 4
  %178 = insertvalue { i8*, i32 } undef, i8* %176, 0
  %179 = insertvalue { i8*, i32 } %178, i32 %177, 1
  resume { i8*, i32 } %179

; <label>:180:                                    ; preds = %172
  %181 = load i32, i32* @x.272
  %182 = load i32, i32* @y.273
  %183 = sub i32 0, 1
  %184 = add i32 %181, %183
  %185 = sub i32 %181, 1
  %186 = mul i32 %181, %184
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %182, 10
  %190 = xor i1 %188, true
  %191 = xor i1 %189, true
  %192 = xor i1 true, true
  %193 = and i1 %190, true
  %194 = and i1 %188, %192
  %195 = and i1 %191, true
  %196 = and i1 %189, %192
  %197 = or i1 %193, %194
  %198 = or i1 %195, %196
  %199 = xor i1 %197, %198
  %200 = or i1 %190, %191
  %201 = xor i1 %200, true
  %202 = or i1 true, %192
  %203 = and i1 %201, %202
  %204 = or i1 %199, %203
  %205 = or i1 %188, %189
  br i1 %204, label %206, label %292

; <label>:206:                                    ; preds = %180, %292
  %207 = landingpad { i8*, i32 }
          catch i8* null
  %208 = extractvalue { i8*, i32 } %207, 0
  call void @__clang_call_terminate(i8* %208) #11
  %209 = load i32, i32* @x.272
  %210 = load i32, i32* @y.273
  %211 = sub i32 0, 1
  %212 = add i32 %209, %211
  %213 = sub i32 %209, 1
  %214 = mul i32 %209, %212
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %210, 10
  %218 = xor i1 %216, true
  %219 = xor i1 %217, true
  %220 = xor i1 true, true
  %221 = and i1 %218, true
  %222 = and i1 %216, %220
  %223 = and i1 %219, true
  %224 = and i1 %217, %220
  %225 = or i1 %221, %222
  %226 = or i1 %223, %224
  %227 = xor i1 %225, %226
  %228 = or i1 %218, %219
  %229 = xor i1 %228, true
  %230 = or i1 true, %220
  %231 = and i1 %229, %230
  %232 = or i1 %227, %231
  %233 = or i1 %216, %217
  br i1 %232, label %234, label %292

; <label>:234:                                    ; preds = %206
  unreachable

; <label>:235:                                    ; preds = %126
  %236 = load i32, i32* @x.272
  %237 = load i32, i32* @y.273
  %238 = sub i32 %236, -3598007
  %239 = sub i32 %238, 1
  %240 = add i32 %239, -3598007
  %241 = sub i32 %236, 1
  %242 = mul i32 %236, %240
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %237, 10
  %246 = xor i1 %244, true
  %247 = xor i1 %245, true
  %248 = xor i1 true, true
  %249 = and i1 %246, true
  %250 = and i1 %244, %248
  %251 = and i1 %247, true
  %252 = and i1 %245, %248
  %253 = or i1 %249, %250
  %254 = or i1 %251, %252
  %255 = xor i1 %253, %254
  %256 = or i1 %246, %247
  %257 = xor i1 %256, true
  %258 = or i1 true, %248
  %259 = and i1 %257, %258
  %260 = or i1 %255, %259
  %261 = or i1 %244, %245
  br i1 %260, label %262, label %295

; <label>:262:                                    ; preds = %235, %295
  %263 = load i32, i32* @x.272
  %264 = load i32, i32* @y.273
  %265 = sub i32 %263, -1589120780
  %266 = sub i32 %265, 1
  %267 = add i32 %266, -1589120780
  %268 = sub i32 %263, 1
  %269 = mul i32 %263, %267
  %270 = urem i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %264, 10
  %273 = and i1 %271, %272
  %274 = xor i1 %271, %272
  %275 = or i1 %273, %274
  %276 = or i1 %271, %272
  br i1 %275, label %277, label %295

; <label>:277:                                    ; preds = %262
  unreachable

; <label>:278:                                    ; preds = %33, %18
  %279 = load i64*, i64** %7, align 8
  %280 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %279) #3
  %281 = load %"class.std::vector"*, %"class.std::vector"** %8, align 8
  %282 = call dereferenceable(24) %"class.std::vector"* @_ZSt7forwardIRSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::vector"* dereferenceable(24) %281) #3
  br label %33

; <label>:283:                                    ; preds = %96, %69
  %284 = load i8*, i8** %9, align 8
  %285 = call i8* @__cxa_begin_catch(i8* %284) #3
  %286 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %6, align 8
  %287 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %6, align 8
  call void @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS5_E(%"class.std::_Rb_tree"* %11, %"struct.std::_Rb_tree_node.20"* %287) #3
  br label %96

; <label>:288:                                    ; preds = %142, %127
  %289 = landingpad { i8*, i32 }
          cleanup
  %290 = extractvalue { i8*, i32 } %289, 0
  store i8* %290, i8** %9, align 8
  %291 = extractvalue { i8*, i32 } %289, 1
  store i32 %291, i32* %10, align 4
  br label %142

; <label>:292:                                    ; preds = %206, %180
  %293 = landingpad { i8*, i32 }
          catch i8* null
  %294 = extractvalue { i8*, i32 } %293, 0
  call void @__clang_call_terminate(i8* %294) #11
  br label %206

; <label>:295:                                    ; preds = %262, %235
  br label %262
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.20"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEEE8allocateERS8_m(%"class.std::allocator"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.std::_Rb_tree_node.20"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %6, i64 %7, i8* null)
  ret %"struct.std::_Rb_tree_node.20"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.20"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 433296349, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 433296349, label %16
    i32 301663089, label %21
    i32 -1038726669, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 301663089, i32 -1038726669
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #14
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 64
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"struct.std::_Rb_tree_node.20"*
  ret %"struct.std::_Rb_tree_node.20"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret i64 288230376151711743
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEEE9constructIS6_JxRS5_EEEvRS8_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1), %"struct.std::pair.18"*, i64* dereferenceable(8), %"class.std::vector"* dereferenceable(24)) #0 comdat align 2 {
  %5 = alloca %"class.std::allocator"*, align 8
  %6 = alloca %"struct.std::pair.18"*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::vector"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %5, align 8
  store %"struct.std::pair.18"* %1, %"struct.std::pair.18"** %6, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::vector"* %3, %"class.std::vector"** %8, align 8
  %9 = load %"class.std::allocator"*, %"class.std::allocator"** %5, align 8
  %10 = bitcast %"class.std::allocator"* %9 to %"class.__gnu_cxx::new_allocator"*
  %11 = load %"struct.std::pair.18"*, %"struct.std::pair.18"** %6, align 8
  %12 = load i64*, i64** %7, align 8
  %13 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %12) #3
  %14 = load %"class.std::vector"*, %"class.std::vector"** %8, align 8
  %15 = call dereferenceable(24) %"class.std::vector"* @_ZSt7forwardIRSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::vector"* dereferenceable(24) %14) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEE9constructIS7_JxRS6_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"* %10, %"struct.std::pair.18"* %11, i64* dereferenceable(8) %13, %"class.std::vector"* dereferenceable(24) %15)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEE9constructIS7_JxRS6_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"*, %"struct.std::pair.18"*, i64* dereferenceable(8), %"class.std::vector"* dereferenceable(24)) #0 comdat align 2 {
  %5 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %6 = alloca %"struct.std::pair.18"*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::vector"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %5, align 8
  store %"struct.std::pair.18"* %1, %"struct.std::pair.18"** %6, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::vector"* %3, %"class.std::vector"** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %5, align 8
  %10 = load %"struct.std::pair.18"*, %"struct.std::pair.18"** %6, align 8
  %11 = bitcast %"struct.std::pair.18"* %10 to i8*
  %12 = bitcast i8* %11 to %"struct.std::pair.18"*
  %13 = load i64*, i64** %7, align 8
  %14 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %13) #3
  %15 = load %"class.std::vector"*, %"class.std::vector"** %8, align 8
  %16 = call dereferenceable(24) %"class.std::vector"* @_ZSt7forwardIRSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::vector"* dereferenceable(24) %15) #3
  call void @_ZNSt4pairIKxSt6vectorIxSaIxEEEC2IxRS3_vEEOT_OT0_(%"struct.std::pair.18"* %12, i64* dereferenceable(8) %14, %"class.std::vector"* dereferenceable(24) %16)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt4pairIKxSt6vectorIxSaIxEEEC2IxRS3_vEEOT_OT0_(%"struct.std::pair.18"*, i64* dereferenceable(8), %"class.std::vector"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::pair.18"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca %"class.std::vector"*, align 8
  store %"struct.std::pair.18"* %0, %"struct.std::pair.18"** %4, align 8
  store i64* %1, i64** %5, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %6, align 8
  %7 = load %"struct.std::pair.18"*, %"struct.std::pair.18"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair.18", %"struct.std::pair.18"* %7, i32 0, i32 0
  %9 = load i64*, i64** %5, align 8
  %10 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %9) #3
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %8, align 8
  %12 = getelementptr inbounds %"struct.std::pair.18", %"struct.std::pair.18"* %7, i32 0, i32 1
  %13 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8
  %14 = call dereferenceable(24) %"class.std::vector"* @_ZSt7forwardIRSt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::vector"* dereferenceable(24) %13) #3
  call void @_ZNSt6vectorIxSaIxEEC2ERKS1_(%"class.std::vector"* %12, %"class.std::vector"* dereferenceable(24) %14)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEEC2ERKS1_(%"class.std::vector"*, %"class.std::vector"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.286
  %4 = load i32, i32* @y.287
  %5 = add i32 %3, 142182583
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, 142182583
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %220

; <label>:29:                                     ; preds = %2, %220
  %30 = alloca %"class.std::vector"*, align 8
  %31 = alloca %"class.std::vector"*, align 8
  %32 = alloca %"class.std::allocator.4", align 1
  %33 = alloca i8*
  %34 = alloca i32
  %35 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %36 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %30, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %31, align 8
  %37 = load %"class.std::vector"*, %"class.std::vector"** %30, align 8
  %38 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %39 = load %"class.std::vector"*, %"class.std::vector"** %31, align 8
  %40 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"* %39) #3
  %41 = load %"class.std::vector"*, %"class.std::vector"** %31, align 8
  %42 = bitcast %"class.std::vector"* %41 to %"struct.std::_Vector_base"*
  %43 = call dereferenceable(1) %"class.std::allocator.4"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %42) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIxEE17_S_select_on_copyERKS1_(%"class.std::allocator.4"* sret %32, %"class.std::allocator.4"* dereferenceable(1) %43)
  %44 = load i32, i32* @x.286
  %45 = load i32, i32* @y.287
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  br i1 %55, label %57, label %220

; <label>:57:                                     ; preds = %29
  invoke void @_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_(%"struct.std::_Vector_base"* %38, i64 %40, %"class.std::allocator.4"* dereferenceable(1) %32)
          to label %58 unwind label %134

; <label>:58:                                     ; preds = %57
  call void @_ZNSaIxED2Ev(%"class.std::allocator.4"* %32) #3
  %59 = load %"class.std::vector"*, %"class.std::vector"** %31, align 8
  %60 = call i64* @_ZNKSt6vectorIxSaIxEE5beginEv(%"class.std::vector"* %59) #3
  %61 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %35, i32 0, i32 0
  store i64* %60, i64** %61, align 8
  %62 = load %"class.std::vector"*, %"class.std::vector"** %31, align 8
  %63 = call i64* @_ZNKSt6vectorIxSaIxEE3endEv(%"class.std::vector"* %62) #3
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %36, i32 0, i32 0
  store i64* %63, i64** %64, align 8
  %65 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %66 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %65, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %66, i32 0, i32 0
  %68 = load i64*, i64** %67, align 8
  %69 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %70 = call dereferenceable(1) %"class.std::allocator.4"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %69) #3
  %71 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %35, i32 0, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %36, i32 0, i32 0
  %74 = load i64*, i64** %73, align 8
  %75 = invoke i64* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxxET0_T_SA_S9_RSaIT1_E(i64* %72, i64* %74, i64* %68, %"class.std::allocator.4"* dereferenceable(1) %70)
          to label %76 unwind label %180

; <label>:76:                                     ; preds = %58
  %77 = load i32, i32* @x.286
  %78 = load i32, i32* @y.287
  %79 = add i32 %77, 24136275
  %80 = sub i32 %79, 1
  %81 = sub i32 %80, 24136275
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = xor i1 %85, true
  %88 = xor i1 %86, true
  %89 = xor i1 true, true
  %90 = and i1 %87, true
  %91 = and i1 %85, %89
  %92 = and i1 %88, true
  %93 = and i1 %86, %89
  %94 = or i1 %90, %91
  %95 = or i1 %92, %93
  %96 = xor i1 %94, %95
  %97 = or i1 %87, %88
  %98 = xor i1 %97, true
  %99 = or i1 true, %89
  %100 = and i1 %98, %99
  %101 = or i1 %96, %100
  %102 = or i1 %85, %86
  br i1 %101, label %103, label %235

; <label>:103:                                    ; preds = %76, %235
  %104 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %105 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %104, i32 0, i32 0
  %106 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %105, i32 0, i32 1
  store i64* %75, i64** %106, align 8
  %107 = load i32, i32* @x.286
  %108 = load i32, i32* @y.287
  %109 = add i32 %107, 1482418845
  %110 = sub i32 %109, 1
  %111 = sub i32 %110, 1482418845
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = xor i1 %115, true
  %118 = xor i1 %116, true
  %119 = xor i1 false, true
  %120 = and i1 %117, false
  %121 = and i1 %115, %119
  %122 = and i1 %118, false
  %123 = and i1 %116, %119
  %124 = or i1 %120, %121
  %125 = or i1 %122, %123
  %126 = xor i1 %124, %125
  %127 = or i1 %117, %118
  %128 = xor i1 %127, true
  %129 = or i1 false, %119
  %130 = and i1 %128, %129
  %131 = or i1 %126, %130
  %132 = or i1 %115, %116
  br i1 %131, label %133, label %235

; <label>:133:                                    ; preds = %103
  ret void

; <label>:134:                                    ; preds = %57
  %135 = load i32, i32* @x.286
  %136 = load i32, i32* @y.287
  %137 = sub i32 %135, -559489402
  %138 = sub i32 %137, 1
  %139 = add i32 %138, -559489402
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = and i1 %143, %144
  %146 = xor i1 %143, %144
  %147 = or i1 %145, %146
  %148 = or i1 %143, %144
  br i1 %147, label %149, label %239

; <label>:149:                                    ; preds = %134, %239
  %150 = landingpad { i8*, i32 }
          cleanup
  %151 = extractvalue { i8*, i32 } %150, 0
  store i8* %151, i8** %33, align 8
  %152 = extractvalue { i8*, i32 } %150, 1
  store i32 %152, i32* %34, align 4
  call void @_ZNSaIxED2Ev(%"class.std::allocator.4"* %32) #3
  %153 = load i32, i32* @x.286
  %154 = load i32, i32* @y.287
  %155 = sub i32 %153, -919604638
  %156 = sub i32 %155, 1
  %157 = add i32 %156, -919604638
  %158 = sub i32 %153, 1
  %159 = mul i32 %153, %157
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %154, 10
  %163 = xor i1 %161, true
  %164 = xor i1 %162, true
  %165 = xor i1 true, true
  %166 = and i1 %163, true
  %167 = and i1 %161, %165
  %168 = and i1 %164, true
  %169 = and i1 %162, %165
  %170 = or i1 %166, %167
  %171 = or i1 %168, %169
  %172 = xor i1 %170, %171
  %173 = or i1 %163, %164
  %174 = xor i1 %173, true
  %175 = or i1 true, %165
  %176 = and i1 %174, %175
  %177 = or i1 %172, %176
  %178 = or i1 %161, %162
  br i1 %177, label %179, label %239

; <label>:179:                                    ; preds = %149
  br label %215

; <label>:180:                                    ; preds = %58
  %181 = load i32, i32* @x.286
  %182 = load i32, i32* @y.287
  %183 = add i32 %181, 779233988
  %184 = sub i32 %183, 1
  %185 = sub i32 %184, 779233988
  %186 = sub i32 %181, 1
  %187 = mul i32 %181, %185
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %182, 10
  %191 = and i1 %189, %190
  %192 = xor i1 %189, %190
  %193 = or i1 %191, %192
  %194 = or i1 %189, %190
  br i1 %193, label %195, label %243

; <label>:195:                                    ; preds = %180, %243
  %196 = landingpad { i8*, i32 }
          cleanup
  %197 = extractvalue { i8*, i32 } %196, 0
  store i8* %197, i8** %33, align 8
  %198 = extractvalue { i8*, i32 } %196, 1
  store i32 %198, i32* %34, align 4
  %199 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base"* %199) #3
  %200 = load i32, i32* @x.286
  %201 = load i32, i32* @y.287
  %202 = sub i32 %200, -602662503
  %203 = sub i32 %202, 1
  %204 = add i32 %203, -602662503
  %205 = sub i32 %200, 1
  %206 = mul i32 %200, %204
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %201, 10
  %210 = and i1 %208, %209
  %211 = xor i1 %208, %209
  %212 = or i1 %210, %211
  %213 = or i1 %208, %209
  br i1 %212, label %214, label %243

; <label>:214:                                    ; preds = %195
  br label %215

; <label>:215:                                    ; preds = %214, %179
  %216 = load i8*, i8** %33, align 8
  %217 = load i32, i32* %34, align 4
  %218 = insertvalue { i8*, i32 } undef, i8* %216, 0
  %219 = insertvalue { i8*, i32 } %218, i32 %217, 1
  resume { i8*, i32 } %219

; <label>:220:                                    ; preds = %29, %2
  %221 = alloca %"class.std::vector"*, align 8
  %222 = alloca %"class.std::vector"*, align 8
  %223 = alloca %"class.std::allocator.4", align 1
  %224 = alloca i8*
  %225 = alloca i32
  %226 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %227 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %221, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %222, align 8
  %228 = load %"class.std::vector"*, %"class.std::vector"** %221, align 8
  %229 = bitcast %"class.std::vector"* %228 to %"struct.std::_Vector_base"*
  %230 = load %"class.std::vector"*, %"class.std::vector"** %222, align 8
  %231 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"* %230) #3
  %232 = load %"class.std::vector"*, %"class.std::vector"** %222, align 8
  %233 = bitcast %"class.std::vector"* %232 to %"struct.std::_Vector_base"*
  %234 = call dereferenceable(1) %"class.std::allocator.4"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %233) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIxEE17_S_select_on_copyERKS1_(%"class.std::allocator.4"* sret %223, %"class.std::allocator.4"* dereferenceable(1) %234)
  br label %29

; <label>:235:                                    ; preds = %103, %76
  %236 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %237 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %236, i32 0, i32 0
  %238 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %237, i32 0, i32 1
  store i64* %75, i64** %238, align 8
  br label %103

; <label>:239:                                    ; preds = %149, %134
  %240 = landingpad { i8*, i32 }
          cleanup
  %241 = extractvalue { i8*, i32 } %240, 0
  store i8* %241, i8** %33, align 8
  %242 = extractvalue { i8*, i32 } %240, 1
  store i32 %242, i32* %34, align 4
  call void @_ZNSaIxED2Ev(%"class.std::allocator.4"* %32) #3
  br label %149

; <label>:243:                                    ; preds = %195, %180
  %244 = landingpad { i8*, i32 }
          cleanup
  %245 = extractvalue { i8*, i32 } %244, 0
  store i8* %245, i8** %33, align 8
  %246 = extractvalue { i8*, i32 } %244, 1
  store i32 %246, i32* %34, align 4
  %247 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base"* %247) #3
  br label %195
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.288
  %6 = load i32, i32* @y.289
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 2113789955, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %159
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 2113789955, label %18
    i32 -999100317, label %38
    i32 158489042, label %70
    i32 663455405, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %159

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -999100317, i32 663455405
  store i32 %37, i32* %14
  br label %159

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %39, align 8
  %40 = load %"class.std::vector"*, %"class.std::vector"** %39, align 8
  %41 = bitcast %"class.std::vector"* %40 to %"struct.std::_Vector_base"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %42, i32 0, i32 1
  %44 = load i64*, i64** %43, align 8
  %45 = bitcast %"class.std::vector"* %40 to %"struct.std::_Vector_base"*
  %46 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %46, i32 0, i32 0
  %48 = load i64*, i64** %47, align 8
  %49 = ptrtoint i64* %44 to i64
  %50 = ptrtoint i64* %48 to i64
  %51 = sub i64 0, %50
  %52 = add i64 %49, %51
  %53 = sub i64 %49, %50
  %54 = sdiv exact i64 %52, 8
  store i64 %54, i64* %2
  %55 = load i32, i32* @x.288
  %56 = load i32, i32* @y.289
  %57 = add i32 %55, -1519886232
  %58 = sub i32 %57, 1
  %59 = sub i32 %58, -1519886232
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  %69 = select i1 %67, i32 158489042, i32 663455405
  store i32 %69, i32* %14
  br label %159

; <label>:70:                                     ; preds = %15
  %71 = load volatile i64, i64* %2
  ret i64 %71

; <label>:72:                                     ; preds = %15
  %73 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %73, align 8
  %74 = load %"class.std::vector"*, %"class.std::vector"** %73, align 8
  %75 = bitcast %"class.std::vector"* %74 to %"struct.std::_Vector_base"*
  %76 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %75, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %76, i32 0, i32 1
  %78 = load i64*, i64** %77, align 8
  %79 = bitcast %"class.std::vector"* %74 to %"struct.std::_Vector_base"*
  %80 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %79, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %80, i32 0, i32 0
  %82 = load i64*, i64** %81, align 8
  %83 = ptrtoint i64* %78 to i64
  %84 = ptrtoint i64* %82 to i64
  %85 = shl i64 %83, %84
  %86 = add i64 0, -1977306344014243143
  %87 = sub i64 %86, %83
  %88 = sub i64 %87, -1977306344014243143
  %89 = sub i64 0, %83
  %90 = sub i64 %88, 354343386206309238
  %91 = add i64 %90, %84
  %92 = add i64 %91, 354343386206309238
  %93 = add i64 %88, %84
  %94 = sub i64 0, %84
  %95 = add i64 %83, %94
  %96 = sub i64 %83, %84
  %97 = mul i64 %95, %84
  %98 = sub i64 0, %83
  %99 = add i64 0, %98
  %100 = sub i64 0, %83
  %101 = sub i64 0, %99
  %102 = sub i64 0, %84
  %103 = add i64 %101, %102
  %104 = sub i64 0, %103
  %105 = add i64 %99, %84
  %106 = shl i64 %83, %84
  %107 = sub i64 0, %84
  %108 = add i64 %83, %107
  %109 = sub i64 %83, %84
  %110 = mul i64 %108, %84
  %111 = sub i64 0, 7550316689439393871
  %112 = sub i64 %111, %83
  %113 = add i64 %112, 7550316689439393871
  %114 = sub i64 0, %83
  %115 = sub i64 0, %84
  %116 = sub i64 %113, %115
  %117 = add i64 %113, %84
  %118 = sub i64 0, %84
  %119 = add i64 %83, %118
  %120 = sub i64 %83, %84
  %121 = mul i64 %119, %84
  %122 = add i64 %83, 2253417642072933886
  %123 = sub i64 %122, %84
  %124 = sub i64 %123, 2253417642072933886
  %125 = sub i64 %83, %84
  %126 = mul i64 %124, %84
  %127 = sub i64 %83, -5124507385219034364
  %128 = sub i64 %127, %84
  %129 = add i64 %128, -5124507385219034364
  %130 = sub i64 %83, %84
  %131 = shl i64 %129, 8
  %132 = sub i64 0, %129
  %133 = add i64 0, %132
  %134 = sub i64 0, %129
  %135 = add i64 %133, -665326970509646415
  %136 = add i64 %135, 8
  %137 = sub i64 %136, -665326970509646415
  %138 = add i64 %133, 8
  %139 = shl i64 %129, 8
  %140 = add i64 0, 2062571258522980919
  %141 = sub i64 %140, %129
  %142 = sub i64 %141, 2062571258522980919
  %143 = sub i64 0, %129
  %144 = add i64 %142, 1186040508594934671
  %145 = add i64 %144, 8
  %146 = sub i64 %145, 1186040508594934671
  %147 = add i64 %142, 8
  %148 = sub i64 0, %129
  %149 = add i64 0, %148
  %150 = sub i64 0, %129
  %151 = sub i64 0, %149
  %152 = sub i64 0, 8
  %153 = add i64 %151, %152
  %154 = sub i64 0, %153
  %155 = add i64 %149, 8
  %156 = shl i64 %129, 8
  %157 = shl i64 %129, 8
  %158 = sdiv exact i64 %129, 8
  store i32 -999100317, i32* %14
  br label %159

; <label>:159:                                    ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIxEE17_S_select_on_copyERKS1_(%"class.std::allocator.4"* noalias sret, %"class.std::allocator.4"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.4"*, align 8
  store %"class.std::allocator.4"* %1, %"class.std::allocator.4"** %3, align 8
  %4 = load %"class.std::allocator.4"*, %"class.std::allocator.4"** %3, align 8
  call void @_ZNSt16allocator_traitsISaIxEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator.4"* sret %0, %"class.std::allocator.4"* dereferenceable(1) %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.4"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %4 to %"class.std::allocator.4"*
  ret %"class.std::allocator.4"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_(%"struct.std::_Vector_base"*, i64, %"class.std::allocator.4"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.4"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.4"* %2, %"class.std::allocator.4"** %6, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.4"*, %"class.std::allocator.4"** %6, align 8
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %10, %"class.std::allocator.4"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIxSaIxEE17_M_create_storageEm(%"struct.std::_Vector_base"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %10) #3
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i32, i32* @x.294
  %20 = load i32, i32* @y.295
  %21 = sub i32 0, 1
  %22 = add i32 %19, %21
  %23 = sub i32 %19, 1
  %24 = mul i32 %19, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %20, 10
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 true, true
  %31 = and i1 %28, true
  %32 = and i1 %26, %30
  %33 = and i1 %29, true
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 true, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  br i1 %42, label %44, label %76

; <label>:44:                                     ; preds = %18, %76
  %45 = load i8*, i8** %7, align 8
  %46 = load i32, i32* %8, align 4
  %47 = insertvalue { i8*, i32 } undef, i8* %45, 0
  %48 = insertvalue { i8*, i32 } %47, i32 %46, 1
  %49 = load i32, i32* @x.294
  %50 = load i32, i32* @y.295
  %51 = sub i32 %49, -213769810
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -213769810
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  br i1 %73, label %75, label %76

; <label>:75:                                     ; preds = %44
  resume { i8*, i32 } %48

; <label>:76:                                     ; preds = %44, %18
  %77 = load i8*, i8** %7, align 8
  %78 = load i32, i32* %8, align 4
  %79 = insertvalue { i8*, i32 } undef, i8* %77, 0
  %80 = insertvalue { i8*, i32 } %79, i32 %78, 1
  br label %44
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxxET0_T_SA_S9_RSaIT1_E(i64*, i64*, i64*, %"class.std::allocator.4"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.4"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store i64* %0, i64** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store i64* %1, i64** %12, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.4"* %3, %"class.std::allocator.4"** %8, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load i64*, i64** %7, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = call i64* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64* %19, i64* %21, i64* %17)
  ret i64* %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt6vectorIxSaIxEE5beginEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  store i64* %9, i64** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator"* %2, i64** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  ret i64* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt6vectorIxSaIxEE3endEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.300
  %6 = load i32, i32* @y.301
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -208274982, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %76
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -208274982, label %18
    i32 -1784760319, label %38
    i32 -6795538, label %63
    i32 -503965687, label %65
  ]

; <label>:17:                                     ; preds = %15
  br label %76

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1784760319, i32 -503965687
  store i32 %37, i32* %14
  br label %76

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %40 = alloca %"class.std::vector"*, align 8
  %41 = alloca i64*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %40, align 8
  %42 = load %"class.std::vector"*, %"class.std::vector"** %40, align 8
  %43 = bitcast %"class.std::vector"* %42 to %"struct.std::_Vector_base"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %44, i32 0, i32 1
  %46 = load i64*, i64** %45, align 8
  store i64* %46, i64** %41, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator"* %39, i64** dereferenceable(8) %41) #3
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %39, i32 0, i32 0
  %48 = load i64*, i64** %47, align 8
  store i64* %48, i64** %2
  %49 = load i32, i32* @x.300
  %50 = load i32, i32* @y.301
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -6795538, i32 -503965687
  store i32 %62, i32* %14
  br label %76

; <label>:63:                                     ; preds = %15
  %64 = load volatile i64*, i64** %2
  ret i64* %64

; <label>:65:                                     ; preds = %15
  %66 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %67 = alloca %"class.std::vector"*, align 8
  %68 = alloca i64*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %67, align 8
  %69 = load %"class.std::vector"*, %"class.std::vector"** %67, align 8
  %70 = bitcast %"class.std::vector"* %69 to %"struct.std::_Vector_base"*
  %71 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %70, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %71, i32 0, i32 1
  %73 = load i64*, i64** %72, align 8
  store i64* %73, i64** %68, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator"* %66, i64** dereferenceable(8) %68) #3
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %66, i32 0, i32 0
  %75 = load i64*, i64** %74, align 8
  store i32 -1784760319, i32* %14
  br label %76

; <label>:76:                                     ; preds = %65, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator.4"* noalias sret, %"class.std::allocator.4"* dereferenceable(1)) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.302
  %6 = load i32, i32* @y.303
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -392438719, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %48
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -392438719, label %18
    i32 780245003, label %26
    i32 -1600642130, label %44
    i32 1424196938, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %48

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 780245003, i32 1424196938
  store i32 %25, i32* %14
  br label %48

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.4"*, align 8
  store %"class.std::allocator.4"* %1, %"class.std::allocator.4"** %27, align 8
  %28 = load %"class.std::allocator.4"*, %"class.std::allocator.4"** %27, align 8
  call void @_ZNSaIxEC2ERKS_(%"class.std::allocator.4"* %0, %"class.std::allocator.4"* dereferenceable(1) %28) #3
  %29 = load i32, i32* @x.302
  %30 = load i32, i32* @y.303
  %31 = sub i32 %29, 935467574
  %32 = sub i32 %31, 1
  %33 = add i32 %32, 935467574
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -1600642130, i32 1424196938
  store i32 %43, i32* %14
  br label %48

; <label>:44:                                     ; preds = %15
  ret void

; <label>:45:                                     ; preds = %15
  %46 = alloca %"class.std::allocator.4"*, align 8
  store %"class.std::allocator.4"* %1, %"class.std::allocator.4"** %46, align 8
  %47 = load %"class.std::allocator.4"*, %"class.std::allocator.4"** %46, align 8
  call void @_ZNSaIxEC2ERKS_(%"class.std::allocator.4"* %0, %"class.std::allocator.4"* dereferenceable(1) %47) #3
  store i32 780245003, i32* %14
  br label %48

; <label>:48:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIxEC2ERKS_(%"class.std::allocator.4"*, %"class.std::allocator.4"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.4"*, align 8
  %4 = alloca %"class.std::allocator.4"*, align 8
  store %"class.std::allocator.4"* %0, %"class.std::allocator.4"** %3, align 8
  store %"class.std::allocator.4"* %1, %"class.std::allocator.4"** %4, align 8
  %5 = load %"class.std::allocator.4"*, %"class.std::allocator.4"** %3, align 8
  %6 = bitcast %"class.std::allocator.4"* %5 to %"class.__gnu_cxx::new_allocator.5"*
  %7 = load %"class.std::allocator.4"*, %"class.std::allocator.4"** %4, align 8
  %8 = bitcast %"class.std::allocator.4"* %7 to %"class.__gnu_cxx::new_allocator.5"*
  call void @_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_(%"class.__gnu_cxx::new_allocator.5"* %6, %"class.__gnu_cxx::new_allocator.5"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE17_M_create_storageEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %8, i32 0, i32 0
  store i64* %7, i64** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %13, i32 0, i32 1
  store i64* %12, i64** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds i64, i64* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %20, i32 0, i32 2
  store i64* %19, i64** %21, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store i64* %0, i64** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store i64* %1, i64** %11, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load i64*, i64** %6, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = call i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxEET0_T_SC_SB_(i64* %18, i64* %20, i64* %16)
  ret i64* %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #8

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxEET0_T_SC_SB_(i64*, i64*, i64*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store i64* %0, i64** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load i64*, i64** %6, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = call i64* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64* %17, i64* %19, i64* %15)
  ret i64* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET0_T_SA_S9_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.312
  %8 = load i32, i32* @y.313
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 245897962, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %112
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 245897962, label %20
    i32 310334578, label %28
    i32 2129408514, label %82
    i32 1271668156, label %84
  ]

; <label>:19:                                     ; preds = %17
  br label %112

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 310334578, i32 1271668156
  store i32 %27, i32* %16
  br label %112

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %31 = alloca i64*, align 8
  %32 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %33 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %34 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %35 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %29, i32 0, i32 0
  store i64* %0, i64** %36, align 8
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %30, i32 0, i32 0
  store i64* %1, i64** %37, align 8
  store i64* %2, i64** %31, align 8
  %38 = bitcast %"class.__gnu_cxx::__normal_iterator"* %33 to i8*
  %39 = bitcast %"class.__gnu_cxx::__normal_iterator"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 8, i32 8, i1 false)
  %40 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %33, i32 0, i32 0
  %41 = load i64*, i64** %40, align 8
  %42 = call i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64* %41)
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %32, i32 0, i32 0
  store i64* %42, i64** %43, align 8
  %44 = bitcast %"class.__gnu_cxx::__normal_iterator"* %35 to i8*
  %45 = bitcast %"class.__gnu_cxx::__normal_iterator"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %44, i8* %45, i64 8, i32 8, i1 false)
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %35, i32 0, i32 0
  %47 = load i64*, i64** %46, align 8
  %48 = call i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64* %47)
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %34, i32 0, i32 0
  store i64* %48, i64** %49, align 8
  %50 = load i64*, i64** %31, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %32, i32 0, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %34, i32 0, i32 0
  %54 = load i64*, i64** %53, align 8
  %55 = call i64* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET1_T0_SA_S9_(i64* %52, i64* %54, i64* %50)
  store i64* %55, i64** %4
  %56 = load i32, i32* @x.312
  %57 = load i32, i32* @y.313
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 false, true
  %68 = and i1 %65, false
  %69 = and i1 %63, %67
  %70 = and i1 %66, false
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 false, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  %81 = select i1 %79, i32 2129408514, i32 1271668156
  store i32 %81, i32* %16
  br label %112

; <label>:82:                                     ; preds = %17
  %83 = load volatile i64*, i64** %4
  ret i64* %83

; <label>:84:                                     ; preds = %17
  %85 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %86 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %87 = alloca i64*, align 8
  %88 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %89 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %90 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %91 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %92 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %85, i32 0, i32 0
  store i64* %0, i64** %92, align 8
  %93 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %86, i32 0, i32 0
  store i64* %1, i64** %93, align 8
  store i64* %2, i64** %87, align 8
  %94 = bitcast %"class.__gnu_cxx::__normal_iterator"* %89 to i8*
  %95 = bitcast %"class.__gnu_cxx::__normal_iterator"* %85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %94, i8* %95, i64 8, i32 8, i1 false)
  %96 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %89, i32 0, i32 0
  %97 = load i64*, i64** %96, align 8
  %98 = call i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64* %97)
  %99 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %88, i32 0, i32 0
  store i64* %98, i64** %99, align 8
  %100 = bitcast %"class.__gnu_cxx::__normal_iterator"* %91 to i8*
  %101 = bitcast %"class.__gnu_cxx::__normal_iterator"* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %100, i8* %101, i64 8, i32 8, i1 false)
  %102 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %91, i32 0, i32 0
  %103 = load i64*, i64** %102, align 8
  %104 = call i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64* %103)
  %105 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %90, i32 0, i32 0
  store i64* %104, i64** %105, align 8
  %106 = load i64*, i64** %87, align 8
  %107 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %88, i32 0, i32 0
  %108 = load i64*, i64** %107, align 8
  %109 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %90, i32 0, i32 0
  %110 = load i64*, i64** %109, align 8
  %111 = call i64* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET1_T0_SA_S9_(i64* %108, i64* %110, i64* %106)
  store i32 310334578, i32* %16
  br label %112

; <label>:112:                                    ; preds = %84, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEPxET1_T0_SA_S9_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca i64*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store i64* %0, i64** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64* %14)
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64* %19)
  %21 = load i64*, i64** %6, align 8
  %22 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %21)
  %23 = call i64* @_ZSt13__copy_move_aILb0EPKxPxET1_T0_S4_S3_(i64* %15, i64* %20, i64* %22)
  ret i64* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Miter_baseIT_E13iterator_typeES9_(i64*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store i64* %0, i64** %5, align 8
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  %7 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 8, i32 8, i1 false)
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = call i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb0EE7_S_baseES7_(i64* %9)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  store i64* %10, i64** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  ret i64* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64*) #0 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.318
  %6 = load i32, i32* @y.319
  %7 = add i32 %5, -1084204817
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1084204817
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1963930904, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %85
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1963930904, label %19
    i32 -761726222, label %39
    i32 605271092, label %74
    i32 -853787082, label %76
  ]

; <label>:18:                                     ; preds = %16
  br label %85

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -761726222, i32 -853787082
  store i32 %38, i32* %15
  br label %85

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %40, i32 0, i32 0
  store i64* %0, i64** %42, align 8
  %43 = bitcast %"class.__gnu_cxx::__normal_iterator"* %41 to i8*
  %44 = bitcast %"class.__gnu_cxx::__normal_iterator"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 8, i32 8, i1 false)
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %41, i32 0, i32 0
  %46 = load i64*, i64** %45, align 8
  %47 = call i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb1EE7_S_baseES7_(i64* %46)
  store i64* %47, i64** %2
  %48 = load i32, i32* @x.318
  %49 = load i32, i32* @y.319
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 605271092, i32 -853787082
  store i32 %73, i32* %15
  br label %85

; <label>:74:                                     ; preds = %16
  %75 = load volatile i64*, i64** %2
  ret i64* %75

; <label>:76:                                     ; preds = %16
  %77 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %78 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %79 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %77, i32 0, i32 0
  store i64* %0, i64** %79, align 8
  %80 = bitcast %"class.__gnu_cxx::__normal_iterator"* %78 to i8*
  %81 = bitcast %"class.__gnu_cxx::__normal_iterator"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %80, i8* %81, i64 8, i32 8, i1 false)
  %82 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %78, i32 0, i32 0
  %83 = load i64*, i64** %82, align 8
  %84 = call i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb1EE7_S_baseES7_(i64* %83)
  store i32 -761726222, i32* %15
  br label %85

; <label>:85:                                     ; preds = %76, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb1EE7_S_baseES7_(i64*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  store i64* %0, i64** %3, align 8
  %4 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %2) #3
  %5 = load i64*, i64** %4, align 8
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  ret i64** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEELb0EE7_S_baseES7_(i64*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store i64* %0, i64** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator"* %2 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  ret i64* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator"*, i64** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.326
  %6 = load i32, i32* @y.327
  %7 = add i32 %5, 1162134108
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1162134108
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 713784527, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 713784527, label %19
    i32 -844617463, label %27
    i32 1815578574, label %61
    i32 833035316, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -844617463, i32 833035316
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %29 = alloca i64**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  store i64** %1, i64*** %29, align 8
  %30 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %30, i32 0, i32 0
  %32 = load i64**, i64*** %29, align 8
  %33 = load i64*, i64** %32, align 8
  store i64* %33, i64** %31, align 8
  %34 = load i32, i32* @x.326
  %35 = load i32, i32* @y.327
  %36 = add i32 %34, 1843462481
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, 1843462481
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 1815578574, i32 833035316
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %64 = alloca i64**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %63, align 8
  store i64** %1, i64*** %64, align 8
  %65 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %63, align 8
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %65, i32 0, i32 0
  %67 = load i64**, i64*** %64, align 8
  %68 = load i64*, i64** %67, align 8
  store i64* %68, i64** %66, align 8
  store i32 -844617463, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.20"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE6_M_endEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %2, align 8
  %3 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node.20"*
  ret %"struct.std::_Rb_tree_node.20"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"*, i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.330
  %8 = load i32, i32* @y.331
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 1677374039, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %77
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1677374039, label %20
    i32 -1887546225, label %40
    i32 -1703369725, label %65
    i32 -1584907096, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %77

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1887546225, i32 -1584907096
  store i32 %39, i32* %16
  br label %77

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::less"*, align 8
  %42 = alloca i64*, align 8
  %43 = alloca i64*, align 8
  store %"struct.std::less"* %0, %"struct.std::less"** %41, align 8
  store i64* %1, i64** %42, align 8
  store i64* %2, i64** %43, align 8
  %44 = load %"struct.std::less"*, %"struct.std::less"** %41, align 8
  %45 = load i64*, i64** %42, align 8
  %46 = load i64, i64* %45, align 8
  %47 = load i64*, i64** %43, align 8
  %48 = load i64, i64* %47, align 8
  %49 = icmp slt i64 %46, %48
  store i1 %49, i1* %4
  %50 = load i32, i32* @x.330
  %51 = load i32, i32* @y.331
  %52 = add i32 %50, -225507119
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -225507119
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -1703369725, i32 -1584907096
  store i32 %64, i32* %16
  br label %77

; <label>:65:                                     ; preds = %17
  %66 = load volatile i1, i1* %4
  ret i1 %66

; <label>:67:                                     ; preds = %17
  %68 = alloca %"struct.std::less"*, align 8
  %69 = alloca i64*, align 8
  %70 = alloca i64*, align 8
  store %"struct.std::less"* %0, %"struct.std::less"** %68, align 8
  store i64* %1, i64** %69, align 8
  store i64* %2, i64** %70, align 8
  %71 = load %"struct.std::less"*, %"struct.std::less"** %68, align 8
  %72 = load i64*, i64** %69, align 8
  %73 = load i64, i64* %72, align 8
  %74 = load i64*, i64** %70, align 8
  %75 = load i64, i64* %74, align 8
  %76 = icmp slt i64 %73, %75
  store i32 -1887546225, i32* %16
  br label %77

; <label>:77:                                     ; preds = %67, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIS_IKxSt6vectorIxSaIxEEEESC_vEEOT_OT0_(%"struct.std::pair.22"*, %"struct.std::_Rb_tree_node.20"** dereferenceable(8), %"struct.std::_Rb_tree_node.20"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::pair.22"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node.20"**, align 8
  %6 = alloca %"struct.std::_Rb_tree_node.20"**, align 8
  store %"struct.std::pair.22"* %0, %"struct.std::pair.22"** %4, align 8
  store %"struct.std::_Rb_tree_node.20"** %1, %"struct.std::_Rb_tree_node.20"*** %5, align 8
  store %"struct.std::_Rb_tree_node.20"** %2, %"struct.std::_Rb_tree_node.20"*** %6, align 8
  %7 = load %"struct.std::pair.22"*, %"struct.std::pair.22"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair.22", %"struct.std::pair.22"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node.20"**, %"struct.std::_Rb_tree_node.20"*** %5, align 8
  %10 = call dereferenceable(8) %"struct.std::_Rb_tree_node.20"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEEOT_RNSt16remove_referenceISA_E4typeE(%"struct.std::_Rb_tree_node.20"** dereferenceable(8) %9) #3
  %11 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %10, align 8
  %12 = bitcast %"struct.std::_Rb_tree_node.20"* %11 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %12, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %13 = getelementptr inbounds %"struct.std::pair.22", %"struct.std::pair.22"* %7, i32 0, i32 1
  %14 = load %"struct.std::_Rb_tree_node.20"**, %"struct.std::_Rb_tree_node.20"*** %6, align 8
  %15 = call dereferenceable(8) %"struct.std::_Rb_tree_node.20"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEEOT_RNSt16remove_referenceISA_E4typeE(%"struct.std::_Rb_tree_node.20"** dereferenceable(8) %14) #3
  %16 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %15, align 8
  %17 = bitcast %"struct.std::_Rb_tree_node.20"* %16 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %13, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node.20"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEEEOT_RNSt16remove_referenceISA_E4typeE(%"struct.std::_Rb_tree_node.20"** dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Rb_tree_node.20"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.334
  %6 = load i32, i32* @y.335
  %7 = add i32 %5, 1305890494
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1305890494
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1579592286, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1579592286, label %19
    i32 -777482147, label %39
    i32 -185145517, label %57
    i32 -512895726, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -777482147, i32 -512895726
  store i32 %38, i32* %15
  br label %62

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_node.20"**, align 8
  store %"struct.std::_Rb_tree_node.20"** %0, %"struct.std::_Rb_tree_node.20"*** %40, align 8
  %41 = load %"struct.std::_Rb_tree_node.20"**, %"struct.std::_Rb_tree_node.20"*** %40, align 8
  store %"struct.std::_Rb_tree_node.20"** %41, %"struct.std::_Rb_tree_node.20"*** %2
  %42 = load i32, i32* @x.334
  %43 = load i32, i32* @y.335
  %44 = sub i32 %42, 336467462
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 336467462
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -185145517, i32 -512895726
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"struct.std::_Rb_tree_node.20"**, %"struct.std::_Rb_tree_node.20"*** %2
  ret %"struct.std::_Rb_tree_node.20"** %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"struct.std::_Rb_tree_node.20"**, align 8
  store %"struct.std::_Rb_tree_node.20"** %0, %"struct.std::_Rb_tree_node.20"*** %60, align 8
  %61 = load %"struct.std::_Rb_tree_node.20"**, %"struct.std::_Rb_tree_node.20"*** %60, align 8
  store i32 -777482147, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNKSt10_Select1stISt4pairIKxSt6vectorIxSaIxEEEEclERKS5_(%"struct.std::_Select1st"*, %"struct.std::pair.18"* dereferenceable(32)) #4 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.336
  %7 = load i32, i32* @y.337
  %8 = add i32 %6, 1642105244
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1642105244
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 228625806, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %56
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 228625806, label %20
    i32 1982521102, label %28
    i32 1425544079, label %48
    i32 -890487517, label %50
  ]

; <label>:19:                                     ; preds = %17
  br label %56

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1982521102, i32 -890487517
  store i32 %27, i32* %16
  br label %56

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::_Select1st"*, align 8
  %30 = alloca %"struct.std::pair.18"*, align 8
  store %"struct.std::_Select1st"* %0, %"struct.std::_Select1st"** %29, align 8
  store %"struct.std::pair.18"* %1, %"struct.std::pair.18"** %30, align 8
  %31 = load %"struct.std::_Select1st"*, %"struct.std::_Select1st"** %29, align 8
  %32 = load %"struct.std::pair.18"*, %"struct.std::pair.18"** %30, align 8
  %33 = getelementptr inbounds %"struct.std::pair.18", %"struct.std::pair.18"* %32, i32 0, i32 0
  store i64* %33, i64** %3
  %34 = load i32, i32* @x.336
  %35 = load i32, i32* @y.337
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 1425544079, i32 -890487517
  store i32 %47, i32* %16
  br label %56

; <label>:48:                                     ; preds = %17
  %49 = load volatile i64*, i64** %3
  ret i64* %49

; <label>:50:                                     ; preds = %17
  %51 = alloca %"struct.std::_Select1st"*, align 8
  %52 = alloca %"struct.std::pair.18"*, align 8
  store %"struct.std::_Select1st"* %0, %"struct.std::_Select1st"** %51, align 8
  store %"struct.std::pair.18"* %1, %"struct.std::pair.18"** %52, align 8
  %53 = load %"struct.std::_Select1st"*, %"struct.std::_Select1st"** %51, align 8
  %54 = load %"struct.std::pair.18"*, %"struct.std::pair.18"** %52, align 8
  %55 = getelementptr inbounds %"struct.std::pair.18", %"struct.std::pair.18"* %54, i32 0, i32 0
  store i32 1982521102, i32* %16
  br label %56

; <label>:56:                                     ; preds = %50, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(32) %"struct.std::pair.18"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE8_S_valueEPKSt13_Rb_tree_nodeIS5_E(%"struct.std::_Rb_tree_node.20"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.20"*, align 8
  store %"struct.std::_Rb_tree_node.20"* %0, %"struct.std::_Rb_tree_node.20"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %2, align 8
  %4 = call %"struct.std::pair.18"* @_ZNKSt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEE9_M_valptrEv(%"struct.std::_Rb_tree_node.20"* %3)
  ret %"struct.std::pair.18"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.18"* @_ZNKSt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEE9_M_valptrEv(%"struct.std::_Rb_tree_node.20"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.20"*, align 8
  store %"struct.std::_Rb_tree_node.20"* %0, %"struct.std::_Rb_tree_node.20"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node.20"*, %"struct.std::_Rb_tree_node.20"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node.20", %"struct.std::_Rb_tree_node.20"* %3, i32 0, i32 1
  %5 = call %"struct.std::pair.18"* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxSt6vectorIxSaIxEEEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.21"* %4) #3
  ret %"struct.std::pair.18"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair.18"* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxSt6vectorIxSaIxEEEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.21"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf.21"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.21"* %0, %"struct.__gnu_cxx::__aligned_membuf.21"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf.21"*, %"struct.__gnu_cxx::__aligned_membuf.21"** %2, align 8
  %4 = call i8* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxSt6vectorIxSaIxEEEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf.21"* %3) #3
  %5 = bitcast i8* %4 to %"struct.std::pair.18"*
  ret %"struct.std::pair.18"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNK9__gnu_cxx16__aligned_membufISt4pairIKxSt6vectorIxSaIxEEEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf.21"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf.21"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.21"* %0, %"struct.__gnu_cxx::__aligned_membuf.21"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf.21"*, %"struct.__gnu_cxx::__aligned_membuf.21"** %2, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf.21", %"struct.__gnu_cxx::__aligned_membuf.21"* %3, i32 0, i32 0
  %5 = bitcast [32 x i8]* %4 to i8*
  ret i8* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %3 = alloca %"struct.std::_Select1st", align 1
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %5 = call dereferenceable(32) %"struct.std::pair.18"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %4)
  %6 = call dereferenceable(8) i64* @_ZNKSt10_Select1stISt4pairIKxSt6vectorIxSaIxEEEEclERKS5_(%"struct.std::_Select1st"* %3, %"struct.std::pair.18"* dereferenceable(32) %5)
  ret i64* %6
}

; Function Attrs: nounwind
declare void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* dereferenceable(32)) #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt6vectorIxSaIxEEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_node_base"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_iterator"* %0, %"struct.std::_Rb_tree_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_iterator"*, %"struct.std::_Rb_tree_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  store %"struct.std::_Rb_tree_node_base"* %7, %"struct.std::_Rb_tree_node_base"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::pair.18"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = bitcast %"struct.std::_Rb_tree_node_base"* %3 to %"struct.std::_Rb_tree_node.20"*
  %5 = call %"struct.std::pair.18"* @_ZNKSt13_Rb_tree_nodeISt4pairIKxSt6vectorIxSaIxEEEE9_M_valptrEv(%"struct.std::_Rb_tree_node.20"* %4)
  ret %"struct.std::pair.18"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, i8 } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE16_M_insert_uniqueIxEESt4pairISt17_Rb_tree_iteratorIxEbEOT_(%"class.std::_Rb_tree.0"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node_base"*
  %4 = alloca %"class.std::_Rb_tree.0"*
  %5 = alloca %"struct.std::pair.23", align 8
  %6 = alloca %"class.std::_Rb_tree.0"*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"struct.std::pair.22", align 8
  %9 = alloca %"struct.std::_Identity", align 1
  %10 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node", align 8
  %11 = alloca %"struct.std::_Rb_tree_iterator.24", align 8
  %12 = alloca i8, align 1
  %13 = alloca %"struct.std::_Rb_tree_iterator.24", align 8
  %14 = alloca i8, align 1
  store %"class.std::_Rb_tree.0"* %0, %"class.std::_Rb_tree.0"** %6, align 8
  store i64* %1, i64** %7, align 8
  %15 = load %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %6, align 8
  store %"class.std::_Rb_tree.0"* %15, %"class.std::_Rb_tree.0"** %4
  %16 = load i64*, i64** %7, align 8
  %17 = call dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERx(%"struct.std::_Identity"* %9, i64* dereferenceable(8) %16)
  %18 = load volatile %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %4
  %19 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE24_M_get_insert_unique_posERKx(%"class.std::_Rb_tree.0"* %18, i64* dereferenceable(8) %17)
  %20 = bitcast %"struct.std::pair.22"* %8 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %21 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %20, i32 0, i32 0
  %22 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %19, 0
  store %"struct.std::_Rb_tree_node_base"* %22, %"struct.std::_Rb_tree_node_base"** %21, align 8
  %23 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %20, i32 0, i32 1
  %24 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %19, 1
  store %"struct.std::_Rb_tree_node_base"* %24, %"struct.std::_Rb_tree_node_base"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::pair.22", %"struct.std::pair.22"* %8, i32 0, i32 1
  %26 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %25, align 8
  store %"struct.std::_Rb_tree_node_base"* %26, %"struct.std::_Rb_tree_node_base"** %3
  %27 = alloca i32
  store i32 448156438, i32* %27
  br label %28

; <label>:28:                                     ; preds = %2, %119
  %29 = load i32, i32* %27
  switch i32 %29, label %30 [
    i32 448156438, label %31
    i32 926937781, label %35
    i32 1498942921, label %62
    i32 -359477167, label %99
    i32 1800242907, label %100
    i32 -1193620931, label %105
    i32 -1485834683, label %108
  ]

; <label>:30:                                     ; preds = %28
  br label %119

; <label>:31:                                     ; preds = %28
  %32 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %3
  %33 = icmp ne %"struct.std::_Rb_tree_node_base"* %32, null
  %34 = select i1 %33, i32 926937781, i32 1800242907
  store i32 %34, i32* %27
  br label %119

; <label>:35:                                     ; preds = %28
  %36 = load i32, i32* @x.352
  %37 = load i32, i32* @y.353
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 1498942921, i32 -1485834683
  store i32 %61, i32* %27
  br label %119

; <label>:62:                                     ; preds = %28
  %63 = load volatile %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %4
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeC2ERS5_(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %10, %"class.std::_Rb_tree.0"* dereferenceable(48) %63)
  %64 = getelementptr inbounds %"struct.std::pair.22", %"struct.std::pair.22"* %8, i32 0, i32 0
  %65 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::pair.22", %"struct.std::pair.22"* %8, i32 0, i32 1
  %67 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %66, align 8
  %68 = load i64*, i64** %7, align 8
  %69 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %68) #3
  %70 = load volatile %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %4
  %71 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE10_M_insert_IxNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIxEPSt18_Rb_tree_node_baseSB_OT_RT0_(%"class.std::_Rb_tree.0"* %70, %"struct.std::_Rb_tree_node_base"* %65, %"struct.std::_Rb_tree_node_base"* %67, i64* dereferenceable(8) %69, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* dereferenceable(8) %10)
  %72 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.24", %"struct.std::_Rb_tree_iterator.24"* %11, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %71, %"struct.std::_Rb_tree_node_base"** %72, align 8
  store i8 1, i8* %12, align 1
  call void @_ZNSt4pairISt17_Rb_tree_iteratorIxEbEC2IS1_bvEEOT_OT0_(%"struct.std::pair.23"* %5, %"struct.std::_Rb_tree_iterator.24"* dereferenceable(8) %11, i8* dereferenceable(1) %12)
  %73 = load i32, i32* @x.352
  %74 = load i32, i32* @y.353
  %75 = sub i32 0, 1
  %76 = add i32 %73, %75
  %77 = sub i32 %73, 1
  %78 = mul i32 %73, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %74, 10
  %82 = xor i1 %80, true
  %83 = xor i1 %81, true
  %84 = xor i1 false, true
  %85 = and i1 %82, false
  %86 = and i1 %80, %84
  %87 = and i1 %83, false
  %88 = and i1 %81, %84
  %89 = or i1 %85, %86
  %90 = or i1 %87, %88
  %91 = xor i1 %89, %90
  %92 = or i1 %82, %83
  %93 = xor i1 %92, true
  %94 = or i1 false, %84
  %95 = and i1 %93, %94
  %96 = or i1 %91, %95
  %97 = or i1 %80, %81
  %98 = select i1 %96, i32 -359477167, i32 -1485834683
  store i32 %98, i32* %27
  br label %119

; <label>:99:                                     ; preds = %28
  store i32 -1193620931, i32* %27
  br label %119

; <label>:100:                                    ; preds = %28
  %101 = getelementptr inbounds %"struct.std::pair.22", %"struct.std::pair.22"* %8, i32 0, i32 0
  %102 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %101, align 8
  %103 = bitcast %"struct.std::_Rb_tree_node_base"* %102 to %"struct.std::_Rb_tree_node"*
  %104 = bitcast %"struct.std::_Rb_tree_node"* %103 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.24"* %13, %"struct.std::_Rb_tree_node_base"* %104) #3
  store i8 0, i8* %14, align 1
  call void @_ZNSt4pairISt17_Rb_tree_iteratorIxEbEC2IS1_bvEEOT_OT0_(%"struct.std::pair.23"* %5, %"struct.std::_Rb_tree_iterator.24"* dereferenceable(8) %13, i8* dereferenceable(1) %14)
  store i32 -1193620931, i32* %27
  br label %119

; <label>:105:                                    ; preds = %28
  %106 = bitcast %"struct.std::pair.23"* %5 to { %"struct.std::_Rb_tree_node_base"*, i8 }*
  %107 = load { %"struct.std::_Rb_tree_node_base"*, i8 }, { %"struct.std::_Rb_tree_node_base"*, i8 }* %106, align 8
  ret { %"struct.std::_Rb_tree_node_base"*, i8 } %107

; <label>:108:                                    ; preds = %28
  %109 = load volatile %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %4
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeC2ERS5_(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %10, %"class.std::_Rb_tree.0"* dereferenceable(48) %109)
  %110 = getelementptr inbounds %"struct.std::pair.22", %"struct.std::pair.22"* %8, i32 0, i32 0
  %111 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %110, align 8
  %112 = getelementptr inbounds %"struct.std::pair.22", %"struct.std::pair.22"* %8, i32 0, i32 1
  %113 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %112, align 8
  %114 = load i64*, i64** %7, align 8
  %115 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %114) #3
  %116 = load volatile %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %4
  %117 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE10_M_insert_IxNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIxEPSt18_Rb_tree_node_baseSB_OT_RT0_(%"class.std::_Rb_tree.0"* %116, %"struct.std::_Rb_tree_node_base"* %111, %"struct.std::_Rb_tree_node_base"* %113, i64* dereferenceable(8) %115, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* dereferenceable(8) %10)
  %118 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.24", %"struct.std::_Rb_tree_iterator.24"* %11, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %117, %"struct.std::_Rb_tree_node_base"** %118, align 8
  store i8 1, i8* %12, align 1
  call void @_ZNSt4pairISt17_Rb_tree_iteratorIxEbEC2IS1_bvEEOT_OT0_(%"struct.std::pair.23"* %5, %"struct.std::_Rb_tree_iterator.24"* dereferenceable(8) %11, i8* dereferenceable(1) %12)
  store i32 1498942921, i32* %27
  br label %119

; <label>:119:                                    ; preds = %108, %100, %99, %62, %35, %31, %30
  br label %28
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairISt23_Rb_tree_const_iteratorIxEbEC2IRSt17_Rb_tree_iteratorIxERbvEEOT_OT0_(%"struct.std::pair"*, %"struct.std::_Rb_tree_iterator.24"* dereferenceable(8), i8* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::pair"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_iterator.24"*, align 8
  %6 = alloca i8*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %4, align 8
  store %"struct.std::_Rb_tree_iterator.24"* %1, %"struct.std::_Rb_tree_iterator.24"** %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_iterator.24"*, %"struct.std::_Rb_tree_iterator.24"** %5, align 8
  %10 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator.24"* @_ZSt7forwardIRSt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_iterator.24"* dereferenceable(8) %9) #3
  call void @_ZNSt23_Rb_tree_const_iteratorIxEC2ERKSt17_Rb_tree_iteratorIxE(%"struct.std::_Rb_tree_const_iterator"* %8, %"struct.std::_Rb_tree_iterator.24"* dereferenceable(8) %10) #3
  %11 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 1
  %12 = load i8*, i8** %6, align 8
  %13 = call dereferenceable(1) i8* @_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE(i8* dereferenceable(1) %12) #3
  %14 = load i8, i8* %13, align 1
  %15 = trunc i8 %14 to i1
  %16 = zext i1 %15 to i8
  store i8 %16, i8* %11, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE24_M_get_insert_unique_posERKx(%"class.std::_Rb_tree.0"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node"*
  %4 = alloca %"struct.std::_Rb_tree_node"*
  %5 = alloca %"class.std::_Rb_tree.0"*
  %6 = alloca %"struct.std::pair.22", align 8
  %7 = alloca %"class.std::_Rb_tree.0"*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %10 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %11 = alloca i8, align 1
  %12 = alloca %"struct.std::_Rb_tree_iterator.24", align 8
  %13 = alloca %"struct.std::_Rb_tree_iterator.24", align 8
  %14 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"class.std::_Rb_tree.0"* %0, %"class.std::_Rb_tree.0"** %7, align 8
  store i64* %1, i64** %8, align 8
  %15 = load %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %7, align 8
  store %"class.std::_Rb_tree.0"* %15, %"class.std::_Rb_tree.0"** %5
  %16 = load volatile %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %5
  %17 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_M_beginEv(%"class.std::_Rb_tree.0"* %16) #3
  store %"struct.std::_Rb_tree_node"* %17, %"struct.std::_Rb_tree_node"** %9, align 8
  %18 = load volatile %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %5
  %19 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_M_endEv(%"class.std::_Rb_tree.0"* %18) #3
  store %"struct.std::_Rb_tree_node"* %19, %"struct.std::_Rb_tree_node"** %10, align 8
  store i8 1, i8* %11, align 1
  %20 = alloca i32
  store i32 -1112451434, i32* %20
  %21 = alloca %"struct.std::_Rb_tree_node"*
  br label %22

; <label>:22:                                     ; preds = %2, %226
  %23 = load i32, i32* %20
  switch i32 %23, label %24 [
    i32 -1112451434, label %25
    i32 -647301715, label %29
    i32 1071750987, label %42
    i32 -895909294, label %58
    i32 126240699, label %89
    i32 220173434, label %91
    i32 1323241007, label %119
    i32 1787297476, label %138
    i32 -1249875536, label %140
    i32 -1821506331, label %142
    i32 2069723025, label %148
    i32 1495890221, label %154
    i32 -662340064, label %155
    i32 1005937405, label %157
    i32 647624225, label %158
    i32 794270961, label %168
    i32 -429790836, label %196
    i32 -991718522, label %211
    i32 858444413, label %212
    i32 -1825988665, label %214
    i32 1804351611, label %217
    i32 756662919, label %221
    i32 -1926121787, label %225
  ]

; <label>:24:                                     ; preds = %22
  br label %226

; <label>:25:                                     ; preds = %22
  %26 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %27 = icmp ne %"struct.std::_Rb_tree_node"* %26, null
  %28 = select i1 %27, i32 -647301715, i32 -1821506331
  store i32 %28, i32* %20
  br label %226

; <label>:29:                                     ; preds = %22
  %30 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  store %"struct.std::_Rb_tree_node"* %30, %"struct.std::_Rb_tree_node"** %10, align 8
  %31 = load volatile %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %5
  %32 = getelementptr inbounds %"class.std::_Rb_tree.0", %"class.std::_Rb_tree.0"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %32, i32 0, i32 0
  %34 = load i64*, i64** %8, align 8
  %35 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %36 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node"* %35)
  %37 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %33, i64* dereferenceable(8) %34, i64* dereferenceable(8) %36)
  %38 = zext i1 %37 to i8
  store i8 %38, i8* %11, align 1
  %39 = load i8, i8* %11, align 1
  %40 = trunc i8 %39 to i1
  %41 = select i1 %40, i32 1071750987, i32 220173434
  store i32 %41, i32* %20
  br label %226

; <label>:42:                                     ; preds = %22
  %43 = load i32, i32* @x.356
  %44 = load i32, i32* @y.357
  %45 = sub i32 %43, -1851045587
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -1851045587
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -895909294, i32 1804351611
  store i32 %57, i32* %20
  br label %226

; <label>:58:                                     ; preds = %22
  %59 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %60 = bitcast %"struct.std::_Rb_tree_node"* %59 to %"struct.std::_Rb_tree_node_base"*
  %61 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %60) #3
  store %"struct.std::_Rb_tree_node"* %61, %"struct.std::_Rb_tree_node"** %4
  %62 = load i32, i32* @x.356
  %63 = load i32, i32* @y.357
  %64 = add i32 %62, -425472996
  %65 = sub i32 %64, 1
  %66 = sub i32 %65, -425472996
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = xor i1 %70, true
  %73 = xor i1 %71, true
  %74 = xor i1 false, true
  %75 = and i1 %72, false
  %76 = and i1 %70, %74
  %77 = and i1 %73, false
  %78 = and i1 %71, %74
  %79 = or i1 %75, %76
  %80 = or i1 %77, %78
  %81 = xor i1 %79, %80
  %82 = or i1 %72, %73
  %83 = xor i1 %82, true
  %84 = or i1 false, %74
  %85 = and i1 %83, %84
  %86 = or i1 %81, %85
  %87 = or i1 %70, %71
  %88 = select i1 %86, i32 126240699, i32 1804351611
  store i32 %88, i32* %20
  br label %226

; <label>:89:                                     ; preds = %22
  store i32 -1249875536, i32* %20
  %90 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %4
  store %"struct.std::_Rb_tree_node"* %90, %"struct.std::_Rb_tree_node"** %21
  br label %226

; <label>:91:                                     ; preds = %22
  %92 = load i32, i32* @x.356
  %93 = load i32, i32* @y.357
  %94 = add i32 %92, 435444433
  %95 = sub i32 %94, 1
  %96 = sub i32 %95, 435444433
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 false, true
  %105 = and i1 %102, false
  %106 = and i1 %100, %104
  %107 = and i1 %103, false
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 false, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  %118 = select i1 %116, i32 1323241007, i32 756662919
  store i32 %118, i32* %20
  br label %226

; <label>:119:                                    ; preds = %22
  %120 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %121 = bitcast %"struct.std::_Rb_tree_node"* %120 to %"struct.std::_Rb_tree_node_base"*
  %122 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %121) #3
  store %"struct.std::_Rb_tree_node"* %122, %"struct.std::_Rb_tree_node"** %3
  %123 = load i32, i32* @x.356
  %124 = load i32, i32* @y.357
  %125 = sub i32 %123, -1777380102
  %126 = sub i32 %125, 1
  %127 = add i32 %126, -1777380102
  %128 = sub i32 %123, 1
  %129 = mul i32 %123, %127
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %124, 10
  %133 = and i1 %131, %132
  %134 = xor i1 %131, %132
  %135 = or i1 %133, %134
  %136 = or i1 %131, %132
  %137 = select i1 %135, i32 1787297476, i32 756662919
  store i32 %137, i32* %20
  br label %226

; <label>:138:                                    ; preds = %22
  store i32 -1249875536, i32* %20
  %139 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %3
  store %"struct.std::_Rb_tree_node"* %139, %"struct.std::_Rb_tree_node"** %21
  br label %226

; <label>:140:                                    ; preds = %22
  %141 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %21
  store %"struct.std::_Rb_tree_node"* %141, %"struct.std::_Rb_tree_node"** %9, align 8
  store i32 -1112451434, i32* %20
  br label %226

; <label>:142:                                    ; preds = %22
  %143 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  %144 = bitcast %"struct.std::_Rb_tree_node"* %143 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.24"* %12, %"struct.std::_Rb_tree_node_base"* %144) #3
  %145 = load i8, i8* %11, align 1
  %146 = trunc i8 %145 to i1
  %147 = select i1 %146, i32 2069723025, i32 647624225
  store i32 %147, i32* %20
  br label %226

; <label>:148:                                    ; preds = %22
  %149 = load volatile %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %5
  %150 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5beginEv(%"class.std::_Rb_tree.0"* %149) #3
  %151 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.24", %"struct.std::_Rb_tree_iterator.24"* %13, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %150, %"struct.std::_Rb_tree_node_base"** %151, align 8
  %152 = call zeroext i1 @_ZNKSt17_Rb_tree_iteratorIxEeqERKS0_(%"struct.std::_Rb_tree_iterator.24"* %12, %"struct.std::_Rb_tree_iterator.24"* dereferenceable(8) %13) #3
  %153 = select i1 %152, i32 1495890221, i32 -662340064
  store i32 %153, i32* %20
  br label %226

; <label>:154:                                    ; preds = %22
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIxES7_vEEOT_OT0_(%"struct.std::pair.22"* %6, %"struct.std::_Rb_tree_node"** dereferenceable(8) %9, %"struct.std::_Rb_tree_node"** dereferenceable(8) %10)
  store i32 -1825988665, i32* %20
  br label %226

; <label>:155:                                    ; preds = %22
  %156 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator.24"* @_ZNSt17_Rb_tree_iteratorIxEmmEv(%"struct.std::_Rb_tree_iterator.24"* %12) #3
  store i32 1005937405, i32* %20
  br label %226

; <label>:157:                                    ; preds = %22
  store i32 647624225, i32* %20
  br label %226

; <label>:158:                                    ; preds = %22
  %159 = load volatile %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %5
  %160 = getelementptr inbounds %"class.std::_Rb_tree.0", %"class.std::_Rb_tree.0"* %159, i32 0, i32 0
  %161 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %160, i32 0, i32 0
  %162 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.24", %"struct.std::_Rb_tree_iterator.24"* %12, i32 0, i32 0
  %163 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %162, align 8
  %164 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %163)
  %165 = load i64*, i64** %8, align 8
  %166 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %161, i64* dereferenceable(8) %164, i64* dereferenceable(8) %165)
  %167 = select i1 %166, i32 794270961, i32 858444413
  store i32 %167, i32* %20
  br label %226

; <label>:168:                                    ; preds = %22
  %169 = load i32, i32* @x.356
  %170 = load i32, i32* @y.357
  %171 = add i32 %169, 1167028229
  %172 = sub i32 %171, 1
  %173 = sub i32 %172, 1167028229
  %174 = sub i32 %169, 1
  %175 = mul i32 %169, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %170, 10
  %179 = xor i1 %177, true
  %180 = xor i1 %178, true
  %181 = xor i1 true, true
  %182 = and i1 %179, true
  %183 = and i1 %177, %181
  %184 = and i1 %180, true
  %185 = and i1 %178, %181
  %186 = or i1 %182, %183
  %187 = or i1 %184, %185
  %188 = xor i1 %186, %187
  %189 = or i1 %179, %180
  %190 = xor i1 %189, true
  %191 = or i1 true, %181
  %192 = and i1 %190, %191
  %193 = or i1 %188, %192
  %194 = or i1 %177, %178
  %195 = select i1 %193, i32 -429790836, i32 -1926121787
  store i32 %195, i32* %20
  br label %226

; <label>:196:                                    ; preds = %22
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIxES7_vEEOT_OT0_(%"struct.std::pair.22"* %6, %"struct.std::_Rb_tree_node"** dereferenceable(8) %9, %"struct.std::_Rb_tree_node"** dereferenceable(8) %10)
  %197 = load i32, i32* @x.356
  %198 = load i32, i32* @y.357
  %199 = sub i32 0, 1
  %200 = add i32 %197, %199
  %201 = sub i32 %197, 1
  %202 = mul i32 %197, %200
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %198, 10
  %206 = and i1 %204, %205
  %207 = xor i1 %204, %205
  %208 = or i1 %206, %207
  %209 = or i1 %204, %205
  %210 = select i1 %208, i32 -991718522, i32 -1926121787
  store i32 %210, i32* %20
  br label %226

; <label>:211:                                    ; preds = %22
  store i32 -1825988665, i32* %20
  br label %226

; <label>:212:                                    ; preds = %22
  %213 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.24", %"struct.std::_Rb_tree_iterator.24"* %12, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %14, align 8
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.22"* %6, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %213, %"struct.std::_Rb_tree_node_base"** dereferenceable(8) %14)
  store i32 -1825988665, i32* %20
  br label %226

; <label>:214:                                    ; preds = %22
  %215 = bitcast %"struct.std::pair.22"* %6 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %216 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %215, align 8
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %216

; <label>:217:                                    ; preds = %22
  %218 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %219 = bitcast %"struct.std::_Rb_tree_node"* %218 to %"struct.std::_Rb_tree_node_base"*
  %220 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %219) #3
  store i32 -895909294, i32* %20
  br label %226

; <label>:221:                                    ; preds = %22
  %222 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %9, align 8
  %223 = bitcast %"struct.std::_Rb_tree_node"* %222 to %"struct.std::_Rb_tree_node_base"*
  %224 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %223) #3
  store i32 1323241007, i32* %20
  br label %226

; <label>:225:                                    ; preds = %22
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIxES7_vEEOT_OT0_(%"struct.std::pair.22"* %6, %"struct.std::_Rb_tree_node"** dereferenceable(8) %9, %"struct.std::_Rb_tree_node"** dereferenceable(8) %10)
  store i32 -429790836, i32* %20
  br label %226

; <label>:226:                                    ; preds = %225, %221, %217, %212, %211, %196, %168, %158, %157, %155, %154, %148, %142, %140, %138, %119, %91, %89, %58, %42, %29, %25, %24
  br label %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERx(%"struct.std::_Identity"*, i64* dereferenceable(8)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Identity"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Identity"* %0, %"struct.std::_Identity"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Identity"*, %"struct.std::_Identity"** %3, align 8
  %6 = load i64*, i64** %4, align 8
  ret i64* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeC2ERS5_(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"class.std::_Rb_tree.0"* dereferenceable(48)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, align 8
  %4 = alloca %"class.std::_Rb_tree.0"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %3, align 8
  store %"class.std::_Rb_tree.0"* %1, %"class.std::_Rb_tree.0"** %4, align 8
  %5 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %5, i32 0, i32 0
  %7 = load %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %4, align 8
  store %"class.std::_Rb_tree.0"* %7, %"class.std::_Rb_tree.0"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE10_M_insert_IxNS5_11_Alloc_nodeEEESt17_Rb_tree_iteratorIxEPSt18_Rb_tree_node_baseSB_OT_RT0_(%"class.std::_Rb_tree.0"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, i64* dereferenceable(8), %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* dereferenceable(8)) #0 comdat align 2 {
  %6 = alloca i1
  %7 = alloca i1
  %8 = alloca i1
  %9 = alloca %"class.std::_Rb_tree.0"*
  %10 = alloca %"struct.std::_Rb_tree_node"**
  %11 = alloca %"struct.std::_Identity"*
  %12 = alloca i8*
  %13 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"**
  %14 = alloca i64**
  %15 = alloca %"struct.std::_Rb_tree_node_base"**
  %16 = alloca %"struct.std::_Rb_tree_iterator.24"*
  %17 = alloca i1
  %18 = alloca i1
  %19 = load i32, i32* @x.362
  %20 = load i32, i32* @y.363
  %21 = add i32 %19, -633186247
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, -633186247
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  store i1 %27, i1* %18
  %28 = icmp slt i32 %20, 10
  store i1 %28, i1* %17
  %29 = alloca i32
  store i32 -1213019882, i32* %29
  %30 = alloca i1
  br label %31

; <label>:31:                                     ; preds = %5, %278
  %32 = load i32, i32* %29
  switch i32 %32, label %33 [
    i32 -1213019882, label %34
    i32 571200215, label %54
    i32 -2022143493, label %97
    i32 -1915929001, label %100
    i32 1682761001, label %128
    i32 1627317133, label %149
    i32 -893209068, label %152
    i32 -555034899, label %180
    i32 -2013710776, label %207
    i32 865339558, label %209
    i32 -2006764441, label %246
    i32 -507622614, label %259
    i32 985588448, label %266
  ]

; <label>:33:                                     ; preds = %31
  br label %278

; <label>:34:                                     ; preds = %31
  %35 = load volatile i1, i1* %18
  %36 = load volatile i1, i1* %17
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 true, true
  %40 = and i1 %37, true
  %41 = and i1 %35, %39
  %42 = and i1 %38, true
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 true, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  %53 = select i1 %51, i32 571200215, i32 -2006764441
  store i32 %53, i32* %29
  br label %278

; <label>:54:                                     ; preds = %31
  %55 = alloca %"struct.std::_Rb_tree_iterator.24", align 8
  store %"struct.std::_Rb_tree_iterator.24"* %55, %"struct.std::_Rb_tree_iterator.24"** %16
  %56 = alloca %"class.std::_Rb_tree.0"*, align 8
  %57 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %58 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"** %58, %"struct.std::_Rb_tree_node_base"*** %15
  %59 = alloca i64*, align 8
  store i64** %59, i64*** %14
  %60 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %60, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*** %13
  %61 = alloca i8, align 1
  store i8* %61, i8** %12
  %62 = alloca %"struct.std::_Identity", align 1
  store %"struct.std::_Identity"* %62, %"struct.std::_Identity"** %11
  %63 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"** %63, %"struct.std::_Rb_tree_node"*** %10
  store %"class.std::_Rb_tree.0"* %0, %"class.std::_Rb_tree.0"** %56, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %57, align 8
  %64 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %15
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %64, align 8
  %65 = load volatile i64**, i64*** %14
  store i64* %3, i64** %65, align 8
  %66 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"**, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*** %13
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %4, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %66, align 8
  %67 = load %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %56, align 8
  store %"class.std::_Rb_tree.0"* %67, %"class.std::_Rb_tree.0"** %9
  %68 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %57, align 8
  %69 = icmp ne %"struct.std::_Rb_tree_node_base"* %68, null
  store i1 %69, i1* %8
  %70 = load i32, i32* @x.362
  %71 = load i32, i32* @y.363
  %72 = sub i32 %70, -1746833386
  %73 = sub i32 %72, 1
  %74 = add i32 %73, -1746833386
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 false, true
  %83 = and i1 %80, false
  %84 = and i1 %78, %82
  %85 = and i1 %81, false
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 false, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  %96 = select i1 %94, i32 -2022143493, i32 -2006764441
  store i32 %96, i32* %29
  br label %278

; <label>:97:                                     ; preds = %31
  %98 = load volatile i1, i1* %8
  %99 = select i1 %98, i32 865339558, i32 -1915929001
  store i32 %99, i32* %29
  store i1 true, i1* %30
  br label %278

; <label>:100:                                    ; preds = %31
  %101 = load i32, i32* @x.362
  %102 = load i32, i32* @y.363
  %103 = sub i32 %101, -177339318
  %104 = sub i32 %103, 1
  %105 = add i32 %104, -177339318
  %106 = sub i32 %101, 1
  %107 = mul i32 %101, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %102, 10
  %111 = xor i1 %109, true
  %112 = xor i1 %110, true
  %113 = xor i1 true, true
  %114 = and i1 %111, true
  %115 = and i1 %109, %113
  %116 = and i1 %112, true
  %117 = and i1 %110, %113
  %118 = or i1 %114, %115
  %119 = or i1 %116, %117
  %120 = xor i1 %118, %119
  %121 = or i1 %111, %112
  %122 = xor i1 %121, true
  %123 = or i1 true, %113
  %124 = and i1 %122, %123
  %125 = or i1 %120, %124
  %126 = or i1 %109, %110
  %127 = select i1 %125, i32 1682761001, i32 -507622614
  store i32 %127, i32* %29
  br label %278

; <label>:128:                                    ; preds = %31
  %129 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %15
  %130 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %129, align 8
  %131 = load volatile %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %9
  %132 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_M_endEv(%"class.std::_Rb_tree.0"* %131) #3
  %133 = bitcast %"struct.std::_Rb_tree_node"* %132 to %"struct.std::_Rb_tree_node_base"*
  %134 = icmp eq %"struct.std::_Rb_tree_node_base"* %130, %133
  store i1 %134, i1* %7
  %135 = load i32, i32* @x.362
  %136 = load i32, i32* @y.363
  %137 = sub i32 0, 1
  %138 = add i32 %135, %137
  %139 = sub i32 %135, 1
  %140 = mul i32 %135, %138
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %136, 10
  %144 = and i1 %142, %143
  %145 = xor i1 %142, %143
  %146 = or i1 %144, %145
  %147 = or i1 %142, %143
  %148 = select i1 %146, i32 1627317133, i32 -507622614
  store i32 %148, i32* %29
  br label %278

; <label>:149:                                    ; preds = %31
  %150 = load volatile i1, i1* %7
  %151 = select i1 %150, i32 865339558, i32 -893209068
  store i32 %151, i32* %29
  store i1 true, i1* %30
  br label %278

; <label>:152:                                    ; preds = %31
  %153 = load i32, i32* @x.362
  %154 = load i32, i32* @y.363
  %155 = sub i32 %153, 1454024817
  %156 = sub i32 %155, 1
  %157 = add i32 %156, 1454024817
  %158 = sub i32 %153, 1
  %159 = mul i32 %153, %157
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %154, 10
  %163 = xor i1 %161, true
  %164 = xor i1 %162, true
  %165 = xor i1 true, true
  %166 = and i1 %163, true
  %167 = and i1 %161, %165
  %168 = and i1 %164, true
  %169 = and i1 %162, %165
  %170 = or i1 %166, %167
  %171 = or i1 %168, %169
  %172 = xor i1 %170, %171
  %173 = or i1 %163, %164
  %174 = xor i1 %173, true
  %175 = or i1 true, %165
  %176 = and i1 %174, %175
  %177 = or i1 %172, %176
  %178 = or i1 %161, %162
  %179 = select i1 %177, i32 -555034899, i32 985588448
  store i32 %179, i32* %29
  br label %278

; <label>:180:                                    ; preds = %31
  %181 = load volatile %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %9
  %182 = getelementptr inbounds %"class.std::_Rb_tree.0", %"class.std::_Rb_tree.0"* %181, i32 0, i32 0
  %183 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %182, i32 0, i32 0
  %184 = load volatile i64**, i64*** %14
  %185 = load i64*, i64** %184, align 8
  %186 = load volatile %"struct.std::_Identity"*, %"struct.std::_Identity"** %11
  %187 = call dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERx(%"struct.std::_Identity"* %186, i64* dereferenceable(8) %185)
  %188 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %15
  %189 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %188, align 8
  %190 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %189)
  %191 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %183, i64* dereferenceable(8) %187, i64* dereferenceable(8) %190)
  store i1 %191, i1* %6
  %192 = load i32, i32* @x.362
  %193 = load i32, i32* @y.363
  %194 = add i32 %192, -1022958539
  %195 = sub i32 %194, 1
  %196 = sub i32 %195, -1022958539
  %197 = sub i32 %192, 1
  %198 = mul i32 %192, %196
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %193, 10
  %202 = and i1 %200, %201
  %203 = xor i1 %200, %201
  %204 = or i1 %202, %203
  %205 = or i1 %200, %201
  %206 = select i1 %204, i32 -2013710776, i32 985588448
  store i32 %206, i32* %29
  br label %278

; <label>:207:                                    ; preds = %31
  store i32 865339558, i32* %29
  %208 = load volatile i1, i1* %6
  store i1 %208, i1* %30
  br label %278

; <label>:209:                                    ; preds = %31
  %210 = load i1, i1* %30
  %211 = zext i1 %210 to i8
  %212 = load volatile i8*, i8** %12
  store i8 %211, i8* %212, align 1
  %213 = load volatile %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"**, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*** %13
  %214 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %213, align 8
  %215 = load volatile i64**, i64*** %14
  %216 = load i64*, i64** %215, align 8
  %217 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %216) #3
  %218 = call %"struct.std::_Rb_tree_node"* @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeclIxEEPSt13_Rb_tree_nodeIxEOT_(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %214, i64* dereferenceable(8) %217)
  %219 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %10
  store %"struct.std::_Rb_tree_node"* %218, %"struct.std::_Rb_tree_node"** %219, align 8
  %220 = load volatile i8*, i8** %12
  %221 = load i8, i8* %220, align 1
  %222 = trunc i8 %221 to i1
  %223 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %10
  %224 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %223, align 8
  %225 = bitcast %"struct.std::_Rb_tree_node"* %224 to %"struct.std::_Rb_tree_node_base"*
  %226 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %15
  %227 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %226, align 8
  %228 = load volatile %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %9
  %229 = getelementptr inbounds %"class.std::_Rb_tree.0", %"class.std::_Rb_tree.0"* %228, i32 0, i32 0
  %230 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %229, i32 0, i32 1
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %222, %"struct.std::_Rb_tree_node_base"* %225, %"struct.std::_Rb_tree_node_base"* %227, %"struct.std::_Rb_tree_node_base"* dereferenceable(32) %230) #3
  %231 = load volatile %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %9
  %232 = getelementptr inbounds %"class.std::_Rb_tree.0", %"class.std::_Rb_tree.0"* %231, i32 0, i32 0
  %233 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %232, i32 0, i32 2
  %234 = load i64, i64* %233, align 8
  %235 = sub i64 %234, 3958947512606225114
  %236 = add i64 %235, 1
  %237 = add i64 %236, 3958947512606225114
  %238 = add i64 %234, 1
  store i64 %237, i64* %233, align 8
  %239 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %10
  %240 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %239, align 8
  %241 = bitcast %"struct.std::_Rb_tree_node"* %240 to %"struct.std::_Rb_tree_node_base"*
  %242 = load volatile %"struct.std::_Rb_tree_iterator.24"*, %"struct.std::_Rb_tree_iterator.24"** %16
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.24"* %242, %"struct.std::_Rb_tree_node_base"* %241) #3
  %243 = load volatile %"struct.std::_Rb_tree_iterator.24"*, %"struct.std::_Rb_tree_iterator.24"** %16
  %244 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.24", %"struct.std::_Rb_tree_iterator.24"* %243, i32 0, i32 0
  %245 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %244, align 8
  ret %"struct.std::_Rb_tree_node_base"* %245

; <label>:246:                                    ; preds = %31
  %247 = alloca %"struct.std::_Rb_tree_iterator.24", align 8
  %248 = alloca %"class.std::_Rb_tree.0"*, align 8
  %249 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %250 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %251 = alloca i64*, align 8
  %252 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, align 8
  %253 = alloca i8, align 1
  %254 = alloca %"struct.std::_Identity", align 1
  %255 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree.0"* %0, %"class.std::_Rb_tree.0"** %248, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %249, align 8
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %250, align 8
  store i64* %3, i64** %251, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %4, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %252, align 8
  %256 = load %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %248, align 8
  %257 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %249, align 8
  %258 = icmp ne %"struct.std::_Rb_tree_node_base"* %257, null
  store i32 571200215, i32* %29
  br label %278

; <label>:259:                                    ; preds = %31
  %260 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %15
  %261 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %260, align 8
  %262 = load volatile %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %9
  %263 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_M_endEv(%"class.std::_Rb_tree.0"* %262) #3
  %264 = bitcast %"struct.std::_Rb_tree_node"* %263 to %"struct.std::_Rb_tree_node_base"*
  %265 = icmp eq %"struct.std::_Rb_tree_node_base"* %261, %264
  store i32 1682761001, i32* %29
  br label %278

; <label>:266:                                    ; preds = %31
  %267 = load volatile %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %9
  %268 = getelementptr inbounds %"class.std::_Rb_tree.0", %"class.std::_Rb_tree.0"* %267, i32 0, i32 0
  %269 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %268, i32 0, i32 0
  %270 = load volatile i64**, i64*** %14
  %271 = load i64*, i64** %270, align 8
  %272 = load volatile %"struct.std::_Identity"*, %"struct.std::_Identity"** %11
  %273 = call dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERx(%"struct.std::_Identity"* %272, i64* dereferenceable(8) %271)
  %274 = load volatile %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %15
  %275 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %274, align 8
  %276 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %275)
  %277 = call zeroext i1 @_ZNKSt4lessIxEclERKxS2_(%"struct.std::less"* %269, i64* dereferenceable(8) %273, i64* dereferenceable(8) %276)
  store i32 -555034899, i32* %29
  br label %278

; <label>:278:                                    ; preds = %266, %259, %246, %207, %180, %152, %149, %128, %100, %97, %54, %34, %33
  br label %31
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairISt17_Rb_tree_iteratorIxEbEC2IS1_bvEEOT_OT0_(%"struct.std::pair.23"*, %"struct.std::_Rb_tree_iterator.24"* dereferenceable(8), i8* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.364
  %7 = load i32, i32* @y.365
  %8 = sub i32 %6, -538841387
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -538841387
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1013622493, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %88
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1013622493, label %20
    i32 -1357812646, label %40
    i32 1800802548, label %71
    i32 -1937468455, label %72
  ]

; <label>:19:                                     ; preds = %17
  br label %88

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1357812646, i32 -1937468455
  store i32 %39, i32* %16
  br label %88

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::pair.23"*, align 8
  %42 = alloca %"struct.std::_Rb_tree_iterator.24"*, align 8
  %43 = alloca i8*, align 8
  store %"struct.std::pair.23"* %0, %"struct.std::pair.23"** %41, align 8
  store %"struct.std::_Rb_tree_iterator.24"* %1, %"struct.std::_Rb_tree_iterator.24"** %42, align 8
  store i8* %2, i8** %43, align 8
  %44 = load %"struct.std::pair.23"*, %"struct.std::pair.23"** %41, align 8
  %45 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %44, i32 0, i32 0
  %46 = load %"struct.std::_Rb_tree_iterator.24"*, %"struct.std::_Rb_tree_iterator.24"** %42, align 8
  %47 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator.24"* @_ZSt7forwardISt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::_Rb_tree_iterator.24"* dereferenceable(8) %46) #3
  %48 = bitcast %"struct.std::_Rb_tree_iterator.24"* %45 to i8*
  %49 = bitcast %"struct.std::_Rb_tree_iterator.24"* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 8, i1 false)
  %50 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %44, i32 0, i32 1
  %51 = load i8*, i8** %43, align 8
  %52 = call dereferenceable(1) i8* @_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE(i8* dereferenceable(1) %51) #3
  %53 = load i8, i8* %52, align 1
  %54 = trunc i8 %53 to i1
  %55 = zext i1 %54 to i8
  store i8 %55, i8* %50, align 8
  %56 = load i32, i32* @x.364
  %57 = load i32, i32* @y.365
  %58 = add i32 %56, 1722025801
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, 1722025801
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 1800802548, i32 -1937468455
  store i32 %70, i32* %16
  br label %88

; <label>:71:                                     ; preds = %17
  ret void

; <label>:72:                                     ; preds = %17
  %73 = alloca %"struct.std::pair.23"*, align 8
  %74 = alloca %"struct.std::_Rb_tree_iterator.24"*, align 8
  %75 = alloca i8*, align 8
  store %"struct.std::pair.23"* %0, %"struct.std::pair.23"** %73, align 8
  store %"struct.std::_Rb_tree_iterator.24"* %1, %"struct.std::_Rb_tree_iterator.24"** %74, align 8
  store i8* %2, i8** %75, align 8
  %76 = load %"struct.std::pair.23"*, %"struct.std::pair.23"** %73, align 8
  %77 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %76, i32 0, i32 0
  %78 = load %"struct.std::_Rb_tree_iterator.24"*, %"struct.std::_Rb_tree_iterator.24"** %74, align 8
  %79 = call dereferenceable(8) %"struct.std::_Rb_tree_iterator.24"* @_ZSt7forwardISt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::_Rb_tree_iterator.24"* dereferenceable(8) %78) #3
  %80 = bitcast %"struct.std::_Rb_tree_iterator.24"* %77 to i8*
  %81 = bitcast %"struct.std::_Rb_tree_iterator.24"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %80, i8* %81, i64 8, i32 8, i1 false)
  %82 = getelementptr inbounds %"struct.std::pair.23", %"struct.std::pair.23"* %76, i32 0, i32 1
  %83 = load i8*, i8** %75, align 8
  %84 = call dereferenceable(1) i8* @_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE(i8* dereferenceable(1) %83) #3
  %85 = load i8, i8* %84, align 1
  %86 = trunc i8 %85 to i1
  %87 = zext i1 %86 to i8
  store i8 %87, i8* %82, align 8
  store i32 -1357812646, i32* %16
  br label %88

; <label>:88:                                     ; preds = %72, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.24"*, %"struct.std::_Rb_tree_node_base"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator.24"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_iterator.24"* %0, %"struct.std::_Rb_tree_iterator.24"** %3, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_iterator.24"*, %"struct.std::_Rb_tree_iterator.24"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.24", %"struct.std::_Rb_tree_iterator.24"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  store %"struct.std::_Rb_tree_node_base"* %7, %"struct.std::_Rb_tree_node_base"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_M_endEv(%"class.std::_Rb_tree.0"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.0"*, align 8
  store %"class.std::_Rb_tree.0"* %0, %"class.std::_Rb_tree.0"** %2, align 8
  %3 = load %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.0", %"class.std::_Rb_tree.0"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %3 = alloca %"struct.std::_Identity", align 1
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %2, align 8
  %4 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2, align 8
  %5 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node"* %4)
  %6 = call dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"* %3, i64* dereferenceable(8) %5)
  ret i64* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt17_Rb_tree_iteratorIxEeqERKS0_(%"struct.std::_Rb_tree_iterator.24"*, %"struct.std::_Rb_tree_iterator.24"* dereferenceable(8)) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.372
  %7 = load i32, i32* @y.373
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -32143815, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -32143815, label %19
    i32 1138432633, label %27
    i32 -769945708, label %52
    i32 -2097955644, label %54
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1138432633, i32 -2097955644
  store i32 %26, i32* %15
  br label %64

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_iterator.24"*, align 8
  %29 = alloca %"struct.std::_Rb_tree_iterator.24"*, align 8
  store %"struct.std::_Rb_tree_iterator.24"* %0, %"struct.std::_Rb_tree_iterator.24"** %28, align 8
  store %"struct.std::_Rb_tree_iterator.24"* %1, %"struct.std::_Rb_tree_iterator.24"** %29, align 8
  %30 = load %"struct.std::_Rb_tree_iterator.24"*, %"struct.std::_Rb_tree_iterator.24"** %28, align 8
  %31 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.24", %"struct.std::_Rb_tree_iterator.24"* %30, i32 0, i32 0
  %32 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %31, align 8
  %33 = load %"struct.std::_Rb_tree_iterator.24"*, %"struct.std::_Rb_tree_iterator.24"** %29, align 8
  %34 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.24", %"struct.std::_Rb_tree_iterator.24"* %33, i32 0, i32 0
  %35 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %34, align 8
  %36 = icmp eq %"struct.std::_Rb_tree_node_base"* %32, %35
  store i1 %36, i1* %3
  %37 = load i32, i32* @x.372
  %38 = load i32, i32* @y.373
  %39 = sub i32 %37, -2106464647
  %40 = sub i32 %39, 1
  %41 = add i32 %40, -2106464647
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 -769945708, i32 -2097955644
  store i32 %51, i32* %15
  br label %64

; <label>:52:                                     ; preds = %16
  %53 = load volatile i1, i1* %3
  ret i1 %53

; <label>:54:                                     ; preds = %16
  %55 = alloca %"struct.std::_Rb_tree_iterator.24"*, align 8
  %56 = alloca %"struct.std::_Rb_tree_iterator.24"*, align 8
  store %"struct.std::_Rb_tree_iterator.24"* %0, %"struct.std::_Rb_tree_iterator.24"** %55, align 8
  store %"struct.std::_Rb_tree_iterator.24"* %1, %"struct.std::_Rb_tree_iterator.24"** %56, align 8
  %57 = load %"struct.std::_Rb_tree_iterator.24"*, %"struct.std::_Rb_tree_iterator.24"** %55, align 8
  %58 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.24", %"struct.std::_Rb_tree_iterator.24"* %57, i32 0, i32 0
  %59 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %58, align 8
  %60 = load %"struct.std::_Rb_tree_iterator.24"*, %"struct.std::_Rb_tree_iterator.24"** %56, align 8
  %61 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.24", %"struct.std::_Rb_tree_iterator.24"* %60, i32 0, i32 0
  %62 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %61, align 8
  %63 = icmp eq %"struct.std::_Rb_tree_node_base"* %59, %62
  store i32 1138432633, i32* %15
  br label %64

; <label>:64:                                     ; preds = %54, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5beginEv(%"class.std::_Rb_tree.0"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator.24", align 8
  %3 = alloca %"class.std::_Rb_tree.0"*, align 8
  store %"class.std::_Rb_tree.0"* %0, %"class.std::_Rb_tree.0"** %3, align 8
  %4 = load %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree.0", %"class.std::_Rb_tree.0"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %6, i32 0, i32 2
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  call void @_ZNSt17_Rb_tree_iteratorIxEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.24"* %2, %"struct.std::_Rb_tree_node_base"* %8) #3
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.24", %"struct.std::_Rb_tree_iterator.24"* %2, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  ret %"struct.std::_Rb_tree_node_base"* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeIxES7_vEEOT_OT0_(%"struct.std::pair.22"*, %"struct.std::_Rb_tree_node"** dereferenceable(8), %"struct.std::_Rb_tree_node"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::pair.22"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"**, align 8
  %6 = alloca %"struct.std::_Rb_tree_node"**, align 8
  store %"struct.std::pair.22"* %0, %"struct.std::pair.22"** %4, align 8
  store %"struct.std::_Rb_tree_node"** %1, %"struct.std::_Rb_tree_node"*** %5, align 8
  store %"struct.std::_Rb_tree_node"** %2, %"struct.std::_Rb_tree_node"*** %6, align 8
  %7 = load %"struct.std::pair.22"*, %"struct.std::pair.22"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair.22", %"struct.std::pair.22"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %5, align 8
  %10 = call dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeIxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8) %9) #3
  %11 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %10, align 8
  %12 = bitcast %"struct.std::_Rb_tree_node"* %11 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %12, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %13 = getelementptr inbounds %"struct.std::pair.22", %"struct.std::pair.22"* %7, i32 0, i32 1
  %14 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %6, align 8
  %15 = call dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeIxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8) %14) #3
  %16 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %15, align 8
  %17 = bitcast %"struct.std::_Rb_tree_node"* %16 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %13, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator.24"* @_ZNSt17_Rb_tree_iteratorIxEmmEv(%"struct.std::_Rb_tree_iterator.24"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator.24"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.378
  %6 = load i32, i32* @y.379
  %7 = add i32 %5, 1338265031
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1338265031
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 941989325, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %59
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 941989325, label %19
    i32 -33584129, label %27
    i32 -167812244, label %50
    i32 -467508140, label %52
  ]

; <label>:18:                                     ; preds = %16
  br label %59

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -33584129, i32 -467508140
  store i32 %26, i32* %15
  br label %59

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_iterator.24"*, align 8
  store %"struct.std::_Rb_tree_iterator.24"* %0, %"struct.std::_Rb_tree_iterator.24"** %28, align 8
  %29 = load %"struct.std::_Rb_tree_iterator.24"*, %"struct.std::_Rb_tree_iterator.24"** %28, align 8
  store %"struct.std::_Rb_tree_iterator.24"* %29, %"struct.std::_Rb_tree_iterator.24"** %2
  %30 = load volatile %"struct.std::_Rb_tree_iterator.24"*, %"struct.std::_Rb_tree_iterator.24"** %2
  %31 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.24", %"struct.std::_Rb_tree_iterator.24"* %30, i32 0, i32 0
  %32 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %31, align 8
  %33 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %32) #13
  %34 = load volatile %"struct.std::_Rb_tree_iterator.24"*, %"struct.std::_Rb_tree_iterator.24"** %2
  %35 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.24", %"struct.std::_Rb_tree_iterator.24"* %34, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %33, %"struct.std::_Rb_tree_node_base"** %35, align 8
  %36 = load i32, i32* @x.378
  %37 = load i32, i32* @y.379
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 -167812244, i32 -467508140
  store i32 %49, i32* %15
  br label %59

; <label>:50:                                     ; preds = %16
  %51 = load volatile %"struct.std::_Rb_tree_iterator.24"*, %"struct.std::_Rb_tree_iterator.24"** %2
  ret %"struct.std::_Rb_tree_iterator.24"* %51

; <label>:52:                                     ; preds = %16
  %53 = alloca %"struct.std::_Rb_tree_iterator.24"*, align 8
  store %"struct.std::_Rb_tree_iterator.24"* %0, %"struct.std::_Rb_tree_iterator.24"** %53, align 8
  %54 = load %"struct.std::_Rb_tree_iterator.24"*, %"struct.std::_Rb_tree_iterator.24"** %53, align 8
  %55 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.24", %"struct.std::_Rb_tree_iterator.24"* %54, i32 0, i32 0
  %56 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %55, align 8
  %57 = call %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %56) #13
  %58 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.24", %"struct.std::_Rb_tree_iterator.24"* %54, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %57, %"struct.std::_Rb_tree_node_base"** %58, align 8
  store i32 -33584129, i32* %15
  br label %59

; <label>:59:                                     ; preds = %52, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %3 = alloca %"struct.std::_Identity", align 1
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %5 = call dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %4)
  %6 = call dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"* %3, i64* dereferenceable(8) %5)
  ret i64* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRS1_vEEOT_RKS1_(%"struct.std::pair.22"*, %"struct.std::_Rb_tree_node_base"** dereferenceable(8), %"struct.std::_Rb_tree_node_base"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::pair.22"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  %6 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::pair.22"* %0, %"struct.std::pair.22"** %4, align 8
  store %"struct.std::_Rb_tree_node_base"** %1, %"struct.std::_Rb_tree_node_base"*** %5, align 8
  store %"struct.std::_Rb_tree_node_base"** %2, %"struct.std::_Rb_tree_node_base"*** %6, align 8
  %7 = load %"struct.std::pair.22"*, %"struct.std::pair.22"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair.22", %"struct.std::pair.22"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %5, align 8
  %10 = call dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8) %9) #3
  %11 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %10, align 8
  store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %12 = getelementptr inbounds %"struct.std::pair.22", %"struct.std::pair.22"* %7, i32 0, i32 1
  %13 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %6, align 8
  %14 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %13, align 8
  store %"struct.std::_Rb_tree_node_base"* %14, %"struct.std::_Rb_tree_node_base"** %12, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNKSt9_IdentityIxEclERKx(%"struct.std::_Identity"*, i64* dereferenceable(8)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Identity"*, align 8
  %4 = alloca i64*, align 8
  store %"struct.std::_Identity"* %0, %"struct.std::_Identity"** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load %"struct.std::_Identity"*, %"struct.std::_Identity"** %3, align 8
  %6 = load i64*, i64** %4, align 8
  ret i64* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt13_Rb_tree_nodeIxE(%"struct.std::_Rb_tree_node"*) #0 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.386
  %6 = load i32, i32* @y.387
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1922801485, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %63
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1922801485, label %18
    i32 1645397654, label %26
    i32 1923356879, label %57
    i32 231324206, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %63

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1645397654, i32 231324206
  store i32 %25, i32* %14
  br label %63

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %27, align 8
  %28 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %27, align 8
  %29 = call i64* @_ZNKSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %28)
  store i64* %29, i64** %2
  %30 = load i32, i32* @x.386
  %31 = load i32, i32* @y.387
  %32 = add i32 %30, -2029250332
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -2029250332
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 1923356879, i32 231324206
  store i32 %56, i32* %14
  br label %63

; <label>:57:                                     ; preds = %15
  %58 = load volatile i64*, i64** %2
  ret i64* %58

; <label>:59:                                     ; preds = %15
  %60 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %60, align 8
  %61 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %60, align 8
  %62 = call i64* @_ZNKSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %61)
  store i32 1645397654, i32* %14
  br label %63

; <label>:63:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node"*) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.388
  %6 = load i32, i32* @y.389
  %7 = sub i32 %5, 766104616
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 766104616
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1502289132, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1502289132, label %19
    i32 -1876133623, label %39
    i32 532163188, label %70
    i32 606125347, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1876133623, i32 606125347
  store i32 %38, i32* %15
  br label %77

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %40, align 8
  %41 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %41, i32 0, i32 1
  %43 = call i64* @_ZNK9__gnu_cxx16__aligned_membufIxE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* %42) #3
  store i64* %43, i64** %2
  %44 = load i32, i32* @x.388
  %45 = load i32, i32* @y.389
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 532163188, i32 606125347
  store i32 %69, i32* %15
  br label %77

; <label>:70:                                     ; preds = %16
  %71 = load volatile i64*, i64** %2
  ret i64* %71

; <label>:72:                                     ; preds = %16
  %73 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"struct.std::_Rb_tree_node"* %0, %"struct.std::_Rb_tree_node"** %73, align 8
  %74 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %73, align 8
  %75 = getelementptr inbounds %"struct.std::_Rb_tree_node", %"struct.std::_Rb_tree_node"* %74, i32 0, i32 1
  %76 = call i64* @_ZNK9__gnu_cxx16__aligned_membufIxE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* %75) #3
  store i32 -1876133623, i32* %15
  br label %77

; <label>:77:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNK9__gnu_cxx16__aligned_membufIxE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.390
  %6 = load i32, i32* @y.391
  %7 = add i32 %5, 458614085
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 458614085
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1198070879, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1198070879, label %19
    i32 -214077109, label %27
    i32 -1684217866, label %59
    i32 210642308, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -214077109, i32 210642308
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %28, align 8
  %29 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %28, align 8
  %30 = call i8* @_ZNK9__gnu_cxx16__aligned_membufIxE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* %29) #3
  %31 = bitcast i8* %30 to i64*
  store i64* %31, i64** %2
  %32 = load i32, i32* @x.390
  %33 = load i32, i32* @y.391
  %34 = sub i32 %32, -1411994608
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -1411994608
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -1684217866, i32 210642308
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile i64*, i64** %2
  ret i64* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %62, align 8
  %63 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %62, align 8
  %64 = call i8* @_ZNK9__gnu_cxx16__aligned_membufIxE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* %63) #3
  %65 = bitcast i8* %64 to i64*
  store i32 -214077109, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNK9__gnu_cxx16__aligned_membufIxE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"*) #4 comdat align 2 {
  %2 = alloca i8*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.392
  %6 = load i32, i32* @y.393
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -59596129, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %64
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -59596129, label %18
    i32 375383334, label %26
    i32 1662741141, label %57
    i32 -1077634148, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %64

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 375383334, i32 -1077634148
  store i32 %25, i32* %14
  br label %64

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %27, align 8
  %28 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %27, align 8
  %29 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf", %"struct.__gnu_cxx::__aligned_membuf"* %28, i32 0, i32 0
  %30 = bitcast [8 x i8]* %29 to i8*
  store i8* %30, i8** %2
  %31 = load i32, i32* @x.392
  %32 = load i32, i32* @y.393
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 1662741141, i32 -1077634148
  store i32 %56, i32* %14
  br label %64

; <label>:57:                                     ; preds = %15
  %58 = load volatile i8*, i8** %2
  ret i8* %58

; <label>:59:                                     ; preds = %15
  %60 = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %0, %"struct.__gnu_cxx::__aligned_membuf"** %60, align 8
  %61 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %60, align 8
  %62 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf", %"struct.__gnu_cxx::__aligned_membuf"* %61, i32 0, i32 0
  %63 = bitcast [8 x i8]* %62 to i8*
  store i32 375383334, i32* %14
  br label %64

; <label>:64:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node"** @_ZSt7forwardIRPSt13_Rb_tree_nodeIxEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::_Rb_tree_node"** dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Rb_tree_node"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.394
  %6 = load i32, i32* @y.395
  %7 = add i32 %5, -1652943927
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1652943927
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1384658191, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1384658191, label %19
    i32 1572206180, label %27
    i32 -1802320656, label %56
    i32 -1192814220, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1572206180, i32 -1192814220
  store i32 %26, i32* %15
  br label %61

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_node"**, align 8
  store %"struct.std::_Rb_tree_node"** %0, %"struct.std::_Rb_tree_node"*** %28, align 8
  %29 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %28, align 8
  store %"struct.std::_Rb_tree_node"** %29, %"struct.std::_Rb_tree_node"*** %2
  %30 = load i32, i32* @x.394
  %31 = load i32, i32* @y.395
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -1802320656, i32 -1192814220
  store i32 %55, i32* %15
  br label %61

; <label>:56:                                     ; preds = %16
  %57 = load volatile %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %2
  ret %"struct.std::_Rb_tree_node"** %57

; <label>:58:                                     ; preds = %16
  %59 = alloca %"struct.std::_Rb_tree_node"**, align 8
  store %"struct.std::_Rb_tree_node"** %0, %"struct.std::_Rb_tree_node"*** %59, align 8
  %60 = load %"struct.std::_Rb_tree_node"**, %"struct.std::_Rb_tree_node"*** %59, align 8
  store i32 1572206180, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %27, %19, %18
  br label %16
}

; Function Attrs: nounwind readonly
declare %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #12

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.396
  %6 = load i32, i32* @y.397
  %7 = add i32 %5, 550529817
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 550529817
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 993928797, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %53
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 993928797, label %19
    i32 -2064559040, label %27
    i32 74059059, label %46
    i32 1199325693, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %53

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -2064559040, i32 1199325693
  store i32 %26, i32* %15
  br label %53

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %28, align 8
  %29 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %28, align 8
  %30 = bitcast %"struct.std::_Rb_tree_node_base"* %29 to %"struct.std::_Rb_tree_node"*
  %31 = call i64* @_ZNKSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %30)
  store i64* %31, i64** %2
  %32 = load i32, i32* @x.396
  %33 = load i32, i32* @y.397
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 74059059, i32 1199325693
  store i32 %45, i32* %15
  br label %53

; <label>:46:                                     ; preds = %16
  %47 = load volatile i64*, i64** %2
  ret i64* %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %49, align 8
  %50 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %49, align 8
  %51 = bitcast %"struct.std::_Rb_tree_node_base"* %50 to %"struct.std::_Rb_tree_node"*
  %52 = call i64* @_ZNKSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %51)
  store i32 -2064559040, i32* %15
  br label %53

; <label>:53:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node_base"** @_ZSt7forwardIRPSt18_Rb_tree_node_baseEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_node_base"** dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Rb_tree_node_base"**, align 8
  store %"struct.std::_Rb_tree_node_base"** %0, %"struct.std::_Rb_tree_node_base"*** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"**, %"struct.std::_Rb_tree_node_base"*** %2, align 8
  ret %"struct.std::_Rb_tree_node_base"** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_Alloc_nodeclIxEEPSt13_Rb_tree_nodeIxEOT_(%"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.400
  %7 = load i32, i32* @y.401
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -901476236, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %85
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -901476236, label %19
    i32 145243414, label %39
    i32 1959058215, label %74
    i32 -1768459789, label %76
  ]

; <label>:18:                                     ; preds = %16
  br label %85

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 145243414, i32 -1768459789
  store i32 %38, i32* %15
  br label %85

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, align 8
  %41 = alloca i64*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %40, align 8
  store i64* %1, i64** %41, align 8
  %42 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %40, align 8
  %43 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %42, i32 0, i32 0
  %44 = load %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %43, align 8
  %45 = load i64*, i64** %41, align 8
  %46 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %45) #3
  %47 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE14_M_create_nodeIJxEEEPSt13_Rb_tree_nodeIxEDpOT_(%"class.std::_Rb_tree.0"* %44, i64* dereferenceable(8) %46)
  store %"struct.std::_Rb_tree_node"* %47, %"struct.std::_Rb_tree_node"** %3
  %48 = load i32, i32* @x.400
  %49 = load i32, i32* @y.401
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 1959058215, i32 -1768459789
  store i32 %73, i32* %15
  br label %85

; <label>:74:                                     ; preds = %16
  %75 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %3
  ret %"struct.std::_Rb_tree_node"* %75

; <label>:76:                                     ; preds = %16
  %77 = alloca %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, align 8
  %78 = alloca i64*, align 8
  store %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %0, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %77, align 8
  store i64* %1, i64** %78, align 8
  %79 = load %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"*, %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"** %77, align 8
  %80 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Alloc_node"* %79, i32 0, i32 0
  %81 = load %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %80, align 8
  %82 = load i64*, i64** %78, align 8
  %83 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %82) #3
  %84 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE14_M_create_nodeIJxEEEPSt13_Rb_tree_nodeIxEDpOT_(%"class.std::_Rb_tree.0"* %81, i64* dereferenceable(8) %83)
  store i32 145243414, i32* %15
  br label %85

; <label>:85:                                     ; preds = %76, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE14_M_create_nodeIJxEEEPSt13_Rb_tree_nodeIxEDpOT_(%"class.std::_Rb_tree.0"*, i64* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.std::_Rb_tree.0"*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node"*, align 8
  store %"class.std::_Rb_tree.0"* %0, %"class.std::_Rb_tree.0"** %3, align 8
  store i64* %1, i64** %4, align 8
  %6 = load %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %3, align 8
  %7 = call %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_get_nodeEv(%"class.std::_Rb_tree.0"* %6)
  store %"struct.std::_Rb_tree_node"* %7, %"struct.std::_Rb_tree_node"** %5, align 8
  %8 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  %9 = load i64*, i64** %4, align 8
  %10 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %9) #3
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE17_M_construct_nodeIJxEEEvPSt13_Rb_tree_nodeIxEDpOT_(%"class.std::_Rb_tree.0"* %6, %"struct.std::_Rb_tree_node"* %8, i64* dereferenceable(8) %10)
  %11 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %5, align 8
  ret %"struct.std::_Rb_tree_node"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_get_nodeEv(%"class.std::_Rb_tree.0"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.404
  %6 = load i32, i32* @y.405
  %7 = sub i32 %5, -381561112
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -381561112
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1809648173, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1809648173, label %19
    i32 184308574, label %39
    i32 303452261, label %71
    i32 460565818, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 184308574, i32 460565818
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Rb_tree.0"*, align 8
  store %"class.std::_Rb_tree.0"* %0, %"class.std::_Rb_tree.0"** %40, align 8
  %41 = load %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %40, align 8
  %42 = call dereferenceable(1) %"class.std::allocator.1"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.0"* %41) #3
  %43 = call %"struct.std::_Rb_tree_node"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE8allocateERS2_m(%"class.std::allocator.1"* dereferenceable(1) %42, i64 1)
  store %"struct.std::_Rb_tree_node"* %43, %"struct.std::_Rb_tree_node"** %2
  %44 = load i32, i32* @x.404
  %45 = load i32, i32* @y.405
  %46 = add i32 %44, 1168185470
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 1168185470
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 303452261, i32 460565818
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %2
  ret %"struct.std::_Rb_tree_node"* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::_Rb_tree.0"*, align 8
  store %"class.std::_Rb_tree.0"* %0, %"class.std::_Rb_tree.0"** %74, align 8
  %75 = load %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %74, align 8
  %76 = call dereferenceable(1) %"class.std::allocator.1"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.0"* %75) #3
  %77 = call %"struct.std::_Rb_tree_node"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE8allocateERS2_m(%"class.std::allocator.1"* dereferenceable(1) %76, i64 1)
  store i32 184308574, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE17_M_construct_nodeIJxEEEvPSt13_Rb_tree_nodeIxEDpOT_(%"class.std::_Rb_tree.0"*, %"struct.std::_Rb_tree_node"*, i64* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.406
  %5 = load i32, i32* @y.407
  %6 = add i32 %4, -1722650453
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1722650453
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 true, true
  %17 = and i1 %14, true
  %18 = and i1 %12, %16
  %19 = and i1 %15, true
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 true, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %329

; <label>:30:                                     ; preds = %3, %329
  %31 = alloca %"class.std::_Rb_tree.0"*, align 8
  %32 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %33 = alloca i64*, align 8
  %34 = alloca i8*
  %35 = alloca i32
  store %"class.std::_Rb_tree.0"* %0, %"class.std::_Rb_tree.0"** %31, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %32, align 8
  store i64* %2, i64** %33, align 8
  %36 = load %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %31, align 8
  %37 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %32, align 8
  %38 = bitcast %"struct.std::_Rb_tree_node"* %37 to i8*
  %39 = bitcast i8* %38 to %"struct.std::_Rb_tree_node"*
  %40 = call dereferenceable(1) %"class.std::allocator.1"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.0"* %36) #3
  %41 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %32, align 8
  %42 = load i32, i32* @x.406
  %43 = load i32, i32* @y.407
  %44 = sub i32 %42, -357942221
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -357942221
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  br i1 %66, label %68, label %329

; <label>:68:                                     ; preds = %30
  %69 = invoke i64* @_ZNSt13_Rb_tree_nodeIxE9_M_valptrEv(%"struct.std::_Rb_tree_node"* %41)
          to label %70 unwind label %170

; <label>:70:                                     ; preds = %68
  %71 = load i32, i32* @x.406
  %72 = load i32, i32* @y.407
  %73 = sub i32 %71, -2127327441
  %74 = sub i32 %73, 1
  %75 = add i32 %74, -2127327441
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 false, true
  %84 = and i1 %81, false
  %85 = and i1 %79, %83
  %86 = and i1 %82, false
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 false, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  br i1 %95, label %97, label %341

; <label>:97:                                     ; preds = %70, %341
  %98 = load i64*, i64** %33, align 8
  %99 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %98) #3
  %100 = load i32, i32* @x.406
  %101 = load i32, i32* @y.407
  %102 = add i32 %100, -1512603422
  %103 = sub i32 %102, 1
  %104 = sub i32 %103, -1512603422
  %105 = sub i32 %100, 1
  %106 = mul i32 %100, %104
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %101, 10
  %110 = and i1 %108, %109
  %111 = xor i1 %108, %109
  %112 = or i1 %110, %111
  %113 = or i1 %108, %109
  br i1 %112, label %114, label %341

; <label>:114:                                    ; preds = %97
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE9constructIxJxEEEvRS2_PT_DpOT0_(%"class.std::allocator.1"* dereferenceable(1) %40, i64* %69, i64* dereferenceable(8) %99)
          to label %115 unwind label %170

; <label>:115:                                    ; preds = %114
  %116 = load i32, i32* @x.406
  %117 = load i32, i32* @y.407
  %118 = sub i32 %116, 1464917932
  %119 = sub i32 %118, 1
  %120 = add i32 %119, 1464917932
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = xor i1 %124, true
  %127 = xor i1 %125, true
  %128 = xor i1 true, true
  %129 = and i1 %126, true
  %130 = and i1 %124, %128
  %131 = and i1 %127, true
  %132 = and i1 %125, %128
  %133 = or i1 %129, %130
  %134 = or i1 %131, %132
  %135 = xor i1 %133, %134
  %136 = or i1 %126, %127
  %137 = xor i1 %136, true
  %138 = or i1 true, %128
  %139 = and i1 %137, %138
  %140 = or i1 %135, %139
  %141 = or i1 %124, %125
  br i1 %140, label %142, label %344

; <label>:142:                                    ; preds = %115, %344
  %143 = load i32, i32* @x.406
  %144 = load i32, i32* @y.407
  %145 = add i32 %143, -1063709099
  %146 = sub i32 %145, 1
  %147 = sub i32 %146, -1063709099
  %148 = sub i32 %143, 1
  %149 = mul i32 %143, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %144, 10
  %153 = xor i1 %151, true
  %154 = xor i1 %152, true
  %155 = xor i1 false, true
  %156 = and i1 %153, false
  %157 = and i1 %151, %155
  %158 = and i1 %154, false
  %159 = and i1 %152, %155
  %160 = or i1 %156, %157
  %161 = or i1 %158, %159
  %162 = xor i1 %160, %161
  %163 = or i1 %153, %154
  %164 = xor i1 %163, true
  %165 = or i1 false, %155
  %166 = and i1 %164, %165
  %167 = or i1 %162, %166
  %168 = or i1 %151, %152
  br i1 %167, label %169, label %344

; <label>:169:                                    ; preds = %142
  br label %319

; <label>:170:                                    ; preds = %114, %68
  %171 = load i32, i32* @x.406
  %172 = load i32, i32* @y.407
  %173 = sub i32 0, 1
  %174 = add i32 %171, %173
  %175 = sub i32 %171, 1
  %176 = mul i32 %171, %174
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %172, 10
  %180 = xor i1 %178, true
  %181 = xor i1 %179, true
  %182 = xor i1 false, true
  %183 = and i1 %180, false
  %184 = and i1 %178, %182
  %185 = and i1 %181, false
  %186 = and i1 %179, %182
  %187 = or i1 %183, %184
  %188 = or i1 %185, %186
  %189 = xor i1 %187, %188
  %190 = or i1 %180, %181
  %191 = xor i1 %190, true
  %192 = or i1 false, %182
  %193 = and i1 %191, %192
  %194 = or i1 %189, %193
  %195 = or i1 %178, %179
  br i1 %194, label %196, label %345

; <label>:196:                                    ; preds = %170, %345
  %197 = landingpad { i8*, i32 }
          catch i8* null
  %198 = extractvalue { i8*, i32 } %197, 0
  store i8* %198, i8** %34, align 8
  %199 = extractvalue { i8*, i32 } %197, 1
  store i32 %199, i32* %35, align 4
  %200 = load i32, i32* @x.406
  %201 = load i32, i32* @y.407
  %202 = sub i32 0, 1
  %203 = add i32 %200, %202
  %204 = sub i32 %200, 1
  %205 = mul i32 %200, %203
  %206 = urem i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = icmp slt i32 %201, 10
  %209 = xor i1 %207, true
  %210 = xor i1 %208, true
  %211 = xor i1 false, true
  %212 = and i1 %209, false
  %213 = and i1 %207, %211
  %214 = and i1 %210, false
  %215 = and i1 %208, %211
  %216 = or i1 %212, %213
  %217 = or i1 %214, %215
  %218 = xor i1 %216, %217
  %219 = or i1 %209, %210
  %220 = xor i1 %219, true
  %221 = or i1 false, %211
  %222 = and i1 %220, %221
  %223 = or i1 %218, %222
  %224 = or i1 %207, %208
  br i1 %223, label %225, label %345

; <label>:225:                                    ; preds = %196
  br label %226

; <label>:226:                                    ; preds = %225
  %227 = load i8*, i8** %34, align 8
  %228 = call i8* @__cxa_begin_catch(i8* %227) #3
  %229 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %32, align 8
  %230 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %32, align 8
  call void @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE11_M_put_nodeEPSt13_Rb_tree_nodeIxE(%"class.std::_Rb_tree.0"* %36, %"struct.std::_Rb_tree_node"* %230) #3
  invoke void @__cxa_rethrow() #14
          to label %328 unwind label %231

; <label>:231:                                    ; preds = %226
  %232 = load i32, i32* @x.406
  %233 = load i32, i32* @y.407
  %234 = sub i32 %232, -1453338916
  %235 = sub i32 %234, 1
  %236 = add i32 %235, -1453338916
  %237 = sub i32 %232, 1
  %238 = mul i32 %232, %236
  %239 = urem i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %233, 10
  %242 = xor i1 %240, true
  %243 = xor i1 %241, true
  %244 = xor i1 true, true
  %245 = and i1 %242, true
  %246 = and i1 %240, %244
  %247 = and i1 %243, true
  %248 = and i1 %241, %244
  %249 = or i1 %245, %246
  %250 = or i1 %247, %248
  %251 = xor i1 %249, %250
  %252 = or i1 %242, %243
  %253 = xor i1 %252, true
  %254 = or i1 true, %244
  %255 = and i1 %253, %254
  %256 = or i1 %251, %255
  %257 = or i1 %240, %241
  br i1 %256, label %258, label %349

; <label>:258:                                    ; preds = %231, %349
  %259 = landingpad { i8*, i32 }
          cleanup
  %260 = extractvalue { i8*, i32 } %259, 0
  store i8* %260, i8** %34, align 8
  %261 = extractvalue { i8*, i32 } %259, 1
  store i32 %261, i32* %35, align 4
  %262 = load i32, i32* @x.406
  %263 = load i32, i32* @y.407
  %264 = sub i32 0, 1
  %265 = add i32 %262, %264
  %266 = sub i32 %262, 1
  %267 = mul i32 %262, %265
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %263, 10
  %271 = and i1 %269, %270
  %272 = xor i1 %269, %270
  %273 = or i1 %271, %272
  %274 = or i1 %269, %270
  br i1 %273, label %275, label %349

; <label>:275:                                    ; preds = %258
  invoke void @__cxa_end_catch()
          to label %276 unwind label %325

; <label>:276:                                    ; preds = %275
  %277 = load i32, i32* @x.406
  %278 = load i32, i32* @y.407
  %279 = add i32 %277, 329154146
  %280 = sub i32 %279, 1
  %281 = sub i32 %280, 329154146
  %282 = sub i32 %277, 1
  %283 = mul i32 %277, %281
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %278, 10
  %287 = and i1 %285, %286
  %288 = xor i1 %285, %286
  %289 = or i1 %287, %288
  %290 = or i1 %285, %286
  br i1 %289, label %291, label %353

; <label>:291:                                    ; preds = %276, %353
  %292 = load i32, i32* @x.406
  %293 = load i32, i32* @y.407
  %294 = sub i32 %292, 199596922
  %295 = sub i32 %294, 1
  %296 = add i32 %295, 199596922
  %297 = sub i32 %292, 1
  %298 = mul i32 %292, %296
  %299 = urem i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %293, 10
  %302 = xor i1 %300, true
  %303 = xor i1 %301, true
  %304 = xor i1 true, true
  %305 = and i1 %302, true
  %306 = and i1 %300, %304
  %307 = and i1 %303, true
  %308 = and i1 %301, %304
  %309 = or i1 %305, %306
  %310 = or i1 %307, %308
  %311 = xor i1 %309, %310
  %312 = or i1 %302, %303
  %313 = xor i1 %312, true
  %314 = or i1 true, %304
  %315 = and i1 %313, %314
  %316 = or i1 %311, %315
  %317 = or i1 %300, %301
  br i1 %316, label %318, label %353

; <label>:318:                                    ; preds = %291
  br label %320

; <label>:319:                                    ; preds = %169
  ret void

; <label>:320:                                    ; preds = %318
  %321 = load i8*, i8** %34, align 8
  %322 = load i32, i32* %35, align 4
  %323 = insertvalue { i8*, i32 } undef, i8* %321, 0
  %324 = insertvalue { i8*, i32 } %323, i32 %322, 1
  resume { i8*, i32 } %324

; <label>:325:                                    ; preds = %275
  %326 = landingpad { i8*, i32 }
          catch i8* null
  %327 = extractvalue { i8*, i32 } %326, 0
  call void @__clang_call_terminate(i8* %327) #11
  unreachable

; <label>:328:                                    ; preds = %226
  unreachable

; <label>:329:                                    ; preds = %30, %3
  %330 = alloca %"class.std::_Rb_tree.0"*, align 8
  %331 = alloca %"struct.std::_Rb_tree_node"*, align 8
  %332 = alloca i64*, align 8
  %333 = alloca i8*
  %334 = alloca i32
  store %"class.std::_Rb_tree.0"* %0, %"class.std::_Rb_tree.0"** %330, align 8
  store %"struct.std::_Rb_tree_node"* %1, %"struct.std::_Rb_tree_node"** %331, align 8
  store i64* %2, i64** %332, align 8
  %335 = load %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %330, align 8
  %336 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %331, align 8
  %337 = bitcast %"struct.std::_Rb_tree_node"* %336 to i8*
  %338 = bitcast i8* %337 to %"struct.std::_Rb_tree_node"*
  %339 = call dereferenceable(1) %"class.std::allocator.1"* @_ZNSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.0"* %335) #3
  %340 = load %"struct.std::_Rb_tree_node"*, %"struct.std::_Rb_tree_node"** %331, align 8
  br label %30

; <label>:341:                                    ; preds = %97, %70
  %342 = load i64*, i64** %33, align 8
  %343 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %342) #3
  br label %97

; <label>:344:                                    ; preds = %142, %115
  br label %142

; <label>:345:                                    ; preds = %196, %170
  %346 = landingpad { i8*, i32 }
          catch i8* null
  %347 = extractvalue { i8*, i32 } %346, 0
  store i8* %347, i8** %34, align 8
  %348 = extractvalue { i8*, i32 } %346, 1
  store i32 %348, i32* %35, align 4
  br label %196

; <label>:349:                                    ; preds = %258, %231
  %350 = landingpad { i8*, i32 }
          cleanup
  %351 = extractvalue { i8*, i32 } %350, 0
  store i8* %351, i8** %34, align 8
  %352 = extractvalue { i8*, i32 } %350, 1
  store i32 %352, i32* %35, align 4
  br label %258

; <label>:353:                                    ; preds = %291, %276
  br label %291
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE8allocateERS2_m(%"class.std::allocator.1"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.1"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.1"* %0, %"class.std::allocator.1"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.1"*, %"class.std::allocator.1"** %3, align 8
  %6 = bitcast %"class.std::allocator.1"* %5 to %"class.__gnu_cxx::new_allocator.2"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.std::_Rb_tree_node"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.2"* %6, i64 %7, i8* null)
  ret %"struct.std::_Rb_tree_node"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.2"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.2"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.2"* %0, %"class.__gnu_cxx::new_allocator.2"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.2"*, %"class.__gnu_cxx::new_allocator.2"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.2"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 1838995822, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1838995822, label %16
    i32 1039985764, label %21
    i32 -1612486031, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 1039985764, i32 -1612486031
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #14
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 40
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"struct.std::_Rb_tree_node"*
  ret %"struct.std::_Rb_tree_node"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.2"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.2"*, align 8
  store %"class.__gnu_cxx::new_allocator.2"* %0, %"class.__gnu_cxx::new_allocator.2"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.2"*, %"class.__gnu_cxx::new_allocator.2"** %2, align 8
  ret i64 461168601842738790
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeIxEEE9constructIxJxEEEvRS2_PT_DpOT0_(%"class.std::allocator.1"* dereferenceable(1), i64*, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.1"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"class.std::allocator.1"* %0, %"class.std::allocator.1"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"class.std::allocator.1"*, %"class.std::allocator.1"** %4, align 8
  %8 = bitcast %"class.std::allocator.1"* %7 to %"class.__gnu_cxx::new_allocator.2"*
  %9 = load i64*, i64** %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE9constructIxJxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.2"* %8, i64* %9, i64* dereferenceable(8) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIxEE9constructIxJxEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.2"*, i64*, i64* dereferenceable(8)) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.2"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.2"* %0, %"class.__gnu_cxx::new_allocator.2"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.2"*, %"class.__gnu_cxx::new_allocator.2"** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = bitcast i64* %8 to i8*
  %10 = bitcast i8* %9 to i64*
  %11 = load i64*, i64** %6, align 8
  %12 = call dereferenceable(8) i64* @_ZSt7forwardIxEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %11) #3
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator.24"* @_ZSt7forwardISt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::_Rb_tree_iterator.24"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Rb_tree_iterator.24"*, align 8
  store %"struct.std::_Rb_tree_iterator.24"* %0, %"struct.std::_Rb_tree_iterator.24"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_iterator.24"*, %"struct.std::_Rb_tree_iterator.24"** %2, align 8
  ret %"struct.std::_Rb_tree_iterator.24"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) i8* @_ZSt7forwardIbEOT_RNSt16remove_referenceIS0_E4typeE(i8* dereferenceable(1)) #4 comdat {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_iterator.24"* @_ZSt7forwardIRSt17_Rb_tree_iteratorIxEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.std::_Rb_tree_iterator.24"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Rb_tree_iterator.24"*, align 8
  store %"struct.std::_Rb_tree_iterator.24"* %0, %"struct.std::_Rb_tree_iterator.24"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_iterator.24"*, %"struct.std::_Rb_tree_iterator.24"** %2, align 8
  ret %"struct.std::_Rb_tree_iterator.24"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt23_Rb_tree_const_iteratorIxEC2ERKSt17_Rb_tree_iteratorIxE(%"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_iterator.24"* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_iterator.24"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  store %"struct.std::_Rb_tree_iterator.24"* %1, %"struct.std::_Rb_tree_iterator.24"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_iterator.24"*, %"struct.std::_Rb_tree_iterator.24"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.24", %"struct.std::_Rb_tree_iterator.24"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  store %"struct.std::_Rb_tree_node_base"* %9, %"struct.std::_Rb_tree_node_base"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) i8* @_ZSt7forwardIRbEOT_RNSt16remove_referenceIS1_E4typeE(i8* dereferenceable(1)) #4 comdat {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE5beginEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  %4 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %6, i32 0, i32 2
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt6vectorIxSaIxEEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %2, %"struct.std::_Rb_tree_node_base"* %8) #3
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %2, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  ret %"struct.std::_Rb_tree_node_base"* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE4sizeEv(%"class.std::_Rb_tree.0"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.430
  %6 = load i32, i32* @y.431
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1548825750, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %67
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1548825750, label %18
    i32 854953055, label %26
    i32 1058637664, label %59
    i32 1458763635, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %67

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 854953055, i32 1458763635
  store i32 %25, i32* %14
  br label %67

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::_Rb_tree.0"*, align 8
  store %"class.std::_Rb_tree.0"* %0, %"class.std::_Rb_tree.0"** %27, align 8
  %28 = load %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %27, align 8
  %29 = getelementptr inbounds %"class.std::_Rb_tree.0", %"class.std::_Rb_tree.0"* %28, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %29, i32 0, i32 2
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %2
  %32 = load i32, i32* @x.430
  %33 = load i32, i32* @y.431
  %34 = add i32 %32, -604314752
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -604314752
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 1058637664, i32 1458763635
  store i32 %58, i32* %14
  br label %67

; <label>:59:                                     ; preds = %15
  %60 = load volatile i64, i64* %2
  ret i64 %60

; <label>:61:                                     ; preds = %15
  %62 = alloca %"class.std::_Rb_tree.0"*, align 8
  store %"class.std::_Rb_tree.0"* %0, %"class.std::_Rb_tree.0"** %62, align 8
  %63 = load %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %62, align 8
  %64 = getelementptr inbounds %"class.std::_Rb_tree.0", %"class.std::_Rb_tree.0"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %64, i32 0, i32 2
  %66 = load i64, i64* %65, align 8
  store i32 854953055, i32* %14
  br label %67

; <label>:67:                                     ; preds = %61, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt8multisetISt6vectorIxSaIxEESt4lessIS4_ESaIS4_EEEC2Ev(%"class.__gnu_cxx::new_allocator.10"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt8multisetISt6vectorIxSaIxEESt4lessIS4_ESaIS4_EEED2Ev(%"class.__gnu_cxx::new_allocator.10"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EESaIS7_EEC2EmRKS8_(%"struct.std::_Vector_base.8"*, i64, %"class.std::allocator.9"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.436
  %5 = load i32, i32* @y.437
  %6 = sub i32 %4, -1663126467
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1663126467
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 false, true
  %17 = and i1 %14, false
  %18 = and i1 %12, %16
  %19 = and i1 %15, false
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 false, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %76

; <label>:30:                                     ; preds = %3, %76
  %31 = alloca %"struct.std::_Vector_base.8"*, align 8
  %32 = alloca i64, align 8
  %33 = alloca %"class.std::allocator.9"*, align 8
  %34 = alloca i8*
  %35 = alloca i32
  store %"struct.std::_Vector_base.8"* %0, %"struct.std::_Vector_base.8"** %31, align 8
  store i64 %1, i64* %32, align 8
  store %"class.std::allocator.9"* %2, %"class.std::allocator.9"** %33, align 8
  %36 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %31, align 8
  %37 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %36, i32 0, i32 0
  %38 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %33, align 8
  call void @_ZNSt12_Vector_baseISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EESaIS7_EE12_Vector_implC2ERKS8_(%"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %37, %"class.std::allocator.9"* dereferenceable(1) %38) #3
  %39 = load i64, i64* %32, align 8
  %40 = load i32, i32* @x.436
  %41 = load i32, i32* @y.437
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  br i1 %63, label %65, label %76

; <label>:65:                                     ; preds = %30
  invoke void @_ZNSt12_Vector_baseISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EESaIS7_EE17_M_create_storageEm(%"struct.std::_Vector_base.8"* %36, i64 %39)
          to label %66 unwind label %67

; <label>:66:                                     ; preds = %65
  ret void

; <label>:67:                                     ; preds = %65
  %68 = landingpad { i8*, i32 }
          cleanup
  %69 = extractvalue { i8*, i32 } %68, 0
  store i8* %69, i8** %34, align 8
  %70 = extractvalue { i8*, i32 } %68, 1
  store i32 %70, i32* %35, align 4
  call void @_ZNSt12_Vector_baseISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EESaIS7_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %37) #3
  br label %71

; <label>:71:                                     ; preds = %67
  %72 = load i8*, i8** %34, align 8
  %73 = load i32, i32* %35, align 4
  %74 = insertvalue { i8*, i32 } undef, i8* %72, 0
  %75 = insertvalue { i8*, i32 } %74, i32 %73, 1
  resume { i8*, i32 } %75

; <label>:76:                                     ; preds = %30, %3
  %77 = alloca %"struct.std::_Vector_base.8"*, align 8
  %78 = alloca i64, align 8
  %79 = alloca %"class.std::allocator.9"*, align 8
  %80 = alloca i8*
  %81 = alloca i32
  store %"struct.std::_Vector_base.8"* %0, %"struct.std::_Vector_base.8"** %77, align 8
  store i64 %1, i64* %78, align 8
  store %"class.std::allocator.9"* %2, %"class.std::allocator.9"** %79, align 8
  %82 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %77, align 8
  %83 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %82, i32 0, i32 0
  %84 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %79, align 8
  call void @_ZNSt12_Vector_baseISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EESaIS7_EE12_Vector_implC2ERKS8_(%"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %83, %"class.std::allocator.9"* dereferenceable(1) %84) #3
  %85 = load i64, i64* %78, align 8
  br label %30
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt8multisetIS_IxSaIxEESt4lessIS2_ESaIS2_EESaIS6_EE21_M_default_initializeEm(%"class.std::vector.7"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.438
  %6 = load i32, i32* @y.439
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1658422882, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %95
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1658422882, label %18
    i32 -1471663752, label %38
    i32 -1578271001, label %79
    i32 2125677826, label %80
  ]

; <label>:17:                                     ; preds = %15
  br label %95

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1471663752, i32 2125677826
  store i32 %37, i32* %14
  br label %95

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::vector.7"*, align 8
  %40 = alloca i64, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %39, align 8
  store i64 %1, i64* %40, align 8
  %41 = load %"class.std::vector.7"*, %"class.std::vector.7"** %39, align 8
  %42 = bitcast %"class.std::vector.7"* %41 to %"struct.std::_Vector_base.8"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %43, i32 0, i32 0
  %45 = load %"class.std::multiset"*, %"class.std::multiset"** %44, align 8
  %46 = load i64, i64* %40, align 8
  %47 = bitcast %"class.std::vector.7"* %41 to %"struct.std::_Vector_base.8"*
  %48 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt12_Vector_baseISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EESaIS7_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"* %47) #3
  %49 = call %"class.std::multiset"* @_ZSt27__uninitialized_default_n_aIPSt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EEmS7_ET_S9_T0_RSaIT1_E(%"class.std::multiset"* %45, i64 %46, %"class.std::allocator.9"* dereferenceable(1) %48)
  %50 = bitcast %"class.std::vector.7"* %41 to %"struct.std::_Vector_base.8"*
  %51 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %50, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %51, i32 0, i32 1
  store %"class.std::multiset"* %49, %"class.std::multiset"** %52, align 8
  %53 = load i32, i32* @x.438
  %54 = load i32, i32* @y.439
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 -1578271001, i32 2125677826
  store i32 %78, i32* %14
  br label %95

; <label>:79:                                     ; preds = %15
  ret void

; <label>:80:                                     ; preds = %15
  %81 = alloca %"class.std::vector.7"*, align 8
  %82 = alloca i64, align 8
  store %"class.std::vector.7"* %0, %"class.std::vector.7"** %81, align 8
  store i64 %1, i64* %82, align 8
  %83 = load %"class.std::vector.7"*, %"class.std::vector.7"** %81, align 8
  %84 = bitcast %"class.std::vector.7"* %83 to %"struct.std::_Vector_base.8"*
  %85 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %84, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %85, i32 0, i32 0
  %87 = load %"class.std::multiset"*, %"class.std::multiset"** %86, align 8
  %88 = load i64, i64* %82, align 8
  %89 = bitcast %"class.std::vector.7"* %83 to %"struct.std::_Vector_base.8"*
  %90 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt12_Vector_baseISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EESaIS7_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"* %89) #3
  %91 = call %"class.std::multiset"* @_ZSt27__uninitialized_default_n_aIPSt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EEmS7_ET_S9_T0_RSaIT1_E(%"class.std::multiset"* %87, i64 %88, %"class.std::allocator.9"* dereferenceable(1) %90)
  %92 = bitcast %"class.std::vector.7"* %83 to %"struct.std::_Vector_base.8"*
  %93 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %92, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %93, i32 0, i32 1
  store %"class.std::multiset"* %91, %"class.std::multiset"** %94, align 8
  store i32 -1471663752, i32* %14
  br label %95

; <label>:95:                                     ; preds = %80, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EESaIS7_EED2Ev(%"struct.std::_Vector_base.8"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.440
  %3 = load i32, i32* @y.441
  %4 = sub i32 %2, -410711741
  %5 = sub i32 %4, 1
  %6 = add i32 %5, -410711741
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %85

; <label>:28:                                     ; preds = %1, %85
  %29 = alloca %"struct.std::_Vector_base.8"*, align 8
  %30 = alloca i8*
  %31 = alloca i32
  store %"struct.std::_Vector_base.8"* %0, %"struct.std::_Vector_base.8"** %29, align 8
  %32 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %29, align 8
  %33 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load %"class.std::multiset"*, %"class.std::multiset"** %34, align 8
  %36 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %32, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %36, i32 0, i32 2
  %38 = load %"class.std::multiset"*, %"class.std::multiset"** %37, align 8
  %39 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %32, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %39, i32 0, i32 0
  %41 = load %"class.std::multiset"*, %"class.std::multiset"** %40, align 8
  %42 = ptrtoint %"class.std::multiset"* %38 to i64
  %43 = ptrtoint %"class.std::multiset"* %41 to i64
  %44 = sub i64 %42, -9001092063594468059
  %45 = sub i64 %44, %43
  %46 = add i64 %45, -9001092063594468059
  %47 = sub i64 %42, %43
  %48 = sdiv exact i64 %46, 48
  %49 = load i32, i32* @x.440
  %50 = load i32, i32* @y.441
  %51 = sub i32 %49, 518408381
  %52 = sub i32 %51, 1
  %53 = add i32 %52, 518408381
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  br i1 %73, label %75, label %85

; <label>:75:                                     ; preds = %28
  invoke void @_ZNSt12_Vector_baseISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EESaIS7_EE13_M_deallocateEPS7_m(%"struct.std::_Vector_base.8"* %32, %"class.std::multiset"* %35, i64 %48)
          to label %76 unwind label %78

; <label>:76:                                     ; preds = %75
  %77 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EESaIS7_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %77) #3
  ret void

; <label>:78:                                     ; preds = %75
  %79 = landingpad { i8*, i32 }
          catch i8* null
  %80 = extractvalue { i8*, i32 } %79, 0
  store i8* %80, i8** %30, align 8
  %81 = extractvalue { i8*, i32 } %79, 1
  store i32 %81, i32* %31, align 4
  %82 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EESaIS7_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %82) #3
  br label %83

; <label>:83:                                     ; preds = %78
  %84 = load i8*, i8** %30, align 8
  call void @__clang_call_terminate(i8* %84) #11
  unreachable

; <label>:85:                                     ; preds = %28, %1
  %86 = alloca %"struct.std::_Vector_base.8"*, align 8
  %87 = alloca i8*
  %88 = alloca i32
  store %"struct.std::_Vector_base.8"* %0, %"struct.std::_Vector_base.8"** %86, align 8
  %89 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %86, align 8
  %90 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %89, i32 0, i32 0
  %91 = getelementptr inbounds %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %90, i32 0, i32 0
  %92 = load %"class.std::multiset"*, %"class.std::multiset"** %91, align 8
  %93 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %89, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %93, i32 0, i32 2
  %95 = load %"class.std::multiset"*, %"class.std::multiset"** %94, align 8
  %96 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %89, i32 0, i32 0
  %97 = getelementptr inbounds %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %96, i32 0, i32 0
  %98 = load %"class.std::multiset"*, %"class.std::multiset"** %97, align 8
  %99 = ptrtoint %"class.std::multiset"* %95 to i64
  %100 = ptrtoint %"class.std::multiset"* %98 to i64
  %101 = sub i64 0, %100
  %102 = add i64 %99, %101
  %103 = sub i64 %99, %100
  %104 = mul i64 %102, %100
  %105 = shl i64 %99, %100
  %106 = add i64 0, 6215666600974894399
  %107 = sub i64 %106, %99
  %108 = sub i64 %107, 6215666600974894399
  %109 = sub i64 0, %99
  %110 = sub i64 0, %100
  %111 = sub i64 %108, %110
  %112 = add i64 %108, %100
  %113 = sub i64 0, -2279910648146850747
  %114 = sub i64 %113, %99
  %115 = add i64 %114, -2279910648146850747
  %116 = sub i64 0, %99
  %117 = add i64 %115, 2097615521529657130
  %118 = add i64 %117, %100
  %119 = sub i64 %118, 2097615521529657130
  %120 = add i64 %115, %100
  %121 = shl i64 %99, %100
  %122 = add i64 %99, -7358834156743912502
  %123 = sub i64 %122, %100
  %124 = sub i64 %123, -7358834156743912502
  %125 = sub i64 %99, %100
  %126 = mul i64 %124, %100
  %127 = add i64 %99, -8843284803852146422
  %128 = sub i64 %127, %100
  %129 = sub i64 %128, -8843284803852146422
  %130 = sub i64 %99, %100
  %131 = shl i64 %129, 48
  %132 = sdiv exact i64 %129, 48
  br label %28
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EESaIS7_EE12_Vector_implC2ERKS8_(%"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"*, %"class.std::allocator.9"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.9"*, align 8
  store %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.9"* %1, %"class.std::allocator.9"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %5 to %"class.std::allocator.9"*
  %7 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %4, align 8
  call void @_ZNSaISt8multisetISt6vectorIxSaIxEESt4lessIS2_ESaIS2_EEEC2ERKS7_(%"class.std::allocator.9"* %6, %"class.std::allocator.9"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %5, i32 0, i32 0
  store %"class.std::multiset"* null, %"class.std::multiset"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %5, i32 0, i32 1
  store %"class.std::multiset"* null, %"class.std::multiset"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %5, i32 0, i32 2
  store %"class.std::multiset"* null, %"class.std::multiset"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EESaIS7_EE17_M_create_storageEm(%"struct.std::_Vector_base.8"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.8"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.8"* %0, %"struct.std::_Vector_base.8"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"class.std::multiset"* @_ZNSt12_Vector_baseISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EESaIS7_EE11_M_allocateEm(%"struct.std::_Vector_base.8"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %8, i32 0, i32 0
  store %"class.std::multiset"* %7, %"class.std::multiset"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"class.std::multiset"*, %"class.std::multiset"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %13, i32 0, i32 1
  store %"class.std::multiset"* %12, %"class.std::multiset"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"class.std::multiset"*, %"class.std::multiset"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"class.std::multiset", %"class.std::multiset"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl", %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %20, i32 0, i32 2
  store %"class.std::multiset"* %19, %"class.std::multiset"** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EESaIS7_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.446
  %5 = load i32, i32* @y.447
  %6 = add i32 %4, 1821923302
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1821923302
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 167154754, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %73
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 167154754, label %18
    i32 -810641539, label %38
    i32 127054149, label %68
    i32 1152651490, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %73

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -810641539, i32 1152651490
  store i32 %37, i32* %14
  br label %73

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"** %39, align 8
  %40 = load %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"** %39, align 8
  %41 = bitcast %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %40 to %"class.std::allocator.9"*
  call void @_ZNSaISt8multisetISt6vectorIxSaIxEESt4lessIS2_ESaIS2_EEED2Ev(%"class.std::allocator.9"* %41) #3
  %42 = load i32, i32* @x.446
  %43 = load i32, i32* @y.447
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 127054149, i32 1152651490
  store i32 %67, i32* %14
  br label %73

; <label>:68:                                     ; preds = %15
  ret void

; <label>:69:                                     ; preds = %15
  %70 = alloca %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"** %70, align 8
  %71 = load %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"** %70, align 8
  %72 = bitcast %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %71 to %"class.std::allocator.9"*
  call void @_ZNSaISt8multisetISt6vectorIxSaIxEESt4lessIS2_ESaIS2_EEED2Ev(%"class.std::allocator.9"* %72) #3
  store i32 -810641539, i32* %14
  br label %73

; <label>:73:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt8multisetISt6vectorIxSaIxEESt4lessIS2_ESaIS2_EEEC2ERKS7_(%"class.std::allocator.9"*, %"class.std::allocator.9"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.9"*, align 8
  %4 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %3, align 8
  store %"class.std::allocator.9"* %1, %"class.std::allocator.9"** %4, align 8
  %5 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %3, align 8
  %6 = bitcast %"class.std::allocator.9"* %5 to %"class.__gnu_cxx::new_allocator.10"*
  %7 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %4, align 8
  %8 = bitcast %"class.std::allocator.9"* %7 to %"class.__gnu_cxx::new_allocator.10"*
  call void @_ZN9__gnu_cxx13new_allocatorISt8multisetISt6vectorIxSaIxEESt4lessIS4_ESaIS4_EEEC2ERKS9_(%"class.__gnu_cxx::new_allocator.10"* %6, %"class.__gnu_cxx::new_allocator.10"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt8multisetISt6vectorIxSaIxEESt4lessIS4_ESaIS4_EEEC2ERKS9_(%"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %1, %"class.__gnu_cxx::new_allocator.10"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::multiset"* @_ZNSt12_Vector_baseISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EESaIS7_EE11_M_allocateEm(%"struct.std::_Vector_base.8"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::multiset"*
  %4 = alloca i64
  %5 = alloca %"struct.std::_Vector_base.8"*
  %6 = alloca %"struct.std::_Vector_base.8"*, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Vector_base.8"* %0, %"struct.std::_Vector_base.8"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %6, align 8
  store %"struct.std::_Vector_base.8"* %8, %"struct.std::_Vector_base.8"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = alloca i32
  store i32 1183946374, i32* %10
  %11 = alloca %"class.std::multiset"*
  br label %12

; <label>:12:                                     ; preds = %2, %121
  %13 = load i32, i32* %10
  switch i32 %13, label %14 [
    i32 1183946374, label %15
    i32 1887276675, label %19
    i32 697083618, label %34
    i32 1153240347, label %66
    i32 -1164591635, label %68
    i32 174147414, label %84
    i32 242419355, label %111
    i32 -119840031, label %112
    i32 -1807501288, label %114
    i32 -70200079, label %120
  ]

; <label>:14:                                     ; preds = %12
  br label %121

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp ne i64 %16, 0
  %18 = select i1 %17, i32 1887276675, i32 -1164591635
  store i32 %18, i32* %10
  br label %121

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.452
  %21 = load i32, i32* @y.453
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  %33 = select i1 %31, i32 697083618, i32 -1807501288
  store i32 %33, i32* %10
  br label %121

; <label>:34:                                     ; preds = %12
  %35 = load volatile %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %5
  %36 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %35, i32 0, i32 0
  %37 = bitcast %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %36 to %"class.std::allocator.9"*
  %38 = load i64, i64* %7, align 8
  %39 = call %"class.std::multiset"* @_ZNSt16allocator_traitsISaISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EEEE8allocateERS8_m(%"class.std::allocator.9"* dereferenceable(1) %37, i64 %38)
  store %"class.std::multiset"* %39, %"class.std::multiset"** %3
  %40 = load i32, i32* @x.452
  %41 = load i32, i32* @y.453
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 1153240347, i32 -1807501288
  store i32 %65, i32* %10
  br label %121

; <label>:66:                                     ; preds = %12
  store i32 -119840031, i32* %10
  %67 = load volatile %"class.std::multiset"*, %"class.std::multiset"** %3
  store %"class.std::multiset"* %67, %"class.std::multiset"** %11
  br label %121

; <label>:68:                                     ; preds = %12
  %69 = load i32, i32* @x.452
  %70 = load i32, i32* @y.453
  %71 = sub i32 %69, -583553535
  %72 = sub i32 %71, 1
  %73 = add i32 %72, -583553535
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  %83 = select i1 %81, i32 174147414, i32 -70200079
  store i32 %83, i32* %10
  br label %121

; <label>:84:                                     ; preds = %12
  %85 = load i32, i32* @x.452
  %86 = load i32, i32* @y.453
  %87 = sub i32 0, 1
  %88 = add i32 %85, %87
  %89 = sub i32 %85, 1
  %90 = mul i32 %85, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %86, 10
  %94 = xor i1 %92, true
  %95 = xor i1 %93, true
  %96 = xor i1 false, true
  %97 = and i1 %94, false
  %98 = and i1 %92, %96
  %99 = and i1 %95, false
  %100 = and i1 %93, %96
  %101 = or i1 %97, %98
  %102 = or i1 %99, %100
  %103 = xor i1 %101, %102
  %104 = or i1 %94, %95
  %105 = xor i1 %104, true
  %106 = or i1 false, %96
  %107 = and i1 %105, %106
  %108 = or i1 %103, %107
  %109 = or i1 %92, %93
  %110 = select i1 %108, i32 242419355, i32 -70200079
  store i32 %110, i32* %10
  br label %121

; <label>:111:                                    ; preds = %12
  store i32 -119840031, i32* %10
  store %"class.std::multiset"* null, %"class.std::multiset"** %11
  br label %121

; <label>:112:                                    ; preds = %12
  %113 = load %"class.std::multiset"*, %"class.std::multiset"** %11
  ret %"class.std::multiset"* %113

; <label>:114:                                    ; preds = %12
  %115 = load volatile %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %5
  %116 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %115, i32 0, i32 0
  %117 = bitcast %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %116 to %"class.std::allocator.9"*
  %118 = load i64, i64* %7, align 8
  %119 = call %"class.std::multiset"* @_ZNSt16allocator_traitsISaISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EEEE8allocateERS8_m(%"class.std::allocator.9"* dereferenceable(1) %117, i64 %118)
  store i32 697083618, i32* %10
  br label %121

; <label>:120:                                    ; preds = %12
  store i32 174147414, i32* %10
  br label %121

; <label>:121:                                    ; preds = %120, %114, %111, %84, %68, %66, %34, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::multiset"* @_ZNSt16allocator_traitsISaISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EEEE8allocateERS8_m(%"class.std::allocator.9"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.9"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %3, align 8
  %6 = bitcast %"class.std::allocator.9"* %5 to %"class.__gnu_cxx::new_allocator.10"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::multiset"* @_ZN9__gnu_cxx13new_allocatorISt8multisetISt6vectorIxSaIxEESt4lessIS4_ESaIS4_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.10"* %6, i64 %7, i8* null)
  ret %"class.std::multiset"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::multiset"* @_ZN9__gnu_cxx13new_allocatorISt8multisetISt6vectorIxSaIxEESt4lessIS4_ESaIS4_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.10"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.456
  %9 = load i32, i32* @y.457
  %10 = sub i32 %8, 1046087049
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 1046087049
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1896646505, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %85
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1896646505, label %22
    i32 334899746, label %42
    i32 -548535950, label %67
    i32 -203750943, label %70
    i32 1745103432, label %71
    i32 1412897973, label %77
  ]

; <label>:21:                                     ; preds = %19
  br label %85

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 334899746, i32 1412897973
  store i32 %41, i32* %18
  br label %85

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %44 = alloca i64, align 8
  store i64* %44, i64** %5
  %45 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %43, align 8
  %46 = load volatile i64*, i64** %5
  store i64 %1, i64* %46, align 8
  store i8* %2, i8** %45, align 8
  %47 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %43, align 8
  %48 = load volatile i64*, i64** %5
  %49 = load i64, i64* %48, align 8
  %50 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt8multisetISt6vectorIxSaIxEESt4lessIS4_ESaIS4_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.10"* %47) #3
  %51 = icmp ugt i64 %49, %50
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.456
  %53 = load i32, i32* @y.457
  %54 = add i32 %52, -518238628
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, -518238628
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 -548535950, i32 1412897973
  store i32 %66, i32* %18
  br label %85

; <label>:67:                                     ; preds = %19
  %68 = load volatile i1, i1* %4
  %69 = select i1 %68, i32 -203750943, i32 1745103432
  store i32 %69, i32* %18
  br label %85

; <label>:70:                                     ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #14
  unreachable

; <label>:71:                                     ; preds = %19
  %72 = load volatile i64*, i64** %5
  %73 = load i64, i64* %72, align 8
  %74 = mul i64 %73, 48
  %75 = call i8* @_Znwm(i64 %74)
  %76 = bitcast i8* %75 to %"class.std::multiset"*
  ret %"class.std::multiset"* %76

; <label>:77:                                     ; preds = %19
  %78 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %79 = alloca i64, align 8
  %80 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %78, align 8
  store i64 %1, i64* %79, align 8
  store i8* %2, i8** %80, align 8
  %81 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %78, align 8
  %82 = load i64, i64* %79, align 8
  %83 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt8multisetISt6vectorIxSaIxEESt4lessIS4_ESaIS4_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.10"* %81) #3
  %84 = icmp ugt i64 %82, %83
  store i32 334899746, i32* %18
  br label %85

; <label>:85:                                     ; preds = %77, %67, %42, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt8multisetISt6vectorIxSaIxEESt4lessIS4_ESaIS4_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.10"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %2, align 8
  ret i64 384307168202282325
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::multiset"* @_ZSt27__uninitialized_default_n_aIPSt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EEmS7_ET_S9_T0_RSaIT1_E(%"class.std::multiset"*, i64, %"class.std::allocator.9"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::multiset"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::multiset"* %0, %"class.std::multiset"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.9"* %2, %"class.std::allocator.9"** %6, align 8
  %7 = load %"class.std::multiset"*, %"class.std::multiset"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call %"class.std::multiset"* @_ZSt25__uninitialized_default_nIPSt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EEmET_S9_T0_(%"class.std::multiset"* %7, i64 %8)
  ret %"class.std::multiset"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.9"* @_ZNSt12_Vector_baseISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EESaIS7_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.8"*, align 8
  store %"struct.std::_Vector_base.8"* %0, %"struct.std::_Vector_base.8"** %2, align 8
  %3 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %4 to %"class.std::allocator.9"*
  ret %"class.std::allocator.9"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::multiset"* @_ZSt25__uninitialized_default_nIPSt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EEmET_S9_T0_(%"class.std::multiset"*, i64) #0 comdat {
  %3 = alloca %"class.std::multiset"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8, align 1
  store %"class.std::multiset"* %0, %"class.std::multiset"** %3, align 8
  store i64 %1, i64* %4, align 8
  store i8 1, i8* %5, align 1
  %6 = load %"class.std::multiset"*, %"class.std::multiset"** %3, align 8
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::multiset"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8multisetISt6vectorIxSaIxEESt4lessIS5_ESaIS5_EEmEET_SB_T0_(%"class.std::multiset"* %6, i64 %7)
  ret %"class.std::multiset"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::multiset"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt8multisetISt6vectorIxSaIxEESt4lessIS5_ESaIS5_EEmEET_SB_T0_(%"class.std::multiset"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::multiset"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::multiset"*, align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::multiset"* %0, %"class.std::multiset"** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = load %"class.std::multiset"*, %"class.std::multiset"** %3, align 8
  store %"class.std::multiset"* %8, %"class.std::multiset"** %5, align 8
  br label %9

; <label>:9:                                      ; preds = %104, %2
  %10 = load i64, i64* %4, align 8
  %11 = icmp ugt i64 %10, 0
  br i1 %11, label %12, label %167

; <label>:12:                                     ; preds = %9
  %13 = load i32, i32* @x.466
  %14 = load i32, i32* @y.467
  %15 = sub i32 %13, -1794508333
  %16 = sub i32 %15, 1
  %17 = add i32 %16, -1794508333
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %14, 10
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  br i1 %25, label %27, label %309

; <label>:27:                                     ; preds = %12, %309
  %28 = load %"class.std::multiset"*, %"class.std::multiset"** %5, align 8
  %29 = call %"class.std::multiset"* @_ZSt11__addressofISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EEEPT_RS8_(%"class.std::multiset"* dereferenceable(48) %28) #3
  %30 = load i32, i32* @x.466
  %31 = load i32, i32* @y.467
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  br i1 %41, label %43, label %309

; <label>:43:                                     ; preds = %27
  invoke void @_ZSt10_ConstructISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EEJEEvPT_DpOT0_(%"class.std::multiset"* %29)
          to label %44 unwind label %105

; <label>:44:                                     ; preds = %43
  br label %45

; <label>:45:                                     ; preds = %44
  %46 = load i32, i32* @x.466
  %47 = load i32, i32* @y.467
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  br i1 %69, label %71, label %312

; <label>:71:                                     ; preds = %45, %312
  %72 = load i64, i64* %4, align 8
  %73 = sub i64 0, -1
  %74 = sub i64 %72, %73
  %75 = add i64 %72, -1
  store i64 %74, i64* %4, align 8
  %76 = load %"class.std::multiset"*, %"class.std::multiset"** %5, align 8
  %77 = getelementptr inbounds %"class.std::multiset", %"class.std::multiset"* %76, i32 1
  store %"class.std::multiset"* %77, %"class.std::multiset"** %5, align 8
  %78 = load i32, i32* @x.466
  %79 = load i32, i32* @y.467
  %80 = sub i32 %78, 1071500789
  %81 = sub i32 %80, 1
  %82 = add i32 %81, 1071500789
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 false, true
  %91 = and i1 %88, false
  %92 = and i1 %86, %90
  %93 = and i1 %89, false
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 false, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  br i1 %102, label %104, label %312

; <label>:104:                                    ; preds = %71
  br label %9

; <label>:105:                                    ; preds = %43
  %106 = landingpad { i8*, i32 }
          catch i8* null
  %107 = extractvalue { i8*, i32 } %106, 0
  store i8* %107, i8** %6, align 8
  %108 = extractvalue { i8*, i32 } %106, 1
  store i32 %108, i32* %7, align 4
  br label %109

; <label>:109:                                    ; preds = %105
  %110 = load i32, i32* @x.466
  %111 = load i32, i32* @y.467
  %112 = sub i32 0, 1
  %113 = add i32 %110, %112
  %114 = sub i32 %110, 1
  %115 = mul i32 %110, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %111, 10
  %119 = xor i1 %117, true
  %120 = xor i1 %118, true
  %121 = xor i1 false, true
  %122 = and i1 %119, false
  %123 = and i1 %117, %121
  %124 = and i1 %120, false
  %125 = and i1 %118, %121
  %126 = or i1 %122, %123
  %127 = or i1 %124, %125
  %128 = xor i1 %126, %127
  %129 = or i1 %119, %120
  %130 = xor i1 %129, true
  %131 = or i1 false, %121
  %132 = and i1 %130, %131
  %133 = or i1 %128, %132
  %134 = or i1 %117, %118
  br i1 %133, label %135, label %323

; <label>:135:                                    ; preds = %109, %323
  %136 = load i8*, i8** %6, align 8
  %137 = call i8* @__cxa_begin_catch(i8* %136) #3
  %138 = load %"class.std::multiset"*, %"class.std::multiset"** %3, align 8
  %139 = load %"class.std::multiset"*, %"class.std::multiset"** %5, align 8
  %140 = load i32, i32* @x.466
  %141 = load i32, i32* @y.467
  %142 = sub i32 0, 1
  %143 = add i32 %140, %142
  %144 = sub i32 %140, 1
  %145 = mul i32 %140, %143
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %141, 10
  %149 = xor i1 %147, true
  %150 = xor i1 %148, true
  %151 = xor i1 true, true
  %152 = and i1 %149, true
  %153 = and i1 %147, %151
  %154 = and i1 %150, true
  %155 = and i1 %148, %151
  %156 = or i1 %152, %153
  %157 = or i1 %154, %155
  %158 = xor i1 %156, %157
  %159 = or i1 %149, %150
  %160 = xor i1 %159, true
  %161 = or i1 true, %151
  %162 = and i1 %160, %161
  %163 = or i1 %158, %162
  %164 = or i1 %147, %148
  br i1 %163, label %165, label %323

; <label>:165:                                    ; preds = %135
  invoke void @_ZSt8_DestroyIPSt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EEEvT_S9_(%"class.std::multiset"* %138, %"class.std::multiset"* %139)
          to label %166 unwind label %211

; <label>:166:                                    ; preds = %165
  invoke void @__cxa_rethrow() #14
          to label %255 unwind label %211

; <label>:167:                                    ; preds = %9
  %168 = load i32, i32* @x.466
  %169 = load i32, i32* @y.467
  %170 = sub i32 %168, -2025056108
  %171 = sub i32 %170, 1
  %172 = add i32 %171, -2025056108
  %173 = sub i32 %168, 1
  %174 = mul i32 %168, %172
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %169, 10
  %178 = xor i1 %176, true
  %179 = xor i1 %177, true
  %180 = xor i1 false, true
  %181 = and i1 %178, false
  %182 = and i1 %176, %180
  %183 = and i1 %179, false
  %184 = and i1 %177, %180
  %185 = or i1 %181, %182
  %186 = or i1 %183, %184
  %187 = xor i1 %185, %186
  %188 = or i1 %178, %179
  %189 = xor i1 %188, true
  %190 = or i1 false, %180
  %191 = and i1 %189, %190
  %192 = or i1 %187, %191
  %193 = or i1 %176, %177
  br i1 %192, label %194, label %328

; <label>:194:                                    ; preds = %167, %328
  %195 = load %"class.std::multiset"*, %"class.std::multiset"** %5, align 8
  %196 = load i32, i32* @x.466
  %197 = load i32, i32* @y.467
  %198 = sub i32 %196, 400033143
  %199 = sub i32 %198, 1
  %200 = add i32 %199, 400033143
  %201 = sub i32 %196, 1
  %202 = mul i32 %196, %200
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %197, 10
  %206 = and i1 %204, %205
  %207 = xor i1 %204, %205
  %208 = or i1 %206, %207
  %209 = or i1 %204, %205
  br i1 %208, label %210, label %328

; <label>:210:                                    ; preds = %194
  ret %"class.std::multiset"* %195

; <label>:211:                                    ; preds = %166, %165
  %212 = load i32, i32* @x.466
  %213 = load i32, i32* @y.467
  %214 = sub i32 %212, -1347644324
  %215 = sub i32 %214, 1
  %216 = add i32 %215, -1347644324
  %217 = sub i32 %212, 1
  %218 = mul i32 %212, %216
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %213, 10
  %222 = and i1 %220, %221
  %223 = xor i1 %220, %221
  %224 = or i1 %222, %223
  %225 = or i1 %220, %221
  br i1 %224, label %226, label %330

; <label>:226:                                    ; preds = %211, %330
  %227 = landingpad { i8*, i32 }
          cleanup
  %228 = extractvalue { i8*, i32 } %227, 0
  store i8* %228, i8** %6, align 8
  %229 = extractvalue { i8*, i32 } %227, 1
  store i32 %229, i32* %7, align 4
  %230 = load i32, i32* @x.466
  %231 = load i32, i32* @y.467
  %232 = add i32 %230, 256749595
  %233 = sub i32 %232, 1
  %234 = sub i32 %233, 256749595
  %235 = sub i32 %230, 1
  %236 = mul i32 %230, %234
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %231, 10
  %240 = and i1 %238, %239
  %241 = xor i1 %238, %239
  %242 = or i1 %240, %241
  %243 = or i1 %238, %239
  br i1 %242, label %244, label %330

; <label>:244:                                    ; preds = %226
  invoke void @__cxa_end_catch()
          to label %245 unwind label %252

; <label>:245:                                    ; preds = %244
  br label %247
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:247:                                    ; preds = %245
  %248 = load i8*, i8** %6, align 8
  %249 = load i32, i32* %7, align 4
  %250 = insertvalue { i8*, i32 } undef, i8* %248, 0
  %251 = insertvalue { i8*, i32 } %250, i32 %249, 1
  resume { i8*, i32 } %251

; <label>:252:                                    ; preds = %244
  %253 = landingpad { i8*, i32 }
          catch i8* null
  %254 = extractvalue { i8*, i32 } %253, 0
  call void @__clang_call_terminate(i8* %254) #11
  unreachable

; <label>:255:                                    ; preds = %166
  %256 = load i32, i32* @x.466
  %257 = load i32, i32* @y.467
  %258 = sub i32 0, 1
  %259 = add i32 %256, %258
  %260 = sub i32 %256, 1
  %261 = mul i32 %256, %259
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %257, 10
  %265 = xor i1 %263, true
  %266 = xor i1 %264, true
  %267 = xor i1 false, true
  %268 = and i1 %265, false
  %269 = and i1 %263, %267
  %270 = and i1 %266, false
  %271 = and i1 %264, %267
  %272 = or i1 %268, %269
  %273 = or i1 %270, %271
  %274 = xor i1 %272, %273
  %275 = or i1 %265, %266
  %276 = xor i1 %275, true
  %277 = or i1 false, %267
  %278 = and i1 %276, %277
  %279 = or i1 %274, %278
  %280 = or i1 %263, %264
  br i1 %279, label %281, label %334

; <label>:281:                                    ; preds = %255, %334
  %282 = load i32, i32* @x.466
  %283 = load i32, i32* @y.467
  %284 = sub i32 %282, -56658789
  %285 = sub i32 %284, 1
  %286 = add i32 %285, -56658789
  %287 = sub i32 %282, 1
  %288 = mul i32 %282, %286
  %289 = urem i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %283, 10
  %292 = xor i1 %290, true
  %293 = xor i1 %291, true
  %294 = xor i1 true, true
  %295 = and i1 %292, true
  %296 = and i1 %290, %294
  %297 = and i1 %293, true
  %298 = and i1 %291, %294
  %299 = or i1 %295, %296
  %300 = or i1 %297, %298
  %301 = xor i1 %299, %300
  %302 = or i1 %292, %293
  %303 = xor i1 %302, true
  %304 = or i1 true, %294
  %305 = and i1 %303, %304
  %306 = or i1 %301, %305
  %307 = or i1 %290, %291
  br i1 %306, label %308, label %334

; <label>:308:                                    ; preds = %281
  unreachable

; <label>:309:                                    ; preds = %27, %12
  %310 = load %"class.std::multiset"*, %"class.std::multiset"** %5, align 8
  %311 = call %"class.std::multiset"* @_ZSt11__addressofISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EEEPT_RS8_(%"class.std::multiset"* dereferenceable(48) %310) #3
  br label %27

; <label>:312:                                    ; preds = %71, %45
  %313 = load i64, i64* %4, align 8
  %314 = shl i64 %313, -1
  %315 = shl i64 %313, -1
  %316 = sub i64 0, %313
  %317 = sub i64 0, -1
  %318 = add i64 %316, %317
  %319 = sub i64 0, %318
  %320 = add i64 %313, -1
  store i64 %319, i64* %4, align 8
  %321 = load %"class.std::multiset"*, %"class.std::multiset"** %5, align 8
  %322 = getelementptr inbounds %"class.std::multiset", %"class.std::multiset"* %321, i32 1
  store %"class.std::multiset"* %322, %"class.std::multiset"** %5, align 8
  br label %71

; <label>:323:                                    ; preds = %135, %109
  %324 = load i8*, i8** %6, align 8
  %325 = call i8* @__cxa_begin_catch(i8* %324) #3
  %326 = load %"class.std::multiset"*, %"class.std::multiset"** %3, align 8
  %327 = load %"class.std::multiset"*, %"class.std::multiset"** %5, align 8
  br label %135

; <label>:328:                                    ; preds = %194, %167
  %329 = load %"class.std::multiset"*, %"class.std::multiset"** %5, align 8
  br label %194

; <label>:330:                                    ; preds = %226, %211
  %331 = landingpad { i8*, i32 }
          cleanup
  %332 = extractvalue { i8*, i32 } %331, 0
  store i8* %332, i8** %6, align 8
  %333 = extractvalue { i8*, i32 } %331, 1
  store i32 %333, i32* %7, align 4
  br label %226

; <label>:334:                                    ; preds = %281, %255
  br label %281
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EEJEEvPT_DpOT0_(%"class.std::multiset"*) #4 comdat {
  %2 = alloca %"class.std::multiset"*, align 8
  store %"class.std::multiset"* %0, %"class.std::multiset"** %2, align 8
  %3 = load %"class.std::multiset"*, %"class.std::multiset"** %2, align 8
  %4 = bitcast %"class.std::multiset"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::multiset"*
  call void @_ZNSt8multisetISt6vectorIxSaIxEESt4lessIS2_ESaIS2_EEC2Ev(%"class.std::multiset"* %5) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::multiset"* @_ZSt11__addressofISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EEEPT_RS8_(%"class.std::multiset"* dereferenceable(48)) #4 comdat {
  %2 = alloca %"class.std::multiset"*, align 8
  store %"class.std::multiset"* %0, %"class.std::multiset"** %2, align 8
  %3 = load %"class.std::multiset"*, %"class.std::multiset"** %2, align 8
  %4 = bitcast %"class.std::multiset"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::multiset"*
  ret %"class.std::multiset"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EEEvT_S9_(%"class.std::multiset"*, %"class.std::multiset"*) #0 comdat {
  %3 = alloca %"class.std::multiset"*, align 8
  %4 = alloca %"class.std::multiset"*, align 8
  store %"class.std::multiset"* %0, %"class.std::multiset"** %3, align 8
  store %"class.std::multiset"* %1, %"class.std::multiset"** %4, align 8
  %5 = load %"class.std::multiset"*, %"class.std::multiset"** %3, align 8
  %6 = load %"class.std::multiset"*, %"class.std::multiset"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt8multisetISt6vectorIxSaIxEESt4lessIS5_ESaIS5_EEEEvT_SB_(%"class.std::multiset"* %5, %"class.std::multiset"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8multisetISt6vectorIxSaIxEESt4lessIS2_ESaIS2_EEC2Ev(%"class.std::multiset"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::multiset"*, align 8
  store %"class.std::multiset"* %0, %"class.std::multiset"** %2, align 8
  %3 = load %"class.std::multiset"*, %"class.std::multiset"** %2, align 8
  %4 = getelementptr inbounds %"class.std::multiset", %"class.std::multiset"* %3, i32 0, i32 0
  invoke void @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EEC2Ev(%"class.std::_Rb_tree.12"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #11
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EEC2Ev(%"class.std::_Rb_tree.12"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.12"*, align 8
  store %"class.std::_Rb_tree.12"* %0, %"class.std::_Rb_tree.12"** %2, align 8
  %3 = load %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.12", %"class.std::_Rb_tree.12"* %3, i32 0, i32 0
  call void @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE13_Rb_tree_implIS6_Lb1EEC2Ev(%"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE13_Rb_tree_implIS6_Lb1EEC2Ev(%"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"** %2, align 8
  %5 = load %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"** %2, align 8
  %6 = bitcast %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %5 to %"class.std::allocator.13"*
  call void @_ZNSaISt13_Rb_tree_nodeISt6vectorIxSaIxEEEEC2Ev(%"class.std::allocator.13"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %5, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %5, i32 0, i32 1
  %9 = bitcast %"struct.std::_Rb_tree_node_base"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* %9, i8 0, i64 32, i32 8, i1 false)
  %10 = getelementptr inbounds %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %5, i32 0, i32 2
  store i64 0, i64* %10, align 8
  invoke void @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE13_Rb_tree_implIS6_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %5)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %1
  ret void

; <label>:12:                                     ; preds = %1
  %13 = load i32, i32* @x.478
  %14 = load i32, i32* @y.479
  %15 = add i32 %13, 319795940
  %16 = sub i32 %15, 1
  %17 = sub i32 %16, 319795940
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %14, 10
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  br i1 %37, label %39, label %117

; <label>:39:                                     ; preds = %12, %117
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = extractvalue { i8*, i32 } %40, 0
  store i8* %41, i8** %3, align 8
  %42 = extractvalue { i8*, i32 } %40, 1
  store i32 %42, i32* %4, align 4
  %43 = bitcast %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %5 to %"class.std::allocator.13"*
  call void @_ZNSaISt13_Rb_tree_nodeISt6vectorIxSaIxEEEED2Ev(%"class.std::allocator.13"* %43) #3
  %44 = load i32, i32* @x.478
  %45 = load i32, i32* @y.479
  %46 = add i32 %44, 255334314
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 255334314
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  br i1 %68, label %70, label %117

; <label>:70:                                     ; preds = %39
  br label %71

; <label>:71:                                     ; preds = %70
  %72 = load i32, i32* @x.478
  %73 = load i32, i32* @y.479
  %74 = sub i32 0, 1
  %75 = add i32 %72, %74
  %76 = sub i32 %72, 1
  %77 = mul i32 %72, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %73, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  br i1 %83, label %85, label %122

; <label>:85:                                     ; preds = %71, %122
  %86 = load i8*, i8** %3, align 8
  %87 = load i32, i32* %4, align 4
  %88 = insertvalue { i8*, i32 } undef, i8* %86, 0
  %89 = insertvalue { i8*, i32 } %88, i32 %87, 1
  %90 = load i32, i32* @x.478
  %91 = load i32, i32* @y.479
  %92 = add i32 %90, -1720710935
  %93 = sub i32 %92, 1
  %94 = sub i32 %93, -1720710935
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = xor i1 %98, true
  %101 = xor i1 %99, true
  %102 = xor i1 false, true
  %103 = and i1 %100, false
  %104 = and i1 %98, %102
  %105 = and i1 %101, false
  %106 = and i1 %99, %102
  %107 = or i1 %103, %104
  %108 = or i1 %105, %106
  %109 = xor i1 %107, %108
  %110 = or i1 %100, %101
  %111 = xor i1 %110, true
  %112 = or i1 false, %102
  %113 = and i1 %111, %112
  %114 = or i1 %109, %113
  %115 = or i1 %98, %99
  br i1 %114, label %116, label %122

; <label>:116:                                    ; preds = %85
  resume { i8*, i32 } %89

; <label>:117:                                    ; preds = %39, %12
  %118 = landingpad { i8*, i32 }
          cleanup
  %119 = extractvalue { i8*, i32 } %118, 0
  store i8* %119, i8** %3, align 8
  %120 = extractvalue { i8*, i32 } %118, 1
  store i32 %120, i32* %4, align 4
  %121 = bitcast %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %5 to %"class.std::allocator.13"*
  call void @_ZNSaISt13_Rb_tree_nodeISt6vectorIxSaIxEEEED2Ev(%"class.std::allocator.13"* %121) #3
  br label %39

; <label>:122:                                    ; preds = %85, %71
  %123 = load i8*, i8** %3, align 8
  %124 = load i32, i32* %4, align 4
  %125 = insertvalue { i8*, i32 } undef, i8* %123, 0
  %126 = insertvalue { i8*, i32 } %125, i32 %124, 1
  br label %85
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeISt6vectorIxSaIxEEEEC2Ev(%"class.std::allocator.13"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.480
  %5 = load i32, i32* @y.481
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 457896318, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %48
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 457896318, label %17
    i32 1740116185, label %25
    i32 1443606268, label %43
    i32 826982990, label %44
  ]

; <label>:16:                                     ; preds = %14
  br label %48

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 1740116185, i32 826982990
  store i32 %24, i32* %13
  br label %48

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.std::allocator.13"*, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %26, align 8
  %27 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %26, align 8
  %28 = bitcast %"class.std::allocator.13"* %27 to %"class.__gnu_cxx::new_allocator.14"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt6vectorIxSaIxEEEEC2Ev(%"class.__gnu_cxx::new_allocator.14"* %28) #3
  %29 = load i32, i32* @x.480
  %30 = load i32, i32* @y.481
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 1443606268, i32 826982990
  store i32 %42, i32* %13
  br label %48

; <label>:43:                                     ; preds = %14
  ret void

; <label>:44:                                     ; preds = %14
  %45 = alloca %"class.std::allocator.13"*, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %45, align 8
  %46 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %45, align 8
  %47 = bitcast %"class.std::allocator.13"* %46 to %"class.__gnu_cxx::new_allocator.14"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt6vectorIxSaIxEEEEC2Ev(%"class.__gnu_cxx::new_allocator.14"* %47) #3
  store i32 1740116185, i32* %13
  br label %48

; <label>:48:                                     ; preds = %44, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE13_Rb_tree_implIS6_Lb1EE13_M_initializeEv(%"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"** %2, align 8
  %3 = load %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %5 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %4, i32 0, i32 0
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %6, i32 0, i32 1
  store %"struct.std::_Rb_tree_node_base"* null, %"struct.std::_Rb_tree_node_base"** %7, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %9 = getelementptr inbounds %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %10 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %9, i32 0, i32 2
  store %"struct.std::_Rb_tree_node_base"* %8, %"struct.std::_Rb_tree_node_base"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %12 = getelementptr inbounds %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %3, i32 0, i32 1
  %13 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %12, i32 0, i32 3
  store %"struct.std::_Rb_tree_node_base"* %11, %"struct.std::_Rb_tree_node_base"** %13, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt13_Rb_tree_nodeISt6vectorIxSaIxEEEED2Ev(%"class.std::allocator.13"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.13"*, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %2, align 8
  %3 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %2, align 8
  %4 = bitcast %"class.std::allocator.13"* %3 to %"class.__gnu_cxx::new_allocator.14"*
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt6vectorIxSaIxEEEED2Ev(%"class.__gnu_cxx::new_allocator.14"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt6vectorIxSaIxEEEEC2Ev(%"class.__gnu_cxx::new_allocator.14"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt6vectorIxSaIxEEEED2Ev(%"class.__gnu_cxx::new_allocator.14"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt8multisetISt6vectorIxSaIxEESt4lessIS5_ESaIS5_EEEEvT_SB_(%"class.std::multiset"*, %"class.std::multiset"*) #0 comdat align 2 {
  %3 = alloca %"class.std::multiset"*, align 8
  %4 = alloca %"class.std::multiset"*, align 8
  store %"class.std::multiset"* %0, %"class.std::multiset"** %3, align 8
  store %"class.std::multiset"* %1, %"class.std::multiset"** %4, align 8
  %5 = alloca i32
  store i32 924549227, i32* %5
  br label %6

; <label>:6:                                      ; preds = %2, %21
  %7 = load i32, i32* %5
  switch i32 %7, label %8 [
    i32 924549227, label %9
    i32 -1145234909, label %14
    i32 -1540100057, label %17
    i32 -2106818145, label %20
  ]

; <label>:8:                                      ; preds = %6
  br label %21

; <label>:9:                                      ; preds = %6
  %10 = load %"class.std::multiset"*, %"class.std::multiset"** %3, align 8
  %11 = load %"class.std::multiset"*, %"class.std::multiset"** %4, align 8
  %12 = icmp ne %"class.std::multiset"* %10, %11
  %13 = select i1 %12, i32 -1145234909, i32 -2106818145
  store i32 %13, i32* %5
  br label %21

; <label>:14:                                     ; preds = %6
  %15 = load %"class.std::multiset"*, %"class.std::multiset"** %3, align 8
  %16 = call %"class.std::multiset"* @_ZSt11__addressofISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EEEPT_RS8_(%"class.std::multiset"* dereferenceable(48) %15) #3
  call void @_ZSt8_DestroyISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EEEvPT_(%"class.std::multiset"* %16)
  store i32 -1540100057, i32* %5
  br label %21

; <label>:17:                                     ; preds = %6
  %18 = load %"class.std::multiset"*, %"class.std::multiset"** %3, align 8
  %19 = getelementptr inbounds %"class.std::multiset", %"class.std::multiset"* %18, i32 1
  store %"class.std::multiset"* %19, %"class.std::multiset"** %3, align 8
  store i32 924549227, i32* %5
  br label %21

; <label>:20:                                     ; preds = %6
  ret void

; <label>:21:                                     ; preds = %17, %14, %9, %8
  br label %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EEEvPT_(%"class.std::multiset"*) #4 comdat {
  %2 = alloca %"class.std::multiset"*, align 8
  store %"class.std::multiset"* %0, %"class.std::multiset"** %2, align 8
  %3 = load %"class.std::multiset"*, %"class.std::multiset"** %2, align 8
  call void @_ZNSt8multisetISt6vectorIxSaIxEESt4lessIS2_ESaIS2_EED2Ev(%"class.std::multiset"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8multisetISt6vectorIxSaIxEESt4lessIS2_ESaIS2_EED2Ev(%"class.std::multiset"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::multiset"*, align 8
  store %"class.std::multiset"* %0, %"class.std::multiset"** %2, align 8
  %3 = load %"class.std::multiset"*, %"class.std::multiset"** %2, align 8
  %4 = getelementptr inbounds %"class.std::multiset", %"class.std::multiset"* %3, i32 0, i32 0
  call void @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EED2Ev(%"class.std::_Rb_tree.12"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EED2Ev(%"class.std::_Rb_tree.12"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::_Rb_tree.12"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::_Rb_tree.12"* %0, %"class.std::_Rb_tree.12"** %2, align 8
  %5 = load %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %2, align 8
  %6 = call %"struct.std::_Rb_tree_node.27"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_beginEv(%"class.std::_Rb_tree.12"* %5) #3
  invoke void @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.12"* %5, %"struct.std::_Rb_tree_node.27"* %6)
          to label %7 unwind label %50

; <label>:7:                                      ; preds = %1
  %8 = load i32, i32* @x.496
  %9 = load i32, i32* @y.497
  %10 = sub i32 %8, -965772106
  %11 = sub i32 %10, 1
  %12 = add i32 %11, -965772106
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %9, 10
  %18 = and i1 %16, %17
  %19 = xor i1 %16, %17
  %20 = or i1 %18, %19
  %21 = or i1 %16, %17
  br i1 %20, label %22, label %98

; <label>:22:                                     ; preds = %7, %98
  %23 = getelementptr inbounds %"class.std::_Rb_tree.12", %"class.std::_Rb_tree.12"* %5, i32 0, i32 0
  call void @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev(%"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %23) #3
  %24 = load i32, i32* @x.496
  %25 = load i32, i32* @y.497
  %26 = sub i32 0, 1
  %27 = add i32 %24, %26
  %28 = sub i32 %24, 1
  %29 = mul i32 %24, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %25, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 true, true
  %36 = and i1 %33, true
  %37 = and i1 %31, %35
  %38 = and i1 %34, true
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 true, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  br i1 %47, label %49, label %98

; <label>:49:                                     ; preds = %22
  ret void

; <label>:50:                                     ; preds = %1
  %51 = landingpad { i8*, i32 }
          catch i8* null
  %52 = extractvalue { i8*, i32 } %51, 0
  store i8* %52, i8** %3, align 8
  %53 = extractvalue { i8*, i32 } %51, 1
  store i32 %53, i32* %4, align 4
  %54 = getelementptr inbounds %"class.std::_Rb_tree.12", %"class.std::_Rb_tree.12"* %5, i32 0, i32 0
  call void @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev(%"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %54) #3
  br label %55

; <label>:55:                                     ; preds = %50
  %56 = load i32, i32* @x.496
  %57 = load i32, i32* @y.497
  %58 = sub i32 %56, 1859956727
  %59 = sub i32 %58, 1
  %60 = add i32 %59, 1859956727
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 true, true
  %69 = and i1 %66, true
  %70 = and i1 %64, %68
  %71 = and i1 %67, true
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 true, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  br i1 %80, label %82, label %100

; <label>:82:                                     ; preds = %55, %100
  %83 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %83) #11
  %84 = load i32, i32* @x.496
  %85 = load i32, i32* @y.497
  %86 = sub i32 0, 1
  %87 = add i32 %84, %86
  %88 = sub i32 %84, 1
  %89 = mul i32 %84, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %85, 10
  %93 = and i1 %91, %92
  %94 = xor i1 %91, %92
  %95 = or i1 %93, %94
  %96 = or i1 %91, %92
  br i1 %95, label %97, label %100

; <label>:97:                                     ; preds = %82
  unreachable

; <label>:98:                                     ; preds = %22, %7
  %99 = getelementptr inbounds %"class.std::_Rb_tree.12", %"class.std::_Rb_tree.12"* %5, i32 0, i32 0
  call void @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev(%"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %99) #3
  br label %22

; <label>:100:                                    ; preds = %82, %55
  %101 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %101) #11
  br label %82
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.12"*, %"struct.std::_Rb_tree_node.27"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::_Rb_tree.12"*
  %5 = alloca %"class.std::_Rb_tree.12"*, align 8
  %6 = alloca %"struct.std::_Rb_tree_node.27"*, align 8
  %7 = alloca %"struct.std::_Rb_tree_node.27"*, align 8
  store %"class.std::_Rb_tree.12"* %0, %"class.std::_Rb_tree.12"** %5, align 8
  store %"struct.std::_Rb_tree_node.27"* %1, %"struct.std::_Rb_tree_node.27"** %6, align 8
  %8 = load %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %5, align 8
  store %"class.std::_Rb_tree.12"* %8, %"class.std::_Rb_tree.12"** %4
  %9 = alloca i32
  store i32 -1140338233, i32* %9
  br label %10

; <label>:10:                                     ; preds = %2, %76
  %11 = load i32, i32* %9
  switch i32 %11, label %12 [
    i32 -1140338233, label %13
    i32 -1510075997, label %40
    i32 879854669, label %58
    i32 2134398634, label %61
    i32 -482664234, label %72
    i32 -649213579, label %73
  ]

; <label>:12:                                     ; preds = %10
  br label %76

; <label>:13:                                     ; preds = %10
  %14 = load i32, i32* @x.498
  %15 = load i32, i32* @y.499
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %15, 10
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1510075997, i32 -649213579
  store i32 %39, i32* %9
  br label %76

; <label>:40:                                     ; preds = %10
  %41 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %6, align 8
  %42 = icmp ne %"struct.std::_Rb_tree_node.27"* %41, null
  store i1 %42, i1* %3
  %43 = load i32, i32* @x.498
  %44 = load i32, i32* @y.499
  %45 = sub i32 %43, -1145143500
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -1145143500
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 879854669, i32 -649213579
  store i32 %57, i32* %9
  br label %76

; <label>:58:                                     ; preds = %10
  %59 = load volatile i1, i1* %3
  %60 = select i1 %59, i32 2134398634, i32 -482664234
  store i32 %60, i32* %9
  br label %76

; <label>:61:                                     ; preds = %10
  %62 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %6, align 8
  %63 = bitcast %"struct.std::_Rb_tree_node.27"* %62 to %"struct.std::_Rb_tree_node_base"*
  %64 = call %"struct.std::_Rb_tree_node.27"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %63) #3
  %65 = load volatile %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %4
  call void @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.12"* %65, %"struct.std::_Rb_tree_node.27"* %64)
  %66 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %6, align 8
  %67 = bitcast %"struct.std::_Rb_tree_node.27"* %66 to %"struct.std::_Rb_tree_node_base"*
  %68 = call %"struct.std::_Rb_tree_node.27"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %67) #3
  store %"struct.std::_Rb_tree_node.27"* %68, %"struct.std::_Rb_tree_node.27"** %7, align 8
  %69 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %6, align 8
  %70 = load volatile %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %4
  call void @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.12"* %70, %"struct.std::_Rb_tree_node.27"* %69) #3
  %71 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %7, align 8
  store %"struct.std::_Rb_tree_node.27"* %71, %"struct.std::_Rb_tree_node.27"** %6, align 8
  store i32 -1140338233, i32* %9
  br label %76

; <label>:72:                                     ; preds = %10
  ret void

; <label>:73:                                     ; preds = %10
  %74 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %6, align 8
  %75 = icmp ne %"struct.std::_Rb_tree_node.27"* %74, null
  store i32 -1510075997, i32* %9
  br label %76

; <label>:76:                                     ; preds = %73, %61, %58, %40, %13, %12
  br label %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.27"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_beginEv(%"class.std::_Rb_tree.12"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.12"*, align 8
  store %"class.std::_Rb_tree.12"* %0, %"class.std::_Rb_tree.12"** %2, align 8
  %3 = load %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.12", %"class.std::_Rb_tree.12"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %4, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %5, i32 0, i32 1
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %6, align 8
  %8 = bitcast %"struct.std::_Rb_tree_node_base"* %7 to %"struct.std::_Rb_tree_node.27"*
  ret %"struct.std::_Rb_tree_node.27"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE13_Rb_tree_implIS6_Lb1EED2Ev(%"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.502
  %5 = load i32, i32* @y.503
  %6 = add i32 %4, 27407234
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 27407234
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1669005673, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %50
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1669005673, label %18
    i32 1609505684, label %26
    i32 2080077574, label %45
    i32 118499128, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %50

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1609505684, i32 118499128
  store i32 %25, i32* %14
  br label %50

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"** %27, align 8
  %28 = load %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"** %27, align 8
  %29 = bitcast %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %28 to %"class.std::allocator.13"*
  call void @_ZNSaISt13_Rb_tree_nodeISt6vectorIxSaIxEEEED2Ev(%"class.std::allocator.13"* %29) #3
  %30 = load i32, i32* @x.502
  %31 = load i32, i32* @y.503
  %32 = add i32 %30, -1559605424
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -1559605424
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 2080077574, i32 118499128
  store i32 %44, i32* %14
  br label %50

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"*, align 8
  store %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %0, %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"** %47, align 8
  %48 = load %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"*, %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"** %47, align 8
  %49 = bitcast %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %48 to %"class.std::allocator.13"*
  call void @_ZNSaISt13_Rb_tree_nodeISt6vectorIxSaIxEEEED2Ev(%"class.std::allocator.13"* %49) #3
  store i32 1609505684, i32* %14
  br label %50

; <label>:50:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.27"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 3
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node.27"*
  ret %"struct.std::_Rb_tree_node.27"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.27"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %3, i32 0, i32 2
  %5 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %6 = bitcast %"struct.std::_Rb_tree_node_base"* %5 to %"struct.std::_Rb_tree_node.27"*
  ret %"struct.std::_Rb_tree_node.27"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE12_M_drop_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.12"*, %"struct.std::_Rb_tree_node.27"*) #4 comdat align 2 {
  %3 = alloca %"class.std::_Rb_tree.12"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node.27"*, align 8
  store %"class.std::_Rb_tree.12"* %0, %"class.std::_Rb_tree.12"** %3, align 8
  store %"struct.std::_Rb_tree_node.27"* %1, %"struct.std::_Rb_tree_node.27"** %4, align 8
  %5 = load %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %3, align 8
  %6 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %4, align 8
  call void @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.12"* %5, %"struct.std::_Rb_tree_node.27"* %6) #3
  %7 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %4, align 8
  call void @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.12"* %5, %"struct.std::_Rb_tree_node.27"* %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE15_M_destroy_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.12"*, %"struct.std::_Rb_tree_node.27"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Rb_tree.12"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node.27"*, align 8
  store %"class.std::_Rb_tree.12"* %0, %"class.std::_Rb_tree.12"** %3, align 8
  store %"struct.std::_Rb_tree_node.27"* %1, %"struct.std::_Rb_tree_node.27"** %4, align 8
  %5 = load %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %3, align 8
  %6 = call dereferenceable(1) %"class.std::allocator.13"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.12"* %5) #3
  %7 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %4, align 8
  %8 = invoke %"class.std::vector"* @_ZNSt13_Rb_tree_nodeISt6vectorIxSaIxEEE9_M_valptrEv(%"struct.std::_Rb_tree_node.27"* %7)
          to label %9 unwind label %12

; <label>:9:                                      ; preds = %2
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt6vectorIxSaIxEEEEE7destroyIS3_EEvRS5_PT_(%"class.std::allocator.13"* dereferenceable(1) %6, %"class.std::vector"* %8)
          to label %10 unwind label %12

; <label>:10:                                     ; preds = %9
  %11 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %4, align 8
  ret void

; <label>:12:                                     ; preds = %9, %2
  %13 = landingpad { i8*, i32 }
          catch i8* null
  %14 = extractvalue { i8*, i32 } %13, 0
  call void @__clang_call_terminate(i8* %14) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.12"*, %"struct.std::_Rb_tree_node.27"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Rb_tree.12"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node.27"*, align 8
  store %"class.std::_Rb_tree.12"* %0, %"class.std::_Rb_tree.12"** %3, align 8
  store %"struct.std::_Rb_tree_node.27"* %1, %"struct.std::_Rb_tree_node.27"** %4, align 8
  %5 = load %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %3, align 8
  %6 = call dereferenceable(1) %"class.std::allocator.13"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.12"* %5) #3
  %7 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %4, align 8
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt6vectorIxSaIxEEEEE10deallocateERS5_PS4_m(%"class.std::allocator.13"* dereferenceable(1) %6, %"struct.std::_Rb_tree_node.27"* %7, i64 1)
          to label %8 unwind label %51

; <label>:8:                                      ; preds = %2
  %9 = load i32, i32* @x.512
  %10 = load i32, i32* @y.513
  %11 = sub i32 %9, 2112585859
  %12 = sub i32 %11, 1
  %13 = add i32 %12, 2112585859
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %10, 10
  %19 = xor i1 %17, true
  %20 = xor i1 %18, true
  %21 = xor i1 true, true
  %22 = and i1 %19, true
  %23 = and i1 %17, %21
  %24 = and i1 %20, true
  %25 = and i1 %18, %21
  %26 = or i1 %22, %23
  %27 = or i1 %24, %25
  %28 = xor i1 %26, %27
  %29 = or i1 %19, %20
  %30 = xor i1 %29, true
  %31 = or i1 true, %21
  %32 = and i1 %30, %31
  %33 = or i1 %28, %32
  %34 = or i1 %17, %18
  br i1 %33, label %35, label %54

; <label>:35:                                     ; preds = %8, %54
  %36 = load i32, i32* @x.512
  %37 = load i32, i32* @y.513
  %38 = add i32 %36, 706735774
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, 706735774
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  br i1 %48, label %50, label %54

; <label>:50:                                     ; preds = %35
  ret void

; <label>:51:                                     ; preds = %2
  %52 = landingpad { i8*, i32 }
          catch i8* null
  %53 = extractvalue { i8*, i32 } %52, 0
  call void @__clang_call_terminate(i8* %53) #11
  unreachable

; <label>:54:                                     ; preds = %35, %8
  br label %35
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt6vectorIxSaIxEEEEE7destroyIS3_EEvRS5_PT_(%"class.std::allocator.13"* dereferenceable(1), %"class.std::vector"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.514
  %6 = load i32, i32* @y.515
  %7 = sub i32 %5, -1276338065
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1276338065
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 328567314, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %55
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 328567314, label %19
    i32 363879101, label %27
    i32 1041982310, label %48
    i32 1432112025, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %55

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 363879101, i32 1432112025
  store i32 %26, i32* %15
  br label %55

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.13"*, align 8
  %29 = alloca %"class.std::vector"*, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %28, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %29, align 8
  %30 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %28, align 8
  %31 = bitcast %"class.std::allocator.13"* %30 to %"class.__gnu_cxx::new_allocator.14"*
  %32 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt6vectorIxSaIxEEEE7destroyIS4_EEvPT_(%"class.__gnu_cxx::new_allocator.14"* %31, %"class.std::vector"* %32)
  %33 = load i32, i32* @x.514
  %34 = load i32, i32* @y.515
  %35 = add i32 %33, -252071401
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -252071401
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 1041982310, i32 1432112025
  store i32 %47, i32* %15
  br label %55

; <label>:48:                                     ; preds = %16
  ret void

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::allocator.13"*, align 8
  %51 = alloca %"class.std::vector"*, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %50, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %51, align 8
  %52 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %50, align 8
  %53 = bitcast %"class.std::allocator.13"* %52 to %"class.__gnu_cxx::new_allocator.14"*
  %54 = load %"class.std::vector"*, %"class.std::vector"** %51, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt6vectorIxSaIxEEEE7destroyIS4_EEvPT_(%"class.__gnu_cxx::new_allocator.14"* %53, %"class.std::vector"* %54)
  store i32 363879101, i32* %15
  br label %55

; <label>:55:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.13"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.12"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Rb_tree.12"*, align 8
  store %"class.std::_Rb_tree.12"* %0, %"class.std::_Rb_tree.12"** %2, align 8
  %3 = load %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Rb_tree.12", %"class.std::_Rb_tree.12"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %4 to %"class.std::allocator.13"*
  ret %"class.std::allocator.13"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector"* @_ZNSt13_Rb_tree_nodeISt6vectorIxSaIxEEE9_M_valptrEv(%"struct.std::_Rb_tree_node.27"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.27"*, align 8
  store %"struct.std::_Rb_tree_node.27"* %0, %"struct.std::_Rb_tree_node.27"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node.27", %"struct.std::_Rb_tree_node.27"* %3, i32 0, i32 1
  %5 = call %"class.std::vector"* @_ZN9__gnu_cxx16__aligned_membufISt6vectorIxSaIxEEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.28"* %4) #3
  ret %"class.std::vector"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt6vectorIxSaIxEEEE7destroyIS4_EEvPT_(%"class.__gnu_cxx::new_allocator.14"*, %"class.std::vector"*) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.520
  %6 = load i32, i32* @y.521
  %7 = sub i32 %5, -1798221783
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1798221783
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 160585935, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 160585935, label %19
    i32 -2135794147, label %27
    i32 -70940472, label %58
    i32 -1462875788, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -2135794147, i32 -1462875788
  store i32 %26, i32* %15
  br label %64

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  %29 = alloca %"class.std::vector"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %28, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %29, align 8
  %30 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %28, align 8
  %31 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector"* %31) #3
  %32 = load i32, i32* @x.520
  %33 = load i32, i32* @y.521
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -70940472, i32 -1462875788
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  ret void

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  %61 = alloca %"class.std::vector"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %60, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %61, align 8
  %62 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %60, align 8
  %63 = load %"class.std::vector"*, %"class.std::vector"** %61, align 8
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector"* %63) #3
  store i32 -2135794147, i32* %15
  br label %64

; <label>:64:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector"* @_ZN9__gnu_cxx16__aligned_membufISt6vectorIxSaIxEEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.28"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf.28"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.28"* %0, %"struct.__gnu_cxx::__aligned_membuf.28"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf.28"*, %"struct.__gnu_cxx::__aligned_membuf.28"** %2, align 8
  %4 = call i8* @_ZN9__gnu_cxx16__aligned_membufISt6vectorIxSaIxEEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf.28"* %3) #3
  %5 = bitcast i8* %4 to %"class.std::vector"*
  ret %"class.std::vector"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZN9__gnu_cxx16__aligned_membufISt6vectorIxSaIxEEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf.28"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf.28"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.28"* %0, %"struct.__gnu_cxx::__aligned_membuf.28"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf.28"*, %"struct.__gnu_cxx::__aligned_membuf.28"** %2, align 8
  %4 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf.28", %"struct.__gnu_cxx::__aligned_membuf.28"* %3, i32 0, i32 0
  %5 = bitcast [24 x i8]* %4 to i8*
  ret i8* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt6vectorIxSaIxEEEEE10deallocateERS5_PS4_m(%"class.std::allocator.13"* dereferenceable(1), %"struct.std::_Rb_tree_node.27"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.13"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node.27"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %4, align 8
  store %"struct.std::_Rb_tree_node.27"* %1, %"struct.std::_Rb_tree_node.27"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %4, align 8
  %8 = bitcast %"class.std::allocator.13"* %7 to %"class.__gnu_cxx::new_allocator.14"*
  %9 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt6vectorIxSaIxEEEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.14"* %8, %"struct.std::_Rb_tree_node.27"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt6vectorIxSaIxEEEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.14"*, %"struct.std::_Rb_tree_node.27"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node.27"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %4, align 8
  store %"struct.std::_Rb_tree_node.27"* %1, %"struct.std::_Rb_tree_node.27"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %4, align 8
  %8 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %5, align 8
  %9 = bitcast %"struct.std::_Rb_tree_node.27"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EESaIS7_EE13_M_deallocateEPS7_m(%"struct.std::_Vector_base.8"*, %"class.std::multiset"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::multiset"*
  %5 = alloca %"struct.std::_Vector_base.8"*
  %6 = alloca %"struct.std::_Vector_base.8"*, align 8
  %7 = alloca %"class.std::multiset"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.8"* %0, %"struct.std::_Vector_base.8"** %6, align 8
  store %"class.std::multiset"* %1, %"class.std::multiset"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %6, align 8
  store %"struct.std::_Vector_base.8"* %9, %"struct.std::_Vector_base.8"** %5
  %10 = load %"class.std::multiset"*, %"class.std::multiset"** %7, align 8
  store %"class.std::multiset"* %10, %"class.std::multiset"** %4
  %11 = alloca i32
  store i32 -1078133660, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %107
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -1078133660, label %15
    i32 1745454688, label %19
    i32 -269326294, label %34
    i32 831856225, label %55
    i32 -1676125423, label %56
    i32 -178207110, label %83
    i32 429559499, label %99
    i32 -1740113036, label %100
    i32 954226028, label %106
  ]

; <label>:14:                                     ; preds = %12
  br label %107

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::multiset"*, %"class.std::multiset"** %4
  %17 = icmp ne %"class.std::multiset"* %16, null
  %18 = select i1 %17, i32 1745454688, i32 -1676125423
  store i32 %18, i32* %11
  br label %107

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.530
  %21 = load i32, i32* @y.531
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  %33 = select i1 %31, i32 -269326294, i32 -1740113036
  store i32 %33, i32* %11
  br label %107

; <label>:34:                                     ; preds = %12
  %35 = load volatile %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %5
  %36 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %35, i32 0, i32 0
  %37 = bitcast %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %36 to %"class.std::allocator.9"*
  %38 = load %"class.std::multiset"*, %"class.std::multiset"** %7, align 8
  %39 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EEEE10deallocateERS8_PS7_m(%"class.std::allocator.9"* dereferenceable(1) %37, %"class.std::multiset"* %38, i64 %39)
  %40 = load i32, i32* @x.530
  %41 = load i32, i32* @y.531
  %42 = add i32 %40, 1948799424
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, 1948799424
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 831856225, i32 -1740113036
  store i32 %54, i32* %11
  br label %107

; <label>:55:                                     ; preds = %12
  store i32 -1676125423, i32* %11
  br label %107

; <label>:56:                                     ; preds = %12
  %57 = load i32, i32* @x.530
  %58 = load i32, i32* @y.531
  %59 = sub i32 0, 1
  %60 = add i32 %57, %59
  %61 = sub i32 %57, 1
  %62 = mul i32 %57, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %58, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 false, true
  %69 = and i1 %66, false
  %70 = and i1 %64, %68
  %71 = and i1 %67, false
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 false, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  %82 = select i1 %80, i32 -178207110, i32 954226028
  store i32 %82, i32* %11
  br label %107

; <label>:83:                                     ; preds = %12
  %84 = load i32, i32* @x.530
  %85 = load i32, i32* @y.531
  %86 = add i32 %84, -2055859693
  %87 = sub i32 %86, 1
  %88 = sub i32 %87, -2055859693
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = and i1 %92, %93
  %95 = xor i1 %92, %93
  %96 = or i1 %94, %95
  %97 = or i1 %92, %93
  %98 = select i1 %96, i32 429559499, i32 954226028
  store i32 %98, i32* %11
  br label %107

; <label>:99:                                     ; preds = %12
  ret void

; <label>:100:                                    ; preds = %12
  %101 = load volatile %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %5
  %102 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %101, i32 0, i32 0
  %103 = bitcast %"struct.std::_Vector_base<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >, std::allocator<std::multiset<std::vector<long long, std::allocator<long long> >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > > > >::_Vector_impl"* %102 to %"class.std::allocator.9"*
  %104 = load %"class.std::multiset"*, %"class.std::multiset"** %7, align 8
  %105 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EEEE10deallocateERS8_PS7_m(%"class.std::allocator.9"* dereferenceable(1) %103, %"class.std::multiset"* %104, i64 %105)
  store i32 -269326294, i32* %11
  br label %107

; <label>:106:                                    ; preds = %12
  store i32 -178207110, i32* %11
  br label %107

; <label>:107:                                    ; preds = %106, %100, %83, %56, %55, %34, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EEEE10deallocateERS8_PS7_m(%"class.std::allocator.9"* dereferenceable(1), %"class.std::multiset"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.9"*, align 8
  %5 = alloca %"class.std::multiset"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %4, align 8
  store %"class.std::multiset"* %1, %"class.std::multiset"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %4, align 8
  %8 = bitcast %"class.std::allocator.9"* %7 to %"class.__gnu_cxx::new_allocator.10"*
  %9 = load %"class.std::multiset"*, %"class.std::multiset"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt8multisetISt6vectorIxSaIxEESt4lessIS4_ESaIS4_EEE10deallocateEPS8_m(%"class.__gnu_cxx::new_allocator.10"* %8, %"class.std::multiset"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt8multisetISt6vectorIxSaIxEESt4lessIS4_ESaIS4_EEE10deallocateEPS8_m(%"class.__gnu_cxx::new_allocator.10"*, %"class.std::multiset"*, i64) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.534
  %7 = load i32, i32* @y.535
  %8 = sub i32 %6, 1145029663
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1145029663
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -533847367, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %58
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -533847367, label %20
    i32 -1257673913, label %28
    i32 -2061135761, label %50
    i32 282309632, label %51
  ]

; <label>:19:                                     ; preds = %17
  br label %58

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1257673913, i32 282309632
  store i32 %27, i32* %16
  br label %58

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %30 = alloca %"class.std::multiset"*, align 8
  %31 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %29, align 8
  store %"class.std::multiset"* %1, %"class.std::multiset"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %29, align 8
  %33 = load %"class.std::multiset"*, %"class.std::multiset"** %30, align 8
  %34 = bitcast %"class.std::multiset"* %33 to i8*
  call void @_ZdlPv(i8* %34) #3
  %35 = load i32, i32* @x.534
  %36 = load i32, i32* @y.535
  %37 = add i32 %35, -722902750
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -722902750
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 -2061135761, i32 282309632
  store i32 %49, i32* %16
  br label %58

; <label>:50:                                     ; preds = %17
  ret void

; <label>:51:                                     ; preds = %17
  %52 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %53 = alloca %"class.std::multiset"*, align 8
  %54 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %52, align 8
  store %"class.std::multiset"* %1, %"class.std::multiset"** %53, align 8
  store i64 %2, i64* %54, align 8
  %55 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %52, align 8
  %56 = load %"class.std::multiset"*, %"class.std::multiset"** %53, align 8
  %57 = bitcast %"class.std::multiset"* %56 to i8*
  call void @_ZdlPv(i8* %57) #3
  store i32 -1257673913, i32* %16
  br label %58

; <label>:58:                                     ; preds = %51, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EES7_EvT_S9_RSaIT0_E(%"class.std::multiset"*, %"class.std::multiset"*, %"class.std::allocator.9"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.536
  %7 = load i32, i32* @y.537
  %8 = add i32 %6, 1234774160
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1234774160
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1057937498, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %56
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1057937498, label %20
    i32 1874040862, label %28
    i32 826057654, label %49
    i32 1694576590, label %50
  ]

; <label>:19:                                     ; preds = %17
  br label %56

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1874040862, i32 1694576590
  store i32 %27, i32* %16
  br label %56

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::multiset"*, align 8
  %30 = alloca %"class.std::multiset"*, align 8
  %31 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::multiset"* %0, %"class.std::multiset"** %29, align 8
  store %"class.std::multiset"* %1, %"class.std::multiset"** %30, align 8
  store %"class.std::allocator.9"* %2, %"class.std::allocator.9"** %31, align 8
  %32 = load %"class.std::multiset"*, %"class.std::multiset"** %29, align 8
  %33 = load %"class.std::multiset"*, %"class.std::multiset"** %30, align 8
  call void @_ZSt8_DestroyIPSt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EEEvT_S9_(%"class.std::multiset"* %32, %"class.std::multiset"* %33)
  %34 = load i32, i32* @x.536
  %35 = load i32, i32* @y.537
  %36 = add i32 %34, -780744134
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, -780744134
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 826057654, i32 1694576590
  store i32 %48, i32* %16
  br label %56

; <label>:49:                                     ; preds = %17
  ret void

; <label>:50:                                     ; preds = %17
  %51 = alloca %"class.std::multiset"*, align 8
  %52 = alloca %"class.std::multiset"*, align 8
  %53 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::multiset"* %0, %"class.std::multiset"** %51, align 8
  store %"class.std::multiset"* %1, %"class.std::multiset"** %52, align 8
  store %"class.std::allocator.9"* %2, %"class.std::allocator.9"** %53, align 8
  %54 = load %"class.std::multiset"*, %"class.std::multiset"** %51, align 8
  %55 = load %"class.std::multiset"*, %"class.std::multiset"** %52, align 8
  call void @_ZSt8_DestroyIPSt8multisetISt6vectorIxSaIxEESt4lessIS3_ESaIS3_EEEvT_S9_(%"class.std::multiset"* %54, %"class.std::multiset"* %55)
  store i32 1874040862, i32* %16
  br label %56

; <label>:56:                                     ; preds = %50, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE5beginEv(%"class.std::_Rb_tree.0"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %3 = alloca %"class.std::_Rb_tree.0"*, align 8
  store %"class.std::_Rb_tree.0"* %0, %"class.std::_Rb_tree.0"** %3, align 8
  %4 = load %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree.0", %"class.std::_Rb_tree.0"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %5, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %6, i32 0, i32 2
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  call void @_ZNSt23_Rb_tree_const_iteratorIxEC2EPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_const_iterator"* %2, %"struct.std::_Rb_tree_node_base"* %8) #3
  %9 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %2, i32 0, i32 0
  %10 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %9, align 8
  ret %"struct.std::_Rb_tree_node_base"* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt23_Rb_tree_const_iteratorIxEC2EPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_node_base"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.540
  %6 = load i32, i32* @y.541
  %7 = sub i32 %5, -473169829
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -473169829
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1301533260, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1301533260, label %19
    i32 287422606, label %27
    i32 972321399, label %47
    i32 1712843028, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 287422606, i32 1712843028
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %29 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %28, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %29, align 8
  %30 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %28, align 8
  %31 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %30, i32 0, i32 0
  %32 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %29, align 8
  store %"struct.std::_Rb_tree_node_base"* %32, %"struct.std::_Rb_tree_node_base"** %31, align 8
  %33 = load i32, i32* @x.540
  %34 = load i32, i32* @y.541
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 972321399, i32 1712843028
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  ret void

; <label>:48:                                     ; preds = %16
  %49 = alloca %"struct.std::_Rb_tree_const_iterator"*, align 8
  %50 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_const_iterator"* %0, %"struct.std::_Rb_tree_const_iterator"** %49, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %50, align 8
  %51 = load %"struct.std::_Rb_tree_const_iterator"*, %"struct.std::_Rb_tree_const_iterator"** %49, align 8
  %52 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %51, i32 0, i32 0
  %53 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %50, align 8
  store %"struct.std::_Rb_tree_node_base"* %53, %"struct.std::_Rb_tree_node_base"** %52, align 8
  store i32 287422606, i32* %15
  br label %54

; <label>:54:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeIxxSt9_IdentityIxESt4lessIxESaIxEE3endEv(%"class.std::_Rb_tree.0"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_const_iterator", align 8
  %3 = alloca %"class.std::_Rb_tree.0"*, align 8
  store %"class.std::_Rb_tree.0"* %0, %"class.std::_Rb_tree.0"** %3, align 8
  %4 = load %"class.std::_Rb_tree.0"*, %"class.std::_Rb_tree.0"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree.0", %"class.std::_Rb_tree.0"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_Rb_tree_impl"* %5, i32 0, i32 1
  call void @_ZNSt23_Rb_tree_const_iteratorIxEC2EPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_const_iterator"* %2, %"struct.std::_Rb_tree_node_base"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator", %"struct.std::_Rb_tree_const_iterator"* %2, i32 0, i32 0
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_node_base"* %8
}

; Function Attrs: nounwind readonly
declare %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #12

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeIxSt4pairIKxSt6vectorIxSaIxEEESt10_Select1stIS5_ESt4lessIxESaIS5_EE3endEv(%"class.std::_Rb_tree"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_iterator", align 8
  %3 = alloca %"class.std::_Rb_tree"*, align 8
  store %"class.std::_Rb_tree"* %0, %"class.std::_Rb_tree"** %3, align 8
  %4 = load %"class.std::_Rb_tree"*, %"class.std::_Rb_tree"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree", %"class.std::_Rb_tree"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<long long, std::pair<const long long, std::vector<long long, std::allocator<long long> > >, std::_Select1st<std::pair<const long long, std::vector<long long, std::allocator<long long> > > >, std::less<long long>, std::allocator<std::pair<const long long, std::vector<long long, std::allocator<long long> > > > >::_Rb_tree_impl"* %5, i32 0, i32 1
  call void @_ZNSt17_Rb_tree_iteratorISt4pairIKxSt6vectorIxSaIxEEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator"* %2, %"struct.std::_Rb_tree_node_base"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_iterator", %"struct.std::_Rb_tree_iterator"* %2, i32 0, i32 0
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_node_base"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE15_M_insert_equalIS2_EESt17_Rb_tree_iteratorIS2_EOT_(%"class.std::_Rb_tree.12"*, %"class.std::vector"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator.29", align 8
  %4 = alloca %"class.std::_Rb_tree.12"*, align 8
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca %"struct.std::pair.22", align 8
  %7 = alloca %"struct.std::_Identity.30", align 1
  %8 = alloca %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node", align 8
  store %"class.std::_Rb_tree.12"* %0, %"class.std::_Rb_tree.12"** %4, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %5, align 8
  %9 = load %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %4, align 8
  %10 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %11 = call dereferenceable(24) %"class.std::vector"* @_ZNKSt9_IdentityISt6vectorIxSaIxEEEclERS2_(%"struct.std::_Identity.30"* %7, %"class.std::vector"* dereferenceable(24) %10)
  %12 = call { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE23_M_get_insert_equal_posERKS2_(%"class.std::_Rb_tree.12"* %9, %"class.std::vector"* dereferenceable(24) %11)
  %13 = bitcast %"struct.std::pair.22"* %6 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %14 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %13, i32 0, i32 0
  %15 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %12, 0
  store %"struct.std::_Rb_tree_node_base"* %15, %"struct.std::_Rb_tree_node_base"** %14, align 8
  %16 = getelementptr inbounds { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %13, i32 0, i32 1
  %17 = extractvalue { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %12, 1
  store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %16, align 8
  call void @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_Alloc_nodeC2ERS8_(%"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node"* %8, %"class.std::_Rb_tree.12"* dereferenceable(48) %9)
  %18 = getelementptr inbounds %"struct.std::pair.22", %"struct.std::pair.22"* %6, i32 0, i32 0
  %19 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %18, align 8
  %20 = getelementptr inbounds %"struct.std::pair.22", %"struct.std::pair.22"* %6, i32 0, i32 1
  %21 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %20, align 8
  %22 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %23 = call dereferenceable(24) %"class.std::vector"* @_ZSt7forwardISt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::vector"* dereferenceable(24) %22) #3
  %24 = call %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSE_OT_RT0_(%"class.std::_Rb_tree.12"* %9, %"struct.std::_Rb_tree_node_base"* %19, %"struct.std::_Rb_tree_node_base"* %21, %"class.std::vector"* dereferenceable(24) %23, %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node"* dereferenceable(8) %8)
  %25 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.29", %"struct.std::_Rb_tree_iterator.29"* %3, i32 0, i32 0
  store %"struct.std::_Rb_tree_node_base"* %24, %"struct.std::_Rb_tree_node_base"** %25, align 8
  %26 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.29", %"struct.std::_Rb_tree_iterator.29"* %3, i32 0, i32 0
  %27 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %26, align 8
  ret %"struct.std::_Rb_tree_node_base"* %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector"* @_ZSt4moveIRSt6vectorIxSaIxEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::vector"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  ret %"class.std::vector"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt23_Rb_tree_const_iteratorISt6vectorIxSaIxEEEC2ERKSt17_Rb_tree_iteratorIS2_E(%"struct.std::_Rb_tree_const_iterator.19"*, %"struct.std::_Rb_tree_iterator.29"* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator.19"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_iterator.29"*, align 8
  store %"struct.std::_Rb_tree_const_iterator.19"* %0, %"struct.std::_Rb_tree_const_iterator.19"** %3, align 8
  store %"struct.std::_Rb_tree_iterator.29"* %1, %"struct.std::_Rb_tree_iterator.29"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_const_iterator.19"*, %"struct.std::_Rb_tree_const_iterator.19"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.19", %"struct.std::_Rb_tree_const_iterator.19"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_iterator.29"*, %"struct.std::_Rb_tree_iterator.29"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.29", %"struct.std::_Rb_tree_iterator.29"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8, align 8
  store %"struct.std::_Rb_tree_node_base"* %9, %"struct.std::_Rb_tree_node_base"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE23_M_get_insert_equal_posERKS2_(%"class.std::_Rb_tree.12"*, %"class.std::vector"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }
  %4 = alloca i1
  %5 = alloca %"class.std::_Rb_tree.12"*
  %6 = alloca %"struct.std::_Rb_tree_node.27"**
  %7 = alloca %"struct.std::_Rb_tree_node.27"**
  %8 = alloca %"class.std::vector"**
  %9 = alloca %"struct.std::pair.22"*
  %10 = alloca i1
  %11 = alloca i1
  %12 = load i32, i32* @x.552
  %13 = load i32, i32* @y.553
  %14 = sub i32 0, 1
  %15 = add i32 %12, %14
  %16 = sub i32 %12, 1
  %17 = mul i32 %12, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  store i1 %19, i1* %11
  %20 = icmp slt i32 %13, 10
  store i1 %20, i1* %10
  %21 = alloca i32
  store i32 322288307, i32* %21
  %22 = alloca %"struct.std::_Rb_tree_node.27"*
  br label %23

; <label>:23:                                     ; preds = %2, %233
  %24 = load i32, i32* %21
  switch i32 %24, label %25 [
    i32 322288307, label %26
    i32 -970235717, label %46
    i32 -1508322458, label %87
    i32 429509058, label %88
    i32 1812918107, label %93
    i32 -857219135, label %109
    i32 -26732004, label %137
    i32 453259195, label %140
    i32 -707815238, label %145
    i32 -527858078, label %150
    i32 1228325048, label %153
    i32 -403483645, label %169
    i32 2008339116, label %202
    i32 1344244726, label %204
    i32 1210201783, label %213
    i32 -108315740, label %226
  ]

; <label>:25:                                     ; preds = %23
  br label %233

; <label>:26:                                     ; preds = %23
  %27 = load volatile i1, i1* %11
  %28 = load volatile i1, i1* %10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 true, true
  %32 = and i1 %29, true
  %33 = and i1 %27, %31
  %34 = and i1 %30, true
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 true, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  %45 = select i1 %43, i32 -970235717, i32 1344244726
  store i32 %45, i32* %21
  br label %233

; <label>:46:                                     ; preds = %23
  %47 = alloca %"struct.std::pair.22", align 8
  store %"struct.std::pair.22"* %47, %"struct.std::pair.22"** %9
  %48 = alloca %"class.std::_Rb_tree.12"*, align 8
  %49 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"** %49, %"class.std::vector"*** %8
  %50 = alloca %"struct.std::_Rb_tree_node.27"*, align 8
  store %"struct.std::_Rb_tree_node.27"** %50, %"struct.std::_Rb_tree_node.27"*** %7
  %51 = alloca %"struct.std::_Rb_tree_node.27"*, align 8
  store %"struct.std::_Rb_tree_node.27"** %51, %"struct.std::_Rb_tree_node.27"*** %6
  store %"class.std::_Rb_tree.12"* %0, %"class.std::_Rb_tree.12"** %48, align 8
  %52 = load volatile %"class.std::vector"**, %"class.std::vector"*** %8
  store %"class.std::vector"* %1, %"class.std::vector"** %52, align 8
  %53 = load %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %48, align 8
  store %"class.std::_Rb_tree.12"* %53, %"class.std::_Rb_tree.12"** %5
  %54 = load volatile %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %5
  %55 = call %"struct.std::_Rb_tree_node.27"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_beginEv(%"class.std::_Rb_tree.12"* %54) #3
  %56 = load volatile %"struct.std::_Rb_tree_node.27"**, %"struct.std::_Rb_tree_node.27"*** %7
  store %"struct.std::_Rb_tree_node.27"* %55, %"struct.std::_Rb_tree_node.27"** %56, align 8
  %57 = load volatile %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %5
  %58 = call %"struct.std::_Rb_tree_node.27"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE6_M_endEv(%"class.std::_Rb_tree.12"* %57) #3
  %59 = load volatile %"struct.std::_Rb_tree_node.27"**, %"struct.std::_Rb_tree_node.27"*** %6
  store %"struct.std::_Rb_tree_node.27"* %58, %"struct.std::_Rb_tree_node.27"** %59, align 8
  %60 = load i32, i32* @x.552
  %61 = load i32, i32* @y.553
  %62 = add i32 %60, -186141719
  %63 = sub i32 %62, 1
  %64 = sub i32 %63, -186141719
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 true, true
  %73 = and i1 %70, true
  %74 = and i1 %68, %72
  %75 = and i1 %71, true
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 true, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  %86 = select i1 %84, i32 -1508322458, i32 1344244726
  store i32 %86, i32* %21
  br label %233

; <label>:87:                                     ; preds = %23
  store i32 429509058, i32* %21
  br label %233

; <label>:88:                                     ; preds = %23
  %89 = load volatile %"struct.std::_Rb_tree_node.27"**, %"struct.std::_Rb_tree_node.27"*** %7
  %90 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %89, align 8
  %91 = icmp ne %"struct.std::_Rb_tree_node.27"* %90, null
  %92 = select i1 %91, i32 1812918107, i32 1228325048
  store i32 %92, i32* %21
  br label %233

; <label>:93:                                     ; preds = %23
  %94 = load i32, i32* @x.552
  %95 = load i32, i32* @y.553
  %96 = add i32 %94, -1476098255
  %97 = sub i32 %96, 1
  %98 = sub i32 %97, -1476098255
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = and i1 %102, %103
  %105 = xor i1 %102, %103
  %106 = or i1 %104, %105
  %107 = or i1 %102, %103
  %108 = select i1 %106, i32 -857219135, i32 1210201783
  store i32 %108, i32* %21
  br label %233

; <label>:109:                                    ; preds = %23
  %110 = load volatile %"struct.std::_Rb_tree_node.27"**, %"struct.std::_Rb_tree_node.27"*** %7
  %111 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %110, align 8
  %112 = load volatile %"struct.std::_Rb_tree_node.27"**, %"struct.std::_Rb_tree_node.27"*** %6
  store %"struct.std::_Rb_tree_node.27"* %111, %"struct.std::_Rb_tree_node.27"** %112, align 8
  %113 = load volatile %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %5
  %114 = getelementptr inbounds %"class.std::_Rb_tree.12", %"class.std::_Rb_tree.12"* %113, i32 0, i32 0
  %115 = getelementptr inbounds %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %114, i32 0, i32 0
  %116 = load volatile %"class.std::vector"**, %"class.std::vector"*** %8
  %117 = load %"class.std::vector"*, %"class.std::vector"** %116, align 8
  %118 = load volatile %"struct.std::_Rb_tree_node.27"**, %"struct.std::_Rb_tree_node.27"*** %7
  %119 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %118, align 8
  %120 = call dereferenceable(24) %"class.std::vector"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E(%"struct.std::_Rb_tree_node.27"* %119)
  %121 = call zeroext i1 @_ZNKSt4lessISt6vectorIxSaIxEEEclERKS2_S5_(%"struct.std::less.16"* %115, %"class.std::vector"* dereferenceable(24) %117, %"class.std::vector"* dereferenceable(24) %120)
  store i1 %121, i1* %4
  %122 = load i32, i32* @x.552
  %123 = load i32, i32* @y.553
  %124 = add i32 %122, -1166803014
  %125 = sub i32 %124, 1
  %126 = sub i32 %125, -1166803014
  %127 = sub i32 %122, 1
  %128 = mul i32 %122, %126
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %123, 10
  %132 = and i1 %130, %131
  %133 = xor i1 %130, %131
  %134 = or i1 %132, %133
  %135 = or i1 %130, %131
  %136 = select i1 %134, i32 -26732004, i32 1210201783
  store i32 %136, i32* %21
  br label %233

; <label>:137:                                    ; preds = %23
  %138 = load volatile i1, i1* %4
  %139 = select i1 %138, i32 453259195, i32 -707815238
  store i32 %139, i32* %21
  br label %233

; <label>:140:                                    ; preds = %23
  %141 = load volatile %"struct.std::_Rb_tree_node.27"**, %"struct.std::_Rb_tree_node.27"*** %7
  %142 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %141, align 8
  %143 = bitcast %"struct.std::_Rb_tree_node.27"* %142 to %"struct.std::_Rb_tree_node_base"*
  %144 = call %"struct.std::_Rb_tree_node.27"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_S_leftEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %143) #3
  store i32 -527858078, i32* %21
  store %"struct.std::_Rb_tree_node.27"* %144, %"struct.std::_Rb_tree_node.27"** %22
  br label %233

; <label>:145:                                    ; preds = %23
  %146 = load volatile %"struct.std::_Rb_tree_node.27"**, %"struct.std::_Rb_tree_node.27"*** %7
  %147 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %146, align 8
  %148 = bitcast %"struct.std::_Rb_tree_node.27"* %147 to %"struct.std::_Rb_tree_node_base"*
  %149 = call %"struct.std::_Rb_tree_node.27"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_S_rightEPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %148) #3
  store i32 -527858078, i32* %21
  store %"struct.std::_Rb_tree_node.27"* %149, %"struct.std::_Rb_tree_node.27"** %22
  br label %233

; <label>:150:                                    ; preds = %23
  %151 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %22
  %152 = load volatile %"struct.std::_Rb_tree_node.27"**, %"struct.std::_Rb_tree_node.27"*** %7
  store %"struct.std::_Rb_tree_node.27"* %151, %"struct.std::_Rb_tree_node.27"** %152, align 8
  store i32 429509058, i32* %21
  br label %233

; <label>:153:                                    ; preds = %23
  %154 = load i32, i32* @x.552
  %155 = load i32, i32* @y.553
  %156 = sub i32 %154, -763060717
  %157 = sub i32 %156, 1
  %158 = add i32 %157, -763060717
  %159 = sub i32 %154, 1
  %160 = mul i32 %154, %158
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %155, 10
  %164 = and i1 %162, %163
  %165 = xor i1 %162, %163
  %166 = or i1 %164, %165
  %167 = or i1 %162, %163
  %168 = select i1 %166, i32 -403483645, i32 -108315740
  store i32 %168, i32* %21
  br label %233

; <label>:169:                                    ; preds = %23
  %170 = load volatile %"struct.std::pair.22"*, %"struct.std::pair.22"** %9
  %171 = load volatile %"struct.std::_Rb_tree_node.27"**, %"struct.std::_Rb_tree_node.27"*** %7
  %172 = load volatile %"struct.std::_Rb_tree_node.27"**, %"struct.std::_Rb_tree_node.27"*** %6
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeISt6vectorIxSaIxEEESA_vEEOT_OT0_(%"struct.std::pair.22"* %170, %"struct.std::_Rb_tree_node.27"** dereferenceable(8) %171, %"struct.std::_Rb_tree_node.27"** dereferenceable(8) %172)
  %173 = load volatile %"struct.std::pair.22"*, %"struct.std::pair.22"** %9
  %174 = bitcast %"struct.std::pair.22"* %173 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %175 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %174, align 8
  store { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %175, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %3
  %176 = load i32, i32* @x.552
  %177 = load i32, i32* @y.553
  %178 = sub i32 0, 1
  %179 = add i32 %176, %178
  %180 = sub i32 %176, 1
  %181 = mul i32 %176, %179
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %177, 10
  %185 = xor i1 %183, true
  %186 = xor i1 %184, true
  %187 = xor i1 false, true
  %188 = and i1 %185, false
  %189 = and i1 %183, %187
  %190 = and i1 %186, false
  %191 = and i1 %184, %187
  %192 = or i1 %188, %189
  %193 = or i1 %190, %191
  %194 = xor i1 %192, %193
  %195 = or i1 %185, %186
  %196 = xor i1 %195, true
  %197 = or i1 false, %187
  %198 = and i1 %196, %197
  %199 = or i1 %194, %198
  %200 = or i1 %183, %184
  %201 = select i1 %199, i32 2008339116, i32 -108315740
  store i32 %201, i32* %21
  br label %233

; <label>:202:                                    ; preds = %23
  %203 = load volatile { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %3
  ret { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* } %203

; <label>:204:                                    ; preds = %23
  %205 = alloca %"struct.std::pair.22", align 8
  %206 = alloca %"class.std::_Rb_tree.12"*, align 8
  %207 = alloca %"class.std::vector"*, align 8
  %208 = alloca %"struct.std::_Rb_tree_node.27"*, align 8
  %209 = alloca %"struct.std::_Rb_tree_node.27"*, align 8
  store %"class.std::_Rb_tree.12"* %0, %"class.std::_Rb_tree.12"** %206, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %207, align 8
  %210 = load %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %206, align 8
  %211 = call %"struct.std::_Rb_tree_node.27"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_beginEv(%"class.std::_Rb_tree.12"* %210) #3
  store %"struct.std::_Rb_tree_node.27"* %211, %"struct.std::_Rb_tree_node.27"** %208, align 8
  %212 = call %"struct.std::_Rb_tree_node.27"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE6_M_endEv(%"class.std::_Rb_tree.12"* %210) #3
  store %"struct.std::_Rb_tree_node.27"* %212, %"struct.std::_Rb_tree_node.27"** %209, align 8
  store i32 -970235717, i32* %21
  br label %233

; <label>:213:                                    ; preds = %23
  %214 = load volatile %"struct.std::_Rb_tree_node.27"**, %"struct.std::_Rb_tree_node.27"*** %7
  %215 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %214, align 8
  %216 = load volatile %"struct.std::_Rb_tree_node.27"**, %"struct.std::_Rb_tree_node.27"*** %6
  store %"struct.std::_Rb_tree_node.27"* %215, %"struct.std::_Rb_tree_node.27"** %216, align 8
  %217 = load volatile %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %5
  %218 = getelementptr inbounds %"class.std::_Rb_tree.12", %"class.std::_Rb_tree.12"* %217, i32 0, i32 0
  %219 = getelementptr inbounds %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %218, i32 0, i32 0
  %220 = load volatile %"class.std::vector"**, %"class.std::vector"*** %8
  %221 = load %"class.std::vector"*, %"class.std::vector"** %220, align 8
  %222 = load volatile %"struct.std::_Rb_tree_node.27"**, %"struct.std::_Rb_tree_node.27"*** %7
  %223 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %222, align 8
  %224 = call dereferenceable(24) %"class.std::vector"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E(%"struct.std::_Rb_tree_node.27"* %223)
  %225 = call zeroext i1 @_ZNKSt4lessISt6vectorIxSaIxEEEclERKS2_S5_(%"struct.std::less.16"* %219, %"class.std::vector"* dereferenceable(24) %221, %"class.std::vector"* dereferenceable(24) %224)
  store i32 -857219135, i32* %21
  br label %233

; <label>:226:                                    ; preds = %23
  %227 = load volatile %"struct.std::pair.22"*, %"struct.std::pair.22"** %9
  %228 = load volatile %"struct.std::_Rb_tree_node.27"**, %"struct.std::_Rb_tree_node.27"*** %7
  %229 = load volatile %"struct.std::_Rb_tree_node.27"**, %"struct.std::_Rb_tree_node.27"*** %6
  call void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeISt6vectorIxSaIxEEESA_vEEOT_OT0_(%"struct.std::pair.22"* %227, %"struct.std::_Rb_tree_node.27"** dereferenceable(8) %228, %"struct.std::_Rb_tree_node.27"** dereferenceable(8) %229)
  %230 = load volatile %"struct.std::pair.22"*, %"struct.std::pair.22"** %9
  %231 = bitcast %"struct.std::pair.22"* %230 to { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }*
  %232 = load { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }, { %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"* }* %231, align 8
  store i32 -403483645, i32* %21
  br label %233

; <label>:233:                                    ; preds = %226, %213, %204, %169, %153, %150, %145, %140, %137, %109, %93, %88, %87, %46, %26, %25
  br label %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector"* @_ZNKSt9_IdentityISt6vectorIxSaIxEEEclERS2_(%"struct.std::_Identity.30"*, %"class.std::vector"* dereferenceable(24)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Identity.30"*, align 8
  %4 = alloca %"class.std::vector"*, align 8
  store %"struct.std::_Identity.30"* %0, %"struct.std::_Identity.30"** %3, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %4, align 8
  %5 = load %"struct.std::_Identity.30"*, %"struct.std::_Identity.30"** %3, align 8
  %6 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  ret %"class.std::vector"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_Alloc_nodeC2ERS8_(%"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node"*, %"class.std::_Rb_tree.12"* dereferenceable(48)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node"*, align 8
  %4 = alloca %"class.std::_Rb_tree.12"*, align 8
  store %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node"* %0, %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node"** %3, align 8
  store %"class.std::_Rb_tree.12"* %1, %"class.std::_Rb_tree.12"** %4, align 8
  %5 = load %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node"*, %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node", %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node"* %5, i32 0, i32 0
  %7 = load %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %4, align 8
  store %"class.std::_Rb_tree.12"* %7, %"class.std::_Rb_tree.12"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSE_OT_RT0_(%"class.std::_Rb_tree.12"*, %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"*, %"class.std::vector"* dereferenceable(24), %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node"* dereferenceable(8)) #0 comdat align 2 {
  %6 = alloca i1
  %7 = alloca %"struct.std::_Rb_tree_node_base"*
  %8 = alloca %"struct.std::_Rb_tree_node_base"*
  %9 = alloca %"class.std::_Rb_tree.12"*
  %10 = alloca %"struct.std::_Rb_tree_iterator.29", align 8
  %11 = alloca %"class.std::_Rb_tree.12"*, align 8
  %12 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %13 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %14 = alloca %"class.std::vector"*, align 8
  %15 = alloca %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node"*, align 8
  %16 = alloca i8, align 1
  %17 = alloca %"struct.std::_Identity.30", align 1
  %18 = alloca %"struct.std::_Rb_tree_node.27"*, align 8
  store %"class.std::_Rb_tree.12"* %0, %"class.std::_Rb_tree.12"** %11, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %12, align 8
  store %"struct.std::_Rb_tree_node_base"* %2, %"struct.std::_Rb_tree_node_base"** %13, align 8
  store %"class.std::vector"* %3, %"class.std::vector"** %14, align 8
  store %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node"* %4, %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node"** %15, align 8
  %19 = load %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %11, align 8
  store %"class.std::_Rb_tree.12"* %19, %"class.std::_Rb_tree.12"** %9
  %20 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %12, align 8
  store %"struct.std::_Rb_tree_node_base"* %20, %"struct.std::_Rb_tree_node_base"** %8
  %21 = alloca i32
  store i32 1229298490, i32* %21
  %22 = alloca i1
  br label %23

; <label>:23:                                     ; preds = %5, %191
  %24 = load i32, i32* %21
  switch i32 %24, label %25 [
    i32 1229298490, label %26
    i32 -2004858241, label %30
    i32 -613496534, label %37
    i32 2135598406, label %46
    i32 -820521785, label %62
    i32 2020533171, label %116
    i32 -1792639753, label %118
  ]

; <label>:25:                                     ; preds = %23
  br label %191

; <label>:26:                                     ; preds = %23
  %27 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %8
  %28 = icmp ne %"struct.std::_Rb_tree_node_base"* %27, null
  %29 = select i1 %28, i32 2135598406, i32 -2004858241
  store i32 %29, i32* %21
  store i1 true, i1* %22
  br label %191

; <label>:30:                                     ; preds = %23
  %31 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %13, align 8
  %32 = load volatile %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %9
  %33 = call %"struct.std::_Rb_tree_node.27"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE6_M_endEv(%"class.std::_Rb_tree.12"* %32) #3
  %34 = bitcast %"struct.std::_Rb_tree_node.27"* %33 to %"struct.std::_Rb_tree_node_base"*
  %35 = icmp eq %"struct.std::_Rb_tree_node_base"* %31, %34
  %36 = select i1 %35, i32 2135598406, i32 -613496534
  store i32 %36, i32* %21
  store i1 true, i1* %22
  br label %191

; <label>:37:                                     ; preds = %23
  %38 = load volatile %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %9
  %39 = getelementptr inbounds %"class.std::_Rb_tree.12", %"class.std::_Rb_tree.12"* %38, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %39, i32 0, i32 0
  %41 = load %"class.std::vector"*, %"class.std::vector"** %14, align 8
  %42 = call dereferenceable(24) %"class.std::vector"* @_ZNKSt9_IdentityISt6vectorIxSaIxEEEclERS2_(%"struct.std::_Identity.30"* %17, %"class.std::vector"* dereferenceable(24) %41)
  %43 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %13, align 8
  %44 = call dereferenceable(24) %"class.std::vector"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %43)
  %45 = call zeroext i1 @_ZNKSt4lessISt6vectorIxSaIxEEEclERKS2_S5_(%"struct.std::less.16"* %40, %"class.std::vector"* dereferenceable(24) %42, %"class.std::vector"* dereferenceable(24) %44)
  store i32 2135598406, i32* %21
  store i1 %45, i1* %22
  br label %191

; <label>:46:                                     ; preds = %23
  %47 = load i1, i1* %22
  store i1 %47, i1* %6
  %48 = load i32, i32* @x.558
  %49 = load i32, i32* @y.559
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -820521785, i32 -1792639753
  store i32 %61, i32* %21
  br label %191

; <label>:62:                                     ; preds = %23
  %63 = load volatile i1, i1* %6
  %64 = zext i1 %63 to i8
  store i8 %64, i8* %16, align 1
  %65 = load %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node"*, %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node"** %15, align 8
  %66 = load %"class.std::vector"*, %"class.std::vector"** %14, align 8
  %67 = call dereferenceable(24) %"class.std::vector"* @_ZSt7forwardISt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::vector"* dereferenceable(24) %66) #3
  %68 = call %"struct.std::_Rb_tree_node.27"* @_ZNKSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_Alloc_nodeclIS2_EEPSt13_Rb_tree_nodeIS2_EOT_(%"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node"* %65, %"class.std::vector"* dereferenceable(24) %67)
  store %"struct.std::_Rb_tree_node.27"* %68, %"struct.std::_Rb_tree_node.27"** %18, align 8
  %69 = load i8, i8* %16, align 1
  %70 = trunc i8 %69 to i1
  %71 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %18, align 8
  %72 = bitcast %"struct.std::_Rb_tree_node.27"* %71 to %"struct.std::_Rb_tree_node_base"*
  %73 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %13, align 8
  %74 = load volatile %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %9
  %75 = getelementptr inbounds %"class.std::_Rb_tree.12", %"class.std::_Rb_tree.12"* %74, i32 0, i32 0
  %76 = getelementptr inbounds %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %75, i32 0, i32 1
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %70, %"struct.std::_Rb_tree_node_base"* %72, %"struct.std::_Rb_tree_node_base"* %73, %"struct.std::_Rb_tree_node_base"* dereferenceable(32) %76) #3
  %77 = load volatile %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %9
  %78 = getelementptr inbounds %"class.std::_Rb_tree.12", %"class.std::_Rb_tree.12"* %77, i32 0, i32 0
  %79 = getelementptr inbounds %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %78, i32 0, i32 2
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %80, -2231854082566635869
  %82 = add i64 %81, 1
  %83 = sub i64 %82, -2231854082566635869
  %84 = add i64 %80, 1
  store i64 %83, i64* %79, align 8
  %85 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %18, align 8
  %86 = bitcast %"struct.std::_Rb_tree_node.27"* %85 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt6vectorIxSaIxEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.29"* %10, %"struct.std::_Rb_tree_node_base"* %86) #3
  %87 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.29", %"struct.std::_Rb_tree_iterator.29"* %10, i32 0, i32 0
  %88 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %87, align 8
  store %"struct.std::_Rb_tree_node_base"* %88, %"struct.std::_Rb_tree_node_base"** %7
  %89 = load i32, i32* @x.558
  %90 = load i32, i32* @y.559
  %91 = sub i32 %89, 1418670794
  %92 = sub i32 %91, 1
  %93 = add i32 %92, 1418670794
  %94 = sub i32 %89, 1
  %95 = mul i32 %89, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %90, 10
  %99 = xor i1 %97, true
  %100 = xor i1 %98, true
  %101 = xor i1 true, true
  %102 = and i1 %99, true
  %103 = and i1 %97, %101
  %104 = and i1 %100, true
  %105 = and i1 %98, %101
  %106 = or i1 %102, %103
  %107 = or i1 %104, %105
  %108 = xor i1 %106, %107
  %109 = or i1 %99, %100
  %110 = xor i1 %109, true
  %111 = or i1 true, %101
  %112 = and i1 %110, %111
  %113 = or i1 %108, %112
  %114 = or i1 %97, %98
  %115 = select i1 %113, i32 2020533171, i32 -1792639753
  store i32 %115, i32* %21
  br label %191

; <label>:116:                                    ; preds = %23
  %117 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7
  ret %"struct.std::_Rb_tree_node_base"* %117

; <label>:118:                                    ; preds = %23
  %119 = load volatile i1, i1* %6
  %120 = zext i1 %119 to i8
  store i8 %120, i8* %16, align 1
  %121 = load %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node"*, %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node"** %15, align 8
  %122 = load %"class.std::vector"*, %"class.std::vector"** %14, align 8
  %123 = call dereferenceable(24) %"class.std::vector"* @_ZSt7forwardISt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::vector"* dereferenceable(24) %122) #3
  %124 = call %"struct.std::_Rb_tree_node.27"* @_ZNKSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_Alloc_nodeclIS2_EEPSt13_Rb_tree_nodeIS2_EOT_(%"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node"* %121, %"class.std::vector"* dereferenceable(24) %123)
  store %"struct.std::_Rb_tree_node.27"* %124, %"struct.std::_Rb_tree_node.27"** %18, align 8
  %125 = load i8, i8* %16, align 1
  %126 = trunc i8 %125 to i1
  %127 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %18, align 8
  %128 = bitcast %"struct.std::_Rb_tree_node.27"* %127 to %"struct.std::_Rb_tree_node_base"*
  %129 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %13, align 8
  %130 = load volatile %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %9
  %131 = getelementptr inbounds %"class.std::_Rb_tree.12", %"class.std::_Rb_tree.12"* %130, i32 0, i32 0
  %132 = getelementptr inbounds %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %131, i32 0, i32 1
  call void @_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_(i1 zeroext %126, %"struct.std::_Rb_tree_node_base"* %128, %"struct.std::_Rb_tree_node_base"* %129, %"struct.std::_Rb_tree_node_base"* dereferenceable(32) %132) #3
  %133 = load volatile %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %9
  %134 = getelementptr inbounds %"class.std::_Rb_tree.12", %"class.std::_Rb_tree.12"* %133, i32 0, i32 0
  %135 = getelementptr inbounds %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %134, i32 0, i32 2
  %136 = load i64, i64* %135, align 8
  %137 = sub i64 0, 1
  %138 = add i64 %136, %137
  %139 = sub i64 %136, 1
  %140 = mul i64 %138, 1
  %141 = sub i64 0, 1
  %142 = add i64 %136, %141
  %143 = sub i64 %136, 1
  %144 = mul i64 %142, 1
  %145 = sub i64 0, %136
  %146 = add i64 0, %145
  %147 = sub i64 0, %136
  %148 = sub i64 0, 1
  %149 = sub i64 %146, %148
  %150 = add i64 %146, 1
  %151 = sub i64 0, -8679127157885826334
  %152 = sub i64 %151, %136
  %153 = add i64 %152, -8679127157885826334
  %154 = sub i64 0, %136
  %155 = sub i64 0, 1
  %156 = sub i64 %153, %155
  %157 = add i64 %153, 1
  %158 = sub i64 0, -2132992359733482311
  %159 = sub i64 %158, %136
  %160 = add i64 %159, -2132992359733482311
  %161 = sub i64 0, %136
  %162 = sub i64 0, %160
  %163 = sub i64 0, 1
  %164 = add i64 %162, %163
  %165 = sub i64 0, %164
  %166 = add i64 %160, 1
  %167 = sub i64 0, -5413657189959685861
  %168 = sub i64 %167, %136
  %169 = add i64 %168, -5413657189959685861
  %170 = sub i64 0, %136
  %171 = add i64 %169, 2302030219428820707
  %172 = add i64 %171, 1
  %173 = sub i64 %172, 2302030219428820707
  %174 = add i64 %169, 1
  %175 = sub i64 0, %136
  %176 = add i64 0, %175
  %177 = sub i64 0, %136
  %178 = sub i64 0, %176
  %179 = sub i64 0, 1
  %180 = add i64 %178, %179
  %181 = sub i64 0, %180
  %182 = add i64 %176, 1
  %183 = add i64 %136, 6960058887185667634
  %184 = add i64 %183, 1
  %185 = sub i64 %184, 6960058887185667634
  %186 = add i64 %136, 1
  store i64 %185, i64* %135, align 8
  %187 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %18, align 8
  %188 = bitcast %"struct.std::_Rb_tree_node.27"* %187 to %"struct.std::_Rb_tree_node_base"*
  call void @_ZNSt17_Rb_tree_iteratorISt6vectorIxSaIxEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.29"* %10, %"struct.std::_Rb_tree_node_base"* %188) #3
  %189 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.29", %"struct.std::_Rb_tree_iterator.29"* %10, i32 0, i32 0
  %190 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %189, align 8
  store i32 -820521785, i32* %21
  br label %191

; <label>:191:                                    ; preds = %118, %62, %46, %37, %30, %26, %25
  br label %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector"* @_ZSt7forwardISt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::vector"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  ret %"class.std::vector"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.27"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE6_M_endEv(%"class.std::_Rb_tree.12"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.27"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.562
  %6 = load i32, i32* @y.563
  %7 = sub i32 %5, 128415599
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 128415599
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1863114493, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1863114493, label %19
    i32 -1338386135, label %27
    i32 1682878911, label %59
    i32 -1888853925, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1338386135, i32 -1888853925
  store i32 %26, i32* %15
  br label %67

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::_Rb_tree.12"*, align 8
  store %"class.std::_Rb_tree.12"* %0, %"class.std::_Rb_tree.12"** %28, align 8
  %29 = load %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %28, align 8
  %30 = getelementptr inbounds %"class.std::_Rb_tree.12", %"class.std::_Rb_tree.12"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %30, i32 0, i32 1
  %32 = bitcast %"struct.std::_Rb_tree_node_base"* %31 to %"struct.std::_Rb_tree_node.27"*
  store %"struct.std::_Rb_tree_node.27"* %32, %"struct.std::_Rb_tree_node.27"** %2
  %33 = load i32, i32* @x.562
  %34 = load i32, i32* @y.563
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 1682878911, i32 -1888853925
  store i32 %58, i32* %15
  br label %67

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %2
  ret %"struct.std::_Rb_tree_node.27"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::_Rb_tree.12"*, align 8
  store %"class.std::_Rb_tree.12"* %0, %"class.std::_Rb_tree.12"** %62, align 8
  %63 = load %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %62, align 8
  %64 = getelementptr inbounds %"class.std::_Rb_tree.12", %"class.std::_Rb_tree.12"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %64, i32 0, i32 1
  %66 = bitcast %"struct.std::_Rb_tree_node_base"* %65 to %"struct.std::_Rb_tree_node.27"*
  store i32 -1338386135, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNKSt4lessISt6vectorIxSaIxEEEclERKS2_S5_(%"struct.std::less.16"*, %"class.std::vector"* dereferenceable(24), %"class.std::vector"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.564
  %8 = load i32, i32* @y.565
  %9 = sub i32 %7, -2034792366
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -2034792366
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 159559712, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %62
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 159559712, label %21
    i32 127981201, label %29
    i32 92651034, label %52
    i32 -1228851558, label %54
  ]

; <label>:20:                                     ; preds = %18
  br label %62

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 127981201, i32 -1228851558
  store i32 %28, i32* %17
  br label %62

; <label>:29:                                     ; preds = %18
  %30 = alloca %"struct.std::less.16"*, align 8
  %31 = alloca %"class.std::vector"*, align 8
  %32 = alloca %"class.std::vector"*, align 8
  store %"struct.std::less.16"* %0, %"struct.std::less.16"** %30, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %31, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %32, align 8
  %33 = load %"struct.std::less.16"*, %"struct.std::less.16"** %30, align 8
  %34 = load %"class.std::vector"*, %"class.std::vector"** %31, align 8
  %35 = load %"class.std::vector"*, %"class.std::vector"** %32, align 8
  %36 = call zeroext i1 @_ZStltIxSaIxEEbRKSt6vectorIT_T0_ES6_(%"class.std::vector"* dereferenceable(24) %34, %"class.std::vector"* dereferenceable(24) %35)
  store i1 %36, i1* %4
  %37 = load i32, i32* @x.564
  %38 = load i32, i32* @y.565
  %39 = sub i32 %37, -218635810
  %40 = sub i32 %39, 1
  %41 = add i32 %40, -218635810
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 92651034, i32 -1228851558
  store i32 %51, i32* %17
  br label %62

; <label>:52:                                     ; preds = %18
  %53 = load volatile i1, i1* %4
  ret i1 %53

; <label>:54:                                     ; preds = %18
  %55 = alloca %"struct.std::less.16"*, align 8
  %56 = alloca %"class.std::vector"*, align 8
  %57 = alloca %"class.std::vector"*, align 8
  store %"struct.std::less.16"* %0, %"struct.std::less.16"** %55, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %56, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %57, align 8
  %58 = load %"struct.std::less.16"*, %"struct.std::less.16"** %55, align 8
  %59 = load %"class.std::vector"*, %"class.std::vector"** %56, align 8
  %60 = load %"class.std::vector"*, %"class.std::vector"** %57, align 8
  %61 = call zeroext i1 @_ZStltIxSaIxEEbRKSt6vectorIT_T0_ES6_(%"class.std::vector"* dereferenceable(24) %59, %"class.std::vector"* dereferenceable(24) %60)
  store i32 127981201, i32* %17
  br label %62

; <label>:62:                                     ; preds = %54, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE6_S_keyEPKSt13_Rb_tree_nodeIS2_E(%"struct.std::_Rb_tree_node.27"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.27"*, align 8
  %3 = alloca %"struct.std::_Identity.30", align 1
  store %"struct.std::_Rb_tree_node.27"* %0, %"struct.std::_Rb_tree_node.27"** %2, align 8
  %4 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %2, align 8
  %5 = call dereferenceable(24) %"class.std::vector"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E(%"struct.std::_Rb_tree_node.27"* %4)
  %6 = call dereferenceable(24) %"class.std::vector"* @_ZNKSt9_IdentityISt6vectorIxSaIxEEEclERKS2_(%"struct.std::_Identity.30"* %3, %"class.std::vector"* dereferenceable(24) %5)
  ret %"class.std::vector"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIPSt18_Rb_tree_node_baseS1_EC2IRPSt13_Rb_tree_nodeISt6vectorIxSaIxEEESA_vEEOT_OT0_(%"struct.std::pair.22"*, %"struct.std::_Rb_tree_node.27"** dereferenceable(8), %"struct.std::_Rb_tree_node.27"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %4 = alloca %"struct.std::pair.22"*, align 8
  %5 = alloca %"struct.std::_Rb_tree_node.27"**, align 8
  %6 = alloca %"struct.std::_Rb_tree_node.27"**, align 8
  store %"struct.std::pair.22"* %0, %"struct.std::pair.22"** %4, align 8
  store %"struct.std::_Rb_tree_node.27"** %1, %"struct.std::_Rb_tree_node.27"*** %5, align 8
  store %"struct.std::_Rb_tree_node.27"** %2, %"struct.std::_Rb_tree_node.27"*** %6, align 8
  %7 = load %"struct.std::pair.22"*, %"struct.std::pair.22"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair.22", %"struct.std::pair.22"* %7, i32 0, i32 0
  %9 = load %"struct.std::_Rb_tree_node.27"**, %"struct.std::_Rb_tree_node.27"*** %5, align 8
  %10 = call dereferenceable(8) %"struct.std::_Rb_tree_node.27"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt6vectorIxSaIxEEEEOT_RNSt16remove_referenceIS7_E4typeE(%"struct.std::_Rb_tree_node.27"** dereferenceable(8) %9) #3
  %11 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %10, align 8
  %12 = bitcast %"struct.std::_Rb_tree_node.27"* %11 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %12, %"struct.std::_Rb_tree_node_base"** %8, align 8
  %13 = getelementptr inbounds %"struct.std::pair.22", %"struct.std::pair.22"* %7, i32 0, i32 1
  %14 = load %"struct.std::_Rb_tree_node.27"**, %"struct.std::_Rb_tree_node.27"*** %6, align 8
  %15 = call dereferenceable(8) %"struct.std::_Rb_tree_node.27"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt6vectorIxSaIxEEEEOT_RNSt16remove_referenceIS7_E4typeE(%"struct.std::_Rb_tree_node.27"** dereferenceable(8) %14) #3
  %16 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %15, align 8
  %17 = bitcast %"struct.std::_Rb_tree_node.27"* %16 to %"struct.std::_Rb_tree_node_base"*
  store %"struct.std::_Rb_tree_node_base"* %17, %"struct.std::_Rb_tree_node_base"** %13, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStltIxSaIxEEbRKSt6vectorIT_T0_ES6_(%"class.std::vector"* dereferenceable(24), %"class.std::vector"* dereferenceable(24)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.570
  %7 = load i32, i32* @y.571
  %8 = add i32 %6, -2117404274
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -2117404274
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 168285159, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %113
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 168285159, label %20
    i32 1271491894, label %28
    i32 86450655, label %83
    i32 -1981586230, label %85
  ]

; <label>:19:                                     ; preds = %17
  br label %113

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1271491894, i32 -1981586230
  store i32 %27, i32* %16
  br label %113

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector"*, align 8
  %30 = alloca %"class.std::vector"*, align 8
  %31 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %32 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %33 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %34 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %29, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %30, align 8
  %35 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8
  %36 = call i64* @_ZNKSt6vectorIxSaIxEE5beginEv(%"class.std::vector"* %35) #3
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %31, i32 0, i32 0
  store i64* %36, i64** %37, align 8
  %38 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8
  %39 = call i64* @_ZNKSt6vectorIxSaIxEE3endEv(%"class.std::vector"* %38) #3
  %40 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %32, i32 0, i32 0
  store i64* %39, i64** %40, align 8
  %41 = load %"class.std::vector"*, %"class.std::vector"** %30, align 8
  %42 = call i64* @_ZNKSt6vectorIxSaIxEE5beginEv(%"class.std::vector"* %41) #3
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %33, i32 0, i32 0
  store i64* %42, i64** %43, align 8
  %44 = load %"class.std::vector"*, %"class.std::vector"** %30, align 8
  %45 = call i64* @_ZNKSt6vectorIxSaIxEE3endEv(%"class.std::vector"* %44) #3
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %34, i32 0, i32 0
  store i64* %45, i64** %46, align 8
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %31, i32 0, i32 0
  %48 = load i64*, i64** %47, align 8
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %32, i32 0, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %33, i32 0, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %34, i32 0, i32 0
  %54 = load i64*, i64** %53, align 8
  %55 = call zeroext i1 @_ZSt23lexicographical_compareIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEES7_EbT_S8_T0_S9_(i64* %48, i64* %50, i64* %52, i64* %54)
  store i1 %55, i1* %3
  %56 = load i32, i32* @x.570
  %57 = load i32, i32* @y.571
  %58 = add i32 %56, -337748015
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, -337748015
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 true, true
  %69 = and i1 %66, true
  %70 = and i1 %64, %68
  %71 = and i1 %67, true
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 true, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  %82 = select i1 %80, i32 86450655, i32 -1981586230
  store i32 %82, i32* %16
  br label %113

; <label>:83:                                     ; preds = %17
  %84 = load volatile i1, i1* %3
  ret i1 %84

; <label>:85:                                     ; preds = %17
  %86 = alloca %"class.std::vector"*, align 8
  %87 = alloca %"class.std::vector"*, align 8
  %88 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %89 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %90 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %91 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %86, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %87, align 8
  %92 = load %"class.std::vector"*, %"class.std::vector"** %86, align 8
  %93 = call i64* @_ZNKSt6vectorIxSaIxEE5beginEv(%"class.std::vector"* %92) #3
  %94 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %88, i32 0, i32 0
  store i64* %93, i64** %94, align 8
  %95 = load %"class.std::vector"*, %"class.std::vector"** %86, align 8
  %96 = call i64* @_ZNKSt6vectorIxSaIxEE3endEv(%"class.std::vector"* %95) #3
  %97 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %89, i32 0, i32 0
  store i64* %96, i64** %97, align 8
  %98 = load %"class.std::vector"*, %"class.std::vector"** %87, align 8
  %99 = call i64* @_ZNKSt6vectorIxSaIxEE5beginEv(%"class.std::vector"* %98) #3
  %100 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %90, i32 0, i32 0
  store i64* %99, i64** %100, align 8
  %101 = load %"class.std::vector"*, %"class.std::vector"** %87, align 8
  %102 = call i64* @_ZNKSt6vectorIxSaIxEE3endEv(%"class.std::vector"* %101) #3
  %103 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %91, i32 0, i32 0
  store i64* %102, i64** %103, align 8
  %104 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %88, i32 0, i32 0
  %105 = load i64*, i64** %104, align 8
  %106 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %89, i32 0, i32 0
  %107 = load i64*, i64** %106, align 8
  %108 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %90, i32 0, i32 0
  %109 = load i64*, i64** %108, align 8
  %110 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %91, i32 0, i32 0
  %111 = load i64*, i64** %110, align 8
  %112 = call zeroext i1 @_ZSt23lexicographical_compareIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEES7_EbT_S8_T0_S9_(i64* %105, i64* %107, i64* %109, i64* %111)
  store i32 1271491894, i32* %16
  br label %113

; <label>:113:                                    ; preds = %85, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSt23lexicographical_compareIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEES7_EbT_S8_T0_S9_(i64*, i64*, i64*, i64*) #0 comdat {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store i64* %0, i64** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store i64* %1, i64** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  store i64* %2, i64** %15, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  store i64* %3, i64** %16, align 8
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %18 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 8, i32 8, i1 false)
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64* %20)
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %25 = load i64*, i64** %24, align 8
  %26 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64* %25)
  %27 = bitcast %"class.__gnu_cxx::__normal_iterator"* %11 to i8*
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 8, i32 8, i1 false)
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64* %30)
  %32 = bitcast %"class.__gnu_cxx::__normal_iterator"* %12 to i8*
  %33 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 8, i32 8, i1 false)
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES9_(i64* %35)
  %37 = call zeroext i1 @_ZSt29__lexicographical_compare_auxIPKxS1_EbT_S2_T0_S3_(i64* %21, i64* %26, i64* %31, i64* %36)
  ret i1 %37
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSt29__lexicographical_compare_auxIPKxS1_EbT_S2_T0_S3_(i64*, i64*, i64*, i64*) #0 comdat {
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i8, align 1
  store i64* %0, i64** %5, align 8
  store i64* %1, i64** %6, align 8
  store i64* %2, i64** %7, align 8
  store i64* %3, i64** %8, align 8
  store i8 0, i8* %9, align 1
  %10 = load i64*, i64** %5, align 8
  %11 = load i64*, i64** %6, align 8
  %12 = load i64*, i64** %7, align 8
  %13 = load i64*, i64** %8, align 8
  %14 = call zeroext i1 @_ZNSt25__lexicographical_compareILb0EE4__lcIPKxS3_EEbT_S4_T0_S5_(i64* %10, i64* %11, i64* %12, i64* %13)
  ret i1 %14
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZNSt25__lexicographical_compareILb0EE4__lcIPKxS3_EEbT_S4_T0_S5_(i64*, i64*, i64*, i64*) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.576
  %9 = load i32, i32* @y.577
  %10 = sub i32 %8, -323325158
  %11 = sub i32 %10, 1
  %12 = add i32 %11, -323325158
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 964435624, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %82
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 964435624, label %22
    i32 1825090876, label %42
    i32 267110117, label %68
    i32 1207300859, label %70
  ]

; <label>:21:                                     ; preds = %19
  br label %82

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 1825090876, i32 1207300859
  store i32 %41, i32* %18
  br label %82

; <label>:42:                                     ; preds = %19
  %43 = alloca i64*, align 8
  %44 = alloca i64*, align 8
  %45 = alloca i64*, align 8
  %46 = alloca i64*, align 8
  %47 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %48 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  store i64* %0, i64** %43, align 8
  store i64* %1, i64** %44, align 8
  store i64* %2, i64** %45, align 8
  store i64* %3, i64** %46, align 8
  %49 = load i64*, i64** %43, align 8
  %50 = load i64*, i64** %44, align 8
  %51 = load i64*, i64** %45, align 8
  %52 = load i64*, i64** %46, align 8
  call void @_ZN9__gnu_cxx5__ops16__iter_less_iterEv()
  %53 = call zeroext i1 @_ZSt30__lexicographical_compare_implIPKxS1_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S5_T0_S6_T1_(i64* %49, i64* %50, i64* %51, i64* %52)
  store i1 %53, i1* %5
  %54 = load i32, i32* @x.576
  %55 = load i32, i32* @y.577
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 267110117, i32 1207300859
  store i32 %67, i32* %18
  br label %82

; <label>:68:                                     ; preds = %19
  %69 = load volatile i1, i1* %5
  ret i1 %69

; <label>:70:                                     ; preds = %19
  %71 = alloca i64*, align 8
  %72 = alloca i64*, align 8
  %73 = alloca i64*, align 8
  %74 = alloca i64*, align 8
  %75 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %76 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  store i64* %0, i64** %71, align 8
  store i64* %1, i64** %72, align 8
  store i64* %2, i64** %73, align 8
  store i64* %3, i64** %74, align 8
  %77 = load i64*, i64** %71, align 8
  %78 = load i64*, i64** %72, align 8
  %79 = load i64*, i64** %73, align 8
  %80 = load i64*, i64** %74, align 8
  call void @_ZN9__gnu_cxx5__ops16__iter_less_iterEv()
  %81 = call zeroext i1 @_ZSt30__lexicographical_compare_implIPKxS1_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S5_T0_S6_T1_(i64* %77, i64* %78, i64* %79, i64* %80)
  store i32 1825090876, i32* %18
  br label %82

; <label>:82:                                     ; preds = %70, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSt30__lexicographical_compare_implIPKxS1_N9__gnu_cxx5__ops15_Iter_less_iterEEbT_S5_T0_S6_T1_(i64*, i64*, i64*, i64*) #0 comdat {
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca i1, align 1
  %8 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  %9 = alloca i64*, align 8
  %10 = alloca i64*, align 8
  %11 = alloca i64*, align 8
  %12 = alloca i64*, align 8
  store i64* %0, i64** %9, align 8
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %11, align 8
  store i64* %3, i64** %12, align 8
  %13 = load i64*, i64** %9, align 8
  %14 = load i64*, i64** %10, align 8
  %15 = load i64*, i64** %11, align 8
  %16 = load i64*, i64** %12, align 8
  %17 = call i64* @_ZNSt8__lc_raiISt26random_access_iterator_tagS0_E10__newlast1IPKxS4_EET_S5_S5_T0_S6_(i64* %13, i64* %14, i64* %15, i64* %16)
  store i64* %17, i64** %10, align 8
  %18 = alloca i32
  store i32 -1654173970, i32* %18
  %19 = alloca i1
  %20 = alloca i1
  br label %21

; <label>:21:                                     ; preds = %4, %208
  %22 = load i32, i32* %18
  switch i32 %22, label %23 [
    i32 -1654173970, label %24
    i32 -1969062756, label %39
    i32 -1683746913, label %57
    i32 521281044, label %60
    i32 -1366070016, label %64
    i32 -1902952052, label %67
    i32 1543180577, label %72
    i32 1354696604, label %73
    i32 -1854841587, label %101
    i32 -390060280, label %132
    i32 1785611639, label %135
    i32 1884422380, label %136
    i32 536438902, label %164
    i32 -1123029443, label %180
    i32 -1427382496, label %181
    i32 -1705307406, label %186
    i32 -501676590, label %191
    i32 -1688863753, label %195
    i32 -802295481, label %197
    i32 -1454755655, label %199
    i32 -108477607, label %203
    i32 1501165664, label %207
  ]

; <label>:23:                                     ; preds = %21
  br label %208

; <label>:24:                                     ; preds = %21
  %25 = load i32, i32* @x.578
  %26 = load i32, i32* @y.579
  %27 = sub i32 0, 1
  %28 = add i32 %25, %27
  %29 = sub i32 %25, 1
  %30 = mul i32 %25, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %26, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  %38 = select i1 %36, i32 -1969062756, i32 -1454755655
  store i32 %38, i32* %18
  br label %208

; <label>:39:                                     ; preds = %21
  %40 = load i64*, i64** %9, align 8
  %41 = load i64*, i64** %10, align 8
  %42 = icmp ne i64* %40, %41
  store i1 %42, i1* %6
  %43 = load i32, i32* @x.578
  %44 = load i32, i32* @y.579
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1683746913, i32 -1454755655
  store i32 %56, i32* %18
  br label %208

; <label>:57:                                     ; preds = %21
  %58 = load volatile i1, i1* %6
  %59 = select i1 %58, i32 521281044, i32 -1366070016
  store i32 %59, i32* %18
  store i1 false, i1* %19
  br label %208

; <label>:60:                                     ; preds = %21
  %61 = load i64*, i64** %11, align 8
  %62 = load i64*, i64** %12, align 8
  %63 = call zeroext i1 @_ZNSt8__lc_raiISt26random_access_iterator_tagS0_E6__cnd2IPKxEEbT_S5_(i64* %61, i64* %62)
  store i32 -1366070016, i32* %18
  store i1 %63, i1* %19
  br label %208

; <label>:64:                                     ; preds = %21
  %65 = load i1, i1* %19
  %66 = select i1 %65, i32 -1902952052, i32 -1705307406
  store i32 %66, i32* %18
  br label %208

; <label>:67:                                     ; preds = %21
  %68 = load i64*, i64** %9, align 8
  %69 = load i64*, i64** %11, align 8
  %70 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclIPKxS4_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %8, i64* %68, i64* %69)
  %71 = select i1 %70, i32 1543180577, i32 1354696604
  store i32 %71, i32* %18
  br label %208

; <label>:72:                                     ; preds = %21
  store i1 true, i1* %7, align 1
  store i32 -802295481, i32* %18
  br label %208

; <label>:73:                                     ; preds = %21
  %74 = load i32, i32* @x.578
  %75 = load i32, i32* @y.579
  %76 = add i32 %74, -901906668
  %77 = sub i32 %76, 1
  %78 = sub i32 %77, -901906668
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = xor i1 %82, true
  %85 = xor i1 %83, true
  %86 = xor i1 true, true
  %87 = and i1 %84, true
  %88 = and i1 %82, %86
  %89 = and i1 %85, true
  %90 = and i1 %83, %86
  %91 = or i1 %87, %88
  %92 = or i1 %89, %90
  %93 = xor i1 %91, %92
  %94 = or i1 %84, %85
  %95 = xor i1 %94, true
  %96 = or i1 true, %86
  %97 = and i1 %95, %96
  %98 = or i1 %93, %97
  %99 = or i1 %82, %83
  %100 = select i1 %98, i32 -1854841587, i32 -108477607
  store i32 %100, i32* %18
  br label %208

; <label>:101:                                    ; preds = %21
  %102 = load i64*, i64** %11, align 8
  %103 = load i64*, i64** %9, align 8
  %104 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclIPKxS4_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %8, i64* %102, i64* %103)
  store i1 %104, i1* %5
  %105 = load i32, i32* @x.578
  %106 = load i32, i32* @y.579
  %107 = sub i32 %105, 1609453415
  %108 = sub i32 %107, 1
  %109 = add i32 %108, 1609453415
  %110 = sub i32 %105, 1
  %111 = mul i32 %105, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %106, 10
  %115 = xor i1 %113, true
  %116 = xor i1 %114, true
  %117 = xor i1 true, true
  %118 = and i1 %115, true
  %119 = and i1 %113, %117
  %120 = and i1 %116, true
  %121 = and i1 %114, %117
  %122 = or i1 %118, %119
  %123 = or i1 %120, %121
  %124 = xor i1 %122, %123
  %125 = or i1 %115, %116
  %126 = xor i1 %125, true
  %127 = or i1 true, %117
  %128 = and i1 %126, %127
  %129 = or i1 %124, %128
  %130 = or i1 %113, %114
  %131 = select i1 %129, i32 -390060280, i32 -108477607
  store i32 %131, i32* %18
  br label %208

; <label>:132:                                    ; preds = %21
  %133 = load volatile i1, i1* %5
  %134 = select i1 %133, i32 1785611639, i32 1884422380
  store i32 %134, i32* %18
  br label %208

; <label>:135:                                    ; preds = %21
  store i1 false, i1* %7, align 1
  store i32 -802295481, i32* %18
  br label %208

; <label>:136:                                    ; preds = %21
  %137 = load i32, i32* @x.578
  %138 = load i32, i32* @y.579
  %139 = add i32 %137, -2053500235
  %140 = sub i32 %139, 1
  %141 = sub i32 %140, -2053500235
  %142 = sub i32 %137, 1
  %143 = mul i32 %137, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %138, 10
  %147 = xor i1 %145, true
  %148 = xor i1 %146, true
  %149 = xor i1 false, true
  %150 = and i1 %147, false
  %151 = and i1 %145, %149
  %152 = and i1 %148, false
  %153 = and i1 %146, %149
  %154 = or i1 %150, %151
  %155 = or i1 %152, %153
  %156 = xor i1 %154, %155
  %157 = or i1 %147, %148
  %158 = xor i1 %157, true
  %159 = or i1 false, %149
  %160 = and i1 %158, %159
  %161 = or i1 %156, %160
  %162 = or i1 %145, %146
  %163 = select i1 %161, i32 536438902, i32 1501165664
  store i32 %163, i32* %18
  br label %208

; <label>:164:                                    ; preds = %21
  %165 = load i32, i32* @x.578
  %166 = load i32, i32* @y.579
  %167 = sub i32 %165, 1336401788
  %168 = sub i32 %167, 1
  %169 = add i32 %168, 1336401788
  %170 = sub i32 %165, 1
  %171 = mul i32 %165, %169
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %166, 10
  %175 = and i1 %173, %174
  %176 = xor i1 %173, %174
  %177 = or i1 %175, %176
  %178 = or i1 %173, %174
  %179 = select i1 %177, i32 -1123029443, i32 1501165664
  store i32 %179, i32* %18
  br label %208

; <label>:180:                                    ; preds = %21
  store i32 -1427382496, i32* %18
  br label %208

; <label>:181:                                    ; preds = %21
  %182 = load i64*, i64** %9, align 8
  %183 = getelementptr inbounds i64, i64* %182, i32 1
  store i64* %183, i64** %9, align 8
  %184 = load i64*, i64** %11, align 8
  %185 = getelementptr inbounds i64, i64* %184, i32 1
  store i64* %185, i64** %11, align 8
  store i32 -1654173970, i32* %18
  br label %208

; <label>:186:                                    ; preds = %21
  %187 = load i64*, i64** %9, align 8
  %188 = load i64*, i64** %10, align 8
  %189 = icmp eq i64* %187, %188
  %190 = select i1 %189, i32 -501676590, i32 -1688863753
  store i32 %190, i32* %18
  store i1 false, i1* %20
  br label %208

; <label>:191:                                    ; preds = %21
  %192 = load i64*, i64** %11, align 8
  %193 = load i64*, i64** %12, align 8
  %194 = icmp ne i64* %192, %193
  store i32 -1688863753, i32* %18
  store i1 %194, i1* %20
  br label %208

; <label>:195:                                    ; preds = %21
  %196 = load i1, i1* %20
  store i1 %196, i1* %7, align 1
  store i32 -802295481, i32* %18
  br label %208

; <label>:197:                                    ; preds = %21
  %198 = load i1, i1* %7, align 1
  ret i1 %198

; <label>:199:                                    ; preds = %21
  %200 = load i64*, i64** %9, align 8
  %201 = load i64*, i64** %10, align 8
  %202 = icmp ne i64* %200, %201
  store i32 -1969062756, i32* %18
  br label %208

; <label>:203:                                    ; preds = %21
  %204 = load i64*, i64** %11, align 8
  %205 = load i64*, i64** %9, align 8
  %206 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclIPKxS4_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %8, i64* %204, i64* %205)
  store i32 -1854841587, i32* %18
  br label %208

; <label>:207:                                    ; preds = %21
  store i32 536438902, i32* %18
  br label %208

; <label>:208:                                    ; preds = %207, %203, %199, %195, %191, %186, %181, %180, %164, %136, %135, %132, %101, %73, %72, %67, %64, %60, %57, %39, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops16__iter_less_iterEv() #4 comdat {
  %1 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt8__lc_raiISt26random_access_iterator_tagS0_E10__newlast1IPKxS4_EET_S5_S5_T0_S6_(i64*, i64*, i64*, i64*) #4 comdat align 2 {
  %5 = alloca i64*
  %6 = alloca i64*
  %7 = alloca i64
  %8 = alloca i64
  %9 = alloca i64*, align 8
  %10 = alloca i64*, align 8
  %11 = alloca i64*, align 8
  %12 = alloca i64*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  store i64* %0, i64** %9, align 8
  store i64* %1, i64** %10, align 8
  store i64* %2, i64** %11, align 8
  store i64* %3, i64** %12, align 8
  %15 = load i64*, i64** %10, align 8
  %16 = load i64*, i64** %9, align 8
  %17 = ptrtoint i64* %15 to i64
  %18 = ptrtoint i64* %16 to i64
  %19 = sub i64 %17, 2303329426463769877
  %20 = sub i64 %19, %18
  %21 = add i64 %20, 2303329426463769877
  %22 = sub i64 %17, %18
  %23 = sdiv exact i64 %21, 8
  store i64 %23, i64* %13, align 8
  %24 = load i64*, i64** %12, align 8
  %25 = load i64*, i64** %11, align 8
  %26 = ptrtoint i64* %24 to i64
  %27 = ptrtoint i64* %25 to i64
  %28 = sub i64 %26, -4279129985707622016
  %29 = sub i64 %28, %27
  %30 = add i64 %29, -4279129985707622016
  %31 = sub i64 %26, %27
  %32 = sdiv exact i64 %30, 8
  store i64 %32, i64* %14, align 8
  %33 = load i64, i64* %14, align 8
  store i64 %33, i64* %8
  %34 = load i64, i64* %13, align 8
  store i64 %34, i64* %7
  %35 = alloca i32
  store i32 -576767260, i32* %35
  %36 = alloca i64*
  br label %37

; <label>:37:                                     ; preds = %4, %156
  %38 = load i32, i32* %35
  switch i32 %38, label %39 [
    i32 -576767260, label %40
    i32 -1299691060, label %45
    i32 -529052116, label %49
    i32 70422750, label %77
    i32 -1927573337, label %93
    i32 -1380019576, label %95
    i32 1720338395, label %123
    i32 609218086, label %151
    i32 -2119598631, label %153
    i32 544275604, label %155
  ]

; <label>:39:                                     ; preds = %37
  br label %156

; <label>:40:                                     ; preds = %37
  %41 = load volatile i64, i64* %8
  %42 = load volatile i64, i64* %7
  %43 = icmp slt i64 %41, %42
  %44 = select i1 %43, i32 -1299691060, i32 -529052116
  store i32 %44, i32* %35
  br label %156

; <label>:45:                                     ; preds = %37
  %46 = load i64*, i64** %9, align 8
  %47 = load i64, i64* %14, align 8
  %48 = getelementptr inbounds i64, i64* %46, i64 %47
  store i32 -1380019576, i32* %35
  store i64* %48, i64** %36
  br label %156

; <label>:49:                                     ; preds = %37
  %50 = load i32, i32* @x.582
  %51 = load i32, i32* @y.583
  %52 = add i32 %50, -78011530
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -78011530
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 70422750, i32 -2119598631
  store i32 %76, i32* %35
  br label %156

; <label>:77:                                     ; preds = %37
  %78 = load i64*, i64** %10, align 8
  store i64* %78, i64** %6
  %79 = load i32, i32* @x.582
  %80 = load i32, i32* @y.583
  %81 = sub i32 0, 1
  %82 = add i32 %79, %81
  %83 = sub i32 %79, 1
  %84 = mul i32 %79, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %80, 10
  %88 = and i1 %86, %87
  %89 = xor i1 %86, %87
  %90 = or i1 %88, %89
  %91 = or i1 %86, %87
  %92 = select i1 %90, i32 -1927573337, i32 -2119598631
  store i32 %92, i32* %35
  br label %156

; <label>:93:                                     ; preds = %37
  store i32 -1380019576, i32* %35
  %94 = load volatile i64*, i64** %6
  store i64* %94, i64** %36
  br label %156

; <label>:95:                                     ; preds = %37
  %96 = load i64*, i64** %36
  store i64* %96, i64** %5
  %97 = load i32, i32* @x.582
  %98 = load i32, i32* @y.583
  %99 = sub i32 0, 1
  %100 = add i32 %97, %99
  %101 = sub i32 %97, 1
  %102 = mul i32 %97, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %98, 10
  %106 = xor i1 %104, true
  %107 = xor i1 %105, true
  %108 = xor i1 true, true
  %109 = and i1 %106, true
  %110 = and i1 %104, %108
  %111 = and i1 %107, true
  %112 = and i1 %105, %108
  %113 = or i1 %109, %110
  %114 = or i1 %111, %112
  %115 = xor i1 %113, %114
  %116 = or i1 %106, %107
  %117 = xor i1 %116, true
  %118 = or i1 true, %108
  %119 = and i1 %117, %118
  %120 = or i1 %115, %119
  %121 = or i1 %104, %105
  %122 = select i1 %120, i32 1720338395, i32 544275604
  store i32 %122, i32* %35
  br label %156

; <label>:123:                                    ; preds = %37
  %124 = load i32, i32* @x.582
  %125 = load i32, i32* @y.583
  %126 = sub i32 %124, 1499450143
  %127 = sub i32 %126, 1
  %128 = add i32 %127, 1499450143
  %129 = sub i32 %124, 1
  %130 = mul i32 %124, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %125, 10
  %134 = xor i1 %132, true
  %135 = xor i1 %133, true
  %136 = xor i1 false, true
  %137 = and i1 %134, false
  %138 = and i1 %132, %136
  %139 = and i1 %135, false
  %140 = and i1 %133, %136
  %141 = or i1 %137, %138
  %142 = or i1 %139, %140
  %143 = xor i1 %141, %142
  %144 = or i1 %134, %135
  %145 = xor i1 %144, true
  %146 = or i1 false, %136
  %147 = and i1 %145, %146
  %148 = or i1 %143, %147
  %149 = or i1 %132, %133
  %150 = select i1 %148, i32 609218086, i32 544275604
  store i32 %150, i32* %35
  br label %156

; <label>:151:                                    ; preds = %37
  %152 = load volatile i64*, i64** %5
  ret i64* %152

; <label>:153:                                    ; preds = %37
  %154 = load i64*, i64** %10, align 8
  store i32 70422750, i32* %35
  br label %156

; <label>:155:                                    ; preds = %37
  store i32 1720338395, i32* %35
  br label %156

; <label>:156:                                    ; preds = %155, %153, %123, %95, %93, %77, %49, %45, %40, %39
  br label %37
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNSt8__lc_raiISt26random_access_iterator_tagS0_E6__cnd2IPKxEEbT_S5_(i64*, i64*) #4 comdat align 2 {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  ret i1 true
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclIPKxS4_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"*, i64*, i64*) #4 comdat align 2 {
  %4 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter"*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_less_iter"* %0, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"struct.__gnu_cxx::__ops::_Iter_less_iter"*, %"struct.__gnu_cxx::__ops::_Iter_less_iter"** %4, align 8
  %8 = load i64*, i64** %5, align 8
  %9 = load i64, i64* %8, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = load i64, i64* %10, align 8
  %12 = icmp slt i64 %9, %11
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector"* @_ZNKSt9_IdentityISt6vectorIxSaIxEEEclERKS2_(%"struct.std::_Identity.30"*, %"class.std::vector"* dereferenceable(24)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Identity.30"*, align 8
  %4 = alloca %"class.std::vector"*, align 8
  store %"struct.std::_Identity.30"* %0, %"struct.std::_Identity.30"** %3, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %4, align 8
  %5 = load %"struct.std::_Identity.30"*, %"struct.std::_Identity.30"** %3, align 8
  %6 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  ret %"class.std::vector"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_S_valueEPKSt13_Rb_tree_nodeIS2_E(%"struct.std::_Rb_tree_node.27"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.27"*, align 8
  store %"struct.std::_Rb_tree_node.27"* %0, %"struct.std::_Rb_tree_node.27"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %2, align 8
  %4 = call %"class.std::vector"* @_ZNKSt13_Rb_tree_nodeISt6vectorIxSaIxEEE9_M_valptrEv(%"struct.std::_Rb_tree_node.27"* %3)
  ret %"class.std::vector"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector"* @_ZNKSt13_Rb_tree_nodeISt6vectorIxSaIxEEE9_M_valptrEv(%"struct.std::_Rb_tree_node.27"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.27"*, align 8
  store %"struct.std::_Rb_tree_node.27"* %0, %"struct.std::_Rb_tree_node.27"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Rb_tree_node.27", %"struct.std::_Rb_tree_node.27"* %3, i32 0, i32 1
  %5 = call %"class.std::vector"* @_ZNK9__gnu_cxx16__aligned_membufISt6vectorIxSaIxEEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.28"* %4) #3
  ret %"class.std::vector"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector"* @_ZNK9__gnu_cxx16__aligned_membufISt6vectorIxSaIxEEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf.28"*) #4 comdat align 2 {
  %2 = alloca %"struct.__gnu_cxx::__aligned_membuf.28"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.28"* %0, %"struct.__gnu_cxx::__aligned_membuf.28"** %2, align 8
  %3 = load %"struct.__gnu_cxx::__aligned_membuf.28"*, %"struct.__gnu_cxx::__aligned_membuf.28"** %2, align 8
  %4 = call i8* @_ZNK9__gnu_cxx16__aligned_membufISt6vectorIxSaIxEEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf.28"* %3) #3
  %5 = bitcast i8* %4 to %"class.std::vector"*
  ret %"class.std::vector"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNK9__gnu_cxx16__aligned_membufISt6vectorIxSaIxEEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf.28"*) #4 comdat align 2 {
  %2 = alloca i8*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.596
  %6 = load i32, i32* @y.597
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -697962413, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %77
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -697962413, label %18
    i32 1515281338, label %38
    i32 1325680631, label %70
    i32 446169126, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %77

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1515281338, i32 446169126
  store i32 %37, i32* %14
  br label %77

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.__gnu_cxx::__aligned_membuf.28"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.28"* %0, %"struct.__gnu_cxx::__aligned_membuf.28"** %39, align 8
  %40 = load %"struct.__gnu_cxx::__aligned_membuf.28"*, %"struct.__gnu_cxx::__aligned_membuf.28"** %39, align 8
  %41 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf.28", %"struct.__gnu_cxx::__aligned_membuf.28"* %40, i32 0, i32 0
  %42 = bitcast [24 x i8]* %41 to i8*
  store i8* %42, i8** %2
  %43 = load i32, i32* @x.596
  %44 = load i32, i32* @y.597
  %45 = sub i32 %43, -457511698
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -457511698
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 1325680631, i32 446169126
  store i32 %69, i32* %14
  br label %77

; <label>:70:                                     ; preds = %15
  %71 = load volatile i8*, i8** %2
  ret i8* %71

; <label>:72:                                     ; preds = %15
  %73 = alloca %"struct.__gnu_cxx::__aligned_membuf.28"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf.28"* %0, %"struct.__gnu_cxx::__aligned_membuf.28"** %73, align 8
  %74 = load %"struct.__gnu_cxx::__aligned_membuf.28"*, %"struct.__gnu_cxx::__aligned_membuf.28"** %73, align 8
  %75 = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf.28", %"struct.__gnu_cxx::__aligned_membuf.28"* %74, i32 0, i32 0
  %76 = bitcast [24 x i8]* %75 to i8*
  store i32 1515281338, i32* %14
  br label %77

; <label>:77:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Rb_tree_node.27"** @_ZSt7forwardIRPSt13_Rb_tree_nodeISt6vectorIxSaIxEEEEOT_RNSt16remove_referenceIS7_E4typeE(%"struct.std::_Rb_tree_node.27"** dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::_Rb_tree_node.27"**, align 8
  store %"struct.std::_Rb_tree_node.27"** %0, %"struct.std::_Rb_tree_node.27"*** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node.27"**, %"struct.std::_Rb_tree_node.27"*** %2, align 8
  ret %"struct.std::_Rb_tree_node.27"** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE6_S_keyEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #0 comdat align 2 {
  %2 = alloca %"class.std::vector"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.600
  %6 = load i32, i32* @y.601
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1375951207, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %79
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1375951207, label %18
    i32 -938825294, label %38
    i32 -1705728878, label %71
    i32 1844050458, label %73
  ]

; <label>:17:                                     ; preds = %15
  br label %79

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -938825294, i32 1844050458
  store i32 %37, i32* %14
  br label %79

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %40 = alloca %"struct.std::_Identity.30", align 1
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %39, align 8
  %41 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %39, align 8
  %42 = call dereferenceable(24) %"class.std::vector"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %41)
  %43 = call dereferenceable(24) %"class.std::vector"* @_ZNKSt9_IdentityISt6vectorIxSaIxEEEclERKS2_(%"struct.std::_Identity.30"* %40, %"class.std::vector"* dereferenceable(24) %42)
  store %"class.std::vector"* %43, %"class.std::vector"** %2
  %44 = load i32, i32* @x.600
  %45 = load i32, i32* @y.601
  %46 = add i32 %44, -332055179
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -332055179
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -1705728878, i32 1844050458
  store i32 %70, i32* %14
  br label %79

; <label>:71:                                     ; preds = %15
  %72 = load volatile %"class.std::vector"*, %"class.std::vector"** %2
  ret %"class.std::vector"* %72

; <label>:73:                                     ; preds = %15
  %74 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  %75 = alloca %"struct.std::_Identity.30", align 1
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %74, align 8
  %76 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %74, align 8
  %77 = call dereferenceable(24) %"class.std::vector"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"* %76)
  %78 = call dereferenceable(24) %"class.std::vector"* @_ZNKSt9_IdentityISt6vectorIxSaIxEEEclERKS2_(%"struct.std::_Identity.30"* %75, %"class.std::vector"* dereferenceable(24) %77)
  store i32 -938825294, i32* %14
  br label %79

; <label>:79:                                     ; preds = %73, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.27"* @_ZNKSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_Alloc_nodeclIS2_EEPSt13_Rb_tree_nodeIS2_EOT_(%"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node"*, %"class.std::vector"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node.27"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.602
  %7 = load i32, i32* @y.603
  %8 = sub i32 %6, -369906336
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -369906336
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1130555001, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %63
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1130555001, label %20
    i32 -1774760592, label %28
    i32 -1526434123, label %52
    i32 1588280515, label %54
  ]

; <label>:19:                                     ; preds = %17
  br label %63

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1774760592, i32 1588280515
  store i32 %27, i32* %16
  br label %63

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node"*, align 8
  %30 = alloca %"class.std::vector"*, align 8
  store %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node"* %0, %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node"** %29, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %30, align 8
  %31 = load %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node"*, %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node"** %29, align 8
  %32 = getelementptr inbounds %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node", %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node"* %31, i32 0, i32 0
  %33 = load %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %32, align 8
  %34 = load %"class.std::vector"*, %"class.std::vector"** %30, align 8
  %35 = call dereferenceable(24) %"class.std::vector"* @_ZSt7forwardISt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::vector"* dereferenceable(24) %34) #3
  %36 = call %"struct.std::_Rb_tree_node.27"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE14_M_create_nodeIJS2_EEEPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree.12"* %33, %"class.std::vector"* dereferenceable(24) %35)
  store %"struct.std::_Rb_tree_node.27"* %36, %"struct.std::_Rb_tree_node.27"** %3
  %37 = load i32, i32* @x.602
  %38 = load i32, i32* @y.603
  %39 = add i32 %37, 1049947639
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, 1049947639
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 -1526434123, i32 1588280515
  store i32 %51, i32* %16
  br label %63

; <label>:52:                                     ; preds = %17
  %53 = load volatile %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %3
  ret %"struct.std::_Rb_tree_node.27"* %53

; <label>:54:                                     ; preds = %17
  %55 = alloca %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node"*, align 8
  %56 = alloca %"class.std::vector"*, align 8
  store %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node"* %0, %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node"** %55, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %56, align 8
  %57 = load %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node"*, %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node"** %55, align 8
  %58 = getelementptr inbounds %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node", %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Alloc_node"* %57, i32 0, i32 0
  %59 = load %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %58, align 8
  %60 = load %"class.std::vector"*, %"class.std::vector"** %56, align 8
  %61 = call dereferenceable(24) %"class.std::vector"* @_ZSt7forwardISt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::vector"* dereferenceable(24) %60) #3
  %62 = call %"struct.std::_Rb_tree_node.27"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE14_M_create_nodeIJS2_EEEPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree.12"* %59, %"class.std::vector"* dereferenceable(24) %61)
  store i32 -1774760592, i32* %16
  br label %63

; <label>:63:                                     ; preds = %54, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt17_Rb_tree_iteratorISt6vectorIxSaIxEEEC2EPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_iterator.29"*, %"struct.std::_Rb_tree_node_base"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_iterator.29"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_iterator.29"* %0, %"struct.std::_Rb_tree_iterator.29"** %3, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_iterator.29"*, %"struct.std::_Rb_tree_iterator.29"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_iterator.29", %"struct.std::_Rb_tree_iterator.29"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  store %"struct.std::_Rb_tree_node_base"* %7, %"struct.std::_Rb_tree_node_base"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_S_valueEPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_node_base"* %0, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %3 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2, align 8
  %4 = bitcast %"struct.std::_Rb_tree_node_base"* %3 to %"struct.std::_Rb_tree_node.27"*
  %5 = call %"class.std::vector"* @_ZNKSt13_Rb_tree_nodeISt6vectorIxSaIxEEE9_M_valptrEv(%"struct.std::_Rb_tree_node.27"* %4)
  ret %"class.std::vector"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.27"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE14_M_create_nodeIJS2_EEEPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree.12"*, %"class.std::vector"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_node.27"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.608
  %7 = load i32, i32* @y.609
  %8 = sub i32 %6, 1490735067
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1490735067
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -2145060988, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %77
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -2145060988, label %20
    i32 1016318972, label %40
    i32 774884407, label %65
    i32 -1315920855, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %77

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1016318972, i32 -1315920855
  store i32 %39, i32* %16
  br label %77

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::_Rb_tree.12"*, align 8
  %42 = alloca %"class.std::vector"*, align 8
  %43 = alloca %"struct.std::_Rb_tree_node.27"*, align 8
  store %"class.std::_Rb_tree.12"* %0, %"class.std::_Rb_tree.12"** %41, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %42, align 8
  %44 = load %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %41, align 8
  %45 = call %"struct.std::_Rb_tree_node.27"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_M_get_nodeEv(%"class.std::_Rb_tree.12"* %44)
  store %"struct.std::_Rb_tree_node.27"* %45, %"struct.std::_Rb_tree_node.27"** %43, align 8
  %46 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %43, align 8
  %47 = load %"class.std::vector"*, %"class.std::vector"** %42, align 8
  %48 = call dereferenceable(24) %"class.std::vector"* @_ZSt7forwardISt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::vector"* dereferenceable(24) %47) #3
  call void @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE17_M_construct_nodeIJS2_EEEvPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree.12"* %44, %"struct.std::_Rb_tree_node.27"* %46, %"class.std::vector"* dereferenceable(24) %48)
  %49 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %43, align 8
  store %"struct.std::_Rb_tree_node.27"* %49, %"struct.std::_Rb_tree_node.27"** %3
  %50 = load i32, i32* @x.608
  %51 = load i32, i32* @y.609
  %52 = add i32 %50, 140544144
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 140544144
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 774884407, i32 -1315920855
  store i32 %64, i32* %16
  br label %77

; <label>:65:                                     ; preds = %17
  %66 = load volatile %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %3
  ret %"struct.std::_Rb_tree_node.27"* %66

; <label>:67:                                     ; preds = %17
  %68 = alloca %"class.std::_Rb_tree.12"*, align 8
  %69 = alloca %"class.std::vector"*, align 8
  %70 = alloca %"struct.std::_Rb_tree_node.27"*, align 8
  store %"class.std::_Rb_tree.12"* %0, %"class.std::_Rb_tree.12"** %68, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %69, align 8
  %71 = load %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %68, align 8
  %72 = call %"struct.std::_Rb_tree_node.27"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_M_get_nodeEv(%"class.std::_Rb_tree.12"* %71)
  store %"struct.std::_Rb_tree_node.27"* %72, %"struct.std::_Rb_tree_node.27"** %70, align 8
  %73 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %70, align 8
  %74 = load %"class.std::vector"*, %"class.std::vector"** %69, align 8
  %75 = call dereferenceable(24) %"class.std::vector"* @_ZSt7forwardISt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::vector"* dereferenceable(24) %74) #3
  call void @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE17_M_construct_nodeIJS2_EEEvPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree.12"* %71, %"struct.std::_Rb_tree_node.27"* %73, %"class.std::vector"* dereferenceable(24) %75)
  %76 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %70, align 8
  store i32 1016318972, i32* %16
  br label %77

; <label>:77:                                     ; preds = %67, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.27"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_M_get_nodeEv(%"class.std::_Rb_tree.12"*) #0 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node.27"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.610
  %6 = load i32, i32* @y.611
  %7 = sub i32 %5, -493364772
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -493364772
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1277385150, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1277385150, label %19
    i32 1570054818, label %39
    i32 1809495269, label %59
    i32 1965376443, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1570054818, i32 1965376443
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Rb_tree.12"*, align 8
  store %"class.std::_Rb_tree.12"* %0, %"class.std::_Rb_tree.12"** %40, align 8
  %41 = load %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %40, align 8
  %42 = call dereferenceable(1) %"class.std::allocator.13"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.12"* %41) #3
  %43 = call %"struct.std::_Rb_tree_node.27"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt6vectorIxSaIxEEEEE8allocateERS5_m(%"class.std::allocator.13"* dereferenceable(1) %42, i64 1)
  store %"struct.std::_Rb_tree_node.27"* %43, %"struct.std::_Rb_tree_node.27"** %2
  %44 = load i32, i32* @x.610
  %45 = load i32, i32* @y.611
  %46 = add i32 %44, -851535317
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -851535317
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1809495269, i32 1965376443
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %2
  ret %"struct.std::_Rb_tree_node.27"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::_Rb_tree.12"*, align 8
  store %"class.std::_Rb_tree.12"* %0, %"class.std::_Rb_tree.12"** %62, align 8
  %63 = load %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %62, align 8
  %64 = call dereferenceable(1) %"class.std::allocator.13"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.12"* %63) #3
  %65 = call %"struct.std::_Rb_tree_node.27"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt6vectorIxSaIxEEEEE8allocateERS5_m(%"class.std::allocator.13"* dereferenceable(1) %64, i64 1)
  store i32 1570054818, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE17_M_construct_nodeIJS2_EEEvPSt13_Rb_tree_nodeIS2_EDpOT_(%"class.std::_Rb_tree.12"*, %"struct.std::_Rb_tree_node.27"*, %"class.std::vector"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.612
  %5 = load i32, i32* @y.613
  %6 = sub i32 %4, -1455793507
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1455793507
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 false, true
  %17 = and i1 %14, false
  %18 = and i1 %12, %16
  %19 = and i1 %15, false
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 false, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %250

; <label>:30:                                     ; preds = %3, %250
  %31 = alloca %"class.std::_Rb_tree.12"*, align 8
  %32 = alloca %"struct.std::_Rb_tree_node.27"*, align 8
  %33 = alloca %"class.std::vector"*, align 8
  %34 = alloca i8*
  %35 = alloca i32
  store %"class.std::_Rb_tree.12"* %0, %"class.std::_Rb_tree.12"** %31, align 8
  store %"struct.std::_Rb_tree_node.27"* %1, %"struct.std::_Rb_tree_node.27"** %32, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %33, align 8
  %36 = load %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %31, align 8
  %37 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %32, align 8
  %38 = bitcast %"struct.std::_Rb_tree_node.27"* %37 to i8*
  %39 = bitcast i8* %38 to %"struct.std::_Rb_tree_node.27"*
  %40 = call dereferenceable(1) %"class.std::allocator.13"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.12"* %36) #3
  %41 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %32, align 8
  %42 = load i32, i32* @x.612
  %43 = load i32, i32* @y.613
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  br i1 %65, label %67, label %250

; <label>:67:                                     ; preds = %30
  %68 = invoke %"class.std::vector"* @_ZNSt13_Rb_tree_nodeISt6vectorIxSaIxEEE9_M_valptrEv(%"struct.std::_Rb_tree_node.27"* %41)
          to label %69 unwind label %144

; <label>:69:                                     ; preds = %67
  %70 = load i32, i32* @x.612
  %71 = load i32, i32* @y.613
  %72 = add i32 %70, -747792449
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, -747792449
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  br i1 %82, label %84, label %262

; <label>:84:                                     ; preds = %69, %262
  %85 = load %"class.std::vector"*, %"class.std::vector"** %33, align 8
  %86 = call dereferenceable(24) %"class.std::vector"* @_ZSt7forwardISt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::vector"* dereferenceable(24) %85) #3
  %87 = load i32, i32* @x.612
  %88 = load i32, i32* @y.613
  %89 = add i32 %87, -1801757300
  %90 = sub i32 %89, 1
  %91 = sub i32 %90, -1801757300
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 false, true
  %100 = and i1 %97, false
  %101 = and i1 %95, %99
  %102 = and i1 %98, false
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 false, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  br i1 %111, label %113, label %262

; <label>:113:                                    ; preds = %84
  invoke void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt6vectorIxSaIxEEEEE9constructIS3_JS3_EEEvRS5_PT_DpOT0_(%"class.std::allocator.13"* dereferenceable(1) %40, %"class.std::vector"* %68, %"class.std::vector"* dereferenceable(24) %86)
          to label %114 unwind label %144

; <label>:114:                                    ; preds = %113
  %115 = load i32, i32* @x.612
  %116 = load i32, i32* @y.613
  %117 = sub i32 %115, 1540089605
  %118 = sub i32 %117, 1
  %119 = add i32 %118, 1540089605
  %120 = sub i32 %115, 1
  %121 = mul i32 %115, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %116, 10
  %125 = and i1 %123, %124
  %126 = xor i1 %123, %124
  %127 = or i1 %125, %126
  %128 = or i1 %123, %124
  br i1 %127, label %129, label %265

; <label>:129:                                    ; preds = %114, %265
  %130 = load i32, i32* @x.612
  %131 = load i32, i32* @y.613
  %132 = sub i32 0, 1
  %133 = add i32 %130, %132
  %134 = sub i32 %130, 1
  %135 = mul i32 %130, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %131, 10
  %139 = and i1 %137, %138
  %140 = xor i1 %137, %138
  %141 = or i1 %139, %140
  %142 = or i1 %137, %138
  br i1 %141, label %143, label %265

; <label>:143:                                    ; preds = %129
  br label %199

; <label>:144:                                    ; preds = %113, %67
  %145 = landingpad { i8*, i32 }
          catch i8* null
  %146 = extractvalue { i8*, i32 } %145, 0
  store i8* %146, i8** %34, align 8
  %147 = extractvalue { i8*, i32 } %145, 1
  store i32 %147, i32* %35, align 4
  br label %148

; <label>:148:                                    ; preds = %144
  %149 = load i32, i32* @x.612
  %150 = load i32, i32* @y.613
  %151 = sub i32 0, 1
  %152 = add i32 %149, %151
  %153 = sub i32 %149, 1
  %154 = mul i32 %149, %152
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %150, 10
  %158 = xor i1 %156, true
  %159 = xor i1 %157, true
  %160 = xor i1 false, true
  %161 = and i1 %158, false
  %162 = and i1 %156, %160
  %163 = and i1 %159, false
  %164 = and i1 %157, %160
  %165 = or i1 %161, %162
  %166 = or i1 %163, %164
  %167 = xor i1 %165, %166
  %168 = or i1 %158, %159
  %169 = xor i1 %168, true
  %170 = or i1 false, %160
  %171 = and i1 %169, %170
  %172 = or i1 %167, %171
  %173 = or i1 %156, %157
  br i1 %172, label %174, label %266

; <label>:174:                                    ; preds = %148, %266
  %175 = load i8*, i8** %34, align 8
  %176 = call i8* @__cxa_begin_catch(i8* %175) #3
  %177 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %32, align 8
  %178 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %32, align 8
  call void @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.12"* %36, %"struct.std::_Rb_tree_node.27"* %178) #3
  %179 = load i32, i32* @x.612
  %180 = load i32, i32* @y.613
  %181 = sub i32 %179, -711672888
  %182 = sub i32 %181, 1
  %183 = add i32 %182, -711672888
  %184 = sub i32 %179, 1
  %185 = mul i32 %179, %183
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %180, 10
  %189 = and i1 %187, %188
  %190 = xor i1 %187, %188
  %191 = or i1 %189, %190
  %192 = or i1 %187, %188
  br i1 %191, label %193, label %266

; <label>:193:                                    ; preds = %174
  invoke void @__cxa_rethrow() #14
          to label %249 unwind label %194

; <label>:194:                                    ; preds = %193
  %195 = landingpad { i8*, i32 }
          cleanup
  %196 = extractvalue { i8*, i32 } %195, 0
  store i8* %196, i8** %34, align 8
  %197 = extractvalue { i8*, i32 } %195, 1
  store i32 %197, i32* %35, align 4
  invoke void @__cxa_end_catch()
          to label %198 unwind label %246

; <label>:198:                                    ; preds = %194
  br label %200

; <label>:199:                                    ; preds = %143
  ret void

; <label>:200:                                    ; preds = %198
  %201 = load i32, i32* @x.612
  %202 = load i32, i32* @y.613
  %203 = sub i32 0, 1
  %204 = add i32 %201, %203
  %205 = sub i32 %201, 1
  %206 = mul i32 %201, %204
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %202, 10
  %210 = xor i1 %208, true
  %211 = xor i1 %209, true
  %212 = xor i1 true, true
  %213 = and i1 %210, true
  %214 = and i1 %208, %212
  %215 = and i1 %211, true
  %216 = and i1 %209, %212
  %217 = or i1 %213, %214
  %218 = or i1 %215, %216
  %219 = xor i1 %217, %218
  %220 = or i1 %210, %211
  %221 = xor i1 %220, true
  %222 = or i1 true, %212
  %223 = and i1 %221, %222
  %224 = or i1 %219, %223
  %225 = or i1 %208, %209
  br i1 %224, label %226, label %271

; <label>:226:                                    ; preds = %200, %271
  %227 = load i8*, i8** %34, align 8
  %228 = load i32, i32* %35, align 4
  %229 = insertvalue { i8*, i32 } undef, i8* %227, 0
  %230 = insertvalue { i8*, i32 } %229, i32 %228, 1
  %231 = load i32, i32* @x.612
  %232 = load i32, i32* @y.613
  %233 = sub i32 %231, 793427334
  %234 = sub i32 %233, 1
  %235 = add i32 %234, 793427334
  %236 = sub i32 %231, 1
  %237 = mul i32 %231, %235
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %232, 10
  %241 = and i1 %239, %240
  %242 = xor i1 %239, %240
  %243 = or i1 %241, %242
  %244 = or i1 %239, %240
  br i1 %243, label %245, label %271

; <label>:245:                                    ; preds = %226
  resume { i8*, i32 } %230

; <label>:246:                                    ; preds = %194
  %247 = landingpad { i8*, i32 }
          catch i8* null
  %248 = extractvalue { i8*, i32 } %247, 0
  call void @__clang_call_terminate(i8* %248) #11
  unreachable

; <label>:249:                                    ; preds = %193
  unreachable

; <label>:250:                                    ; preds = %30, %3
  %251 = alloca %"class.std::_Rb_tree.12"*, align 8
  %252 = alloca %"struct.std::_Rb_tree_node.27"*, align 8
  %253 = alloca %"class.std::vector"*, align 8
  %254 = alloca i8*
  %255 = alloca i32
  store %"class.std::_Rb_tree.12"* %0, %"class.std::_Rb_tree.12"** %251, align 8
  store %"struct.std::_Rb_tree_node.27"* %1, %"struct.std::_Rb_tree_node.27"** %252, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %253, align 8
  %256 = load %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %251, align 8
  %257 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %252, align 8
  %258 = bitcast %"struct.std::_Rb_tree_node.27"* %257 to i8*
  %259 = bitcast i8* %258 to %"struct.std::_Rb_tree_node.27"*
  %260 = call dereferenceable(1) %"class.std::allocator.13"* @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE21_M_get_Node_allocatorEv(%"class.std::_Rb_tree.12"* %256) #3
  %261 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %252, align 8
  br label %30

; <label>:262:                                    ; preds = %84, %69
  %263 = load %"class.std::vector"*, %"class.std::vector"** %33, align 8
  %264 = call dereferenceable(24) %"class.std::vector"* @_ZSt7forwardISt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::vector"* dereferenceable(24) %263) #3
  br label %84

; <label>:265:                                    ; preds = %129, %114
  br label %129

; <label>:266:                                    ; preds = %174, %148
  %267 = load i8*, i8** %34, align 8
  %268 = call i8* @__cxa_begin_catch(i8* %267) #3
  %269 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %32, align 8
  %270 = load %"struct.std::_Rb_tree_node.27"*, %"struct.std::_Rb_tree_node.27"** %32, align 8
  call void @_ZNSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE11_M_put_nodeEPSt13_Rb_tree_nodeIS2_E(%"class.std::_Rb_tree.12"* %36, %"struct.std::_Rb_tree_node.27"* %270) #3
  br label %174

; <label>:271:                                    ; preds = %226, %200
  %272 = load i8*, i8** %34, align 8
  %273 = load i32, i32* %35, align 4
  %274 = insertvalue { i8*, i32 } undef, i8* %272, 0
  %275 = insertvalue { i8*, i32 } %274, i32 %273, 1
  br label %226
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.27"* @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt6vectorIxSaIxEEEEE8allocateERS5_m(%"class.std::allocator.13"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.13"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %3, align 8
  %6 = bitcast %"class.std::allocator.13"* %5 to %"class.__gnu_cxx::new_allocator.14"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.std::_Rb_tree_node.27"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt6vectorIxSaIxEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.14"* %6, i64 %7, i8* null)
  ret %"struct.std::_Rb_tree_node.27"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_Rb_tree_node.27"* @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt6vectorIxSaIxEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.14"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt6vectorIxSaIxEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.14"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -1519791206, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1519791206, label %16
    i32 -527473896, label %21
    i32 1492500028, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -527473896, i32 1492500028
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #14
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 56
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"struct.std::_Rb_tree_node.27"*
  ret %"struct.std::_Rb_tree_node.27"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt6vectorIxSaIxEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.14"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %2, align 8
  ret i64 329406144173384850
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt13_Rb_tree_nodeISt6vectorIxSaIxEEEEE9constructIS3_JS3_EEEvRS5_PT_DpOT0_(%"class.std::allocator.13"* dereferenceable(1), %"class.std::vector"*, %"class.std::vector"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.13"*, align 8
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca %"class.std::vector"*, align 8
  store %"class.std::allocator.13"* %0, %"class.std::allocator.13"** %4, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %5, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %6, align 8
  %7 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %4, align 8
  %8 = bitcast %"class.std::allocator.13"* %7 to %"class.__gnu_cxx::new_allocator.14"*
  %9 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %10 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8
  %11 = call dereferenceable(24) %"class.std::vector"* @_ZSt7forwardISt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::vector"* dereferenceable(24) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt6vectorIxSaIxEEEE9constructIS4_JS4_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.14"* %8, %"class.std::vector"* %9, %"class.std::vector"* dereferenceable(24) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt6vectorIxSaIxEEEE9constructIS4_JS4_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.14"*, %"class.std::vector"*, %"class.std::vector"* dereferenceable(24)) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca %"class.std::vector"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %0, %"class.__gnu_cxx::new_allocator.14"** %4, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %5, align 8
  store %"class.std::vector"* %2, %"class.std::vector"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %4, align 8
  %8 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %9 = bitcast %"class.std::vector"* %8 to i8*
  %10 = bitcast i8* %9 to %"class.std::vector"*
  %11 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8
  %12 = call dereferenceable(24) %"class.std::vector"* @_ZSt7forwardISt6vectorIxSaIxEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::vector"* dereferenceable(24) %11) #3
  call void @_ZNSt6vectorIxSaIxEEC2EOS1_(%"class.std::vector"* %10, %"class.std::vector"* dereferenceable(24) %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEEC2EOS1_(%"class.std::vector"*, %"class.std::vector"* dereferenceable(24)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %8 = call dereferenceable(24) %"class.std::vector"* @_ZSt4moveIRSt6vectorIxSaIxEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::vector"* dereferenceable(24) %7) #3
  %9 = bitcast %"class.std::vector"* %8 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIxSaIxEEC2EOS1_(%"struct.std::_Vector_base"* %6, %"struct.std::_Vector_base"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEEC2EOS1_(%"struct.std::_Vector_base"*, %"struct.std::_Vector_base"* dereferenceable(24)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.626
  %6 = load i32, i32* @y.627
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1695810206, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %76
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1695810206, label %18
    i32 -688842321, label %26
    i32 269196861, label %64
    i32 -2071584924, label %65
  ]

; <label>:17:                                     ; preds = %15
  br label %76

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -688842321, i32 -2071584924
  store i32 %25, i32* %14
  br label %76

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base"*, align 8
  %28 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %27, align 8
  store %"struct.std::_Vector_base"* %1, %"struct.std::_Vector_base"** %28, align 8
  %29 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %27, align 8
  %30 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %29, i32 0, i32 0
  %31 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %28, align 8
  %32 = call dereferenceable(1) %"class.std::allocator.4"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %31) #3
  %33 = call dereferenceable(1) %"class.std::allocator.4"* @_ZSt4moveIRSaIxEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.4"* dereferenceable(1) %32) #3
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2EOS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %30, %"class.std::allocator.4"* dereferenceable(1) %33) #3
  %34 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %29, i32 0, i32 0
  %35 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %28, align 8
  %36 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %35, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %34, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* dereferenceable(24) %36) #3
  %37 = load i32, i32* @x.626
  %38 = load i32, i32* @y.627
  %39 = sub i32 %37, -1673666670
  %40 = sub i32 %39, 1
  %41 = add i32 %40, -1673666670
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 269196861, i32 -2071584924
  store i32 %63, i32* %14
  br label %76

; <label>:64:                                     ; preds = %15
  ret void

; <label>:65:                                     ; preds = %15
  %66 = alloca %"struct.std::_Vector_base"*, align 8
  %67 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %66, align 8
  store %"struct.std::_Vector_base"* %1, %"struct.std::_Vector_base"** %67, align 8
  %68 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %66, align 8
  %69 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %68, i32 0, i32 0
  %70 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %67, align 8
  %71 = call dereferenceable(1) %"class.std::allocator.4"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %70) #3
  %72 = call dereferenceable(1) %"class.std::allocator.4"* @_ZSt4moveIRSaIxEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.4"* dereferenceable(1) %71) #3
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2EOS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %69, %"class.std::allocator.4"* dereferenceable(1) %72) #3
  %73 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %68, i32 0, i32 0
  %74 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %67, align 8
  %75 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %74, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %73, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* dereferenceable(24) %75) #3
  store i32 -688842321, i32* %14
  br label %76

; <label>:76:                                     ; preds = %65, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.4"* @_ZSt4moveIRSaIxEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.4"* dereferenceable(1)) #4 comdat {
  %2 = alloca %"class.std::allocator.4"*, align 8
  store %"class.std::allocator.4"* %0, %"class.std::allocator.4"** %2, align 8
  %3 = load %"class.std::allocator.4"*, %"class.std::allocator.4"** %2, align 8
  ret %"class.std::allocator.4"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2EOS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"class.std::allocator.4"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.4"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.4"* %1, %"class.std::allocator.4"** %4, align 8
  %5 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5 to %"class.std::allocator.4"*
  %7 = load %"class.std::allocator.4"*, %"class.std::allocator.4"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.4"* @_ZSt4moveIRSaIxEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.4"* dereferenceable(1) %7) #3
  call void @_ZNSaIxEC2ERKS_(%"class.std::allocator.4"* %6, %"class.std::allocator.4"* dereferenceable(1) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 0
  store i64* null, i64** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 1
  store i64* null, i64** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 2
  store i64* null, i64** %11, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* dereferenceable(24)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %1, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPxEvRT_S2_(i64** dereferenceable(8) %6, i64** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPxEvRT_S2_(i64** dereferenceable(8) %9, i64** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPxEvRT_S2_(i64** dereferenceable(8) %12, i64** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPxEvRT_S2_(i64** dereferenceable(8), i64** dereferenceable(8)) #4 comdat {
  %3 = alloca i64**, align 8
  %4 = alloca i64**, align 8
  %5 = alloca i64*, align 8
  store i64** %0, i64*** %3, align 8
  store i64** %1, i64*** %4, align 8
  %6 = load i64**, i64*** %3, align 8
  %7 = call dereferenceable(8) i64** @_ZSt4moveIRPxEONSt16remove_referenceIT_E4typeEOS3_(i64** dereferenceable(8) %6) #3
  %8 = load i64*, i64** %7, align 8
  store i64* %8, i64** %5, align 8
  %9 = load i64**, i64*** %4, align 8
  %10 = call dereferenceable(8) i64** @_ZSt4moveIRPxEONSt16remove_referenceIT_E4typeEOS3_(i64** dereferenceable(8) %9) #3
  %11 = load i64*, i64** %10, align 8
  %12 = load i64**, i64*** %3, align 8
  store i64* %11, i64** %12, align 8
  %13 = call dereferenceable(8) i64** @_ZSt4moveIRPxEONSt16remove_referenceIT_E4typeEOS3_(i64** dereferenceable(8) %5) #3
  %14 = load i64*, i64** %13, align 8
  %15 = load i64**, i64*** %4, align 8
  store i64* %14, i64** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64** @_ZSt4moveIRPxEONSt16remove_referenceIT_E4typeEOS3_(i64** dereferenceable(8)) #4 comdat {
  %2 = alloca i64**, align 8
  store i64** %0, i64*** %2, align 8
  %3 = load i64**, i64*** %2, align 8
  ret i64** %3
}

; Function Attrs: nounwind readonly
declare %"struct.std::_Rb_tree_node_base"* @_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_node_base"*) #12

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE5beginEv(%"class.std::_Rb_tree.12"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_node_base"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.638
  %6 = load i32, i32* @y.639
  %7 = sub i32 %5, 824241720
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 824241720
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2034245481, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %76
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2034245481, label %19
    i32 1955169466, label %39
    i32 1835500650, label %64
    i32 -636142975, label %66
  ]

; <label>:18:                                     ; preds = %16
  br label %76

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1955169466, i32 -636142975
  store i32 %38, i32* %15
  br label %76

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Rb_tree_const_iterator.19", align 8
  %41 = alloca %"class.std::_Rb_tree.12"*, align 8
  store %"class.std::_Rb_tree.12"* %0, %"class.std::_Rb_tree.12"** %41, align 8
  %42 = load %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %41, align 8
  %43 = getelementptr inbounds %"class.std::_Rb_tree.12", %"class.std::_Rb_tree.12"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %43, i32 0, i32 1
  %45 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %44, i32 0, i32 2
  %46 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %45, align 8
  call void @_ZNSt23_Rb_tree_const_iteratorISt6vectorIxSaIxEEEC2EPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_const_iterator.19"* %40, %"struct.std::_Rb_tree_node_base"* %46) #3
  %47 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.19", %"struct.std::_Rb_tree_const_iterator.19"* %40, i32 0, i32 0
  %48 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %47, align 8
  store %"struct.std::_Rb_tree_node_base"* %48, %"struct.std::_Rb_tree_node_base"** %2
  %49 = load i32, i32* @x.638
  %50 = load i32, i32* @y.639
  %51 = sub i32 %49, -43665221
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -43665221
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 1835500650, i32 -636142975
  store i32 %63, i32* %15
  br label %76

; <label>:64:                                     ; preds = %16
  %65 = load volatile %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %2
  ret %"struct.std::_Rb_tree_node_base"* %65

; <label>:66:                                     ; preds = %16
  %67 = alloca %"struct.std::_Rb_tree_const_iterator.19", align 8
  %68 = alloca %"class.std::_Rb_tree.12"*, align 8
  store %"class.std::_Rb_tree.12"* %0, %"class.std::_Rb_tree.12"** %68, align 8
  %69 = load %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %68, align 8
  %70 = getelementptr inbounds %"class.std::_Rb_tree.12", %"class.std::_Rb_tree.12"* %69, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %70, i32 0, i32 1
  %72 = getelementptr inbounds %"struct.std::_Rb_tree_node_base", %"struct.std::_Rb_tree_node_base"* %71, i32 0, i32 2
  %73 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %72, align 8
  call void @_ZNSt23_Rb_tree_const_iteratorISt6vectorIxSaIxEEEC2EPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_const_iterator.19"* %67, %"struct.std::_Rb_tree_node_base"* %73) #3
  %74 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.19", %"struct.std::_Rb_tree_const_iterator.19"* %67, i32 0, i32 0
  %75 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %74, align 8
  store i32 1955169466, i32* %15
  br label %76

; <label>:76:                                     ; preds = %66, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt23_Rb_tree_const_iteratorISt6vectorIxSaIxEEEC2EPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_const_iterator.19"*, %"struct.std::_Rb_tree_node_base"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Rb_tree_const_iterator.19"*, align 8
  %4 = alloca %"struct.std::_Rb_tree_node_base"*, align 8
  store %"struct.std::_Rb_tree_const_iterator.19"* %0, %"struct.std::_Rb_tree_const_iterator.19"** %3, align 8
  store %"struct.std::_Rb_tree_node_base"* %1, %"struct.std::_Rb_tree_node_base"** %4, align 8
  %5 = load %"struct.std::_Rb_tree_const_iterator.19"*, %"struct.std::_Rb_tree_const_iterator.19"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.19", %"struct.std::_Rb_tree_const_iterator.19"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %4, align 8
  store %"struct.std::_Rb_tree_node_base"* %7, %"struct.std::_Rb_tree_node_base"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_Rb_tree_node_base"* @_ZNKSt8_Rb_treeISt6vectorIxSaIxEES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE3endEv(%"class.std::_Rb_tree.12"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Rb_tree_const_iterator.19", align 8
  %3 = alloca %"class.std::_Rb_tree.12"*, align 8
  store %"class.std::_Rb_tree.12"* %0, %"class.std::_Rb_tree.12"** %3, align 8
  %4 = load %"class.std::_Rb_tree.12"*, %"class.std::_Rb_tree.12"** %3, align 8
  %5 = getelementptr inbounds %"class.std::_Rb_tree.12", %"class.std::_Rb_tree.12"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl", %"struct.std::_Rb_tree<std::vector<long long, std::allocator<long long> >, std::vector<long long, std::allocator<long long> >, std::_Identity<std::vector<long long, std::allocator<long long> > >, std::less<std::vector<long long, std::allocator<long long> > >, std::allocator<std::vector<long long, std::allocator<long long> > > >::_Rb_tree_impl"* %5, i32 0, i32 1
  call void @_ZNSt23_Rb_tree_const_iteratorISt6vectorIxSaIxEEEC2EPKSt18_Rb_tree_node_base(%"struct.std::_Rb_tree_const_iterator.19"* %2, %"struct.std::_Rb_tree_node_base"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_Rb_tree_const_iterator.19", %"struct.std::_Rb_tree_const_iterator.19"* %2, i32 0, i32 0
  %8 = load %"struct.std::_Rb_tree_node_base"*, %"struct.std::_Rb_tree_node_base"** %7, align 8
  ret %"struct.std::_Rb_tree_node_base"* %8
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s580643020.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline noreturn nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind }
attributes #12 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readonly }
attributes #14 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
