; ModuleID = 'build_ollvm/programs/p00747/s060887292.ll'
source_filename = "Project_CodeNet_C++1400/p00747/s060887292.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@dx = local_unnamed_addr global [4 x i32] [i32 0, i32 1, i32 0, i32 -1], align 16
@dy = local_unnamed_addr global [4 x i32] [i32 -1, i32 0, i32 1, i32 0], align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s060887292.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [70 x [70 x i32]], align 16
  %10 = alloca [35 x [35 x i32]], align 16
  %11 = alloca i32, align 4
  %12 = getelementptr inbounds [35 x [35 x i32]], [35 x [35 x i32]]* %10, i64 0, i64 0, i64 0
  br label %13

13:                                               ; preds = %.backedge, %0
  %.077 = phi i32 [ undef, %0 ], [ %.077.be, %.backedge ]
  %.075 = phi i32 [ undef, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i32 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i32 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.069 = phi i32 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i32 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i32 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i32 [ undef, %0 ], [ %.063.be, %.backedge ]
  %.061 = phi i32 [ undef, %0 ], [ %.061.be, %.backedge ]
  %.059 = phi i32 [ undef, %0 ], [ %.059.be, %.backedge ]
  %.057 = phi i32 [ undef, %0 ], [ %.057.be, %.backedge ]
  %.0 = phi i32 [ -1264030997, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1264030997, label %14
    i32 482221259, label %24
    i32 1532309691, label %38
    i32 -1621651709, label %40
    i32 -522016005, label %44
    i32 -1191553543, label %45
    i32 874112927, label %46
    i32 -1641912086, label %52
    i32 239091839, label %56
    i32 874830955, label %57
    i32 -1186723739, label %58
    i32 -1879699029, label %64
    i32 -979605418, label %70
    i32 1458252691, label %72
    i32 -67781749, label %73
    i32 2124771753, label %75
    i32 1264716973, label %76
    i32 -741795009, label %80
    i32 889800075, label %90
    i32 -1531148401, label %100
    i32 1009237834, label %101
    i32 47424552, label %111
    i32 -425974525, label %123
    i32 -1919572355, label %125
    i32 -285732643, label %129
    i32 -1691689002, label %131
    i32 1096657497, label %132
    i32 -752387702, label %133
    i32 34337018, label %143
    i32 1393529738, label %153
    i32 -1163553208, label %154
    i32 -412722176, label %159
    i32 -1890655454, label %169
    i32 530139354, label %179
    i32 -1211046482, label %180
    i32 -2062543491, label %190
    i32 1313019121, label %202
    i32 -1747922292, label %204
    i32 138323147, label %214
    i32 2117645971, label %224
    i32 1811674700, label %225
    i32 -711794597, label %229
    i32 1551007507, label %236
    i32 -2091862951, label %246
    i32 1841541398, label %256
    i32 -624336576, label %257
    i32 -459477458, label %267
    i32 -315656291, label %278
    i32 -219915840, label %280
    i32 1679139295, label %290
    i32 1230518318, label %308
    i32 444840042, label %310
    i32 1909334813, label %314
    i32 -541180810, label %324
    i32 1184406122, label %335
    i32 385793747, label %337
    i32 155154957, label %341
    i32 -983574229, label %350
    i32 334993892, label %357
    i32 -1032471496, label %362
    i32 1611408649, label %363
    i32 -1370156166, label %373
    i32 4198003, label %383
    i32 1585050320, label %384
    i32 -1487541925, label %386
    i32 258817873, label %387
    i32 -1039472533, label %388
    i32 -1965207320, label %390
    i32 117259118, label %391
    i32 117222405, label %393
    i32 -1722634733, label %394
    i32 -830894528, label %396
    i32 -1030187046, label %407
    i32 -377927193, label %417
    i32 -661320462, label %429
    i32 1629323634, label %430
    i32 -469088433, label %440
    i32 1801069299, label %460
    i32 -897400068, label %461
    i32 920442487, label %462
    i32 529849162, label %463
    i32 -1520510096, label %466
    i32 -334381770, label %467
    i32 -1800208093, label %468
    i32 1590643779, label %469
    i32 -1498572217, label %470
    i32 943005928, label %471
    i32 343737892, label %472
    i32 1316374568, label %473
    i32 -2043943169, label %474
    i32 -1379858506, label %482
    i32 -1124356219, label %483
    i32 900493676, label %484
    i32 -681367975, label %487
  ]

.backedge:                                        ; preds = %13, %487, %484, %483, %482, %474, %473, %472, %471, %470, %469, %468, %467, %466, %463, %461, %460, %440, %430, %429, %417, %407, %396, %394, %393, %391, %390, %388, %387, %386, %384, %383, %373, %363, %362, %357, %350, %341, %337, %335, %324, %314, %310, %308, %290, %280, %278, %267, %257, %256, %246, %236, %229, %225, %224, %214, %204, %202, %190, %180, %179, %169, %159, %154, %153, %143, %133, %132, %131, %129, %125, %123, %111, %101, %100, %90, %80, %76, %75, %73, %72, %70, %64, %58, %57, %56, %52, %46, %45, %44, %40, %38, %24, %14
  %.077.be = phi i32 [ %.077, %13 ], [ %.077, %487 ], [ %.077, %484 ], [ %.077, %483 ], [ %.077, %482 ], [ %.077, %474 ], [ %.077, %473 ], [ %.077, %472 ], [ %.077, %471 ], [ %.077, %470 ], [ %.077, %469 ], [ %.077, %468 ], [ %.077, %467 ], [ %.077, %466 ], [ %.077, %463 ], [ %.077, %461 ], [ %.077, %460 ], [ %.077, %440 ], [ %.077, %430 ], [ %.077, %429 ], [ %.077, %417 ], [ %.077, %407 ], [ %.077, %396 ], [ %.077, %394 ], [ %.077, %393 ], [ %.077, %391 ], [ %.077, %390 ], [ %.077, %388 ], [ %.077, %387 ], [ %.077, %386 ], [ %.077, %384 ], [ %.077, %383 ], [ %.077, %373 ], [ %.077, %363 ], [ %.077, %362 ], [ %.077, %357 ], [ %.077, %350 ], [ %.077, %341 ], [ %.077, %337 ], [ %.077, %335 ], [ %.077, %324 ], [ %.077, %314 ], [ %.077, %310 ], [ %.077, %308 ], [ %.077, %290 ], [ %.077, %280 ], [ %.077, %278 ], [ %.077, %267 ], [ %.077, %257 ], [ %.077, %256 ], [ %.077, %246 ], [ %.077, %236 ], [ %.077, %229 ], [ %.077, %225 ], [ %.077, %224 ], [ %.077, %214 ], [ %.077, %204 ], [ %.077, %202 ], [ %.077, %190 ], [ %.077, %180 ], [ %.077, %179 ], [ %.077, %169 ], [ %.077, %159 ], [ %.077, %154 ], [ %.077, %153 ], [ %.077, %143 ], [ %.077, %133 ], [ %.077, %132 ], [ %.077, %131 ], [ %.077, %129 ], [ %.077, %125 ], [ %.077, %123 ], [ %.077, %111 ], [ %.077, %101 ], [ %.077, %100 ], [ %.077, %90 ], [ %.077, %80 ], [ %.077, %76 ], [ %.077, %75 ], [ %74, %73 ], [ %.077, %72 ], [ %.077, %70 ], [ %.077, %64 ], [ %.077, %58 ], [ %.077, %57 ], [ %.077, %56 ], [ %.077, %52 ], [ %.077, %46 ], [ 0, %45 ], [ %.077, %44 ], [ %.077, %40 ], [ %.077, %38 ], [ %.077, %24 ], [ %.077, %14 ]
  %.075.be = phi i32 [ %.075, %13 ], [ %.075, %487 ], [ %.075, %484 ], [ %.075, %483 ], [ %.075, %482 ], [ %.075, %474 ], [ %.075, %473 ], [ %.075, %472 ], [ %.075, %471 ], [ %.075, %470 ], [ %.075, %469 ], [ %.075, %468 ], [ %.075, %467 ], [ %.075, %466 ], [ %.075, %463 ], [ %.075, %461 ], [ %.075, %460 ], [ %.075, %440 ], [ %.075, %430 ], [ %.075, %429 ], [ %.075, %417 ], [ %.075, %407 ], [ %.075, %396 ], [ %.075, %394 ], [ %.075, %393 ], [ %.075, %391 ], [ %.075, %390 ], [ %.075, %388 ], [ %.075, %387 ], [ %.075, %386 ], [ %.075, %384 ], [ %.075, %383 ], [ %.075, %373 ], [ %.075, %363 ], [ %.075, %362 ], [ %.075, %357 ], [ %.075, %350 ], [ %.075, %341 ], [ %.075, %337 ], [ %.075, %335 ], [ %.075, %324 ], [ %.075, %314 ], [ %.075, %310 ], [ %.075, %308 ], [ %.075, %290 ], [ %.075, %280 ], [ %.075, %278 ], [ %.075, %267 ], [ %.075, %257 ], [ %.075, %256 ], [ %.075, %246 ], [ %.075, %236 ], [ %.075, %229 ], [ %.075, %225 ], [ %.075, %224 ], [ %.075, %214 ], [ %.075, %204 ], [ %.075, %202 ], [ %.075, %190 ], [ %.075, %180 ], [ %.075, %179 ], [ %.075, %169 ], [ %.075, %159 ], [ %.075, %154 ], [ %.075, %153 ], [ %.075, %143 ], [ %.075, %133 ], [ %.075, %132 ], [ %.075, %131 ], [ %.075, %129 ], [ %.075, %125 ], [ %.075, %123 ], [ %.075, %111 ], [ %.075, %101 ], [ %.075, %100 ], [ %.075, %90 ], [ %.075, %80 ], [ %.075, %76 ], [ %.075, %75 ], [ %.075, %73 ], [ %.075, %72 ], [ %.075, %70 ], [ %.075, %64 ], [ %.075, %58 ], [ %.075, %57 ], [ 1, %56 ], [ 0, %52 ], [ %.075, %46 ], [ %.075, %45 ], [ %.075, %44 ], [ %.075, %40 ], [ %.075, %38 ], [ %.075, %24 ], [ %.075, %14 ]
  %.073.be = phi i32 [ %.073, %13 ], [ %.073, %487 ], [ %.073, %484 ], [ %.073, %483 ], [ %.073, %482 ], [ %.073, %474 ], [ %.073, %473 ], [ %.073, %472 ], [ %.073, %471 ], [ %.073, %470 ], [ %.073, %469 ], [ %.073, %468 ], [ %.073, %467 ], [ %.073, %466 ], [ %.073, %463 ], [ %.073, %461 ], [ %.073, %460 ], [ %.073, %440 ], [ %.073, %430 ], [ %.073, %429 ], [ %.073, %417 ], [ %.073, %407 ], [ %.073, %396 ], [ %.073, %394 ], [ %.073, %393 ], [ %.073, %391 ], [ %.073, %390 ], [ %.073, %388 ], [ %.073, %387 ], [ %.073, %386 ], [ %.073, %384 ], [ %.073, %383 ], [ %.073, %373 ], [ %.073, %363 ], [ %.073, %362 ], [ %.073, %357 ], [ %.073, %350 ], [ %.073, %341 ], [ %.073, %337 ], [ %.073, %335 ], [ %.073, %324 ], [ %.073, %314 ], [ %.073, %310 ], [ %.073, %308 ], [ %.073, %290 ], [ %.073, %280 ], [ %.073, %278 ], [ %.073, %267 ], [ %.073, %257 ], [ %.073, %256 ], [ %.073, %246 ], [ %.073, %236 ], [ %.073, %229 ], [ %.073, %225 ], [ %.073, %224 ], [ %.073, %214 ], [ %.073, %204 ], [ %.073, %202 ], [ %.073, %190 ], [ %.073, %180 ], [ %.073, %179 ], [ %.073, %169 ], [ %.073, %159 ], [ %.073, %154 ], [ %.073, %153 ], [ %.073, %143 ], [ %.073, %133 ], [ %.073, %132 ], [ %.073, %131 ], [ %.073, %129 ], [ %.073, %125 ], [ %.073, %123 ], [ %.073, %111 ], [ %.073, %101 ], [ %.073, %100 ], [ %.073, %90 ], [ %.073, %80 ], [ %.073, %76 ], [ %.073, %75 ], [ %.073, %73 ], [ %.073, %72 ], [ %71, %70 ], [ %.073, %64 ], [ %.073, %58 ], [ %.075, %57 ], [ %.073, %56 ], [ %.073, %52 ], [ %.073, %46 ], [ %.073, %45 ], [ %.073, %44 ], [ %.073, %40 ], [ %.073, %38 ], [ %.073, %24 ], [ %.073, %14 ]
  %.071.be = phi i32 [ %.071, %13 ], [ %.071, %487 ], [ %.071, %484 ], [ %.071, %483 ], [ %.071, %482 ], [ %.071, %474 ], [ %.071, %473 ], [ %.071, %472 ], [ %.071, %471 ], [ %.071, %470 ], [ %.071, %469 ], [ %.071, %468 ], [ %.071, %467 ], [ %.071, %466 ], [ %.071, %463 ], [ %.071, %461 ], [ %.071, %460 ], [ %.071, %440 ], [ %.071, %430 ], [ %.071, %429 ], [ %.071, %417 ], [ %.071, %407 ], [ %.071, %396 ], [ %.071, %394 ], [ %.071, %393 ], [ %.071, %391 ], [ %.071, %390 ], [ %.071, %388 ], [ %.071, %387 ], [ %.071, %386 ], [ %.071, %384 ], [ %.071, %383 ], [ %.071, %373 ], [ %.071, %363 ], [ %.071, %362 ], [ %.071, %357 ], [ %.071, %350 ], [ %.071, %341 ], [ %.071, %337 ], [ %.071, %335 ], [ %.071, %324 ], [ %.071, %314 ], [ %.071, %310 ], [ %.071, %308 ], [ %.071, %290 ], [ %.071, %280 ], [ %.071, %278 ], [ %.071, %267 ], [ %.071, %257 ], [ %.071, %256 ], [ %.071, %246 ], [ %.071, %236 ], [ %.071, %229 ], [ %.071, %225 ], [ %.071, %224 ], [ %.071, %214 ], [ %.071, %204 ], [ %.071, %202 ], [ %.071, %190 ], [ %.071, %180 ], [ %.071, %179 ], [ %.071, %169 ], [ %.071, %159 ], [ %.071, %154 ], [ %.071, %153 ], [ %.071, %143 ], [ %.071, %133 ], [ %.neg, %132 ], [ %.071, %131 ], [ %.071, %129 ], [ %.071, %125 ], [ %.071, %123 ], [ %.071, %111 ], [ %.071, %101 ], [ %.071, %100 ], [ %.071, %90 ], [ %.071, %80 ], [ %.071, %76 ], [ 0, %75 ], [ %.071, %73 ], [ %.071, %72 ], [ %.071, %70 ], [ %.071, %64 ], [ %.071, %58 ], [ %.071, %57 ], [ %.071, %56 ], [ %.071, %52 ], [ %.071, %46 ], [ %.071, %45 ], [ %.071, %44 ], [ %.071, %40 ], [ %.071, %38 ], [ %.071, %24 ], [ %.071, %14 ]
  %.069.be = phi i32 [ %.069, %13 ], [ %.069, %487 ], [ %.069, %484 ], [ %.069, %483 ], [ %.069, %482 ], [ %.069, %474 ], [ %.069, %473 ], [ %.069, %472 ], [ %.069, %471 ], [ %.069, %470 ], [ %.069, %469 ], [ %.069, %468 ], [ %.069, %467 ], [ 0, %466 ], [ %.069, %463 ], [ %.069, %461 ], [ %.069, %460 ], [ %.069, %440 ], [ %.069, %430 ], [ %.069, %429 ], [ %.069, %417 ], [ %.069, %407 ], [ %.069, %396 ], [ %.069, %394 ], [ %.069, %393 ], [ %.069, %391 ], [ %.069, %390 ], [ %.069, %388 ], [ %.069, %387 ], [ %.069, %386 ], [ %.069, %384 ], [ %.069, %383 ], [ %.069, %373 ], [ %.069, %363 ], [ %.069, %362 ], [ %.069, %357 ], [ %.069, %350 ], [ %.069, %341 ], [ %.069, %337 ], [ %.069, %335 ], [ %.069, %324 ], [ %.069, %314 ], [ %.069, %310 ], [ %.069, %308 ], [ %.069, %290 ], [ %.069, %280 ], [ %.069, %278 ], [ %.069, %267 ], [ %.069, %257 ], [ %.069, %256 ], [ %.069, %246 ], [ %.069, %236 ], [ %.069, %229 ], [ %.069, %225 ], [ %.069, %224 ], [ %.069, %214 ], [ %.069, %204 ], [ %.069, %202 ], [ %.069, %190 ], [ %.069, %180 ], [ %.069, %179 ], [ %.069, %169 ], [ %.069, %159 ], [ %.069, %154 ], [ %.069, %153 ], [ %.069, %143 ], [ %.069, %133 ], [ %.069, %132 ], [ %.069, %131 ], [ %130, %129 ], [ %.069, %125 ], [ %.069, %123 ], [ %.069, %111 ], [ %.069, %101 ], [ %.069, %100 ], [ 0, %90 ], [ %.069, %80 ], [ %.069, %76 ], [ %.069, %75 ], [ %.069, %73 ], [ %.069, %72 ], [ %.069, %70 ], [ %.069, %64 ], [ %.069, %58 ], [ %.069, %57 ], [ %.069, %56 ], [ %.069, %52 ], [ %.069, %46 ], [ %.069, %45 ], [ %.069, %44 ], [ %.069, %40 ], [ %.069, %38 ], [ %.069, %24 ], [ %.069, %14 ]
  %.067.be = phi i32 [ %.067, %13 ], [ %.067, %487 ], [ %.067, %484 ], [ %.067, %483 ], [ %.067, %482 ], [ %.067, %474 ], [ %.067, %473 ], [ %.067, %472 ], [ %.067, %471 ], [ %.067, %470 ], [ %.067, %469 ], [ 1, %468 ], [ %.067, %467 ], [ %.067, %466 ], [ %.067, %463 ], [ %.067, %461 ], [ %.067, %460 ], [ %.067, %440 ], [ %.067, %430 ], [ %.067, %429 ], [ %.067, %417 ], [ %.067, %407 ], [ %.067, %396 ], [ %395, %394 ], [ %.067, %393 ], [ %.067, %391 ], [ %.067, %390 ], [ %.067, %388 ], [ %.067, %387 ], [ %.067, %386 ], [ %.067, %384 ], [ %.067, %383 ], [ %.067, %373 ], [ %.067, %363 ], [ %.067, %362 ], [ %.067, %357 ], [ %.067, %350 ], [ %.067, %341 ], [ %.067, %337 ], [ %.067, %335 ], [ %.067, %324 ], [ %.067, %314 ], [ %.067, %310 ], [ %.067, %308 ], [ %.067, %290 ], [ %.067, %280 ], [ %.067, %278 ], [ %.067, %267 ], [ %.067, %257 ], [ %.067, %256 ], [ %.067, %246 ], [ %.067, %236 ], [ %.067, %229 ], [ %.067, %225 ], [ %.067, %224 ], [ %.067, %214 ], [ %.067, %204 ], [ %.067, %202 ], [ %.067, %190 ], [ %.067, %180 ], [ %.067, %179 ], [ %.067, %169 ], [ %.067, %159 ], [ %.067, %154 ], [ %.067, %153 ], [ 1, %143 ], [ %.067, %133 ], [ %.067, %132 ], [ %.067, %131 ], [ %.067, %129 ], [ %.067, %125 ], [ %.067, %123 ], [ %.067, %111 ], [ %.067, %101 ], [ %.067, %100 ], [ %.067, %90 ], [ %.067, %80 ], [ %.067, %76 ], [ %.067, %75 ], [ %.067, %73 ], [ %.067, %72 ], [ %.067, %70 ], [ %.067, %64 ], [ %.067, %58 ], [ %.067, %57 ], [ %.067, %56 ], [ %.067, %52 ], [ %.067, %46 ], [ %.067, %45 ], [ %.067, %44 ], [ %.067, %40 ], [ %.067, %38 ], [ %.067, %24 ], [ %.067, %14 ]
  %.065.be = phi i32 [ %.065, %13 ], [ %.065, %487 ], [ %.065, %484 ], [ %.065, %483 ], [ %.065, %482 ], [ %.065, %474 ], [ %.065, %473 ], [ %.065, %472 ], [ %.065, %471 ], [ %.065, %470 ], [ 0, %469 ], [ %.065, %468 ], [ %.065, %467 ], [ %.065, %466 ], [ %.065, %463 ], [ %.065, %461 ], [ %.065, %460 ], [ %.065, %440 ], [ %.065, %430 ], [ %.065, %429 ], [ %.065, %417 ], [ %.065, %407 ], [ %.065, %396 ], [ %.065, %394 ], [ %.065, %393 ], [ %392, %391 ], [ %.065, %390 ], [ %.065, %388 ], [ %.065, %387 ], [ %.065, %386 ], [ %.065, %384 ], [ %.065, %383 ], [ %.065, %373 ], [ %.065, %363 ], [ %.065, %362 ], [ %.065, %357 ], [ %.065, %350 ], [ %.065, %341 ], [ %.065, %337 ], [ %.065, %335 ], [ %.065, %324 ], [ %.065, %314 ], [ %.065, %310 ], [ %.065, %308 ], [ %.065, %290 ], [ %.065, %280 ], [ %.065, %278 ], [ %.065, %267 ], [ %.065, %257 ], [ %.065, %256 ], [ %.065, %246 ], [ %.065, %236 ], [ %.065, %229 ], [ %.065, %225 ], [ %.065, %224 ], [ %.065, %214 ], [ %.065, %204 ], [ %.065, %202 ], [ %.065, %190 ], [ %.065, %180 ], [ %.065, %179 ], [ 0, %169 ], [ %.065, %159 ], [ %.065, %154 ], [ %.065, %153 ], [ %.065, %143 ], [ %.065, %133 ], [ %.065, %132 ], [ %.065, %131 ], [ %.065, %129 ], [ %.065, %125 ], [ %.065, %123 ], [ %.065, %111 ], [ %.065, %101 ], [ %.065, %100 ], [ %.065, %90 ], [ %.065, %80 ], [ %.065, %76 ], [ %.065, %75 ], [ %.065, %73 ], [ %.065, %72 ], [ %.065, %70 ], [ %.065, %64 ], [ %.065, %58 ], [ %.065, %57 ], [ %.065, %56 ], [ %.065, %52 ], [ %.065, %46 ], [ %.065, %45 ], [ %.065, %44 ], [ %.065, %40 ], [ %.065, %38 ], [ %.065, %24 ], [ %.065, %14 ]
  %.063.be = phi i32 [ %.063, %13 ], [ %.063, %487 ], [ %.063, %484 ], [ %.063, %483 ], [ %.063, %482 ], [ %.063, %474 ], [ %.063, %473 ], [ %.063, %472 ], [ 0, %471 ], [ %.063, %470 ], [ %.063, %469 ], [ %.063, %468 ], [ %.063, %467 ], [ %.063, %466 ], [ %.063, %463 ], [ %.063, %461 ], [ %.063, %460 ], [ %.063, %440 ], [ %.063, %430 ], [ %.063, %429 ], [ %.063, %417 ], [ %.063, %407 ], [ %.063, %396 ], [ %.063, %394 ], [ %.063, %393 ], [ %.063, %391 ], [ %.063, %390 ], [ %389, %388 ], [ %.063, %387 ], [ %.063, %386 ], [ %.063, %384 ], [ %.063, %383 ], [ %.063, %373 ], [ %.063, %363 ], [ %.063, %362 ], [ %.063, %357 ], [ %.063, %350 ], [ %.063, %341 ], [ %.063, %337 ], [ %.063, %335 ], [ %.063, %324 ], [ %.063, %314 ], [ %.063, %310 ], [ %.063, %308 ], [ %.063, %290 ], [ %.063, %280 ], [ %.063, %278 ], [ %.063, %267 ], [ %.063, %257 ], [ %.063, %256 ], [ %.063, %246 ], [ %.063, %236 ], [ %.063, %229 ], [ %.063, %225 ], [ %.063, %224 ], [ 0, %214 ], [ %.063, %204 ], [ %.063, %202 ], [ %.063, %190 ], [ %.063, %180 ], [ %.063, %179 ], [ %.063, %169 ], [ %.063, %159 ], [ %.063, %154 ], [ %.063, %153 ], [ %.063, %143 ], [ %.063, %133 ], [ %.063, %132 ], [ %.063, %131 ], [ %.063, %129 ], [ %.063, %125 ], [ %.063, %123 ], [ %.063, %111 ], [ %.063, %101 ], [ %.063, %100 ], [ %.063, %90 ], [ %.063, %80 ], [ %.063, %76 ], [ %.063, %75 ], [ %.063, %73 ], [ %.063, %72 ], [ %.063, %70 ], [ %.063, %64 ], [ %.063, %58 ], [ %.063, %57 ], [ %.063, %56 ], [ %.063, %52 ], [ %.063, %46 ], [ %.063, %45 ], [ %.063, %44 ], [ %.063, %40 ], [ %.063, %38 ], [ %.063, %24 ], [ %.063, %14 ]
  %.061.be = phi i32 [ %.061, %13 ], [ %.061, %487 ], [ %.061, %484 ], [ %.061, %483 ], [ %.061, %482 ], [ %.061, %474 ], [ %.061, %473 ], [ 0, %472 ], [ %.061, %471 ], [ %.061, %470 ], [ %.061, %469 ], [ %.061, %468 ], [ %.061, %467 ], [ %.061, %466 ], [ %.061, %463 ], [ %.061, %461 ], [ %.061, %460 ], [ %.061, %440 ], [ %.061, %430 ], [ %.061, %429 ], [ %.061, %417 ], [ %.061, %407 ], [ %.061, %396 ], [ %.061, %394 ], [ %.061, %393 ], [ %.061, %391 ], [ %.061, %390 ], [ %.061, %388 ], [ %.061, %387 ], [ %.061, %386 ], [ %385, %384 ], [ %.061, %383 ], [ %.061, %373 ], [ %.061, %363 ], [ %.061, %362 ], [ %.061, %357 ], [ %.061, %350 ], [ %.061, %341 ], [ %.061, %337 ], [ %.061, %335 ], [ %.061, %324 ], [ %.061, %314 ], [ %.061, %310 ], [ %.061, %308 ], [ %.061, %290 ], [ %.061, %280 ], [ %.061, %278 ], [ %.061, %267 ], [ %.061, %257 ], [ %.061, %256 ], [ 0, %246 ], [ %.061, %236 ], [ %.061, %229 ], [ %.061, %225 ], [ %.061, %224 ], [ %.061, %214 ], [ %.061, %204 ], [ %.061, %202 ], [ %.061, %190 ], [ %.061, %180 ], [ %.061, %179 ], [ %.061, %169 ], [ %.061, %159 ], [ %.061, %154 ], [ %.061, %153 ], [ %.061, %143 ], [ %.061, %133 ], [ %.061, %132 ], [ %.061, %131 ], [ %.061, %129 ], [ %.061, %125 ], [ %.061, %123 ], [ %.061, %111 ], [ %.061, %101 ], [ %.061, %100 ], [ %.061, %90 ], [ %.061, %80 ], [ %.061, %76 ], [ %.061, %75 ], [ %.061, %73 ], [ %.061, %72 ], [ %.061, %70 ], [ %.061, %64 ], [ %.061, %58 ], [ %.061, %57 ], [ %.061, %56 ], [ %.061, %52 ], [ %.061, %46 ], [ %.061, %45 ], [ %.061, %44 ], [ %.061, %40 ], [ %.061, %38 ], [ %.061, %24 ], [ %.061, %14 ]
  %.059.be = phi i32 [ %.059, %13 ], [ %.059, %487 ], [ %.059, %484 ], [ %.059, %483 ], [ %.059, %482 ], [ %478, %474 ], [ %.059, %473 ], [ %.059, %472 ], [ %.059, %471 ], [ %.059, %470 ], [ %.059, %469 ], [ %.059, %468 ], [ %.059, %467 ], [ %.059, %466 ], [ %.059, %463 ], [ %.059, %461 ], [ %.059, %460 ], [ %.059, %440 ], [ %.059, %430 ], [ %.059, %429 ], [ %.059, %417 ], [ %.059, %407 ], [ %.059, %396 ], [ %.059, %394 ], [ %.059, %393 ], [ %.059, %391 ], [ %.059, %390 ], [ %.059, %388 ], [ %.059, %387 ], [ %.059, %386 ], [ %.059, %384 ], [ %.059, %383 ], [ %.059, %373 ], [ %.059, %363 ], [ %.059, %362 ], [ %.059, %357 ], [ %.059, %350 ], [ %.059, %341 ], [ %.059, %337 ], [ %.059, %335 ], [ %.059, %324 ], [ %.059, %314 ], [ %.059, %310 ], [ %.059, %308 ], [ %294, %290 ], [ %.059, %280 ], [ %.059, %278 ], [ %.059, %267 ], [ %.059, %257 ], [ %.059, %256 ], [ %.059, %246 ], [ %.059, %236 ], [ %.059, %229 ], [ %.059, %225 ], [ %.059, %224 ], [ %.059, %214 ], [ %.059, %204 ], [ %.059, %202 ], [ %.059, %190 ], [ %.059, %180 ], [ %.059, %179 ], [ %.059, %169 ], [ %.059, %159 ], [ %.059, %154 ], [ %.059, %153 ], [ %.059, %143 ], [ %.059, %133 ], [ %.059, %132 ], [ %.059, %131 ], [ %.059, %129 ], [ %.059, %125 ], [ %.059, %123 ], [ %.059, %111 ], [ %.059, %101 ], [ %.059, %100 ], [ %.059, %90 ], [ %.059, %80 ], [ %.059, %76 ], [ %.059, %75 ], [ %.059, %73 ], [ %.059, %72 ], [ %.059, %70 ], [ %.059, %64 ], [ %.059, %58 ], [ %.059, %57 ], [ %.059, %56 ], [ %.059, %52 ], [ %.059, %46 ], [ %.059, %45 ], [ %.059, %44 ], [ %.059, %40 ], [ %.059, %38 ], [ %.059, %24 ], [ %.059, %14 ]
  %.057.be = phi i32 [ %.057, %13 ], [ %.057, %487 ], [ %.057, %484 ], [ %.057, %483 ], [ %.057, %482 ], [ %481, %474 ], [ %.057, %473 ], [ %.057, %472 ], [ %.057, %471 ], [ %.057, %470 ], [ %.057, %469 ], [ %.057, %468 ], [ %.057, %467 ], [ %.057, %466 ], [ %.057, %463 ], [ %.057, %461 ], [ %.057, %460 ], [ %.057, %440 ], [ %.057, %430 ], [ %.057, %429 ], [ %.057, %417 ], [ %.057, %407 ], [ %.057, %396 ], [ %.057, %394 ], [ %.057, %393 ], [ %.057, %391 ], [ %.057, %390 ], [ %.057, %388 ], [ %.057, %387 ], [ %.057, %386 ], [ %.057, %384 ], [ %.057, %383 ], [ %.057, %373 ], [ %.057, %363 ], [ %.057, %362 ], [ %.057, %357 ], [ %.057, %350 ], [ %.057, %341 ], [ %.057, %337 ], [ %.057, %335 ], [ %.057, %324 ], [ %.057, %314 ], [ %.057, %310 ], [ %.057, %308 ], [ %297, %290 ], [ %.057, %280 ], [ %.057, %278 ], [ %.057, %267 ], [ %.057, %257 ], [ %.057, %256 ], [ %.057, %246 ], [ %.057, %236 ], [ %.057, %229 ], [ %.057, %225 ], [ %.057, %224 ], [ %.057, %214 ], [ %.057, %204 ], [ %.057, %202 ], [ %.057, %190 ], [ %.057, %180 ], [ %.057, %179 ], [ %.057, %169 ], [ %.057, %159 ], [ %.057, %154 ], [ %.057, %153 ], [ %.057, %143 ], [ %.057, %133 ], [ %.057, %132 ], [ %.057, %131 ], [ %.057, %129 ], [ %.057, %125 ], [ %.057, %123 ], [ %.057, %111 ], [ %.057, %101 ], [ %.057, %100 ], [ %.057, %90 ], [ %.057, %80 ], [ %.057, %76 ], [ %.057, %75 ], [ %.057, %73 ], [ %.057, %72 ], [ %.057, %70 ], [ %.057, %64 ], [ %.057, %58 ], [ %.057, %57 ], [ %.057, %56 ], [ %.057, %52 ], [ %.057, %46 ], [ %.057, %45 ], [ %.057, %44 ], [ %.057, %40 ], [ %.057, %38 ], [ %.057, %24 ], [ %.057, %14 ]
  %.0.be = phi i32 [ %.0, %13 ], [ -469088433, %487 ], [ -377927193, %484 ], [ -1370156166, %483 ], [ -541180810, %482 ], [ 1679139295, %474 ], [ -459477458, %473 ], [ -2091862951, %472 ], [ 138323147, %471 ], [ -2062543491, %470 ], [ -1890655454, %469 ], [ 34337018, %468 ], [ 47424552, %467 ], [ 889800075, %466 ], [ 482221259, %463 ], [ -1264030997, %461 ], [ -897400068, %460 ], [ %459, %440 ], [ %439, %430 ], [ -897400068, %429 ], [ %428, %417 ], [ %416, %407 ], [ %406, %396 ], [ -1163553208, %394 ], [ -1722634733, %393 ], [ -1211046482, %391 ], [ 117259118, %390 ], [ 1811674700, %388 ], [ -1039472533, %387 ], [ 258817873, %386 ], [ -624336576, %384 ], [ 1585050320, %383 ], [ %382, %373 ], [ %372, %363 ], [ 1611408649, %362 ], [ -1032471496, %357 ], [ %356, %350 ], [ %349, %341 ], [ %340, %337 ], [ %336, %335 ], [ %334, %324 ], [ %323, %314 ], [ %313, %310 ], [ %309, %308 ], [ %307, %290 ], [ %289, %280 ], [ %279, %278 ], [ %277, %267 ], [ %266, %257 ], [ -624336576, %256 ], [ %255, %246 ], [ %245, %236 ], [ %235, %229 ], [ %228, %225 ], [ 1811674700, %224 ], [ %223, %214 ], [ %213, %204 ], [ %203, %202 ], [ %201, %190 ], [ %189, %180 ], [ -1211046482, %179 ], [ %178, %169 ], [ %168, %159 ], [ %158, %154 ], [ -1163553208, %153 ], [ %152, %143 ], [ %142, %133 ], [ 1264716973, %132 ], [ 1096657497, %131 ], [ 1009237834, %129 ], [ -285732643, %125 ], [ %124, %123 ], [ %122, %111 ], [ %110, %101 ], [ 1009237834, %100 ], [ %99, %90 ], [ %89, %80 ], [ %79, %76 ], [ 1264716973, %75 ], [ 874112927, %73 ], [ -67781749, %72 ], [ -1186723739, %70 ], [ -979605418, %64 ], [ %63, %58 ], [ -1186723739, %57 ], [ 874830955, %56 ], [ %55, %52 ], [ %51, %46 ], [ 874112927, %45 ], [ 920442487, %44 ], [ %43, %40 ], [ %39, %38 ], [ %37, %24 ], [ %23, %14 ]
  br label %13

14:                                               ; preds = %13
  %15 = load i32, i32* @x.1, align 4
  %16 = load i32, i32* @y.2, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 482221259, i32 529849162
  br label %.backedge

24:                                               ; preds = %13
  %25 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %7)
  %26 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %25, i32* nonnull dereferenceable(4) %8)
  %27 = load i32, i32* %7, align 4
  %28 = icmp eq i32 %27, 0
  store i1 %28, i1* %6, align 1
  %29 = load i32, i32* @x.1, align 4
  %30 = load i32, i32* @y.2, align 4
  %31 = add i32 %29, -1
  %32 = mul i32 %31, %29
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %35, %34
  %37 = select i1 %36, i32 1532309691, i32 529849162
  br label %.backedge

38:                                               ; preds = %13
  %.0..0..0. = load volatile i1, i1* %6, align 1
  %39 = select i1 %.0..0..0., i32 -1621651709, i32 -1191553543
  br label %.backedge

40:                                               ; preds = %13
  %41 = load i32, i32* %8, align 4
  %42 = icmp eq i32 %41, 0
  %43 = select i1 %42, i32 -522016005, i32 -1191553543
  br label %.backedge

44:                                               ; preds = %13
  br label %.backedge

45:                                               ; preds = %13
  br label %.backedge

46:                                               ; preds = %13
  %47 = load i32, i32* %8, align 4
  %48 = shl nsw i32 %47, 1
  %49 = add i32 %48, -1
  %50 = icmp slt i32 %.077, %49
  %51 = select i1 %50, i32 -1641912086, i32 2124771753
  br label %.backedge

52:                                               ; preds = %13
  %53 = and i32 %.077, 1
  %54 = icmp eq i32 %53, 0
  %55 = select i1 %54, i32 239091839, i32 874830955
  br label %.backedge

56:                                               ; preds = %13
  br label %.backedge

57:                                               ; preds = %13
  br label %.backedge

58:                                               ; preds = %13
  %59 = load i32, i32* %7, align 4
  %60 = shl nsw i32 %59, 1
  %61 = add i32 %60, -1
  %62 = icmp slt i32 %.073, %61
  %63 = select i1 %62, i32 -1879699029, i32 1458252691
  br label %.backedge

64:                                               ; preds = %13
  %65 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %11)
  %66 = load i32, i32* %11, align 4
  %67 = sext i32 %.077 to i64
  %68 = sext i32 %.073 to i64
  %69 = getelementptr inbounds [70 x [70 x i32]], [70 x [70 x i32]]* %9, i64 0, i64 %67, i64 %68
  store i32 %66, i32* %69, align 4
  br label %.backedge

70:                                               ; preds = %13
  %71 = add i32 %.073, 2
  br label %.backedge

72:                                               ; preds = %13
  br label %.backedge

73:                                               ; preds = %13
  %74 = add i32 %.077, 1
  br label %.backedge

75:                                               ; preds = %13
  br label %.backedge

76:                                               ; preds = %13
  %77 = load i32, i32* %8, align 4
  %78 = icmp slt i32 %.071, %77
  %79 = select i1 %78, i32 -741795009, i32 -752387702
  br label %.backedge

80:                                               ; preds = %13
  %81 = load i32, i32* @x.1, align 4
  %82 = load i32, i32* @y.2, align 4
  %83 = add i32 %81, -1
  %84 = mul i32 %83, %81
  %85 = and i32 %84, 1
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %87, %86
  %89 = select i1 %88, i32 889800075, i32 -1520510096
  br label %.backedge

90:                                               ; preds = %13
  %91 = load i32, i32* @x.1, align 4
  %92 = load i32, i32* @y.2, align 4
  %93 = add i32 %91, -1
  %94 = mul i32 %93, %91
  %95 = and i32 %94, 1
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %97, %96
  %99 = select i1 %98, i32 -1531148401, i32 -1520510096
  br label %.backedge

100:                                              ; preds = %13
  br label %.backedge

101:                                              ; preds = %13
  %102 = load i32, i32* @x.1, align 4
  %103 = load i32, i32* @y.2, align 4
  %104 = add i32 %102, -1
  %105 = mul i32 %104, %102
  %106 = and i32 %105, 1
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %108, %107
  %110 = select i1 %109, i32 47424552, i32 -334381770
  br label %.backedge

111:                                              ; preds = %13
  %112 = load i32, i32* %7, align 4
  %113 = icmp slt i32 %.069, %112
  store i1 %113, i1* %5, align 1
  %114 = load i32, i32* @x.1, align 4
  %115 = load i32, i32* @y.2, align 4
  %116 = add i32 %114, -1
  %117 = mul i32 %116, %114
  %118 = and i32 %117, 1
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %120, %119
  %122 = select i1 %121, i32 -425974525, i32 -334381770
  br label %.backedge

123:                                              ; preds = %13
  %.0..0..0.52 = load volatile i1, i1* %5, align 1
  %124 = select i1 %.0..0..0.52, i32 -1919572355, i32 -1691689002
  br label %.backedge

125:                                              ; preds = %13
  %126 = sext i32 %.071 to i64
  %127 = sext i32 %.069 to i64
  %128 = getelementptr inbounds [35 x [35 x i32]], [35 x [35 x i32]]* %10, i64 0, i64 %126, i64 %127
  store i32 -1, i32* %128, align 4
  br label %.backedge

129:                                              ; preds = %13
  %130 = add i32 %.069, 1
  br label %.backedge

131:                                              ; preds = %13
  br label %.backedge

132:                                              ; preds = %13
  %.neg = add i32 %.071, 1
  br label %.backedge

133:                                              ; preds = %13
  %134 = load i32, i32* @x.1, align 4
  %135 = load i32, i32* @y.2, align 4
  %136 = add i32 %134, -1
  %137 = mul i32 %136, %134
  %138 = and i32 %137, 1
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %140, %139
  %142 = select i1 %141, i32 34337018, i32 -1800208093
  br label %.backedge

143:                                              ; preds = %13
  store i32 1, i32* %12, align 16
  %144 = load i32, i32* @x.1, align 4
  %145 = load i32, i32* @y.2, align 4
  %146 = add i32 %144, -1
  %147 = mul i32 %146, %144
  %148 = and i32 %147, 1
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %150, %149
  %152 = select i1 %151, i32 1393529738, i32 -1800208093
  br label %.backedge

153:                                              ; preds = %13
  br label %.backedge

154:                                              ; preds = %13
  %155 = load i32, i32* %7, align 4
  %156 = load i32, i32* %8, align 4
  %157 = mul nsw i32 %156, %155
  %.not = icmp sgt i32 %.067, %157
  %158 = select i1 %.not, i32 -830894528, i32 -412722176
  br label %.backedge

159:                                              ; preds = %13
  %160 = load i32, i32* @x.1, align 4
  %161 = load i32, i32* @y.2, align 4
  %162 = add i32 %160, -1
  %163 = mul i32 %162, %160
  %164 = and i32 %163, 1
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %166, %165
  %168 = select i1 %167, i32 -1890655454, i32 1590643779
  br label %.backedge

169:                                              ; preds = %13
  %170 = load i32, i32* @x.1, align 4
  %171 = load i32, i32* @y.2, align 4
  %172 = add i32 %170, -1
  %173 = mul i32 %172, %170
  %174 = and i32 %173, 1
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %176, %175
  %178 = select i1 %177, i32 530139354, i32 1590643779
  br label %.backedge

179:                                              ; preds = %13
  br label %.backedge

180:                                              ; preds = %13
  %181 = load i32, i32* @x.1, align 4
  %182 = load i32, i32* @y.2, align 4
  %183 = add i32 %181, -1
  %184 = mul i32 %183, %181
  %185 = and i32 %184, 1
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %182, 10
  %188 = or i1 %187, %186
  %189 = select i1 %188, i32 -2062543491, i32 -1498572217
  br label %.backedge

190:                                              ; preds = %13
  %191 = load i32, i32* %8, align 4
  %192 = icmp slt i32 %.065, %191
  store i1 %192, i1* %4, align 1
  %193 = load i32, i32* @x.1, align 4
  %194 = load i32, i32* @y.2, align 4
  %195 = add i32 %193, -1
  %196 = mul i32 %195, %193
  %197 = and i32 %196, 1
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %194, 10
  %200 = or i1 %199, %198
  %201 = select i1 %200, i32 1313019121, i32 -1498572217
  br label %.backedge

202:                                              ; preds = %13
  %.0..0..0.53 = load volatile i1, i1* %4, align 1
  %203 = select i1 %.0..0..0.53, i32 -1747922292, i32 117222405
  br label %.backedge

204:                                              ; preds = %13
  %205 = load i32, i32* @x.1, align 4
  %206 = load i32, i32* @y.2, align 4
  %207 = add i32 %205, -1
  %208 = mul i32 %207, %205
  %209 = and i32 %208, 1
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %211, %210
  %213 = select i1 %212, i32 138323147, i32 943005928
  br label %.backedge

214:                                              ; preds = %13
  %215 = load i32, i32* @x.1, align 4
  %216 = load i32, i32* @y.2, align 4
  %217 = add i32 %215, -1
  %218 = mul i32 %217, %215
  %219 = and i32 %218, 1
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %216, 10
  %222 = or i1 %221, %220
  %223 = select i1 %222, i32 2117645971, i32 943005928
  br label %.backedge

224:                                              ; preds = %13
  br label %.backedge

225:                                              ; preds = %13
  %226 = load i32, i32* %7, align 4
  %227 = icmp slt i32 %.063, %226
  %228 = select i1 %227, i32 -711794597, i32 -1965207320
  br label %.backedge

229:                                              ; preds = %13
  %230 = sext i32 %.065 to i64
  %231 = sext i32 %.063 to i64
  %232 = getelementptr inbounds [35 x [35 x i32]], [35 x [35 x i32]]* %10, i64 0, i64 %230, i64 %231
  %233 = load i32, i32* %232, align 4
  %234 = icmp eq i32 %233, %.067
  %235 = select i1 %234, i32 1551007507, i32 258817873
  br label %.backedge

236:                                              ; preds = %13
  %237 = load i32, i32* @x.1, align 4
  %238 = load i32, i32* @y.2, align 4
  %239 = add i32 %237, -1
  %240 = mul i32 %239, %237
  %241 = and i32 %240, 1
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %243, %242
  %245 = select i1 %244, i32 -2091862951, i32 343737892
  br label %.backedge

246:                                              ; preds = %13
  %247 = load i32, i32* @x.1, align 4
  %248 = load i32, i32* @y.2, align 4
  %249 = add i32 %247, -1
  %250 = mul i32 %249, %247
  %251 = and i32 %250, 1
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %253, %252
  %255 = select i1 %254, i32 1841541398, i32 343737892
  br label %.backedge

256:                                              ; preds = %13
  br label %.backedge

257:                                              ; preds = %13
  %258 = load i32, i32* @x.1, align 4
  %259 = load i32, i32* @y.2, align 4
  %260 = add i32 %258, -1
  %261 = mul i32 %260, %258
  %262 = and i32 %261, 1
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %264, %263
  %266 = select i1 %265, i32 -459477458, i32 1316374568
  br label %.backedge

267:                                              ; preds = %13
  %268 = icmp slt i32 %.061, 4
  store i1 %268, i1* %3, align 1
  %269 = load i32, i32* @x.1, align 4
  %270 = load i32, i32* @y.2, align 4
  %271 = add i32 %269, -1
  %272 = mul i32 %271, %269
  %273 = and i32 %272, 1
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %270, 10
  %276 = or i1 %275, %274
  %277 = select i1 %276, i32 -315656291, i32 1316374568
  br label %.backedge

278:                                              ; preds = %13
  %.0..0..0.54 = load volatile i1, i1* %3, align 1
  %279 = select i1 %.0..0..0.54, i32 -219915840, i32 -1487541925
  br label %.backedge

280:                                              ; preds = %13
  %281 = load i32, i32* @x.1, align 4
  %282 = load i32, i32* @y.2, align 4
  %283 = add i32 %281, -1
  %284 = mul i32 %283, %281
  %285 = and i32 %284, 1
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %287, %286
  %289 = select i1 %288, i32 1679139295, i32 -2043943169
  br label %.backedge

290:                                              ; preds = %13
  %291 = sext i32 %.061 to i64
  %292 = getelementptr inbounds [4 x i32], [4 x i32]* @dy, i64 0, i64 %291
  %293 = load i32, i32* %292, align 4
  %294 = add i32 %293, %.065
  %295 = getelementptr inbounds [4 x i32], [4 x i32]* @dx, i64 0, i64 %291
  %296 = load i32, i32* %295, align 4
  %297 = add i32 %296, %.063
  %298 = icmp sgt i32 %294, -1
  store i1 %298, i1* %2, align 1
  %299 = load i32, i32* @x.1, align 4
  %300 = load i32, i32* @y.2, align 4
  %301 = add i32 %299, -1
  %302 = mul i32 %301, %299
  %303 = and i32 %302, 1
  %304 = icmp eq i32 %303, 0
  %305 = icmp slt i32 %300, 10
  %306 = or i1 %305, %304
  %307 = select i1 %306, i32 1230518318, i32 -2043943169
  br label %.backedge

308:                                              ; preds = %13
  %.0..0..0.55 = load volatile i1, i1* %2, align 1
  %309 = select i1 %.0..0..0.55, i32 444840042, i32 1611408649
  br label %.backedge

310:                                              ; preds = %13
  %311 = load i32, i32* %8, align 4
  %312 = icmp slt i32 %.059, %311
  %313 = select i1 %312, i32 1909334813, i32 1611408649
  br label %.backedge

314:                                              ; preds = %13
  %315 = load i32, i32* @x.1, align 4
  %316 = load i32, i32* @y.2, align 4
  %317 = add i32 %315, -1
  %318 = mul i32 %317, %315
  %319 = and i32 %318, 1
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %321, %320
  %323 = select i1 %322, i32 -541180810, i32 -1379858506
  br label %.backedge

324:                                              ; preds = %13
  %325 = icmp sgt i32 %.057, -1
  store i1 %325, i1* %1, align 1
  %326 = load i32, i32* @x.1, align 4
  %327 = load i32, i32* @y.2, align 4
  %328 = add i32 %326, -1
  %329 = mul i32 %328, %326
  %330 = and i32 %329, 1
  %331 = icmp eq i32 %330, 0
  %332 = icmp slt i32 %327, 10
  %333 = or i1 %332, %331
  %334 = select i1 %333, i32 1184406122, i32 -1379858506
  br label %.backedge

335:                                              ; preds = %13
  %.0..0..0.56 = load volatile i1, i1* %1, align 1
  %336 = select i1 %.0..0..0.56, i32 385793747, i32 1611408649
  br label %.backedge

337:                                              ; preds = %13
  %338 = load i32, i32* %7, align 4
  %339 = icmp slt i32 %.057, %338
  %340 = select i1 %339, i32 155154957, i32 1611408649
  br label %.backedge

341:                                              ; preds = %13
  %342 = add i32 %.059, %.065
  %343 = sext i32 %342 to i64
  %344 = add i32 %.057, %.063
  %345 = sext i32 %344 to i64
  %346 = getelementptr inbounds [70 x [70 x i32]], [70 x [70 x i32]]* %9, i64 0, i64 %343, i64 %345
  %347 = load i32, i32* %346, align 4
  %348 = icmp eq i32 %347, 0
  %349 = select i1 %348, i32 -983574229, i32 -1032471496
  br label %.backedge

350:                                              ; preds = %13
  %351 = sext i32 %.059 to i64
  %352 = sext i32 %.057 to i64
  %353 = getelementptr inbounds [35 x [35 x i32]], [35 x [35 x i32]]* %10, i64 0, i64 %351, i64 %352
  %354 = load i32, i32* %353, align 4
  %355 = icmp eq i32 %354, -1
  %356 = select i1 %355, i32 334993892, i32 -1032471496
  br label %.backedge

357:                                              ; preds = %13
  %358 = add i32 %.067, 1
  %359 = sext i32 %.059 to i64
  %360 = sext i32 %.057 to i64
  %361 = getelementptr inbounds [35 x [35 x i32]], [35 x [35 x i32]]* %10, i64 0, i64 %359, i64 %360
  store i32 %358, i32* %361, align 4
  br label %.backedge

362:                                              ; preds = %13
  br label %.backedge

363:                                              ; preds = %13
  %364 = load i32, i32* @x.1, align 4
  %365 = load i32, i32* @y.2, align 4
  %366 = add i32 %364, -1
  %367 = mul i32 %366, %364
  %368 = and i32 %367, 1
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %365, 10
  %371 = or i1 %370, %369
  %372 = select i1 %371, i32 -1370156166, i32 -1124356219
  br label %.backedge

373:                                              ; preds = %13
  %374 = load i32, i32* @x.1, align 4
  %375 = load i32, i32* @y.2, align 4
  %376 = add i32 %374, -1
  %377 = mul i32 %376, %374
  %378 = and i32 %377, 1
  %379 = icmp eq i32 %378, 0
  %380 = icmp slt i32 %375, 10
  %381 = or i1 %380, %379
  %382 = select i1 %381, i32 4198003, i32 -1124356219
  br label %.backedge

383:                                              ; preds = %13
  br label %.backedge

384:                                              ; preds = %13
  %385 = add i32 %.061, 1
  br label %.backedge

386:                                              ; preds = %13
  br label %.backedge

387:                                              ; preds = %13
  br label %.backedge

388:                                              ; preds = %13
  %389 = add i32 %.063, 1
  br label %.backedge

390:                                              ; preds = %13
  br label %.backedge

391:                                              ; preds = %13
  %392 = add i32 %.065, 1
  br label %.backedge

393:                                              ; preds = %13
  br label %.backedge

394:                                              ; preds = %13
  %395 = add i32 %.067, 1
  br label %.backedge

396:                                              ; preds = %13
  %397 = load i32, i32* %8, align 4
  %398 = add i32 %397, -1
  %399 = sext i32 %398 to i64
  %400 = load i32, i32* %7, align 4
  %401 = add i32 %400, -1
  %402 = sext i32 %401 to i64
  %403 = getelementptr inbounds [35 x [35 x i32]], [35 x [35 x i32]]* %10, i64 0, i64 %399, i64 %402
  %404 = load i32, i32* %403, align 4
  %405 = icmp eq i32 %404, -1
  %406 = select i1 %405, i32 -1030187046, i32 1629323634
  br label %.backedge

407:                                              ; preds = %13
  %408 = load i32, i32* @x.1, align 4
  %409 = load i32, i32* @y.2, align 4
  %410 = add i32 %408, -1
  %411 = mul i32 %410, %408
  %412 = and i32 %411, 1
  %413 = icmp eq i32 %412, 0
  %414 = icmp slt i32 %409, 10
  %415 = or i1 %414, %413
  %416 = select i1 %415, i32 -377927193, i32 900493676
  br label %.backedge

417:                                              ; preds = %13
  %418 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 0)
  %419 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %418, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %420 = load i32, i32* @x.1, align 4
  %421 = load i32, i32* @y.2, align 4
  %422 = add i32 %420, -1
  %423 = mul i32 %422, %420
  %424 = and i32 %423, 1
  %425 = icmp eq i32 %424, 0
  %426 = icmp slt i32 %421, 10
  %427 = or i1 %426, %425
  %428 = select i1 %427, i32 -661320462, i32 900493676
  br label %.backedge

429:                                              ; preds = %13
  br label %.backedge

430:                                              ; preds = %13
  %431 = load i32, i32* @x.1, align 4
  %432 = load i32, i32* @y.2, align 4
  %433 = add i32 %431, -1
  %434 = mul i32 %433, %431
  %435 = and i32 %434, 1
  %436 = icmp eq i32 %435, 0
  %437 = icmp slt i32 %432, 10
  %438 = or i1 %437, %436
  %439 = select i1 %438, i32 -469088433, i32 -681367975
  br label %.backedge

440:                                              ; preds = %13
  %441 = load i32, i32* %8, align 4
  %442 = add i32 %441, -1
  %443 = sext i32 %442 to i64
  %444 = load i32, i32* %7, align 4
  %445 = add i32 %444, -1
  %446 = sext i32 %445 to i64
  %447 = getelementptr inbounds [35 x [35 x i32]], [35 x [35 x i32]]* %10, i64 0, i64 %443, i64 %446
  %448 = load i32, i32* %447, align 4
  %449 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %448)
  %450 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %449, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  %451 = load i32, i32* @x.1, align 4
  %452 = load i32, i32* @y.2, align 4
  %453 = add i32 %451, -1
  %454 = mul i32 %453, %451
  %455 = and i32 %454, 1
  %456 = icmp eq i32 %455, 0
  %457 = icmp slt i32 %452, 10
  %458 = or i1 %457, %456
  %459 = select i1 %458, i32 1801069299, i32 -681367975
  br label %.backedge

460:                                              ; preds = %13
  br label %.backedge

461:                                              ; preds = %13
  br label %.backedge

462:                                              ; preds = %13
  ret i32 0

463:                                              ; preds = %13
  %464 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %7)
  %465 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %464, i32* nonnull dereferenceable(4) %8)
  br label %.backedge

466:                                              ; preds = %13
  br label %.backedge

467:                                              ; preds = %13
  br label %.backedge

468:                                              ; preds = %13
  store i32 1, i32* %12, align 16
  br label %.backedge

469:                                              ; preds = %13
  br label %.backedge

470:                                              ; preds = %13
  br label %.backedge

471:                                              ; preds = %13
  br label %.backedge

472:                                              ; preds = %13
  br label %.backedge

473:                                              ; preds = %13
  br label %.backedge

474:                                              ; preds = %13
  %475 = sext i32 %.061 to i64
  %476 = getelementptr inbounds [4 x i32], [4 x i32]* @dy, i64 0, i64 %475
  %477 = load i32, i32* %476, align 4
  %478 = add i32 %477, %.065
  %479 = getelementptr inbounds [4 x i32], [4 x i32]* @dx, i64 0, i64 %475
  %480 = load i32, i32* %479, align 4
  %481 = add i32 %480, %.063
  br label %.backedge

482:                                              ; preds = %13
  br label %.backedge

483:                                              ; preds = %13
  br label %.backedge

484:                                              ; preds = %13
  %485 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 0)
  %486 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %485, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

487:                                              ; preds = %13
  %488 = load i32, i32* %8, align 4
  %489 = add i32 %488, -1
  %490 = sext i32 %489 to i64
  %491 = load i32, i32* %7, align 4
  %492 = add i32 %491, -1
  %493 = sext i32 %492 to i64
  %494 = getelementptr inbounds [35 x [35 x i32]], [35 x [35 x i32]]* %10, i64 0, i64 %490, i64 %493
  %495 = load i32, i32* %494, align 4
  %496 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %495)
  %497 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %496, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s060887292.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
