; ModuleID = 'build_ollvm/programs/p03833/s225882933.ll'
source_filename = "Project_CodeNet_C++1400/p03833/s225882933.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"struct.__gnu_cxx::__ops::_Iter_less_iter" = type { i8 }

$_ZSt11max_elementIPiET_S1_S1_ = comdat any

$_ZNSt14numeric_limitsIxE3minEv = comdat any

$_ZSt3maxIxERKT_S2_S2_ = comdat any

$_ZSt13__max_elementIPiN9__gnu_cxx5__ops15_Iter_less_iterEET_S4_S4_T0_ = comdat any

$_ZN9__gnu_cxx5__ops16__iter_less_iterEv = comdat any

$_ZNK9__gnu_cxx5__ops15_Iter_less_iterclIPiS3_EEbT_T0_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@B = global [210 x [5010 x i32]] zeroinitializer, align 16
@A = local_unnamed_addr global [5010 x [5010 x i64]] zeroinitializer, align 16
@pre = global [5010 x i64] zeroinitializer, align 16
@n = global i32 0, align 4
@m = global i32 0, align 4
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s225882933.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0
@x.11 = common local_unnamed_addr global i32 0
@y.12 = common local_unnamed_addr global i32 0
@x.13 = common local_unnamed_addr global i32 0
@y.14 = common local_unnamed_addr global i32 0
@x.15 = common local_unnamed_addr global i32 0
@y.16 = common local_unnamed_addr global i32 0
@x.17 = common local_unnamed_addr global i32 0
@y.18 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline uwtable
define void @_Z5solveiiPii(i32 %0, i32 %1, i32* %2, i32 %3) local_unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  store i32 %1, i32* %5, align 4
  %7 = sext i32 %0 to i64
  %8 = getelementptr inbounds i32, i32* %2, i64 %7
  %9 = sext i32 %1 to i64
  %.idx = add nsw i64 %9, 1
  %10 = getelementptr inbounds i32, i32* %2, i64 %.idx
  %11 = ptrtoint i32* %2 to i64
  %12 = sub i64 17179869184, %11
  %13 = getelementptr inbounds [5010 x [5010 x i64]], [5010 x [5010 x i64]]* @A, i64 0, i64 %7, i64 %9
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %4
  %.0.ph = phi i32 [ -1684162439, %4 ], [ %.0.ph.be, %.outer.backedge ]
  br label %14

14:                                               ; preds = %.outer, %14
  switch i32 %.0.ph, label %14 [
    i32 -1684162439, label %15
    i32 369520330, label %.outer.backedge
    i32 -304228657, label %18
    i32 -1831525633, label %35
  ]

15:                                               ; preds = %14
  %.0..0..0.22 = load volatile i32, i32* %6, align 4
  %.0..0..0.23 = load volatile i32, i32* %5, align 4
  %16 = icmp sgt i32 %.0..0..0.22, %.0..0..0.23
  %17 = select i1 %16, i32 369520330, i32 -304228657
  br label %.outer.backedge

18:                                               ; preds = %14
  %19 = tail call i32* @_ZSt11max_elementIPiET_S1_S1_(i32* %8, i32* %10)
  %20 = ptrtoint i32* %19 to i64
  %21 = add i64 %12, %20
  %22 = lshr exact i64 %21, 2
  %23 = trunc i64 %22 to i32
  %sext = shl i64 %21, 30
  %24 = ashr i64 %sext, 32
  %25 = getelementptr inbounds i32, i32* %2, i64 %24
  %26 = load i32, i32* %25, align 4
  %27 = sub i32 %26, %3
  %28 = sext i32 %27 to i64
  %29 = load i64, i64* %13, align 8
  %30 = add i64 %29, %28
  store i64 %30, i64* %13, align 8
  %31 = add i32 %23, -1
  %32 = load i32, i32* %25, align 4
  tail call void @_Z5solveiiPii(i32 %0, i32 %31, i32* %2, i32 %32)
  %33 = add i32 %23, 1
  %34 = load i32, i32* %25, align 4
  tail call void @_Z5solveiiPii(i32 %33, i32 %1, i32* %2, i32 %34)
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %14, %18, %15
  %.0.ph.be = phi i32 [ %17, %15 ], [ -1831525633, %18 ], [ -1831525633, %14 ]
  br label %.outer

35:                                               ; preds = %14
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt11max_elementIPiET_S1_S1_(i32* %0, i32* %1) local_unnamed_addr #0 comdat {
  tail call void @_ZN9__gnu_cxx5__ops16__iter_less_iterEv()
  %3 = tail call i32* @_ZSt13__max_elementIPiN9__gnu_cxx5__ops15_Iter_less_iterEET_S4_S4_T0_(i32* %0, i32* %1)
  ret i32* %3
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = tail call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %6 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8
  %7 = getelementptr i8, i8* %6, i64 -24
  %8 = bitcast i8* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %9
  %11 = bitcast i8* %10 to %"class.std::basic_ios"*
  %12 = tail call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %11, %"class.std::basic_ostream"* null)
  %13 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) @n)
  %14 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %13, i32* nonnull dereferenceable(4) @m)
  br label %15

15:                                               ; preds = %.backedge, %0
  %.069 = phi i32 [ 2, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i32 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i32 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i32 [ undef, %0 ], [ %.063.be, %.backedge ]
  %.061 = phi i32 [ undef, %0 ], [ %.061.be, %.backedge ]
  %.059 = phi i32 [ undef, %0 ], [ %.059.be, %.backedge ]
  %.057 = phi i32 [ undef, %0 ], [ %.057.be, %.backedge ]
  %.055 = phi i32 [ undef, %0 ], [ %.055.be, %.backedge ]
  %.053 = phi i32 [ undef, %0 ], [ %.053.be, %.backedge ]
  %.051 = phi i32 [ undef, %0 ], [ %.051.be, %.backedge ]
  %.0 = phi i32 [ -1566761853, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1566761853, label %16
    i32 -473491581, label %26
    i32 -2025120134, label %38
    i32 -2128281579, label %40
    i32 1796569012, label %50
    i32 858056133, label %69
    i32 -1490786748, label %70
    i32 -521471591, label %72
    i32 -363528132, label %82
    i32 -372891669, label %92
    i32 680696761, label %93
    i32 -1344372844, label %96
    i32 1403102730, label %97
    i32 -145530092, label %100
    i32 637796422, label %110
    i32 -833023367, label %124
    i32 526645657, label %125
    i32 -2093861755, label %135
    i32 -1903781933, label %146
    i32 -311247724, label %147
    i32 -1666358897, label %148
    i32 533533398, label %150
    i32 -1948897609, label %151
    i32 1138330098, label %154
    i32 1201834168, label %164
    i32 -1402899006, label %177
    i32 -1760840852, label %178
    i32 992704136, label %180
    i32 -775338411, label %181
    i32 -2120382048, label %191
    i32 -171521412, label %203
    i32 -1554926954, label %205
    i32 1487727935, label %207
    i32 -1007734124, label %209
    i32 -1662619386, label %219
    i32 1926407140, label %220
    i32 -1677187814, label %221
    i32 2110710909, label %223
    i32 848804431, label %224
    i32 -1857178692, label %227
    i32 -1753259696, label %228
    i32 -46851171, label %231
    i32 552937367, label %241
    i32 -525859865, label %243
    i32 -1632245804, label %253
    i32 -1966698481, label %263
    i32 827260994, label %264
    i32 1627811569, label %266
    i32 974680066, label %276
    i32 1927649579, label %287
    i32 1703975544, label %288
    i32 1602116402, label %291
    i32 -1767188891, label %292
    i32 1337845765, label %295
    i32 1108143307, label %307
    i32 1795723397, label %309
    i32 -726001226, label %319
    i32 -1665221972, label %329
    i32 1832543805, label %330
    i32 608903933, label %340
    i32 -940976123, label %350
    i32 1642506431, label %351
    i32 2080219741, label %355
    i32 57794764, label %356
    i32 530617710, label %366
    i32 1693098720, label %367
    i32 1655084863, label %372
    i32 636718211, label %374
    i32 1479800056, label %378
    i32 -1907296564, label %379
    i32 -371680935, label %380
    i32 -1616848239, label %382
    i32 -664011100, label %383
  ]

.backedge:                                        ; preds = %15, %383, %382, %380, %379, %378, %374, %372, %367, %366, %356, %355, %350, %340, %330, %329, %319, %309, %307, %295, %292, %291, %288, %287, %276, %266, %264, %263, %253, %243, %241, %231, %228, %227, %224, %223, %221, %220, %219, %209, %207, %205, %203, %191, %181, %180, %178, %177, %164, %154, %151, %150, %148, %147, %146, %135, %125, %124, %110, %100, %97, %96, %93, %92, %82, %72, %70, %69, %50, %40, %38, %26, %16
  %.069.be = phi i32 [ %.069, %15 ], [ %.069, %383 ], [ %.069, %382 ], [ %.069, %380 ], [ %.069, %379 ], [ %.069, %378 ], [ %.069, %374 ], [ %.069, %372 ], [ %.069, %367 ], [ %.069, %366 ], [ %.069, %356 ], [ %.069, %355 ], [ %.069, %350 ], [ %.069, %340 ], [ %.069, %330 ], [ %.069, %329 ], [ %.069, %319 ], [ %.069, %309 ], [ %.069, %307 ], [ %.069, %295 ], [ %.069, %292 ], [ %.069, %291 ], [ %.069, %288 ], [ %.069, %287 ], [ %.069, %276 ], [ %.069, %266 ], [ %.069, %264 ], [ %.069, %263 ], [ %.069, %253 ], [ %.069, %243 ], [ %.069, %241 ], [ %.069, %231 ], [ %.069, %228 ], [ %.069, %227 ], [ %.069, %224 ], [ %.069, %223 ], [ %.069, %221 ], [ %.069, %220 ], [ %.069, %219 ], [ %.069, %209 ], [ %.069, %207 ], [ %.069, %205 ], [ %.069, %203 ], [ %.069, %191 ], [ %.069, %181 ], [ %.069, %180 ], [ %.069, %178 ], [ %.069, %177 ], [ %.069, %164 ], [ %.069, %154 ], [ %.069, %151 ], [ %.069, %150 ], [ %.069, %148 ], [ %.069, %147 ], [ %.069, %146 ], [ %.069, %135 ], [ %.069, %125 ], [ %.069, %124 ], [ %.069, %110 ], [ %.069, %100 ], [ %.069, %97 ], [ %.069, %96 ], [ %.069, %93 ], [ %.069, %92 ], [ %.069, %82 ], [ %.069, %72 ], [ %71, %70 ], [ %.069, %69 ], [ %.069, %50 ], [ %.069, %40 ], [ %.069, %38 ], [ %.069, %26 ], [ %.069, %16 ]
  %.067.be = phi i32 [ %.067, %15 ], [ %.067, %383 ], [ %.067, %382 ], [ %.067, %380 ], [ %.067, %379 ], [ %.067, %378 ], [ %.067, %374 ], [ %.067, %372 ], [ %.067, %367 ], [ 1, %366 ], [ %.067, %356 ], [ %.067, %355 ], [ %.067, %350 ], [ %.067, %340 ], [ %.067, %330 ], [ %.067, %329 ], [ %.067, %319 ], [ %.067, %309 ], [ %.067, %307 ], [ %.067, %295 ], [ %.067, %292 ], [ %.067, %291 ], [ %.067, %288 ], [ %.067, %287 ], [ %.067, %276 ], [ %.067, %266 ], [ %.067, %264 ], [ %.067, %263 ], [ %.067, %253 ], [ %.067, %243 ], [ %.067, %241 ], [ %.067, %231 ], [ %.067, %228 ], [ %.067, %227 ], [ %.067, %224 ], [ %.067, %223 ], [ %.067, %221 ], [ %.067, %220 ], [ %.067, %219 ], [ %.067, %209 ], [ %.067, %207 ], [ %.067, %205 ], [ %.067, %203 ], [ %.067, %191 ], [ %.067, %181 ], [ %.067, %180 ], [ %.067, %178 ], [ %.067, %177 ], [ %.067, %164 ], [ %.067, %154 ], [ %.067, %151 ], [ %.067, %150 ], [ %149, %148 ], [ %.067, %147 ], [ %.067, %146 ], [ %.067, %135 ], [ %.067, %125 ], [ %.067, %124 ], [ %.067, %110 ], [ %.067, %100 ], [ %.067, %97 ], [ %.067, %96 ], [ %.067, %93 ], [ %.067, %92 ], [ 1, %82 ], [ %.067, %72 ], [ %.067, %70 ], [ %.067, %69 ], [ %.067, %50 ], [ %.067, %40 ], [ %.067, %38 ], [ %.067, %26 ], [ %.067, %16 ]
  %.065.be = phi i32 [ %.065, %15 ], [ %.065, %383 ], [ %.065, %382 ], [ %.065, %380 ], [ %.065, %379 ], [ %.065, %378 ], [ %.065, %374 ], [ %373, %372 ], [ %.065, %367 ], [ %.065, %366 ], [ %.065, %356 ], [ %.065, %355 ], [ %.065, %350 ], [ %.065, %340 ], [ %.065, %330 ], [ %.065, %329 ], [ %.065, %319 ], [ %.065, %309 ], [ %.065, %307 ], [ %.065, %295 ], [ %.065, %292 ], [ %.065, %291 ], [ %.065, %288 ], [ %.065, %287 ], [ %.065, %276 ], [ %.065, %266 ], [ %.065, %264 ], [ %.065, %263 ], [ %.065, %253 ], [ %.065, %243 ], [ %.065, %241 ], [ %.065, %231 ], [ %.065, %228 ], [ %.065, %227 ], [ %.065, %224 ], [ %.065, %223 ], [ %.065, %221 ], [ %.065, %220 ], [ %.065, %219 ], [ %.065, %209 ], [ %.065, %207 ], [ %.065, %205 ], [ %.065, %203 ], [ %.065, %191 ], [ %.065, %181 ], [ %.065, %180 ], [ %.065, %178 ], [ %.065, %177 ], [ %.065, %164 ], [ %.065, %154 ], [ %.065, %151 ], [ %.065, %150 ], [ %.065, %148 ], [ %.065, %147 ], [ %.065, %146 ], [ %136, %135 ], [ %.065, %125 ], [ %.065, %124 ], [ %.065, %110 ], [ %.065, %100 ], [ %.065, %97 ], [ 1, %96 ], [ %.065, %93 ], [ %.065, %92 ], [ %.065, %82 ], [ %.065, %72 ], [ %.065, %70 ], [ %.065, %69 ], [ %.065, %50 ], [ %.065, %40 ], [ %.065, %38 ], [ %.065, %26 ], [ %.065, %16 ]
  %.063.be = phi i32 [ %.063, %15 ], [ %.063, %383 ], [ %.063, %382 ], [ %.063, %380 ], [ %.063, %379 ], [ %.063, %378 ], [ %.063, %374 ], [ %.063, %372 ], [ %.063, %367 ], [ %.063, %366 ], [ %.063, %356 ], [ %.063, %355 ], [ %.063, %350 ], [ %.063, %340 ], [ %.063, %330 ], [ %.063, %329 ], [ %.063, %319 ], [ %.063, %309 ], [ %.063, %307 ], [ %.063, %295 ], [ %.063, %292 ], [ %.063, %291 ], [ %.063, %288 ], [ %.063, %287 ], [ %.063, %276 ], [ %.063, %266 ], [ %.063, %264 ], [ %.063, %263 ], [ %.063, %253 ], [ %.063, %243 ], [ %.063, %241 ], [ %.063, %231 ], [ %.063, %228 ], [ %.063, %227 ], [ %.063, %224 ], [ %.063, %223 ], [ %.063, %221 ], [ %.063, %220 ], [ %.063, %219 ], [ %.063, %209 ], [ %.063, %207 ], [ %.063, %205 ], [ %.063, %203 ], [ %.063, %191 ], [ %.063, %181 ], [ %.063, %180 ], [ %179, %178 ], [ %.063, %177 ], [ %.063, %164 ], [ %.063, %154 ], [ %.063, %151 ], [ 1, %150 ], [ %.063, %148 ], [ %.063, %147 ], [ %.063, %146 ], [ %.063, %135 ], [ %.063, %125 ], [ %.063, %124 ], [ %.063, %110 ], [ %.063, %100 ], [ %.063, %97 ], [ %.063, %96 ], [ %.063, %93 ], [ %.063, %92 ], [ %.063, %82 ], [ %.063, %72 ], [ %.063, %70 ], [ %.063, %69 ], [ %.063, %50 ], [ %.063, %40 ], [ %.063, %38 ], [ %.063, %26 ], [ %.063, %16 ]
  %.061.be = phi i32 [ %.061, %15 ], [ %.061, %383 ], [ %.061, %382 ], [ %.061, %380 ], [ %.061, %379 ], [ %.061, %378 ], [ %.061, %374 ], [ %.061, %372 ], [ %.061, %367 ], [ %.061, %366 ], [ %.061, %356 ], [ %.061, %355 ], [ %.061, %350 ], [ %.061, %340 ], [ %.061, %330 ], [ %.061, %329 ], [ %.061, %319 ], [ %.061, %309 ], [ %.061, %307 ], [ %.061, %295 ], [ %.061, %292 ], [ %.061, %291 ], [ %.061, %288 ], [ %.061, %287 ], [ %.061, %276 ], [ %.061, %266 ], [ %.061, %264 ], [ %.061, %263 ], [ %.061, %253 ], [ %.061, %243 ], [ %.061, %241 ], [ %.061, %231 ], [ %.061, %228 ], [ %.061, %227 ], [ %.061, %224 ], [ %.061, %223 ], [ %222, %221 ], [ %.061, %220 ], [ %.061, %219 ], [ %.061, %209 ], [ %.061, %207 ], [ %.061, %205 ], [ %.061, %203 ], [ %.061, %191 ], [ %.061, %181 ], [ 1, %180 ], [ %.061, %178 ], [ %.061, %177 ], [ %.061, %164 ], [ %.061, %154 ], [ %.061, %151 ], [ %.061, %150 ], [ %.061, %148 ], [ %.061, %147 ], [ %.061, %146 ], [ %.061, %135 ], [ %.061, %125 ], [ %.061, %124 ], [ %.061, %110 ], [ %.061, %100 ], [ %.061, %97 ], [ %.061, %96 ], [ %.061, %93 ], [ %.061, %92 ], [ %.061, %82 ], [ %.061, %72 ], [ %.061, %70 ], [ %.061, %69 ], [ %.061, %50 ], [ %.061, %40 ], [ %.061, %38 ], [ %.061, %26 ], [ %.061, %16 ]
  %.059.be = phi i32 [ %.059, %15 ], [ %.059, %383 ], [ %.059, %382 ], [ %.059, %380 ], [ %.059, %379 ], [ %.059, %378 ], [ %.059, %374 ], [ %.059, %372 ], [ %.059, %367 ], [ %.059, %366 ], [ %.059, %356 ], [ %.059, %355 ], [ %.059, %350 ], [ %.059, %340 ], [ %.059, %330 ], [ %.059, %329 ], [ %.059, %319 ], [ %.059, %309 ], [ %.059, %307 ], [ %.059, %295 ], [ %.059, %292 ], [ %.059, %291 ], [ %.059, %288 ], [ %.059, %287 ], [ %.059, %276 ], [ %.059, %266 ], [ %.059, %264 ], [ %.059, %263 ], [ %.059, %253 ], [ %.059, %243 ], [ %.059, %241 ], [ %.059, %231 ], [ %.059, %228 ], [ %.059, %227 ], [ %.059, %224 ], [ %.059, %223 ], [ %.059, %221 ], [ %.059, %220 ], [ %.neg77, %219 ], [ %.059, %209 ], [ %.059, %207 ], [ %206, %205 ], [ %.059, %203 ], [ %.059, %191 ], [ %.059, %181 ], [ %.059, %180 ], [ %.059, %178 ], [ %.059, %177 ], [ %.059, %164 ], [ %.059, %154 ], [ %.059, %151 ], [ %.059, %150 ], [ %.059, %148 ], [ %.059, %147 ], [ %.059, %146 ], [ %.059, %135 ], [ %.059, %125 ], [ %.059, %124 ], [ %.059, %110 ], [ %.059, %100 ], [ %.059, %97 ], [ %.059, %96 ], [ %.059, %93 ], [ %.059, %92 ], [ %.059, %82 ], [ %.059, %72 ], [ %.059, %70 ], [ %.059, %69 ], [ %.059, %50 ], [ %.059, %40 ], [ %.059, %38 ], [ %.059, %26 ], [ %.059, %16 ]
  %.057.be = phi i32 [ %.057, %15 ], [ %.057, %383 ], [ %.057, %382 ], [ %.057, %380 ], [ %.057, %379 ], [ %.057, %378 ], [ %.057, %374 ], [ %.057, %372 ], [ %.057, %367 ], [ %.057, %366 ], [ %.057, %356 ], [ %.057, %355 ], [ %.057, %350 ], [ %.057, %340 ], [ %.057, %330 ], [ %.057, %329 ], [ %.057, %319 ], [ %.057, %309 ], [ %.057, %307 ], [ %.057, %295 ], [ %.057, %292 ], [ %.057, %291 ], [ %.057, %288 ], [ %.057, %287 ], [ %.057, %276 ], [ %.057, %266 ], [ %265, %264 ], [ %.057, %263 ], [ %.057, %253 ], [ %.057, %243 ], [ %.057, %241 ], [ %.057, %231 ], [ %.057, %228 ], [ %.057, %227 ], [ %.057, %224 ], [ 1, %223 ], [ %.057, %221 ], [ %.057, %220 ], [ %.057, %219 ], [ %.057, %209 ], [ %.057, %207 ], [ %.057, %205 ], [ %.057, %203 ], [ %.057, %191 ], [ %.057, %181 ], [ %.057, %180 ], [ %.057, %178 ], [ %.057, %177 ], [ %.057, %164 ], [ %.057, %154 ], [ %.057, %151 ], [ %.057, %150 ], [ %.057, %148 ], [ %.057, %147 ], [ %.057, %146 ], [ %.057, %135 ], [ %.057, %125 ], [ %.057, %124 ], [ %.057, %110 ], [ %.057, %100 ], [ %.057, %97 ], [ %.057, %96 ], [ %.057, %93 ], [ %.057, %92 ], [ %.057, %82 ], [ %.057, %72 ], [ %.057, %70 ], [ %.057, %69 ], [ %.057, %50 ], [ %.057, %40 ], [ %.057, %38 ], [ %.057, %26 ], [ %.057, %16 ]
  %.055.be = phi i32 [ %.055, %15 ], [ %.055, %383 ], [ %.055, %382 ], [ %.055, %380 ], [ %.055, %379 ], [ %.055, %378 ], [ %.055, %374 ], [ %.055, %372 ], [ %.055, %367 ], [ %.055, %366 ], [ %.055, %356 ], [ %.055, %355 ], [ %.055, %350 ], [ %.055, %340 ], [ %.055, %330 ], [ %.055, %329 ], [ %.055, %319 ], [ %.055, %309 ], [ %.055, %307 ], [ %.055, %295 ], [ %.055, %292 ], [ %.055, %291 ], [ %.055, %288 ], [ %.055, %287 ], [ %.055, %276 ], [ %.055, %266 ], [ %.055, %264 ], [ %.055, %263 ], [ %.055, %253 ], [ %.055, %243 ], [ %242, %241 ], [ %.055, %231 ], [ %.055, %228 ], [ 1, %227 ], [ %.055, %224 ], [ %.055, %223 ], [ %.055, %221 ], [ %.055, %220 ], [ %.055, %219 ], [ %.055, %209 ], [ %.055, %207 ], [ %.055, %205 ], [ %.055, %203 ], [ %.055, %191 ], [ %.055, %181 ], [ %.055, %180 ], [ %.055, %178 ], [ %.055, %177 ], [ %.055, %164 ], [ %.055, %154 ], [ %.055, %151 ], [ %.055, %150 ], [ %.055, %148 ], [ %.055, %147 ], [ %.055, %146 ], [ %.055, %135 ], [ %.055, %125 ], [ %.055, %124 ], [ %.055, %110 ], [ %.055, %100 ], [ %.055, %97 ], [ %.055, %96 ], [ %.055, %93 ], [ %.055, %92 ], [ %.055, %82 ], [ %.055, %72 ], [ %.055, %70 ], [ %.055, %69 ], [ %.055, %50 ], [ %.055, %40 ], [ %.055, %38 ], [ %.055, %26 ], [ %.055, %16 ]
  %.053.be = phi i32 [ %.053, %15 ], [ %.neg, %383 ], [ %.053, %382 ], [ 1, %380 ], [ %.053, %379 ], [ %.053, %378 ], [ %.053, %374 ], [ %.053, %372 ], [ %.053, %367 ], [ %.053, %366 ], [ %.053, %356 ], [ %.053, %355 ], [ %.053, %350 ], [ %.neg71, %340 ], [ %.053, %330 ], [ %.053, %329 ], [ %.053, %319 ], [ %.053, %309 ], [ %.053, %307 ], [ %.053, %295 ], [ %.053, %292 ], [ %.053, %291 ], [ %.053, %288 ], [ %.053, %287 ], [ 1, %276 ], [ %.053, %266 ], [ %.053, %264 ], [ %.053, %263 ], [ %.053, %253 ], [ %.053, %243 ], [ %.053, %241 ], [ %.053, %231 ], [ %.053, %228 ], [ %.053, %227 ], [ %.053, %224 ], [ %.053, %223 ], [ %.053, %221 ], [ %.053, %220 ], [ %.053, %219 ], [ %.053, %209 ], [ %.053, %207 ], [ %.053, %205 ], [ %.053, %203 ], [ %.053, %191 ], [ %.053, %181 ], [ %.053, %180 ], [ %.053, %178 ], [ %.053, %177 ], [ %.053, %164 ], [ %.053, %154 ], [ %.053, %151 ], [ %.053, %150 ], [ %.053, %148 ], [ %.053, %147 ], [ %.053, %146 ], [ %.053, %135 ], [ %.053, %125 ], [ %.053, %124 ], [ %.053, %110 ], [ %.053, %100 ], [ %.053, %97 ], [ %.053, %96 ], [ %.053, %93 ], [ %.053, %92 ], [ %.053, %82 ], [ %.053, %72 ], [ %.053, %70 ], [ %.053, %69 ], [ %.053, %50 ], [ %.053, %40 ], [ %.053, %38 ], [ %.053, %26 ], [ %.053, %16 ]
  %.051.be = phi i32 [ %.051, %15 ], [ %.051, %383 ], [ %.051, %382 ], [ %.051, %380 ], [ %.051, %379 ], [ %.051, %378 ], [ %.051, %374 ], [ %.051, %372 ], [ %.051, %367 ], [ %.051, %366 ], [ %.051, %356 ], [ %.051, %355 ], [ %.051, %350 ], [ %.051, %340 ], [ %.051, %330 ], [ %.051, %329 ], [ %.051, %319 ], [ %.051, %309 ], [ %308, %307 ], [ %.051, %295 ], [ %.051, %292 ], [ %.053, %291 ], [ %.051, %288 ], [ %.051, %287 ], [ %.051, %276 ], [ %.051, %266 ], [ %.051, %264 ], [ %.051, %263 ], [ %.051, %253 ], [ %.051, %243 ], [ %.051, %241 ], [ %.051, %231 ], [ %.051, %228 ], [ %.051, %227 ], [ %.051, %224 ], [ %.051, %223 ], [ %.051, %221 ], [ %.051, %220 ], [ %.051, %219 ], [ %.051, %209 ], [ %.051, %207 ], [ %.051, %205 ], [ %.051, %203 ], [ %.051, %191 ], [ %.051, %181 ], [ %.051, %180 ], [ %.051, %178 ], [ %.051, %177 ], [ %.051, %164 ], [ %.051, %154 ], [ %.051, %151 ], [ %.051, %150 ], [ %.051, %148 ], [ %.051, %147 ], [ %.051, %146 ], [ %.051, %135 ], [ %.051, %125 ], [ %.051, %124 ], [ %.051, %110 ], [ %.051, %100 ], [ %.051, %97 ], [ %.051, %96 ], [ %.051, %93 ], [ %.051, %92 ], [ %.051, %82 ], [ %.051, %72 ], [ %.051, %70 ], [ %.051, %69 ], [ %.051, %50 ], [ %.051, %40 ], [ %.051, %38 ], [ %.051, %26 ], [ %.051, %16 ]
  %.0.be = phi i32 [ %.0, %15 ], [ 608903933, %383 ], [ -726001226, %382 ], [ 974680066, %380 ], [ -1632245804, %379 ], [ -2120382048, %378 ], [ 1201834168, %374 ], [ -2093861755, %372 ], [ 637796422, %367 ], [ -363528132, %366 ], [ 1796569012, %356 ], [ -473491581, %355 ], [ 1703975544, %350 ], [ %349, %340 ], [ %339, %330 ], [ 1832543805, %329 ], [ %328, %319 ], [ %318, %309 ], [ -1767188891, %307 ], [ 1108143307, %295 ], [ %294, %292 ], [ -1767188891, %291 ], [ %290, %288 ], [ 1703975544, %287 ], [ %286, %276 ], [ %275, %266 ], [ 848804431, %264 ], [ 827260994, %263 ], [ %262, %253 ], [ %252, %243 ], [ -1753259696, %241 ], [ 552937367, %231 ], [ %230, %228 ], [ -1753259696, %227 ], [ %226, %224 ], [ 848804431, %223 ], [ -775338411, %221 ], [ -1677187814, %220 ], [ 1487727935, %219 ], [ -1662619386, %209 ], [ %208, %207 ], [ 1487727935, %205 ], [ %204, %203 ], [ %202, %191 ], [ %190, %181 ], [ -775338411, %180 ], [ -1948897609, %178 ], [ -1760840852, %177 ], [ %176, %164 ], [ %163, %154 ], [ %153, %151 ], [ -1948897609, %150 ], [ 680696761, %148 ], [ -1666358897, %147 ], [ 1403102730, %146 ], [ %145, %135 ], [ %134, %125 ], [ 526645657, %124 ], [ %123, %110 ], [ %109, %100 ], [ %99, %97 ], [ 1403102730, %96 ], [ %95, %93 ], [ 680696761, %92 ], [ %91, %82 ], [ %81, %72 ], [ -1566761853, %70 ], [ -1490786748, %69 ], [ %68, %50 ], [ %49, %40 ], [ %39, %38 ], [ %37, %26 ], [ %25, %16 ]
  br label %15

16:                                               ; preds = %15
  %17 = load i32, i32* @x.5, align 4
  %18 = load i32, i32* @y.6, align 4
  %19 = add i32 %17, -1
  %20 = mul i32 %19, %17
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %23, %22
  %25 = select i1 %24, i32 -473491581, i32 2080219741
  br label %.backedge

26:                                               ; preds = %15
  %27 = load i32, i32* @n, align 4
  %28 = icmp sle i32 %.069, %27
  store i1 %28, i1* %2, align 1
  %29 = load i32, i32* @x.5, align 4
  %30 = load i32, i32* @y.6, align 4
  %31 = add i32 %29, -1
  %32 = mul i32 %31, %29
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %35, %34
  %37 = select i1 %36, i32 -2025120134, i32 2080219741
  br label %.backedge

38:                                               ; preds = %15
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %39 = select i1 %.0..0..0., i32 -2128281579, i32 -521471591
  br label %.backedge

40:                                               ; preds = %15
  %41 = load i32, i32* @x.5, align 4
  %42 = load i32, i32* @y.6, align 4
  %43 = add i32 %41, -1
  %44 = mul i32 %43, %41
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %47, %46
  %49 = select i1 %48, i32 1796569012, i32 57794764
  br label %.backedge

50:                                               ; preds = %15
  %51 = sext i32 %.069 to i64
  %52 = getelementptr inbounds [5010 x i64], [5010 x i64]* @pre, i64 0, i64 %51
  %53 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %52)
  %54 = add i32 %.069, -1
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [5010 x i64], [5010 x i64]* @pre, i64 0, i64 %55
  %57 = load i64, i64* %56, align 8
  %58 = load i64, i64* %52, align 8
  %59 = add i64 %58, %57
  store i64 %59, i64* %52, align 8
  %60 = load i32, i32* @x.5, align 4
  %61 = load i32, i32* @y.6, align 4
  %62 = add i32 %60, -1
  %63 = mul i32 %62, %60
  %64 = and i32 %63, 1
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %61, 10
  %67 = or i1 %66, %65
  %68 = select i1 %67, i32 858056133, i32 57794764
  br label %.backedge

69:                                               ; preds = %15
  br label %.backedge

70:                                               ; preds = %15
  %71 = add i32 %.069, 1
  br label %.backedge

72:                                               ; preds = %15
  %73 = load i32, i32* @x.5, align 4
  %74 = load i32, i32* @y.6, align 4
  %75 = add i32 %73, -1
  %76 = mul i32 %75, %73
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %79, %78
  %81 = select i1 %80, i32 -363528132, i32 530617710
  br label %.backedge

82:                                               ; preds = %15
  %83 = load i32, i32* @x.5, align 4
  %84 = load i32, i32* @y.6, align 4
  %85 = add i32 %83, -1
  %86 = mul i32 %85, %83
  %87 = and i32 %86, 1
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %89, %88
  %91 = select i1 %90, i32 -372891669, i32 530617710
  br label %.backedge

92:                                               ; preds = %15
  br label %.backedge

93:                                               ; preds = %15
  %94 = load i32, i32* @n, align 4
  %.not81 = icmp sgt i32 %.067, %94
  %95 = select i1 %.not81, i32 533533398, i32 -1344372844
  br label %.backedge

96:                                               ; preds = %15
  br label %.backedge

97:                                               ; preds = %15
  %98 = load i32, i32* @m, align 4
  %.not80 = icmp sgt i32 %.065, %98
  %99 = select i1 %.not80, i32 -311247724, i32 -145530092
  br label %.backedge

100:                                              ; preds = %15
  %101 = load i32, i32* @x.5, align 4
  %102 = load i32, i32* @y.6, align 4
  %103 = add i32 %101, -1
  %104 = mul i32 %103, %101
  %105 = and i32 %104, 1
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %107, %106
  %109 = select i1 %108, i32 637796422, i32 1693098720
  br label %.backedge

110:                                              ; preds = %15
  %111 = sext i32 %.065 to i64
  %112 = sext i32 %.067 to i64
  %113 = getelementptr inbounds [210 x [5010 x i32]], [210 x [5010 x i32]]* @B, i64 0, i64 %111, i64 %112
  %114 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %113)
  %115 = load i32, i32* @x.5, align 4
  %116 = load i32, i32* @y.6, align 4
  %117 = add i32 %115, -1
  %118 = mul i32 %117, %115
  %119 = and i32 %118, 1
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %121, %120
  %123 = select i1 %122, i32 -833023367, i32 1693098720
  br label %.backedge

124:                                              ; preds = %15
  br label %.backedge

125:                                              ; preds = %15
  %126 = load i32, i32* @x.5, align 4
  %127 = load i32, i32* @y.6, align 4
  %128 = add i32 %126, -1
  %129 = mul i32 %128, %126
  %130 = and i32 %129, 1
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %132, %131
  %134 = select i1 %133, i32 -2093861755, i32 1655084863
  br label %.backedge

135:                                              ; preds = %15
  %136 = add i32 %.065, 1
  %137 = load i32, i32* @x.5, align 4
  %138 = load i32, i32* @y.6, align 4
  %139 = add i32 %137, -1
  %140 = mul i32 %139, %137
  %141 = and i32 %140, 1
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %138, 10
  %144 = or i1 %143, %142
  %145 = select i1 %144, i32 -1903781933, i32 1655084863
  br label %.backedge

146:                                              ; preds = %15
  br label %.backedge

147:                                              ; preds = %15
  br label %.backedge

148:                                              ; preds = %15
  %149 = add i32 %.067, 1
  br label %.backedge

150:                                              ; preds = %15
  br label %.backedge

151:                                              ; preds = %15
  %152 = load i32, i32* @m, align 4
  %.not79 = icmp sgt i32 %.063, %152
  %153 = select i1 %.not79, i32 992704136, i32 1138330098
  br label %.backedge

154:                                              ; preds = %15
  %155 = load i32, i32* @x.5, align 4
  %156 = load i32, i32* @y.6, align 4
  %157 = add i32 %155, -1
  %158 = mul i32 %157, %155
  %159 = and i32 %158, 1
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %161, %160
  %163 = select i1 %162, i32 1201834168, i32 636718211
  br label %.backedge

164:                                              ; preds = %15
  %165 = load i32, i32* @n, align 4
  %166 = sext i32 %.063 to i64
  %167 = getelementptr inbounds [210 x [5010 x i32]], [210 x [5010 x i32]]* @B, i64 0, i64 %166, i64 0
  call void @_Z5solveiiPii(i32 1, i32 %165, i32* nonnull %167, i32 0)
  %168 = load i32, i32* @x.5, align 4
  %169 = load i32, i32* @y.6, align 4
  %170 = add i32 %168, -1
  %171 = mul i32 %170, %168
  %172 = and i32 %171, 1
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %174, %173
  %176 = select i1 %175, i32 -1402899006, i32 636718211
  br label %.backedge

177:                                              ; preds = %15
  br label %.backedge

178:                                              ; preds = %15
  %179 = add i32 %.063, 1
  br label %.backedge

180:                                              ; preds = %15
  br label %.backedge

181:                                              ; preds = %15
  %182 = load i32, i32* @x.5, align 4
  %183 = load i32, i32* @y.6, align 4
  %184 = add i32 %182, -1
  %185 = mul i32 %184, %182
  %186 = and i32 %185, 1
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %188, %187
  %190 = select i1 %189, i32 -2120382048, i32 1479800056
  br label %.backedge

191:                                              ; preds = %15
  %192 = load i32, i32* @n, align 4
  %193 = icmp sle i32 %.061, %192
  store i1 %193, i1* %1, align 1
  %194 = load i32, i32* @x.5, align 4
  %195 = load i32, i32* @y.6, align 4
  %196 = add i32 %194, -1
  %197 = mul i32 %196, %194
  %198 = and i32 %197, 1
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %200, %199
  %202 = select i1 %201, i32 -171521412, i32 1479800056
  br label %.backedge

203:                                              ; preds = %15
  %.0..0..0.50 = load volatile i1, i1* %1, align 1
  %204 = select i1 %.0..0..0.50, i32 -1554926954, i32 2110710909
  br label %.backedge

205:                                              ; preds = %15
  %206 = load i32, i32* @n, align 4
  br label %.backedge

207:                                              ; preds = %15
  %.not78 = icmp eq i32 %.059, 0
  %208 = select i1 %.not78, i32 1926407140, i32 -1007734124
  br label %.backedge

209:                                              ; preds = %15
  %210 = sext i32 %.061 to i64
  %211 = add i32 %.059, 1
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds [5010 x [5010 x i64]], [5010 x [5010 x i64]]* @A, i64 0, i64 %210, i64 %212
  %214 = load i64, i64* %213, align 8
  %215 = sext i32 %.059 to i64
  %216 = getelementptr inbounds [5010 x [5010 x i64]], [5010 x [5010 x i64]]* @A, i64 0, i64 %210, i64 %215
  %217 = load i64, i64* %216, align 8
  %218 = add i64 %217, %214
  store i64 %218, i64* %216, align 8
  br label %.backedge

219:                                              ; preds = %15
  %.neg77 = add i32 %.059, -1
  br label %.backedge

220:                                              ; preds = %15
  br label %.backedge

221:                                              ; preds = %15
  %222 = add i32 %.061, 1
  br label %.backedge

223:                                              ; preds = %15
  br label %.backedge

224:                                              ; preds = %15
  %225 = load i32, i32* @n, align 4
  %.not76 = icmp sgt i32 %.057, %225
  %226 = select i1 %.not76, i32 1627811569, i32 -1857178692
  br label %.backedge

227:                                              ; preds = %15
  br label %.backedge

228:                                              ; preds = %15
  %229 = load i32, i32* @n, align 4
  %.not75 = icmp sgt i32 %.055, %229
  %230 = select i1 %.not75, i32 -525859865, i32 -46851171
  br label %.backedge

231:                                              ; preds = %15
  %232 = add i32 %.057, -1
  %233 = sext i32 %232 to i64
  %234 = sext i32 %.055 to i64
  %235 = getelementptr inbounds [5010 x [5010 x i64]], [5010 x [5010 x i64]]* @A, i64 0, i64 %233, i64 %234
  %236 = load i64, i64* %235, align 8
  %237 = sext i32 %.057 to i64
  %238 = getelementptr inbounds [5010 x [5010 x i64]], [5010 x [5010 x i64]]* @A, i64 0, i64 %237, i64 %234
  %239 = load i64, i64* %238, align 8
  %240 = add i64 %239, %236
  store i64 %240, i64* %238, align 8
  br label %.backedge

241:                                              ; preds = %15
  %242 = add i32 %.055, 1
  br label %.backedge

243:                                              ; preds = %15
  %244 = load i32, i32* @x.5, align 4
  %245 = load i32, i32* @y.6, align 4
  %246 = add i32 %244, -1
  %247 = mul i32 %246, %244
  %248 = and i32 %247, 1
  %249 = icmp eq i32 %248, 0
  %250 = icmp slt i32 %245, 10
  %251 = or i1 %250, %249
  %252 = select i1 %251, i32 -1632245804, i32 -1907296564
  br label %.backedge

253:                                              ; preds = %15
  %254 = load i32, i32* @x.5, align 4
  %255 = load i32, i32* @y.6, align 4
  %256 = add i32 %254, -1
  %257 = mul i32 %256, %254
  %258 = and i32 %257, 1
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %255, 10
  %261 = or i1 %260, %259
  %262 = select i1 %261, i32 -1966698481, i32 -1907296564
  br label %.backedge

263:                                              ; preds = %15
  br label %.backedge

264:                                              ; preds = %15
  %265 = add i32 %.057, 1
  br label %.backedge

266:                                              ; preds = %15
  %267 = load i32, i32* @x.5, align 4
  %268 = load i32, i32* @y.6, align 4
  %269 = add i32 %267, -1
  %270 = mul i32 %269, %267
  %271 = and i32 %270, 1
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %273, %272
  %275 = select i1 %274, i32 974680066, i32 -371680935
  br label %.backedge

276:                                              ; preds = %15
  %277 = call i64 @_ZNSt14numeric_limitsIxE3minEv() #6
  store i64 %277, i64* %3, align 8
  %278 = load i32, i32* @x.5, align 4
  %279 = load i32, i32* @y.6, align 4
  %280 = add i32 %278, -1
  %281 = mul i32 %280, %278
  %282 = and i32 %281, 1
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %279, 10
  %285 = or i1 %284, %283
  %286 = select i1 %285, i32 1927649579, i32 -371680935
  br label %.backedge

287:                                              ; preds = %15
  br label %.backedge

288:                                              ; preds = %15
  %289 = load i32, i32* @n, align 4
  %.not74 = icmp sgt i32 %.053, %289
  %290 = select i1 %.not74, i32 1642506431, i32 1602116402
  br label %.backedge

291:                                              ; preds = %15
  br label %.backedge

292:                                              ; preds = %15
  %293 = load i32, i32* @n, align 4
  %.not = icmp sgt i32 %.051, %293
  %294 = select i1 %.not, i32 1795723397, i32 1337845765
  br label %.backedge

295:                                              ; preds = %15
  %296 = sext i32 %.053 to i64
  %297 = sext i32 %.051 to i64
  %298 = getelementptr inbounds [5010 x [5010 x i64]], [5010 x [5010 x i64]]* @A, i64 0, i64 %296, i64 %297
  %299 = load i64, i64* %298, align 8
  %300 = getelementptr inbounds [5010 x i64], [5010 x i64]* @pre, i64 0, i64 %297
  %301 = load i64, i64* %300, align 8
  %302 = getelementptr inbounds [5010 x i64], [5010 x i64]* @pre, i64 0, i64 %296
  %303 = load i64, i64* %302, align 8
  %304 = sub i64 %299, %301
  %.neg73 = add i64 %304, %303
  store i64 %.neg73, i64* %4, align 8
  %305 = call dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %3, i64* nonnull dereferenceable(8) %4)
  %306 = load i64, i64* %305, align 8
  store i64 %306, i64* %3, align 8
  br label %.backedge

307:                                              ; preds = %15
  %308 = add i32 %.051, 1
  br label %.backedge

309:                                              ; preds = %15
  %310 = load i32, i32* @x.5, align 4
  %311 = load i32, i32* @y.6, align 4
  %312 = add i32 %310, -1
  %313 = mul i32 %312, %310
  %314 = and i32 %313, 1
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %311, 10
  %317 = or i1 %316, %315
  %318 = select i1 %317, i32 -726001226, i32 -1616848239
  br label %.backedge

319:                                              ; preds = %15
  %320 = load i32, i32* @x.5, align 4
  %321 = load i32, i32* @y.6, align 4
  %322 = add i32 %320, -1
  %323 = mul i32 %322, %320
  %324 = and i32 %323, 1
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %321, 10
  %327 = or i1 %326, %325
  %328 = select i1 %327, i32 -1665221972, i32 -1616848239
  br label %.backedge

329:                                              ; preds = %15
  br label %.backedge

330:                                              ; preds = %15
  %331 = load i32, i32* @x.5, align 4
  %332 = load i32, i32* @y.6, align 4
  %333 = add i32 %331, -1
  %334 = mul i32 %333, %331
  %335 = and i32 %334, 1
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %332, 10
  %338 = or i1 %337, %336
  %339 = select i1 %338, i32 608903933, i32 -664011100
  br label %.backedge

340:                                              ; preds = %15
  %.neg71 = add i32 %.053, 1
  %341 = load i32, i32* @x.5, align 4
  %342 = load i32, i32* @y.6, align 4
  %343 = add i32 %341, -1
  %344 = mul i32 %343, %341
  %345 = and i32 %344, 1
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %342, 10
  %348 = or i1 %347, %346
  %349 = select i1 %348, i32 -940976123, i32 -664011100
  br label %.backedge

350:                                              ; preds = %15
  br label %.backedge

351:                                              ; preds = %15
  %352 = load i64, i64* %3, align 8
  %353 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i64 %352)
  %354 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %353, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  ret i32 0

355:                                              ; preds = %15
  br label %.backedge

356:                                              ; preds = %15
  %357 = sext i32 %.069 to i64
  %358 = getelementptr inbounds [5010 x i64], [5010 x i64]* @pre, i64 0, i64 %357
  %359 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* nonnull @_ZSt3cin, i64* nonnull dereferenceable(8) %358)
  %360 = add i32 %.069, -1
  %361 = sext i32 %360 to i64
  %362 = getelementptr inbounds [5010 x i64], [5010 x i64]* @pre, i64 0, i64 %361
  %363 = load i64, i64* %362, align 8
  %364 = load i64, i64* %358, align 8
  %365 = add i64 %364, %363
  store i64 %365, i64* %358, align 8
  br label %.backedge

366:                                              ; preds = %15
  br label %.backedge

367:                                              ; preds = %15
  %368 = sext i32 %.065 to i64
  %369 = sext i32 %.067 to i64
  %370 = getelementptr inbounds [210 x [5010 x i32]], [210 x [5010 x i32]]* @B, i64 0, i64 %368, i64 %369
  %371 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %370)
  br label %.backedge

372:                                              ; preds = %15
  %373 = add i32 %.065, 1
  br label %.backedge

374:                                              ; preds = %15
  %375 = load i32, i32* @n, align 4
  %376 = sext i32 %.063 to i64
  %377 = getelementptr inbounds [210 x [5010 x i32]], [210 x [5010 x i32]]* @B, i64 0, i64 %376, i64 0
  call void @_Z5solveiiPii(i32 1, i32 %375, i32* nonnull %377, i32 0)
  br label %.backedge

378:                                              ; preds = %15
  br label %.backedge

379:                                              ; preds = %15
  br label %.backedge

380:                                              ; preds = %15
  %381 = call i64 @_ZNSt14numeric_limitsIxE3minEv() #6
  store i64 %381, i64* %3, align 8
  br label %.backedge

382:                                              ; preds = %15
  br label %.backedge

383:                                              ; preds = %15
  %.neg = add i32 %.053, 1
  br label %.backedge
}

declare zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) local_unnamed_addr #1

declare %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"*, %"class.std::basic_ostream"*) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt14numeric_limitsIxE3minEv() local_unnamed_addr #5 comdat align 2 {
  ret i64 -9223372036854775808
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i1, align 1
  %5 = alloca i64**, align 8
  %6 = alloca i64**, align 8
  %7 = alloca i64**, align 8
  %8 = alloca i1, align 1
  %9 = alloca i1, align 1
  %10 = load i32, i32* @x.9, align 4
  %11 = load i32, i32* @y.10, align 4
  %12 = add i32 %10, -1
  %13 = mul i32 %12, %10
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %9, align 1
  %16 = icmp slt i32 %11, 10
  store i1 %16, i1* %8, align 1
  br label %17

17:                                               ; preds = %.backedge, %2
  %.0 = phi i32 [ 1310763135, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1310763135, label %18
    i32 -1587821816, label %21
    i32 1263098861, label %39
    i32 643302402, label %41
    i32 660837691, label %43
    i32 2134265418, label %45
    i32 -808767044, label %55
    i32 -1886399401, label %66
    i32 -759509431, label %67
    i32 -446198447, label %68
  ]

.backedge:                                        ; preds = %17, %68, %67, %55, %45, %43, %41, %39, %21, %18
  %.0.be = phi i32 [ %.0, %17 ], [ -808767044, %68 ], [ -1587821816, %67 ], [ %65, %55 ], [ %54, %45 ], [ 2134265418, %43 ], [ 2134265418, %41 ], [ %40, %39 ], [ %38, %21 ], [ %20, %18 ]
  br label %17

18:                                               ; preds = %17
  %.0..0..0. = load volatile i1, i1* %9, align 1
  %.0..0..0.1 = load volatile i1, i1* %8, align 1
  %19 = or i1 %.0..0..0., %.0..0..0.1
  %20 = select i1 %19, i32 -1587821816, i32 -759509431
  br label %.backedge

21:                                               ; preds = %17
  %22 = alloca i64*, align 8
  store i64** %22, i64*** %7, align 8
  %23 = alloca i64*, align 8
  store i64** %23, i64*** %6, align 8
  %24 = alloca i64*, align 8
  store i64** %24, i64*** %5, align 8
  %.0..0..0.6 = load volatile i64**, i64*** %6, align 8
  store i64* %0, i64** %.0..0..0.6, align 8
  %.0..0..0.9 = load volatile i64**, i64*** %5, align 8
  store i64* %1, i64** %.0..0..0.9, align 8
  %.0..0..0.7 = load volatile i64**, i64*** %6, align 8
  %25 = load i64*, i64** %.0..0..0.7, align 8
  %26 = load i64, i64* %25, align 8
  %.0..0..0.10 = load volatile i64**, i64*** %5, align 8
  %27 = load i64*, i64** %.0..0..0.10, align 8
  %28 = load i64, i64* %27, align 8
  %29 = icmp slt i64 %26, %28
  store i1 %29, i1* %4, align 1
  %30 = load i32, i32* @x.9, align 4
  %31 = load i32, i32* @y.10, align 4
  %32 = add i32 %30, -1
  %33 = mul i32 %32, %30
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %36, %35
  %38 = select i1 %37, i32 1263098861, i32 -759509431
  br label %.backedge

39:                                               ; preds = %17
  %.0..0..0.12 = load volatile i1, i1* %4, align 1
  %40 = select i1 %.0..0..0.12, i32 643302402, i32 660837691
  br label %.backedge

41:                                               ; preds = %17
  %.0..0..0.11 = load volatile i64**, i64*** %5, align 8
  %42 = load i64*, i64** %.0..0..0.11, align 8
  %.0..0..0.2 = load volatile i64**, i64*** %7, align 8
  store i64* %42, i64** %.0..0..0.2, align 8
  br label %.backedge

43:                                               ; preds = %17
  %.0..0..0.8 = load volatile i64**, i64*** %6, align 8
  %44 = load i64*, i64** %.0..0..0.8, align 8
  %.0..0..0.3 = load volatile i64**, i64*** %7, align 8
  store i64* %44, i64** %.0..0..0.3, align 8
  br label %.backedge

45:                                               ; preds = %17
  %46 = load i32, i32* @x.9, align 4
  %47 = load i32, i32* @y.10, align 4
  %48 = add i32 %46, -1
  %49 = mul i32 %48, %46
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %47, 10
  %53 = or i1 %52, %51
  %54 = select i1 %53, i32 -808767044, i32 -446198447
  br label %.backedge

55:                                               ; preds = %17
  %.0..0..0.4 = load volatile i64**, i64*** %7, align 8
  %56 = load i64*, i64** %.0..0..0.4, align 8
  store i64* %56, i64** %3, align 8
  %57 = load i32, i32* @x.9, align 4
  %58 = load i32, i32* @y.10, align 4
  %59 = add i32 %57, -1
  %60 = mul i32 %59, %57
  %61 = and i32 %60, 1
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %63, %62
  %65 = select i1 %64, i32 -1886399401, i32 -446198447
  br label %.backedge

66:                                               ; preds = %17
  %.0..0..0.13 = load volatile i64*, i64** %3, align 8
  ret i64* %.0..0..0.13

67:                                               ; preds = %17
  br label %.backedge

68:                                               ; preds = %17
  %.0..0..0.5 = load volatile i64**, i64*** %7, align 8
  br label %.backedge
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt13__max_elementIPiN9__gnu_cxx5__ops15_Iter_less_iterEET_S4_S4_T0_(i32* %0, i32* %1) local_unnamed_addr #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca %"struct.__gnu_cxx::__ops::_Iter_less_iter", align 1
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %4, align 8
  br label %7

7:                                                ; preds = %.backedge, %2
  %.019 = phi i32* [ %0, %2 ], [ %.019.be, %.backedge ]
  %.017 = phi i32* [ undef, %2 ], [ %.017.be, %.backedge ]
  %.015 = phi i32* [ undef, %2 ], [ %.015.be, %.backedge ]
  %.0 = phi i32 [ 1531420586, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1531420586, label %8
    i32 2048057661, label %11
    i32 -1312968550, label %12
    i32 -1926357603, label %13
    i32 -2077441334, label %16
    i32 -339858086, label %19
    i32 60868164, label %20
    i32 -1647036628, label %21
    i32 -379826129, label %22
    i32 -433831575, label %32
    i32 773738143, label %42
    i32 -896644337, label %43
  ]

.backedge:                                        ; preds = %7, %43, %32, %22, %21, %20, %19, %16, %13, %12, %11, %8
  %.019.be = phi i32* [ %.019, %7 ], [ %.019, %43 ], [ %.019, %32 ], [ %.019, %22 ], [ %.019, %21 ], [ %.019, %20 ], [ %.019, %19 ], [ %.019, %16 ], [ %14, %13 ], [ %.019, %12 ], [ %.019, %11 ], [ %.019, %8 ]
  %.017.be = phi i32* [ %.017, %7 ], [ %.017, %43 ], [ %.017, %32 ], [ %.017, %22 ], [ %.015, %21 ], [ %.017, %20 ], [ %.017, %19 ], [ %.017, %16 ], [ %.017, %13 ], [ %.017, %12 ], [ %.019, %11 ], [ %.017, %8 ]
  %.015.be = phi i32* [ %.015, %7 ], [ %.015, %43 ], [ %.015, %32 ], [ %.015, %22 ], [ %.015, %21 ], [ %.015, %20 ], [ %.019, %19 ], [ %.015, %16 ], [ %.015, %13 ], [ %.019, %12 ], [ %.015, %11 ], [ %.015, %8 ]
  %.0.be = phi i32 [ %.0, %7 ], [ -433831575, %43 ], [ %41, %32 ], [ %31, %22 ], [ -379826129, %21 ], [ -1926357603, %20 ], [ 60868164, %19 ], [ %18, %16 ], [ %15, %13 ], [ -1926357603, %12 ], [ -379826129, %11 ], [ %10, %8 ]
  br label %7

8:                                                ; preds = %7
  %.0..0..0.12 = load volatile i32*, i32** %5, align 8
  %.0..0..0.13 = load volatile i32*, i32** %4, align 8
  %9 = icmp eq i32* %.0..0..0.12, %.0..0..0.13
  %10 = select i1 %9, i32 2048057661, i32 -1312968550
  br label %.backedge

11:                                               ; preds = %7
  br label %.backedge

12:                                               ; preds = %7
  br label %.backedge

13:                                               ; preds = %7
  %14 = getelementptr inbounds i32, i32* %.019, i64 1
  %.not = icmp eq i32* %14, %1
  %15 = select i1 %.not, i32 -1647036628, i32 -2077441334
  br label %.backedge

16:                                               ; preds = %7
  %17 = call zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclIPiS3_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* nonnull %6, i32* %.015, i32* %.019)
  %18 = select i1 %17, i32 -339858086, i32 60868164
  br label %.backedge

19:                                               ; preds = %7
  br label %.backedge

20:                                               ; preds = %7
  br label %.backedge

21:                                               ; preds = %7
  br label %.backedge

22:                                               ; preds = %7
  %23 = load i32, i32* @x.11, align 4
  %24 = load i32, i32* @y.12, align 4
  %25 = add i32 %23, -1
  %26 = mul i32 %25, %23
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %29, %28
  %31 = select i1 %30, i32 -433831575, i32 -896644337
  br label %.backedge

32:                                               ; preds = %7
  store i32* %.017, i32** %3, align 8
  %33 = load i32, i32* @x.11, align 4
  %34 = load i32, i32* @y.12, align 4
  %35 = add i32 %33, -1
  %36 = mul i32 %35, %33
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %34, 10
  %40 = or i1 %39, %38
  %41 = select i1 %40, i32 773738143, i32 -896644337
  br label %.backedge

42:                                               ; preds = %7
  %.0..0..0.14 = load volatile i32*, i32** %3, align 8
  ret i32* %.0..0..0.14

43:                                               ; preds = %7
  br label %.backedge
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops16__iter_less_iterEv() local_unnamed_addr #5 comdat {
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNK9__gnu_cxx5__ops15_Iter_less_iterclIPiS3_EEbT_T0_(%"struct.__gnu_cxx::__ops::_Iter_less_iter"* %0, i32* %1, i32* %2) local_unnamed_addr #5 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = load i32, i32* %2, align 4
  %6 = icmp slt i32 %4, %5
  ret i1 %6
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s225882933.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
