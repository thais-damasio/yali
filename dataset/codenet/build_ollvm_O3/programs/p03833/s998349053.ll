; ModuleID = 'build_ollvm/programs/p03833/s998349053.ll'
source_filename = "Project_CodeNet_C++1400/p03833/s998349053.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }

$_Z4readv = comdat any

$_ZSt3maxIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@L = local_unnamed_addr global [210 x [5010 x i32]] zeroinitializer, align 16
@R = local_unnamed_addr global [210 x [5010 x i32]] zeroinitializer, align 16
@B = local_unnamed_addr global [210 x [5010 x i32]] zeroinitializer, align 16
@stack = local_unnamed_addr global [5010 x i32] zeroinitializer, align 16
@sum = local_unnamed_addr global [5010 x [5010 x i64]] zeroinitializer, align 16
@A = local_unnamed_addr global [5010 x i64] zeroinitializer, align 16
@.str = private unnamed_addr constant [6 x i8] c"%lld\0A\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s998349053.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i32, align 4
  %6 = alloca i64*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i32*, align 8
  %16 = alloca i32*, align 8
  %17 = alloca i32*, align 8
  %18 = alloca i32*, align 8
  %19 = alloca i32*, align 8
  %20 = alloca i64*, align 8
  %21 = alloca i32*, align 8
  %22 = alloca i32*, align 8
  %23 = alloca i1, align 1
  %24 = alloca i1, align 1
  %25 = load i32, i32* @x.1, align 4
  %26 = load i32, i32* @y.2, align 4
  %27 = add i32 %25, -1
  %28 = mul i32 %27, %25
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 0
  store i1 %30, i1* %24, align 1
  %31 = icmp slt i32 %26, 10
  store i1 %31, i1* %23, align 1
  br label %32

32:                                               ; preds = %.backedge, %0
  %.0200 = phi i32 [ -2009857351, %0 ], [ %.0200.be, %.backedge ]
  %.0198 = phi i1 [ undef, %0 ], [ %.0198.be, %.backedge ]
  %.0196 = phi i32 [ undef, %0 ], [ %.0196.be, %.backedge ]
  %.0194 = phi i1 [ undef, %0 ], [ %.0194.be, %.backedge ]
  %.0 = phi i32 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0200, label %.backedge [
    i32 -2009857351, label %33
    i32 -1320586880, label %36
    i32 340093395, label %65
    i32 862592147, label %66
    i32 1501269202, label %70
    i32 2008761100, label %82
    i32 910505682, label %92
    i32 -1830035371, label %104
    i32 -45225365, label %105
    i32 -1160455290, label %106
    i32 516560429, label %110
    i32 -1277889814, label %111
    i32 599712951, label %115
    i32 -1906096059, label %125
    i32 -191568426, label %141
    i32 -1656243996, label %142
    i32 -832102345, label %145
    i32 -43704356, label %155
    i32 440728982, label %165
    i32 -1512570920, label %166
    i32 -256503918, label %169
    i32 1367570556, label %179
    i32 -618904180, label %189
    i32 119959779, label %190
    i32 -63842812, label %194
    i32 -1184155390, label %204
    i32 -1360777502, label %214
    i32 55861748, label %215
    i32 -758630649, label %219
    i32 896221549, label %220
    i32 1705836288, label %223
    i32 -722885556, label %240
    i32 890014132, label %242
    i32 507625222, label %245
    i32 442382028, label %248
    i32 212890599, label %258
    i32 1120657763, label %273
    i32 1076808610, label %274
    i32 1619590315, label %284
    i32 1046601465, label %294
    i32 1289853369, label %295
    i32 -690858926, label %306
    i32 979317364, label %309
    i32 -1516972397, label %311
    i32 1243911460, label %321
    i32 225971120, label %333
    i32 -1455132807, label %335
    i32 544430085, label %336
    i32 1490915737, label %339
    i32 2095182591, label %349
    i32 874708820, label %375
    i32 -1422206743, label %376
    i32 1652898100, label %378
    i32 221465153, label %381
    i32 -1462805524, label %391
    i32 -509076151, label %403
    i32 324963608, label %405
    i32 -23591708, label %411
    i32 -2104977354, label %413
    i32 -1552988467, label %424
    i32 1150351143, label %427
    i32 -435220722, label %428
    i32 2121166424, label %432
    i32 124636914, label %442
    i32 1176149159, label %530
    i32 -1014009630, label %531
    i32 -313387275, label %541
    i32 683800298, label %553
    i32 -407825405, label %554
    i32 -1807374024, label %555
    i32 395053978, label %558
    i32 186936981, label %559
    i32 1323413123, label %563
    i32 2114327786, label %573
    i32 1837346318, label %583
    i32 1812126737, label %584
    i32 1042092879, label %588
    i32 1074585506, label %598
    i32 399811005, label %622
    i32 790286129, label %623
    i32 338559449, label %626
    i32 -1279937111, label %636
    i32 490157648, label %646
    i32 -661407551, label %647
    i32 -1927733896, label %657
    i32 1406283848, label %670
    i32 929665607, label %672
    i32 1366499639, label %687
    i32 342859394, label %690
    i32 833668870, label %692
    i32 -541706136, label %696
    i32 -1830167652, label %706
    i32 -1056204923, label %734
    i32 1842297017, label %735
    i32 1590197496, label %737
    i32 1566721753, label %738
    i32 161691284, label %741
    i32 -1424083801, label %744
    i32 804371341, label %747
    i32 -79285381, label %750
    i32 1149932308, label %757
    i32 -1473230409, label %758
    i32 1506301273, label %759
    i32 -1614259072, label %760
    i32 1607712653, label %761
    i32 -735092189, label %762
    i32 -1211187634, label %763
    i32 -1592379607, label %764
    i32 -813733519, label %765
    i32 312840458, label %845
    i32 -1010922286, label %848
    i32 71303448, label %849
    i32 1099603710, label %864
    i32 704895241, label %865
    i32 -1476839632, label %866
  ]

.backedge:                                        ; preds = %32, %866, %865, %864, %849, %848, %845, %765, %764, %763, %762, %761, %760, %759, %758, %757, %750, %747, %744, %738, %737, %735, %734, %706, %696, %692, %690, %687, %672, %670, %657, %647, %646, %636, %626, %623, %622, %598, %588, %584, %583, %573, %563, %559, %558, %555, %554, %553, %541, %531, %530, %442, %432, %428, %427, %424, %413, %411, %405, %403, %391, %381, %378, %376, %375, %349, %339, %336, %335, %333, %321, %311, %309, %306, %295, %294, %284, %274, %273, %258, %248, %245, %242, %240, %223, %220, %219, %215, %214, %204, %194, %190, %189, %179, %169, %166, %165, %155, %145, %142, %141, %125, %115, %111, %110, %106, %105, %104, %92, %82, %70, %66, %65, %36, %33
  %.0200.be = phi i32 [ %.0200, %32 ], [ -1830167652, %866 ], [ -1927733896, %865 ], [ -1279937111, %864 ], [ 1074585506, %849 ], [ 2114327786, %848 ], [ -313387275, %845 ], [ 124636914, %765 ], [ -1462805524, %764 ], [ 2095182591, %763 ], [ 1243911460, %762 ], [ 1619590315, %761 ], [ 212890599, %760 ], [ -1184155390, %759 ], [ 1367570556, %758 ], [ -43704356, %757 ], [ -1906096059, %750 ], [ 910505682, %747 ], [ -1320586880, %744 ], [ 186936981, %738 ], [ 1566721753, %737 ], [ 833668870, %735 ], [ 1842297017, %734 ], [ %733, %706 ], [ %705, %696 ], [ %695, %692 ], [ 833668870, %690 ], [ -661407551, %687 ], [ 1366499639, %672 ], [ %671, %670 ], [ %669, %657 ], [ %656, %647 ], [ -661407551, %646 ], [ %645, %636 ], [ %635, %626 ], [ 1812126737, %623 ], [ 790286129, %622 ], [ %621, %598 ], [ %597, %588 ], [ %587, %584 ], [ 1812126737, %583 ], [ %582, %573 ], [ %572, %563 ], [ %562, %559 ], [ 186936981, %558 ], [ 119959779, %555 ], [ -1807374024, %554 ], [ -435220722, %553 ], [ %552, %541 ], [ %540, %531 ], [ -1014009630, %530 ], [ %529, %442 ], [ %441, %432 ], [ %431, %428 ], [ -435220722, %427 ], [ -1516972397, %424 ], [ -1552988467, %413 ], [ -2104977354, %411 ], [ -2104977354, %405 ], [ %404, %403 ], [ %402, %391 ], [ %390, %381 ], [ 544430085, %378 ], [ %377, %376 ], [ -1422206743, %375 ], [ %374, %349 ], [ %348, %339 ], [ %338, %336 ], [ 544430085, %335 ], [ %334, %333 ], [ %332, %321 ], [ %320, %311 ], [ -1516972397, %309 ], [ 55861748, %306 ], [ -690858926, %295 ], [ 1289853369, %294 ], [ %293, %284 ], [ %283, %274 ], [ 1289853369, %273 ], [ %272, %258 ], [ %257, %248 ], [ %247, %245 ], [ 896221549, %242 ], [ %241, %240 ], [ -722885556, %223 ], [ %222, %220 ], [ 896221549, %219 ], [ %218, %215 ], [ 55861748, %214 ], [ %213, %204 ], [ %203, %194 ], [ %193, %190 ], [ 119959779, %189 ], [ %188, %179 ], [ %178, %169 ], [ -1160455290, %166 ], [ -1512570920, %165 ], [ %164, %155 ], [ %154, %145 ], [ -1277889814, %142 ], [ -1656243996, %141 ], [ %140, %125 ], [ %124, %115 ], [ %114, %111 ], [ -1277889814, %110 ], [ %109, %106 ], [ -1160455290, %105 ], [ 862592147, %104 ], [ %103, %92 ], [ %91, %82 ], [ 2008761100, %70 ], [ %69, %66 ], [ 862592147, %65 ], [ %64, %36 ], [ %35, %33 ]
  %.0198.be = phi i1 [ %.0198, %32 ], [ %.0198, %866 ], [ %.0198, %865 ], [ %.0198, %864 ], [ %.0198, %849 ], [ %.0198, %848 ], [ %.0198, %845 ], [ %.0198, %765 ], [ %.0198, %764 ], [ %.0198, %763 ], [ %.0198, %762 ], [ %.0198, %761 ], [ %.0198, %760 ], [ %.0198, %759 ], [ %.0198, %758 ], [ %.0198, %757 ], [ %.0198, %750 ], [ %.0198, %747 ], [ %.0198, %744 ], [ %.0198, %738 ], [ %.0198, %737 ], [ %.0198, %735 ], [ %.0198, %734 ], [ %.0198, %706 ], [ %.0198, %696 ], [ %.0198, %692 ], [ %.0198, %690 ], [ %.0198, %687 ], [ %.0198, %672 ], [ %.0198, %670 ], [ %.0198, %657 ], [ %.0198, %647 ], [ %.0198, %646 ], [ %.0198, %636 ], [ %.0198, %626 ], [ %.0198, %623 ], [ %.0198, %622 ], [ %.0198, %598 ], [ %.0198, %588 ], [ %.0198, %584 ], [ %.0198, %583 ], [ %.0198, %573 ], [ %.0198, %563 ], [ %.0198, %559 ], [ %.0198, %558 ], [ %.0198, %555 ], [ %.0198, %554 ], [ %.0198, %553 ], [ %.0198, %541 ], [ %.0198, %531 ], [ %.0198, %530 ], [ %.0198, %442 ], [ %.0198, %432 ], [ %.0198, %428 ], [ %.0198, %427 ], [ %.0198, %424 ], [ %.0198, %413 ], [ %.0198, %411 ], [ %.0198, %405 ], [ %.0198, %403 ], [ %.0198, %391 ], [ %.0198, %381 ], [ %.0198, %378 ], [ %.0198, %376 ], [ %.0198, %375 ], [ %.0198, %349 ], [ %.0198, %339 ], [ %.0198, %336 ], [ %.0198, %335 ], [ %.0198, %333 ], [ %.0198, %321 ], [ %.0198, %311 ], [ %.0198, %309 ], [ %.0198, %306 ], [ %.0198, %295 ], [ %.0198, %294 ], [ %.0198, %284 ], [ %.0198, %274 ], [ %.0198, %273 ], [ %.0198, %258 ], [ %.0198, %248 ], [ %.0198, %245 ], [ %.0198, %242 ], [ %.0198, %240 ], [ %239, %223 ], [ false, %220 ], [ %.0198, %219 ], [ %.0198, %215 ], [ %.0198, %214 ], [ %.0198, %204 ], [ %.0198, %194 ], [ %.0198, %190 ], [ %.0198, %189 ], [ %.0198, %179 ], [ %.0198, %169 ], [ %.0198, %166 ], [ %.0198, %165 ], [ %.0198, %155 ], [ %.0198, %145 ], [ %.0198, %142 ], [ %.0198, %141 ], [ %.0198, %125 ], [ %.0198, %115 ], [ %.0198, %111 ], [ %.0198, %110 ], [ %.0198, %106 ], [ %.0198, %105 ], [ %.0198, %104 ], [ %.0198, %92 ], [ %.0198, %82 ], [ %.0198, %70 ], [ %.0198, %66 ], [ %.0198, %65 ], [ %.0198, %36 ], [ %.0198, %33 ]
  %.0196.be = phi i32 [ %.0196, %32 ], [ %.0196, %866 ], [ %.0196, %865 ], [ %.0196, %864 ], [ %.0196, %849 ], [ %.0196, %848 ], [ %.0196, %845 ], [ %.0196, %765 ], [ %.0196, %764 ], [ %.0196, %763 ], [ %.0196, %762 ], [ %.0196, %761 ], [ %.0196, %760 ], [ %.0196, %759 ], [ %.0196, %758 ], [ %.0196, %757 ], [ %.0196, %750 ], [ %.0196, %747 ], [ %.0196, %744 ], [ %.0196, %738 ], [ %.0196, %737 ], [ %.0196, %735 ], [ %.0196, %734 ], [ %.0196, %706 ], [ %.0196, %696 ], [ %.0196, %692 ], [ %.0196, %690 ], [ %.0196, %687 ], [ %.0196, %672 ], [ %.0196, %670 ], [ %.0196, %657 ], [ %.0196, %647 ], [ %.0196, %646 ], [ %.0196, %636 ], [ %.0196, %626 ], [ %.0196, %623 ], [ %.0196, %622 ], [ %.0196, %598 ], [ %.0196, %588 ], [ %.0196, %584 ], [ %.0196, %583 ], [ %.0196, %573 ], [ %.0196, %563 ], [ %.0196, %559 ], [ %.0196, %558 ], [ %.0196, %555 ], [ %.0196, %554 ], [ %.0196, %553 ], [ %.0196, %541 ], [ %.0196, %531 ], [ %.0196, %530 ], [ %.0196, %442 ], [ %.0196, %432 ], [ %.0196, %428 ], [ %.0196, %427 ], [ %.0196, %424 ], [ %.0196, %413 ], [ %.0196, %411 ], [ %.0196, %405 ], [ %.0196, %403 ], [ %.0196, %391 ], [ %.0196, %381 ], [ %.0196, %378 ], [ %.0196, %376 ], [ %.0196, %375 ], [ %.0196, %349 ], [ %.0196, %339 ], [ %.0196, %336 ], [ %.0196, %335 ], [ %.0196, %333 ], [ %.0196, %321 ], [ %.0196, %311 ], [ %.0196, %309 ], [ %.0196, %306 ], [ %.0196, %295 ], [ 1, %294 ], [ %.0196, %284 ], [ %.0196, %274 ], [ %.0..0..0.189, %273 ], [ %.0196, %258 ], [ %.0196, %248 ], [ %.0196, %245 ], [ %.0196, %242 ], [ %.0196, %240 ], [ %.0196, %223 ], [ %.0196, %220 ], [ %.0196, %219 ], [ %.0196, %215 ], [ %.0196, %214 ], [ %.0196, %204 ], [ %.0196, %194 ], [ %.0196, %190 ], [ %.0196, %189 ], [ %.0196, %179 ], [ %.0196, %169 ], [ %.0196, %166 ], [ %.0196, %165 ], [ %.0196, %155 ], [ %.0196, %145 ], [ %.0196, %142 ], [ %.0196, %141 ], [ %.0196, %125 ], [ %.0196, %115 ], [ %.0196, %111 ], [ %.0196, %110 ], [ %.0196, %106 ], [ %.0196, %105 ], [ %.0196, %104 ], [ %.0196, %92 ], [ %.0196, %82 ], [ %.0196, %70 ], [ %.0196, %66 ], [ %.0196, %65 ], [ %.0196, %36 ], [ %.0196, %33 ]
  %.0194.be = phi i1 [ %.0194, %32 ], [ %.0194, %866 ], [ %.0194, %865 ], [ %.0194, %864 ], [ %.0194, %849 ], [ %.0194, %848 ], [ %.0194, %845 ], [ %.0194, %765 ], [ %.0194, %764 ], [ %.0194, %763 ], [ %.0194, %762 ], [ %.0194, %761 ], [ %.0194, %760 ], [ %.0194, %759 ], [ %.0194, %758 ], [ %.0194, %757 ], [ %.0194, %750 ], [ %.0194, %747 ], [ %.0194, %744 ], [ %.0194, %738 ], [ %.0194, %737 ], [ %.0194, %735 ], [ %.0194, %734 ], [ %.0194, %706 ], [ %.0194, %696 ], [ %.0194, %692 ], [ %.0194, %690 ], [ %.0194, %687 ], [ %.0194, %672 ], [ %.0194, %670 ], [ %.0194, %657 ], [ %.0194, %647 ], [ %.0194, %646 ], [ %.0194, %636 ], [ %.0194, %626 ], [ %.0194, %623 ], [ %.0194, %622 ], [ %.0194, %598 ], [ %.0194, %588 ], [ %.0194, %584 ], [ %.0194, %583 ], [ %.0194, %573 ], [ %.0194, %563 ], [ %.0194, %559 ], [ %.0194, %558 ], [ %.0194, %555 ], [ %.0194, %554 ], [ %.0194, %553 ], [ %.0194, %541 ], [ %.0194, %531 ], [ %.0194, %530 ], [ %.0194, %442 ], [ %.0194, %432 ], [ %.0194, %428 ], [ %.0194, %427 ], [ %.0194, %424 ], [ %.0194, %413 ], [ %.0194, %411 ], [ %.0194, %405 ], [ %.0194, %403 ], [ %.0194, %391 ], [ %.0194, %381 ], [ %.0194, %378 ], [ %.0194, %376 ], [ %.0..0..0.191, %375 ], [ %.0194, %349 ], [ %.0194, %339 ], [ false, %336 ], [ %.0194, %335 ], [ %.0194, %333 ], [ %.0194, %321 ], [ %.0194, %311 ], [ %.0194, %309 ], [ %.0194, %306 ], [ %.0194, %295 ], [ %.0194, %294 ], [ %.0194, %284 ], [ %.0194, %274 ], [ %.0194, %273 ], [ %.0194, %258 ], [ %.0194, %248 ], [ %.0194, %245 ], [ %.0194, %242 ], [ %.0194, %240 ], [ %.0194, %223 ], [ %.0194, %220 ], [ %.0194, %219 ], [ %.0194, %215 ], [ %.0194, %214 ], [ %.0194, %204 ], [ %.0194, %194 ], [ %.0194, %190 ], [ %.0194, %189 ], [ %.0194, %179 ], [ %.0194, %169 ], [ %.0194, %166 ], [ %.0194, %165 ], [ %.0194, %155 ], [ %.0194, %145 ], [ %.0194, %142 ], [ %.0194, %141 ], [ %.0194, %125 ], [ %.0194, %115 ], [ %.0194, %111 ], [ %.0194, %110 ], [ %.0194, %106 ], [ %.0194, %105 ], [ %.0194, %104 ], [ %.0194, %92 ], [ %.0194, %82 ], [ %.0194, %70 ], [ %.0194, %66 ], [ %.0194, %65 ], [ %.0194, %36 ], [ %.0194, %33 ]
  %.0.be = phi i32 [ %.0, %32 ], [ %.0, %866 ], [ %.0, %865 ], [ %.0, %864 ], [ %.0, %849 ], [ %.0, %848 ], [ %.0, %845 ], [ %.0, %765 ], [ %.0, %764 ], [ %.0, %763 ], [ %.0, %762 ], [ %.0, %761 ], [ %.0, %760 ], [ %.0, %759 ], [ %.0, %758 ], [ %.0, %757 ], [ %.0, %750 ], [ %.0, %747 ], [ %.0, %744 ], [ %.0, %738 ], [ %.0, %737 ], [ %.0, %735 ], [ %.0, %734 ], [ %.0, %706 ], [ %.0, %696 ], [ %.0, %692 ], [ %.0, %690 ], [ %.0, %687 ], [ %.0, %672 ], [ %.0, %670 ], [ %.0, %657 ], [ %.0, %647 ], [ %.0, %646 ], [ %.0, %636 ], [ %.0, %626 ], [ %.0, %623 ], [ %.0, %622 ], [ %.0, %598 ], [ %.0, %588 ], [ %.0, %584 ], [ %.0, %583 ], [ %.0, %573 ], [ %.0, %563 ], [ %.0, %559 ], [ %.0, %558 ], [ %.0, %555 ], [ %.0, %554 ], [ %.0, %553 ], [ %.0, %541 ], [ %.0, %531 ], [ %.0, %530 ], [ %.0, %442 ], [ %.0, %432 ], [ %.0, %428 ], [ %.0, %427 ], [ %.0, %424 ], [ %.0, %413 ], [ %412, %411 ], [ %410, %405 ], [ %.0, %403 ], [ %.0, %391 ], [ %.0, %381 ], [ %.0, %378 ], [ %.0, %376 ], [ %.0, %375 ], [ %.0, %349 ], [ %.0, %339 ], [ %.0, %336 ], [ %.0, %335 ], [ %.0, %333 ], [ %.0, %321 ], [ %.0, %311 ], [ %.0, %309 ], [ %.0, %306 ], [ %.0, %295 ], [ %.0, %294 ], [ %.0, %284 ], [ %.0, %274 ], [ %.0, %273 ], [ %.0, %258 ], [ %.0, %248 ], [ %.0, %245 ], [ %.0, %242 ], [ %.0, %240 ], [ %.0, %223 ], [ %.0, %220 ], [ %.0, %219 ], [ %.0, %215 ], [ %.0, %214 ], [ %.0, %204 ], [ %.0, %194 ], [ %.0, %190 ], [ %.0, %189 ], [ %.0, %179 ], [ %.0, %169 ], [ %.0, %166 ], [ %.0, %165 ], [ %.0, %155 ], [ %.0, %145 ], [ %.0, %142 ], [ %.0, %141 ], [ %.0, %125 ], [ %.0, %115 ], [ %.0, %111 ], [ %.0, %110 ], [ %.0, %106 ], [ %.0, %105 ], [ %.0, %104 ], [ %.0, %92 ], [ %.0, %82 ], [ %.0, %70 ], [ %.0, %66 ], [ %.0, %65 ], [ %.0, %36 ], [ %.0, %33 ]
  br label %32

33:                                               ; preds = %32
  %.0..0..0.4 = load volatile i1, i1* %24, align 1
  %.0..0..0.5 = load volatile i1, i1* %23, align 1
  %34 = or i1 %.0..0..0.4, %.0..0..0.5
  %35 = select i1 %34, i32 -1320586880, i32 -1424083801
  br label %.backedge

36:                                               ; preds = %32
  %37 = alloca i32, align 4
  store i32* %37, i32** %22, align 8
  %38 = alloca i32, align 4
  store i32* %38, i32** %21, align 8
  %39 = alloca i64, align 8
  store i64* %39, i64** %20, align 8
  %40 = alloca i32, align 4
  store i32* %40, i32** %19, align 8
  %41 = alloca i32, align 4
  store i32* %41, i32** %18, align 8
  %42 = alloca i32, align 4
  store i32* %42, i32** %17, align 8
  %43 = alloca i32, align 4
  store i32* %43, i32** %16, align 8
  %44 = alloca i32, align 4
  store i32* %44, i32** %15, align 8
  %45 = alloca i32, align 4
  store i32* %45, i32** %14, align 8
  %46 = alloca i32, align 4
  store i32* %46, i32** %13, align 8
  %47 = alloca i32, align 4
  store i32* %47, i32** %12, align 8
  %48 = alloca i32, align 4
  store i32* %48, i32** %11, align 8
  %49 = alloca i32, align 4
  store i32* %49, i32** %10, align 8
  %50 = alloca i32, align 4
  store i32* %50, i32** %9, align 8
  %51 = alloca i32, align 4
  store i32* %51, i32** %8, align 8
  %52 = alloca i32, align 4
  store i32* %52, i32** %7, align 8
  %53 = alloca i64, align 8
  store i64* %53, i64** %6, align 8
  %54 = call i32 @_Z4readv()
  %.0..0..0.6 = load volatile i32*, i32** %22, align 8
  store i32 %54, i32* %.0..0..0.6, align 4
  %55 = call i32 @_Z4readv()
  %.0..0..0.18 = load volatile i32*, i32** %21, align 8
  store i32 %55, i32* %.0..0..0.18, align 4
  %.0..0..0.21 = load volatile i64*, i64** %20, align 8
  store i64 0, i64* %.0..0..0.21, align 8
  %.0..0..0.27 = load volatile i32*, i32** %19, align 8
  store i32 2, i32* %.0..0..0.27, align 4
  %56 = load i32, i32* @x.1, align 4
  %57 = load i32, i32* @y.2, align 4
  %58 = add i32 %56, -1
  %59 = mul i32 %58, %56
  %60 = and i32 %59, 1
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %57, 10
  %63 = or i1 %62, %61
  %64 = select i1 %63, i32 340093395, i32 -1424083801
  br label %.backedge

65:                                               ; preds = %32
  br label %.backedge

66:                                               ; preds = %32
  %.0..0..0.28 = load volatile i32*, i32** %19, align 8
  %67 = load i32, i32* %.0..0..0.28, align 4
  %.0..0..0.7 = load volatile i32*, i32** %22, align 8
  %68 = load i32, i32* %.0..0..0.7, align 4
  %.not215 = icmp sgt i32 %67, %68
  %69 = select i1 %.not215, i32 -45225365, i32 1501269202
  br label %.backedge

70:                                               ; preds = %32
  %71 = call i32 @_Z4readv()
  %72 = sext i32 %71 to i64
  %.0..0..0.29 = load volatile i32*, i32** %19, align 8
  %73 = load i32, i32* %.0..0..0.29, align 4
  %74 = add i32 %73, -1
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [5010 x i64], [5010 x i64]* @A, i64 0, i64 %75
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, %72
  %.0..0..0.30 = load volatile i32*, i32** %19, align 8
  %79 = load i32, i32* %.0..0..0.30, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds [5010 x i64], [5010 x i64]* @A, i64 0, i64 %80
  store i64 %78, i64* %81, align 8
  br label %.backedge

82:                                               ; preds = %32
  %83 = load i32, i32* @x.1, align 4
  %84 = load i32, i32* @y.2, align 4
  %85 = add i32 %83, -1
  %86 = mul i32 %85, %83
  %87 = and i32 %86, 1
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %89, %88
  %91 = select i1 %90, i32 910505682, i32 804371341
  br label %.backedge

92:                                               ; preds = %32
  %.0..0..0.31 = load volatile i32*, i32** %19, align 8
  %93 = load i32, i32* %.0..0..0.31, align 4
  %94 = add i32 %93, 1
  %.0..0..0.32 = load volatile i32*, i32** %19, align 8
  store i32 %94, i32* %.0..0..0.32, align 4
  %95 = load i32, i32* @x.1, align 4
  %96 = load i32, i32* @y.2, align 4
  %97 = add i32 %95, -1
  %98 = mul i32 %97, %95
  %99 = and i32 %98, 1
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %101, %100
  %103 = select i1 %102, i32 -1830035371, i32 804371341
  br label %.backedge

104:                                              ; preds = %32
  br label %.backedge

105:                                              ; preds = %32
  %.0..0..0.35 = load volatile i32*, i32** %18, align 8
  store i32 1, i32* %.0..0..0.35, align 4
  br label %.backedge

106:                                              ; preds = %32
  %.0..0..0.36 = load volatile i32*, i32** %18, align 8
  %107 = load i32, i32* %.0..0..0.36, align 4
  %.0..0..0.8 = load volatile i32*, i32** %22, align 8
  %108 = load i32, i32* %.0..0..0.8, align 4
  %.not214 = icmp sgt i32 %107, %108
  %109 = select i1 %.not214, i32 -256503918, i32 516560429
  br label %.backedge

110:                                              ; preds = %32
  %.0..0..0.41 = load volatile i32*, i32** %17, align 8
  store i32 1, i32* %.0..0..0.41, align 4
  br label %.backedge

111:                                              ; preds = %32
  %.0..0..0.42 = load volatile i32*, i32** %17, align 8
  %112 = load i32, i32* %.0..0..0.42, align 4
  %.0..0..0.19 = load volatile i32*, i32** %21, align 8
  %113 = load i32, i32* %.0..0..0.19, align 4
  %.not213 = icmp sgt i32 %112, %113
  %114 = select i1 %.not213, i32 -832102345, i32 599712951
  br label %.backedge

115:                                              ; preds = %32
  %116 = load i32, i32* @x.1, align 4
  %117 = load i32, i32* @y.2, align 4
  %118 = add i32 %116, -1
  %119 = mul i32 %118, %116
  %120 = and i32 %119, 1
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %122, %121
  %124 = select i1 %123, i32 -1906096059, i32 -79285381
  br label %.backedge

125:                                              ; preds = %32
  %126 = call i32 @_Z4readv()
  %.0..0..0.43 = load volatile i32*, i32** %17, align 8
  %127 = load i32, i32* %.0..0..0.43, align 4
  %128 = sext i32 %127 to i64
  %.0..0..0.37 = load volatile i32*, i32** %18, align 8
  %129 = load i32, i32* %.0..0..0.37, align 4
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds [210 x [5010 x i32]], [210 x [5010 x i32]]* @B, i64 0, i64 %128, i64 %130
  store i32 %126, i32* %131, align 4
  %132 = load i32, i32* @x.1, align 4
  %133 = load i32, i32* @y.2, align 4
  %134 = add i32 %132, -1
  %135 = mul i32 %134, %132
  %136 = and i32 %135, 1
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %133, 10
  %139 = or i1 %138, %137
  %140 = select i1 %139, i32 -191568426, i32 -79285381
  br label %.backedge

141:                                              ; preds = %32
  br label %.backedge

142:                                              ; preds = %32
  %.0..0..0.44 = load volatile i32*, i32** %17, align 8
  %143 = load i32, i32* %.0..0..0.44, align 4
  %144 = add i32 %143, 1
  %.0..0..0.45 = load volatile i32*, i32** %17, align 8
  store i32 %144, i32* %.0..0..0.45, align 4
  br label %.backedge

145:                                              ; preds = %32
  %146 = load i32, i32* @x.1, align 4
  %147 = load i32, i32* @y.2, align 4
  %148 = add i32 %146, -1
  %149 = mul i32 %148, %146
  %150 = and i32 %149, 1
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %152, %151
  %154 = select i1 %153, i32 -43704356, i32 1149932308
  br label %.backedge

155:                                              ; preds = %32
  %156 = load i32, i32* @x.1, align 4
  %157 = load i32, i32* @y.2, align 4
  %158 = add i32 %156, -1
  %159 = mul i32 %158, %156
  %160 = and i32 %159, 1
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %157, 10
  %163 = or i1 %162, %161
  %164 = select i1 %163, i32 440728982, i32 1149932308
  br label %.backedge

165:                                              ; preds = %32
  br label %.backedge

166:                                              ; preds = %32
  %.0..0..0.38 = load volatile i32*, i32** %18, align 8
  %167 = load i32, i32* %.0..0..0.38, align 4
  %168 = add i32 %167, 1
  %.0..0..0.39 = load volatile i32*, i32** %18, align 8
  store i32 %168, i32* %.0..0..0.39, align 4
  br label %.backedge

169:                                              ; preds = %32
  %170 = load i32, i32* @x.1, align 4
  %171 = load i32, i32* @y.2, align 4
  %172 = add i32 %170, -1
  %173 = mul i32 %172, %170
  %174 = and i32 %173, 1
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %176, %175
  %178 = select i1 %177, i32 1367570556, i32 -1473230409
  br label %.backedge

179:                                              ; preds = %32
  %.0..0..0.47 = load volatile i32*, i32** %16, align 8
  store i32 1, i32* %.0..0..0.47, align 4
  %180 = load i32, i32* @x.1, align 4
  %181 = load i32, i32* @y.2, align 4
  %182 = add i32 %180, -1
  %183 = mul i32 %182, %180
  %184 = and i32 %183, 1
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %186, %185
  %188 = select i1 %187, i32 -618904180, i32 -1473230409
  br label %.backedge

189:                                              ; preds = %32
  br label %.backedge

190:                                              ; preds = %32
  %.0..0..0.48 = load volatile i32*, i32** %16, align 8
  %191 = load i32, i32* %.0..0..0.48, align 4
  %.0..0..0.20 = load volatile i32*, i32** %21, align 8
  %192 = load i32, i32* %.0..0..0.20, align 4
  %.not212 = icmp sgt i32 %191, %192
  %193 = select i1 %.not212, i32 395053978, i32 -63842812
  br label %.backedge

194:                                              ; preds = %32
  %195 = load i32, i32* @x.1, align 4
  %196 = load i32, i32* @y.2, align 4
  %197 = add i32 %195, -1
  %198 = mul i32 %197, %195
  %199 = and i32 %198, 1
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %201, %200
  %203 = select i1 %202, i32 -1184155390, i32 1506301273
  br label %.backedge

204:                                              ; preds = %32
  %.0..0..0.76 = load volatile i32*, i32** %15, align 8
  store i32 1, i32* %.0..0..0.76, align 4
  %.0..0..0.84 = load volatile i32*, i32** %14, align 8
  store i32 0, i32* %.0..0..0.84, align 4
  %205 = load i32, i32* @x.1, align 4
  %206 = load i32, i32* @y.2, align 4
  %207 = add i32 %205, -1
  %208 = mul i32 %207, %205
  %209 = and i32 %208, 1
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %211, %210
  %213 = select i1 %212, i32 -1360777502, i32 1506301273
  br label %.backedge

214:                                              ; preds = %32
  br label %.backedge

215:                                              ; preds = %32
  %.0..0..0.77 = load volatile i32*, i32** %15, align 8
  %216 = load i32, i32* %.0..0..0.77, align 4
  %.0..0..0.9 = load volatile i32*, i32** %22, align 8
  %217 = load i32, i32* %.0..0..0.9, align 4
  %.not211 = icmp sgt i32 %216, %217
  %218 = select i1 %.not211, i32 979317364, i32 -758630649
  br label %.backedge

219:                                              ; preds = %32
  br label %.backedge

220:                                              ; preds = %32
  %.0..0..0.85 = load volatile i32*, i32** %14, align 8
  %221 = load i32, i32* %.0..0..0.85, align 4
  %.not210 = icmp eq i32 %221, 0
  %222 = select i1 %.not210, i32 -722885556, i32 1705836288
  br label %.backedge

223:                                              ; preds = %32
  %.0..0..0.49 = load volatile i32*, i32** %16, align 8
  %224 = load i32, i32* %.0..0..0.49, align 4
  %225 = sext i32 %224 to i64
  %.0..0..0.86 = load volatile i32*, i32** %14, align 8
  %226 = load i32, i32* %.0..0..0.86, align 4
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds [5010 x i32], [5010 x i32]* @stack, i64 0, i64 %227
  %229 = load i32, i32* %228, align 4
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds [210 x [5010 x i32]], [210 x [5010 x i32]]* @B, i64 0, i64 %225, i64 %230
  %232 = load i32, i32* %231, align 4
  %.0..0..0.50 = load volatile i32*, i32** %16, align 8
  %233 = load i32, i32* %.0..0..0.50, align 4
  %234 = sext i32 %233 to i64
  %.0..0..0.78 = load volatile i32*, i32** %15, align 8
  %235 = load i32, i32* %.0..0..0.78, align 4
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds [210 x [5010 x i32]], [210 x [5010 x i32]]* @B, i64 0, i64 %234, i64 %236
  %238 = load i32, i32* %237, align 4
  %239 = icmp slt i32 %232, %238
  br label %.backedge

240:                                              ; preds = %32
  %241 = select i1 %.0198, i32 890014132, i32 507625222
  br label %.backedge

242:                                              ; preds = %32
  %.0..0..0.87 = load volatile i32*, i32** %14, align 8
  %243 = load i32, i32* %.0..0..0.87, align 4
  %244 = add i32 %243, -1
  %.0..0..0.88 = load volatile i32*, i32** %14, align 8
  store i32 %244, i32* %.0..0..0.88, align 4
  br label %.backedge

245:                                              ; preds = %32
  %.0..0..0.89 = load volatile i32*, i32** %14, align 8
  %246 = load i32, i32* %.0..0..0.89, align 4
  %.not209 = icmp eq i32 %246, 0
  %247 = select i1 %.not209, i32 1076808610, i32 442382028
  br label %.backedge

248:                                              ; preds = %32
  %249 = load i32, i32* @x.1, align 4
  %250 = load i32, i32* @y.2, align 4
  %251 = add i32 %249, -1
  %252 = mul i32 %251, %249
  %253 = and i32 %252, 1
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %255, %254
  %257 = select i1 %256, i32 212890599, i32 -1614259072
  br label %.backedge

258:                                              ; preds = %32
  %.0..0..0.90 = load volatile i32*, i32** %14, align 8
  %259 = load i32, i32* %.0..0..0.90, align 4
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds [5010 x i32], [5010 x i32]* @stack, i64 0, i64 %260
  %262 = load i32, i32* %261, align 4
  %263 = add i32 %262, 1
  store i32 %263, i32* %5, align 4
  %264 = load i32, i32* @x.1, align 4
  %265 = load i32, i32* @y.2, align 4
  %266 = add i32 %264, -1
  %267 = mul i32 %266, %264
  %268 = and i32 %267, 1
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %265, 10
  %271 = or i1 %270, %269
  %272 = select i1 %271, i32 1120657763, i32 -1614259072
  br label %.backedge

273:                                              ; preds = %32
  %.0..0..0.189 = load volatile i32, i32* %5, align 4
  br label %.backedge

274:                                              ; preds = %32
  %275 = load i32, i32* @x.1, align 4
  %276 = load i32, i32* @y.2, align 4
  %277 = add i32 %275, -1
  %278 = mul i32 %277, %275
  %279 = and i32 %278, 1
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %276, 10
  %282 = or i1 %281, %280
  %283 = select i1 %282, i32 1619590315, i32 1607712653
  br label %.backedge

284:                                              ; preds = %32
  %285 = load i32, i32* @x.1, align 4
  %286 = load i32, i32* @y.2, align 4
  %287 = add i32 %285, -1
  %288 = mul i32 %287, %285
  %289 = and i32 %288, 1
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %286, 10
  %292 = or i1 %291, %290
  %293 = select i1 %292, i32 1046601465, i32 1607712653
  br label %.backedge

294:                                              ; preds = %32
  br label %.backedge

295:                                              ; preds = %32
  %.0..0..0.51 = load volatile i32*, i32** %16, align 8
  %296 = load i32, i32* %.0..0..0.51, align 4
  %297 = sext i32 %296 to i64
  %.0..0..0.79 = load volatile i32*, i32** %15, align 8
  %298 = load i32, i32* %.0..0..0.79, align 4
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds [210 x [5010 x i32]], [210 x [5010 x i32]]* @L, i64 0, i64 %297, i64 %299
  store i32 %.0196, i32* %300, align 4
  %.0..0..0.80 = load volatile i32*, i32** %15, align 8
  %301 = load i32, i32* %.0..0..0.80, align 4
  %.0..0..0.91 = load volatile i32*, i32** %14, align 8
  %302 = load i32, i32* %.0..0..0.91, align 4
  %303 = add i32 %302, 1
  %.0..0..0.92 = load volatile i32*, i32** %14, align 8
  store i32 %303, i32* %.0..0..0.92, align 4
  %304 = sext i32 %303 to i64
  %305 = getelementptr inbounds [5010 x i32], [5010 x i32]* @stack, i64 0, i64 %304
  store i32 %301, i32* %305, align 4
  br label %.backedge

306:                                              ; preds = %32
  %.0..0..0.81 = load volatile i32*, i32** %15, align 8
  %307 = load i32, i32* %.0..0..0.81, align 4
  %308 = add i32 %307, 1
  %.0..0..0.82 = load volatile i32*, i32** %15, align 8
  store i32 %308, i32* %.0..0..0.82, align 4
  br label %.backedge

309:                                              ; preds = %32
  %.0..0..0.10 = load volatile i32*, i32** %22, align 8
  %310 = load i32, i32* %.0..0..0.10, align 4
  %.0..0..0.95 = load volatile i32*, i32** %13, align 8
  store i32 %310, i32* %.0..0..0.95, align 4
  %.0..0..0.104 = load volatile i32*, i32** %12, align 8
  store i32 0, i32* %.0..0..0.104, align 4
  br label %.backedge

311:                                              ; preds = %32
  %312 = load i32, i32* @x.1, align 4
  %313 = load i32, i32* @y.2, align 4
  %314 = add i32 %312, -1
  %315 = mul i32 %314, %312
  %316 = and i32 %315, 1
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %313, 10
  %319 = or i1 %318, %317
  %320 = select i1 %319, i32 1243911460, i32 -735092189
  br label %.backedge

321:                                              ; preds = %32
  %.0..0..0.96 = load volatile i32*, i32** %13, align 8
  %322 = load i32, i32* %.0..0..0.96, align 4
  %323 = icmp sgt i32 %322, 0
  store i1 %323, i1* %4, align 1
  %324 = load i32, i32* @x.1, align 4
  %325 = load i32, i32* @y.2, align 4
  %326 = add i32 %324, -1
  %327 = mul i32 %326, %324
  %328 = and i32 %327, 1
  %329 = icmp eq i32 %328, 0
  %330 = icmp slt i32 %325, 10
  %331 = or i1 %330, %329
  %332 = select i1 %331, i32 225971120, i32 -735092189
  br label %.backedge

333:                                              ; preds = %32
  %.0..0..0.190 = load volatile i1, i1* %4, align 1
  %334 = select i1 %.0..0..0.190, i32 -1455132807, i32 1150351143
  br label %.backedge

335:                                              ; preds = %32
  br label %.backedge

336:                                              ; preds = %32
  %.0..0..0.105 = load volatile i32*, i32** %12, align 8
  %337 = load i32, i32* %.0..0..0.105, align 4
  %.not208 = icmp eq i32 %337, 0
  %338 = select i1 %.not208, i32 -1422206743, i32 1490915737
  br label %.backedge

339:                                              ; preds = %32
  %340 = load i32, i32* @x.1, align 4
  %341 = load i32, i32* @y.2, align 4
  %342 = add i32 %340, -1
  %343 = mul i32 %342, %340
  %344 = and i32 %343, 1
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %341, 10
  %347 = or i1 %346, %345
  %348 = select i1 %347, i32 2095182591, i32 -1211187634
  br label %.backedge

349:                                              ; preds = %32
  %.0..0..0.52 = load volatile i32*, i32** %16, align 8
  %350 = load i32, i32* %.0..0..0.52, align 4
  %351 = sext i32 %350 to i64
  %.0..0..0.106 = load volatile i32*, i32** %12, align 8
  %352 = load i32, i32* %.0..0..0.106, align 4
  %353 = sext i32 %352 to i64
  %354 = getelementptr inbounds [5010 x i32], [5010 x i32]* @stack, i64 0, i64 %353
  %355 = load i32, i32* %354, align 4
  %356 = sext i32 %355 to i64
  %357 = getelementptr inbounds [210 x [5010 x i32]], [210 x [5010 x i32]]* @B, i64 0, i64 %351, i64 %356
  %358 = load i32, i32* %357, align 4
  %.0..0..0.53 = load volatile i32*, i32** %16, align 8
  %359 = load i32, i32* %.0..0..0.53, align 4
  %360 = sext i32 %359 to i64
  %.0..0..0.97 = load volatile i32*, i32** %13, align 8
  %361 = load i32, i32* %.0..0..0.97, align 4
  %362 = sext i32 %361 to i64
  %363 = getelementptr inbounds [210 x [5010 x i32]], [210 x [5010 x i32]]* @B, i64 0, i64 %360, i64 %362
  %364 = load i32, i32* %363, align 4
  %365 = icmp slt i32 %358, %364
  store i1 %365, i1* %3, align 1
  %366 = load i32, i32* @x.1, align 4
  %367 = load i32, i32* @y.2, align 4
  %368 = add i32 %366, -1
  %369 = mul i32 %368, %366
  %370 = and i32 %369, 1
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %367, 10
  %373 = or i1 %372, %371
  %374 = select i1 %373, i32 874708820, i32 -1211187634
  br label %.backedge

375:                                              ; preds = %32
  %.0..0..0.191 = load volatile i1, i1* %3, align 1
  br label %.backedge

376:                                              ; preds = %32
  %377 = select i1 %.0194, i32 1652898100, i32 221465153
  br label %.backedge

378:                                              ; preds = %32
  %.0..0..0.107 = load volatile i32*, i32** %12, align 8
  %379 = load i32, i32* %.0..0..0.107, align 4
  %380 = add i32 %379, -1
  %.0..0..0.108 = load volatile i32*, i32** %12, align 8
  store i32 %380, i32* %.0..0..0.108, align 4
  br label %.backedge

381:                                              ; preds = %32
  %382 = load i32, i32* @x.1, align 4
  %383 = load i32, i32* @y.2, align 4
  %384 = add i32 %382, -1
  %385 = mul i32 %384, %382
  %386 = and i32 %385, 1
  %387 = icmp eq i32 %386, 0
  %388 = icmp slt i32 %383, 10
  %389 = or i1 %388, %387
  %390 = select i1 %389, i32 -1462805524, i32 -1592379607
  br label %.backedge

391:                                              ; preds = %32
  %.0..0..0.109 = load volatile i32*, i32** %12, align 8
  %392 = load i32, i32* %.0..0..0.109, align 4
  %393 = icmp ne i32 %392, 0
  store i1 %393, i1* %2, align 1
  %394 = load i32, i32* @x.1, align 4
  %395 = load i32, i32* @y.2, align 4
  %396 = add i32 %394, -1
  %397 = mul i32 %396, %394
  %398 = and i32 %397, 1
  %399 = icmp eq i32 %398, 0
  %400 = icmp slt i32 %395, 10
  %401 = or i1 %400, %399
  %402 = select i1 %401, i32 -509076151, i32 -1592379607
  br label %.backedge

403:                                              ; preds = %32
  %.0..0..0.192 = load volatile i1, i1* %2, align 1
  %404 = select i1 %.0..0..0.192, i32 324963608, i32 -23591708
  br label %.backedge

405:                                              ; preds = %32
  %.0..0..0.110 = load volatile i32*, i32** %12, align 8
  %406 = load i32, i32* %.0..0..0.110, align 4
  %407 = sext i32 %406 to i64
  %408 = getelementptr inbounds [5010 x i32], [5010 x i32]* @stack, i64 0, i64 %407
  %409 = load i32, i32* %408, align 4
  %410 = add i32 %409, -1
  br label %.backedge

411:                                              ; preds = %32
  %.0..0..0.11 = load volatile i32*, i32** %22, align 8
  %412 = load i32, i32* %.0..0..0.11, align 4
  br label %.backedge

413:                                              ; preds = %32
  %.0..0..0.54 = load volatile i32*, i32** %16, align 8
  %414 = load i32, i32* %.0..0..0.54, align 4
  %415 = sext i32 %414 to i64
  %.0..0..0.98 = load volatile i32*, i32** %13, align 8
  %416 = load i32, i32* %.0..0..0.98, align 4
  %417 = sext i32 %416 to i64
  %418 = getelementptr inbounds [210 x [5010 x i32]], [210 x [5010 x i32]]* @R, i64 0, i64 %415, i64 %417
  store i32 %.0, i32* %418, align 4
  %.0..0..0.99 = load volatile i32*, i32** %13, align 8
  %419 = load i32, i32* %.0..0..0.99, align 4
  %.0..0..0.111 = load volatile i32*, i32** %12, align 8
  %420 = load i32, i32* %.0..0..0.111, align 4
  %421 = add i32 %420, 1
  %.0..0..0.112 = load volatile i32*, i32** %12, align 8
  store i32 %421, i32* %.0..0..0.112, align 4
  %422 = sext i32 %421 to i64
  %423 = getelementptr inbounds [5010 x i32], [5010 x i32]* @stack, i64 0, i64 %422
  store i32 %419, i32* %423, align 4
  br label %.backedge

424:                                              ; preds = %32
  %.0..0..0.100 = load volatile i32*, i32** %13, align 8
  %425 = load i32, i32* %.0..0..0.100, align 4
  %426 = add i32 %425, -1
  %.0..0..0.101 = load volatile i32*, i32** %13, align 8
  store i32 %426, i32* %.0..0..0.101, align 4
  br label %.backedge

427:                                              ; preds = %32
  %.0..0..0.115 = load volatile i32*, i32** %11, align 8
  store i32 1, i32* %.0..0..0.115, align 4
  br label %.backedge

428:                                              ; preds = %32
  %.0..0..0.116 = load volatile i32*, i32** %11, align 8
  %429 = load i32, i32* %.0..0..0.116, align 4
  %.0..0..0.12 = load volatile i32*, i32** %22, align 8
  %430 = load i32, i32* %.0..0..0.12, align 4
  %.not207 = icmp sgt i32 %429, %430
  %431 = select i1 %.not207, i32 -407825405, i32 2121166424
  br label %.backedge

432:                                              ; preds = %32
  %433 = load i32, i32* @x.1, align 4
  %434 = load i32, i32* @y.2, align 4
  %435 = add i32 %433, -1
  %436 = mul i32 %435, %433
  %437 = and i32 %436, 1
  %438 = icmp eq i32 %437, 0
  %439 = icmp slt i32 %434, 10
  %440 = or i1 %439, %438
  %441 = select i1 %440, i32 124636914, i32 -813733519
  br label %.backedge

442:                                              ; preds = %32
  %.0..0..0.55 = load volatile i32*, i32** %16, align 8
  %443 = load i32, i32* %.0..0..0.55, align 4
  %444 = sext i32 %443 to i64
  %.0..0..0.117 = load volatile i32*, i32** %11, align 8
  %445 = load i32, i32* %.0..0..0.117, align 4
  %446 = sext i32 %445 to i64
  %447 = getelementptr inbounds [210 x [5010 x i32]], [210 x [5010 x i32]]* @B, i64 0, i64 %444, i64 %446
  %448 = load i32, i32* %447, align 4
  %449 = sext i32 %448 to i64
  %.0..0..0.56 = load volatile i32*, i32** %16, align 8
  %450 = load i32, i32* %.0..0..0.56, align 4
  %451 = sext i32 %450 to i64
  %.0..0..0.118 = load volatile i32*, i32** %11, align 8
  %452 = load i32, i32* %.0..0..0.118, align 4
  %453 = sext i32 %452 to i64
  %454 = getelementptr inbounds [210 x [5010 x i32]], [210 x [5010 x i32]]* @L, i64 0, i64 %451, i64 %453
  %455 = load i32, i32* %454, align 4
  %456 = sext i32 %455 to i64
  %.0..0..0.119 = load volatile i32*, i32** %11, align 8
  %457 = load i32, i32* %.0..0..0.119, align 4
  %458 = sext i32 %457 to i64
  %459 = getelementptr inbounds [5010 x [5010 x i64]], [5010 x [5010 x i64]]* @sum, i64 0, i64 %456, i64 %458
  %460 = load i64, i64* %459, align 8
  %461 = add i64 %460, %449
  store i64 %461, i64* %459, align 8
  %.0..0..0.57 = load volatile i32*, i32** %16, align 8
  %462 = load i32, i32* %.0..0..0.57, align 4
  %463 = sext i32 %462 to i64
  %.0..0..0.120 = load volatile i32*, i32** %11, align 8
  %464 = load i32, i32* %.0..0..0.120, align 4
  %465 = sext i32 %464 to i64
  %466 = getelementptr inbounds [210 x [5010 x i32]], [210 x [5010 x i32]]* @B, i64 0, i64 %463, i64 %465
  %467 = load i32, i32* %466, align 4
  %468 = sext i32 %467 to i64
  %.0..0..0.58 = load volatile i32*, i32** %16, align 8
  %469 = load i32, i32* %.0..0..0.58, align 4
  %470 = sext i32 %469 to i64
  %.0..0..0.121 = load volatile i32*, i32** %11, align 8
  %471 = load i32, i32* %.0..0..0.121, align 4
  %472 = sext i32 %471 to i64
  %473 = getelementptr inbounds [210 x [5010 x i32]], [210 x [5010 x i32]]* @L, i64 0, i64 %470, i64 %472
  %474 = load i32, i32* %473, align 4
  %475 = sext i32 %474 to i64
  %.0..0..0.59 = load volatile i32*, i32** %16, align 8
  %476 = load i32, i32* %.0..0..0.59, align 4
  %477 = sext i32 %476 to i64
  %.0..0..0.122 = load volatile i32*, i32** %11, align 8
  %478 = load i32, i32* %.0..0..0.122, align 4
  %479 = sext i32 %478 to i64
  %480 = getelementptr inbounds [210 x [5010 x i32]], [210 x [5010 x i32]]* @R, i64 0, i64 %477, i64 %479
  %481 = load i32, i32* %480, align 4
  %.neg205 = add i32 %481, 1
  %482 = sext i32 %.neg205 to i64
  %483 = getelementptr inbounds [5010 x [5010 x i64]], [5010 x [5010 x i64]]* @sum, i64 0, i64 %475, i64 %482
  %484 = load i64, i64* %483, align 8
  %485 = sub i64 %484, %468
  store i64 %485, i64* %483, align 8
  %.0..0..0.60 = load volatile i32*, i32** %16, align 8
  %486 = load i32, i32* %.0..0..0.60, align 4
  %487 = sext i32 %486 to i64
  %.0..0..0.123 = load volatile i32*, i32** %11, align 8
  %488 = load i32, i32* %.0..0..0.123, align 4
  %489 = sext i32 %488 to i64
  %490 = getelementptr inbounds [210 x [5010 x i32]], [210 x [5010 x i32]]* @B, i64 0, i64 %487, i64 %489
  %491 = load i32, i32* %490, align 4
  %492 = sext i32 %491 to i64
  %.0..0..0.124 = load volatile i32*, i32** %11, align 8
  %493 = load i32, i32* %.0..0..0.124, align 4
  %494 = add i32 %493, 1
  %495 = sext i32 %494 to i64
  %.0..0..0.125 = load volatile i32*, i32** %11, align 8
  %496 = load i32, i32* %.0..0..0.125, align 4
  %497 = sext i32 %496 to i64
  %498 = getelementptr inbounds [5010 x [5010 x i64]], [5010 x [5010 x i64]]* @sum, i64 0, i64 %495, i64 %497
  %499 = load i64, i64* %498, align 8
  %500 = sub i64 %499, %492
  store i64 %500, i64* %498, align 8
  %.0..0..0.61 = load volatile i32*, i32** %16, align 8
  %501 = load i32, i32* %.0..0..0.61, align 4
  %502 = sext i32 %501 to i64
  %.0..0..0.126 = load volatile i32*, i32** %11, align 8
  %503 = load i32, i32* %.0..0..0.126, align 4
  %504 = sext i32 %503 to i64
  %505 = getelementptr inbounds [210 x [5010 x i32]], [210 x [5010 x i32]]* @B, i64 0, i64 %502, i64 %504
  %506 = load i32, i32* %505, align 4
  %507 = sext i32 %506 to i64
  %.0..0..0.127 = load volatile i32*, i32** %11, align 8
  %508 = load i32, i32* %.0..0..0.127, align 4
  %509 = add i32 %508, 1
  %510 = sext i32 %509 to i64
  %.0..0..0.62 = load volatile i32*, i32** %16, align 8
  %511 = load i32, i32* %.0..0..0.62, align 4
  %512 = sext i32 %511 to i64
  %.0..0..0.128 = load volatile i32*, i32** %11, align 8
  %513 = load i32, i32* %.0..0..0.128, align 4
  %514 = sext i32 %513 to i64
  %515 = getelementptr inbounds [210 x [5010 x i32]], [210 x [5010 x i32]]* @R, i64 0, i64 %512, i64 %514
  %516 = load i32, i32* %515, align 4
  %.neg206 = add i32 %516, 1
  %517 = sext i32 %.neg206 to i64
  %518 = getelementptr inbounds [5010 x [5010 x i64]], [5010 x [5010 x i64]]* @sum, i64 0, i64 %510, i64 %517
  %519 = load i64, i64* %518, align 8
  %520 = add i64 %519, %507
  store i64 %520, i64* %518, align 8
  %521 = load i32, i32* @x.1, align 4
  %522 = load i32, i32* @y.2, align 4
  %523 = add i32 %521, -1
  %524 = mul i32 %523, %521
  %525 = and i32 %524, 1
  %526 = icmp eq i32 %525, 0
  %527 = icmp slt i32 %522, 10
  %528 = or i1 %527, %526
  %529 = select i1 %528, i32 1176149159, i32 -813733519
  br label %.backedge

530:                                              ; preds = %32
  br label %.backedge

531:                                              ; preds = %32
  %532 = load i32, i32* @x.1, align 4
  %533 = load i32, i32* @y.2, align 4
  %534 = add i32 %532, -1
  %535 = mul i32 %534, %532
  %536 = and i32 %535, 1
  %537 = icmp eq i32 %536, 0
  %538 = icmp slt i32 %533, 10
  %539 = or i1 %538, %537
  %540 = select i1 %539, i32 -313387275, i32 312840458
  br label %.backedge

541:                                              ; preds = %32
  %.0..0..0.129 = load volatile i32*, i32** %11, align 8
  %542 = load i32, i32* %.0..0..0.129, align 4
  %543 = add i32 %542, 1
  %.0..0..0.130 = load volatile i32*, i32** %11, align 8
  store i32 %543, i32* %.0..0..0.130, align 4
  %544 = load i32, i32* @x.1, align 4
  %545 = load i32, i32* @y.2, align 4
  %546 = add i32 %544, -1
  %547 = mul i32 %546, %544
  %548 = and i32 %547, 1
  %549 = icmp eq i32 %548, 0
  %550 = icmp slt i32 %545, 10
  %551 = or i1 %550, %549
  %552 = select i1 %551, i32 683800298, i32 312840458
  br label %.backedge

553:                                              ; preds = %32
  br label %.backedge

554:                                              ; preds = %32
  br label %.backedge

555:                                              ; preds = %32
  %.0..0..0.63 = load volatile i32*, i32** %16, align 8
  %556 = load i32, i32* %.0..0..0.63, align 4
  %557 = add i32 %556, 1
  %.0..0..0.64 = load volatile i32*, i32** %16, align 8
  store i32 %557, i32* %.0..0..0.64, align 4
  br label %.backedge

558:                                              ; preds = %32
  %.0..0..0.145 = load volatile i32*, i32** %10, align 8
  store i32 1, i32* %.0..0..0.145, align 4
  br label %.backedge

559:                                              ; preds = %32
  %.0..0..0.146 = load volatile i32*, i32** %10, align 8
  %560 = load i32, i32* %.0..0..0.146, align 4
  %.0..0..0.13 = load volatile i32*, i32** %22, align 8
  %561 = load i32, i32* %.0..0..0.13, align 4
  %.not204 = icmp sgt i32 %560, %561
  %562 = select i1 %.not204, i32 161691284, i32 1323413123
  br label %.backedge

563:                                              ; preds = %32
  %564 = load i32, i32* @x.1, align 4
  %565 = load i32, i32* @y.2, align 4
  %566 = add i32 %564, -1
  %567 = mul i32 %566, %564
  %568 = and i32 %567, 1
  %569 = icmp eq i32 %568, 0
  %570 = icmp slt i32 %565, 10
  %571 = or i1 %570, %569
  %572 = select i1 %571, i32 2114327786, i32 -1010922286
  br label %.backedge

573:                                              ; preds = %32
  %.0..0..0.160 = load volatile i32*, i32** %9, align 8
  store i32 1, i32* %.0..0..0.160, align 4
  %574 = load i32, i32* @x.1, align 4
  %575 = load i32, i32* @y.2, align 4
  %576 = add i32 %574, -1
  %577 = mul i32 %576, %574
  %578 = and i32 %577, 1
  %579 = icmp eq i32 %578, 0
  %580 = icmp slt i32 %575, 10
  %581 = or i1 %580, %579
  %582 = select i1 %581, i32 1837346318, i32 -1010922286
  br label %.backedge

583:                                              ; preds = %32
  br label %.backedge

584:                                              ; preds = %32
  %.0..0..0.161 = load volatile i32*, i32** %9, align 8
  %585 = load i32, i32* %.0..0..0.161, align 4
  %.0..0..0.14 = load volatile i32*, i32** %22, align 8
  %586 = load i32, i32* %.0..0..0.14, align 4
  %.not203 = icmp sgt i32 %585, %586
  %587 = select i1 %.not203, i32 338559449, i32 1042092879
  br label %.backedge

588:                                              ; preds = %32
  %589 = load i32, i32* @x.1, align 4
  %590 = load i32, i32* @y.2, align 4
  %591 = add i32 %589, -1
  %592 = mul i32 %591, %589
  %593 = and i32 %592, 1
  %594 = icmp eq i32 %593, 0
  %595 = icmp slt i32 %590, 10
  %596 = or i1 %595, %594
  %597 = select i1 %596, i32 1074585506, i32 71303448
  br label %.backedge

598:                                              ; preds = %32
  %.0..0..0.147 = load volatile i32*, i32** %10, align 8
  %599 = load i32, i32* %.0..0..0.147, align 4
  %600 = sext i32 %599 to i64
  %.0..0..0.162 = load volatile i32*, i32** %9, align 8
  %601 = load i32, i32* %.0..0..0.162, align 4
  %602 = add i32 %601, -1
  %603 = sext i32 %602 to i64
  %604 = getelementptr inbounds [5010 x [5010 x i64]], [5010 x [5010 x i64]]* @sum, i64 0, i64 %600, i64 %603
  %605 = load i64, i64* %604, align 8
  %.0..0..0.148 = load volatile i32*, i32** %10, align 8
  %606 = load i32, i32* %.0..0..0.148, align 4
  %607 = sext i32 %606 to i64
  %.0..0..0.163 = load volatile i32*, i32** %9, align 8
  %608 = load i32, i32* %.0..0..0.163, align 4
  %609 = sext i32 %608 to i64
  %610 = getelementptr inbounds [5010 x [5010 x i64]], [5010 x [5010 x i64]]* @sum, i64 0, i64 %607, i64 %609
  %611 = load i64, i64* %610, align 8
  %612 = add i64 %611, %605
  store i64 %612, i64* %610, align 8
  %613 = load i32, i32* @x.1, align 4
  %614 = load i32, i32* @y.2, align 4
  %615 = add i32 %613, -1
  %616 = mul i32 %615, %613
  %617 = and i32 %616, 1
  %618 = icmp eq i32 %617, 0
  %619 = icmp slt i32 %614, 10
  %620 = or i1 %619, %618
  %621 = select i1 %620, i32 399811005, i32 71303448
  br label %.backedge

622:                                              ; preds = %32
  br label %.backedge

623:                                              ; preds = %32
  %.0..0..0.164 = load volatile i32*, i32** %9, align 8
  %624 = load i32, i32* %.0..0..0.164, align 4
  %625 = add i32 %624, 1
  %.0..0..0.165 = load volatile i32*, i32** %9, align 8
  store i32 %625, i32* %.0..0..0.165, align 4
  br label %.backedge

626:                                              ; preds = %32
  %627 = load i32, i32* @x.1, align 4
  %628 = load i32, i32* @y.2, align 4
  %629 = add i32 %627, -1
  %630 = mul i32 %629, %627
  %631 = and i32 %630, 1
  %632 = icmp eq i32 %631, 0
  %633 = icmp slt i32 %628, 10
  %634 = or i1 %633, %632
  %635 = select i1 %634, i32 -1279937111, i32 1099603710
  br label %.backedge

636:                                              ; preds = %32
  %.0..0..0.169 = load volatile i32*, i32** %8, align 8
  store i32 1, i32* %.0..0..0.169, align 4
  %637 = load i32, i32* @x.1, align 4
  %638 = load i32, i32* @y.2, align 4
  %639 = add i32 %637, -1
  %640 = mul i32 %639, %637
  %641 = and i32 %640, 1
  %642 = icmp eq i32 %641, 0
  %643 = icmp slt i32 %638, 10
  %644 = or i1 %643, %642
  %645 = select i1 %644, i32 490157648, i32 1099603710
  br label %.backedge

646:                                              ; preds = %32
  br label %.backedge

647:                                              ; preds = %32
  %648 = load i32, i32* @x.1, align 4
  %649 = load i32, i32* @y.2, align 4
  %650 = add i32 %648, -1
  %651 = mul i32 %650, %648
  %652 = and i32 %651, 1
  %653 = icmp eq i32 %652, 0
  %654 = icmp slt i32 %649, 10
  %655 = or i1 %654, %653
  %656 = select i1 %655, i32 -1927733896, i32 704895241
  br label %.backedge

657:                                              ; preds = %32
  %.0..0..0.170 = load volatile i32*, i32** %8, align 8
  %658 = load i32, i32* %.0..0..0.170, align 4
  %.0..0..0.15 = load volatile i32*, i32** %22, align 8
  %659 = load i32, i32* %.0..0..0.15, align 4
  %660 = icmp sle i32 %658, %659
  store i1 %660, i1* %1, align 1
  %661 = load i32, i32* @x.1, align 4
  %662 = load i32, i32* @y.2, align 4
  %663 = add i32 %661, -1
  %664 = mul i32 %663, %661
  %665 = and i32 %664, 1
  %666 = icmp eq i32 %665, 0
  %667 = icmp slt i32 %662, 10
  %668 = or i1 %667, %666
  %669 = select i1 %668, i32 1406283848, i32 704895241
  br label %.backedge

670:                                              ; preds = %32
  %.0..0..0.193 = load volatile i1, i1* %1, align 1
  %671 = select i1 %.0..0..0.193, i32 929665607, i32 342859394
  br label %.backedge

672:                                              ; preds = %32
  %.0..0..0.149 = load volatile i32*, i32** %10, align 8
  %673 = load i32, i32* %.0..0..0.149, align 4
  %674 = add i32 %673, -1
  %675 = sext i32 %674 to i64
  %.0..0..0.171 = load volatile i32*, i32** %8, align 8
  %676 = load i32, i32* %.0..0..0.171, align 4
  %677 = sext i32 %676 to i64
  %678 = getelementptr inbounds [5010 x [5010 x i64]], [5010 x [5010 x i64]]* @sum, i64 0, i64 %675, i64 %677
  %679 = load i64, i64* %678, align 8
  %.0..0..0.150 = load volatile i32*, i32** %10, align 8
  %680 = load i32, i32* %.0..0..0.150, align 4
  %681 = sext i32 %680 to i64
  %.0..0..0.172 = load volatile i32*, i32** %8, align 8
  %682 = load i32, i32* %.0..0..0.172, align 4
  %683 = sext i32 %682 to i64
  %684 = getelementptr inbounds [5010 x [5010 x i64]], [5010 x [5010 x i64]]* @sum, i64 0, i64 %681, i64 %683
  %685 = load i64, i64* %684, align 8
  %686 = add i64 %685, %679
  store i64 %686, i64* %684, align 8
  br label %.backedge

687:                                              ; preds = %32
  %.0..0..0.173 = load volatile i32*, i32** %8, align 8
  %688 = load i32, i32* %.0..0..0.173, align 4
  %689 = add i32 %688, 1
  %.0..0..0.174 = load volatile i32*, i32** %8, align 8
  store i32 %689, i32* %.0..0..0.174, align 4
  br label %.backedge

690:                                              ; preds = %32
  %.0..0..0.151 = load volatile i32*, i32** %10, align 8
  %691 = load i32, i32* %.0..0..0.151, align 4
  %.0..0..0.177 = load volatile i32*, i32** %7, align 8
  store i32 %691, i32* %.0..0..0.177, align 4
  br label %.backedge

692:                                              ; preds = %32
  %.0..0..0.178 = load volatile i32*, i32** %7, align 8
  %693 = load i32, i32* %.0..0..0.178, align 4
  %.0..0..0.16 = load volatile i32*, i32** %22, align 8
  %694 = load i32, i32* %.0..0..0.16, align 4
  %.not = icmp sgt i32 %693, %694
  %695 = select i1 %.not, i32 1590197496, i32 -541706136
  br label %.backedge

696:                                              ; preds = %32
  %697 = load i32, i32* @x.1, align 4
  %698 = load i32, i32* @y.2, align 4
  %699 = add i32 %697, -1
  %700 = mul i32 %699, %697
  %701 = and i32 %700, 1
  %702 = icmp eq i32 %701, 0
  %703 = icmp slt i32 %698, 10
  %704 = or i1 %703, %702
  %705 = select i1 %704, i32 -1830167652, i32 -1476839632
  br label %.backedge

706:                                              ; preds = %32
  %.0..0..0.152 = load volatile i32*, i32** %10, align 8
  %707 = load i32, i32* %.0..0..0.152, align 4
  %708 = sext i32 %707 to i64
  %.0..0..0.179 = load volatile i32*, i32** %7, align 8
  %709 = load i32, i32* %.0..0..0.179, align 4
  %710 = sext i32 %709 to i64
  %711 = getelementptr inbounds [5010 x [5010 x i64]], [5010 x [5010 x i64]]* @sum, i64 0, i64 %708, i64 %710
  %712 = load i64, i64* %711, align 8
  %.0..0..0.180 = load volatile i32*, i32** %7, align 8
  %713 = load i32, i32* %.0..0..0.180, align 4
  %714 = sext i32 %713 to i64
  %715 = getelementptr inbounds [5010 x i64], [5010 x i64]* @A, i64 0, i64 %714
  %716 = load i64, i64* %715, align 8
  %717 = sub i64 %712, %716
  %.0..0..0.153 = load volatile i32*, i32** %10, align 8
  %718 = load i32, i32* %.0..0..0.153, align 4
  %719 = sext i32 %718 to i64
  %720 = getelementptr inbounds [5010 x i64], [5010 x i64]* @A, i64 0, i64 %719
  %721 = load i64, i64* %720, align 8
  %722 = add i64 %717, %721
  %.0..0..0.185 = load volatile i64*, i64** %6, align 8
  store i64 %722, i64* %.0..0..0.185, align 8
  %.0..0..0.22 = load volatile i64*, i64** %20, align 8
  %.0..0..0.186 = load volatile i64*, i64** %6, align 8
  %723 = call dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* dereferenceable(8) %.0..0..0.22, i64* dereferenceable(8) %.0..0..0.186)
  %724 = load i64, i64* %723, align 8
  %.0..0..0.23 = load volatile i64*, i64** %20, align 8
  store i64 %724, i64* %.0..0..0.23, align 8
  %725 = load i32, i32* @x.1, align 4
  %726 = load i32, i32* @y.2, align 4
  %727 = add i32 %725, -1
  %728 = mul i32 %727, %725
  %729 = and i32 %728, 1
  %730 = icmp eq i32 %729, 0
  %731 = icmp slt i32 %726, 10
  %732 = or i1 %731, %730
  %733 = select i1 %732, i32 -1056204923, i32 -1476839632
  br label %.backedge

734:                                              ; preds = %32
  br label %.backedge

735:                                              ; preds = %32
  %.0..0..0.181 = load volatile i32*, i32** %7, align 8
  %736 = load i32, i32* %.0..0..0.181, align 4
  %.neg202 = add i32 %736, 1
  %.0..0..0.182 = load volatile i32*, i32** %7, align 8
  store i32 %.neg202, i32* %.0..0..0.182, align 4
  br label %.backedge

737:                                              ; preds = %32
  br label %.backedge

738:                                              ; preds = %32
  %.0..0..0.154 = load volatile i32*, i32** %10, align 8
  %739 = load i32, i32* %.0..0..0.154, align 4
  %740 = add i32 %739, 1
  %.0..0..0.155 = load volatile i32*, i32** %10, align 8
  store i32 %740, i32* %.0..0..0.155, align 4
  br label %.backedge

741:                                              ; preds = %32
  %.0..0..0.24 = load volatile i64*, i64** %20, align 8
  %742 = load i64, i64* %.0..0..0.24, align 8
  %743 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i64 %742)
  ret i32 0

744:                                              ; preds = %32
  %745 = call i32 @_Z4readv()
  %746 = call i32 @_Z4readv()
  br label %.backedge

747:                                              ; preds = %32
  %.0..0..0.33 = load volatile i32*, i32** %19, align 8
  %748 = load i32, i32* %.0..0..0.33, align 4
  %749 = add i32 %748, 1
  %.0..0..0.34 = load volatile i32*, i32** %19, align 8
  store i32 %749, i32* %.0..0..0.34, align 4
  br label %.backedge

750:                                              ; preds = %32
  %751 = call i32 @_Z4readv()
  %.0..0..0.46 = load volatile i32*, i32** %17, align 8
  %752 = load i32, i32* %.0..0..0.46, align 4
  %753 = sext i32 %752 to i64
  %.0..0..0.40 = load volatile i32*, i32** %18, align 8
  %754 = load i32, i32* %.0..0..0.40, align 4
  %755 = sext i32 %754 to i64
  %756 = getelementptr inbounds [210 x [5010 x i32]], [210 x [5010 x i32]]* @B, i64 0, i64 %753, i64 %755
  store i32 %751, i32* %756, align 4
  br label %.backedge

757:                                              ; preds = %32
  br label %.backedge

758:                                              ; preds = %32
  %.0..0..0.65 = load volatile i32*, i32** %16, align 8
  store i32 1, i32* %.0..0..0.65, align 4
  br label %.backedge

759:                                              ; preds = %32
  %.0..0..0.83 = load volatile i32*, i32** %15, align 8
  store i32 1, i32* %.0..0..0.83, align 4
  %.0..0..0.93 = load volatile i32*, i32** %14, align 8
  store i32 0, i32* %.0..0..0.93, align 4
  br label %.backedge

760:                                              ; preds = %32
  %.0..0..0.94 = load volatile i32*, i32** %14, align 8
  br label %.backedge

761:                                              ; preds = %32
  br label %.backedge

762:                                              ; preds = %32
  %.0..0..0.102 = load volatile i32*, i32** %13, align 8
  br label %.backedge

763:                                              ; preds = %32
  %.0..0..0.66 = load volatile i32*, i32** %16, align 8
  %.0..0..0.113 = load volatile i32*, i32** %12, align 8
  %.0..0..0.67 = load volatile i32*, i32** %16, align 8
  %.0..0..0.103 = load volatile i32*, i32** %13, align 8
  br label %.backedge

764:                                              ; preds = %32
  %.0..0..0.114 = load volatile i32*, i32** %12, align 8
  br label %.backedge

765:                                              ; preds = %32
  %.0..0..0.68 = load volatile i32*, i32** %16, align 8
  %766 = load i32, i32* %.0..0..0.68, align 4
  %767 = sext i32 %766 to i64
  %.0..0..0.131 = load volatile i32*, i32** %11, align 8
  %768 = load i32, i32* %.0..0..0.131, align 4
  %769 = sext i32 %768 to i64
  %770 = getelementptr inbounds [210 x [5010 x i32]], [210 x [5010 x i32]]* @B, i64 0, i64 %767, i64 %769
  %771 = load i32, i32* %770, align 4
  %772 = sext i32 %771 to i64
  %.0..0..0.69 = load volatile i32*, i32** %16, align 8
  %773 = load i32, i32* %.0..0..0.69, align 4
  %774 = sext i32 %773 to i64
  %.0..0..0.132 = load volatile i32*, i32** %11, align 8
  %775 = load i32, i32* %.0..0..0.132, align 4
  %776 = sext i32 %775 to i64
  %777 = getelementptr inbounds [210 x [5010 x i32]], [210 x [5010 x i32]]* @L, i64 0, i64 %774, i64 %776
  %778 = load i32, i32* %777, align 4
  %779 = sext i32 %778 to i64
  %.0..0..0.133 = load volatile i32*, i32** %11, align 8
  %780 = load i32, i32* %.0..0..0.133, align 4
  %781 = sext i32 %780 to i64
  %782 = getelementptr inbounds [5010 x [5010 x i64]], [5010 x [5010 x i64]]* @sum, i64 0, i64 %779, i64 %781
  %783 = load i64, i64* %782, align 8
  %784 = add i64 %783, %772
  store i64 %784, i64* %782, align 8
  %.0..0..0.70 = load volatile i32*, i32** %16, align 8
  %785 = load i32, i32* %.0..0..0.70, align 4
  %786 = sext i32 %785 to i64
  %.0..0..0.134 = load volatile i32*, i32** %11, align 8
  %787 = load i32, i32* %.0..0..0.134, align 4
  %788 = sext i32 %787 to i64
  %789 = getelementptr inbounds [210 x [5010 x i32]], [210 x [5010 x i32]]* @B, i64 0, i64 %786, i64 %788
  %790 = load i32, i32* %789, align 4
  %791 = sext i32 %790 to i64
  %.0..0..0.71 = load volatile i32*, i32** %16, align 8
  %792 = load i32, i32* %.0..0..0.71, align 4
  %793 = sext i32 %792 to i64
  %.0..0..0.135 = load volatile i32*, i32** %11, align 8
  %794 = load i32, i32* %.0..0..0.135, align 4
  %795 = sext i32 %794 to i64
  %796 = getelementptr inbounds [210 x [5010 x i32]], [210 x [5010 x i32]]* @L, i64 0, i64 %793, i64 %795
  %797 = load i32, i32* %796, align 4
  %798 = sext i32 %797 to i64
  %.0..0..0.72 = load volatile i32*, i32** %16, align 8
  %799 = load i32, i32* %.0..0..0.72, align 4
  %800 = sext i32 %799 to i64
  %.0..0..0.136 = load volatile i32*, i32** %11, align 8
  %801 = load i32, i32* %.0..0..0.136, align 4
  %802 = sext i32 %801 to i64
  %803 = getelementptr inbounds [210 x [5010 x i32]], [210 x [5010 x i32]]* @R, i64 0, i64 %800, i64 %802
  %804 = load i32, i32* %803, align 4
  %805 = add i32 %804, 1
  %806 = sext i32 %805 to i64
  %807 = getelementptr inbounds [5010 x [5010 x i64]], [5010 x [5010 x i64]]* @sum, i64 0, i64 %798, i64 %806
  %808 = load i64, i64* %807, align 8
  %809 = sub i64 %808, %791
  store i64 %809, i64* %807, align 8
  %.0..0..0.73 = load volatile i32*, i32** %16, align 8
  %810 = load i32, i32* %.0..0..0.73, align 4
  %811 = sext i32 %810 to i64
  %.0..0..0.137 = load volatile i32*, i32** %11, align 8
  %812 = load i32, i32* %.0..0..0.137, align 4
  %813 = sext i32 %812 to i64
  %814 = getelementptr inbounds [210 x [5010 x i32]], [210 x [5010 x i32]]* @B, i64 0, i64 %811, i64 %813
  %815 = load i32, i32* %814, align 4
  %816 = sext i32 %815 to i64
  %.0..0..0.138 = load volatile i32*, i32** %11, align 8
  %817 = load i32, i32* %.0..0..0.138, align 4
  %818 = add i32 %817, 1
  %819 = sext i32 %818 to i64
  %.0..0..0.139 = load volatile i32*, i32** %11, align 8
  %820 = load i32, i32* %.0..0..0.139, align 4
  %821 = sext i32 %820 to i64
  %822 = getelementptr inbounds [5010 x [5010 x i64]], [5010 x [5010 x i64]]* @sum, i64 0, i64 %819, i64 %821
  %823 = load i64, i64* %822, align 8
  %824 = sub i64 %823, %816
  store i64 %824, i64* %822, align 8
  %.0..0..0.74 = load volatile i32*, i32** %16, align 8
  %825 = load i32, i32* %.0..0..0.74, align 4
  %826 = sext i32 %825 to i64
  %.0..0..0.140 = load volatile i32*, i32** %11, align 8
  %827 = load i32, i32* %.0..0..0.140, align 4
  %828 = sext i32 %827 to i64
  %829 = getelementptr inbounds [210 x [5010 x i32]], [210 x [5010 x i32]]* @B, i64 0, i64 %826, i64 %828
  %830 = load i32, i32* %829, align 4
  %831 = sext i32 %830 to i64
  %.0..0..0.141 = load volatile i32*, i32** %11, align 8
  %832 = load i32, i32* %.0..0..0.141, align 4
  %833 = add i32 %832, 1
  %834 = sext i32 %833 to i64
  %.0..0..0.75 = load volatile i32*, i32** %16, align 8
  %835 = load i32, i32* %.0..0..0.75, align 4
  %836 = sext i32 %835 to i64
  %.0..0..0.142 = load volatile i32*, i32** %11, align 8
  %837 = load i32, i32* %.0..0..0.142, align 4
  %838 = sext i32 %837 to i64
  %839 = getelementptr inbounds [210 x [5010 x i32]], [210 x [5010 x i32]]* @R, i64 0, i64 %836, i64 %838
  %840 = load i32, i32* %839, align 4
  %.neg = add i32 %840, 1
  %841 = sext i32 %.neg to i64
  %842 = getelementptr inbounds [5010 x [5010 x i64]], [5010 x [5010 x i64]]* @sum, i64 0, i64 %834, i64 %841
  %843 = load i64, i64* %842, align 8
  %844 = add i64 %843, %831
  store i64 %844, i64* %842, align 8
  br label %.backedge

845:                                              ; preds = %32
  %.0..0..0.143 = load volatile i32*, i32** %11, align 8
  %846 = load i32, i32* %.0..0..0.143, align 4
  %847 = add i32 %846, 1
  %.0..0..0.144 = load volatile i32*, i32** %11, align 8
  store i32 %847, i32* %.0..0..0.144, align 4
  br label %.backedge

848:                                              ; preds = %32
  %.0..0..0.166 = load volatile i32*, i32** %9, align 8
  store i32 1, i32* %.0..0..0.166, align 4
  br label %.backedge

849:                                              ; preds = %32
  %.0..0..0.156 = load volatile i32*, i32** %10, align 8
  %850 = load i32, i32* %.0..0..0.156, align 4
  %851 = sext i32 %850 to i64
  %.0..0..0.167 = load volatile i32*, i32** %9, align 8
  %852 = load i32, i32* %.0..0..0.167, align 4
  %853 = add i32 %852, -1
  %854 = sext i32 %853 to i64
  %855 = getelementptr inbounds [5010 x [5010 x i64]], [5010 x [5010 x i64]]* @sum, i64 0, i64 %851, i64 %854
  %856 = load i64, i64* %855, align 8
  %.0..0..0.157 = load volatile i32*, i32** %10, align 8
  %857 = load i32, i32* %.0..0..0.157, align 4
  %858 = sext i32 %857 to i64
  %.0..0..0.168 = load volatile i32*, i32** %9, align 8
  %859 = load i32, i32* %.0..0..0.168, align 4
  %860 = sext i32 %859 to i64
  %861 = getelementptr inbounds [5010 x [5010 x i64]], [5010 x [5010 x i64]]* @sum, i64 0, i64 %858, i64 %860
  %862 = load i64, i64* %861, align 8
  %863 = add i64 %862, %856
  store i64 %863, i64* %861, align 8
  br label %.backedge

864:                                              ; preds = %32
  %.0..0..0.175 = load volatile i32*, i32** %8, align 8
  store i32 1, i32* %.0..0..0.175, align 4
  br label %.backedge

865:                                              ; preds = %32
  %.0..0..0.176 = load volatile i32*, i32** %8, align 8
  %.0..0..0.17 = load volatile i32*, i32** %22, align 8
  br label %.backedge

866:                                              ; preds = %32
  %.0..0..0.158 = load volatile i32*, i32** %10, align 8
  %867 = load i32, i32* %.0..0..0.158, align 4
  %868 = sext i32 %867 to i64
  %.0..0..0.183 = load volatile i32*, i32** %7, align 8
  %869 = load i32, i32* %.0..0..0.183, align 4
  %870 = sext i32 %869 to i64
  %871 = getelementptr inbounds [5010 x [5010 x i64]], [5010 x [5010 x i64]]* @sum, i64 0, i64 %868, i64 %870
  %872 = load i64, i64* %871, align 8
  %.0..0..0.184 = load volatile i32*, i32** %7, align 8
  %873 = load i32, i32* %.0..0..0.184, align 4
  %874 = sext i32 %873 to i64
  %875 = getelementptr inbounds [5010 x i64], [5010 x i64]* @A, i64 0, i64 %874
  %876 = load i64, i64* %875, align 8
  %877 = sub i64 %872, %876
  %.0..0..0.159 = load volatile i32*, i32** %10, align 8
  %878 = load i32, i32* %.0..0..0.159, align 4
  %879 = sext i32 %878 to i64
  %880 = getelementptr inbounds [5010 x i64], [5010 x i64]* @A, i64 0, i64 %879
  %881 = load i64, i64* %880, align 8
  %882 = add i64 %877, %881
  %.0..0..0.187 = load volatile i64*, i64** %6, align 8
  store i64 %882, i64* %.0..0..0.187, align 8
  %.0..0..0.25 = load volatile i64*, i64** %20, align 8
  %.0..0..0.188 = load volatile i64*, i64** %6, align 8
  %883 = call dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* dereferenceable(8) %.0..0..0.25, i64* dereferenceable(8) %.0..0..0.188)
  %884 = load i64, i64* %883, align 8
  %.0..0..0.26 = load volatile i64*, i64** %20, align 8
  store i64 %884, i64* %.0..0..0.26, align 8
  br label %.backedge
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_Z4readv() local_unnamed_addr #0 comdat {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i8*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i1, align 1
  %9 = alloca i1, align 1
  %10 = load i32, i32* @x.3, align 4
  %11 = load i32, i32* @y.4, align 4
  %12 = add i32 %10, -1
  %13 = mul i32 %12, %10
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %9, align 1
  %16 = icmp slt i32 %11, 10
  store i1 %16, i1* %8, align 1
  br label %17

17:                                               ; preds = %.backedge, %0
  %.030 = phi i32 [ -1371347501, %0 ], [ %.030.be, %.backedge ]
  %.028 = phi i1 [ undef, %0 ], [ %.028.be, %.backedge ]
  %.0 = phi i1 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.030, label %.backedge [
    i32 -1371347501, label %18
    i32 -1110412050, label %21
    i32 -1570744906, label %36
    i32 707836324, label %37
    i32 -2012369617, label %47
    i32 -1512457999, label %59
    i32 1174451802, label %61
    i32 1553470678, label %71
    i32 376142140, label %83
    i32 -354580254, label %84
    i32 470799289, label %94
    i32 -1865367009, label %104
    i32 1833761212, label %106
    i32 134486328, label %116
    i32 311851825, label %128
    i32 -1733623518, label %130
    i32 -315569119, label %131
    i32 -745407184, label %132
    i32 1578097314, label %135
    i32 -1695412913, label %136
    i32 1267724677, label %140
    i32 1708262606, label %143
    i32 -1907298565, label %145
    i32 -1658390959, label %154
    i32 809876666, label %157
    i32 246276531, label %161
    i32 -679351396, label %163
    i32 -254949890, label %164
    i32 1382650443, label %165
    i32 -1832353535, label %166
  ]

.backedge:                                        ; preds = %17, %166, %165, %164, %163, %161, %154, %145, %143, %140, %136, %135, %132, %131, %130, %128, %116, %106, %104, %94, %84, %83, %71, %61, %59, %47, %37, %36, %21, %18
  %.030.be = phi i32 [ %.030, %17 ], [ 134486328, %166 ], [ 470799289, %165 ], [ 1553470678, %164 ], [ -2012369617, %163 ], [ -1110412050, %161 ], [ -1695412913, %154 ], [ -1658390959, %145 ], [ %144, %143 ], [ 1708262606, %140 ], [ %139, %136 ], [ -1695412913, %135 ], [ 707836324, %132 ], [ -745407184, %131 ], [ -315569119, %130 ], [ %129, %128 ], [ %127, %116 ], [ %115, %106 ], [ %105, %104 ], [ %103, %94 ], [ %93, %84 ], [ -354580254, %83 ], [ %82, %71 ], [ %70, %61 ], [ %60, %59 ], [ %58, %47 ], [ %46, %37 ], [ 707836324, %36 ], [ %35, %21 ], [ %20, %18 ]
  %.028.be = phi i1 [ %.028, %17 ], [ %.028, %166 ], [ %.028, %165 ], [ %.028, %164 ], [ %.028, %163 ], [ %.028, %161 ], [ %.028, %154 ], [ %.028, %145 ], [ %.028, %143 ], [ %.028, %140 ], [ %.028, %136 ], [ %.028, %135 ], [ %.028, %132 ], [ %.028, %131 ], [ %.028, %130 ], [ %.028, %128 ], [ %.028, %116 ], [ %.028, %106 ], [ %.028, %104 ], [ %.028, %94 ], [ %.028, %84 ], [ %.0..0..0.25, %83 ], [ %.028, %71 ], [ %.028, %61 ], [ true, %59 ], [ %.028, %47 ], [ %.028, %37 ], [ %.028, %36 ], [ %.028, %21 ], [ %.028, %18 ]
  %.0.be = phi i1 [ %.0, %17 ], [ %.0, %166 ], [ %.0, %165 ], [ %.0, %164 ], [ %.0, %163 ], [ %.0, %161 ], [ %.0, %154 ], [ %.0, %145 ], [ %.0, %143 ], [ %142, %140 ], [ false, %136 ], [ %.0, %135 ], [ %.0, %132 ], [ %.0, %131 ], [ %.0, %130 ], [ %.0, %128 ], [ %.0, %116 ], [ %.0, %106 ], [ %.0, %104 ], [ %.0, %94 ], [ %.0, %84 ], [ %.0, %83 ], [ %.0, %71 ], [ %.0, %61 ], [ %.0, %59 ], [ %.0, %47 ], [ %.0, %37 ], [ %.0, %36 ], [ %.0, %21 ], [ %.0, %18 ]
  br label %17

18:                                               ; preds = %17
  %.0..0..0.2 = load volatile i1, i1* %9, align 1
  %.0..0..0.3 = load volatile i1, i1* %8, align 1
  %19 = or i1 %.0..0..0.2, %.0..0..0.3
  %20 = select i1 %19, i32 -1110412050, i32 246276531
  br label %.backedge

21:                                               ; preds = %17
  %22 = alloca i32, align 4
  store i32* %22, i32** %7, align 8
  %23 = alloca i32, align 4
  store i32* %23, i32** %6, align 8
  %24 = alloca i8, align 1
  store i8* %24, i8** %5, align 8
  %.0..0..0.4 = load volatile i32*, i32** %7, align 8
  store i32 0, i32* %.0..0..0.4, align 4
  %.0..0..0.9 = load volatile i32*, i32** %6, align 8
  store i32 1, i32* %.0..0..0.9, align 4
  %25 = call i32 @getchar()
  %26 = trunc i32 %25 to i8
  %.0..0..0.12 = load volatile i8*, i8** %5, align 8
  store i8 %26, i8* %.0..0..0.12, align 1
  %27 = load i32, i32* @x.3, align 4
  %28 = load i32, i32* @y.4, align 4
  %29 = add i32 %27, -1
  %30 = mul i32 %29, %27
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %33, %32
  %35 = select i1 %34, i32 -1570744906, i32 246276531
  br label %.backedge

36:                                               ; preds = %17
  br label %.backedge

37:                                               ; preds = %17
  %38 = load i32, i32* @x.3, align 4
  %39 = load i32, i32* @y.4, align 4
  %40 = add i32 %38, -1
  %41 = mul i32 %40, %38
  %42 = and i32 %41, 1
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %44, %43
  %46 = select i1 %45, i32 -2012369617, i32 -679351396
  br label %.backedge

47:                                               ; preds = %17
  %.0..0..0.13 = load volatile i8*, i8** %5, align 8
  %48 = load i8, i8* %.0..0..0.13, align 1
  %49 = icmp slt i8 %48, 48
  store i1 %49, i1* %4, align 1
  %50 = load i32, i32* @x.3, align 4
  %51 = load i32, i32* @y.4, align 4
  %52 = add i32 %50, -1
  %53 = mul i32 %52, %50
  %54 = and i32 %53, 1
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %56, %55
  %58 = select i1 %57, i32 -1512457999, i32 -679351396
  br label %.backedge

59:                                               ; preds = %17
  %.0..0..0.24 = load volatile i1, i1* %4, align 1
  %60 = select i1 %.0..0..0.24, i32 -354580254, i32 1174451802
  br label %.backedge

61:                                               ; preds = %17
  %62 = load i32, i32* @x.3, align 4
  %63 = load i32, i32* @y.4, align 4
  %64 = add i32 %62, -1
  %65 = mul i32 %64, %62
  %66 = and i32 %65, 1
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %63, 10
  %69 = or i1 %68, %67
  %70 = select i1 %69, i32 1553470678, i32 -254949890
  br label %.backedge

71:                                               ; preds = %17
  %.0..0..0.14 = load volatile i8*, i8** %5, align 8
  %72 = load i8, i8* %.0..0..0.14, align 1
  %73 = icmp sgt i8 %72, 57
  store i1 %73, i1* %3, align 1
  %74 = load i32, i32* @x.3, align 4
  %75 = load i32, i32* @y.4, align 4
  %76 = add i32 %74, -1
  %77 = mul i32 %76, %74
  %78 = and i32 %77, 1
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %80, %79
  %82 = select i1 %81, i32 376142140, i32 -254949890
  br label %.backedge

83:                                               ; preds = %17
  %.0..0..0.25 = load volatile i1, i1* %3, align 1
  br label %.backedge

84:                                               ; preds = %17
  store i1 %.028, i1* %1, align 1
  %85 = load i32, i32* @x.3, align 4
  %86 = load i32, i32* @y.4, align 4
  %87 = add i32 %85, -1
  %88 = mul i32 %87, %85
  %89 = and i32 %88, 1
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %91, %90
  %93 = select i1 %92, i32 470799289, i32 1382650443
  br label %.backedge

94:                                               ; preds = %17
  %95 = load i32, i32* @x.3, align 4
  %96 = load i32, i32* @y.4, align 4
  %97 = add i32 %95, -1
  %98 = mul i32 %97, %95
  %99 = and i32 %98, 1
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %101, %100
  %103 = select i1 %102, i32 -1865367009, i32 1382650443
  br label %.backedge

104:                                              ; preds = %17
  %.0..0..0.27 = load volatile i1, i1* %1, align 1
  %105 = select i1 %.0..0..0.27, i32 1833761212, i32 1578097314
  br label %.backedge

106:                                              ; preds = %17
  %107 = load i32, i32* @x.3, align 4
  %108 = load i32, i32* @y.4, align 4
  %109 = add i32 %107, -1
  %110 = mul i32 %109, %107
  %111 = and i32 %110, 1
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %108, 10
  %114 = or i1 %113, %112
  %115 = select i1 %114, i32 134486328, i32 -1832353535
  br label %.backedge

116:                                              ; preds = %17
  %.0..0..0.15 = load volatile i8*, i8** %5, align 8
  %117 = load i8, i8* %.0..0..0.15, align 1
  %118 = icmp eq i8 %117, 45
  store i1 %118, i1* %2, align 1
  %119 = load i32, i32* @x.3, align 4
  %120 = load i32, i32* @y.4, align 4
  %121 = add i32 %119, -1
  %122 = mul i32 %121, %119
  %123 = and i32 %122, 1
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %120, 10
  %126 = or i1 %125, %124
  %127 = select i1 %126, i32 311851825, i32 -1832353535
  br label %.backedge

128:                                              ; preds = %17
  %.0..0..0.26 = load volatile i1, i1* %2, align 1
  %129 = select i1 %.0..0..0.26, i32 -1733623518, i32 -315569119
  br label %.backedge

130:                                              ; preds = %17
  %.0..0..0.10 = load volatile i32*, i32** %6, align 8
  store i32 -1, i32* %.0..0..0.10, align 4
  br label %.backedge

131:                                              ; preds = %17
  br label %.backedge

132:                                              ; preds = %17
  %133 = call i32 @getchar()
  %134 = trunc i32 %133 to i8
  %.0..0..0.16 = load volatile i8*, i8** %5, align 8
  store i8 %134, i8* %.0..0..0.16, align 1
  br label %.backedge

135:                                              ; preds = %17
  br label %.backedge

136:                                              ; preds = %17
  %.0..0..0.17 = load volatile i8*, i8** %5, align 8
  %137 = load i8, i8* %.0..0..0.17, align 1
  %138 = icmp sgt i8 %137, 47
  %139 = select i1 %138, i32 1267724677, i32 1708262606
  br label %.backedge

140:                                              ; preds = %17
  %.0..0..0.18 = load volatile i8*, i8** %5, align 8
  %141 = load i8, i8* %.0..0..0.18, align 1
  %142 = icmp slt i8 %141, 58
  br label %.backedge

143:                                              ; preds = %17
  %144 = select i1 %.0, i32 -1907298565, i32 809876666
  br label %.backedge

145:                                              ; preds = %17
  %.0..0..0.5 = load volatile i32*, i32** %7, align 8
  %146 = load i32, i32* %.0..0..0.5, align 4
  %147 = shl i32 %146, 3
  %.0..0..0.6 = load volatile i32*, i32** %7, align 8
  %148 = load i32, i32* %.0..0..0.6, align 4
  %.neg.neg = shl i32 %148, 1
  %.0..0..0.19 = load volatile i8*, i8** %5, align 8
  %149 = load i8, i8* %.0..0..0.19, align 1
  %150 = sext i8 %149 to i32
  %151 = add i32 %147, -48
  %152 = add i32 %151, %.neg.neg
  %153 = add i32 %152, %150
  %.0..0..0.7 = load volatile i32*, i32** %7, align 8
  store i32 %153, i32* %.0..0..0.7, align 4
  br label %.backedge

154:                                              ; preds = %17
  %155 = call i32 @getchar()
  %156 = trunc i32 %155 to i8
  %.0..0..0.20 = load volatile i8*, i8** %5, align 8
  store i8 %156, i8* %.0..0..0.20, align 1
  br label %.backedge

157:                                              ; preds = %17
  %.0..0..0.8 = load volatile i32*, i32** %7, align 8
  %158 = load i32, i32* %.0..0..0.8, align 4
  %.0..0..0.11 = load volatile i32*, i32** %6, align 8
  %159 = load i32, i32* %.0..0..0.11, align 4
  %160 = mul nsw i32 %159, %158
  ret i32 %160

161:                                              ; preds = %17
  %162 = call i32 @getchar()
  br label %.backedge

163:                                              ; preds = %17
  %.0..0..0.21 = load volatile i8*, i8** %5, align 8
  br label %.backedge

164:                                              ; preds = %17
  %.0..0..0.22 = load volatile i8*, i8** %5, align 8
  br label %.backedge

165:                                              ; preds = %17
  br label %.backedge

166:                                              ; preds = %17
  %.0..0..0.23 = load volatile i8*, i8** %5, align 8
  br label %.backedge
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = load i64, i64* %0, align 8
  store i64 %5, i64* %4, align 8
  %6 = load i64, i64* %1, align 8
  store i64 %6, i64* %3, align 8
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.07.ph = phi i64* [ undef, %2 ], [ %.07.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ 1713685009, %2 ], [ 1873273744, %.outer.backedge ]
  br label %.outer9

.outer9:                                          ; preds = %.outer, %8
  %.0.ph10 = phi i32 [ %.0.ph, %.outer ], [ %10, %8 ]
  br label %7

7:                                                ; preds = %.outer9, %7
  switch i32 %.0.ph10, label %7 [
    i32 1713685009, label %8
    i32 1088599238, label %.outer.backedge
    i32 1504488630, label %11
    i32 1873273744, label %12
  ]

8:                                                ; preds = %7
  %.0..0..0.5 = load volatile i64, i64* %4, align 8
  %.0..0..0.6 = load volatile i64, i64* %3, align 8
  %9 = icmp slt i64 %.0..0..0.5, %.0..0..0.6
  %10 = select i1 %9, i32 1088599238, i32 1504488630
  br label %.outer9

11:                                               ; preds = %7
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %7, %11
  %.07.ph.be = phi i64* [ %0, %11 ], [ %1, %7 ]
  br label %.outer

12:                                               ; preds = %7
  ret i64* %.07.ph
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare noundef i32 @getchar() local_unnamed_addr #6

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s998349053.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
