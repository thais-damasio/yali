; ModuleID = 'build_ollvm/programs/p03833/s229382952.ll'
source_filename = "Project_CodeNet_C++1400/p03833/s229382952.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

$_ZSt3maxIxERKT_S2_S2_ = comdat any

@val = global [205 x [5005 x i32]] zeroinitializer, align 16
@st = local_unnamed_addr global [5005 x i32] zeroinitializer, align 16
@pre = local_unnamed_addr global [5005 x i32] zeroinitializer, align 16
@nxt = local_unnamed_addr global [5005 x i32] zeroinitializer, align 16
@ans = global i64 -1000000000000000000, align 8
@dis = local_unnamed_addr global [5005 x i64] zeroinitializer, align 16
@sum = local_unnamed_addr global [5005 x [5005 x i64]] zeroinitializer, align 16
@.str = private unnamed_addr constant [5 x i8] c"%d%d\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"%lld\0A\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0

; Function Attrs: noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i64*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i32*, align 8
  %16 = alloca i32*, align 8
  %17 = alloca i32*, align 8
  %18 = alloca i32*, align 8
  %19 = alloca i32*, align 8
  %20 = alloca i1, align 1
  %21 = alloca i1, align 1
  %22 = load i32, i32* @x, align 4
  %23 = load i32, i32* @y, align 4
  %24 = add i32 %22, -1
  %25 = mul i32 %24, %22
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  store i1 %27, i1* %21, align 1
  %28 = icmp slt i32 %23, 10
  store i1 %28, i1* %20, align 1
  br label %29

29:                                               ; preds = %.backedge, %0
  %.0159 = phi i32 [ 609552565, %0 ], [ %.0159.be, %.backedge ]
  %.0157 = phi i1 [ undef, %0 ], [ %.0157.be, %.backedge ]
  %.0155 = phi i32 [ undef, %0 ], [ %.0155.be, %.backedge ]
  %.0153 = phi i1 [ undef, %0 ], [ %.0153.be, %.backedge ]
  %.0 = phi i32 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0159, label %.backedge [
    i32 609552565, label %30
    i32 1441203288, label %33
    i32 1769466307, label %58
    i32 -156127108, label %59
    i32 1416976552, label %64
    i32 2130926608, label %77
    i32 331163416, label %87
    i32 -525197621, label %99
    i32 1949197627, label %100
    i32 1684080318, label %101
    i32 762902354, label %106
    i32 -971088221, label %107
    i32 -1018062482, label %112
    i32 -200652077, label %119
    i32 464577612, label %122
    i32 -1741809948, label %132
    i32 614296033, label %142
    i32 1640488010, label %143
    i32 -1882983713, label %146
    i32 1066773130, label %147
    i32 -188469837, label %152
    i32 2026313978, label %153
    i32 -208470860, label %158
    i32 -1159823492, label %168
    i32 1399396922, label %178
    i32 1627581919, label %179
    i32 -394589442, label %182
    i32 -461692343, label %192
    i32 1492734276, label %219
    i32 -2139468730, label %220
    i32 -1646779703, label %222
    i32 310946291, label %225
    i32 1802841505, label %228
    i32 1737123999, label %235
    i32 592888053, label %236
    i32 -925434476, label %245
    i32 -579934924, label %255
    i32 510094007, label %267
    i32 1075219512, label %268
    i32 476456568, label %271
    i32 -1661967687, label %275
    i32 111566668, label %276
    i32 784708613, label %279
    i32 1469311568, label %297
    i32 -412088344, label %299
    i32 -1059603622, label %302
    i32 250838296, label %305
    i32 873000595, label %312
    i32 -551031171, label %315
    i32 985565387, label %324
    i32 -1874415161, label %327
    i32 1974404550, label %328
    i32 -1505840765, label %338
    i32 -39505309, label %351
    i32 -151824148, label %353
    i32 -533140396, label %425
    i32 -574746485, label %428
    i32 -1726794952, label %438
    i32 800370736, label %448
    i32 329977031, label %449
    i32 1765107492, label %459
    i32 -1622072547, label %471
    i32 1112998866, label %472
    i32 -820324110, label %482
    i32 -1247492365, label %492
    i32 1224045856, label %493
    i32 466259406, label %503
    i32 797522453, label %516
    i32 1109306131, label %518
    i32 -1602672841, label %528
    i32 -1253595305, label %538
    i32 -351116963, label %539
    i32 -382479890, label %544
    i32 1153992317, label %554
    i32 -1951267512, label %566
    i32 1758724428, label %568
    i32 -165308784, label %583
    i32 -1878300641, label %586
    i32 1006307588, label %601
    i32 -663094856, label %604
    i32 895535710, label %614
    i32 -887937677, label %626
    i32 -1368872239, label %628
    i32 1507414740, label %644
    i32 -2025909239, label %648
    i32 -992517089, label %667
    i32 1240313391, label %668
    i32 -187732333, label %671
    i32 -1287987035, label %681
    i32 1718121678, label %691
    i32 2018743276, label %692
    i32 -1934810187, label %702
    i32 1704824481, label %714
    i32 86569334, label %715
    i32 1542194468, label %725
    i32 -1916775927, label %737
    i32 -1600584566, label %738
    i32 1596218107, label %742
    i32 -1996372094, label %744
    i32 -46565976, label %745
    i32 2027628488, label %746
    i32 -1911435166, label %747
    i32 550604870, label %750
    i32 -936826678, label %751
    i32 188617412, label %752
    i32 114215889, label %755
    i32 -104807858, label %756
    i32 1917863329, label %757
    i32 1383196579, label %758
    i32 47030013, label %759
    i32 -518912814, label %760
    i32 -316542559, label %761
    i32 -277127698, label %764
  ]

.backedge:                                        ; preds = %29, %764, %761, %760, %759, %758, %757, %756, %755, %752, %751, %750, %747, %746, %745, %744, %742, %738, %725, %715, %714, %702, %692, %691, %681, %671, %668, %667, %648, %644, %628, %626, %614, %604, %601, %586, %583, %568, %566, %554, %544, %539, %538, %528, %518, %516, %503, %493, %492, %482, %472, %471, %459, %449, %448, %438, %428, %425, %353, %351, %338, %328, %327, %324, %315, %312, %305, %302, %299, %297, %279, %276, %275, %271, %268, %267, %255, %245, %236, %235, %228, %225, %222, %220, %219, %192, %182, %179, %178, %168, %158, %153, %152, %147, %146, %143, %142, %132, %122, %119, %112, %107, %106, %101, %100, %99, %87, %77, %64, %59, %58, %33, %30
  %.0159.be = phi i32 [ %.0159, %29 ], [ 1542194468, %764 ], [ -1934810187, %761 ], [ -1287987035, %760 ], [ 895535710, %759 ], [ 1153992317, %758 ], [ -1602672841, %757 ], [ 466259406, %756 ], [ -820324110, %755 ], [ 1765107492, %752 ], [ -1726794952, %751 ], [ -1505840765, %750 ], [ -579934924, %747 ], [ -461692343, %746 ], [ -1159823492, %745 ], [ -1741809948, %744 ], [ 331163416, %742 ], [ 1441203288, %738 ], [ %736, %725 ], [ %724, %715 ], [ 1224045856, %714 ], [ %713, %702 ], [ %701, %692 ], [ 2018743276, %691 ], [ %690, %681 ], [ %680, %671 ], [ -351116963, %668 ], [ 1240313391, %667 ], [ -992517089, %648 ], [ %647, %644 ], [ 1507414740, %628 ], [ %627, %626 ], [ %625, %614 ], [ %613, %604 ], [ %603, %601 ], [ 1006307588, %586 ], [ %585, %583 ], [ -165308784, %568 ], [ %567, %566 ], [ %565, %554 ], [ %553, %544 ], [ %543, %539 ], [ -351116963, %538 ], [ %537, %528 ], [ %527, %518 ], [ %517, %516 ], [ %515, %503 ], [ %502, %493 ], [ 1224045856, %492 ], [ %491, %482 ], [ %481, %472 ], [ 1066773130, %471 ], [ %470, %459 ], [ %458, %449 ], [ 329977031, %448 ], [ %447, %438 ], [ %437, %428 ], [ 1974404550, %425 ], [ -533140396, %353 ], [ %352, %351 ], [ %350, %338 ], [ %337, %328 ], [ 1974404550, %327 ], [ 476456568, %324 ], [ 985565387, %315 ], [ -551031171, %312 ], [ -551031171, %305 ], [ %304, %302 ], [ 111566668, %299 ], [ %298, %297 ], [ 1469311568, %279 ], [ %278, %276 ], [ 111566668, %275 ], [ %274, %271 ], [ 476456568, %268 ], [ 2026313978, %267 ], [ %266, %255 ], [ %254, %245 ], [ -925434476, %236 ], [ 592888053, %235 ], [ 592888053, %228 ], [ %227, %225 ], [ 1627581919, %222 ], [ %221, %220 ], [ -2139468730, %219 ], [ %218, %192 ], [ %191, %182 ], [ %181, %179 ], [ 1627581919, %178 ], [ %177, %168 ], [ %167, %158 ], [ %157, %153 ], [ 2026313978, %152 ], [ %151, %147 ], [ 1066773130, %146 ], [ 1684080318, %143 ], [ 1640488010, %142 ], [ %141, %132 ], [ %131, %122 ], [ -971088221, %119 ], [ -200652077, %112 ], [ %111, %107 ], [ -971088221, %106 ], [ %105, %101 ], [ 1684080318, %100 ], [ -156127108, %99 ], [ %98, %87 ], [ %86, %77 ], [ 2130926608, %64 ], [ %63, %59 ], [ -156127108, %58 ], [ %57, %33 ], [ %32, %30 ]
  %.0157.be = phi i1 [ %.0157, %29 ], [ %.0157, %764 ], [ %.0157, %761 ], [ %.0157, %760 ], [ %.0157, %759 ], [ %.0157, %758 ], [ %.0157, %757 ], [ %.0157, %756 ], [ %.0157, %755 ], [ %.0157, %752 ], [ %.0157, %751 ], [ %.0157, %750 ], [ %.0157, %747 ], [ %.0157, %746 ], [ %.0157, %745 ], [ %.0157, %744 ], [ %.0157, %742 ], [ %.0157, %738 ], [ %.0157, %725 ], [ %.0157, %715 ], [ %.0157, %714 ], [ %.0157, %702 ], [ %.0157, %692 ], [ %.0157, %691 ], [ %.0157, %681 ], [ %.0157, %671 ], [ %.0157, %668 ], [ %.0157, %667 ], [ %.0157, %648 ], [ %.0157, %644 ], [ %.0157, %628 ], [ %.0157, %626 ], [ %.0157, %614 ], [ %.0157, %604 ], [ %.0157, %601 ], [ %.0157, %586 ], [ %.0157, %583 ], [ %.0157, %568 ], [ %.0157, %566 ], [ %.0157, %554 ], [ %.0157, %544 ], [ %.0157, %539 ], [ %.0157, %538 ], [ %.0157, %528 ], [ %.0157, %518 ], [ %.0157, %516 ], [ %.0157, %503 ], [ %.0157, %493 ], [ %.0157, %492 ], [ %.0157, %482 ], [ %.0157, %472 ], [ %.0157, %471 ], [ %.0157, %459 ], [ %.0157, %449 ], [ %.0157, %448 ], [ %.0157, %438 ], [ %.0157, %428 ], [ %.0157, %425 ], [ %.0157, %353 ], [ %.0157, %351 ], [ %.0157, %338 ], [ %.0157, %328 ], [ %.0157, %327 ], [ %.0157, %324 ], [ %.0157, %315 ], [ %.0157, %312 ], [ %.0157, %305 ], [ %.0157, %302 ], [ %.0157, %299 ], [ %.0157, %297 ], [ %.0157, %279 ], [ %.0157, %276 ], [ %.0157, %275 ], [ %.0157, %271 ], [ %.0157, %268 ], [ %.0157, %267 ], [ %.0157, %255 ], [ %.0157, %245 ], [ %.0157, %236 ], [ %.0157, %235 ], [ %.0157, %228 ], [ %.0157, %225 ], [ %.0157, %222 ], [ %.0157, %220 ], [ %.0..0..0.148, %219 ], [ %.0157, %192 ], [ %.0157, %182 ], [ false, %179 ], [ %.0157, %178 ], [ %.0157, %168 ], [ %.0157, %158 ], [ %.0157, %153 ], [ %.0157, %152 ], [ %.0157, %147 ], [ %.0157, %146 ], [ %.0157, %143 ], [ %.0157, %142 ], [ %.0157, %132 ], [ %.0157, %122 ], [ %.0157, %119 ], [ %.0157, %112 ], [ %.0157, %107 ], [ %.0157, %106 ], [ %.0157, %101 ], [ %.0157, %100 ], [ %.0157, %99 ], [ %.0157, %87 ], [ %.0157, %77 ], [ %.0157, %64 ], [ %.0157, %59 ], [ %.0157, %58 ], [ %.0157, %33 ], [ %.0157, %30 ]
  %.0155.be = phi i32 [ %.0155, %29 ], [ %.0155, %764 ], [ %.0155, %761 ], [ %.0155, %760 ], [ %.0155, %759 ], [ %.0155, %758 ], [ %.0155, %757 ], [ %.0155, %756 ], [ %.0155, %755 ], [ %.0155, %752 ], [ %.0155, %751 ], [ %.0155, %750 ], [ %.0155, %747 ], [ %.0155, %746 ], [ %.0155, %745 ], [ %.0155, %744 ], [ %.0155, %742 ], [ %.0155, %738 ], [ %.0155, %725 ], [ %.0155, %715 ], [ %.0155, %714 ], [ %.0155, %702 ], [ %.0155, %692 ], [ %.0155, %691 ], [ %.0155, %681 ], [ %.0155, %671 ], [ %.0155, %668 ], [ %.0155, %667 ], [ %.0155, %648 ], [ %.0155, %644 ], [ %.0155, %628 ], [ %.0155, %626 ], [ %.0155, %614 ], [ %.0155, %604 ], [ %.0155, %601 ], [ %.0155, %586 ], [ %.0155, %583 ], [ %.0155, %568 ], [ %.0155, %566 ], [ %.0155, %554 ], [ %.0155, %544 ], [ %.0155, %539 ], [ %.0155, %538 ], [ %.0155, %528 ], [ %.0155, %518 ], [ %.0155, %516 ], [ %.0155, %503 ], [ %.0155, %493 ], [ %.0155, %492 ], [ %.0155, %482 ], [ %.0155, %472 ], [ %.0155, %471 ], [ %.0155, %459 ], [ %.0155, %449 ], [ %.0155, %448 ], [ %.0155, %438 ], [ %.0155, %428 ], [ %.0155, %425 ], [ %.0155, %353 ], [ %.0155, %351 ], [ %.0155, %338 ], [ %.0155, %328 ], [ %.0155, %327 ], [ %.0155, %324 ], [ %.0155, %315 ], [ %.0155, %312 ], [ %.0155, %305 ], [ %.0155, %302 ], [ %.0155, %299 ], [ %.0155, %297 ], [ %.0155, %279 ], [ %.0155, %276 ], [ %.0155, %275 ], [ %.0155, %271 ], [ %.0155, %268 ], [ %.0155, %267 ], [ %.0155, %255 ], [ %.0155, %245 ], [ %.0155, %236 ], [ 0, %235 ], [ %234, %228 ], [ %.0155, %225 ], [ %.0155, %222 ], [ %.0155, %220 ], [ %.0155, %219 ], [ %.0155, %192 ], [ %.0155, %182 ], [ %.0155, %179 ], [ %.0155, %178 ], [ %.0155, %168 ], [ %.0155, %158 ], [ %.0155, %153 ], [ %.0155, %152 ], [ %.0155, %147 ], [ %.0155, %146 ], [ %.0155, %143 ], [ %.0155, %142 ], [ %.0155, %132 ], [ %.0155, %122 ], [ %.0155, %119 ], [ %.0155, %112 ], [ %.0155, %107 ], [ %.0155, %106 ], [ %.0155, %101 ], [ %.0155, %100 ], [ %.0155, %99 ], [ %.0155, %87 ], [ %.0155, %77 ], [ %.0155, %64 ], [ %.0155, %59 ], [ %.0155, %58 ], [ %.0155, %33 ], [ %.0155, %30 ]
  %.0153.be = phi i1 [ %.0153, %29 ], [ %.0153, %764 ], [ %.0153, %761 ], [ %.0153, %760 ], [ %.0153, %759 ], [ %.0153, %758 ], [ %.0153, %757 ], [ %.0153, %756 ], [ %.0153, %755 ], [ %.0153, %752 ], [ %.0153, %751 ], [ %.0153, %750 ], [ %.0153, %747 ], [ %.0153, %746 ], [ %.0153, %745 ], [ %.0153, %744 ], [ %.0153, %742 ], [ %.0153, %738 ], [ %.0153, %725 ], [ %.0153, %715 ], [ %.0153, %714 ], [ %.0153, %702 ], [ %.0153, %692 ], [ %.0153, %691 ], [ %.0153, %681 ], [ %.0153, %671 ], [ %.0153, %668 ], [ %.0153, %667 ], [ %.0153, %648 ], [ %.0153, %644 ], [ %.0153, %628 ], [ %.0153, %626 ], [ %.0153, %614 ], [ %.0153, %604 ], [ %.0153, %601 ], [ %.0153, %586 ], [ %.0153, %583 ], [ %.0153, %568 ], [ %.0153, %566 ], [ %.0153, %554 ], [ %.0153, %544 ], [ %.0153, %539 ], [ %.0153, %538 ], [ %.0153, %528 ], [ %.0153, %518 ], [ %.0153, %516 ], [ %.0153, %503 ], [ %.0153, %493 ], [ %.0153, %492 ], [ %.0153, %482 ], [ %.0153, %472 ], [ %.0153, %471 ], [ %.0153, %459 ], [ %.0153, %449 ], [ %.0153, %448 ], [ %.0153, %438 ], [ %.0153, %428 ], [ %.0153, %425 ], [ %.0153, %353 ], [ %.0153, %351 ], [ %.0153, %338 ], [ %.0153, %328 ], [ %.0153, %327 ], [ %.0153, %324 ], [ %.0153, %315 ], [ %.0153, %312 ], [ %.0153, %305 ], [ %.0153, %302 ], [ %.0153, %299 ], [ %.0153, %297 ], [ %296, %279 ], [ false, %276 ], [ %.0153, %275 ], [ %.0153, %271 ], [ %.0153, %268 ], [ %.0153, %267 ], [ %.0153, %255 ], [ %.0153, %245 ], [ %.0153, %236 ], [ %.0153, %235 ], [ %.0153, %228 ], [ %.0153, %225 ], [ %.0153, %222 ], [ %.0153, %220 ], [ %.0153, %219 ], [ %.0153, %192 ], [ %.0153, %182 ], [ %.0153, %179 ], [ %.0153, %178 ], [ %.0153, %168 ], [ %.0153, %158 ], [ %.0153, %153 ], [ %.0153, %152 ], [ %.0153, %147 ], [ %.0153, %146 ], [ %.0153, %143 ], [ %.0153, %142 ], [ %.0153, %132 ], [ %.0153, %122 ], [ %.0153, %119 ], [ %.0153, %112 ], [ %.0153, %107 ], [ %.0153, %106 ], [ %.0153, %101 ], [ %.0153, %100 ], [ %.0153, %99 ], [ %.0153, %87 ], [ %.0153, %77 ], [ %.0153, %64 ], [ %.0153, %59 ], [ %.0153, %58 ], [ %.0153, %33 ], [ %.0153, %30 ]
  %.0.be = phi i32 [ %.0, %29 ], [ %.0, %764 ], [ %.0, %761 ], [ %.0, %760 ], [ %.0, %759 ], [ %.0, %758 ], [ %.0, %757 ], [ %.0, %756 ], [ %.0, %755 ], [ %.0, %752 ], [ %.0, %751 ], [ %.0, %750 ], [ %.0, %747 ], [ %.0, %746 ], [ %.0, %745 ], [ %.0, %744 ], [ %.0, %742 ], [ %.0, %738 ], [ %.0, %725 ], [ %.0, %715 ], [ %.0, %714 ], [ %.0, %702 ], [ %.0, %692 ], [ %.0, %691 ], [ %.0, %681 ], [ %.0, %671 ], [ %.0, %668 ], [ %.0, %667 ], [ %.0, %648 ], [ %.0, %644 ], [ %.0, %628 ], [ %.0, %626 ], [ %.0, %614 ], [ %.0, %604 ], [ %.0, %601 ], [ %.0, %586 ], [ %.0, %583 ], [ %.0, %568 ], [ %.0, %566 ], [ %.0, %554 ], [ %.0, %544 ], [ %.0, %539 ], [ %.0, %538 ], [ %.0, %528 ], [ %.0, %518 ], [ %.0, %516 ], [ %.0, %503 ], [ %.0, %493 ], [ %.0, %492 ], [ %.0, %482 ], [ %.0, %472 ], [ %.0, %471 ], [ %.0, %459 ], [ %.0, %449 ], [ %.0, %448 ], [ %.0, %438 ], [ %.0, %428 ], [ %.0, %425 ], [ %.0, %353 ], [ %.0, %351 ], [ %.0, %338 ], [ %.0, %328 ], [ %.0, %327 ], [ %.0, %324 ], [ %.0, %315 ], [ %314, %312 ], [ %311, %305 ], [ %.0, %302 ], [ %.0, %299 ], [ %.0, %297 ], [ %.0, %279 ], [ %.0, %276 ], [ %.0, %275 ], [ %.0, %271 ], [ %.0, %268 ], [ %.0, %267 ], [ %.0, %255 ], [ %.0, %245 ], [ %.0, %236 ], [ %.0, %235 ], [ %.0, %228 ], [ %.0, %225 ], [ %.0, %222 ], [ %.0, %220 ], [ %.0, %219 ], [ %.0, %192 ], [ %.0, %182 ], [ %.0, %179 ], [ %.0, %178 ], [ %.0, %168 ], [ %.0, %158 ], [ %.0, %153 ], [ %.0, %152 ], [ %.0, %147 ], [ %.0, %146 ], [ %.0, %143 ], [ %.0, %142 ], [ %.0, %132 ], [ %.0, %122 ], [ %.0, %119 ], [ %.0, %112 ], [ %.0, %107 ], [ %.0, %106 ], [ %.0, %101 ], [ %.0, %100 ], [ %.0, %99 ], [ %.0, %87 ], [ %.0, %77 ], [ %.0, %64 ], [ %.0, %59 ], [ %.0, %58 ], [ %.0, %33 ], [ %.0, %30 ]
  br label %29

30:                                               ; preds = %29
  %.0..0..0.4 = load volatile i1, i1* %21, align 1
  %.0..0..0.5 = load volatile i1, i1* %20, align 1
  %31 = or i1 %.0..0..0.4, %.0..0..0.5
  %32 = select i1 %31, i32 1441203288, i32 -1600584566
  br label %.backedge

33:                                               ; preds = %29
  %34 = alloca i32, align 4
  store i32* %34, i32** %19, align 8
  %35 = alloca i32, align 4
  store i32* %35, i32** %18, align 8
  %36 = alloca i32, align 4
  store i32* %36, i32** %17, align 8
  %37 = alloca i32, align 4
  store i32* %37, i32** %16, align 8
  %38 = alloca i32, align 4
  store i32* %38, i32** %15, align 8
  %39 = alloca i32, align 4
  store i32* %39, i32** %14, align 8
  %40 = alloca i32, align 4
  store i32* %40, i32** %13, align 8
  %41 = alloca i32, align 4
  store i32* %41, i32** %12, align 8
  %42 = alloca i32, align 4
  store i32* %42, i32** %11, align 8
  %43 = alloca i32, align 4
  store i32* %43, i32** %10, align 8
  %44 = alloca i32, align 4
  store i32* %44, i32** %9, align 8
  %45 = alloca i32, align 4
  store i32* %45, i32** %8, align 8
  %46 = alloca i32, align 4
  store i32* %46, i32** %7, align 8
  %47 = alloca i64, align 8
  store i64* %47, i64** %6, align 8
  %.0..0..0.6 = load volatile i32*, i32** %19, align 8
  %.0..0..0.17 = load volatile i32*, i32** %18, align 8
  %48 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32* %.0..0..0.6, i32* %.0..0..0.17)
  %.0..0..0.20 = load volatile i32*, i32** %17, align 8
  store i32 1, i32* %.0..0..0.20, align 4
  %49 = load i32, i32* @x, align 4
  %50 = load i32, i32* @y, align 4
  %51 = add i32 %49, -1
  %52 = mul i32 %51, %49
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %55, %54
  %57 = select i1 %56, i32 1769466307, i32 -1600584566
  br label %.backedge

58:                                               ; preds = %29
  br label %.backedge

59:                                               ; preds = %29
  %.0..0..0.21 = load volatile i32*, i32** %17, align 8
  %60 = load i32, i32* %.0..0..0.21, align 4
  %.0..0..0.7 = load volatile i32*, i32** %19, align 8
  %61 = load i32, i32* %.0..0..0.7, align 4
  %62 = icmp slt i32 %60, %61
  %63 = select i1 %62, i32 1416976552, i32 1949197627
  br label %.backedge

64:                                               ; preds = %29
  %.0..0..0.28 = load volatile i32*, i32** %16, align 8
  %65 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32* %.0..0..0.28)
  %.0..0..0.22 = load volatile i32*, i32** %17, align 8
  %66 = load i32, i32* %.0..0..0.22, align 4
  %67 = add i32 %66, -1
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [5005 x i64], [5005 x i64]* @dis, i64 0, i64 %68
  %70 = load i64, i64* %69, align 8
  %.0..0..0.29 = load volatile i32*, i32** %16, align 8
  %71 = load i32, i32* %.0..0..0.29, align 4
  %72 = sext i32 %71 to i64
  %73 = add i64 %70, %72
  %.0..0..0.23 = load volatile i32*, i32** %17, align 8
  %74 = load i32, i32* %.0..0..0.23, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds [5005 x i64], [5005 x i64]* @dis, i64 0, i64 %75
  store i64 %73, i64* %76, align 8
  br label %.backedge

77:                                               ; preds = %29
  %78 = load i32, i32* @x, align 4
  %79 = load i32, i32* @y, align 4
  %80 = add i32 %78, -1
  %81 = mul i32 %80, %78
  %82 = and i32 %81, 1
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %84, %83
  %86 = select i1 %85, i32 331163416, i32 1596218107
  br label %.backedge

87:                                               ; preds = %29
  %.0..0..0.24 = load volatile i32*, i32** %17, align 8
  %88 = load i32, i32* %.0..0..0.24, align 4
  %89 = add i32 %88, 1
  %.0..0..0.25 = load volatile i32*, i32** %17, align 8
  store i32 %89, i32* %.0..0..0.25, align 4
  %90 = load i32, i32* @x, align 4
  %91 = load i32, i32* @y, align 4
  %92 = add i32 %90, -1
  %93 = mul i32 %92, %90
  %94 = and i32 %93, 1
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %96, %95
  %98 = select i1 %97, i32 -525197621, i32 1596218107
  br label %.backedge

99:                                               ; preds = %29
  br label %.backedge

100:                                              ; preds = %29
  %.0..0..0.30 = load volatile i32*, i32** %15, align 8
  store i32 0, i32* %.0..0..0.30, align 4
  br label %.backedge

101:                                              ; preds = %29
  %.0..0..0.31 = load volatile i32*, i32** %15, align 8
  %102 = load i32, i32* %.0..0..0.31, align 4
  %.0..0..0.8 = load volatile i32*, i32** %19, align 8
  %103 = load i32, i32* %.0..0..0.8, align 4
  %104 = icmp slt i32 %102, %103
  %105 = select i1 %104, i32 762902354, i32 -1882983713
  br label %.backedge

106:                                              ; preds = %29
  %.0..0..0.35 = load volatile i32*, i32** %14, align 8
  store i32 0, i32* %.0..0..0.35, align 4
  br label %.backedge

107:                                              ; preds = %29
  %.0..0..0.36 = load volatile i32*, i32** %14, align 8
  %108 = load i32, i32* %.0..0..0.36, align 4
  %.0..0..0.18 = load volatile i32*, i32** %18, align 8
  %109 = load i32, i32* %.0..0..0.18, align 4
  %110 = icmp slt i32 %108, %109
  %111 = select i1 %110, i32 -1018062482, i32 464577612
  br label %.backedge

112:                                              ; preds = %29
  %.0..0..0.37 = load volatile i32*, i32** %14, align 8
  %113 = load i32, i32* %.0..0..0.37, align 4
  %114 = sext i32 %113 to i64
  %.0..0..0.32 = load volatile i32*, i32** %15, align 8
  %115 = load i32, i32* %.0..0..0.32, align 4
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds [205 x [5005 x i32]], [205 x [5005 x i32]]* @val, i64 0, i64 %114, i64 %116
  %118 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %117)
  br label %.backedge

119:                                              ; preds = %29
  %.0..0..0.38 = load volatile i32*, i32** %14, align 8
  %120 = load i32, i32* %.0..0..0.38, align 4
  %121 = add i32 %120, 1
  %.0..0..0.39 = load volatile i32*, i32** %14, align 8
  store i32 %121, i32* %.0..0..0.39, align 4
  br label %.backedge

122:                                              ; preds = %29
  %123 = load i32, i32* @x, align 4
  %124 = load i32, i32* @y, align 4
  %125 = add i32 %123, -1
  %126 = mul i32 %125, %123
  %127 = and i32 %126, 1
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %129, %128
  %131 = select i1 %130, i32 -1741809948, i32 -1996372094
  br label %.backedge

132:                                              ; preds = %29
  %133 = load i32, i32* @x, align 4
  %134 = load i32, i32* @y, align 4
  %135 = add i32 %133, -1
  %136 = mul i32 %135, %133
  %137 = and i32 %136, 1
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %139, %138
  %141 = select i1 %140, i32 614296033, i32 -1996372094
  br label %.backedge

142:                                              ; preds = %29
  br label %.backedge

143:                                              ; preds = %29
  %.0..0..0.33 = load volatile i32*, i32** %15, align 8
  %144 = load i32, i32* %.0..0..0.33, align 4
  %145 = add i32 %144, 1
  %.0..0..0.34 = load volatile i32*, i32** %15, align 8
  store i32 %145, i32* %.0..0..0.34, align 4
  br label %.backedge

146:                                              ; preds = %29
  %.0..0..0.40 = load volatile i32*, i32** %13, align 8
  store i32 0, i32* %.0..0..0.40, align 4
  br label %.backedge

147:                                              ; preds = %29
  %.0..0..0.41 = load volatile i32*, i32** %13, align 8
  %148 = load i32, i32* %.0..0..0.41, align 4
  %.0..0..0.19 = load volatile i32*, i32** %18, align 8
  %149 = load i32, i32* %.0..0..0.19, align 4
  %150 = icmp slt i32 %148, %149
  %151 = select i1 %150, i32 -188469837, i32 1112998866
  br label %.backedge

152:                                              ; preds = %29
  %.0..0..0.56 = load volatile i32*, i32** %12, align 8
  store i32 0, i32* %.0..0..0.56, align 4
  %.0..0..0.75 = load volatile i32*, i32** %11, align 8
  store i32 0, i32* %.0..0..0.75, align 4
  br label %.backedge

153:                                              ; preds = %29
  %.0..0..0.76 = load volatile i32*, i32** %11, align 8
  %154 = load i32, i32* %.0..0..0.76, align 4
  %.0..0..0.9 = load volatile i32*, i32** %19, align 8
  %155 = load i32, i32* %.0..0..0.9, align 4
  %156 = icmp slt i32 %154, %155
  %157 = select i1 %156, i32 -208470860, i32 1075219512
  br label %.backedge

158:                                              ; preds = %29
  %159 = load i32, i32* @x, align 4
  %160 = load i32, i32* @y, align 4
  %161 = add i32 %159, -1
  %162 = mul i32 %161, %159
  %163 = and i32 %162, 1
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %165, %164
  %167 = select i1 %166, i32 -1159823492, i32 -46565976
  br label %.backedge

168:                                              ; preds = %29
  %169 = load i32, i32* @x, align 4
  %170 = load i32, i32* @y, align 4
  %171 = add i32 %169, -1
  %172 = mul i32 %171, %169
  %173 = and i32 %172, 1
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %175, %174
  %177 = select i1 %176, i32 1399396922, i32 -46565976
  br label %.backedge

178:                                              ; preds = %29
  br label %.backedge

179:                                              ; preds = %29
  %.0..0..0.57 = load volatile i32*, i32** %12, align 8
  %180 = load i32, i32* %.0..0..0.57, align 4
  %.not167 = icmp eq i32 %180, 0
  %181 = select i1 %.not167, i32 -2139468730, i32 -394589442
  br label %.backedge

182:                                              ; preds = %29
  %183 = load i32, i32* @x, align 4
  %184 = load i32, i32* @y, align 4
  %185 = add i32 %183, -1
  %186 = mul i32 %185, %183
  %187 = and i32 %186, 1
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %184, 10
  %190 = or i1 %189, %188
  %191 = select i1 %190, i32 -461692343, i32 2027628488
  br label %.backedge

192:                                              ; preds = %29
  %.0..0..0.42 = load volatile i32*, i32** %13, align 8
  %193 = load i32, i32* %.0..0..0.42, align 4
  %194 = sext i32 %193 to i64
  %.0..0..0.58 = load volatile i32*, i32** %12, align 8
  %195 = load i32, i32* %.0..0..0.58, align 4
  %196 = add i32 %195, -1
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds [5005 x i32], [5005 x i32]* @st, i64 0, i64 %197
  %199 = load i32, i32* %198, align 4
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds [205 x [5005 x i32]], [205 x [5005 x i32]]* @val, i64 0, i64 %194, i64 %200
  %202 = load i32, i32* %201, align 4
  %.0..0..0.43 = load volatile i32*, i32** %13, align 8
  %203 = load i32, i32* %.0..0..0.43, align 4
  %204 = sext i32 %203 to i64
  %.0..0..0.77 = load volatile i32*, i32** %11, align 8
  %205 = load i32, i32* %.0..0..0.77, align 4
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds [205 x [5005 x i32]], [205 x [5005 x i32]]* @val, i64 0, i64 %204, i64 %206
  %208 = load i32, i32* %207, align 4
  %209 = icmp slt i32 %202, %208
  store i1 %209, i1* %5, align 1
  %210 = load i32, i32* @x, align 4
  %211 = load i32, i32* @y, align 4
  %212 = add i32 %210, -1
  %213 = mul i32 %212, %210
  %214 = and i32 %213, 1
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %211, 10
  %217 = or i1 %216, %215
  %218 = select i1 %217, i32 1492734276, i32 2027628488
  br label %.backedge

219:                                              ; preds = %29
  %.0..0..0.148 = load volatile i1, i1* %5, align 1
  br label %.backedge

220:                                              ; preds = %29
  %221 = select i1 %.0157, i32 -1646779703, i32 310946291
  br label %.backedge

222:                                              ; preds = %29
  %.0..0..0.59 = load volatile i32*, i32** %12, align 8
  %223 = load i32, i32* %.0..0..0.59, align 4
  %224 = add i32 %223, -1
  %.0..0..0.60 = load volatile i32*, i32** %12, align 8
  store i32 %224, i32* %.0..0..0.60, align 4
  br label %.backedge

225:                                              ; preds = %29
  %.0..0..0.61 = load volatile i32*, i32** %12, align 8
  %226 = load i32, i32* %.0..0..0.61, align 4
  %.not166 = icmp eq i32 %226, 0
  %227 = select i1 %.not166, i32 1737123999, i32 1802841505
  br label %.backedge

228:                                              ; preds = %29
  %.0..0..0.62 = load volatile i32*, i32** %12, align 8
  %229 = load i32, i32* %.0..0..0.62, align 4
  %230 = add i32 %229, -1
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds [5005 x i32], [5005 x i32]* @st, i64 0, i64 %231
  %233 = load i32, i32* %232, align 4
  %234 = add i32 %233, 1
  br label %.backedge

235:                                              ; preds = %29
  br label %.backedge

236:                                              ; preds = %29
  %.0..0..0.78 = load volatile i32*, i32** %11, align 8
  %237 = load i32, i32* %.0..0..0.78, align 4
  %238 = sext i32 %237 to i64
  %239 = getelementptr inbounds [5005 x i32], [5005 x i32]* @pre, i64 0, i64 %238
  store i32 %.0155, i32* %239, align 4
  %.0..0..0.79 = load volatile i32*, i32** %11, align 8
  %240 = load i32, i32* %.0..0..0.79, align 4
  %.0..0..0.63 = load volatile i32*, i32** %12, align 8
  %241 = load i32, i32* %.0..0..0.63, align 4
  %242 = add i32 %241, 1
  %.0..0..0.64 = load volatile i32*, i32** %12, align 8
  store i32 %242, i32* %.0..0..0.64, align 4
  %243 = sext i32 %241 to i64
  %244 = getelementptr inbounds [5005 x i32], [5005 x i32]* @st, i64 0, i64 %243
  store i32 %240, i32* %244, align 4
  br label %.backedge

245:                                              ; preds = %29
  %246 = load i32, i32* @x, align 4
  %247 = load i32, i32* @y, align 4
  %248 = add i32 %246, -1
  %249 = mul i32 %248, %246
  %250 = and i32 %249, 1
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %252, %251
  %254 = select i1 %253, i32 -579934924, i32 -1911435166
  br label %.backedge

255:                                              ; preds = %29
  %.0..0..0.80 = load volatile i32*, i32** %11, align 8
  %256 = load i32, i32* %.0..0..0.80, align 4
  %257 = add i32 %256, 1
  %.0..0..0.81 = load volatile i32*, i32** %11, align 8
  store i32 %257, i32* %.0..0..0.81, align 4
  %258 = load i32, i32* @x, align 4
  %259 = load i32, i32* @y, align 4
  %260 = add i32 %258, -1
  %261 = mul i32 %260, %258
  %262 = and i32 %261, 1
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %264, %263
  %266 = select i1 %265, i32 510094007, i32 -1911435166
  br label %.backedge

267:                                              ; preds = %29
  br label %.backedge

268:                                              ; preds = %29
  %.0..0..0.65 = load volatile i32*, i32** %12, align 8
  store i32 0, i32* %.0..0..0.65, align 4
  %.0..0..0.10 = load volatile i32*, i32** %19, align 8
  %269 = load i32, i32* %.0..0..0.10, align 4
  %270 = add i32 %269, -1
  %.0..0..0.85 = load volatile i32*, i32** %10, align 8
  store i32 %270, i32* %.0..0..0.85, align 4
  br label %.backedge

271:                                              ; preds = %29
  %.0..0..0.86 = load volatile i32*, i32** %10, align 8
  %272 = load i32, i32* %.0..0..0.86, align 4
  %273 = icmp sgt i32 %272, -1
  %274 = select i1 %273, i32 -1661967687, i32 -1874415161
  br label %.backedge

275:                                              ; preds = %29
  br label %.backedge

276:                                              ; preds = %29
  %.0..0..0.66 = load volatile i32*, i32** %12, align 8
  %277 = load i32, i32* %.0..0..0.66, align 4
  %.not165 = icmp eq i32 %277, 0
  %278 = select i1 %.not165, i32 1469311568, i32 784708613
  br label %.backedge

279:                                              ; preds = %29
  %.0..0..0.44 = load volatile i32*, i32** %13, align 8
  %280 = load i32, i32* %.0..0..0.44, align 4
  %281 = sext i32 %280 to i64
  %.0..0..0.67 = load volatile i32*, i32** %12, align 8
  %282 = load i32, i32* %.0..0..0.67, align 4
  %283 = add i32 %282, -1
  %284 = sext i32 %283 to i64
  %285 = getelementptr inbounds [5005 x i32], [5005 x i32]* @st, i64 0, i64 %284
  %286 = load i32, i32* %285, align 4
  %287 = sext i32 %286 to i64
  %288 = getelementptr inbounds [205 x [5005 x i32]], [205 x [5005 x i32]]* @val, i64 0, i64 %281, i64 %287
  %289 = load i32, i32* %288, align 4
  %.0..0..0.45 = load volatile i32*, i32** %13, align 8
  %290 = load i32, i32* %.0..0..0.45, align 4
  %291 = sext i32 %290 to i64
  %.0..0..0.87 = load volatile i32*, i32** %10, align 8
  %292 = load i32, i32* %.0..0..0.87, align 4
  %293 = sext i32 %292 to i64
  %294 = getelementptr inbounds [205 x [5005 x i32]], [205 x [5005 x i32]]* @val, i64 0, i64 %291, i64 %293
  %295 = load i32, i32* %294, align 4
  %296 = icmp slt i32 %289, %295
  br label %.backedge

297:                                              ; preds = %29
  %298 = select i1 %.0153, i32 -412088344, i32 -1059603622
  br label %.backedge

299:                                              ; preds = %29
  %.0..0..0.68 = load volatile i32*, i32** %12, align 8
  %300 = load i32, i32* %.0..0..0.68, align 4
  %301 = add i32 %300, -1
  %.0..0..0.69 = load volatile i32*, i32** %12, align 8
  store i32 %301, i32* %.0..0..0.69, align 4
  br label %.backedge

302:                                              ; preds = %29
  %.0..0..0.70 = load volatile i32*, i32** %12, align 8
  %303 = load i32, i32* %.0..0..0.70, align 4
  %.not164 = icmp eq i32 %303, 0
  %304 = select i1 %.not164, i32 873000595, i32 250838296
  br label %.backedge

305:                                              ; preds = %29
  %.0..0..0.71 = load volatile i32*, i32** %12, align 8
  %306 = load i32, i32* %.0..0..0.71, align 4
  %307 = add i32 %306, -1
  %308 = sext i32 %307 to i64
  %309 = getelementptr inbounds [5005 x i32], [5005 x i32]* @st, i64 0, i64 %308
  %310 = load i32, i32* %309, align 4
  %311 = add i32 %310, -1
  br label %.backedge

312:                                              ; preds = %29
  %.0..0..0.11 = load volatile i32*, i32** %19, align 8
  %313 = load i32, i32* %.0..0..0.11, align 4
  %314 = add i32 %313, -1
  br label %.backedge

315:                                              ; preds = %29
  %.0..0..0.88 = load volatile i32*, i32** %10, align 8
  %316 = load i32, i32* %.0..0..0.88, align 4
  %317 = sext i32 %316 to i64
  %318 = getelementptr inbounds [5005 x i32], [5005 x i32]* @nxt, i64 0, i64 %317
  store i32 %.0, i32* %318, align 4
  %.0..0..0.89 = load volatile i32*, i32** %10, align 8
  %319 = load i32, i32* %.0..0..0.89, align 4
  %.0..0..0.72 = load volatile i32*, i32** %12, align 8
  %320 = load i32, i32* %.0..0..0.72, align 4
  %321 = add i32 %320, 1
  %.0..0..0.73 = load volatile i32*, i32** %12, align 8
  store i32 %321, i32* %.0..0..0.73, align 4
  %322 = sext i32 %320 to i64
  %323 = getelementptr inbounds [5005 x i32], [5005 x i32]* @st, i64 0, i64 %322
  store i32 %319, i32* %323, align 4
  br label %.backedge

324:                                              ; preds = %29
  %.0..0..0.90 = load volatile i32*, i32** %10, align 8
  %325 = load i32, i32* %.0..0..0.90, align 4
  %326 = add i32 %325, -1
  %.0..0..0.91 = load volatile i32*, i32** %10, align 8
  store i32 %326, i32* %.0..0..0.91, align 4
  br label %.backedge

327:                                              ; preds = %29
  %.0..0..0.92 = load volatile i32*, i32** %9, align 8
  store i32 0, i32* %.0..0..0.92, align 4
  br label %.backedge

328:                                              ; preds = %29
  %329 = load i32, i32* @x, align 4
  %330 = load i32, i32* @y, align 4
  %331 = add i32 %329, -1
  %332 = mul i32 %331, %329
  %333 = and i32 %332, 1
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %330, 10
  %336 = or i1 %335, %334
  %337 = select i1 %336, i32 -1505840765, i32 550604870
  br label %.backedge

338:                                              ; preds = %29
  %.0..0..0.93 = load volatile i32*, i32** %9, align 8
  %339 = load i32, i32* %.0..0..0.93, align 4
  %.0..0..0.12 = load volatile i32*, i32** %19, align 8
  %340 = load i32, i32* %.0..0..0.12, align 4
  %341 = icmp slt i32 %339, %340
  store i1 %341, i1* %4, align 1
  %342 = load i32, i32* @x, align 4
  %343 = load i32, i32* @y, align 4
  %344 = add i32 %342, -1
  %345 = mul i32 %344, %342
  %346 = and i32 %345, 1
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %343, 10
  %349 = or i1 %348, %347
  %350 = select i1 %349, i32 -39505309, i32 550604870
  br label %.backedge

351:                                              ; preds = %29
  %.0..0..0.149 = load volatile i1, i1* %4, align 1
  %352 = select i1 %.0..0..0.149, i32 -151824148, i32 -574746485
  br label %.backedge

353:                                              ; preds = %29
  %.0..0..0.46 = load volatile i32*, i32** %13, align 8
  %354 = load i32, i32* %.0..0..0.46, align 4
  %355 = sext i32 %354 to i64
  %.0..0..0.94 = load volatile i32*, i32** %9, align 8
  %356 = load i32, i32* %.0..0..0.94, align 4
  %357 = sext i32 %356 to i64
  %358 = getelementptr inbounds [205 x [5005 x i32]], [205 x [5005 x i32]]* @val, i64 0, i64 %355, i64 %357
  %359 = load i32, i32* %358, align 4
  %360 = sext i32 %359 to i64
  %.0..0..0.95 = load volatile i32*, i32** %9, align 8
  %361 = load i32, i32* %.0..0..0.95, align 4
  %362 = sext i32 %361 to i64
  %363 = getelementptr inbounds [5005 x i32], [5005 x i32]* @pre, i64 0, i64 %362
  %364 = load i32, i32* %363, align 4
  %365 = sext i32 %364 to i64
  %.0..0..0.96 = load volatile i32*, i32** %9, align 8
  %366 = load i32, i32* %.0..0..0.96, align 4
  %367 = sext i32 %366 to i64
  %368 = getelementptr inbounds [5005 x [5005 x i64]], [5005 x [5005 x i64]]* @sum, i64 0, i64 %365, i64 %367
  %369 = load i64, i64* %368, align 8
  %370 = add i64 %369, %360
  store i64 %370, i64* %368, align 8
  %.0..0..0.47 = load volatile i32*, i32** %13, align 8
  %371 = load i32, i32* %.0..0..0.47, align 4
  %372 = sext i32 %371 to i64
  %.0..0..0.97 = load volatile i32*, i32** %9, align 8
  %373 = load i32, i32* %.0..0..0.97, align 4
  %374 = sext i32 %373 to i64
  %375 = getelementptr inbounds [205 x [5005 x i32]], [205 x [5005 x i32]]* @val, i64 0, i64 %372, i64 %374
  %376 = load i32, i32* %375, align 4
  %377 = sext i32 %376 to i64
  %.0..0..0.98 = load volatile i32*, i32** %9, align 8
  %378 = load i32, i32* %.0..0..0.98, align 4
  %379 = add i32 %378, 1
  %380 = sext i32 %379 to i64
  %.0..0..0.99 = load volatile i32*, i32** %9, align 8
  %381 = load i32, i32* %.0..0..0.99, align 4
  %382 = sext i32 %381 to i64
  %383 = getelementptr inbounds [5005 x [5005 x i64]], [5005 x [5005 x i64]]* @sum, i64 0, i64 %380, i64 %382
  %384 = load i64, i64* %383, align 8
  %385 = sub i64 %384, %377
  store i64 %385, i64* %383, align 8
  %.0..0..0.48 = load volatile i32*, i32** %13, align 8
  %386 = load i32, i32* %.0..0..0.48, align 4
  %387 = sext i32 %386 to i64
  %.0..0..0.100 = load volatile i32*, i32** %9, align 8
  %388 = load i32, i32* %.0..0..0.100, align 4
  %389 = sext i32 %388 to i64
  %390 = getelementptr inbounds [205 x [5005 x i32]], [205 x [5005 x i32]]* @val, i64 0, i64 %387, i64 %389
  %391 = load i32, i32* %390, align 4
  %392 = sext i32 %391 to i64
  %.0..0..0.101 = load volatile i32*, i32** %9, align 8
  %393 = load i32, i32* %.0..0..0.101, align 4
  %394 = sext i32 %393 to i64
  %395 = getelementptr inbounds [5005 x i32], [5005 x i32]* @pre, i64 0, i64 %394
  %396 = load i32, i32* %395, align 4
  %397 = sext i32 %396 to i64
  %.0..0..0.102 = load volatile i32*, i32** %9, align 8
  %398 = load i32, i32* %.0..0..0.102, align 4
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds [5005 x i32], [5005 x i32]* @nxt, i64 0, i64 %399
  %401 = load i32, i32* %400, align 4
  %402 = add i32 %401, 1
  %403 = sext i32 %402 to i64
  %404 = getelementptr inbounds [5005 x [5005 x i64]], [5005 x [5005 x i64]]* @sum, i64 0, i64 %397, i64 %403
  %405 = load i64, i64* %404, align 8
  %406 = sub i64 %405, %392
  store i64 %406, i64* %404, align 8
  %.0..0..0.49 = load volatile i32*, i32** %13, align 8
  %407 = load i32, i32* %.0..0..0.49, align 4
  %408 = sext i32 %407 to i64
  %.0..0..0.103 = load volatile i32*, i32** %9, align 8
  %409 = load i32, i32* %.0..0..0.103, align 4
  %410 = sext i32 %409 to i64
  %411 = getelementptr inbounds [205 x [5005 x i32]], [205 x [5005 x i32]]* @val, i64 0, i64 %408, i64 %410
  %412 = load i32, i32* %411, align 4
  %413 = sext i32 %412 to i64
  %.0..0..0.104 = load volatile i32*, i32** %9, align 8
  %414 = load i32, i32* %.0..0..0.104, align 4
  %.neg163 = add i32 %414, 1
  %415 = sext i32 %.neg163 to i64
  %.0..0..0.105 = load volatile i32*, i32** %9, align 8
  %416 = load i32, i32* %.0..0..0.105, align 4
  %417 = sext i32 %416 to i64
  %418 = getelementptr inbounds [5005 x i32], [5005 x i32]* @nxt, i64 0, i64 %417
  %419 = load i32, i32* %418, align 4
  %420 = add i32 %419, 1
  %421 = sext i32 %420 to i64
  %422 = getelementptr inbounds [5005 x [5005 x i64]], [5005 x [5005 x i64]]* @sum, i64 0, i64 %415, i64 %421
  %423 = load i64, i64* %422, align 8
  %424 = add i64 %423, %413
  store i64 %424, i64* %422, align 8
  br label %.backedge

425:                                              ; preds = %29
  %.0..0..0.106 = load volatile i32*, i32** %9, align 8
  %426 = load i32, i32* %.0..0..0.106, align 4
  %427 = add i32 %426, 1
  %.0..0..0.107 = load volatile i32*, i32** %9, align 8
  store i32 %427, i32* %.0..0..0.107, align 4
  br label %.backedge

428:                                              ; preds = %29
  %429 = load i32, i32* @x, align 4
  %430 = load i32, i32* @y, align 4
  %431 = add i32 %429, -1
  %432 = mul i32 %431, %429
  %433 = and i32 %432, 1
  %434 = icmp eq i32 %433, 0
  %435 = icmp slt i32 %430, 10
  %436 = or i1 %435, %434
  %437 = select i1 %436, i32 -1726794952, i32 -936826678
  br label %.backedge

438:                                              ; preds = %29
  %439 = load i32, i32* @x, align 4
  %440 = load i32, i32* @y, align 4
  %441 = add i32 %439, -1
  %442 = mul i32 %441, %439
  %443 = and i32 %442, 1
  %444 = icmp eq i32 %443, 0
  %445 = icmp slt i32 %440, 10
  %446 = or i1 %445, %444
  %447 = select i1 %446, i32 800370736, i32 -936826678
  br label %.backedge

448:                                              ; preds = %29
  br label %.backedge

449:                                              ; preds = %29
  %450 = load i32, i32* @x, align 4
  %451 = load i32, i32* @y, align 4
  %452 = add i32 %450, -1
  %453 = mul i32 %452, %450
  %454 = and i32 %453, 1
  %455 = icmp eq i32 %454, 0
  %456 = icmp slt i32 %451, 10
  %457 = or i1 %456, %455
  %458 = select i1 %457, i32 1765107492, i32 188617412
  br label %.backedge

459:                                              ; preds = %29
  %.0..0..0.50 = load volatile i32*, i32** %13, align 8
  %460 = load i32, i32* %.0..0..0.50, align 4
  %461 = add i32 %460, 1
  %.0..0..0.51 = load volatile i32*, i32** %13, align 8
  store i32 %461, i32* %.0..0..0.51, align 4
  %462 = load i32, i32* @x, align 4
  %463 = load i32, i32* @y, align 4
  %464 = add i32 %462, -1
  %465 = mul i32 %464, %462
  %466 = and i32 %465, 1
  %467 = icmp eq i32 %466, 0
  %468 = icmp slt i32 %463, 10
  %469 = or i1 %468, %467
  %470 = select i1 %469, i32 -1622072547, i32 188617412
  br label %.backedge

471:                                              ; preds = %29
  br label %.backedge

472:                                              ; preds = %29
  %473 = load i32, i32* @x, align 4
  %474 = load i32, i32* @y, align 4
  %475 = add i32 %473, -1
  %476 = mul i32 %475, %473
  %477 = and i32 %476, 1
  %478 = icmp eq i32 %477, 0
  %479 = icmp slt i32 %474, 10
  %480 = or i1 %479, %478
  %481 = select i1 %480, i32 -820324110, i32 114215889
  br label %.backedge

482:                                              ; preds = %29
  %.0..0..0.109 = load volatile i32*, i32** %8, align 8
  store i32 0, i32* %.0..0..0.109, align 4
  %483 = load i32, i32* @x, align 4
  %484 = load i32, i32* @y, align 4
  %485 = add i32 %483, -1
  %486 = mul i32 %485, %483
  %487 = and i32 %486, 1
  %488 = icmp eq i32 %487, 0
  %489 = icmp slt i32 %484, 10
  %490 = or i1 %489, %488
  %491 = select i1 %490, i32 -1247492365, i32 114215889
  br label %.backedge

492:                                              ; preds = %29
  br label %.backedge

493:                                              ; preds = %29
  %494 = load i32, i32* @x, align 4
  %495 = load i32, i32* @y, align 4
  %496 = add i32 %494, -1
  %497 = mul i32 %496, %494
  %498 = and i32 %497, 1
  %499 = icmp eq i32 %498, 0
  %500 = icmp slt i32 %495, 10
  %501 = or i1 %500, %499
  %502 = select i1 %501, i32 466259406, i32 -104807858
  br label %.backedge

503:                                              ; preds = %29
  %.0..0..0.110 = load volatile i32*, i32** %8, align 8
  %504 = load i32, i32* %.0..0..0.110, align 4
  %.0..0..0.13 = load volatile i32*, i32** %19, align 8
  %505 = load i32, i32* %.0..0..0.13, align 4
  %506 = icmp slt i32 %504, %505
  store i1 %506, i1* %3, align 1
  %507 = load i32, i32* @x, align 4
  %508 = load i32, i32* @y, align 4
  %509 = add i32 %507, -1
  %510 = mul i32 %509, %507
  %511 = and i32 %510, 1
  %512 = icmp eq i32 %511, 0
  %513 = icmp slt i32 %508, 10
  %514 = or i1 %513, %512
  %515 = select i1 %514, i32 797522453, i32 -104807858
  br label %.backedge

516:                                              ; preds = %29
  %.0..0..0.150 = load volatile i1, i1* %3, align 1
  %517 = select i1 %.0..0..0.150, i32 1109306131, i32 86569334
  br label %.backedge

518:                                              ; preds = %29
  %519 = load i32, i32* @x, align 4
  %520 = load i32, i32* @y, align 4
  %521 = add i32 %519, -1
  %522 = mul i32 %521, %519
  %523 = and i32 %522, 1
  %524 = icmp eq i32 %523, 0
  %525 = icmp slt i32 %520, 10
  %526 = or i1 %525, %524
  %527 = select i1 %526, i32 -1602672841, i32 1917863329
  br label %.backedge

528:                                              ; preds = %29
  %.0..0..0.129 = load volatile i32*, i32** %7, align 8
  store i32 0, i32* %.0..0..0.129, align 4
  %529 = load i32, i32* @x, align 4
  %530 = load i32, i32* @y, align 4
  %531 = add i32 %529, -1
  %532 = mul i32 %531, %529
  %533 = and i32 %532, 1
  %534 = icmp eq i32 %533, 0
  %535 = icmp slt i32 %530, 10
  %536 = or i1 %535, %534
  %537 = select i1 %536, i32 -1253595305, i32 1917863329
  br label %.backedge

538:                                              ; preds = %29
  br label %.backedge

539:                                              ; preds = %29
  %.0..0..0.130 = load volatile i32*, i32** %7, align 8
  %540 = load i32, i32* %.0..0..0.130, align 4
  %.0..0..0.14 = load volatile i32*, i32** %19, align 8
  %541 = load i32, i32* %.0..0..0.14, align 4
  %542 = icmp slt i32 %540, %541
  %543 = select i1 %542, i32 -382479890, i32 -187732333
  br label %.backedge

544:                                              ; preds = %29
  %545 = load i32, i32* @x, align 4
  %546 = load i32, i32* @y, align 4
  %547 = add i32 %545, -1
  %548 = mul i32 %547, %545
  %549 = and i32 %548, 1
  %550 = icmp eq i32 %549, 0
  %551 = icmp slt i32 %546, 10
  %552 = or i1 %551, %550
  %553 = select i1 %552, i32 1153992317, i32 1383196579
  br label %.backedge

554:                                              ; preds = %29
  %.0..0..0.111 = load volatile i32*, i32** %8, align 8
  %555 = load i32, i32* %.0..0..0.111, align 4
  %556 = icmp ne i32 %555, 0
  store i1 %556, i1* %2, align 1
  %557 = load i32, i32* @x, align 4
  %558 = load i32, i32* @y, align 4
  %559 = add i32 %557, -1
  %560 = mul i32 %559, %557
  %561 = and i32 %560, 1
  %562 = icmp eq i32 %561, 0
  %563 = icmp slt i32 %558, 10
  %564 = or i1 %563, %562
  %565 = select i1 %564, i32 -1951267512, i32 1383196579
  br label %.backedge

566:                                              ; preds = %29
  %.0..0..0.151 = load volatile i1, i1* %2, align 1
  %567 = select i1 %.0..0..0.151, i32 1758724428, i32 -165308784
  br label %.backedge

568:                                              ; preds = %29
  %.0..0..0.112 = load volatile i32*, i32** %8, align 8
  %569 = load i32, i32* %.0..0..0.112, align 4
  %570 = add i32 %569, -1
  %571 = sext i32 %570 to i64
  %.0..0..0.131 = load volatile i32*, i32** %7, align 8
  %572 = load i32, i32* %.0..0..0.131, align 4
  %573 = sext i32 %572 to i64
  %574 = getelementptr inbounds [5005 x [5005 x i64]], [5005 x [5005 x i64]]* @sum, i64 0, i64 %571, i64 %573
  %575 = load i64, i64* %574, align 8
  %.0..0..0.113 = load volatile i32*, i32** %8, align 8
  %576 = load i32, i32* %.0..0..0.113, align 4
  %577 = sext i32 %576 to i64
  %.0..0..0.132 = load volatile i32*, i32** %7, align 8
  %578 = load i32, i32* %.0..0..0.132, align 4
  %579 = sext i32 %578 to i64
  %580 = getelementptr inbounds [5005 x [5005 x i64]], [5005 x [5005 x i64]]* @sum, i64 0, i64 %577, i64 %579
  %581 = load i64, i64* %580, align 8
  %582 = add i64 %581, %575
  store i64 %582, i64* %580, align 8
  br label %.backedge

583:                                              ; preds = %29
  %.0..0..0.133 = load volatile i32*, i32** %7, align 8
  %584 = load i32, i32* %.0..0..0.133, align 4
  %.not162 = icmp eq i32 %584, 0
  %585 = select i1 %.not162, i32 1006307588, i32 -1878300641
  br label %.backedge

586:                                              ; preds = %29
  %.0..0..0.114 = load volatile i32*, i32** %8, align 8
  %587 = load i32, i32* %.0..0..0.114, align 4
  %588 = sext i32 %587 to i64
  %.0..0..0.134 = load volatile i32*, i32** %7, align 8
  %589 = load i32, i32* %.0..0..0.134, align 4
  %590 = add i32 %589, -1
  %591 = sext i32 %590 to i64
  %592 = getelementptr inbounds [5005 x [5005 x i64]], [5005 x [5005 x i64]]* @sum, i64 0, i64 %588, i64 %591
  %593 = load i64, i64* %592, align 8
  %.0..0..0.115 = load volatile i32*, i32** %8, align 8
  %594 = load i32, i32* %.0..0..0.115, align 4
  %595 = sext i32 %594 to i64
  %.0..0..0.135 = load volatile i32*, i32** %7, align 8
  %596 = load i32, i32* %.0..0..0.135, align 4
  %597 = sext i32 %596 to i64
  %598 = getelementptr inbounds [5005 x [5005 x i64]], [5005 x [5005 x i64]]* @sum, i64 0, i64 %595, i64 %597
  %599 = load i64, i64* %598, align 8
  %600 = add i64 %599, %593
  store i64 %600, i64* %598, align 8
  br label %.backedge

601:                                              ; preds = %29
  %.0..0..0.116 = load volatile i32*, i32** %8, align 8
  %602 = load i32, i32* %.0..0..0.116, align 4
  %.not161 = icmp eq i32 %602, 0
  %603 = select i1 %.not161, i32 1507414740, i32 -663094856
  br label %.backedge

604:                                              ; preds = %29
  %605 = load i32, i32* @x, align 4
  %606 = load i32, i32* @y, align 4
  %607 = add i32 %605, -1
  %608 = mul i32 %607, %605
  %609 = and i32 %608, 1
  %610 = icmp eq i32 %609, 0
  %611 = icmp slt i32 %606, 10
  %612 = or i1 %611, %610
  %613 = select i1 %612, i32 895535710, i32 47030013
  br label %.backedge

614:                                              ; preds = %29
  %.0..0..0.136 = load volatile i32*, i32** %7, align 8
  %615 = load i32, i32* %.0..0..0.136, align 4
  %616 = icmp ne i32 %615, 0
  store i1 %616, i1* %1, align 1
  %617 = load i32, i32* @x, align 4
  %618 = load i32, i32* @y, align 4
  %619 = add i32 %617, -1
  %620 = mul i32 %619, %617
  %621 = and i32 %620, 1
  %622 = icmp eq i32 %621, 0
  %623 = icmp slt i32 %618, 10
  %624 = or i1 %623, %622
  %625 = select i1 %624, i32 -887937677, i32 47030013
  br label %.backedge

626:                                              ; preds = %29
  %.0..0..0.152 = load volatile i1, i1* %1, align 1
  %627 = select i1 %.0..0..0.152, i32 -1368872239, i32 1507414740
  br label %.backedge

628:                                              ; preds = %29
  %.0..0..0.117 = load volatile i32*, i32** %8, align 8
  %629 = load i32, i32* %.0..0..0.117, align 4
  %630 = add i32 %629, -1
  %631 = sext i32 %630 to i64
  %.0..0..0.137 = load volatile i32*, i32** %7, align 8
  %632 = load i32, i32* %.0..0..0.137, align 4
  %633 = add i32 %632, -1
  %634 = sext i32 %633 to i64
  %635 = getelementptr inbounds [5005 x [5005 x i64]], [5005 x [5005 x i64]]* @sum, i64 0, i64 %631, i64 %634
  %636 = load i64, i64* %635, align 8
  %.0..0..0.118 = load volatile i32*, i32** %8, align 8
  %637 = load i32, i32* %.0..0..0.118, align 4
  %638 = sext i32 %637 to i64
  %.0..0..0.138 = load volatile i32*, i32** %7, align 8
  %639 = load i32, i32* %.0..0..0.138, align 4
  %640 = sext i32 %639 to i64
  %641 = getelementptr inbounds [5005 x [5005 x i64]], [5005 x [5005 x i64]]* @sum, i64 0, i64 %638, i64 %640
  %642 = load i64, i64* %641, align 8
  %643 = sub i64 %642, %636
  store i64 %643, i64* %641, align 8
  br label %.backedge

644:                                              ; preds = %29
  %.0..0..0.119 = load volatile i32*, i32** %8, align 8
  %645 = load i32, i32* %.0..0..0.119, align 4
  %.0..0..0.139 = load volatile i32*, i32** %7, align 8
  %646 = load i32, i32* %.0..0..0.139, align 4
  %.not = icmp sgt i32 %645, %646
  %647 = select i1 %.not, i32 -992517089, i32 -2025909239
  br label %.backedge

648:                                              ; preds = %29
  %.0..0..0.120 = load volatile i32*, i32** %8, align 8
  %649 = load i32, i32* %.0..0..0.120, align 4
  %650 = sext i32 %649 to i64
  %.0..0..0.140 = load volatile i32*, i32** %7, align 8
  %651 = load i32, i32* %.0..0..0.140, align 4
  %652 = sext i32 %651 to i64
  %653 = getelementptr inbounds [5005 x [5005 x i64]], [5005 x [5005 x i64]]* @sum, i64 0, i64 %650, i64 %652
  %654 = load i64, i64* %653, align 8
  %.0..0..0.141 = load volatile i32*, i32** %7, align 8
  %655 = load i32, i32* %.0..0..0.141, align 4
  %656 = sext i32 %655 to i64
  %657 = getelementptr inbounds [5005 x i64], [5005 x i64]* @dis, i64 0, i64 %656
  %658 = load i64, i64* %657, align 8
  %659 = sub i64 %654, %658
  %.0..0..0.121 = load volatile i32*, i32** %8, align 8
  %660 = load i32, i32* %.0..0..0.121, align 4
  %661 = sext i32 %660 to i64
  %662 = getelementptr inbounds [5005 x i64], [5005 x i64]* @dis, i64 0, i64 %661
  %663 = load i64, i64* %662, align 8
  %664 = add i64 %659, %663
  %.0..0..0.146 = load volatile i64*, i64** %6, align 8
  store i64 %664, i64* %.0..0..0.146, align 8
  %.0..0..0.147 = load volatile i64*, i64** %6, align 8
  %665 = call dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* nonnull dereferenceable(8) @ans, i64* dereferenceable(8) %.0..0..0.147)
  %666 = load i64, i64* %665, align 8
  store i64 %666, i64* @ans, align 8
  br label %.backedge

667:                                              ; preds = %29
  br label %.backedge

668:                                              ; preds = %29
  %.0..0..0.142 = load volatile i32*, i32** %7, align 8
  %669 = load i32, i32* %.0..0..0.142, align 4
  %670 = add i32 %669, 1
  %.0..0..0.143 = load volatile i32*, i32** %7, align 8
  store i32 %670, i32* %.0..0..0.143, align 4
  br label %.backedge

671:                                              ; preds = %29
  %672 = load i32, i32* @x, align 4
  %673 = load i32, i32* @y, align 4
  %674 = add i32 %672, -1
  %675 = mul i32 %674, %672
  %676 = and i32 %675, 1
  %677 = icmp eq i32 %676, 0
  %678 = icmp slt i32 %673, 10
  %679 = or i1 %678, %677
  %680 = select i1 %679, i32 -1287987035, i32 -518912814
  br label %.backedge

681:                                              ; preds = %29
  %682 = load i32, i32* @x, align 4
  %683 = load i32, i32* @y, align 4
  %684 = add i32 %682, -1
  %685 = mul i32 %684, %682
  %686 = and i32 %685, 1
  %687 = icmp eq i32 %686, 0
  %688 = icmp slt i32 %683, 10
  %689 = or i1 %688, %687
  %690 = select i1 %689, i32 1718121678, i32 -518912814
  br label %.backedge

691:                                              ; preds = %29
  br label %.backedge

692:                                              ; preds = %29
  %693 = load i32, i32* @x, align 4
  %694 = load i32, i32* @y, align 4
  %695 = add i32 %693, -1
  %696 = mul i32 %695, %693
  %697 = and i32 %696, 1
  %698 = icmp eq i32 %697, 0
  %699 = icmp slt i32 %694, 10
  %700 = or i1 %699, %698
  %701 = select i1 %700, i32 -1934810187, i32 -316542559
  br label %.backedge

702:                                              ; preds = %29
  %.0..0..0.122 = load volatile i32*, i32** %8, align 8
  %703 = load i32, i32* %.0..0..0.122, align 4
  %704 = add i32 %703, 1
  %.0..0..0.123 = load volatile i32*, i32** %8, align 8
  store i32 %704, i32* %.0..0..0.123, align 4
  %705 = load i32, i32* @x, align 4
  %706 = load i32, i32* @y, align 4
  %707 = add i32 %705, -1
  %708 = mul i32 %707, %705
  %709 = and i32 %708, 1
  %710 = icmp eq i32 %709, 0
  %711 = icmp slt i32 %706, 10
  %712 = or i1 %711, %710
  %713 = select i1 %712, i32 1704824481, i32 -316542559
  br label %.backedge

714:                                              ; preds = %29
  br label %.backedge

715:                                              ; preds = %29
  %716 = load i32, i32* @x, align 4
  %717 = load i32, i32* @y, align 4
  %718 = add i32 %716, -1
  %719 = mul i32 %718, %716
  %720 = and i32 %719, 1
  %721 = icmp eq i32 %720, 0
  %722 = icmp slt i32 %717, 10
  %723 = or i1 %722, %721
  %724 = select i1 %723, i32 1542194468, i32 -277127698
  br label %.backedge

725:                                              ; preds = %29
  %726 = load i64, i64* @ans, align 8
  %727 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 %726)
  %728 = load i32, i32* @x, align 4
  %729 = load i32, i32* @y, align 4
  %730 = add i32 %728, -1
  %731 = mul i32 %730, %728
  %732 = and i32 %731, 1
  %733 = icmp eq i32 %732, 0
  %734 = icmp slt i32 %729, 10
  %735 = or i1 %734, %733
  %736 = select i1 %735, i32 -1916775927, i32 -277127698
  br label %.backedge

737:                                              ; preds = %29
  ret i32 0

738:                                              ; preds = %29
  %739 = alloca i32, align 4
  %740 = alloca i32, align 4
  %741 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32* nonnull %739, i32* nonnull %740)
  br label %.backedge

742:                                              ; preds = %29
  %.0..0..0.26 = load volatile i32*, i32** %17, align 8
  %743 = load i32, i32* %.0..0..0.26, align 4
  %.neg = add i32 %743, 1
  %.0..0..0.27 = load volatile i32*, i32** %17, align 8
  store i32 %.neg, i32* %.0..0..0.27, align 4
  br label %.backedge

744:                                              ; preds = %29
  br label %.backedge

745:                                              ; preds = %29
  br label %.backedge

746:                                              ; preds = %29
  %.0..0..0.52 = load volatile i32*, i32** %13, align 8
  %.0..0..0.74 = load volatile i32*, i32** %12, align 8
  %.0..0..0.53 = load volatile i32*, i32** %13, align 8
  %.0..0..0.82 = load volatile i32*, i32** %11, align 8
  br label %.backedge

747:                                              ; preds = %29
  %.0..0..0.83 = load volatile i32*, i32** %11, align 8
  %748 = load i32, i32* %.0..0..0.83, align 4
  %749 = add i32 %748, 1
  %.0..0..0.84 = load volatile i32*, i32** %11, align 8
  store i32 %749, i32* %.0..0..0.84, align 4
  br label %.backedge

750:                                              ; preds = %29
  %.0..0..0.108 = load volatile i32*, i32** %9, align 8
  %.0..0..0.15 = load volatile i32*, i32** %19, align 8
  br label %.backedge

751:                                              ; preds = %29
  br label %.backedge

752:                                              ; preds = %29
  %.0..0..0.54 = load volatile i32*, i32** %13, align 8
  %753 = load i32, i32* %.0..0..0.54, align 4
  %754 = add i32 %753, 1
  %.0..0..0.55 = load volatile i32*, i32** %13, align 8
  store i32 %754, i32* %.0..0..0.55, align 4
  br label %.backedge

755:                                              ; preds = %29
  %.0..0..0.124 = load volatile i32*, i32** %8, align 8
  store i32 0, i32* %.0..0..0.124, align 4
  br label %.backedge

756:                                              ; preds = %29
  %.0..0..0.125 = load volatile i32*, i32** %8, align 8
  %.0..0..0.16 = load volatile i32*, i32** %19, align 8
  br label %.backedge

757:                                              ; preds = %29
  %.0..0..0.144 = load volatile i32*, i32** %7, align 8
  store i32 0, i32* %.0..0..0.144, align 4
  br label %.backedge

758:                                              ; preds = %29
  %.0..0..0.126 = load volatile i32*, i32** %8, align 8
  br label %.backedge

759:                                              ; preds = %29
  %.0..0..0.145 = load volatile i32*, i32** %7, align 8
  br label %.backedge

760:                                              ; preds = %29
  br label %.backedge

761:                                              ; preds = %29
  %.0..0..0.127 = load volatile i32*, i32** %8, align 8
  %762 = load i32, i32* %.0..0..0.127, align 4
  %763 = add i32 %762, 1
  %.0..0..0.128 = load volatile i32*, i32** %8, align 8
  store i32 %763, i32* %.0..0..0.128, align 4
  br label %.backedge

764:                                              ; preds = %29
  %765 = load i64, i64* @ans, align 8
  %766 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 %765)
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #2 comdat {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = load i64, i64* %0, align 8
  store i64 %5, i64* %4, align 8
  %6 = load i64, i64* %1, align 8
  store i64 %6, i64* %3, align 8
  %7 = load i32, i32* @x.3, align 4
  %8 = load i32, i32* @y.4, align 4
  %9 = add i32 %7, -1
  %10 = mul i32 %9, %7
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %13, %12
  %15 = select i1 %14, i32 -1663306917, i32 1685806839
  %16 = select i1 %14, i32 300857406, i32 1685806839
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.08.ph = phi i64* [ undef, %2 ], [ %.08.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ 1740292990, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %.outer10

.outer10:                                         ; preds = %.outer10.backedge, %.outer
  %.0.ph11 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph11.be, %.outer10.backedge ]
  br label %17

17:                                               ; preds = %.outer10, %17
  switch i32 %.0.ph11, label %17 [
    i32 1740292990, label %18
    i32 -456951407, label %.outer10.backedge
    i32 300857406, label %.outer.backedge
    i32 -1663306917, label %21
    i32 1129585017, label %22
    i32 1748852487, label %23
    i32 1685806839, label %24
  ]

18:                                               ; preds = %17
  %.0..0..0.6 = load volatile i64, i64* %4, align 8
  %.0..0..0.7 = load volatile i64, i64* %3, align 8
  %19 = icmp slt i64 %.0..0..0.6, %.0..0..0.7
  %20 = select i1 %19, i32 -456951407, i32 1129585017
  br label %.outer10.backedge

21:                                               ; preds = %17
  br label %.outer10.backedge

.outer10.backedge:                                ; preds = %17, %21, %18
  %.0.ph11.be = phi i32 [ %20, %18 ], [ 1748852487, %21 ], [ %16, %17 ]
  br label %.outer10

22:                                               ; preds = %17
  br label %.outer.backedge

23:                                               ; preds = %17
  ret i64* %.08.ph

24:                                               ; preds = %17
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %17, %24, %22
  %.08.ph.be = phi i64* [ %0, %22 ], [ %1, %24 ], [ %1, %17 ]
  %.0.ph.be = phi i32 [ 1748852487, %22 ], [ 300857406, %24 ], [ %15, %17 ]
  br label %.outer
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

attributes #0 = { noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
