; ModuleID = 'build_ollvm/programs/p03224/s568982821.ll'
source_filename = "Project_CodeNet_C++1400/p03224/s568982821.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

$_ZSt4sqrtIiEN9__gnu_cxx11__enable_ifIXsr12__is_integerIT_EE7__valueEdE6__typeES2_ = comdat any

@n = global i32 0, align 4
@a = local_unnamed_addr global [1000 x [1000 x i32]] zeroinitializer, align 16
@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"Yes\0A%d\0A\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c" %d\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@str.1 = private unnamed_addr constant [3 x i8] c"No\00", align 1

; Function Attrs: noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #0 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull @n)
  %5 = load i32, i32* @n, align 4
  %6 = shl nsw i32 %5, 1
  br label %7

7:                                                ; preds = %.backedge, %0
  %.078 = phi i32 [ 1, %0 ], [ %.078.be, %.backedge ]
  %.076 = phi i32 [ %6, %0 ], [ %.076.be, %.backedge ]
  %.074 = phi i32 [ -1, %0 ], [ %.074.be, %.backedge ]
  %.072 = phi i32 [ undef, %0 ], [ %.072.be, %.backedge ]
  %.070 = phi i32 [ undef, %0 ], [ %.070.be, %.backedge ]
  %.068 = phi i32 [ undef, %0 ], [ %.068.be, %.backedge ]
  %.066 = phi i32 [ undef, %0 ], [ %.066.be, %.backedge ]
  %.064 = phi i32 [ undef, %0 ], [ %.064.be, %.backedge ]
  %.062 = phi i32 [ undef, %0 ], [ %.062.be, %.backedge ]
  %.060 = phi i32 [ undef, %0 ], [ %.060.be, %.backedge ]
  %.058 = phi i32 [ undef, %0 ], [ %.058.be, %.backedge ]
  %.056 = phi i32 [ undef, %0 ], [ %.056.be, %.backedge ]
  %.0 = phi i32 [ 1182867227, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1182867227, label %8
    i32 689932658, label %10
    i32 -1225404076, label %19
    i32 1147546153, label %21
    i32 -881157654, label %28
    i32 1189389254, label %38
    i32 514120742, label %48
    i32 -431252509, label %49
    i32 -689079452, label %59
    i32 821964734, label %73
    i32 -1983808182, label %75
    i32 616908469, label %77
    i32 428862392, label %79
    i32 -1974751371, label %89
    i32 1742055024, label %99
    i32 863570736, label %100
    i32 -1010822879, label %101
    i32 -644763325, label %102
    i32 109503126, label %112
    i32 1262984343, label %123
    i32 109827326, label %125
    i32 -271637142, label %135
    i32 -880938210, label %145
    i32 1724813677, label %146
    i32 1674845833, label %156
    i32 -2098820921, label %168
    i32 -228134353, label %169
    i32 933811756, label %171
    i32 1705339025, label %172
    i32 -1977765594, label %174
    i32 1343892115, label %178
    i32 1331173690, label %188
    i32 2068320962, label %199
    i32 664045295, label %200
    i32 -1706058818, label %203
    i32 -232350726, label %213
    i32 -1243275206, label %225
    i32 -2052822762, label %227
    i32 1004591392, label %231
    i32 -1197334579, label %232
    i32 -997670292, label %234
    i32 -751033932, label %236
    i32 345464464, label %246
    i32 -1599841834, label %256
    i32 -19360664, label %257
    i32 1476053021, label %260
    i32 -202149197, label %262
    i32 524696641, label %264
    i32 1363114152, label %270
    i32 35450601, label %272
    i32 675749741, label %273
    i32 -826811120, label %283
    i32 418884775, label %294
    i32 2093028599, label %295
    i32 -279019963, label %296
    i32 2138348846, label %297
    i32 -385844817, label %298
    i32 -284447860, label %299
    i32 -897758773, label %300
    i32 1923362600, label %301
    i32 1311008270, label %302
    i32 728206623, label %305
    i32 557498345, label %307
    i32 1848517832, label %308
    i32 999361376, label %309
  ]

.backedge:                                        ; preds = %7, %309, %308, %307, %305, %302, %301, %300, %299, %298, %297, %295, %294, %283, %273, %272, %270, %264, %262, %260, %257, %256, %246, %236, %234, %232, %231, %227, %225, %213, %203, %200, %199, %188, %178, %174, %172, %171, %169, %168, %156, %146, %145, %135, %125, %123, %112, %102, %101, %100, %99, %89, %79, %77, %75, %73, %59, %49, %48, %38, %28, %21, %19, %10, %8
  %.078.be = phi i32 [ %.078, %7 ], [ %.078, %309 ], [ %.078, %308 ], [ %.078, %307 ], [ %.078, %305 ], [ %.078, %302 ], [ %.078, %301 ], [ %.078, %300 ], [ %.078, %299 ], [ %.078, %298 ], [ %.078, %297 ], [ %.078, %295 ], [ %.078, %294 ], [ %.078, %283 ], [ %.078, %273 ], [ %.078, %272 ], [ %.078, %270 ], [ %.078, %264 ], [ %.078, %262 ], [ %.078, %260 ], [ %.078, %257 ], [ %.078, %256 ], [ %.078, %246 ], [ %.078, %236 ], [ %.078, %234 ], [ %.078, %232 ], [ %.078, %231 ], [ %.078, %227 ], [ %.078, %225 ], [ %.078, %213 ], [ %.078, %203 ], [ %.078, %200 ], [ %.078, %199 ], [ %.078, %188 ], [ %.078, %178 ], [ %.078, %174 ], [ %.078, %172 ], [ %.078, %171 ], [ %.078, %169 ], [ %.078, %168 ], [ %.078, %156 ], [ %.078, %146 ], [ %.078, %145 ], [ %.078, %135 ], [ %.078, %125 ], [ %.078, %123 ], [ %.078, %112 ], [ %.078, %102 ], [ %.078, %101 ], [ %.078, %100 ], [ %.078, %99 ], [ %.078, %89 ], [ %.078, %79 ], [ %.078, %77 ], [ %76, %75 ], [ %.078, %73 ], [ %.078, %59 ], [ %.078, %49 ], [ %.078, %48 ], [ %.078, %38 ], [ %.078, %28 ], [ %.078, %21 ], [ %.078, %19 ], [ %.078, %10 ], [ %.078, %8 ]
  %.076.be = phi i32 [ %.076, %7 ], [ %.076, %309 ], [ %.076, %308 ], [ %.076, %307 ], [ %.076, %305 ], [ %.076, %302 ], [ %.076, %301 ], [ %.076, %300 ], [ %.076, %299 ], [ %.076, %298 ], [ %.076, %297 ], [ %.076, %295 ], [ %.076, %294 ], [ %.076, %283 ], [ %.076, %273 ], [ %.076, %272 ], [ %.076, %270 ], [ %.076, %264 ], [ %.076, %262 ], [ %.076, %260 ], [ %.076, %257 ], [ %.076, %256 ], [ %.076, %246 ], [ %.076, %236 ], [ %.076, %234 ], [ %.076, %232 ], [ %.076, %231 ], [ %.076, %227 ], [ %.076, %225 ], [ %.076, %213 ], [ %.076, %203 ], [ %.076, %200 ], [ %.076, %199 ], [ %.076, %188 ], [ %.076, %178 ], [ %.076, %174 ], [ %.076, %172 ], [ %.076, %171 ], [ %.076, %169 ], [ %.076, %168 ], [ %.076, %156 ], [ %.076, %146 ], [ %.076, %145 ], [ %.076, %135 ], [ %.076, %125 ], [ %.076, %123 ], [ %.076, %112 ], [ %.076, %102 ], [ %.076, %101 ], [ %.076, %100 ], [ %.076, %99 ], [ %.076, %89 ], [ %.076, %79 ], [ %78, %77 ], [ %.076, %75 ], [ %.076, %73 ], [ %.076, %59 ], [ %.076, %49 ], [ %.076, %48 ], [ %.076, %38 ], [ %.076, %28 ], [ %.076, %21 ], [ %20, %19 ], [ %.076, %10 ], [ %.076, %8 ]
  %.074.be = phi i32 [ %.074, %7 ], [ %.074, %309 ], [ %.074, %308 ], [ %.074, %307 ], [ %.074, %305 ], [ %.074, %302 ], [ %.074, %301 ], [ %.074, %300 ], [ %.074, %299 ], [ %.074, %298 ], [ %.072, %297 ], [ %.074, %295 ], [ %.074, %294 ], [ %.074, %283 ], [ %.074, %273 ], [ %.074, %272 ], [ %.074, %270 ], [ %.074, %264 ], [ %.074, %262 ], [ %.074, %260 ], [ %.074, %257 ], [ %.074, %256 ], [ %.074, %246 ], [ %.074, %236 ], [ %.074, %234 ], [ %.074, %232 ], [ %.074, %231 ], [ %.074, %227 ], [ %.074, %225 ], [ %.074, %213 ], [ %.074, %203 ], [ %.074, %200 ], [ %.074, %199 ], [ %.074, %188 ], [ %.074, %178 ], [ %.074, %174 ], [ %.074, %172 ], [ %.074, %171 ], [ %.074, %169 ], [ %.074, %168 ], [ %.074, %156 ], [ %.074, %146 ], [ %.074, %145 ], [ %.074, %135 ], [ %.074, %125 ], [ %.074, %123 ], [ %.074, %112 ], [ %.074, %102 ], [ %.074, %101 ], [ %.074, %100 ], [ %.074, %99 ], [ %.074, %89 ], [ %.074, %79 ], [ %.074, %77 ], [ %.074, %75 ], [ %.074, %73 ], [ %.074, %59 ], [ %.074, %49 ], [ %.074, %48 ], [ %.072, %38 ], [ %.074, %28 ], [ %.074, %21 ], [ %.074, %19 ], [ %.074, %10 ], [ %.074, %8 ]
  %.072.be = phi i32 [ %.072, %7 ], [ %.072, %309 ], [ %.072, %308 ], [ %.072, %307 ], [ %.072, %305 ], [ %.072, %302 ], [ %.072, %301 ], [ %.072, %300 ], [ %.072, %299 ], [ %.072, %298 ], [ %.072, %297 ], [ %.072, %295 ], [ %.072, %294 ], [ %.072, %283 ], [ %.072, %273 ], [ %.072, %272 ], [ %.072, %270 ], [ %.072, %264 ], [ %.072, %262 ], [ %.072, %260 ], [ %.072, %257 ], [ %.072, %256 ], [ %.072, %246 ], [ %.072, %236 ], [ %.072, %234 ], [ %.072, %232 ], [ %.072, %231 ], [ %.072, %227 ], [ %.072, %225 ], [ %.072, %213 ], [ %.072, %203 ], [ %.072, %200 ], [ %.072, %199 ], [ %.072, %188 ], [ %.072, %178 ], [ %.072, %174 ], [ %.072, %172 ], [ %.072, %171 ], [ %.072, %169 ], [ %.072, %168 ], [ %.072, %156 ], [ %.072, %146 ], [ %.072, %145 ], [ %.072, %135 ], [ %.072, %125 ], [ %.072, %123 ], [ %.072, %112 ], [ %.072, %102 ], [ %.072, %101 ], [ %.072, %100 ], [ %.072, %99 ], [ %.072, %89 ], [ %.072, %79 ], [ %.072, %77 ], [ %.072, %75 ], [ %.072, %73 ], [ %.072, %59 ], [ %.072, %49 ], [ %.072, %48 ], [ %.072, %38 ], [ %.072, %28 ], [ %.072, %21 ], [ %.072, %19 ], [ %12, %10 ], [ %.072, %8 ]
  %.070.be = phi i32 [ %.070, %7 ], [ %.070, %309 ], [ %.070, %308 ], [ %.070, %307 ], [ %.070, %305 ], [ 1, %302 ], [ %.070, %301 ], [ %.070, %300 ], [ %.070, %299 ], [ %.070, %298 ], [ %.070, %297 ], [ %.070, %295 ], [ %.070, %294 ], [ %.070, %283 ], [ %.070, %273 ], [ %.070, %272 ], [ %.070, %270 ], [ %.070, %264 ], [ %.070, %262 ], [ %.070, %260 ], [ %.070, %257 ], [ %.070, %256 ], [ %.070, %246 ], [ %.070, %236 ], [ %.070, %234 ], [ %233, %232 ], [ %.070, %231 ], [ %.070, %227 ], [ %.070, %225 ], [ %.070, %213 ], [ %.070, %203 ], [ %.070, %200 ], [ %.070, %199 ], [ %.070, %188 ], [ %.070, %178 ], [ %.070, %174 ], [ %.070, %172 ], [ %.070, %171 ], [ %.070, %169 ], [ %.070, %168 ], [ 1, %156 ], [ %.070, %146 ], [ %.070, %145 ], [ %.070, %135 ], [ %.070, %125 ], [ %.070, %123 ], [ %.070, %112 ], [ %.070, %102 ], [ %.070, %101 ], [ %.070, %100 ], [ %.070, %99 ], [ %.070, %89 ], [ %.070, %79 ], [ %.070, %77 ], [ %.070, %75 ], [ %.070, %73 ], [ %.070, %59 ], [ %.070, %49 ], [ %.070, %48 ], [ %.070, %38 ], [ %.070, %28 ], [ %.070, %21 ], [ %.070, %19 ], [ %.070, %10 ], [ %.070, %8 ]
  %.068.be = phi i32 [ %.068, %7 ], [ %.068, %309 ], [ %.068, %308 ], [ %.068, %307 ], [ %.068, %305 ], [ 0, %302 ], [ %.068, %301 ], [ %.068, %300 ], [ %.068, %299 ], [ %.068, %298 ], [ %.068, %297 ], [ %.068, %295 ], [ %.068, %294 ], [ %.068, %283 ], [ %.068, %273 ], [ %.068, %272 ], [ %.068, %270 ], [ %.068, %264 ], [ %.068, %262 ], [ %.068, %260 ], [ %.068, %257 ], [ %.068, %256 ], [ %.068, %246 ], [ %.068, %236 ], [ %.068, %234 ], [ %.068, %232 ], [ %.068, %231 ], [ %.068, %227 ], [ %.068, %225 ], [ %.068, %213 ], [ %.068, %203 ], [ %.068, %200 ], [ %.068, %199 ], [ %.068, %188 ], [ %.068, %178 ], [ %.neg82, %174 ], [ %.068, %172 ], [ %.068, %171 ], [ %.068, %169 ], [ %.068, %168 ], [ 0, %156 ], [ %.068, %146 ], [ %.068, %145 ], [ %.068, %135 ], [ %.068, %125 ], [ %.068, %123 ], [ %.068, %112 ], [ %.068, %102 ], [ %.068, %101 ], [ %.068, %100 ], [ %.068, %99 ], [ %.068, %89 ], [ %.068, %79 ], [ %.068, %77 ], [ %.068, %75 ], [ %.068, %73 ], [ %.068, %59 ], [ %.068, %49 ], [ %.068, %48 ], [ %.068, %38 ], [ %.068, %28 ], [ %.068, %21 ], [ %.068, %19 ], [ %.068, %10 ], [ %.068, %8 ]
  %.066.be = phi i32 [ %.066, %7 ], [ %.066, %309 ], [ %.066, %308 ], [ %.066, %307 ], [ %.066, %305 ], [ 1, %302 ], [ %.066, %301 ], [ %.066, %300 ], [ %.066, %299 ], [ %.066, %298 ], [ %.066, %297 ], [ %.066, %295 ], [ %.066, %294 ], [ %.066, %283 ], [ %.066, %273 ], [ %.066, %272 ], [ %.066, %270 ], [ %.066, %264 ], [ %.066, %262 ], [ %.066, %260 ], [ %.066, %257 ], [ %.066, %256 ], [ %.066, %246 ], [ %.066, %236 ], [ %235, %234 ], [ %.066, %232 ], [ %.066, %231 ], [ %.066, %227 ], [ %.066, %225 ], [ %.066, %213 ], [ %.066, %203 ], [ %.066, %200 ], [ %.066, %199 ], [ %.066, %188 ], [ %.066, %178 ], [ %.066, %174 ], [ %.066, %172 ], [ %.066, %171 ], [ %.066, %169 ], [ %.066, %168 ], [ 1, %156 ], [ %.066, %146 ], [ %.066, %145 ], [ %.066, %135 ], [ %.066, %125 ], [ %.066, %123 ], [ %.066, %112 ], [ %.066, %102 ], [ %.066, %101 ], [ %.066, %100 ], [ %.066, %99 ], [ %.066, %89 ], [ %.066, %79 ], [ %.066, %77 ], [ %.066, %75 ], [ %.066, %73 ], [ %.066, %59 ], [ %.066, %49 ], [ %.066, %48 ], [ %.066, %38 ], [ %.066, %28 ], [ %.066, %21 ], [ %.066, %19 ], [ %.066, %10 ], [ %.066, %8 ]
  %.064.be = phi i32 [ %.064, %7 ], [ %.064, %309 ], [ %.064, %308 ], [ %.064, %307 ], [ %306, %305 ], [ %.064, %302 ], [ %.064, %301 ], [ %.064, %300 ], [ %.064, %299 ], [ %.064, %298 ], [ %.064, %297 ], [ %.064, %295 ], [ %.064, %294 ], [ %.064, %283 ], [ %.064, %273 ], [ %.064, %272 ], [ %.064, %270 ], [ %.064, %264 ], [ %.064, %262 ], [ %.064, %260 ], [ %.064, %257 ], [ %.064, %256 ], [ %.064, %246 ], [ %.064, %236 ], [ %.064, %234 ], [ %.064, %232 ], [ %.064, %231 ], [ %.064, %227 ], [ %.064, %225 ], [ %.064, %213 ], [ %.064, %203 ], [ %.064, %200 ], [ %.064, %199 ], [ %189, %188 ], [ %.064, %178 ], [ %.064, %174 ], [ %.064, %172 ], [ %.070, %171 ], [ %.064, %169 ], [ %.064, %168 ], [ %.064, %156 ], [ %.064, %146 ], [ %.064, %145 ], [ %.064, %135 ], [ %.064, %125 ], [ %.064, %123 ], [ %.064, %112 ], [ %.064, %102 ], [ %.064, %101 ], [ %.064, %100 ], [ %.064, %99 ], [ %.064, %89 ], [ %.064, %79 ], [ %.064, %77 ], [ %.064, %75 ], [ %.064, %73 ], [ %.064, %59 ], [ %.064, %49 ], [ %.064, %48 ], [ %.064, %38 ], [ %.064, %28 ], [ %.064, %21 ], [ %.064, %19 ], [ %.064, %10 ], [ %.064, %8 ]
  %.062.be = phi i32 [ %.062, %7 ], [ %.062, %309 ], [ %.062, %308 ], [ %.062, %307 ], [ %.062, %305 ], [ %.062, %302 ], [ %.062, %301 ], [ %.062, %300 ], [ %.062, %299 ], [ %.062, %298 ], [ %.062, %297 ], [ %.062, %295 ], [ %.062, %294 ], [ %.062, %283 ], [ %.062, %273 ], [ %.062, %272 ], [ %.062, %270 ], [ %.062, %264 ], [ %.062, %262 ], [ %.062, %260 ], [ %.062, %257 ], [ %.062, %256 ], [ %.062, %246 ], [ %.062, %236 ], [ %.062, %234 ], [ %.062, %232 ], [ %.062, %231 ], [ %.neg81, %227 ], [ %.062, %225 ], [ %.062, %213 ], [ %.062, %203 ], [ %201, %200 ], [ %.062, %199 ], [ %.062, %188 ], [ %.062, %178 ], [ %.062, %174 ], [ %.062, %172 ], [ %.062, %171 ], [ %.062, %169 ], [ %.062, %168 ], [ %.062, %156 ], [ %.062, %146 ], [ %.062, %145 ], [ %.062, %135 ], [ %.062, %125 ], [ %.062, %123 ], [ %.062, %112 ], [ %.062, %102 ], [ %.062, %101 ], [ %.062, %100 ], [ %.062, %99 ], [ %.062, %89 ], [ %.062, %79 ], [ %.062, %77 ], [ %.062, %75 ], [ %.062, %73 ], [ %.062, %59 ], [ %.062, %49 ], [ %.062, %48 ], [ %.062, %38 ], [ %.062, %28 ], [ %.062, %21 ], [ %.062, %19 ], [ %.062, %10 ], [ %.062, %8 ]
  %.060.be = phi i32 [ %.060, %7 ], [ %.060, %309 ], [ %.060, %308 ], [ %.060, %307 ], [ %.060, %305 ], [ %.060, %302 ], [ %.060, %301 ], [ %.060, %300 ], [ %.060, %299 ], [ %.060, %298 ], [ %.060, %297 ], [ %.060, %295 ], [ %.060, %294 ], [ %.060, %283 ], [ %.060, %273 ], [ %.060, %272 ], [ %.060, %270 ], [ %.060, %264 ], [ %.060, %262 ], [ %.060, %260 ], [ %.060, %257 ], [ %.060, %256 ], [ %.060, %246 ], [ %.060, %236 ], [ %.060, %234 ], [ %.060, %232 ], [ %.neg, %231 ], [ %.060, %227 ], [ %.060, %225 ], [ %.060, %213 ], [ %.060, %203 ], [ %202, %200 ], [ %.060, %199 ], [ %.060, %188 ], [ %.060, %178 ], [ %.060, %174 ], [ %.060, %172 ], [ %.060, %171 ], [ %.060, %169 ], [ %.060, %168 ], [ %.060, %156 ], [ %.060, %146 ], [ %.060, %145 ], [ %.060, %135 ], [ %.060, %125 ], [ %.060, %123 ], [ %.060, %112 ], [ %.060, %102 ], [ %.060, %101 ], [ %.060, %100 ], [ %.060, %99 ], [ %.060, %89 ], [ %.060, %79 ], [ %.060, %77 ], [ %.060, %75 ], [ %.060, %73 ], [ %.060, %59 ], [ %.060, %49 ], [ %.060, %48 ], [ %.060, %38 ], [ %.060, %28 ], [ %.060, %21 ], [ %.060, %19 ], [ %.060, %10 ], [ %.060, %8 ]
  %.058.be = phi i32 [ %.058, %7 ], [ %310, %309 ], [ 1, %308 ], [ %.058, %307 ], [ %.058, %305 ], [ %.058, %302 ], [ %.058, %301 ], [ %.058, %300 ], [ %.058, %299 ], [ %.058, %298 ], [ %.058, %297 ], [ %.058, %295 ], [ %.058, %294 ], [ %284, %283 ], [ %.058, %273 ], [ %.058, %272 ], [ %.058, %270 ], [ %.058, %264 ], [ %.058, %262 ], [ %.058, %260 ], [ %.058, %257 ], [ %.058, %256 ], [ 1, %246 ], [ %.058, %236 ], [ %.058, %234 ], [ %.058, %232 ], [ %.058, %231 ], [ %.058, %227 ], [ %.058, %225 ], [ %.058, %213 ], [ %.058, %203 ], [ %.058, %200 ], [ %.058, %199 ], [ %.058, %188 ], [ %.058, %178 ], [ %.058, %174 ], [ %.058, %172 ], [ %.058, %171 ], [ %.058, %169 ], [ %.058, %168 ], [ %.058, %156 ], [ %.058, %146 ], [ %.058, %145 ], [ %.058, %135 ], [ %.058, %125 ], [ %.058, %123 ], [ %.058, %112 ], [ %.058, %102 ], [ %.058, %101 ], [ %.058, %100 ], [ %.058, %99 ], [ %.058, %89 ], [ %.058, %79 ], [ %.058, %77 ], [ %.058, %75 ], [ %.058, %73 ], [ %.058, %59 ], [ %.058, %49 ], [ %.058, %48 ], [ %.058, %38 ], [ %.058, %28 ], [ %.058, %21 ], [ %.058, %19 ], [ %.058, %10 ], [ %.058, %8 ]
  %.056.be = phi i32 [ %.056, %7 ], [ %.056, %309 ], [ %.056, %308 ], [ %.056, %307 ], [ %.056, %305 ], [ %.056, %302 ], [ %.056, %301 ], [ %.056, %300 ], [ %.056, %299 ], [ %.056, %298 ], [ %.056, %297 ], [ %.056, %295 ], [ %.056, %294 ], [ %.056, %283 ], [ %.056, %273 ], [ %.056, %272 ], [ %271, %270 ], [ %.056, %264 ], [ %.056, %262 ], [ 1, %260 ], [ %.056, %257 ], [ %.056, %256 ], [ %.056, %246 ], [ %.056, %236 ], [ %.056, %234 ], [ %.056, %232 ], [ %.056, %231 ], [ %.056, %227 ], [ %.056, %225 ], [ %.056, %213 ], [ %.056, %203 ], [ %.056, %200 ], [ %.056, %199 ], [ %.056, %188 ], [ %.056, %178 ], [ %.056, %174 ], [ %.056, %172 ], [ %.056, %171 ], [ %.056, %169 ], [ %.056, %168 ], [ %.056, %156 ], [ %.056, %146 ], [ %.056, %145 ], [ %.056, %135 ], [ %.056, %125 ], [ %.056, %123 ], [ %.056, %112 ], [ %.056, %102 ], [ %.056, %101 ], [ %.056, %100 ], [ %.056, %99 ], [ %.056, %89 ], [ %.056, %79 ], [ %.056, %77 ], [ %.056, %75 ], [ %.056, %73 ], [ %.056, %59 ], [ %.056, %49 ], [ %.056, %48 ], [ %.056, %38 ], [ %.056, %28 ], [ %.056, %21 ], [ %.056, %19 ], [ %.056, %10 ], [ %.056, %8 ]
  %.0.be = phi i32 [ %.0, %7 ], [ -826811120, %309 ], [ 345464464, %308 ], [ -232350726, %307 ], [ 1331173690, %305 ], [ 1674845833, %302 ], [ -271637142, %301 ], [ 109503126, %300 ], [ -1974751371, %299 ], [ -689079452, %298 ], [ 1189389254, %297 ], [ -279019963, %295 ], [ -19360664, %294 ], [ %293, %283 ], [ %282, %273 ], [ 675749741, %272 ], [ -202149197, %270 ], [ 1363114152, %264 ], [ %263, %262 ], [ -202149197, %260 ], [ %259, %257 ], [ -19360664, %256 ], [ %255, %246 ], [ %245, %236 ], [ -228134353, %234 ], [ -997670292, %232 ], [ -1706058818, %231 ], [ 1004591392, %227 ], [ %226, %225 ], [ %224, %213 ], [ %212, %203 ], [ -1706058818, %200 ], [ 1705339025, %199 ], [ %198, %188 ], [ %187, %178 ], [ 1343892115, %174 ], [ %173, %172 ], [ 1705339025, %171 ], [ %170, %169 ], [ -228134353, %168 ], [ %167, %156 ], [ %155, %146 ], [ -279019963, %145 ], [ %144, %135 ], [ %134, %125 ], [ %124, %123 ], [ %122, %112 ], [ %111, %102 ], [ 1182867227, %101 ], [ -1010822879, %100 ], [ 863570736, %99 ], [ %98, %89 ], [ %88, %79 ], [ 428862392, %77 ], [ 428862392, %75 ], [ %74, %73 ], [ %72, %59 ], [ %58, %49 ], [ -644763325, %48 ], [ %47, %38 ], [ %37, %28 ], [ %27, %21 ], [ -1010822879, %19 ], [ %18, %10 ], [ %9, %8 ]
  br label %7

8:                                                ; preds = %7
  %.not87 = icmp sgt i32 %.078, %.076
  %9 = select i1 %.not87, i32 -644763325, i32 689932658
  br label %.backedge

10:                                               ; preds = %7
  %11 = add i32 %.076, %.078
  %12 = sdiv i32 %11, 2
  %13 = sitofp i32 %12 to double
  %14 = load i32, i32* @n, align 4
  %15 = shl nsw i32 %14, 1
  %16 = tail call double @_ZSt4sqrtIiEN9__gnu_cxx11__enable_ifIXsr12__is_integerIT_EE7__valueEdE6__typeES2_(i32 %15)
  %17 = fcmp olt double %16, %13
  %18 = select i1 %17, i32 -1225404076, i32 1147546153
  br label %.backedge

19:                                               ; preds = %7
  %20 = add i32 %.072, -1
  br label %.backedge

21:                                               ; preds = %7
  %22 = add i32 %.072, 1
  %23 = mul nsw i32 %22, %.072
  %24 = load i32, i32* @n, align 4
  %25 = shl nsw i32 %24, 1
  %26 = icmp eq i32 %23, %25
  %27 = select i1 %26, i32 -881157654, i32 -431252509
  br label %.backedge

28:                                               ; preds = %7
  %29 = load i32, i32* @x, align 4
  %30 = load i32, i32* @y, align 4
  %31 = add i32 %29, -1
  %32 = mul i32 %31, %29
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %35, %34
  %37 = select i1 %36, i32 1189389254, i32 2138348846
  br label %.backedge

38:                                               ; preds = %7
  %39 = load i32, i32* @x, align 4
  %40 = load i32, i32* @y, align 4
  %41 = add i32 %39, -1
  %42 = mul i32 %41, %39
  %43 = and i32 %42, 1
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %45, %44
  %47 = select i1 %46, i32 514120742, i32 2138348846
  br label %.backedge

48:                                               ; preds = %7
  br label %.backedge

49:                                               ; preds = %7
  %50 = load i32, i32* @x, align 4
  %51 = load i32, i32* @y, align 4
  %52 = add i32 %50, -1
  %53 = mul i32 %52, %50
  %54 = and i32 %53, 1
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %56, %55
  %58 = select i1 %57, i32 -689079452, i32 -385844817
  br label %.backedge

59:                                               ; preds = %7
  %.neg86 = add i32 %.072, 1
  %60 = mul nsw i32 %.neg86, %.072
  %61 = load i32, i32* @n, align 4
  %62 = shl nsw i32 %61, 1
  %63 = icmp slt i32 %60, %62
  store i1 %63, i1* %3, align 1
  %64 = load i32, i32* @x, align 4
  %65 = load i32, i32* @y, align 4
  %66 = add i32 %64, -1
  %67 = mul i32 %66, %64
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %70, %69
  %72 = select i1 %71, i32 821964734, i32 -385844817
  br label %.backedge

73:                                               ; preds = %7
  %.0..0..0. = load volatile i1, i1* %3, align 1
  %74 = select i1 %.0..0..0., i32 -1983808182, i32 616908469
  br label %.backedge

75:                                               ; preds = %7
  %76 = add i32 %.072, 1
  br label %.backedge

77:                                               ; preds = %7
  %78 = add i32 %.072, -1
  br label %.backedge

79:                                               ; preds = %7
  %80 = load i32, i32* @x, align 4
  %81 = load i32, i32* @y, align 4
  %82 = add i32 %80, -1
  %83 = mul i32 %82, %80
  %84 = and i32 %83, 1
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %86, %85
  %88 = select i1 %87, i32 -1974751371, i32 -284447860
  br label %.backedge

89:                                               ; preds = %7
  %90 = load i32, i32* @x, align 4
  %91 = load i32, i32* @y, align 4
  %92 = add i32 %90, -1
  %93 = mul i32 %92, %90
  %94 = and i32 %93, 1
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %96, %95
  %98 = select i1 %97, i32 1742055024, i32 -284447860
  br label %.backedge

99:                                               ; preds = %7
  br label %.backedge

100:                                              ; preds = %7
  br label %.backedge

101:                                              ; preds = %7
  br label %.backedge

102:                                              ; preds = %7
  %103 = load i32, i32* @x, align 4
  %104 = load i32, i32* @y, align 4
  %105 = add i32 %103, -1
  %106 = mul i32 %105, %103
  %107 = and i32 %106, 1
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %109, %108
  %111 = select i1 %110, i32 109503126, i32 -897758773
  br label %.backedge

112:                                              ; preds = %7
  %113 = icmp eq i32 %.074, -1
  store i1 %113, i1* %2, align 1
  %114 = load i32, i32* @x, align 4
  %115 = load i32, i32* @y, align 4
  %116 = add i32 %114, -1
  %117 = mul i32 %116, %114
  %118 = and i32 %117, 1
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %120, %119
  %122 = select i1 %121, i32 1262984343, i32 -897758773
  br label %.backedge

123:                                              ; preds = %7
  %.0..0..0.54 = load volatile i1, i1* %2, align 1
  %124 = select i1 %.0..0..0.54, i32 109827326, i32 1724813677
  br label %.backedge

125:                                              ; preds = %7
  %126 = load i32, i32* @x, align 4
  %127 = load i32, i32* @y, align 4
  %128 = add i32 %126, -1
  %129 = mul i32 %128, %126
  %130 = and i32 %129, 1
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %127, 10
  %133 = or i1 %132, %131
  %134 = select i1 %133, i32 -271637142, i32 1923362600
  br label %.backedge

135:                                              ; preds = %7
  %puts85 = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @str.1, i64 0, i64 0))
  %136 = load i32, i32* @x, align 4
  %137 = load i32, i32* @y, align 4
  %138 = add i32 %136, -1
  %139 = mul i32 %138, %136
  %140 = and i32 %139, 1
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %137, 10
  %143 = or i1 %142, %141
  %144 = select i1 %143, i32 -880938210, i32 1923362600
  br label %.backedge

145:                                              ; preds = %7
  br label %.backedge

146:                                              ; preds = %7
  %147 = load i32, i32* @x, align 4
  %148 = load i32, i32* @y, align 4
  %149 = add i32 %147, -1
  %150 = mul i32 %149, %147
  %151 = and i32 %150, 1
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %153, %152
  %155 = select i1 %154, i32 1674845833, i32 1311008270
  br label %.backedge

156:                                              ; preds = %7
  %157 = add i32 %.074, 1
  %158 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i32 %157)
  %159 = load i32, i32* @x, align 4
  %160 = load i32, i32* @y, align 4
  %161 = add i32 %159, -1
  %162 = mul i32 %161, %159
  %163 = and i32 %162, 1
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %165, %164
  %167 = select i1 %166, i32 -2098820921, i32 1311008270
  br label %.backedge

168:                                              ; preds = %7
  br label %.backedge

169:                                              ; preds = %7
  %.not84 = icmp sgt i32 %.066, %.074
  %170 = select i1 %.not84, i32 -751033932, i32 933811756
  br label %.backedge

171:                                              ; preds = %7
  br label %.backedge

172:                                              ; preds = %7
  %.not83 = icmp sgt i32 %.064, %.074
  %173 = select i1 %.not83, i32 664045295, i32 -1977765594
  br label %.backedge

174:                                              ; preds = %7
  %.neg82 = add i32 %.068, 1
  %175 = sext i32 %.066 to i64
  %176 = sext i32 %.064 to i64
  %177 = getelementptr inbounds [1000 x [1000 x i32]], [1000 x [1000 x i32]]* @a, i64 0, i64 %175, i64 %176
  store i32 %.neg82, i32* %177, align 4
  br label %.backedge

178:                                              ; preds = %7
  %179 = load i32, i32* @x, align 4
  %180 = load i32, i32* @y, align 4
  %181 = add i32 %179, -1
  %182 = mul i32 %181, %179
  %183 = and i32 %182, 1
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %185, %184
  %187 = select i1 %186, i32 1331173690, i32 728206623
  br label %.backedge

188:                                              ; preds = %7
  %189 = add i32 %.064, 1
  %190 = load i32, i32* @x, align 4
  %191 = load i32, i32* @y, align 4
  %192 = add i32 %190, -1
  %193 = mul i32 %192, %190
  %194 = and i32 %193, 1
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %196, %195
  %198 = select i1 %197, i32 2068320962, i32 728206623
  br label %.backedge

199:                                              ; preds = %7
  br label %.backedge

200:                                              ; preds = %7
  %201 = add i32 %.068, 1
  %202 = add i32 %.074, 1
  br label %.backedge

203:                                              ; preds = %7
  %204 = load i32, i32* @x, align 4
  %205 = load i32, i32* @y, align 4
  %206 = add i32 %204, -1
  %207 = mul i32 %206, %204
  %208 = and i32 %207, 1
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %205, 10
  %211 = or i1 %210, %209
  %212 = select i1 %211, i32 -232350726, i32 557498345
  br label %.backedge

213:                                              ; preds = %7
  %214 = add i32 %.070, 1
  %215 = icmp sge i32 %.060, %214
  store i1 %215, i1* %1, align 1
  %216 = load i32, i32* @x, align 4
  %217 = load i32, i32* @y, align 4
  %218 = add i32 %216, -1
  %219 = mul i32 %218, %216
  %220 = and i32 %219, 1
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %217, 10
  %223 = or i1 %222, %221
  %224 = select i1 %223, i32 -1243275206, i32 557498345
  br label %.backedge

225:                                              ; preds = %7
  %.0..0..0.55 = load volatile i1, i1* %1, align 1
  %226 = select i1 %.0..0..0.55, i32 -2052822762, i32 -1197334579
  br label %.backedge

227:                                              ; preds = %7
  %.neg81 = add i32 %.062, -1
  %228 = sext i32 %.060 to i64
  %229 = sext i32 %.066 to i64
  %230 = getelementptr inbounds [1000 x [1000 x i32]], [1000 x [1000 x i32]]* @a, i64 0, i64 %228, i64 %229
  store i32 %.neg81, i32* %230, align 4
  br label %.backedge

231:                                              ; preds = %7
  %.neg = add i32 %.060, -1
  br label %.backedge

232:                                              ; preds = %7
  %233 = add i32 %.070, 1
  br label %.backedge

234:                                              ; preds = %7
  %235 = add i32 %.066, 1
  br label %.backedge

236:                                              ; preds = %7
  %237 = load i32, i32* @x, align 4
  %238 = load i32, i32* @y, align 4
  %239 = add i32 %237, -1
  %240 = mul i32 %239, %237
  %241 = and i32 %240, 1
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %243, %242
  %245 = select i1 %244, i32 345464464, i32 1848517832
  br label %.backedge

246:                                              ; preds = %7
  %247 = load i32, i32* @x, align 4
  %248 = load i32, i32* @y, align 4
  %249 = add i32 %247, -1
  %250 = mul i32 %249, %247
  %251 = and i32 %250, 1
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %248, 10
  %254 = or i1 %253, %252
  %255 = select i1 %254, i32 -1599841834, i32 1848517832
  br label %.backedge

256:                                              ; preds = %7
  br label %.backedge

257:                                              ; preds = %7
  %258 = add i32 %.074, 1
  %.not80 = icmp sgt i32 %.058, %258
  %259 = select i1 %.not80, i32 2093028599, i32 1476053021
  br label %.backedge

260:                                              ; preds = %7
  %261 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %.074)
  br label %.backedge

262:                                              ; preds = %7
  %.not = icmp sgt i32 %.056, %.074
  %263 = select i1 %.not, i32 35450601, i32 524696641
  br label %.backedge

264:                                              ; preds = %7
  %265 = sext i32 %.058 to i64
  %266 = sext i32 %.056 to i64
  %267 = getelementptr inbounds [1000 x [1000 x i32]], [1000 x [1000 x i32]]* @a, i64 0, i64 %265, i64 %266
  %268 = load i32, i32* %267, align 4
  %269 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 %268)
  br label %.backedge

270:                                              ; preds = %7
  %271 = add i32 %.056, 1
  br label %.backedge

272:                                              ; preds = %7
  %putchar = tail call i32 @putchar(i32 10)
  br label %.backedge

273:                                              ; preds = %7
  %274 = load i32, i32* @x, align 4
  %275 = load i32, i32* @y, align 4
  %276 = add i32 %274, -1
  %277 = mul i32 %276, %274
  %278 = and i32 %277, 1
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %275, 10
  %281 = or i1 %280, %279
  %282 = select i1 %281, i32 -826811120, i32 999361376
  br label %.backedge

283:                                              ; preds = %7
  %284 = add i32 %.058, 1
  %285 = load i32, i32* @x, align 4
  %286 = load i32, i32* @y, align 4
  %287 = add i32 %285, -1
  %288 = mul i32 %287, %285
  %289 = and i32 %288, 1
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %286, 10
  %292 = or i1 %291, %290
  %293 = select i1 %292, i32 418884775, i32 999361376
  br label %.backedge

294:                                              ; preds = %7
  br label %.backedge

295:                                              ; preds = %7
  br label %.backedge

296:                                              ; preds = %7
  ret i32 0

297:                                              ; preds = %7
  br label %.backedge

298:                                              ; preds = %7
  br label %.backedge

299:                                              ; preds = %7
  br label %.backedge

300:                                              ; preds = %7
  br label %.backedge

301:                                              ; preds = %7
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([3 x i8], [3 x i8]* @str.1, i64 0, i64 0))
  br label %.backedge

302:                                              ; preds = %7
  %303 = add i32 %.074, 1
  %304 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i32 %303)
  br label %.backedge

305:                                              ; preds = %7
  %306 = add i32 %.064, 1
  br label %.backedge

307:                                              ; preds = %7
  br label %.backedge

308:                                              ; preds = %7
  br label %.backedge

309:                                              ; preds = %7
  %310 = add i32 %.058, 1
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr double @_ZSt4sqrtIiEN9__gnu_cxx11__enable_ifIXsr12__is_integerIT_EE7__valueEdE6__typeES2_(i32 %0) local_unnamed_addr #2 comdat {
  %2 = alloca double, align 8
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = load i32, i32* @x.5, align 4
  %6 = load i32, i32* @y.6, align 4
  %7 = add i32 %5, -1
  %8 = mul i32 %7, %5
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %4, align 1
  %11 = icmp slt i32 %6, 10
  store i1 %11, i1* %3, align 1
  %12 = sitofp i32 %0 to double
  %13 = or i1 %11, %10
  %14 = select i1 %13, i32 1364728059, i32 1248352170
  br label %.outer

.outer:                                           ; preds = %19, %1
  %.ph = phi double [ %20, %19 ], [ undef, %1 ]
  %.0.ph = phi i32 [ %14, %19 ], [ -1189061329, %1 ]
  br label %.outer3

.outer3:                                          ; preds = %.outer3.backedge, %.outer
  %.0.ph4 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph4.be, %.outer3.backedge ]
  br label %15

15:                                               ; preds = %.outer3, %15
  switch i32 %.0.ph4, label %15 [
    i32 -1189061329, label %16
    i32 -1123949154, label %19
    i32 1364728059, label %21
    i32 1248352170, label %.outer3.backedge
  ]

16:                                               ; preds = %15
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %.0..0..0.1 = load volatile i1, i1* %3, align 1
  %17 = or i1 %.0..0..0., %.0..0..0.1
  %18 = select i1 %17, i32 -1123949154, i32 1248352170
  br label %.outer3.backedge

19:                                               ; preds = %15
  %20 = tail call double @sqrt(double %12) #5
  br label %.outer

21:                                               ; preds = %15
  store double %.ph, double* %2, align 8
  %.0..0..0.2 = load volatile double, double* %2, align 8
  ret double %.0..0..0.2

.outer3.backedge:                                 ; preds = %15, %16
  %.0.ph4.be = phi i32 [ %18, %16 ], [ -1123949154, %15 ]
  br label %.outer3
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nosync nounwind readnone willreturn
declare double @sqrt(double) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #4

attributes #0 = { noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { mustprogress nofree nosync nounwind readnone willreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind }
attributes #5 = { nounwind readnone }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
