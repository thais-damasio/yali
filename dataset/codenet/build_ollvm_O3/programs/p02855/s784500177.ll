; ModuleID = 'build_ollvm/programs/p02855/s784500177.ll'
source_filename = "Project_CodeNet_C++1400/p02855/s784500177.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@ch = global [305 x [305 x i8]] zeroinitializer, align 16
@tot = local_unnamed_addr global i32 0, align 4
@vis = local_unnamed_addr global [305 x i32] zeroinitializer, align 16
@ans = local_unnamed_addr global [305 x [305 x i32]] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s784500177.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %6)
  %10 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %9, i32* nonnull dereferenceable(4) %7)
  %11 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %10, i32* nonnull dereferenceable(4) %8)
  br label %12

12:                                               ; preds = %.backedge, %0
  %.096 = phi i32 [ 1, %0 ], [ %.096.be, %.backedge ]
  %.094 = phi i32 [ undef, %0 ], [ %.094.be, %.backedge ]
  %.092 = phi i32 [ undef, %0 ], [ %.092.be, %.backedge ]
  %.090 = phi i32 [ undef, %0 ], [ %.090.be, %.backedge ]
  %.088 = phi i32 [ undef, %0 ], [ %.088.be, %.backedge ]
  %.086 = phi i32 [ undef, %0 ], [ %.086.be, %.backedge ]
  %.084 = phi i32 [ undef, %0 ], [ %.084.be, %.backedge ]
  %.082 = phi i32 [ undef, %0 ], [ %.082.be, %.backedge ]
  %.080 = phi i32 [ undef, %0 ], [ %.080.be, %.backedge ]
  %.078 = phi i32 [ undef, %0 ], [ %.078.be, %.backedge ]
  %.076 = phi i32 [ undef, %0 ], [ %.076.be, %.backedge ]
  %.074 = phi i32 [ -903647261, %0 ], [ %.074.be, %.backedge ]
  %.0 = phi i32 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.074, label %.backedge [
    i32 -903647261, label %13
    i32 -198691896, label %16
    i32 1761789320, label %17
    i32 1601013081, label %20
    i32 1197951452, label %31
    i32 -369701869, label %41
    i32 1017253860, label %51
    i32 421154464, label %52
    i32 -153537532, label %53
    i32 853886075, label %55
    i32 -1081764012, label %56
    i32 -1240528286, label %59
    i32 717900584, label %64
    i32 -228850110, label %65
    i32 -739341638, label %68
    i32 -530560599, label %75
    i32 425534099, label %85
    i32 1538308513, label %100
    i32 2012977942, label %101
    i32 -1596537424, label %111
    i32 505959984, label %122
    i32 -496682320, label %124
    i32 -1327504088, label %126
    i32 368188339, label %129
    i32 172663700, label %139
    i32 92959577, label %152
    i32 -1952722057, label %153
    i32 812195679, label %154
    i32 -680256136, label %164
    i32 -1511857461, label %175
    i32 -153611132, label %176
    i32 -1812627523, label %177
    i32 -686885739, label %178
    i32 -9808145, label %188
    i32 -1313690964, label %199
    i32 649750086, label %200
    i32 -1988777669, label %210
    i32 -1655861989, label %220
    i32 -1433592016, label %221
    i32 -699054149, label %224
    i32 1534722454, label %230
    i32 -2058910881, label %235
    i32 770759118, label %236
    i32 213890836, label %246
    i32 1341238010, label %258
    i32 -765190799, label %260
    i32 1702638488, label %270
    i32 993803898, label %287
    i32 -666028361, label %288
    i32 446700694, label %290
    i32 -1748751619, label %293
    i32 -961333934, label %294
    i32 -1012007899, label %304
    i32 618409043, label %315
    i32 -1699968715, label %316
    i32 -1279698642, label %319
    i32 535264153, label %329
    i32 -1223644442, label %340
    i32 -1370066484, label %342
    i32 -1841474655, label %352
    i32 -1627888771, label %367
    i32 638302694, label %369
    i32 -1344411664, label %374
    i32 -229259138, label %375
    i32 1862950679, label %378
    i32 -1524307028, label %385
    i32 427232250, label %387
    i32 1110713605, label %397
    i32 432923279, label %409
    i32 -1989390179, label %410
    i32 1736661988, label %411
    i32 -929533580, label %413
    i32 1421213681, label %414
    i32 -1585413126, label %417
    i32 1426899289, label %427
    i32 207820590, label %437
    i32 2125469381, label %438
    i32 -1879331279, label %441
    i32 -245897151, label %447
    i32 2028645223, label %450
    i32 118205432, label %460
    i32 1988029768, label %470
    i32 1719312875, label %471
    i32 -880523737, label %481
    i32 -1051368824, label %492
    i32 -1011087572, label %493
    i32 481573065, label %503
    i32 305210514, label %513
    i32 1749885906, label %514
    i32 -1093207136, label %516
    i32 689963811, label %522
    i32 -453235223, label %523
    i32 1228494158, label %527
    i32 71899262, label %529
    i32 -546113956, label %531
    i32 -486179285, label %532
    i32 2012137655, label %533
    i32 155268126, label %541
    i32 46699376, label %542
    i32 1355199696, label %543
    i32 -1042739209, label %544
    i32 -438472757, label %547
    i32 1893110322, label %548
    i32 1407102895, label %549
    i32 -1272898429, label %551
  ]

.backedge:                                        ; preds = %12, %551, %549, %548, %547, %544, %543, %542, %541, %533, %532, %531, %529, %527, %523, %522, %516, %514, %503, %493, %492, %481, %471, %470, %460, %450, %447, %441, %438, %437, %427, %417, %414, %413, %411, %410, %409, %397, %387, %385, %378, %375, %374, %369, %367, %352, %342, %340, %329, %319, %316, %315, %304, %294, %293, %290, %288, %287, %270, %260, %258, %246, %236, %235, %230, %224, %221, %220, %210, %200, %199, %188, %178, %177, %176, %175, %164, %154, %153, %152, %139, %129, %126, %124, %122, %111, %101, %100, %85, %75, %68, %65, %64, %59, %56, %55, %53, %52, %51, %41, %31, %20, %17, %16, %13
  %.096.be = phi i32 [ %.096, %12 ], [ %.096, %551 ], [ %.096, %549 ], [ %.096, %548 ], [ %.096, %547 ], [ %.096, %544 ], [ %.096, %543 ], [ %.096, %542 ], [ %.096, %541 ], [ %.096, %533 ], [ %.096, %532 ], [ %.096, %531 ], [ %.096, %529 ], [ %.096, %527 ], [ %.096, %523 ], [ %.096, %522 ], [ %.096, %516 ], [ %.096, %514 ], [ %.096, %503 ], [ %.096, %493 ], [ %.096, %492 ], [ %.096, %481 ], [ %.096, %471 ], [ %.096, %470 ], [ %.096, %460 ], [ %.096, %450 ], [ %.096, %447 ], [ %.096, %441 ], [ %.096, %438 ], [ %.096, %437 ], [ %.096, %427 ], [ %.096, %417 ], [ %.096, %414 ], [ %.096, %413 ], [ %.096, %411 ], [ %.096, %410 ], [ %.096, %409 ], [ %.096, %397 ], [ %.096, %387 ], [ %.096, %385 ], [ %.096, %378 ], [ %.096, %375 ], [ %.096, %374 ], [ %.096, %369 ], [ %.096, %367 ], [ %.096, %352 ], [ %.096, %342 ], [ %.096, %340 ], [ %.096, %329 ], [ %.096, %319 ], [ %.096, %316 ], [ %.096, %315 ], [ %.096, %304 ], [ %.096, %294 ], [ %.096, %293 ], [ %.096, %290 ], [ %.096, %288 ], [ %.096, %287 ], [ %.096, %270 ], [ %.096, %260 ], [ %.096, %258 ], [ %.096, %246 ], [ %.096, %236 ], [ %.096, %235 ], [ %.096, %230 ], [ %.096, %224 ], [ %.096, %221 ], [ %.096, %220 ], [ %.096, %210 ], [ %.096, %200 ], [ %.096, %199 ], [ %.096, %188 ], [ %.096, %178 ], [ %.096, %177 ], [ %.096, %176 ], [ %.096, %175 ], [ %.096, %164 ], [ %.096, %154 ], [ %.096, %153 ], [ %.096, %152 ], [ %.096, %139 ], [ %.096, %129 ], [ %.096, %126 ], [ %.096, %124 ], [ %.096, %122 ], [ %.096, %111 ], [ %.096, %101 ], [ %.096, %100 ], [ %.096, %85 ], [ %.096, %75 ], [ %.096, %68 ], [ %.096, %65 ], [ %.096, %64 ], [ %.096, %59 ], [ %.096, %56 ], [ %.096, %55 ], [ %54, %53 ], [ %.096, %52 ], [ %.096, %51 ], [ %.096, %41 ], [ %.096, %31 ], [ %.096, %20 ], [ %.096, %17 ], [ %.096, %16 ], [ %.096, %13 ]
  %.094.be = phi i32 [ %.094, %12 ], [ %.094, %551 ], [ %.094, %549 ], [ %.094, %548 ], [ %.094, %547 ], [ %.094, %544 ], [ %.094, %543 ], [ %.094, %542 ], [ %.094, %541 ], [ %.094, %533 ], [ %.094, %532 ], [ %.094, %531 ], [ %.094, %529 ], [ %.094, %527 ], [ %.094, %523 ], [ %.094, %522 ], [ %.094, %516 ], [ %515, %514 ], [ %.094, %503 ], [ %.094, %493 ], [ %.094, %492 ], [ %.094, %481 ], [ %.094, %471 ], [ %.094, %470 ], [ %.094, %460 ], [ %.094, %450 ], [ %.094, %447 ], [ %.094, %441 ], [ %.094, %438 ], [ %.094, %437 ], [ %.094, %427 ], [ %.094, %417 ], [ %.094, %414 ], [ %.094, %413 ], [ %.094, %411 ], [ %.094, %410 ], [ %.094, %409 ], [ %.094, %397 ], [ %.094, %387 ], [ %.094, %385 ], [ %.094, %378 ], [ %.094, %375 ], [ %.094, %374 ], [ %.094, %369 ], [ %.094, %367 ], [ %.094, %352 ], [ %.094, %342 ], [ %.094, %340 ], [ %.094, %329 ], [ %.094, %319 ], [ %.094, %316 ], [ %.094, %315 ], [ %.094, %304 ], [ %.094, %294 ], [ %.094, %293 ], [ %.094, %290 ], [ %.094, %288 ], [ %.094, %287 ], [ %.094, %270 ], [ %.094, %260 ], [ %.094, %258 ], [ %.094, %246 ], [ %.094, %236 ], [ %.094, %235 ], [ %.094, %230 ], [ %.094, %224 ], [ %.094, %221 ], [ %.094, %220 ], [ %.094, %210 ], [ %.094, %200 ], [ %.094, %199 ], [ %.094, %188 ], [ %.094, %178 ], [ %.094, %177 ], [ %.094, %176 ], [ %.094, %175 ], [ %.094, %164 ], [ %.094, %154 ], [ %.094, %153 ], [ %.094, %152 ], [ %.094, %139 ], [ %.094, %129 ], [ %.094, %126 ], [ %.094, %124 ], [ %.094, %122 ], [ %.094, %111 ], [ %.094, %101 ], [ %.094, %100 ], [ %.094, %85 ], [ %.094, %75 ], [ %.094, %68 ], [ %.094, %65 ], [ %.094, %64 ], [ %.094, %59 ], [ %.094, %56 ], [ %.094, %55 ], [ %.094, %53 ], [ %.094, %52 ], [ %.094, %51 ], [ %.neg109, %41 ], [ %.094, %31 ], [ %.094, %20 ], [ %.094, %17 ], [ 1, %16 ], [ %.094, %13 ]
  %.092.be = phi i32 [ %.092, %12 ], [ %.092, %551 ], [ %.092, %549 ], [ %.092, %548 ], [ %.092, %547 ], [ %.092, %544 ], [ %.092, %543 ], [ %.092, %542 ], [ %.092, %541 ], [ %.092, %533 ], [ %.092, %532 ], [ %.092, %531 ], [ %530, %529 ], [ %.092, %527 ], [ %.092, %523 ], [ %.092, %522 ], [ %.092, %516 ], [ %.092, %514 ], [ %.092, %503 ], [ %.092, %493 ], [ %.092, %492 ], [ %.092, %481 ], [ %.092, %471 ], [ %.092, %470 ], [ %.092, %460 ], [ %.092, %450 ], [ %.092, %447 ], [ %.092, %441 ], [ %.092, %438 ], [ %.092, %437 ], [ %.092, %427 ], [ %.092, %417 ], [ %.092, %414 ], [ %.092, %413 ], [ %.092, %411 ], [ %.092, %410 ], [ %.092, %409 ], [ %.092, %397 ], [ %.092, %387 ], [ %.092, %385 ], [ %.092, %378 ], [ %.092, %375 ], [ %.092, %374 ], [ %.092, %369 ], [ %.092, %367 ], [ %.092, %352 ], [ %.092, %342 ], [ %.092, %340 ], [ %.092, %329 ], [ %.092, %319 ], [ %.092, %316 ], [ %.092, %315 ], [ %.092, %304 ], [ %.092, %294 ], [ %.092, %293 ], [ %.092, %290 ], [ %.092, %288 ], [ %.092, %287 ], [ %.092, %270 ], [ %.092, %260 ], [ %.092, %258 ], [ %.092, %246 ], [ %.092, %236 ], [ %.092, %235 ], [ %.092, %230 ], [ %.092, %224 ], [ %.092, %221 ], [ %.092, %220 ], [ %.092, %210 ], [ %.092, %200 ], [ %.092, %199 ], [ %189, %188 ], [ %.092, %178 ], [ %.092, %177 ], [ %.092, %176 ], [ %.092, %175 ], [ %.092, %164 ], [ %.092, %154 ], [ %.092, %153 ], [ %.092, %152 ], [ %.092, %139 ], [ %.092, %129 ], [ %.092, %126 ], [ %.092, %124 ], [ %.092, %122 ], [ %.092, %111 ], [ %.092, %101 ], [ %.092, %100 ], [ %.092, %85 ], [ %.092, %75 ], [ %.092, %68 ], [ %.092, %65 ], [ %.092, %64 ], [ %.092, %59 ], [ %.092, %56 ], [ 1, %55 ], [ %.092, %53 ], [ %.092, %52 ], [ %.092, %51 ], [ %.092, %41 ], [ %.092, %31 ], [ %.092, %20 ], [ %.092, %17 ], [ %.092, %16 ], [ %.092, %13 ]
  %.090.be = phi i32 [ %.090, %12 ], [ %.090, %551 ], [ %.090, %549 ], [ %.090, %548 ], [ %.090, %547 ], [ %.090, %544 ], [ %.090, %543 ], [ %.090, %542 ], [ %.090, %541 ], [ %.090, %533 ], [ %.090, %532 ], [ %.090, %531 ], [ %.090, %529 ], [ %.090, %527 ], [ %.090, %523 ], [ %.090, %522 ], [ 1, %516 ], [ %.090, %514 ], [ %.090, %503 ], [ %.090, %493 ], [ %.090, %492 ], [ %.090, %481 ], [ %.090, %471 ], [ %.090, %470 ], [ %.090, %460 ], [ %.090, %450 ], [ %.090, %447 ], [ %.090, %441 ], [ %.090, %438 ], [ %.090, %437 ], [ %.090, %427 ], [ %.090, %417 ], [ %.090, %414 ], [ %.090, %413 ], [ %.090, %411 ], [ %.090, %410 ], [ %.090, %409 ], [ %.090, %397 ], [ %.090, %387 ], [ %.090, %385 ], [ %.090, %378 ], [ %.090, %375 ], [ %.090, %374 ], [ %.090, %369 ], [ %.090, %367 ], [ %.090, %352 ], [ %.090, %342 ], [ %.090, %340 ], [ %.090, %329 ], [ %.090, %319 ], [ %.090, %316 ], [ %.090, %315 ], [ %.090, %304 ], [ %.090, %294 ], [ %.090, %293 ], [ %.090, %290 ], [ %.090, %288 ], [ %.090, %287 ], [ %.090, %270 ], [ %.090, %260 ], [ %.090, %258 ], [ %.090, %246 ], [ %.090, %236 ], [ %.090, %235 ], [ %.090, %230 ], [ %.090, %224 ], [ %.090, %221 ], [ %.090, %220 ], [ %.090, %210 ], [ %.090, %200 ], [ %.090, %199 ], [ %.090, %188 ], [ %.090, %178 ], [ %.090, %177 ], [ %.090, %176 ], [ %.090, %175 ], [ %.090, %164 ], [ %.090, %154 ], [ %.090, %153 ], [ %.090, %152 ], [ %.090, %139 ], [ %.090, %129 ], [ %.090, %126 ], [ %.090, %124 ], [ %.090, %122 ], [ %.090, %111 ], [ %.090, %101 ], [ %.090, %100 ], [ 1, %85 ], [ %.090, %75 ], [ %.090, %68 ], [ %.090, %65 ], [ 0, %64 ], [ %.090, %59 ], [ %.090, %56 ], [ %.090, %55 ], [ %.090, %53 ], [ %.090, %52 ], [ %.090, %51 ], [ %.090, %41 ], [ %.090, %31 ], [ %.090, %20 ], [ %.090, %17 ], [ %.090, %16 ], [ %.090, %13 ]
  %.088.be = phi i32 [ %.088, %12 ], [ %.088, %551 ], [ %.088, %549 ], [ %.088, %548 ], [ %.088, %547 ], [ %.088, %544 ], [ %.088, %543 ], [ %.088, %542 ], [ %.088, %541 ], [ %.088, %533 ], [ %.088, %532 ], [ %.088, %531 ], [ %.088, %529 ], [ %528, %527 ], [ %.088, %523 ], [ %.088, %522 ], [ %.088, %516 ], [ %.088, %514 ], [ %.088, %503 ], [ %.088, %493 ], [ %.088, %492 ], [ %.088, %481 ], [ %.088, %471 ], [ %.088, %470 ], [ %.088, %460 ], [ %.088, %450 ], [ %.088, %447 ], [ %.088, %441 ], [ %.088, %438 ], [ %.088, %437 ], [ %.088, %427 ], [ %.088, %417 ], [ %.088, %414 ], [ %.088, %413 ], [ %.088, %411 ], [ %.088, %410 ], [ %.088, %409 ], [ %.088, %397 ], [ %.088, %387 ], [ %.088, %385 ], [ %.088, %378 ], [ %.088, %375 ], [ %.088, %374 ], [ %.088, %369 ], [ %.088, %367 ], [ %.088, %352 ], [ %.088, %342 ], [ %.088, %340 ], [ %.088, %329 ], [ %.088, %319 ], [ %.088, %316 ], [ %.088, %315 ], [ %.088, %304 ], [ %.088, %294 ], [ %.088, %293 ], [ %.088, %290 ], [ %.088, %288 ], [ %.088, %287 ], [ %.088, %270 ], [ %.088, %260 ], [ %.088, %258 ], [ %.088, %246 ], [ %.088, %236 ], [ %.088, %235 ], [ %.088, %230 ], [ %.088, %224 ], [ %.088, %221 ], [ %.088, %220 ], [ %.088, %210 ], [ %.088, %200 ], [ %.088, %199 ], [ %.088, %188 ], [ %.088, %178 ], [ %.088, %177 ], [ %.088, %176 ], [ %.088, %175 ], [ %165, %164 ], [ %.088, %154 ], [ %.088, %153 ], [ %.088, %152 ], [ %.088, %139 ], [ %.088, %129 ], [ %.088, %126 ], [ %.088, %124 ], [ %.088, %122 ], [ %.088, %111 ], [ %.088, %101 ], [ %.088, %100 ], [ %.088, %85 ], [ %.088, %75 ], [ %.088, %68 ], [ %.088, %65 ], [ 1, %64 ], [ %.088, %59 ], [ %.088, %56 ], [ %.088, %55 ], [ %.088, %53 ], [ %.088, %52 ], [ %.088, %51 ], [ %.088, %41 ], [ %.088, %31 ], [ %.088, %20 ], [ %.088, %17 ], [ %.088, %16 ], [ %.088, %13 ]
  %.086.be = phi i32 [ %.086, %12 ], [ %.086, %551 ], [ %.086, %549 ], [ %.086, %548 ], [ %.086, %547 ], [ %.086, %544 ], [ %.086, %543 ], [ %.086, %542 ], [ %.neg, %541 ], [ %.086, %533 ], [ %.086, %532 ], [ 2, %531 ], [ %.086, %529 ], [ %.086, %527 ], [ %.086, %523 ], [ %.086, %522 ], [ %.086, %516 ], [ %.086, %514 ], [ %.086, %503 ], [ %.086, %493 ], [ %.086, %492 ], [ %.086, %481 ], [ %.086, %471 ], [ %.086, %470 ], [ %.086, %460 ], [ %.086, %450 ], [ %.086, %447 ], [ %.086, %441 ], [ %.086, %438 ], [ %.086, %437 ], [ %.086, %427 ], [ %.086, %417 ], [ %.086, %414 ], [ %.086, %413 ], [ %.086, %411 ], [ %.086, %410 ], [ %.086, %409 ], [ %.086, %397 ], [ %.086, %387 ], [ %.086, %385 ], [ %.086, %378 ], [ %.086, %375 ], [ %.086, %374 ], [ %.086, %369 ], [ %.086, %367 ], [ %.086, %352 ], [ %.086, %342 ], [ %.086, %340 ], [ %.086, %329 ], [ %.086, %319 ], [ %.086, %316 ], [ %.086, %315 ], [ %305, %304 ], [ %.086, %294 ], [ %.086, %293 ], [ %.086, %290 ], [ %.086, %288 ], [ %.086, %287 ], [ %.086, %270 ], [ %.086, %260 ], [ %.086, %258 ], [ %.086, %246 ], [ %.086, %236 ], [ %.086, %235 ], [ %.086, %230 ], [ %.086, %224 ], [ %.086, %221 ], [ %.086, %220 ], [ 2, %210 ], [ %.086, %200 ], [ %.086, %199 ], [ %.086, %188 ], [ %.086, %178 ], [ %.086, %177 ], [ %.086, %176 ], [ %.086, %175 ], [ %.086, %164 ], [ %.086, %154 ], [ %.086, %153 ], [ %.086, %152 ], [ %.086, %139 ], [ %.086, %129 ], [ %.086, %126 ], [ %.086, %124 ], [ %.086, %122 ], [ %.086, %111 ], [ %.086, %101 ], [ %.086, %100 ], [ %.086, %85 ], [ %.086, %75 ], [ %.086, %68 ], [ %.086, %65 ], [ %.086, %64 ], [ %.086, %59 ], [ %.086, %56 ], [ %.086, %55 ], [ %.086, %53 ], [ %.086, %52 ], [ %.086, %51 ], [ %.086, %41 ], [ %.086, %31 ], [ %.086, %20 ], [ %.086, %17 ], [ %.086, %16 ], [ %.086, %13 ]
  %.084.be = phi i32 [ %.084, %12 ], [ %.084, %551 ], [ %.084, %549 ], [ %.084, %548 ], [ %.084, %547 ], [ %.084, %544 ], [ %.084, %543 ], [ %.084, %542 ], [ %.084, %541 ], [ %.084, %533 ], [ %.084, %532 ], [ %.084, %531 ], [ %.084, %529 ], [ %.084, %527 ], [ %.084, %523 ], [ %.084, %522 ], [ %.084, %516 ], [ %.084, %514 ], [ %.084, %503 ], [ %.084, %493 ], [ %.084, %492 ], [ %.084, %481 ], [ %.084, %471 ], [ %.084, %470 ], [ %.084, %460 ], [ %.084, %450 ], [ %.084, %447 ], [ %.084, %441 ], [ %.084, %438 ], [ %.084, %437 ], [ %.084, %427 ], [ %.084, %417 ], [ %.084, %414 ], [ %.084, %413 ], [ %.084, %411 ], [ %.084, %410 ], [ %.084, %409 ], [ %.084, %397 ], [ %.084, %387 ], [ %.084, %385 ], [ %.084, %378 ], [ %.084, %375 ], [ %.084, %374 ], [ %.084, %369 ], [ %.084, %367 ], [ %.084, %352 ], [ %.084, %342 ], [ %.084, %340 ], [ %.084, %329 ], [ %.084, %319 ], [ %.084, %316 ], [ %.084, %315 ], [ %.084, %304 ], [ %.084, %294 ], [ %.084, %293 ], [ %.084, %290 ], [ %289, %288 ], [ %.084, %287 ], [ %.084, %270 ], [ %.084, %260 ], [ %.084, %258 ], [ %.084, %246 ], [ %.084, %236 ], [ 1, %235 ], [ %.084, %230 ], [ %.084, %224 ], [ %.084, %221 ], [ %.084, %220 ], [ %.084, %210 ], [ %.084, %200 ], [ %.084, %199 ], [ %.084, %188 ], [ %.084, %178 ], [ %.084, %177 ], [ %.084, %176 ], [ %.084, %175 ], [ %.084, %164 ], [ %.084, %154 ], [ %.084, %153 ], [ %.084, %152 ], [ %.084, %139 ], [ %.084, %129 ], [ %.084, %126 ], [ %.084, %124 ], [ %.084, %122 ], [ %.084, %111 ], [ %.084, %101 ], [ %.084, %100 ], [ %.084, %85 ], [ %.084, %75 ], [ %.084, %68 ], [ %.084, %65 ], [ %.084, %64 ], [ %.084, %59 ], [ %.084, %56 ], [ %.084, %55 ], [ %.084, %53 ], [ %.084, %52 ], [ %.084, %51 ], [ %.084, %41 ], [ %.084, %31 ], [ %.084, %20 ], [ %.084, %17 ], [ %.084, %16 ], [ %.084, %13 ]
  %.082.be = phi i32 [ %.082, %12 ], [ %.082, %551 ], [ %.082, %549 ], [ %.082, %548 ], [ %.082, %547 ], [ %.082, %544 ], [ %.082, %543 ], [ %.082, %542 ], [ %.082, %541 ], [ %.082, %533 ], [ %.082, %532 ], [ %.082, %531 ], [ %.082, %529 ], [ %.082, %527 ], [ %.082, %523 ], [ %.082, %522 ], [ %.082, %516 ], [ %.082, %514 ], [ %.082, %503 ], [ %.082, %493 ], [ %.082, %492 ], [ %.082, %481 ], [ %.082, %471 ], [ %.082, %470 ], [ %.082, %460 ], [ %.082, %450 ], [ %.082, %447 ], [ %.082, %441 ], [ %.082, %438 ], [ %.082, %437 ], [ %.082, %427 ], [ %.082, %417 ], [ %.082, %414 ], [ %.082, %413 ], [ %412, %411 ], [ %.082, %410 ], [ %.082, %409 ], [ %.082, %397 ], [ %.082, %387 ], [ %.082, %385 ], [ %.082, %378 ], [ %.082, %375 ], [ %.082, %374 ], [ %.082, %369 ], [ %.082, %367 ], [ %.082, %352 ], [ %.082, %342 ], [ %.082, %340 ], [ %.082, %329 ], [ %.082, %319 ], [ %318, %316 ], [ %.082, %315 ], [ %.082, %304 ], [ %.082, %294 ], [ %.082, %293 ], [ %.082, %290 ], [ %.082, %288 ], [ %.082, %287 ], [ %.082, %270 ], [ %.082, %260 ], [ %.082, %258 ], [ %.082, %246 ], [ %.082, %236 ], [ %.082, %235 ], [ %.082, %230 ], [ %.082, %224 ], [ %.082, %221 ], [ %.082, %220 ], [ %.082, %210 ], [ %.082, %200 ], [ %.082, %199 ], [ %.082, %188 ], [ %.082, %178 ], [ %.082, %177 ], [ %.082, %176 ], [ %.082, %175 ], [ %.082, %164 ], [ %.082, %154 ], [ %.082, %153 ], [ %.082, %152 ], [ %.082, %139 ], [ %.082, %129 ], [ %.082, %126 ], [ %.082, %124 ], [ %.082, %122 ], [ %.082, %111 ], [ %.082, %101 ], [ %.082, %100 ], [ %.082, %85 ], [ %.082, %75 ], [ %.082, %68 ], [ %.082, %65 ], [ %.082, %64 ], [ %.082, %59 ], [ %.082, %56 ], [ %.082, %55 ], [ %.082, %53 ], [ %.082, %52 ], [ %.082, %51 ], [ %.082, %41 ], [ %.082, %31 ], [ %.082, %20 ], [ %.082, %17 ], [ %.082, %16 ], [ %.082, %13 ]
  %.080.be = phi i32 [ %.080, %12 ], [ %.080, %551 ], [ %.080, %549 ], [ %.080, %548 ], [ %.080, %547 ], [ %.080, %544 ], [ %.080, %543 ], [ %.080, %542 ], [ %.080, %541 ], [ %.080, %533 ], [ %.080, %532 ], [ %.080, %531 ], [ %.080, %529 ], [ %.080, %527 ], [ %.080, %523 ], [ %.080, %522 ], [ %.080, %516 ], [ %.080, %514 ], [ %.080, %503 ], [ %.080, %493 ], [ %.080, %492 ], [ %.080, %481 ], [ %.080, %471 ], [ %.080, %470 ], [ %.080, %460 ], [ %.080, %450 ], [ %.080, %447 ], [ %.080, %441 ], [ %.080, %438 ], [ %.080, %437 ], [ %.080, %427 ], [ %.080, %417 ], [ %.080, %414 ], [ %.080, %413 ], [ %.080, %411 ], [ %.080, %410 ], [ %.080, %409 ], [ %.080, %397 ], [ %.080, %387 ], [ %386, %385 ], [ %.080, %378 ], [ %.080, %375 ], [ 1, %374 ], [ %.080, %369 ], [ %.080, %367 ], [ %.080, %352 ], [ %.080, %342 ], [ %.080, %340 ], [ %.080, %329 ], [ %.080, %319 ], [ %.080, %316 ], [ %.080, %315 ], [ %.080, %304 ], [ %.080, %294 ], [ %.080, %293 ], [ %.080, %290 ], [ %.080, %288 ], [ %.080, %287 ], [ %.080, %270 ], [ %.080, %260 ], [ %.080, %258 ], [ %.080, %246 ], [ %.080, %236 ], [ %.080, %235 ], [ %.080, %230 ], [ %.080, %224 ], [ %.080, %221 ], [ %.080, %220 ], [ %.080, %210 ], [ %.080, %200 ], [ %.080, %199 ], [ %.080, %188 ], [ %.080, %178 ], [ %.080, %177 ], [ %.080, %176 ], [ %.080, %175 ], [ %.080, %164 ], [ %.080, %154 ], [ %.080, %153 ], [ %.080, %152 ], [ %.080, %139 ], [ %.080, %129 ], [ %.080, %126 ], [ %.080, %124 ], [ %.080, %122 ], [ %.080, %111 ], [ %.080, %101 ], [ %.080, %100 ], [ %.080, %85 ], [ %.080, %75 ], [ %.080, %68 ], [ %.080, %65 ], [ %.080, %64 ], [ %.080, %59 ], [ %.080, %56 ], [ %.080, %55 ], [ %.080, %53 ], [ %.080, %52 ], [ %.080, %51 ], [ %.080, %41 ], [ %.080, %31 ], [ %.080, %20 ], [ %.080, %17 ], [ %.080, %16 ], [ %.080, %13 ]
  %.078.be = phi i32 [ %.078, %12 ], [ %.078, %551 ], [ %550, %549 ], [ %.078, %548 ], [ %.078, %547 ], [ %.078, %544 ], [ %.078, %543 ], [ %.078, %542 ], [ %.078, %541 ], [ %.078, %533 ], [ %.078, %532 ], [ %.078, %531 ], [ %.078, %529 ], [ %.078, %527 ], [ %.078, %523 ], [ %.078, %522 ], [ %.078, %516 ], [ %.078, %514 ], [ %.078, %503 ], [ %.078, %493 ], [ %.078, %492 ], [ %482, %481 ], [ %.078, %471 ], [ %.078, %470 ], [ %.078, %460 ], [ %.078, %450 ], [ %.078, %447 ], [ %.078, %441 ], [ %.078, %438 ], [ %.078, %437 ], [ %.078, %427 ], [ %.078, %417 ], [ %.078, %414 ], [ 1, %413 ], [ %.078, %411 ], [ %.078, %410 ], [ %.078, %409 ], [ %.078, %397 ], [ %.078, %387 ], [ %.078, %385 ], [ %.078, %378 ], [ %.078, %375 ], [ %.078, %374 ], [ %.078, %369 ], [ %.078, %367 ], [ %.078, %352 ], [ %.078, %342 ], [ %.078, %340 ], [ %.078, %329 ], [ %.078, %319 ], [ %.078, %316 ], [ %.078, %315 ], [ %.078, %304 ], [ %.078, %294 ], [ %.078, %293 ], [ %.078, %290 ], [ %.078, %288 ], [ %.078, %287 ], [ %.078, %270 ], [ %.078, %260 ], [ %.078, %258 ], [ %.078, %246 ], [ %.078, %236 ], [ %.078, %235 ], [ %.078, %230 ], [ %.078, %224 ], [ %.078, %221 ], [ %.078, %220 ], [ %.078, %210 ], [ %.078, %200 ], [ %.078, %199 ], [ %.078, %188 ], [ %.078, %178 ], [ %.078, %177 ], [ %.078, %176 ], [ %.078, %175 ], [ %.078, %164 ], [ %.078, %154 ], [ %.078, %153 ], [ %.078, %152 ], [ %.078, %139 ], [ %.078, %129 ], [ %.078, %126 ], [ %.078, %124 ], [ %.078, %122 ], [ %.078, %111 ], [ %.078, %101 ], [ %.078, %100 ], [ %.078, %85 ], [ %.078, %75 ], [ %.078, %68 ], [ %.078, %65 ], [ %.078, %64 ], [ %.078, %59 ], [ %.078, %56 ], [ %.078, %55 ], [ %.078, %53 ], [ %.078, %52 ], [ %.078, %51 ], [ %.078, %41 ], [ %.078, %31 ], [ %.078, %20 ], [ %.078, %17 ], [ %.078, %16 ], [ %.078, %13 ]
  %.076.be = phi i32 [ %.076, %12 ], [ %.076, %551 ], [ %.076, %549 ], [ %.076, %548 ], [ 1, %547 ], [ %.076, %544 ], [ %.076, %543 ], [ %.076, %542 ], [ %.076, %541 ], [ %.076, %533 ], [ %.076, %532 ], [ %.076, %531 ], [ %.076, %529 ], [ %.076, %527 ], [ %.076, %523 ], [ %.076, %522 ], [ %.076, %516 ], [ %.076, %514 ], [ %.076, %503 ], [ %.076, %493 ], [ %.076, %492 ], [ %.076, %481 ], [ %.076, %471 ], [ %.076, %470 ], [ %.076, %460 ], [ %.076, %450 ], [ %448, %447 ], [ %.076, %441 ], [ %.076, %438 ], [ %.076, %437 ], [ 1, %427 ], [ %.076, %417 ], [ %.076, %414 ], [ %.076, %413 ], [ %.076, %411 ], [ %.076, %410 ], [ %.076, %409 ], [ %.076, %397 ], [ %.076, %387 ], [ %.076, %385 ], [ %.076, %378 ], [ %.076, %375 ], [ %.076, %374 ], [ %.076, %369 ], [ %.076, %367 ], [ %.076, %352 ], [ %.076, %342 ], [ %.076, %340 ], [ %.076, %329 ], [ %.076, %319 ], [ %.076, %316 ], [ %.076, %315 ], [ %.076, %304 ], [ %.076, %294 ], [ %.076, %293 ], [ %.076, %290 ], [ %.076, %288 ], [ %.076, %287 ], [ %.076, %270 ], [ %.076, %260 ], [ %.076, %258 ], [ %.076, %246 ], [ %.076, %236 ], [ %.076, %235 ], [ %.076, %230 ], [ %.076, %224 ], [ %.076, %221 ], [ %.076, %220 ], [ %.076, %210 ], [ %.076, %200 ], [ %.076, %199 ], [ %.076, %188 ], [ %.076, %178 ], [ %.076, %177 ], [ %.076, %176 ], [ %.076, %175 ], [ %.076, %164 ], [ %.076, %154 ], [ %.076, %153 ], [ %.076, %152 ], [ %.076, %139 ], [ %.076, %129 ], [ %.076, %126 ], [ %.076, %124 ], [ %.076, %122 ], [ %.076, %111 ], [ %.076, %101 ], [ %.076, %100 ], [ %.076, %85 ], [ %.076, %75 ], [ %.076, %68 ], [ %.076, %65 ], [ %.076, %64 ], [ %.076, %59 ], [ %.076, %56 ], [ %.076, %55 ], [ %.076, %53 ], [ %.076, %52 ], [ %.076, %51 ], [ %.076, %41 ], [ %.076, %31 ], [ %.076, %20 ], [ %.076, %17 ], [ %.076, %16 ], [ %.076, %13 ]
  %.074.be = phi i32 [ %.074, %12 ], [ 481573065, %551 ], [ -880523737, %549 ], [ 118205432, %548 ], [ 1426899289, %547 ], [ 1110713605, %544 ], [ -1841474655, %543 ], [ 535264153, %542 ], [ -1012007899, %541 ], [ 1702638488, %533 ], [ 213890836, %532 ], [ -1988777669, %531 ], [ -9808145, %529 ], [ -680256136, %527 ], [ 172663700, %523 ], [ -1596537424, %522 ], [ 425534099, %516 ], [ -369701869, %514 ], [ %512, %503 ], [ %502, %493 ], [ 1421213681, %492 ], [ %491, %481 ], [ %480, %471 ], [ 1719312875, %470 ], [ %469, %460 ], [ %459, %450 ], [ 2125469381, %447 ], [ -245897151, %441 ], [ %440, %438 ], [ 2125469381, %437 ], [ %436, %427 ], [ %426, %417 ], [ %416, %414 ], [ 1421213681, %413 ], [ -1279698642, %411 ], [ 1736661988, %410 ], [ -1989390179, %409 ], [ %408, %397 ], [ %396, %387 ], [ -229259138, %385 ], [ -1524307028, %378 ], [ %377, %375 ], [ -229259138, %374 ], [ %373, %369 ], [ %368, %367 ], [ %366, %352 ], [ %351, %342 ], [ %341, %340 ], [ %339, %329 ], [ %328, %319 ], [ -1279698642, %316 ], [ -1433592016, %315 ], [ %314, %304 ], [ %303, %294 ], [ -961333934, %293 ], [ -1748751619, %290 ], [ 770759118, %288 ], [ -666028361, %287 ], [ %286, %270 ], [ %269, %260 ], [ %259, %258 ], [ %257, %246 ], [ %245, %236 ], [ 770759118, %235 ], [ %234, %230 ], [ %229, %224 ], [ %223, %221 ], [ -1433592016, %220 ], [ %219, %210 ], [ %209, %200 ], [ -1081764012, %199 ], [ %198, %188 ], [ %187, %178 ], [ -686885739, %177 ], [ -1812627523, %176 ], [ -228850110, %175 ], [ %174, %164 ], [ %163, %154 ], [ 812195679, %153 ], [ -1952722057, %152 ], [ %151, %139 ], [ %138, %129 ], [ 368188339, %126 ], [ 368188339, %124 ], [ %123, %122 ], [ %121, %111 ], [ %110, %101 ], [ -1952722057, %100 ], [ %99, %85 ], [ %84, %75 ], [ %74, %68 ], [ %67, %65 ], [ -228850110, %64 ], [ %63, %59 ], [ %58, %56 ], [ -1081764012, %55 ], [ -903647261, %53 ], [ -153537532, %52 ], [ 1761789320, %51 ], [ %50, %41 ], [ %40, %31 ], [ 1197951452, %20 ], [ %19, %17 ], [ 1761789320, %16 ], [ %15, %13 ]
  %.0.be = phi i32 [ %.0, %12 ], [ %.0, %551 ], [ %.0, %549 ], [ %.0, %548 ], [ %.0, %547 ], [ %.0, %544 ], [ %.0, %543 ], [ %.0, %542 ], [ %.0, %541 ], [ %.0, %533 ], [ %.0, %532 ], [ %.0, %531 ], [ %.0, %529 ], [ %.0, %527 ], [ %.0, %523 ], [ %.0, %522 ], [ %.0, %516 ], [ %.0, %514 ], [ %.0, %503 ], [ %.0, %493 ], [ %.0, %492 ], [ %.0, %481 ], [ %.0, %471 ], [ %.0, %470 ], [ %.0, %460 ], [ %.0, %450 ], [ %.0, %447 ], [ %.0, %441 ], [ %.0, %438 ], [ %.0, %437 ], [ %.0, %427 ], [ %.0, %417 ], [ %.0, %414 ], [ %.0, %413 ], [ %.0, %411 ], [ %.0, %410 ], [ %.0, %409 ], [ %.0, %397 ], [ %.0, %387 ], [ %.0, %385 ], [ %.0, %378 ], [ %.0, %375 ], [ %.0, %374 ], [ %.0, %369 ], [ %.0, %367 ], [ %.0, %352 ], [ %.0, %342 ], [ %.0, %340 ], [ %.0, %329 ], [ %.0, %319 ], [ %.0, %316 ], [ %.0, %315 ], [ %.0, %304 ], [ %.0, %294 ], [ %.0, %293 ], [ %.0, %290 ], [ %.0, %288 ], [ %.0, %287 ], [ %.0, %270 ], [ %.0, %260 ], [ %.0, %258 ], [ %.0, %246 ], [ %.0, %236 ], [ %.0, %235 ], [ %.0, %230 ], [ %.0, %224 ], [ %.0, %221 ], [ %.0, %220 ], [ %.0, %210 ], [ %.0, %200 ], [ %.0, %199 ], [ %.0, %188 ], [ %.0, %178 ], [ %.0, %177 ], [ %.0, %176 ], [ %.0, %175 ], [ %.0, %164 ], [ %.0, %154 ], [ %.0, %153 ], [ %.0, %152 ], [ %.0, %139 ], [ %.0, %129 ], [ %128, %126 ], [ %125, %124 ], [ %.0, %122 ], [ %.0, %111 ], [ %.0, %101 ], [ %.0, %100 ], [ %.0, %85 ], [ %.0, %75 ], [ %.0, %68 ], [ %.0, %65 ], [ %.0, %64 ], [ %.0, %59 ], [ %.0, %56 ], [ %.0, %55 ], [ %.0, %53 ], [ %.0, %52 ], [ %.0, %51 ], [ %.0, %41 ], [ %.0, %31 ], [ %.0, %20 ], [ %.0, %17 ], [ %.0, %16 ], [ %.0, %13 ]
  br label %12

13:                                               ; preds = %12
  %14 = load i32, i32* %6, align 4
  %.not111 = icmp sgt i32 %.096, %14
  %15 = select i1 %.not111, i32 853886075, i32 -198691896
  br label %.backedge

16:                                               ; preds = %12
  br label %.backedge

17:                                               ; preds = %12
  %18 = load i32, i32* %7, align 4
  %.not110 = icmp sgt i32 %.094, %18
  %19 = select i1 %.not110, i32 421154464, i32 1601013081
  br label %.backedge

20:                                               ; preds = %12
  %21 = sext i32 %.096 to i64
  %22 = sext i32 %.094 to i64
  %23 = getelementptr inbounds [305 x [305 x i8]], [305 x [305 x i8]]* @ch, i64 0, i64 %21, i64 %22
  %24 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %23)
  %25 = load i8, i8* %23, align 1
  %26 = icmp eq i8 %25, 35
  %27 = zext i1 %26 to i32
  %28 = getelementptr inbounds [305 x i32], [305 x i32]* @vis, i64 0, i64 %21
  %29 = load i32, i32* %28, align 4
  %30 = or i32 %29, %27
  store i32 %30, i32* %28, align 4
  br label %.backedge

31:                                               ; preds = %12
  %32 = load i32, i32* @x.1, align 4
  %33 = load i32, i32* @y.2, align 4
  %34 = add i32 %32, -1
  %35 = mul i32 %34, %32
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %38, %37
  %40 = select i1 %39, i32 -369701869, i32 1749885906
  br label %.backedge

41:                                               ; preds = %12
  %.neg109 = add i32 %.094, 1
  %42 = load i32, i32* @x.1, align 4
  %43 = load i32, i32* @y.2, align 4
  %44 = add i32 %42, -1
  %45 = mul i32 %44, %42
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %48, %47
  %50 = select i1 %49, i32 1017253860, i32 1749885906
  br label %.backedge

51:                                               ; preds = %12
  br label %.backedge

52:                                               ; preds = %12
  br label %.backedge

53:                                               ; preds = %12
  %54 = add i32 %.096, 1
  br label %.backedge

55:                                               ; preds = %12
  br label %.backedge

56:                                               ; preds = %12
  %57 = load i32, i32* %6, align 4
  %.not108 = icmp sgt i32 %.092, %57
  %58 = select i1 %.not108, i32 649750086, i32 -1240528286
  br label %.backedge

59:                                               ; preds = %12
  %60 = sext i32 %.092 to i64
  %61 = getelementptr inbounds [305 x i32], [305 x i32]* @vis, i64 0, i64 %60
  %62 = load i32, i32* %61, align 4
  %.not107 = icmp eq i32 %62, 0
  %63 = select i1 %.not107, i32 -1812627523, i32 717900584
  br label %.backedge

64:                                               ; preds = %12
  br label %.backedge

65:                                               ; preds = %12
  %66 = load i32, i32* %7, align 4
  %.not106 = icmp sgt i32 %.088, %66
  %67 = select i1 %.not106, i32 -153611132, i32 -739341638
  br label %.backedge

68:                                               ; preds = %12
  %69 = sext i32 %.092 to i64
  %70 = sext i32 %.088 to i64
  %71 = getelementptr inbounds [305 x [305 x i8]], [305 x [305 x i8]]* @ch, i64 0, i64 %69, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = icmp eq i8 %72, 35
  %74 = select i1 %73, i32 -530560599, i32 2012977942
  br label %.backedge

75:                                               ; preds = %12
  %76 = load i32, i32* @x.1, align 4
  %77 = load i32, i32* @y.2, align 4
  %78 = add i32 %76, -1
  %79 = mul i32 %78, %76
  %80 = and i32 %79, 1
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %82, %81
  %84 = select i1 %83, i32 425534099, i32 -1093207136
  br label %.backedge

85:                                               ; preds = %12
  %86 = load i32, i32* @tot, align 4
  %87 = add i32 %86, 1
  store i32 %87, i32* @tot, align 4
  %88 = sext i32 %.092 to i64
  %89 = sext i32 %.088 to i64
  %90 = getelementptr inbounds [305 x [305 x i32]], [305 x [305 x i32]]* @ans, i64 0, i64 %88, i64 %89
  store i32 %87, i32* %90, align 4
  %91 = load i32, i32* @x.1, align 4
  %92 = load i32, i32* @y.2, align 4
  %93 = add i32 %91, -1
  %94 = mul i32 %93, %91
  %95 = and i32 %94, 1
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %97, %96
  %99 = select i1 %98, i32 1538308513, i32 -1093207136
  br label %.backedge

100:                                              ; preds = %12
  br label %.backedge

101:                                              ; preds = %12
  %102 = load i32, i32* @x.1, align 4
  %103 = load i32, i32* @y.2, align 4
  %104 = add i32 %102, -1
  %105 = mul i32 %104, %102
  %106 = and i32 %105, 1
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %108, %107
  %110 = select i1 %109, i32 -1596537424, i32 689963811
  br label %.backedge

111:                                              ; preds = %12
  %112 = icmp eq i32 %.090, 1
  store i1 %112, i1* %5, align 1
  %113 = load i32, i32* @x.1, align 4
  %114 = load i32, i32* @y.2, align 4
  %115 = add i32 %113, -1
  %116 = mul i32 %115, %113
  %117 = and i32 %116, 1
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %119, %118
  %121 = select i1 %120, i32 505959984, i32 689963811
  br label %.backedge

122:                                              ; preds = %12
  %.0..0..0. = load volatile i1, i1* %5, align 1
  %123 = select i1 %.0..0..0., i32 -496682320, i32 -1327504088
  br label %.backedge

124:                                              ; preds = %12
  %125 = load i32, i32* @tot, align 4
  br label %.backedge

126:                                              ; preds = %12
  %127 = load i32, i32* @tot, align 4
  %128 = add i32 %127, 1
  br label %.backedge

129:                                              ; preds = %12
  store i32 %.0, i32* %1, align 4
  %130 = load i32, i32* @x.1, align 4
  %131 = load i32, i32* @y.2, align 4
  %132 = add i32 %130, -1
  %133 = mul i32 %132, %130
  %134 = and i32 %133, 1
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %136, %135
  %138 = select i1 %137, i32 172663700, i32 -453235223
  br label %.backedge

139:                                              ; preds = %12
  %140 = sext i32 %.092 to i64
  %141 = sext i32 %.088 to i64
  %142 = getelementptr inbounds [305 x [305 x i32]], [305 x [305 x i32]]* @ans, i64 0, i64 %140, i64 %141
  %.0..0..0.72 = load volatile i32, i32* %1, align 4
  store i32 %.0..0..0.72, i32* %142, align 4
  %143 = load i32, i32* @x.1, align 4
  %144 = load i32, i32* @y.2, align 4
  %145 = add i32 %143, -1
  %146 = mul i32 %145, %143
  %147 = and i32 %146, 1
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %149, %148
  %151 = select i1 %150, i32 92959577, i32 -453235223
  br label %.backedge

152:                                              ; preds = %12
  br label %.backedge

153:                                              ; preds = %12
  br label %.backedge

154:                                              ; preds = %12
  %155 = load i32, i32* @x.1, align 4
  %156 = load i32, i32* @y.2, align 4
  %157 = add i32 %155, -1
  %158 = mul i32 %157, %155
  %159 = and i32 %158, 1
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %161, %160
  %163 = select i1 %162, i32 -680256136, i32 1228494158
  br label %.backedge

164:                                              ; preds = %12
  %165 = add i32 %.088, 1
  %166 = load i32, i32* @x.1, align 4
  %167 = load i32, i32* @y.2, align 4
  %168 = add i32 %166, -1
  %169 = mul i32 %168, %166
  %170 = and i32 %169, 1
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %167, 10
  %173 = or i1 %172, %171
  %174 = select i1 %173, i32 -1511857461, i32 1228494158
  br label %.backedge

175:                                              ; preds = %12
  br label %.backedge

176:                                              ; preds = %12
  br label %.backedge

177:                                              ; preds = %12
  br label %.backedge

178:                                              ; preds = %12
  %179 = load i32, i32* @x.1, align 4
  %180 = load i32, i32* @y.2, align 4
  %181 = add i32 %179, -1
  %182 = mul i32 %181, %179
  %183 = and i32 %182, 1
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %180, 10
  %186 = or i1 %185, %184
  %187 = select i1 %186, i32 -9808145, i32 71899262
  br label %.backedge

188:                                              ; preds = %12
  %189 = add i32 %.092, 1
  %190 = load i32, i32* @x.1, align 4
  %191 = load i32, i32* @y.2, align 4
  %192 = add i32 %190, -1
  %193 = mul i32 %192, %190
  %194 = and i32 %193, 1
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %196, %195
  %198 = select i1 %197, i32 -1313690964, i32 71899262
  br label %.backedge

199:                                              ; preds = %12
  br label %.backedge

200:                                              ; preds = %12
  %201 = load i32, i32* @x.1, align 4
  %202 = load i32, i32* @y.2, align 4
  %203 = add i32 %201, -1
  %204 = mul i32 %203, %201
  %205 = and i32 %204, 1
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %207, %206
  %209 = select i1 %208, i32 -1988777669, i32 -546113956
  br label %.backedge

210:                                              ; preds = %12
  %211 = load i32, i32* @x.1, align 4
  %212 = load i32, i32* @y.2, align 4
  %213 = add i32 %211, -1
  %214 = mul i32 %213, %211
  %215 = and i32 %214, 1
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %217, %216
  %219 = select i1 %218, i32 -1655861989, i32 -546113956
  br label %.backedge

220:                                              ; preds = %12
  br label %.backedge

221:                                              ; preds = %12
  %222 = load i32, i32* %6, align 4
  %.not105 = icmp sgt i32 %.086, %222
  %223 = select i1 %.not105, i32 -1699968715, i32 -699054149
  br label %.backedge

224:                                              ; preds = %12
  %225 = add i32 %.086, -1
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds [305 x i32], [305 x i32]* @vis, i64 0, i64 %226
  %228 = load i32, i32* %227, align 4
  %.not104 = icmp eq i32 %228, 0
  %229 = select i1 %.not104, i32 -1748751619, i32 1534722454
  br label %.backedge

230:                                              ; preds = %12
  %231 = sext i32 %.086 to i64
  %232 = getelementptr inbounds [305 x i32], [305 x i32]* @vis, i64 0, i64 %231
  %233 = load i32, i32* %232, align 4
  %.not103 = icmp eq i32 %233, 0
  %234 = select i1 %.not103, i32 -2058910881, i32 -1748751619
  br label %.backedge

235:                                              ; preds = %12
  br label %.backedge

236:                                              ; preds = %12
  %237 = load i32, i32* @x.1, align 4
  %238 = load i32, i32* @y.2, align 4
  %239 = add i32 %237, -1
  %240 = mul i32 %239, %237
  %241 = and i32 %240, 1
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %243, %242
  %245 = select i1 %244, i32 213890836, i32 -486179285
  br label %.backedge

246:                                              ; preds = %12
  %247 = load i32, i32* %7, align 4
  %248 = icmp sle i32 %.084, %247
  store i1 %248, i1* %4, align 1
  %249 = load i32, i32* @x.1, align 4
  %250 = load i32, i32* @y.2, align 4
  %251 = add i32 %249, -1
  %252 = mul i32 %251, %249
  %253 = and i32 %252, 1
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %255, %254
  %257 = select i1 %256, i32 1341238010, i32 -486179285
  br label %.backedge

258:                                              ; preds = %12
  %.0..0..0.69 = load volatile i1, i1* %4, align 1
  %259 = select i1 %.0..0..0.69, i32 -765190799, i32 446700694
  br label %.backedge

260:                                              ; preds = %12
  %261 = load i32, i32* @x.1, align 4
  %262 = load i32, i32* @y.2, align 4
  %263 = add i32 %261, -1
  %264 = mul i32 %263, %261
  %265 = and i32 %264, 1
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %262, 10
  %268 = or i1 %267, %266
  %269 = select i1 %268, i32 1702638488, i32 2012137655
  br label %.backedge

270:                                              ; preds = %12
  %271 = add i32 %.086, -1
  %272 = sext i32 %271 to i64
  %273 = sext i32 %.084 to i64
  %274 = getelementptr inbounds [305 x [305 x i32]], [305 x [305 x i32]]* @ans, i64 0, i64 %272, i64 %273
  %275 = load i32, i32* %274, align 4
  %276 = sext i32 %.086 to i64
  %277 = getelementptr inbounds [305 x [305 x i32]], [305 x [305 x i32]]* @ans, i64 0, i64 %276, i64 %273
  store i32 %275, i32* %277, align 4
  %278 = load i32, i32* @x.1, align 4
  %279 = load i32, i32* @y.2, align 4
  %280 = add i32 %278, -1
  %281 = mul i32 %280, %278
  %282 = and i32 %281, 1
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %279, 10
  %285 = or i1 %284, %283
  %286 = select i1 %285, i32 993803898, i32 2012137655
  br label %.backedge

287:                                              ; preds = %12
  br label %.backedge

288:                                              ; preds = %12
  %289 = add i32 %.084, 1
  br label %.backedge

290:                                              ; preds = %12
  %291 = sext i32 %.086 to i64
  %292 = getelementptr inbounds [305 x i32], [305 x i32]* @vis, i64 0, i64 %291
  store i32 1, i32* %292, align 4
  br label %.backedge

293:                                              ; preds = %12
  br label %.backedge

294:                                              ; preds = %12
  %295 = load i32, i32* @x.1, align 4
  %296 = load i32, i32* @y.2, align 4
  %297 = add i32 %295, -1
  %298 = mul i32 %297, %295
  %299 = and i32 %298, 1
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %296, 10
  %302 = or i1 %301, %300
  %303 = select i1 %302, i32 -1012007899, i32 155268126
  br label %.backedge

304:                                              ; preds = %12
  %305 = add i32 %.086, 1
  %306 = load i32, i32* @x.1, align 4
  %307 = load i32, i32* @y.2, align 4
  %308 = add i32 %306, -1
  %309 = mul i32 %308, %306
  %310 = and i32 %309, 1
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %307, 10
  %313 = or i1 %312, %311
  %314 = select i1 %313, i32 618409043, i32 155268126
  br label %.backedge

315:                                              ; preds = %12
  br label %.backedge

316:                                              ; preds = %12
  %317 = load i32, i32* %6, align 4
  %318 = add i32 %317, -1
  br label %.backedge

319:                                              ; preds = %12
  %320 = load i32, i32* @x.1, align 4
  %321 = load i32, i32* @y.2, align 4
  %322 = add i32 %320, -1
  %323 = mul i32 %322, %320
  %324 = and i32 %323, 1
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %321, 10
  %327 = or i1 %326, %325
  %328 = select i1 %327, i32 535264153, i32 46699376
  br label %.backedge

329:                                              ; preds = %12
  %330 = icmp sgt i32 %.082, 0
  store i1 %330, i1* %3, align 1
  %331 = load i32, i32* @x.1, align 4
  %332 = load i32, i32* @y.2, align 4
  %333 = add i32 %331, -1
  %334 = mul i32 %333, %331
  %335 = and i32 %334, 1
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %332, 10
  %338 = or i1 %337, %336
  %339 = select i1 %338, i32 -1223644442, i32 46699376
  br label %.backedge

340:                                              ; preds = %12
  %.0..0..0.70 = load volatile i1, i1* %3, align 1
  %341 = select i1 %.0..0..0.70, i32 -1370066484, i32 -929533580
  br label %.backedge

342:                                              ; preds = %12
  %343 = load i32, i32* @x.1, align 4
  %344 = load i32, i32* @y.2, align 4
  %345 = add i32 %343, -1
  %346 = mul i32 %345, %343
  %347 = and i32 %346, 1
  %348 = icmp eq i32 %347, 0
  %349 = icmp slt i32 %344, 10
  %350 = or i1 %349, %348
  %351 = select i1 %350, i32 -1841474655, i32 1355199696
  br label %.backedge

352:                                              ; preds = %12
  %353 = add i32 %.082, 1
  %354 = sext i32 %353 to i64
  %355 = getelementptr inbounds [305 x i32], [305 x i32]* @vis, i64 0, i64 %354
  %356 = load i32, i32* %355, align 4
  %357 = icmp ne i32 %356, 0
  store i1 %357, i1* %2, align 1
  %358 = load i32, i32* @x.1, align 4
  %359 = load i32, i32* @y.2, align 4
  %360 = add i32 %358, -1
  %361 = mul i32 %360, %358
  %362 = and i32 %361, 1
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %359, 10
  %365 = or i1 %364, %363
  %366 = select i1 %365, i32 -1627888771, i32 1355199696
  br label %.backedge

367:                                              ; preds = %12
  %.0..0..0.71 = load volatile i1, i1* %2, align 1
  %368 = select i1 %.0..0..0.71, i32 638302694, i32 -1989390179
  br label %.backedge

369:                                              ; preds = %12
  %370 = sext i32 %.082 to i64
  %371 = getelementptr inbounds [305 x i32], [305 x i32]* @vis, i64 0, i64 %370
  %372 = load i32, i32* %371, align 4
  %.not102 = icmp eq i32 %372, 0
  %373 = select i1 %.not102, i32 -1344411664, i32 -1989390179
  br label %.backedge

374:                                              ; preds = %12
  br label %.backedge

375:                                              ; preds = %12
  %376 = load i32, i32* %7, align 4
  %.not101 = icmp sgt i32 %.080, %376
  %377 = select i1 %.not101, i32 427232250, i32 1862950679
  br label %.backedge

378:                                              ; preds = %12
  %.neg100 = add i32 %.082, 1
  %379 = sext i32 %.neg100 to i64
  %380 = sext i32 %.080 to i64
  %381 = getelementptr inbounds [305 x [305 x i32]], [305 x [305 x i32]]* @ans, i64 0, i64 %379, i64 %380
  %382 = load i32, i32* %381, align 4
  %383 = sext i32 %.082 to i64
  %384 = getelementptr inbounds [305 x [305 x i32]], [305 x [305 x i32]]* @ans, i64 0, i64 %383, i64 %380
  store i32 %382, i32* %384, align 4
  br label %.backedge

385:                                              ; preds = %12
  %386 = add i32 %.080, 1
  br label %.backedge

387:                                              ; preds = %12
  %388 = load i32, i32* @x.1, align 4
  %389 = load i32, i32* @y.2, align 4
  %390 = add i32 %388, -1
  %391 = mul i32 %390, %388
  %392 = and i32 %391, 1
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %389, 10
  %395 = or i1 %394, %393
  %396 = select i1 %395, i32 1110713605, i32 -1042739209
  br label %.backedge

397:                                              ; preds = %12
  %398 = sext i32 %.082 to i64
  %399 = getelementptr inbounds [305 x i32], [305 x i32]* @vis, i64 0, i64 %398
  store i32 1, i32* %399, align 4
  %400 = load i32, i32* @x.1, align 4
  %401 = load i32, i32* @y.2, align 4
  %402 = add i32 %400, -1
  %403 = mul i32 %402, %400
  %404 = and i32 %403, 1
  %405 = icmp eq i32 %404, 0
  %406 = icmp slt i32 %401, 10
  %407 = or i1 %406, %405
  %408 = select i1 %407, i32 432923279, i32 -1042739209
  br label %.backedge

409:                                              ; preds = %12
  br label %.backedge

410:                                              ; preds = %12
  br label %.backedge

411:                                              ; preds = %12
  %412 = add i32 %.082, -1
  br label %.backedge

413:                                              ; preds = %12
  br label %.backedge

414:                                              ; preds = %12
  %415 = load i32, i32* %6, align 4
  %.not99 = icmp sgt i32 %.078, %415
  %416 = select i1 %.not99, i32 -1011087572, i32 -1585413126
  br label %.backedge

417:                                              ; preds = %12
  %418 = load i32, i32* @x.1, align 4
  %419 = load i32, i32* @y.2, align 4
  %420 = add i32 %418, -1
  %421 = mul i32 %420, %418
  %422 = and i32 %421, 1
  %423 = icmp eq i32 %422, 0
  %424 = icmp slt i32 %419, 10
  %425 = or i1 %424, %423
  %426 = select i1 %425, i32 1426899289, i32 -438472757
  br label %.backedge

427:                                              ; preds = %12
  %428 = load i32, i32* @x.1, align 4
  %429 = load i32, i32* @y.2, align 4
  %430 = add i32 %428, -1
  %431 = mul i32 %430, %428
  %432 = and i32 %431, 1
  %433 = icmp eq i32 %432, 0
  %434 = icmp slt i32 %429, 10
  %435 = or i1 %434, %433
  %436 = select i1 %435, i32 207820590, i32 -438472757
  br label %.backedge

437:                                              ; preds = %12
  br label %.backedge

438:                                              ; preds = %12
  %439 = load i32, i32* %7, align 4
  %.not = icmp sgt i32 %.076, %439
  %440 = select i1 %.not, i32 2028645223, i32 -1879331279
  br label %.backedge

441:                                              ; preds = %12
  %442 = sext i32 %.078 to i64
  %443 = sext i32 %.076 to i64
  %444 = getelementptr inbounds [305 x [305 x i32]], [305 x [305 x i32]]* @ans, i64 0, i64 %442, i64 %443
  %445 = load i32, i32* %444, align 4
  %446 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %445)
  br label %.backedge

447:                                              ; preds = %12
  %448 = add i32 %.076, 1
  %449 = call i32 @putchar(i32 32)
  br label %.backedge

450:                                              ; preds = %12
  %451 = load i32, i32* @x.1, align 4
  %452 = load i32, i32* @y.2, align 4
  %453 = add i32 %451, -1
  %454 = mul i32 %453, %451
  %455 = and i32 %454, 1
  %456 = icmp eq i32 %455, 0
  %457 = icmp slt i32 %452, 10
  %458 = or i1 %457, %456
  %459 = select i1 %458, i32 118205432, i32 1893110322
  br label %.backedge

460:                                              ; preds = %12
  %461 = load i32, i32* @x.1, align 4
  %462 = load i32, i32* @y.2, align 4
  %463 = add i32 %461, -1
  %464 = mul i32 %463, %461
  %465 = and i32 %464, 1
  %466 = icmp eq i32 %465, 0
  %467 = icmp slt i32 %462, 10
  %468 = or i1 %467, %466
  %469 = select i1 %468, i32 1988029768, i32 1893110322
  br label %.backedge

470:                                              ; preds = %12
  br label %.backedge

471:                                              ; preds = %12
  %472 = load i32, i32* @x.1, align 4
  %473 = load i32, i32* @y.2, align 4
  %474 = add i32 %472, -1
  %475 = mul i32 %474, %472
  %476 = and i32 %475, 1
  %477 = icmp eq i32 %476, 0
  %478 = icmp slt i32 %473, 10
  %479 = or i1 %478, %477
  %480 = select i1 %479, i32 -880523737, i32 1407102895
  br label %.backedge

481:                                              ; preds = %12
  %482 = add i32 %.078, 1
  %putchar98 = call i32 @putchar(i32 10)
  %483 = load i32, i32* @x.1, align 4
  %484 = load i32, i32* @y.2, align 4
  %485 = add i32 %483, -1
  %486 = mul i32 %485, %483
  %487 = and i32 %486, 1
  %488 = icmp eq i32 %487, 0
  %489 = icmp slt i32 %484, 10
  %490 = or i1 %489, %488
  %491 = select i1 %490, i32 -1051368824, i32 1407102895
  br label %.backedge

492:                                              ; preds = %12
  br label %.backedge

493:                                              ; preds = %12
  %494 = load i32, i32* @x.1, align 4
  %495 = load i32, i32* @y.2, align 4
  %496 = add i32 %494, -1
  %497 = mul i32 %496, %494
  %498 = and i32 %497, 1
  %499 = icmp eq i32 %498, 0
  %500 = icmp slt i32 %495, 10
  %501 = or i1 %500, %499
  %502 = select i1 %501, i32 481573065, i32 -1272898429
  br label %.backedge

503:                                              ; preds = %12
  %504 = load i32, i32* @x.1, align 4
  %505 = load i32, i32* @y.2, align 4
  %506 = add i32 %504, -1
  %507 = mul i32 %506, %504
  %508 = and i32 %507, 1
  %509 = icmp eq i32 %508, 0
  %510 = icmp slt i32 %505, 10
  %511 = or i1 %510, %509
  %512 = select i1 %511, i32 305210514, i32 -1272898429
  br label %.backedge

513:                                              ; preds = %12
  ret i32 0

514:                                              ; preds = %12
  %515 = add i32 %.094, 1
  br label %.backedge

516:                                              ; preds = %12
  %517 = load i32, i32* @tot, align 4
  %518 = add i32 %517, 1
  store i32 %518, i32* @tot, align 4
  %519 = sext i32 %.092 to i64
  %520 = sext i32 %.088 to i64
  %521 = getelementptr inbounds [305 x [305 x i32]], [305 x [305 x i32]]* @ans, i64 0, i64 %519, i64 %520
  store i32 %518, i32* %521, align 4
  br label %.backedge

522:                                              ; preds = %12
  br label %.backedge

523:                                              ; preds = %12
  %524 = sext i32 %.092 to i64
  %525 = sext i32 %.088 to i64
  %526 = getelementptr inbounds [305 x [305 x i32]], [305 x [305 x i32]]* @ans, i64 0, i64 %524, i64 %525
  %.0..0..0.73 = load volatile i32, i32* %1, align 4
  store i32 %.0..0..0.73, i32* %526, align 4
  br label %.backedge

527:                                              ; preds = %12
  %528 = add i32 %.088, 1
  br label %.backedge

529:                                              ; preds = %12
  %530 = add i32 %.092, 1
  br label %.backedge

531:                                              ; preds = %12
  br label %.backedge

532:                                              ; preds = %12
  br label %.backedge

533:                                              ; preds = %12
  %534 = add i32 %.086, -1
  %535 = sext i32 %534 to i64
  %536 = sext i32 %.084 to i64
  %537 = getelementptr inbounds [305 x [305 x i32]], [305 x [305 x i32]]* @ans, i64 0, i64 %535, i64 %536
  %538 = load i32, i32* %537, align 4
  %539 = sext i32 %.086 to i64
  %540 = getelementptr inbounds [305 x [305 x i32]], [305 x [305 x i32]]* @ans, i64 0, i64 %539, i64 %536
  store i32 %538, i32* %540, align 4
  br label %.backedge

541:                                              ; preds = %12
  %.neg = add i32 %.086, 1
  br label %.backedge

542:                                              ; preds = %12
  br label %.backedge

543:                                              ; preds = %12
  br label %.backedge

544:                                              ; preds = %12
  %545 = sext i32 %.082 to i64
  %546 = getelementptr inbounds [305 x i32], [305 x i32]* @vis, i64 0, i64 %545
  store i32 1, i32* %546, align 4
  br label %.backedge

547:                                              ; preds = %12
  br label %.backedge

548:                                              ; preds = %12
  br label %.backedge

549:                                              ; preds = %12
  %550 = add i32 %.078, 1
  %putchar = call i32 @putchar(i32 10)
  br label %.backedge

551:                                              ; preds = %12
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s784500177.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.3, align 4
  %4 = load i32, i32* @y.4, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -610220278, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -610220278, label %11
    i32 1685400324, label %14
    i32 -1176840897, label %24
    i32 1073571716, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 1685400324, i32 1073571716
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.3, align 4
  %16 = load i32, i32* @y.4, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 -1176840897, i32 1073571716
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ 1685400324, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
