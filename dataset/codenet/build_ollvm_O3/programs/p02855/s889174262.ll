; ModuleID = 'build_ollvm/programs/p02855/s889174262.ll'
source_filename = "Project_CodeNet_C++1400/p02855/s889174262.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }

$_Z4readIiJiiEEvRT_DpRT0_ = comdat any

$_Z5writeIiEvT_ = comdat any

$_Z4readIiET_RS0_ = comdat any

$_Z4readIiJiEEvRT_DpRT0_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@n = global i32 0, align 4
@m = global i32 0, align 4
@k = global i32 0, align 4
@ans = local_unnamed_addr global [2005 x [2005 x i32]] zeroinitializer, align 16
@cnt = local_unnamed_addr global [2005 x i32] zeroinitializer, align 16
@idn = local_unnamed_addr global i32 0, align 4
@s = global [2005 x [2005 x i8]] zeroinitializer, align 16
@.str = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s889174262.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.2 = common local_unnamed_addr global i32 0
@y.3 = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0
@x.6 = common local_unnamed_addr global i32 0
@y.7 = common local_unnamed_addr global i32 0
@x.8 = common local_unnamed_addr global i32 0
@y.9 = common local_unnamed_addr global i32 0
@x.10 = common local_unnamed_addr global i32 0
@y.11 = common local_unnamed_addr global i32 0
@x.12 = common local_unnamed_addr global i32 0
@y.13 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  tail call void @_Z4readIiJiiEEvRT_DpRT0_(i32* nonnull dereferenceable(4) @n, i32* nonnull dereferenceable(4) @m, i32* nonnull dereferenceable(4) @k)
  br label %6

6:                                                ; preds = %.backedge, %0
  %.088 = phi i32 [ 1, %0 ], [ %.088.be, %.backedge ]
  %.086 = phi i32 [ undef, %0 ], [ %.086.be, %.backedge ]
  %.084 = phi i32 [ undef, %0 ], [ %.084.be, %.backedge ]
  %.082 = phi i32 [ undef, %0 ], [ %.082.be, %.backedge ]
  %.080 = phi i8 [ undef, %0 ], [ %.080.be, %.backedge ]
  %.078 = phi i32 [ undef, %0 ], [ %.078.be, %.backedge ]
  %.076 = phi i32 [ undef, %0 ], [ %.076.be, %.backedge ]
  %.074 = phi i32 [ undef, %0 ], [ %.074.be, %.backedge ]
  %.072 = phi i32 [ undef, %0 ], [ %.072.be, %.backedge ]
  %.070 = phi i32 [ undef, %0 ], [ %.070.be, %.backedge ]
  %.068 = phi i32 [ undef, %0 ], [ %.068.be, %.backedge ]
  %.066 = phi i32 [ undef, %0 ], [ %.066.be, %.backedge ]
  %.0 = phi i32 [ -1616644143, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1616644143, label %7
    i32 -172477175, label %17
    i32 -266289508, label %29
    i32 -1685529440, label %31
    i32 962724018, label %41
    i32 -232548253, label %54
    i32 -1184239637, label %55
    i32 -2099911155, label %57
    i32 -1666817290, label %67
    i32 2000814017, label %77
    i32 1701997881, label %78
    i32 -1978827255, label %88
    i32 -2127084774, label %100
    i32 -1432171187, label %102
    i32 16052789, label %112
    i32 1214979430, label %122
    i32 1724614591, label %123
    i32 1195048970, label %126
    i32 -911944732, label %134
    i32 1116730228, label %136
    i32 -6110495, label %137
    i32 -348381171, label %139
    i32 -63127, label %149
    i32 489735679, label %159
    i32 2104078103, label %160
    i32 1968806358, label %163
    i32 1718086471, label %173
    i32 -2075454496, label %187
    i32 -956141859, label %189
    i32 900480400, label %199
    i32 -670566461, label %209
    i32 -2018780993, label %210
    i32 1975824058, label %220
    i32 -1104289145, label %232
    i32 -803101812, label %234
    i32 -977585996, label %241
    i32 608622056, label %244
    i32 -2015278898, label %245
    i32 1906587639, label %247
    i32 -42037641, label %250
    i32 39817198, label %255
    i32 574389027, label %265
    i32 643942761, label %280
    i32 1666666948, label %281
    i32 34731441, label %282
    i32 1954915361, label %284
    i32 -1754562935, label %285
    i32 -476782567, label %286
    i32 479015441, label %288
    i32 -1435231860, label %289
    i32 -1330209999, label %292
    i32 193721250, label %297
    i32 -1640924237, label %303
    i32 2007171512, label %306
    i32 -783992452, label %309
    i32 1869980388, label %317
    i32 1885760686, label %319
    i32 -937588124, label %320
    i32 -870948823, label %321
    i32 190220298, label %323
    i32 1564153752, label %326
    i32 -955772188, label %328
    i32 1339155837, label %333
    i32 1470834806, label %339
    i32 -1975393835, label %342
    i32 -1096083123, label %345
    i32 1097839919, label %353
    i32 737604001, label %355
    i32 1184495169, label %365
    i32 120120799, label %375
    i32 -2128456628, label %376
    i32 506788400, label %377
    i32 1242168791, label %379
    i32 2058767623, label %380
    i32 347519367, label %383
    i32 -2073059947, label %393
    i32 217591637, label %403
    i32 -617285516, label %404
    i32 -1098108570, label %414
    i32 952445331, label %426
    i32 1283259357, label %428
    i32 -1344966230, label %434
    i32 743812113, label %436
    i32 2071443549, label %446
    i32 -1731144526, label %456
    i32 478085528, label %457
    i32 -1527331915, label %467
    i32 128642230, label %478
    i32 -1538563308, label %479
    i32 226650238, label %480
    i32 897286692, label %481
    i32 -1655804831, label %485
    i32 1107215842, label %486
    i32 -842256151, label %487
    i32 -1718842531, label %488
    i32 -77124746, label %489
    i32 -71295874, label %490
    i32 -1518748662, label %491
    i32 -1793126119, label %492
    i32 97803539, label %498
    i32 -1299981239, label %499
    i32 1872570499, label %500
    i32 2045305230, label %501
    i32 -703501346, label %502
  ]

.backedge:                                        ; preds = %6, %502, %501, %500, %499, %498, %492, %491, %490, %489, %488, %487, %486, %485, %481, %480, %478, %467, %457, %456, %446, %436, %434, %428, %426, %414, %404, %403, %393, %383, %380, %379, %377, %376, %375, %365, %355, %353, %345, %342, %339, %333, %328, %326, %323, %321, %320, %319, %317, %309, %306, %303, %297, %292, %289, %288, %286, %285, %284, %282, %281, %280, %265, %255, %250, %247, %245, %244, %241, %234, %232, %220, %210, %209, %199, %189, %187, %173, %163, %160, %159, %149, %139, %137, %136, %134, %126, %123, %122, %112, %102, %100, %88, %78, %77, %67, %57, %55, %54, %41, %31, %29, %17, %7
  %.088.be = phi i32 [ %.088, %6 ], [ %.088, %502 ], [ %.088, %501 ], [ %.088, %500 ], [ %.088, %499 ], [ %.088, %498 ], [ %.088, %492 ], [ %.088, %491 ], [ %.088, %490 ], [ %.088, %489 ], [ %.088, %488 ], [ %.088, %487 ], [ %.088, %486 ], [ %.088, %485 ], [ %.088, %481 ], [ %.088, %480 ], [ %.088, %478 ], [ %.088, %467 ], [ %.088, %457 ], [ %.088, %456 ], [ %.088, %446 ], [ %.088, %436 ], [ %.088, %434 ], [ %.088, %428 ], [ %.088, %426 ], [ %.088, %414 ], [ %.088, %404 ], [ %.088, %403 ], [ %.088, %393 ], [ %.088, %383 ], [ %.088, %380 ], [ %.088, %379 ], [ %.088, %377 ], [ %.088, %376 ], [ %.088, %375 ], [ %.088, %365 ], [ %.088, %355 ], [ %.088, %353 ], [ %.088, %345 ], [ %.088, %342 ], [ %.088, %339 ], [ %.088, %333 ], [ %.088, %328 ], [ %.088, %326 ], [ %.088, %323 ], [ %.088, %321 ], [ %.088, %320 ], [ %.088, %319 ], [ %.088, %317 ], [ %.088, %309 ], [ %.088, %306 ], [ %.088, %303 ], [ %.088, %297 ], [ %.088, %292 ], [ %.088, %289 ], [ %.088, %288 ], [ %.088, %286 ], [ %.088, %285 ], [ %.088, %284 ], [ %.088, %282 ], [ %.088, %281 ], [ %.088, %280 ], [ %.088, %265 ], [ %.088, %255 ], [ %.088, %250 ], [ %.088, %247 ], [ %.088, %245 ], [ %.088, %244 ], [ %.088, %241 ], [ %.088, %234 ], [ %.088, %232 ], [ %.088, %220 ], [ %.088, %210 ], [ %.088, %209 ], [ %.088, %199 ], [ %.088, %189 ], [ %.088, %187 ], [ %.088, %173 ], [ %.088, %163 ], [ %.088, %160 ], [ %.088, %159 ], [ %.088, %149 ], [ %.088, %139 ], [ %.088, %137 ], [ %.088, %136 ], [ %.088, %134 ], [ %.088, %126 ], [ %.088, %123 ], [ %.088, %122 ], [ %.088, %112 ], [ %.088, %102 ], [ %.088, %100 ], [ %.088, %88 ], [ %.088, %78 ], [ %.088, %77 ], [ %.088, %67 ], [ %.088, %57 ], [ %56, %55 ], [ %.088, %54 ], [ %.088, %41 ], [ %.088, %31 ], [ %.088, %29 ], [ %.088, %17 ], [ %.088, %7 ]
  %.086.be = phi i32 [ %.086, %6 ], [ %.086, %502 ], [ %.086, %501 ], [ %.086, %500 ], [ %.086, %499 ], [ %.086, %498 ], [ %.086, %492 ], [ %.086, %491 ], [ %.086, %490 ], [ %.086, %489 ], [ %.086, %488 ], [ %.086, %487 ], [ %.086, %486 ], [ 1, %485 ], [ %.086, %481 ], [ %.086, %480 ], [ %.086, %478 ], [ %.086, %467 ], [ %.086, %457 ], [ %.086, %456 ], [ %.086, %446 ], [ %.086, %436 ], [ %.086, %434 ], [ %.086, %428 ], [ %.086, %426 ], [ %.086, %414 ], [ %.086, %404 ], [ %.086, %403 ], [ %.086, %393 ], [ %.086, %383 ], [ %.086, %380 ], [ %.086, %379 ], [ %.086, %377 ], [ %.086, %376 ], [ %.086, %375 ], [ %.086, %365 ], [ %.086, %355 ], [ %.086, %353 ], [ %.086, %345 ], [ %.086, %342 ], [ %.086, %339 ], [ %.086, %333 ], [ %.086, %328 ], [ %.086, %326 ], [ %.086, %323 ], [ %.086, %321 ], [ %.086, %320 ], [ %.086, %319 ], [ %.086, %317 ], [ %.086, %309 ], [ %.086, %306 ], [ %.086, %303 ], [ %.086, %297 ], [ %.086, %292 ], [ %.086, %289 ], [ %.086, %288 ], [ %.086, %286 ], [ %.086, %285 ], [ %.086, %284 ], [ %.086, %282 ], [ %.086, %281 ], [ %.086, %280 ], [ %.086, %265 ], [ %.086, %255 ], [ %.086, %250 ], [ %.086, %247 ], [ %.086, %245 ], [ %.086, %244 ], [ %.086, %241 ], [ %.086, %234 ], [ %.086, %232 ], [ %.086, %220 ], [ %.086, %210 ], [ %.086, %209 ], [ %.086, %199 ], [ %.086, %189 ], [ %.086, %187 ], [ %.086, %173 ], [ %.086, %163 ], [ %.086, %160 ], [ %.086, %159 ], [ %.086, %149 ], [ %.086, %139 ], [ %138, %137 ], [ %.086, %136 ], [ %.086, %134 ], [ %.086, %126 ], [ %.086, %123 ], [ %.086, %122 ], [ %.086, %112 ], [ %.086, %102 ], [ %.086, %100 ], [ %.086, %88 ], [ %.086, %78 ], [ %.086, %77 ], [ 1, %67 ], [ %.086, %57 ], [ %.086, %55 ], [ %.086, %54 ], [ %.086, %41 ], [ %.086, %31 ], [ %.086, %29 ], [ %.086, %17 ], [ %.086, %7 ]
  %.084.be = phi i32 [ %.084, %6 ], [ %.084, %502 ], [ %.084, %501 ], [ %.084, %500 ], [ %.084, %499 ], [ %.084, %498 ], [ %.084, %492 ], [ %.084, %491 ], [ %.084, %490 ], [ %.084, %489 ], [ %.084, %488 ], [ 1, %487 ], [ %.084, %486 ], [ %.084, %485 ], [ %.084, %481 ], [ %.084, %480 ], [ %.084, %478 ], [ %.084, %467 ], [ %.084, %457 ], [ %.084, %456 ], [ %.084, %446 ], [ %.084, %436 ], [ %.084, %434 ], [ %.084, %428 ], [ %.084, %426 ], [ %.084, %414 ], [ %.084, %404 ], [ %.084, %403 ], [ %.084, %393 ], [ %.084, %383 ], [ %.084, %380 ], [ %.084, %379 ], [ %.084, %377 ], [ %.084, %376 ], [ %.084, %375 ], [ %.084, %365 ], [ %.084, %355 ], [ %.084, %353 ], [ %.084, %345 ], [ %.084, %342 ], [ %.084, %339 ], [ %.084, %333 ], [ %.084, %328 ], [ %.084, %326 ], [ %.084, %323 ], [ %.084, %321 ], [ %.084, %320 ], [ %.084, %319 ], [ %.084, %317 ], [ %.084, %309 ], [ %.084, %306 ], [ %.084, %303 ], [ %.084, %297 ], [ %.084, %292 ], [ %.084, %289 ], [ %.084, %288 ], [ %.084, %286 ], [ %.084, %285 ], [ %.084, %284 ], [ %.084, %282 ], [ %.084, %281 ], [ %.084, %280 ], [ %.084, %265 ], [ %.084, %255 ], [ %.084, %250 ], [ %.084, %247 ], [ %.084, %245 ], [ %.084, %244 ], [ %.084, %241 ], [ %.084, %234 ], [ %.084, %232 ], [ %.084, %220 ], [ %.084, %210 ], [ %.084, %209 ], [ %.084, %199 ], [ %.084, %189 ], [ %.084, %187 ], [ %.084, %173 ], [ %.084, %163 ], [ %.084, %160 ], [ %.084, %159 ], [ %.084, %149 ], [ %.084, %139 ], [ %.084, %137 ], [ %.084, %136 ], [ %135, %134 ], [ %.084, %126 ], [ %.084, %123 ], [ %.084, %122 ], [ 1, %112 ], [ %.084, %102 ], [ %.084, %100 ], [ %.084, %88 ], [ %.084, %78 ], [ %.084, %77 ], [ %.084, %67 ], [ %.084, %57 ], [ %.084, %55 ], [ %.084, %54 ], [ %.084, %41 ], [ %.084, %31 ], [ %.084, %29 ], [ %.084, %17 ], [ %.084, %7 ]
  %.082.be = phi i32 [ %.082, %6 ], [ %.082, %502 ], [ %.082, %501 ], [ %.082, %500 ], [ %.082, %499 ], [ %.082, %498 ], [ %.082, %492 ], [ %.082, %491 ], [ %.082, %490 ], [ %.082, %489 ], [ 1, %488 ], [ %.082, %487 ], [ %.082, %486 ], [ %.082, %485 ], [ %.082, %481 ], [ %.082, %480 ], [ %.082, %478 ], [ %.082, %467 ], [ %.082, %457 ], [ %.082, %456 ], [ %.082, %446 ], [ %.082, %436 ], [ %.082, %434 ], [ %.082, %428 ], [ %.082, %426 ], [ %.082, %414 ], [ %.082, %404 ], [ %.082, %403 ], [ %.082, %393 ], [ %.082, %383 ], [ %.082, %380 ], [ %.082, %379 ], [ %.082, %377 ], [ %.082, %376 ], [ %.082, %375 ], [ %.082, %365 ], [ %.082, %355 ], [ %.082, %353 ], [ %.082, %345 ], [ %.082, %342 ], [ %.082, %339 ], [ %.082, %333 ], [ %.082, %328 ], [ %.082, %326 ], [ %.082, %323 ], [ %.082, %321 ], [ %.082, %320 ], [ %.082, %319 ], [ %.082, %317 ], [ %.082, %309 ], [ %.082, %306 ], [ %.082, %303 ], [ %.082, %297 ], [ %.082, %292 ], [ %.082, %289 ], [ %.082, %288 ], [ %287, %286 ], [ %.082, %285 ], [ %.082, %284 ], [ %.082, %282 ], [ %.082, %281 ], [ %.082, %280 ], [ %.082, %265 ], [ %.082, %255 ], [ %.082, %250 ], [ %.082, %247 ], [ %.082, %245 ], [ %.082, %244 ], [ %.082, %241 ], [ %.082, %234 ], [ %.082, %232 ], [ %.082, %220 ], [ %.082, %210 ], [ %.082, %209 ], [ %.082, %199 ], [ %.082, %189 ], [ %.082, %187 ], [ %.082, %173 ], [ %.082, %163 ], [ %.082, %160 ], [ %.082, %159 ], [ 1, %149 ], [ %.082, %139 ], [ %.082, %137 ], [ %.082, %136 ], [ %.082, %134 ], [ %.082, %126 ], [ %.082, %123 ], [ %.082, %122 ], [ %.082, %112 ], [ %.082, %102 ], [ %.082, %100 ], [ %.082, %88 ], [ %.082, %78 ], [ %.082, %77 ], [ %.082, %67 ], [ %.082, %57 ], [ %.082, %55 ], [ %.082, %54 ], [ %.082, %41 ], [ %.082, %31 ], [ %.082, %29 ], [ %.082, %17 ], [ %.082, %7 ]
  %.080.be = phi i8 [ %.080, %6 ], [ %.080, %502 ], [ %.080, %501 ], [ %.080, %500 ], [ %.080, %499 ], [ %.080, %498 ], [ %.080, %492 ], [ %.080, %491 ], [ 0, %490 ], [ %.080, %489 ], [ %.080, %488 ], [ %.080, %487 ], [ %.080, %486 ], [ %.080, %485 ], [ %.080, %481 ], [ %.080, %480 ], [ %.080, %478 ], [ %.080, %467 ], [ %.080, %457 ], [ %.080, %456 ], [ %.080, %446 ], [ %.080, %436 ], [ %.080, %434 ], [ %.080, %428 ], [ %.080, %426 ], [ %.080, %414 ], [ %.080, %404 ], [ %.080, %403 ], [ %.080, %393 ], [ %.080, %383 ], [ %.080, %380 ], [ %.080, %379 ], [ %.080, %377 ], [ %.080, %376 ], [ %.080, %375 ], [ %.080, %365 ], [ %.080, %355 ], [ %.080, %353 ], [ %.080, %345 ], [ %.080, %342 ], [ %.080, %339 ], [ %.080, %333 ], [ %.080, %328 ], [ %.080, %326 ], [ %.080, %323 ], [ %.080, %321 ], [ %.080, %320 ], [ %.080, %319 ], [ %.080, %317 ], [ %.080, %309 ], [ %.080, %306 ], [ %.080, %303 ], [ %.080, %297 ], [ %.080, %292 ], [ %.080, %289 ], [ %.080, %288 ], [ %.080, %286 ], [ %.080, %285 ], [ %.080, %284 ], [ %.080, %282 ], [ %.080, %281 ], [ %.080, %280 ], [ %.080, %265 ], [ %.080, %255 ], [ %.080, %250 ], [ %.080, %247 ], [ %.080, %245 ], [ 1, %244 ], [ %.080, %241 ], [ %.080, %234 ], [ %.080, %232 ], [ %.080, %220 ], [ %.080, %210 ], [ %.080, %209 ], [ 0, %199 ], [ %.080, %189 ], [ %.080, %187 ], [ %.080, %173 ], [ %.080, %163 ], [ %.080, %160 ], [ %.080, %159 ], [ %.080, %149 ], [ %.080, %139 ], [ %.080, %137 ], [ %.080, %136 ], [ %.080, %134 ], [ %.080, %126 ], [ %.080, %123 ], [ %.080, %122 ], [ %.080, %112 ], [ %.080, %102 ], [ %.080, %100 ], [ %.080, %88 ], [ %.080, %78 ], [ %.080, %77 ], [ %.080, %67 ], [ %.080, %57 ], [ %.080, %55 ], [ %.080, %54 ], [ %.080, %41 ], [ %.080, %31 ], [ %.080, %29 ], [ %.080, %17 ], [ %.080, %7 ]
  %.078.be = phi i32 [ %.078, %6 ], [ %.078, %502 ], [ %.078, %501 ], [ %.078, %500 ], [ %.078, %499 ], [ %.078, %498 ], [ %.078, %492 ], [ %.078, %491 ], [ 1, %490 ], [ %.078, %489 ], [ %.078, %488 ], [ %.078, %487 ], [ %.078, %486 ], [ %.078, %485 ], [ %.078, %481 ], [ %.078, %480 ], [ %.078, %478 ], [ %.078, %467 ], [ %.078, %457 ], [ %.078, %456 ], [ %.078, %446 ], [ %.078, %436 ], [ %.078, %434 ], [ %.078, %428 ], [ %.078, %426 ], [ %.078, %414 ], [ %.078, %404 ], [ %.078, %403 ], [ %.078, %393 ], [ %.078, %383 ], [ %.078, %380 ], [ %.078, %379 ], [ %.078, %377 ], [ %.078, %376 ], [ %.078, %375 ], [ %.078, %365 ], [ %.078, %355 ], [ %.078, %353 ], [ %.078, %345 ], [ %.078, %342 ], [ %.078, %339 ], [ %.078, %333 ], [ %.078, %328 ], [ %.078, %326 ], [ %.078, %323 ], [ %.078, %321 ], [ %.078, %320 ], [ %.078, %319 ], [ %.078, %317 ], [ %.078, %309 ], [ %.078, %306 ], [ %.078, %303 ], [ %.078, %297 ], [ %.078, %292 ], [ %.078, %289 ], [ %.078, %288 ], [ %.078, %286 ], [ %.078, %285 ], [ %.078, %284 ], [ %283, %282 ], [ %.078, %281 ], [ %.078, %280 ], [ %.078, %265 ], [ %.078, %255 ], [ %.078, %250 ], [ %.078, %247 ], [ %.078, %245 ], [ %.078, %244 ], [ %.078, %241 ], [ %.078, %234 ], [ %.078, %232 ], [ %.078, %220 ], [ %.078, %210 ], [ %.078, %209 ], [ 1, %199 ], [ %.078, %189 ], [ %.078, %187 ], [ %.078, %173 ], [ %.078, %163 ], [ %.078, %160 ], [ %.078, %159 ], [ %.078, %149 ], [ %.078, %139 ], [ %.078, %137 ], [ %.078, %136 ], [ %.078, %134 ], [ %.078, %126 ], [ %.078, %123 ], [ %.078, %122 ], [ %.078, %112 ], [ %.078, %102 ], [ %.078, %100 ], [ %.078, %88 ], [ %.078, %78 ], [ %.078, %77 ], [ %.078, %67 ], [ %.078, %57 ], [ %.078, %55 ], [ %.078, %54 ], [ %.078, %41 ], [ %.078, %31 ], [ %.078, %29 ], [ %.078, %17 ], [ %.078, %7 ]
  %.076.be = phi i32 [ %.076, %6 ], [ %.076, %502 ], [ %.076, %501 ], [ %.076, %500 ], [ %.076, %499 ], [ %.076, %498 ], [ %.076, %492 ], [ %.076, %491 ], [ %.076, %490 ], [ %.076, %489 ], [ %.076, %488 ], [ %.076, %487 ], [ %.076, %486 ], [ %.076, %485 ], [ %.076, %481 ], [ %.076, %480 ], [ %.076, %478 ], [ %.076, %467 ], [ %.076, %457 ], [ %.076, %456 ], [ %.076, %446 ], [ %.076, %436 ], [ %.076, %434 ], [ %.076, %428 ], [ %.076, %426 ], [ %.076, %414 ], [ %.076, %404 ], [ %.076, %403 ], [ %.076, %393 ], [ %.076, %383 ], [ %.076, %380 ], [ %.076, %379 ], [ %.076, %377 ], [ %.076, %376 ], [ %.076, %375 ], [ %.076, %365 ], [ %.076, %355 ], [ %.076, %353 ], [ %.076, %345 ], [ %.076, %342 ], [ %.076, %339 ], [ %.076, %333 ], [ %.076, %328 ], [ %.076, %326 ], [ %.076, %323 ], [ %322, %321 ], [ %.076, %320 ], [ %.076, %319 ], [ %.076, %317 ], [ %.076, %309 ], [ %.076, %306 ], [ %.076, %303 ], [ %.076, %297 ], [ %.076, %292 ], [ %.076, %289 ], [ 2, %288 ], [ %.076, %286 ], [ %.076, %285 ], [ %.076, %284 ], [ %.076, %282 ], [ %.076, %281 ], [ %.076, %280 ], [ %.076, %265 ], [ %.076, %255 ], [ %.076, %250 ], [ %.076, %247 ], [ %.076, %245 ], [ %.076, %244 ], [ %.076, %241 ], [ %.076, %234 ], [ %.076, %232 ], [ %.076, %220 ], [ %.076, %210 ], [ %.076, %209 ], [ %.076, %199 ], [ %.076, %189 ], [ %.076, %187 ], [ %.076, %173 ], [ %.076, %163 ], [ %.076, %160 ], [ %.076, %159 ], [ %.076, %149 ], [ %.076, %139 ], [ %.076, %137 ], [ %.076, %136 ], [ %.076, %134 ], [ %.076, %126 ], [ %.076, %123 ], [ %.076, %122 ], [ %.076, %112 ], [ %.076, %102 ], [ %.076, %100 ], [ %.076, %88 ], [ %.076, %78 ], [ %.076, %77 ], [ %.076, %67 ], [ %.076, %57 ], [ %.076, %55 ], [ %.076, %54 ], [ %.076, %41 ], [ %.076, %31 ], [ %.076, %29 ], [ %.076, %17 ], [ %.076, %7 ]
  %.074.be = phi i32 [ %.074, %6 ], [ %.074, %502 ], [ %.074, %501 ], [ %.074, %500 ], [ %.074, %499 ], [ %.074, %498 ], [ %.074, %492 ], [ %.074, %491 ], [ %.074, %490 ], [ %.074, %489 ], [ %.074, %488 ], [ %.074, %487 ], [ %.074, %486 ], [ %.074, %485 ], [ %.074, %481 ], [ %.074, %480 ], [ %.074, %478 ], [ %.074, %467 ], [ %.074, %457 ], [ %.074, %456 ], [ %.074, %446 ], [ %.074, %436 ], [ %.074, %434 ], [ %.074, %428 ], [ %.074, %426 ], [ %.074, %414 ], [ %.074, %404 ], [ %.074, %403 ], [ %.074, %393 ], [ %.074, %383 ], [ %.074, %380 ], [ %.074, %379 ], [ %.074, %377 ], [ %.074, %376 ], [ %.074, %375 ], [ %.074, %365 ], [ %.074, %355 ], [ %.074, %353 ], [ %.074, %345 ], [ %.074, %342 ], [ %.074, %339 ], [ %.074, %333 ], [ %.074, %328 ], [ %.074, %326 ], [ %.074, %323 ], [ %.074, %321 ], [ %.074, %320 ], [ %.074, %319 ], [ %318, %317 ], [ %.074, %309 ], [ %.074, %306 ], [ 1, %303 ], [ %.074, %297 ], [ %.074, %292 ], [ %.074, %289 ], [ %.074, %288 ], [ %.074, %286 ], [ %.074, %285 ], [ %.074, %284 ], [ %.074, %282 ], [ %.074, %281 ], [ %.074, %280 ], [ %.074, %265 ], [ %.074, %255 ], [ %.074, %250 ], [ %.074, %247 ], [ %.074, %245 ], [ %.074, %244 ], [ %.074, %241 ], [ %.074, %234 ], [ %.074, %232 ], [ %.074, %220 ], [ %.074, %210 ], [ %.074, %209 ], [ %.074, %199 ], [ %.074, %189 ], [ %.074, %187 ], [ %.074, %173 ], [ %.074, %163 ], [ %.074, %160 ], [ %.074, %159 ], [ %.074, %149 ], [ %.074, %139 ], [ %.074, %137 ], [ %.074, %136 ], [ %.074, %134 ], [ %.074, %126 ], [ %.074, %123 ], [ %.074, %122 ], [ %.074, %112 ], [ %.074, %102 ], [ %.074, %100 ], [ %.074, %88 ], [ %.074, %78 ], [ %.074, %77 ], [ %.074, %67 ], [ %.074, %57 ], [ %.074, %55 ], [ %.074, %54 ], [ %.074, %41 ], [ %.074, %31 ], [ %.074, %29 ], [ %.074, %17 ], [ %.074, %7 ]
  %.072.be = phi i32 [ %.072, %6 ], [ %.072, %502 ], [ %.072, %501 ], [ %.072, %500 ], [ %.072, %499 ], [ %.072, %498 ], [ %.072, %492 ], [ %.072, %491 ], [ %.072, %490 ], [ %.072, %489 ], [ %.072, %488 ], [ %.072, %487 ], [ %.072, %486 ], [ %.072, %485 ], [ %.072, %481 ], [ %.072, %480 ], [ %.072, %478 ], [ %.072, %467 ], [ %.072, %457 ], [ %.072, %456 ], [ %.072, %446 ], [ %.072, %436 ], [ %.072, %434 ], [ %.072, %428 ], [ %.072, %426 ], [ %.072, %414 ], [ %.072, %404 ], [ %.072, %403 ], [ %.072, %393 ], [ %.072, %383 ], [ %.072, %380 ], [ %.072, %379 ], [ %378, %377 ], [ %.072, %376 ], [ %.072, %375 ], [ %.072, %365 ], [ %.072, %355 ], [ %.072, %353 ], [ %.072, %345 ], [ %.072, %342 ], [ %.072, %339 ], [ %.072, %333 ], [ %.072, %328 ], [ %.072, %326 ], [ %325, %323 ], [ %.072, %321 ], [ %.072, %320 ], [ %.072, %319 ], [ %.072, %317 ], [ %.072, %309 ], [ %.072, %306 ], [ %.072, %303 ], [ %.072, %297 ], [ %.072, %292 ], [ %.072, %289 ], [ %.072, %288 ], [ %.072, %286 ], [ %.072, %285 ], [ %.072, %284 ], [ %.072, %282 ], [ %.072, %281 ], [ %.072, %280 ], [ %.072, %265 ], [ %.072, %255 ], [ %.072, %250 ], [ %.072, %247 ], [ %.072, %245 ], [ %.072, %244 ], [ %.072, %241 ], [ %.072, %234 ], [ %.072, %232 ], [ %.072, %220 ], [ %.072, %210 ], [ %.072, %209 ], [ %.072, %199 ], [ %.072, %189 ], [ %.072, %187 ], [ %.072, %173 ], [ %.072, %163 ], [ %.072, %160 ], [ %.072, %159 ], [ %.072, %149 ], [ %.072, %139 ], [ %.072, %137 ], [ %.072, %136 ], [ %.072, %134 ], [ %.072, %126 ], [ %.072, %123 ], [ %.072, %122 ], [ %.072, %112 ], [ %.072, %102 ], [ %.072, %100 ], [ %.072, %88 ], [ %.072, %78 ], [ %.072, %77 ], [ %.072, %67 ], [ %.072, %57 ], [ %.072, %55 ], [ %.072, %54 ], [ %.072, %41 ], [ %.072, %31 ], [ %.072, %29 ], [ %.072, %17 ], [ %.072, %7 ]
  %.070.be = phi i32 [ %.070, %6 ], [ %.070, %502 ], [ %.070, %501 ], [ %.070, %500 ], [ %.070, %499 ], [ %.070, %498 ], [ %.070, %492 ], [ %.070, %491 ], [ %.070, %490 ], [ %.070, %489 ], [ %.070, %488 ], [ %.070, %487 ], [ %.070, %486 ], [ %.070, %485 ], [ %.070, %481 ], [ %.070, %480 ], [ %.070, %478 ], [ %.070, %467 ], [ %.070, %457 ], [ %.070, %456 ], [ %.070, %446 ], [ %.070, %436 ], [ %.070, %434 ], [ %.070, %428 ], [ %.070, %426 ], [ %.070, %414 ], [ %.070, %404 ], [ %.070, %403 ], [ %.070, %393 ], [ %.070, %383 ], [ %.070, %380 ], [ %.070, %379 ], [ %.070, %377 ], [ %.070, %376 ], [ %.070, %375 ], [ %.070, %365 ], [ %.070, %355 ], [ %354, %353 ], [ %.070, %345 ], [ %.070, %342 ], [ 1, %339 ], [ %.070, %333 ], [ %.070, %328 ], [ %.070, %326 ], [ %.070, %323 ], [ %.070, %321 ], [ %.070, %320 ], [ %.070, %319 ], [ %.070, %317 ], [ %.070, %309 ], [ %.070, %306 ], [ %.070, %303 ], [ %.070, %297 ], [ %.070, %292 ], [ %.070, %289 ], [ %.070, %288 ], [ %.070, %286 ], [ %.070, %285 ], [ %.070, %284 ], [ %.070, %282 ], [ %.070, %281 ], [ %.070, %280 ], [ %.070, %265 ], [ %.070, %255 ], [ %.070, %250 ], [ %.070, %247 ], [ %.070, %245 ], [ %.070, %244 ], [ %.070, %241 ], [ %.070, %234 ], [ %.070, %232 ], [ %.070, %220 ], [ %.070, %210 ], [ %.070, %209 ], [ %.070, %199 ], [ %.070, %189 ], [ %.070, %187 ], [ %.070, %173 ], [ %.070, %163 ], [ %.070, %160 ], [ %.070, %159 ], [ %.070, %149 ], [ %.070, %139 ], [ %.070, %137 ], [ %.070, %136 ], [ %.070, %134 ], [ %.070, %126 ], [ %.070, %123 ], [ %.070, %122 ], [ %.070, %112 ], [ %.070, %102 ], [ %.070, %100 ], [ %.070, %88 ], [ %.070, %78 ], [ %.070, %77 ], [ %.070, %67 ], [ %.070, %57 ], [ %.070, %55 ], [ %.070, %54 ], [ %.070, %41 ], [ %.070, %31 ], [ %.070, %29 ], [ %.070, %17 ], [ %.070, %7 ]
  %.068.be = phi i32 [ %.068, %6 ], [ %.neg, %502 ], [ %.068, %501 ], [ %.068, %500 ], [ %.068, %499 ], [ %.068, %498 ], [ %.068, %492 ], [ %.068, %491 ], [ %.068, %490 ], [ %.068, %489 ], [ %.068, %488 ], [ %.068, %487 ], [ %.068, %486 ], [ %.068, %485 ], [ %.068, %481 ], [ %.068, %480 ], [ %.068, %478 ], [ %468, %467 ], [ %.068, %457 ], [ %.068, %456 ], [ %.068, %446 ], [ %.068, %436 ], [ %.068, %434 ], [ %.068, %428 ], [ %.068, %426 ], [ %.068, %414 ], [ %.068, %404 ], [ %.068, %403 ], [ %.068, %393 ], [ %.068, %383 ], [ %.068, %380 ], [ 1, %379 ], [ %.068, %377 ], [ %.068, %376 ], [ %.068, %375 ], [ %.068, %365 ], [ %.068, %355 ], [ %.068, %353 ], [ %.068, %345 ], [ %.068, %342 ], [ %.068, %339 ], [ %.068, %333 ], [ %.068, %328 ], [ %.068, %326 ], [ %.068, %323 ], [ %.068, %321 ], [ %.068, %320 ], [ %.068, %319 ], [ %.068, %317 ], [ %.068, %309 ], [ %.068, %306 ], [ %.068, %303 ], [ %.068, %297 ], [ %.068, %292 ], [ %.068, %289 ], [ %.068, %288 ], [ %.068, %286 ], [ %.068, %285 ], [ %.068, %284 ], [ %.068, %282 ], [ %.068, %281 ], [ %.068, %280 ], [ %.068, %265 ], [ %.068, %255 ], [ %.068, %250 ], [ %.068, %247 ], [ %.068, %245 ], [ %.068, %244 ], [ %.068, %241 ], [ %.068, %234 ], [ %.068, %232 ], [ %.068, %220 ], [ %.068, %210 ], [ %.068, %209 ], [ %.068, %199 ], [ %.068, %189 ], [ %.068, %187 ], [ %.068, %173 ], [ %.068, %163 ], [ %.068, %160 ], [ %.068, %159 ], [ %.068, %149 ], [ %.068, %139 ], [ %.068, %137 ], [ %.068, %136 ], [ %.068, %134 ], [ %.068, %126 ], [ %.068, %123 ], [ %.068, %122 ], [ %.068, %112 ], [ %.068, %102 ], [ %.068, %100 ], [ %.068, %88 ], [ %.068, %78 ], [ %.068, %77 ], [ %.068, %67 ], [ %.068, %57 ], [ %.068, %55 ], [ %.068, %54 ], [ %.068, %41 ], [ %.068, %31 ], [ %.068, %29 ], [ %.068, %17 ], [ %.068, %7 ]
  %.066.be = phi i32 [ %.066, %6 ], [ %.066, %502 ], [ %.066, %501 ], [ %.066, %500 ], [ 1, %499 ], [ %.066, %498 ], [ %.066, %492 ], [ %.066, %491 ], [ %.066, %490 ], [ %.066, %489 ], [ %.066, %488 ], [ %.066, %487 ], [ %.066, %486 ], [ %.066, %485 ], [ %.066, %481 ], [ %.066, %480 ], [ %.066, %478 ], [ %.066, %467 ], [ %.066, %457 ], [ %.066, %456 ], [ %.066, %446 ], [ %.066, %436 ], [ %435, %434 ], [ %.066, %428 ], [ %.066, %426 ], [ %.066, %414 ], [ %.066, %404 ], [ %.066, %403 ], [ 1, %393 ], [ %.066, %383 ], [ %.066, %380 ], [ %.066, %379 ], [ %.066, %377 ], [ %.066, %376 ], [ %.066, %375 ], [ %.066, %365 ], [ %.066, %355 ], [ %.066, %353 ], [ %.066, %345 ], [ %.066, %342 ], [ %.066, %339 ], [ %.066, %333 ], [ %.066, %328 ], [ %.066, %326 ], [ %.066, %323 ], [ %.066, %321 ], [ %.066, %320 ], [ %.066, %319 ], [ %.066, %317 ], [ %.066, %309 ], [ %.066, %306 ], [ %.066, %303 ], [ %.066, %297 ], [ %.066, %292 ], [ %.066, %289 ], [ %.066, %288 ], [ %.066, %286 ], [ %.066, %285 ], [ %.066, %284 ], [ %.066, %282 ], [ %.066, %281 ], [ %.066, %280 ], [ %.066, %265 ], [ %.066, %255 ], [ %.066, %250 ], [ %.066, %247 ], [ %.066, %245 ], [ %.066, %244 ], [ %.066, %241 ], [ %.066, %234 ], [ %.066, %232 ], [ %.066, %220 ], [ %.066, %210 ], [ %.066, %209 ], [ %.066, %199 ], [ %.066, %189 ], [ %.066, %187 ], [ %.066, %173 ], [ %.066, %163 ], [ %.066, %160 ], [ %.066, %159 ], [ %.066, %149 ], [ %.066, %139 ], [ %.066, %137 ], [ %.066, %136 ], [ %.066, %134 ], [ %.066, %126 ], [ %.066, %123 ], [ %.066, %122 ], [ %.066, %112 ], [ %.066, %102 ], [ %.066, %100 ], [ %.066, %88 ], [ %.066, %78 ], [ %.066, %77 ], [ %.066, %67 ], [ %.066, %57 ], [ %.066, %55 ], [ %.066, %54 ], [ %.066, %41 ], [ %.066, %31 ], [ %.066, %29 ], [ %.066, %17 ], [ %.066, %7 ]
  %.0.be = phi i32 [ %.0, %6 ], [ -1527331915, %502 ], [ 2071443549, %501 ], [ -1098108570, %500 ], [ -2073059947, %499 ], [ 1184495169, %498 ], [ 574389027, %492 ], [ 1975824058, %491 ], [ 900480400, %490 ], [ 1718086471, %489 ], [ -63127, %488 ], [ 16052789, %487 ], [ -1978827255, %486 ], [ -1666817290, %485 ], [ 962724018, %481 ], [ -172477175, %480 ], [ 2058767623, %478 ], [ %477, %467 ], [ %466, %457 ], [ 478085528, %456 ], [ %455, %446 ], [ %445, %436 ], [ -617285516, %434 ], [ -1344966230, %428 ], [ %427, %426 ], [ %425, %414 ], [ %413, %404 ], [ -617285516, %403 ], [ %402, %393 ], [ %392, %383 ], [ %382, %380 ], [ 2058767623, %379 ], [ 1564153752, %377 ], [ 506788400, %376 ], [ -2128456628, %375 ], [ %374, %365 ], [ %364, %355 ], [ -1975393835, %353 ], [ 1097839919, %345 ], [ %344, %342 ], [ -1975393835, %339 ], [ %338, %333 ], [ %332, %328 ], [ %327, %326 ], [ 1564153752, %323 ], [ -1435231860, %321 ], [ -870948823, %320 ], [ -937588124, %319 ], [ 2007171512, %317 ], [ 1869980388, %309 ], [ %308, %306 ], [ 2007171512, %303 ], [ %302, %297 ], [ %296, %292 ], [ %291, %289 ], [ -1435231860, %288 ], [ 2104078103, %286 ], [ -476782567, %285 ], [ -1754562935, %284 ], [ -2018780993, %282 ], [ 34731441, %281 ], [ 1666666948, %280 ], [ %279, %265 ], [ %264, %255 ], [ 1666666948, %250 ], [ %249, %247 ], [ 1906587639, %245 ], [ -2015278898, %244 ], [ %243, %241 ], [ %240, %234 ], [ %233, %232 ], [ %231, %220 ], [ %219, %210 ], [ -2018780993, %209 ], [ %208, %199 ], [ %198, %189 ], [ %188, %187 ], [ %186, %173 ], [ %172, %163 ], [ %162, %160 ], [ 2104078103, %159 ], [ %158, %149 ], [ %148, %139 ], [ 1701997881, %137 ], [ -6110495, %136 ], [ 1724614591, %134 ], [ -911944732, %126 ], [ %125, %123 ], [ 1724614591, %122 ], [ %121, %112 ], [ %111, %102 ], [ %101, %100 ], [ %99, %88 ], [ %87, %78 ], [ 1701997881, %77 ], [ %76, %67 ], [ %66, %57 ], [ -1616644143, %55 ], [ -1184239637, %54 ], [ %53, %41 ], [ %40, %31 ], [ %30, %29 ], [ %28, %17 ], [ %16, %7 ]
  br label %6

7:                                                ; preds = %6
  %8 = load i32, i32* @x.2, align 4
  %9 = load i32, i32* @y.3, align 4
  %10 = add i32 %8, -1
  %11 = mul i32 %10, %8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %14, %13
  %16 = select i1 %15, i32 -172477175, i32 226650238
  br label %.backedge

17:                                               ; preds = %6
  %18 = load i32, i32* @n, align 4
  %19 = icmp sle i32 %.088, %18
  store i1 %19, i1* %5, align 1
  %20 = load i32, i32* @x.2, align 4
  %21 = load i32, i32* @y.3, align 4
  %22 = add i32 %20, -1
  %23 = mul i32 %22, %20
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %21, 10
  %27 = or i1 %26, %25
  %28 = select i1 %27, i32 -266289508, i32 226650238
  br label %.backedge

29:                                               ; preds = %6
  %.0..0..0. = load volatile i1, i1* %5, align 1
  %30 = select i1 %.0..0..0., i32 -1685529440, i32 -2099911155
  br label %.backedge

31:                                               ; preds = %6
  %32 = load i32, i32* @x.2, align 4
  %33 = load i32, i32* @y.3, align 4
  %34 = add i32 %32, -1
  %35 = mul i32 %34, %32
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %33, 10
  %39 = or i1 %38, %37
  %40 = select i1 %39, i32 962724018, i32 897286692
  br label %.backedge

41:                                               ; preds = %6
  %42 = sext i32 %.088 to i64
  %43 = getelementptr inbounds [2005 x [2005 x i8]], [2005 x [2005 x i8]]* @s, i64 0, i64 %42, i64 1
  %44 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* nonnull %43)
  %45 = load i32, i32* @x.2, align 4
  %46 = load i32, i32* @y.3, align 4
  %47 = add i32 %45, -1
  %48 = mul i32 %47, %45
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %51, %50
  %53 = select i1 %52, i32 -232548253, i32 897286692
  br label %.backedge

54:                                               ; preds = %6
  br label %.backedge

55:                                               ; preds = %6
  %56 = add i32 %.088, 1
  br label %.backedge

57:                                               ; preds = %6
  %58 = load i32, i32* @x.2, align 4
  %59 = load i32, i32* @y.3, align 4
  %60 = add i32 %58, -1
  %61 = mul i32 %60, %58
  %62 = and i32 %61, 1
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %64, %63
  %66 = select i1 %65, i32 -1666817290, i32 -1655804831
  br label %.backedge

67:                                               ; preds = %6
  %68 = load i32, i32* @x.2, align 4
  %69 = load i32, i32* @y.3, align 4
  %70 = add i32 %68, -1
  %71 = mul i32 %70, %68
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %74, %73
  %76 = select i1 %75, i32 2000814017, i32 -1655804831
  br label %.backedge

77:                                               ; preds = %6
  br label %.backedge

78:                                               ; preds = %6
  %79 = load i32, i32* @x.2, align 4
  %80 = load i32, i32* @y.3, align 4
  %81 = add i32 %79, -1
  %82 = mul i32 %81, %79
  %83 = and i32 %82, 1
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %85, %84
  %87 = select i1 %86, i32 -1978827255, i32 1107215842
  br label %.backedge

88:                                               ; preds = %6
  %89 = load i32, i32* @n, align 4
  %90 = icmp sle i32 %.086, %89
  store i1 %90, i1* %4, align 1
  %91 = load i32, i32* @x.2, align 4
  %92 = load i32, i32* @y.3, align 4
  %93 = add i32 %91, -1
  %94 = mul i32 %93, %91
  %95 = and i32 %94, 1
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %92, 10
  %98 = or i1 %97, %96
  %99 = select i1 %98, i32 -2127084774, i32 1107215842
  br label %.backedge

100:                                              ; preds = %6
  %.0..0..0.62 = load volatile i1, i1* %4, align 1
  %101 = select i1 %.0..0..0.62, i32 -1432171187, i32 -348381171
  br label %.backedge

102:                                              ; preds = %6
  %103 = load i32, i32* @x.2, align 4
  %104 = load i32, i32* @y.3, align 4
  %105 = add i32 %103, -1
  %106 = mul i32 %105, %103
  %107 = and i32 %106, 1
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %109, %108
  %111 = select i1 %110, i32 16052789, i32 -842256151
  br label %.backedge

112:                                              ; preds = %6
  %113 = load i32, i32* @x.2, align 4
  %114 = load i32, i32* @y.3, align 4
  %115 = add i32 %113, -1
  %116 = mul i32 %115, %113
  %117 = and i32 %116, 1
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %119, %118
  %121 = select i1 %120, i32 1214979430, i32 -842256151
  br label %.backedge

122:                                              ; preds = %6
  br label %.backedge

123:                                              ; preds = %6
  %124 = load i32, i32* @m, align 4
  %.not105 = icmp sgt i32 %.084, %124
  %125 = select i1 %.not105, i32 1116730228, i32 1195048970
  br label %.backedge

126:                                              ; preds = %6
  %127 = sext i32 %.086 to i64
  %128 = sext i32 %.084 to i64
  %129 = getelementptr inbounds [2005 x [2005 x i8]], [2005 x [2005 x i8]]* @s, i64 0, i64 %127, i64 %128
  %130 = load i8, i8* %129, align 1
  %131 = icmp eq i8 %130, 35
  %.neg103.neg = zext i1 %131 to i32
  %132 = getelementptr inbounds [2005 x i32], [2005 x i32]* @cnt, i64 0, i64 %127
  %133 = load i32, i32* %132, align 4
  %.neg104 = add i32 %133, %.neg103.neg
  store i32 %.neg104, i32* %132, align 4
  br label %.backedge

134:                                              ; preds = %6
  %135 = add i32 %.084, 1
  br label %.backedge

136:                                              ; preds = %6
  br label %.backedge

137:                                              ; preds = %6
  %138 = add i32 %.086, 1
  br label %.backedge

139:                                              ; preds = %6
  %140 = load i32, i32* @x.2, align 4
  %141 = load i32, i32* @y.3, align 4
  %142 = add i32 %140, -1
  %143 = mul i32 %142, %140
  %144 = and i32 %143, 1
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %141, 10
  %147 = or i1 %146, %145
  %148 = select i1 %147, i32 -63127, i32 -1718842531
  br label %.backedge

149:                                              ; preds = %6
  %150 = load i32, i32* @x.2, align 4
  %151 = load i32, i32* @y.3, align 4
  %152 = add i32 %150, -1
  %153 = mul i32 %152, %150
  %154 = and i32 %153, 1
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %151, 10
  %157 = or i1 %156, %155
  %158 = select i1 %157, i32 489735679, i32 -1718842531
  br label %.backedge

159:                                              ; preds = %6
  br label %.backedge

160:                                              ; preds = %6
  %161 = load i32, i32* @n, align 4
  %.not102 = icmp sgt i32 %.082, %161
  %162 = select i1 %.not102, i32 479015441, i32 1968806358
  br label %.backedge

163:                                              ; preds = %6
  %164 = load i32, i32* @x.2, align 4
  %165 = load i32, i32* @y.3, align 4
  %166 = add i32 %164, -1
  %167 = mul i32 %166, %164
  %168 = and i32 %167, 1
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %165, 10
  %171 = or i1 %170, %169
  %172 = select i1 %171, i32 1718086471, i32 -77124746
  br label %.backedge

173:                                              ; preds = %6
  %174 = sext i32 %.082 to i64
  %175 = getelementptr inbounds [2005 x i32], [2005 x i32]* @cnt, i64 0, i64 %174
  %176 = load i32, i32* %175, align 4
  %177 = icmp ne i32 %176, 0
  store i1 %177, i1* %3, align 1
  %178 = load i32, i32* @x.2, align 4
  %179 = load i32, i32* @y.3, align 4
  %180 = add i32 %178, -1
  %181 = mul i32 %180, %178
  %182 = and i32 %181, 1
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %184, %183
  %186 = select i1 %185, i32 -2075454496, i32 -77124746
  br label %.backedge

187:                                              ; preds = %6
  %.0..0..0.63 = load volatile i1, i1* %3, align 1
  %188 = select i1 %.0..0..0.63, i32 -956141859, i32 -1754562935
  br label %.backedge

189:                                              ; preds = %6
  %190 = load i32, i32* @x.2, align 4
  %191 = load i32, i32* @y.3, align 4
  %192 = add i32 %190, -1
  %193 = mul i32 %192, %190
  %194 = and i32 %193, 1
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %196, %195
  %198 = select i1 %197, i32 900480400, i32 -71295874
  br label %.backedge

199:                                              ; preds = %6
  %200 = load i32, i32* @x.2, align 4
  %201 = load i32, i32* @y.3, align 4
  %202 = add i32 %200, -1
  %203 = mul i32 %202, %200
  %204 = and i32 %203, 1
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %201, 10
  %207 = or i1 %206, %205
  %208 = select i1 %207, i32 -670566461, i32 -71295874
  br label %.backedge

209:                                              ; preds = %6
  br label %.backedge

210:                                              ; preds = %6
  %211 = load i32, i32* @x.2, align 4
  %212 = load i32, i32* @y.3, align 4
  %213 = add i32 %211, -1
  %214 = mul i32 %213, %211
  %215 = and i32 %214, 1
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %217, %216
  %219 = select i1 %218, i32 1975824058, i32 -1518748662
  br label %.backedge

220:                                              ; preds = %6
  %221 = load i32, i32* @m, align 4
  %222 = icmp sle i32 %.078, %221
  store i1 %222, i1* %2, align 1
  %223 = load i32, i32* @x.2, align 4
  %224 = load i32, i32* @y.3, align 4
  %225 = add i32 %223, -1
  %226 = mul i32 %225, %223
  %227 = and i32 %226, 1
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %229, %228
  %231 = select i1 %230, i32 -1104289145, i32 -1518748662
  br label %.backedge

232:                                              ; preds = %6
  %.0..0..0.64 = load volatile i1, i1* %2, align 1
  %233 = select i1 %.0..0..0.64, i32 -803101812, i32 1954915361
  br label %.backedge

234:                                              ; preds = %6
  %235 = sext i32 %.082 to i64
  %236 = sext i32 %.078 to i64
  %237 = getelementptr inbounds [2005 x [2005 x i8]], [2005 x [2005 x i8]]* @s, i64 0, i64 %235, i64 %236
  %238 = load i8, i8* %237, align 1
  %239 = icmp eq i8 %238, 35
  %240 = select i1 %239, i32 -977585996, i32 1906587639
  br label %.backedge

241:                                              ; preds = %6
  %242 = and i8 %.080, 1
  %.not101 = icmp eq i8 %242, 0
  %243 = select i1 %.not101, i32 608622056, i32 -2015278898
  br label %.backedge

244:                                              ; preds = %6
  br label %.backedge

245:                                              ; preds = %6
  %246 = load i32, i32* @idn, align 4
  %.neg100 = add i32 %246, 1
  store i32 %.neg100, i32* @idn, align 4
  br label %.backedge

247:                                              ; preds = %6
  %248 = and i8 %.080, 1
  %.not99 = icmp eq i8 %248, 0
  %249 = select i1 %.not99, i32 39817198, i32 -42037641
  br label %.backedge

250:                                              ; preds = %6
  %251 = load i32, i32* @idn, align 4
  %252 = sext i32 %.082 to i64
  %253 = sext i32 %.078 to i64
  %254 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ans, i64 0, i64 %252, i64 %253
  store i32 %251, i32* %254, align 4
  br label %.backedge

255:                                              ; preds = %6
  %256 = load i32, i32* @x.2, align 4
  %257 = load i32, i32* @y.3, align 4
  %258 = add i32 %256, -1
  %259 = mul i32 %258, %256
  %260 = and i32 %259, 1
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %257, 10
  %263 = or i1 %262, %261
  %264 = select i1 %263, i32 574389027, i32 -1793126119
  br label %.backedge

265:                                              ; preds = %6
  %266 = load i32, i32* @idn, align 4
  %267 = add i32 %266, 1
  %268 = sext i32 %.082 to i64
  %269 = sext i32 %.078 to i64
  %270 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ans, i64 0, i64 %268, i64 %269
  store i32 %267, i32* %270, align 4
  %271 = load i32, i32* @x.2, align 4
  %272 = load i32, i32* @y.3, align 4
  %273 = add i32 %271, -1
  %274 = mul i32 %273, %271
  %275 = and i32 %274, 1
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %277, %276
  %279 = select i1 %278, i32 643942761, i32 -1793126119
  br label %.backedge

280:                                              ; preds = %6
  br label %.backedge

281:                                              ; preds = %6
  br label %.backedge

282:                                              ; preds = %6
  %283 = add i32 %.078, 1
  br label %.backedge

284:                                              ; preds = %6
  br label %.backedge

285:                                              ; preds = %6
  br label %.backedge

286:                                              ; preds = %6
  %287 = add i32 %.082, 1
  br label %.backedge

288:                                              ; preds = %6
  br label %.backedge

289:                                              ; preds = %6
  %290 = load i32, i32* @n, align 4
  %.not98 = icmp sgt i32 %.076, %290
  %291 = select i1 %.not98, i32 190220298, i32 -1330209999
  br label %.backedge

292:                                              ; preds = %6
  %293 = sext i32 %.076 to i64
  %294 = getelementptr inbounds [2005 x i32], [2005 x i32]* @cnt, i64 0, i64 %293
  %295 = load i32, i32* %294, align 4
  %.not97 = icmp eq i32 %295, 0
  %296 = select i1 %.not97, i32 193721250, i32 -937588124
  br label %.backedge

297:                                              ; preds = %6
  %298 = add i32 %.076, -1
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds [2005 x i32], [2005 x i32]* @cnt, i64 0, i64 %299
  %301 = load i32, i32* %300, align 4
  %.not96 = icmp eq i32 %301, 0
  %302 = select i1 %.not96, i32 -937588124, i32 -1640924237
  br label %.backedge

303:                                              ; preds = %6
  %304 = sext i32 %.076 to i64
  %305 = getelementptr inbounds [2005 x i32], [2005 x i32]* @cnt, i64 0, i64 %304
  store i32 1, i32* %305, align 4
  br label %.backedge

306:                                              ; preds = %6
  %307 = load i32, i32* @m, align 4
  %.not95 = icmp sgt i32 %.074, %307
  %308 = select i1 %.not95, i32 1885760686, i32 -783992452
  br label %.backedge

309:                                              ; preds = %6
  %310 = add i32 %.076, -1
  %311 = sext i32 %310 to i64
  %312 = sext i32 %.074 to i64
  %313 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ans, i64 0, i64 %311, i64 %312
  %314 = load i32, i32* %313, align 4
  %315 = sext i32 %.076 to i64
  %316 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ans, i64 0, i64 %315, i64 %312
  store i32 %314, i32* %316, align 4
  br label %.backedge

317:                                              ; preds = %6
  %318 = add i32 %.074, 1
  br label %.backedge

319:                                              ; preds = %6
  br label %.backedge

320:                                              ; preds = %6
  br label %.backedge

321:                                              ; preds = %6
  %322 = add i32 %.076, 1
  br label %.backedge

323:                                              ; preds = %6
  %324 = load i32, i32* @n, align 4
  %325 = add i32 %324, -1
  br label %.backedge

326:                                              ; preds = %6
  %.not94 = icmp eq i32 %.072, 0
  %327 = select i1 %.not94, i32 1242168791, i32 -955772188
  br label %.backedge

328:                                              ; preds = %6
  %329 = sext i32 %.072 to i64
  %330 = getelementptr inbounds [2005 x i32], [2005 x i32]* @cnt, i64 0, i64 %329
  %331 = load i32, i32* %330, align 4
  %.not93 = icmp eq i32 %331, 0
  %332 = select i1 %.not93, i32 1339155837, i32 -2128456628
  br label %.backedge

333:                                              ; preds = %6
  %334 = add i32 %.072, 1
  %335 = sext i32 %334 to i64
  %336 = getelementptr inbounds [2005 x i32], [2005 x i32]* @cnt, i64 0, i64 %335
  %337 = load i32, i32* %336, align 4
  %.not92 = icmp eq i32 %337, 0
  %338 = select i1 %.not92, i32 -2128456628, i32 1470834806
  br label %.backedge

339:                                              ; preds = %6
  %340 = sext i32 %.072 to i64
  %341 = getelementptr inbounds [2005 x i32], [2005 x i32]* @cnt, i64 0, i64 %340
  store i32 1, i32* %341, align 4
  br label %.backedge

342:                                              ; preds = %6
  %343 = load i32, i32* @m, align 4
  %.not91 = icmp sgt i32 %.070, %343
  %344 = select i1 %.not91, i32 737604001, i32 -1096083123
  br label %.backedge

345:                                              ; preds = %6
  %346 = add i32 %.072, 1
  %347 = sext i32 %346 to i64
  %348 = sext i32 %.070 to i64
  %349 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ans, i64 0, i64 %347, i64 %348
  %350 = load i32, i32* %349, align 4
  %351 = sext i32 %.072 to i64
  %352 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ans, i64 0, i64 %351, i64 %348
  store i32 %350, i32* %352, align 4
  br label %.backedge

353:                                              ; preds = %6
  %354 = add i32 %.070, 1
  br label %.backedge

355:                                              ; preds = %6
  %356 = load i32, i32* @x.2, align 4
  %357 = load i32, i32* @y.3, align 4
  %358 = add i32 %356, -1
  %359 = mul i32 %358, %356
  %360 = and i32 %359, 1
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %362, %361
  %364 = select i1 %363, i32 1184495169, i32 97803539
  br label %.backedge

365:                                              ; preds = %6
  %366 = load i32, i32* @x.2, align 4
  %367 = load i32, i32* @y.3, align 4
  %368 = add i32 %366, -1
  %369 = mul i32 %368, %366
  %370 = and i32 %369, 1
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %367, 10
  %373 = or i1 %372, %371
  %374 = select i1 %373, i32 120120799, i32 97803539
  br label %.backedge

375:                                              ; preds = %6
  br label %.backedge

376:                                              ; preds = %6
  br label %.backedge

377:                                              ; preds = %6
  %378 = add i32 %.072, -1
  br label %.backedge

379:                                              ; preds = %6
  br label %.backedge

380:                                              ; preds = %6
  %381 = load i32, i32* @n, align 4
  %.not = icmp sgt i32 %.068, %381
  %382 = select i1 %.not, i32 -1538563308, i32 347519367
  br label %.backedge

383:                                              ; preds = %6
  %384 = load i32, i32* @x.2, align 4
  %385 = load i32, i32* @y.3, align 4
  %386 = add i32 %384, -1
  %387 = mul i32 %386, %384
  %388 = and i32 %387, 1
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %385, 10
  %391 = or i1 %390, %389
  %392 = select i1 %391, i32 -2073059947, i32 -1299981239
  br label %.backedge

393:                                              ; preds = %6
  %394 = load i32, i32* @x.2, align 4
  %395 = load i32, i32* @y.3, align 4
  %396 = add i32 %394, -1
  %397 = mul i32 %396, %394
  %398 = and i32 %397, 1
  %399 = icmp eq i32 %398, 0
  %400 = icmp slt i32 %395, 10
  %401 = or i1 %400, %399
  %402 = select i1 %401, i32 217591637, i32 -1299981239
  br label %.backedge

403:                                              ; preds = %6
  br label %.backedge

404:                                              ; preds = %6
  %405 = load i32, i32* @x.2, align 4
  %406 = load i32, i32* @y.3, align 4
  %407 = add i32 %405, -1
  %408 = mul i32 %407, %405
  %409 = and i32 %408, 1
  %410 = icmp eq i32 %409, 0
  %411 = icmp slt i32 %406, 10
  %412 = or i1 %411, %410
  %413 = select i1 %412, i32 -1098108570, i32 1872570499
  br label %.backedge

414:                                              ; preds = %6
  %415 = load i32, i32* @m, align 4
  %416 = icmp sle i32 %.066, %415
  store i1 %416, i1* %1, align 1
  %417 = load i32, i32* @x.2, align 4
  %418 = load i32, i32* @y.3, align 4
  %419 = add i32 %417, -1
  %420 = mul i32 %419, %417
  %421 = and i32 %420, 1
  %422 = icmp eq i32 %421, 0
  %423 = icmp slt i32 %418, 10
  %424 = or i1 %423, %422
  %425 = select i1 %424, i32 952445331, i32 1872570499
  br label %.backedge

426:                                              ; preds = %6
  %.0..0..0.65 = load volatile i1, i1* %1, align 1
  %427 = select i1 %.0..0..0.65, i32 1283259357, i32 743812113
  br label %.backedge

428:                                              ; preds = %6
  %429 = sext i32 %.068 to i64
  %430 = sext i32 %.066 to i64
  %431 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ans, i64 0, i64 %429, i64 %430
  %432 = load i32, i32* %431, align 4
  tail call void @_Z5writeIiEvT_(i32 %432)
  %433 = tail call i32 @putchar(i32 32)
  br label %.backedge

434:                                              ; preds = %6
  %435 = add i32 %.066, 1
  br label %.backedge

436:                                              ; preds = %6
  %437 = load i32, i32* @x.2, align 4
  %438 = load i32, i32* @y.3, align 4
  %439 = add i32 %437, -1
  %440 = mul i32 %439, %437
  %441 = and i32 %440, 1
  %442 = icmp eq i32 %441, 0
  %443 = icmp slt i32 %438, 10
  %444 = or i1 %443, %442
  %445 = select i1 %444, i32 2071443549, i32 2045305230
  br label %.backedge

446:                                              ; preds = %6
  %447 = load i32, i32* @x.2, align 4
  %448 = load i32, i32* @y.3, align 4
  %449 = add i32 %447, -1
  %450 = mul i32 %449, %447
  %451 = and i32 %450, 1
  %452 = icmp eq i32 %451, 0
  %453 = icmp slt i32 %448, 10
  %454 = or i1 %453, %452
  %455 = select i1 %454, i32 -1731144526, i32 2045305230
  br label %.backedge

456:                                              ; preds = %6
  br label %.backedge

457:                                              ; preds = %6
  %458 = load i32, i32* @x.2, align 4
  %459 = load i32, i32* @y.3, align 4
  %460 = add i32 %458, -1
  %461 = mul i32 %460, %458
  %462 = and i32 %461, 1
  %463 = icmp eq i32 %462, 0
  %464 = icmp slt i32 %459, 10
  %465 = or i1 %464, %463
  %466 = select i1 %465, i32 -1527331915, i32 -703501346
  br label %.backedge

467:                                              ; preds = %6
  %468 = add i32 %.068, 1
  %putchar90 = tail call i32 @putchar(i32 10)
  %469 = load i32, i32* @x.2, align 4
  %470 = load i32, i32* @y.3, align 4
  %471 = add i32 %469, -1
  %472 = mul i32 %471, %469
  %473 = and i32 %472, 1
  %474 = icmp eq i32 %473, 0
  %475 = icmp slt i32 %470, 10
  %476 = or i1 %475, %474
  %477 = select i1 %476, i32 128642230, i32 -703501346
  br label %.backedge

478:                                              ; preds = %6
  br label %.backedge

479:                                              ; preds = %6
  ret i32 0

480:                                              ; preds = %6
  br label %.backedge

481:                                              ; preds = %6
  %482 = sext i32 %.088 to i64
  %483 = getelementptr inbounds [2005 x [2005 x i8]], [2005 x [2005 x i8]]* @s, i64 0, i64 %482, i64 1
  %484 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* nonnull %483)
  br label %.backedge

485:                                              ; preds = %6
  br label %.backedge

486:                                              ; preds = %6
  br label %.backedge

487:                                              ; preds = %6
  br label %.backedge

488:                                              ; preds = %6
  br label %.backedge

489:                                              ; preds = %6
  br label %.backedge

490:                                              ; preds = %6
  br label %.backedge

491:                                              ; preds = %6
  br label %.backedge

492:                                              ; preds = %6
  %493 = load i32, i32* @idn, align 4
  %494 = add i32 %493, 1
  %495 = sext i32 %.082 to i64
  %496 = sext i32 %.078 to i64
  %497 = getelementptr inbounds [2005 x [2005 x i32]], [2005 x [2005 x i32]]* @ans, i64 0, i64 %495, i64 %496
  store i32 %494, i32* %497, align 4
  br label %.backedge

498:                                              ; preds = %6
  br label %.backedge

499:                                              ; preds = %6
  br label %.backedge

500:                                              ; preds = %6
  br label %.backedge

501:                                              ; preds = %6
  br label %.backedge

502:                                              ; preds = %6
  %.neg = add i32 %.068, 1
  %putchar = tail call i32 @putchar(i32 10)
  br label %.backedge
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z4readIiJiiEEvRT_DpRT0_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1, i32* dereferenceable(4) %2) local_unnamed_addr #0 comdat {
  %4 = tail call i32 @_Z4readIiET_RS0_(i32* nonnull dereferenceable(4) %0)
  tail call void @_Z4readIiJiEEvRT_DpRT0_(i32* nonnull dereferenceable(4) %1, i32* nonnull dereferenceable(4) %2)
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z5writeIiEvT_(i32 %0) local_unnamed_addr #0 comdat {
  %2 = alloca i1, align 1
  %3 = alloca i32*, align 8
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = load i32, i32* @x.6, align 4
  %7 = load i32, i32* @y.7, align 4
  %8 = add i32 %6, -1
  %9 = mul i32 %8, %6
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %5, align 1
  %12 = icmp slt i32 %7, 10
  store i1 %12, i1* %4, align 1
  br label %13

13:                                               ; preds = %.backedge, %1
  %.0 = phi i32 [ -521604684, %1 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -521604684, label %14
    i32 160224867, label %17
    i32 -1208128379, label %30
    i32 1857049667, label %32
    i32 -305133125, label %36
    i32 495272124, label %40
    i32 -154391955, label %50
    i32 -1046505693, label %62
    i32 153550781, label %63
    i32 242502853, label %73
    i32 -125742027, label %87
    i32 -715309330, label %88
    i32 -1134162852, label %89
    i32 60915198, label %90
    i32 1236753529, label %93
  ]

.backedge:                                        ; preds = %13, %93, %90, %89, %87, %73, %63, %62, %50, %40, %36, %32, %30, %17, %14
  %.0.be = phi i32 [ %.0, %13 ], [ 242502853, %93 ], [ -154391955, %90 ], [ 160224867, %89 ], [ -715309330, %87 ], [ %86, %73 ], [ %72, %63 ], [ 153550781, %62 ], [ %61, %50 ], [ %49, %40 ], [ %39, %36 ], [ -715309330, %32 ], [ %31, %30 ], [ %29, %17 ], [ %16, %14 ]
  br label %13

14:                                               ; preds = %13
  %.0..0..0. = load volatile i1, i1* %5, align 1
  %.0..0..0.1 = load volatile i1, i1* %4, align 1
  %15 = or i1 %.0..0..0., %.0..0..0.1
  %16 = select i1 %15, i32 160224867, i32 -1134162852
  br label %.backedge

17:                                               ; preds = %13
  %18 = alloca i32, align 4
  store i32* %18, i32** %3, align 8
  %.0..0..0.2 = load volatile i32*, i32** %3, align 8
  store i32 %0, i32* %.0..0..0.2, align 4
  %.0..0..0.3 = load volatile i32*, i32** %3, align 8
  %19 = load i32, i32* %.0..0..0.3, align 4
  %20 = icmp slt i32 %19, 0
  store i1 %20, i1* %2, align 1
  %21 = load i32, i32* @x.6, align 4
  %22 = load i32, i32* @y.7, align 4
  %23 = add i32 %21, -1
  %24 = mul i32 %23, %21
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %27, %26
  %29 = select i1 %28, i32 -1208128379, i32 -1134162852
  br label %.backedge

30:                                               ; preds = %13
  %.0..0..0.10 = load volatile i1, i1* %2, align 1
  %31 = select i1 %.0..0..0.10, i32 1857049667, i32 -305133125
  br label %.backedge

32:                                               ; preds = %13
  %33 = call i32 @putchar(i32 45)
  %.0..0..0.4 = load volatile i32*, i32** %3, align 8
  %34 = load i32, i32* %.0..0..0.4, align 4
  %35 = sub i32 0, %34
  call void @_Z5writeIiEvT_(i32 %35)
  br label %.backedge

36:                                               ; preds = %13
  %.0..0..0.5 = load volatile i32*, i32** %3, align 8
  %37 = load i32, i32* %.0..0..0.5, align 4
  %38 = icmp sgt i32 %37, 9
  %39 = select i1 %38, i32 495272124, i32 153550781
  br label %.backedge

40:                                               ; preds = %13
  %41 = load i32, i32* @x.6, align 4
  %42 = load i32, i32* @y.7, align 4
  %43 = add i32 %41, -1
  %44 = mul i32 %43, %41
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %47, %46
  %49 = select i1 %48, i32 -154391955, i32 60915198
  br label %.backedge

50:                                               ; preds = %13
  %.0..0..0.6 = load volatile i32*, i32** %3, align 8
  %51 = load i32, i32* %.0..0..0.6, align 4
  %52 = sdiv i32 %51, 10
  call void @_Z5writeIiEvT_(i32 %52)
  %53 = load i32, i32* @x.6, align 4
  %54 = load i32, i32* @y.7, align 4
  %55 = add i32 %53, -1
  %56 = mul i32 %55, %53
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %54, 10
  %60 = or i1 %59, %58
  %61 = select i1 %60, i32 -1046505693, i32 60915198
  br label %.backedge

62:                                               ; preds = %13
  br label %.backedge

63:                                               ; preds = %13
  %64 = load i32, i32* @x.6, align 4
  %65 = load i32, i32* @y.7, align 4
  %66 = add i32 %64, -1
  %67 = mul i32 %66, %64
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %65, 10
  %71 = or i1 %70, %69
  %72 = select i1 %71, i32 242502853, i32 1236753529
  br label %.backedge

73:                                               ; preds = %13
  %.0..0..0.7 = load volatile i32*, i32** %3, align 8
  %74 = load i32, i32* %.0..0..0.7, align 4
  %75 = srem i32 %74, 10
  %76 = add nsw i32 %75, 48
  %77 = call i32 @putchar(i32 %76)
  %78 = load i32, i32* @x.6, align 4
  %79 = load i32, i32* @y.7, align 4
  %80 = add i32 %78, -1
  %81 = mul i32 %80, %78
  %82 = and i32 %81, 1
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %79, 10
  %85 = or i1 %84, %83
  %86 = select i1 %85, i32 -125742027, i32 1236753529
  br label %.backedge

87:                                               ; preds = %13
  br label %.backedge

88:                                               ; preds = %13
  ret void

89:                                               ; preds = %13
  br label %.backedge

90:                                               ; preds = %13
  %.0..0..0.8 = load volatile i32*, i32** %3, align 8
  %91 = load i32, i32* %.0..0..0.8, align 4
  %92 = sdiv i32 %91, 10
  call void @_Z5writeIiEvT_(i32 %92)
  br label %.backedge

93:                                               ; preds = %13
  %.0..0..0.9 = load volatile i32*, i32** %3, align 8
  %94 = load i32, i32* %.0..0..0.9, align 4
  %95 = srem i32 %94, 10
  %96 = add nsw i32 %95, 48
  %97 = call i32 @putchar(i32 %96)
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_Z4readIiET_RS0_(i32* dereferenceable(4) %0) local_unnamed_addr #0 comdat {
  %2 = alloca i1, align 1
  %3 = tail call i32 @getchar()
  %4 = trunc i32 %3 to i8
  store i32 0, i32* %0, align 4
  br label %5

5:                                                ; preds = %.backedge, %1
  %.017 = phi i8 [ %4, %1 ], [ %.017.be, %.backedge ]
  %.015 = phi i8 [ 0, %1 ], [ %.015.be, %.backedge ]
  %.0 = phi i32 [ -763403028, %1 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -763403028, label %6
    i32 -2048632910, label %16
    i32 557259876, label %27
    i32 2035031566, label %29
    i32 -798132365, label %36
    i32 -1341246570, label %37
    i32 -1181300245, label %40
    i32 110146502, label %48
    i32 856663273, label %51
    i32 1859466313, label %54
    i32 71855827, label %56
  ]

.backedge:                                        ; preds = %5, %56, %51, %48, %40, %37, %36, %29, %27, %16, %6
  %.017.be = phi i8 [ %.017, %5 ], [ %.017, %56 ], [ %.017, %51 ], [ %.017, %48 ], [ %47, %40 ], [ %.017, %37 ], [ %.017, %36 ], [ %35, %29 ], [ %.017, %27 ], [ %.017, %16 ], [ %.017, %6 ]
  %.015.be = phi i8 [ %.015, %5 ], [ %.015, %56 ], [ %.015, %51 ], [ %.015, %48 ], [ %.015, %40 ], [ %.015, %37 ], [ %.015, %36 ], [ %33, %29 ], [ %.015, %27 ], [ %.015, %16 ], [ %.015, %6 ]
  %.0.be = phi i32 [ %.0, %5 ], [ -2048632910, %56 ], [ 1859466313, %51 ], [ %50, %48 ], [ -1341246570, %40 ], [ %39, %37 ], [ -1341246570, %36 ], [ -763403028, %29 ], [ %28, %27 ], [ %26, %16 ], [ %15, %6 ]
  br label %5

6:                                                ; preds = %5
  %7 = load i32, i32* @x.8, align 4
  %8 = load i32, i32* @y.9, align 4
  %9 = add i32 %7, -1
  %10 = mul i32 %9, %7
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %13, %12
  %15 = select i1 %14, i32 -2048632910, i32 71855827
  br label %.backedge

16:                                               ; preds = %5
  %17 = sext i8 %.017 to i32
  %isdigittmp19 = add nsw i32 %17, -48
  %isdigit20 = icmp ugt i32 %isdigittmp19, 9
  store i1 %isdigit20, i1* %2, align 1
  %18 = load i32, i32* @x.8, align 4
  %19 = load i32, i32* @y.9, align 4
  %20 = add i32 %18, -1
  %21 = mul i32 %20, %18
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %19, 10
  %25 = or i1 %24, %23
  %26 = select i1 %25, i32 557259876, i32 71855827
  br label %.backedge

27:                                               ; preds = %5
  %.0..0..0.14 = load volatile i1, i1* %2, align 1
  %28 = select i1 %.0..0..0.14, i32 2035031566, i32 -798132365
  br label %.backedge

29:                                               ; preds = %5
  %30 = icmp eq i8 %.017, 45
  %31 = zext i1 %30 to i8
  %32 = and i8 %.015, 1
  %33 = or i8 %32, %31
  %34 = tail call i32 @getchar()
  %35 = trunc i32 %34 to i8
  br label %.backedge

36:                                               ; preds = %5
  br label %.backedge

37:                                               ; preds = %5
  %38 = sext i8 %.017 to i32
  %isdigittmp = add nsw i32 %38, -48
  %isdigit = icmp ult i32 %isdigittmp, 10
  %39 = select i1 %isdigit, i32 -1181300245, i32 110146502
  br label %.backedge

40:                                               ; preds = %5
  %41 = load i32, i32* %0, align 4
  %42 = mul i32 %41, 10
  %43 = xor i8 %.017, 48
  %44 = sext i8 %43 to i32
  %45 = add i32 %42, %44
  store i32 %45, i32* %0, align 4
  %46 = tail call i32 @getchar()
  %47 = trunc i32 %46 to i8
  br label %.backedge

48:                                               ; preds = %5
  %49 = and i8 %.015, 1
  %.not = icmp eq i8 %49, 0
  %50 = select i1 %.not, i32 1859466313, i32 856663273
  br label %.backedge

51:                                               ; preds = %5
  %52 = load i32, i32* %0, align 4
  %53 = sub i32 0, %52
  store i32 %53, i32* %0, align 4
  br label %.backedge

54:                                               ; preds = %5
  %55 = load i32, i32* %0, align 4
  ret i32 %55

56:                                               ; preds = %5
  br label %.backedge
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_Z4readIiJiEEvRT_DpRT0_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #0 comdat {
  %3 = tail call i32 @_Z4readIiET_RS0_(i32* nonnull dereferenceable(4) %0)
  %4 = tail call i32 @_Z4readIiET_RS0_(i32* nonnull dereferenceable(4) %1)
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @getchar() local_unnamed_addr #5

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s889174262.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
