; ModuleID = 'build_ollvm/programs/p02855/s597914956.ll'
source_filename = "Project_CodeNet_C++1400/p02855/s597914956.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@ans = local_unnamed_addr global [305 x [305 x i32]] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [2 x i8] c" \00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s597914956.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #5
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = tail call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %12 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %7)
  %13 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %12, i32* nonnull dereferenceable(4) %8)
  %14 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %13, i32* nonnull dereferenceable(4) %9)
  br label %15

15:                                               ; preds = %.backedge, %0
  %.097 = phi i32 [ 0, %0 ], [ %.097.be, %.backedge ]
  %.095 = phi i32 [ 0, %0 ], [ %.095.be, %.backedge ]
  %.093 = phi i32 [ undef, %0 ], [ %.093.be, %.backedge ]
  %.091 = phi i32 [ undef, %0 ], [ %.091.be, %.backedge ]
  %.089 = phi i32 [ undef, %0 ], [ %.089.be, %.backedge ]
  %.087 = phi i32 [ undef, %0 ], [ %.087.be, %.backedge ]
  %.085 = phi i32 [ undef, %0 ], [ %.085.be, %.backedge ]
  %.083 = phi i32 [ undef, %0 ], [ %.083.be, %.backedge ]
  %.081 = phi i32 [ undef, %0 ], [ %.081.be, %.backedge ]
  %.079 = phi i32 [ undef, %0 ], [ %.079.be, %.backedge ]
  %.077 = phi i32 [ undef, %0 ], [ %.077.be, %.backedge ]
  %.075 = phi i32 [ undef, %0 ], [ %.075.be, %.backedge ]
  %.0 = phi i32 [ -1851230476, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1851230476, label %16
    i32 -1507440894, label %20
    i32 -210181721, label %21
    i32 -1811226044, label %25
    i32 145018210, label %35
    i32 1926678412, label %48
    i32 1748832617, label %50
    i32 -1622154700, label %55
    i32 2034979654, label %56
    i32 -1920725050, label %58
    i32 -384970064, label %59
    i32 988649443, label %61
    i32 -771992313, label %62
    i32 -1295850895, label %66
    i32 899574689, label %67
    i32 -857684263, label %77
    i32 1398044356, label %89
    i32 222851993, label %91
    i32 1996486743, label %98
    i32 633909087, label %106
    i32 -364680590, label %107
    i32 1613762274, label %108
    i32 -144553195, label %118
    i32 654200785, label %130
    i32 23696248, label %131
    i32 -520803620, label %134
    i32 -33447714, label %141
    i32 -1895454382, label %149
    i32 2050517157, label %150
    i32 -1615763096, label %152
    i32 -822118875, label %162
    i32 238691439, label %172
    i32 -331920677, label %173
    i32 2069936580, label %175
    i32 -46562784, label %176
    i32 -1396750527, label %180
    i32 51116799, label %181
    i32 628717270, label %191
    i32 -20196428, label %203
    i32 -662810113, label %205
    i32 -1593424592, label %212
    i32 -1208344073, label %222
    i32 1611701039, label %239
    i32 -1813603275, label %240
    i32 51039105, label %241
    i32 1672401511, label %242
    i32 -1494586168, label %243
    i32 1676381761, label %245
    i32 899056561, label %255
    i32 1797491170, label %267
    i32 -585013956, label %268
    i32 2052005842, label %271
    i32 1000323196, label %272
    i32 -389147060, label %282
    i32 284393314, label %294
    i32 -1973835564, label %296
    i32 1517039258, label %306
    i32 -633053273, label %321
    i32 -1181101952, label %323
    i32 336582683, label %333
    i32 355218573, label %350
    i32 -36122171, label %351
    i32 -2092042837, label %352
    i32 -1715691527, label %354
    i32 342581225, label %355
    i32 1705515462, label %365
    i32 588155979, label %376
    i32 -1522942181, label %377
    i32 2130947685, label %387
    i32 -1158465132, label %397
    i32 1042823996, label %398
    i32 -522525254, label %408
    i32 -2013977115, label %420
    i32 309533314, label %422
    i32 1581258299, label %423
    i32 -1411367428, label %427
    i32 -1346174145, label %434
    i32 647971566, label %444
    i32 -636995218, label %455
    i32 1448551437, label %456
    i32 1991664743, label %458
    i32 -94434688, label %459
    i32 808845352, label %460
    i32 -1471328035, label %462
    i32 -1505521545, label %463
    i32 -1387194044, label %466
    i32 -379516678, label %467
    i32 1640822446, label %468
    i32 2016997742, label %476
    i32 -71329126, label %479
    i32 -717904967, label %480
    i32 -653602264, label %481
    i32 -2146836985, label %489
    i32 -781597968, label %490
    i32 1000803002, label %491
    i32 2076264389, label %492
  ]

.backedge:                                        ; preds = %15, %492, %491, %490, %489, %481, %480, %479, %476, %468, %467, %466, %463, %462, %460, %458, %456, %455, %444, %434, %427, %423, %422, %420, %408, %398, %397, %387, %377, %376, %365, %355, %354, %352, %351, %350, %333, %323, %321, %306, %296, %294, %282, %272, %271, %268, %267, %255, %245, %243, %242, %241, %240, %239, %222, %212, %205, %203, %191, %181, %180, %176, %175, %173, %172, %162, %152, %150, %149, %141, %134, %131, %130, %118, %108, %107, %106, %98, %91, %89, %77, %67, %66, %62, %61, %59, %58, %56, %55, %50, %48, %35, %25, %21, %20, %16
  %.097.be = phi i32 [ %.097, %15 ], [ %.097, %492 ], [ %.097, %491 ], [ %.097, %490 ], [ %.097, %489 ], [ %.097, %481 ], [ %.097, %480 ], [ %.097, %479 ], [ %.097, %476 ], [ %.097, %468 ], [ %.097, %467 ], [ %.097, %466 ], [ %.097, %463 ], [ %.097, %462 ], [ %.097, %460 ], [ %.097, %458 ], [ %.097, %456 ], [ %.097, %455 ], [ %.097, %444 ], [ %.097, %434 ], [ %.097, %427 ], [ %.097, %423 ], [ %.097, %422 ], [ %.097, %420 ], [ %.097, %408 ], [ %.097, %398 ], [ %.097, %397 ], [ %.097, %387 ], [ %.097, %377 ], [ %.097, %376 ], [ %.097, %365 ], [ %.097, %355 ], [ %.097, %354 ], [ %.097, %352 ], [ %.097, %351 ], [ %.097, %350 ], [ %.097, %333 ], [ %.097, %323 ], [ %.097, %321 ], [ %.097, %306 ], [ %.097, %296 ], [ %.097, %294 ], [ %.097, %282 ], [ %.097, %272 ], [ %.097, %271 ], [ %.097, %268 ], [ %.097, %267 ], [ %.097, %255 ], [ %.097, %245 ], [ %.097, %243 ], [ %.097, %242 ], [ %.097, %241 ], [ %.097, %240 ], [ %.097, %239 ], [ %.097, %222 ], [ %.097, %212 ], [ %.097, %205 ], [ %.097, %203 ], [ %.097, %191 ], [ %.097, %181 ], [ %.097, %180 ], [ %.097, %176 ], [ %.097, %175 ], [ %.097, %173 ], [ %.097, %172 ], [ %.097, %162 ], [ %.097, %152 ], [ %.097, %150 ], [ %.097, %149 ], [ %.097, %141 ], [ %.097, %134 ], [ %.097, %131 ], [ %.097, %130 ], [ %.097, %118 ], [ %.097, %108 ], [ %.097, %107 ], [ %.097, %106 ], [ %.097, %98 ], [ %.097, %91 ], [ %.097, %89 ], [ %.097, %77 ], [ %.097, %67 ], [ %.097, %66 ], [ %.097, %62 ], [ %.097, %61 ], [ %.097, %59 ], [ %.097, %58 ], [ %.097, %56 ], [ %.097, %55 ], [ %51, %50 ], [ %.097, %48 ], [ %.097, %35 ], [ %.097, %25 ], [ %.097, %21 ], [ %.097, %20 ], [ %.097, %16 ]
  %.095.be = phi i32 [ %.095, %15 ], [ %.095, %492 ], [ %.095, %491 ], [ %.095, %490 ], [ %.095, %489 ], [ %.095, %481 ], [ %.095, %480 ], [ %.095, %479 ], [ %.095, %476 ], [ %.095, %468 ], [ %.095, %467 ], [ %.095, %466 ], [ %.095, %463 ], [ %.095, %462 ], [ %.095, %460 ], [ %.095, %458 ], [ %.095, %456 ], [ %.095, %455 ], [ %.095, %444 ], [ %.095, %434 ], [ %.095, %427 ], [ %.095, %423 ], [ %.095, %422 ], [ %.095, %420 ], [ %.095, %408 ], [ %.095, %398 ], [ %.095, %397 ], [ %.095, %387 ], [ %.095, %377 ], [ %.095, %376 ], [ %.095, %365 ], [ %.095, %355 ], [ %.095, %354 ], [ %.095, %352 ], [ %.095, %351 ], [ %.095, %350 ], [ %.095, %333 ], [ %.095, %323 ], [ %.095, %321 ], [ %.095, %306 ], [ %.095, %296 ], [ %.095, %294 ], [ %.095, %282 ], [ %.095, %272 ], [ %.095, %271 ], [ %.095, %268 ], [ %.095, %267 ], [ %.095, %255 ], [ %.095, %245 ], [ %.095, %243 ], [ %.095, %242 ], [ %.095, %241 ], [ %.095, %240 ], [ %.095, %239 ], [ %.095, %222 ], [ %.095, %212 ], [ %.095, %205 ], [ %.095, %203 ], [ %.095, %191 ], [ %.095, %181 ], [ %.095, %180 ], [ %.095, %176 ], [ %.095, %175 ], [ %.095, %173 ], [ %.095, %172 ], [ %.095, %162 ], [ %.095, %152 ], [ %.095, %150 ], [ %.095, %149 ], [ %.095, %141 ], [ %.095, %134 ], [ %.095, %131 ], [ %.095, %130 ], [ %.095, %118 ], [ %.095, %108 ], [ %.095, %107 ], [ %.095, %106 ], [ %.095, %98 ], [ %.095, %91 ], [ %.095, %89 ], [ %.095, %77 ], [ %.095, %67 ], [ %.095, %66 ], [ %.095, %62 ], [ %.095, %61 ], [ %60, %59 ], [ %.095, %58 ], [ %.095, %56 ], [ %.095, %55 ], [ %.095, %50 ], [ %.095, %48 ], [ %.095, %35 ], [ %.095, %25 ], [ %.095, %21 ], [ %.095, %20 ], [ %.095, %16 ]
  %.093.be = phi i32 [ %.093, %15 ], [ %.093, %492 ], [ %.093, %491 ], [ %.093, %490 ], [ %.093, %489 ], [ %.093, %481 ], [ %.093, %480 ], [ %.093, %479 ], [ %.093, %476 ], [ %.093, %468 ], [ %.093, %467 ], [ %.093, %466 ], [ %.093, %463 ], [ %.093, %462 ], [ %.093, %460 ], [ %.093, %458 ], [ %.093, %456 ], [ %.093, %455 ], [ %.093, %444 ], [ %.093, %434 ], [ %.093, %427 ], [ %.093, %423 ], [ %.093, %422 ], [ %.093, %420 ], [ %.093, %408 ], [ %.093, %398 ], [ %.093, %397 ], [ %.093, %387 ], [ %.093, %377 ], [ %.093, %376 ], [ %.093, %365 ], [ %.093, %355 ], [ %.093, %354 ], [ %.093, %352 ], [ %.093, %351 ], [ %.093, %350 ], [ %.093, %333 ], [ %.093, %323 ], [ %.093, %321 ], [ %.093, %306 ], [ %.093, %296 ], [ %.093, %294 ], [ %.093, %282 ], [ %.093, %272 ], [ %.093, %271 ], [ %.093, %268 ], [ %.093, %267 ], [ %.093, %255 ], [ %.093, %245 ], [ %.093, %243 ], [ %.093, %242 ], [ %.093, %241 ], [ %.093, %240 ], [ %.093, %239 ], [ %.093, %222 ], [ %.093, %212 ], [ %.093, %205 ], [ %.093, %203 ], [ %.093, %191 ], [ %.093, %181 ], [ %.093, %180 ], [ %.093, %176 ], [ %.093, %175 ], [ %.093, %173 ], [ %.093, %172 ], [ %.093, %162 ], [ %.093, %152 ], [ %.093, %150 ], [ %.093, %149 ], [ %.093, %141 ], [ %.093, %134 ], [ %.093, %131 ], [ %.093, %130 ], [ %.093, %118 ], [ %.093, %108 ], [ %.093, %107 ], [ %.093, %106 ], [ %.093, %98 ], [ %.093, %91 ], [ %.093, %89 ], [ %.093, %77 ], [ %.093, %67 ], [ %.093, %66 ], [ %.093, %62 ], [ %.093, %61 ], [ %.093, %59 ], [ %.093, %58 ], [ %57, %56 ], [ %.093, %55 ], [ %.093, %50 ], [ %.093, %48 ], [ %.093, %35 ], [ %.093, %25 ], [ %.093, %21 ], [ 0, %20 ], [ %.093, %16 ]
  %.091.be = phi i32 [ %.091, %15 ], [ %.091, %492 ], [ %.091, %491 ], [ %.091, %490 ], [ %.091, %489 ], [ %.091, %481 ], [ %.091, %480 ], [ %.091, %479 ], [ %.091, %476 ], [ %.091, %468 ], [ %.091, %467 ], [ %.091, %466 ], [ %.091, %463 ], [ %.091, %462 ], [ %.091, %460 ], [ %.091, %458 ], [ %.091, %456 ], [ %.091, %455 ], [ %.091, %444 ], [ %.091, %434 ], [ %.091, %427 ], [ %.091, %423 ], [ %.091, %422 ], [ %.091, %420 ], [ %.091, %408 ], [ %.091, %398 ], [ %.091, %397 ], [ %.091, %387 ], [ %.091, %377 ], [ %.091, %376 ], [ %.091, %365 ], [ %.091, %355 ], [ %.091, %354 ], [ %.091, %352 ], [ %.091, %351 ], [ %.091, %350 ], [ %.091, %333 ], [ %.091, %323 ], [ %.091, %321 ], [ %.091, %306 ], [ %.091, %296 ], [ %.091, %294 ], [ %.091, %282 ], [ %.091, %272 ], [ %.091, %271 ], [ %.091, %268 ], [ %.091, %267 ], [ %.091, %255 ], [ %.091, %245 ], [ %.091, %243 ], [ %.091, %242 ], [ %.091, %241 ], [ %.091, %240 ], [ %.091, %239 ], [ %.091, %222 ], [ %.091, %212 ], [ %.091, %205 ], [ %.091, %203 ], [ %.091, %191 ], [ %.091, %181 ], [ %.091, %180 ], [ %.091, %176 ], [ %.091, %175 ], [ %174, %173 ], [ %.091, %172 ], [ %.091, %162 ], [ %.091, %152 ], [ %.091, %150 ], [ %.091, %149 ], [ %.091, %141 ], [ %.091, %134 ], [ %.091, %131 ], [ %.091, %130 ], [ %.091, %118 ], [ %.091, %108 ], [ %.091, %107 ], [ %.091, %106 ], [ %.091, %98 ], [ %.091, %91 ], [ %.091, %89 ], [ %.091, %77 ], [ %.091, %67 ], [ %.091, %66 ], [ %.091, %62 ], [ 0, %61 ], [ %.091, %59 ], [ %.091, %58 ], [ %.091, %56 ], [ %.091, %55 ], [ %.091, %50 ], [ %.091, %48 ], [ %.091, %35 ], [ %.091, %25 ], [ %.091, %21 ], [ %.091, %20 ], [ %.091, %16 ]
  %.089.be = phi i32 [ %.089, %15 ], [ %.089, %492 ], [ %.089, %491 ], [ %.089, %490 ], [ %.089, %489 ], [ %.089, %481 ], [ %.089, %480 ], [ %.089, %479 ], [ %.089, %476 ], [ %.089, %468 ], [ %.089, %467 ], [ %.089, %466 ], [ %.089, %463 ], [ %.089, %462 ], [ %.089, %460 ], [ %.089, %458 ], [ %.089, %456 ], [ %.089, %455 ], [ %.089, %444 ], [ %.089, %434 ], [ %.089, %427 ], [ %.089, %423 ], [ %.089, %422 ], [ %.089, %420 ], [ %.089, %408 ], [ %.089, %398 ], [ %.089, %397 ], [ %.089, %387 ], [ %.089, %377 ], [ %.089, %376 ], [ %.089, %365 ], [ %.089, %355 ], [ %.089, %354 ], [ %.089, %352 ], [ %.089, %351 ], [ %.089, %350 ], [ %.089, %333 ], [ %.089, %323 ], [ %.089, %321 ], [ %.089, %306 ], [ %.089, %296 ], [ %.089, %294 ], [ %.089, %282 ], [ %.089, %272 ], [ %.089, %271 ], [ %.089, %268 ], [ %.089, %267 ], [ %.089, %255 ], [ %.089, %245 ], [ %.089, %243 ], [ %.089, %242 ], [ %.089, %241 ], [ %.089, %240 ], [ %.089, %239 ], [ %.089, %222 ], [ %.089, %212 ], [ %.089, %205 ], [ %.089, %203 ], [ %.089, %191 ], [ %.089, %181 ], [ %.089, %180 ], [ %.089, %176 ], [ %.089, %175 ], [ %.089, %173 ], [ %.089, %172 ], [ %.089, %162 ], [ %.089, %152 ], [ %.089, %150 ], [ %.089, %149 ], [ %.089, %141 ], [ %.089, %134 ], [ %.089, %131 ], [ %.089, %130 ], [ %.089, %118 ], [ %.089, %108 ], [ %.neg101, %107 ], [ %.089, %106 ], [ %.089, %98 ], [ %.089, %91 ], [ %.089, %89 ], [ %.089, %77 ], [ %.089, %67 ], [ 1, %66 ], [ %.089, %62 ], [ %.089, %61 ], [ %.089, %59 ], [ %.089, %58 ], [ %.089, %56 ], [ %.089, %55 ], [ %.089, %50 ], [ %.089, %48 ], [ %.089, %35 ], [ %.089, %25 ], [ %.089, %21 ], [ %.089, %20 ], [ %.089, %16 ]
  %.087.be = phi i32 [ %.087, %15 ], [ %.087, %492 ], [ %.087, %491 ], [ %.087, %490 ], [ %.087, %489 ], [ %.087, %481 ], [ %.087, %480 ], [ %.087, %479 ], [ %.087, %476 ], [ %.087, %468 ], [ %.087, %467 ], [ %.087, %466 ], [ %465, %463 ], [ %.087, %462 ], [ %.087, %460 ], [ %.087, %458 ], [ %.087, %456 ], [ %.087, %455 ], [ %.087, %444 ], [ %.087, %434 ], [ %.087, %427 ], [ %.087, %423 ], [ %.087, %422 ], [ %.087, %420 ], [ %.087, %408 ], [ %.087, %398 ], [ %.087, %397 ], [ %.087, %387 ], [ %.087, %377 ], [ %.087, %376 ], [ %.087, %365 ], [ %.087, %355 ], [ %.087, %354 ], [ %.087, %352 ], [ %.087, %351 ], [ %.087, %350 ], [ %.087, %333 ], [ %.087, %323 ], [ %.087, %321 ], [ %.087, %306 ], [ %.087, %296 ], [ %.087, %294 ], [ %.087, %282 ], [ %.087, %272 ], [ %.087, %271 ], [ %.087, %268 ], [ %.087, %267 ], [ %.087, %255 ], [ %.087, %245 ], [ %.087, %243 ], [ %.087, %242 ], [ %.087, %241 ], [ %.087, %240 ], [ %.087, %239 ], [ %.087, %222 ], [ %.087, %212 ], [ %.087, %205 ], [ %.087, %203 ], [ %.087, %191 ], [ %.087, %181 ], [ %.087, %180 ], [ %.087, %176 ], [ %.087, %175 ], [ %.087, %173 ], [ %.087, %172 ], [ %.087, %162 ], [ %.087, %152 ], [ %151, %150 ], [ %.087, %149 ], [ %.087, %141 ], [ %.087, %134 ], [ %.087, %131 ], [ %.087, %130 ], [ %120, %118 ], [ %.087, %108 ], [ %.087, %107 ], [ %.087, %106 ], [ %.087, %98 ], [ %.087, %91 ], [ %.087, %89 ], [ %.087, %77 ], [ %.087, %67 ], [ %.087, %66 ], [ %.087, %62 ], [ %.087, %61 ], [ %.087, %59 ], [ %.087, %58 ], [ %.087, %56 ], [ %.087, %55 ], [ %.087, %50 ], [ %.087, %48 ], [ %.087, %35 ], [ %.087, %25 ], [ %.087, %21 ], [ %.087, %20 ], [ %.087, %16 ]
  %.085.be = phi i32 [ %.085, %15 ], [ %.085, %492 ], [ %.085, %491 ], [ %.085, %490 ], [ %.085, %489 ], [ %.085, %481 ], [ %.085, %480 ], [ %.085, %479 ], [ %.085, %476 ], [ %.085, %468 ], [ %.085, %467 ], [ %.085, %466 ], [ %.085, %463 ], [ %.085, %462 ], [ %.085, %460 ], [ %.085, %458 ], [ %.085, %456 ], [ %.085, %455 ], [ %.085, %444 ], [ %.085, %434 ], [ %.085, %427 ], [ %.085, %423 ], [ %.085, %422 ], [ %.085, %420 ], [ %.085, %408 ], [ %.085, %398 ], [ %.085, %397 ], [ %.085, %387 ], [ %.085, %377 ], [ %.085, %376 ], [ %.085, %365 ], [ %.085, %355 ], [ %.085, %354 ], [ %.085, %352 ], [ %.085, %351 ], [ %.085, %350 ], [ %.085, %333 ], [ %.085, %323 ], [ %.085, %321 ], [ %.085, %306 ], [ %.085, %296 ], [ %.085, %294 ], [ %.085, %282 ], [ %.085, %272 ], [ %.085, %271 ], [ %.085, %268 ], [ %.085, %267 ], [ %.085, %255 ], [ %.085, %245 ], [ %244, %243 ], [ %.085, %242 ], [ %.085, %241 ], [ %.085, %240 ], [ %.085, %239 ], [ %.085, %222 ], [ %.085, %212 ], [ %.085, %205 ], [ %.085, %203 ], [ %.085, %191 ], [ %.085, %181 ], [ %.085, %180 ], [ %.085, %176 ], [ 1, %175 ], [ %.085, %173 ], [ %.085, %172 ], [ %.085, %162 ], [ %.085, %152 ], [ %.085, %150 ], [ %.085, %149 ], [ %.085, %141 ], [ %.085, %134 ], [ %.085, %131 ], [ %.085, %130 ], [ %.085, %118 ], [ %.085, %108 ], [ %.085, %107 ], [ %.085, %106 ], [ %.085, %98 ], [ %.085, %91 ], [ %.085, %89 ], [ %.085, %77 ], [ %.085, %67 ], [ %.085, %66 ], [ %.085, %62 ], [ %.085, %61 ], [ %.085, %59 ], [ %.085, %58 ], [ %.085, %56 ], [ %.085, %55 ], [ %.085, %50 ], [ %.085, %48 ], [ %.085, %35 ], [ %.085, %25 ], [ %.085, %21 ], [ %.085, %20 ], [ %.085, %16 ]
  %.083.be = phi i32 [ %.083, %15 ], [ %.083, %492 ], [ %.083, %491 ], [ %.083, %490 ], [ %.083, %489 ], [ %.083, %481 ], [ %.083, %480 ], [ %.083, %479 ], [ %.083, %476 ], [ %.083, %468 ], [ %.083, %467 ], [ %.083, %466 ], [ %.083, %463 ], [ %.083, %462 ], [ %.083, %460 ], [ %.083, %458 ], [ %.083, %456 ], [ %.083, %455 ], [ %.083, %444 ], [ %.083, %434 ], [ %.083, %427 ], [ %.083, %423 ], [ %.083, %422 ], [ %.083, %420 ], [ %.083, %408 ], [ %.083, %398 ], [ %.083, %397 ], [ %.083, %387 ], [ %.083, %377 ], [ %.083, %376 ], [ %.083, %365 ], [ %.083, %355 ], [ %.083, %354 ], [ %.083, %352 ], [ %.083, %351 ], [ %.083, %350 ], [ %.083, %333 ], [ %.083, %323 ], [ %.083, %321 ], [ %.083, %306 ], [ %.083, %296 ], [ %.083, %294 ], [ %.083, %282 ], [ %.083, %272 ], [ %.083, %271 ], [ %.083, %268 ], [ %.083, %267 ], [ %.083, %255 ], [ %.083, %245 ], [ %.083, %243 ], [ %.083, %242 ], [ %.neg100, %241 ], [ %.083, %240 ], [ %.083, %239 ], [ %.083, %222 ], [ %.083, %212 ], [ %.083, %205 ], [ %.083, %203 ], [ %.083, %191 ], [ %.083, %181 ], [ 0, %180 ], [ %.083, %176 ], [ %.083, %175 ], [ %.083, %173 ], [ %.083, %172 ], [ %.083, %162 ], [ %.083, %152 ], [ %.083, %150 ], [ %.083, %149 ], [ %.083, %141 ], [ %.083, %134 ], [ %.083, %131 ], [ %.083, %130 ], [ %.083, %118 ], [ %.083, %108 ], [ %.083, %107 ], [ %.083, %106 ], [ %.083, %98 ], [ %.083, %91 ], [ %.083, %89 ], [ %.083, %77 ], [ %.083, %67 ], [ %.083, %66 ], [ %.083, %62 ], [ %.083, %61 ], [ %.083, %59 ], [ %.083, %58 ], [ %.083, %56 ], [ %.083, %55 ], [ %.083, %50 ], [ %.083, %48 ], [ %.083, %35 ], [ %.083, %25 ], [ %.083, %21 ], [ %.083, %20 ], [ %.083, %16 ]
  %.081.be = phi i32 [ %.081, %15 ], [ %.081, %492 ], [ %.081, %491 ], [ %.081, %490 ], [ %.neg, %489 ], [ %.081, %481 ], [ %.081, %480 ], [ %.081, %479 ], [ %478, %476 ], [ %.081, %468 ], [ %.081, %467 ], [ %.081, %466 ], [ %.081, %463 ], [ %.081, %462 ], [ %.081, %460 ], [ %.081, %458 ], [ %.081, %456 ], [ %.081, %455 ], [ %.081, %444 ], [ %.081, %434 ], [ %.081, %427 ], [ %.081, %423 ], [ %.081, %422 ], [ %.081, %420 ], [ %.081, %408 ], [ %.081, %398 ], [ %.081, %397 ], [ %.081, %387 ], [ %.081, %377 ], [ %.081, %376 ], [ %366, %365 ], [ %.081, %355 ], [ %.081, %354 ], [ %.081, %352 ], [ %.081, %351 ], [ %.081, %350 ], [ %.081, %333 ], [ %.081, %323 ], [ %.081, %321 ], [ %.081, %306 ], [ %.081, %296 ], [ %.081, %294 ], [ %.081, %282 ], [ %.081, %272 ], [ %.081, %271 ], [ %.081, %268 ], [ %.081, %267 ], [ %257, %255 ], [ %.081, %245 ], [ %.081, %243 ], [ %.081, %242 ], [ %.081, %241 ], [ %.081, %240 ], [ %.081, %239 ], [ %.081, %222 ], [ %.081, %212 ], [ %.081, %205 ], [ %.081, %203 ], [ %.081, %191 ], [ %.081, %181 ], [ %.081, %180 ], [ %.081, %176 ], [ %.081, %175 ], [ %.081, %173 ], [ %.081, %172 ], [ %.081, %162 ], [ %.081, %152 ], [ %.081, %150 ], [ %.081, %149 ], [ %.081, %141 ], [ %.081, %134 ], [ %.081, %131 ], [ %.081, %130 ], [ %.081, %118 ], [ %.081, %108 ], [ %.081, %107 ], [ %.081, %106 ], [ %.081, %98 ], [ %.081, %91 ], [ %.081, %89 ], [ %.081, %77 ], [ %.081, %67 ], [ %.081, %66 ], [ %.081, %62 ], [ %.081, %61 ], [ %.081, %59 ], [ %.081, %58 ], [ %.081, %56 ], [ %.081, %55 ], [ %.081, %50 ], [ %.081, %48 ], [ %.081, %35 ], [ %.081, %25 ], [ %.081, %21 ], [ %.081, %20 ], [ %.081, %16 ]
  %.079.be = phi i32 [ %.079, %15 ], [ %.079, %492 ], [ %.079, %491 ], [ %.079, %490 ], [ %.079, %489 ], [ %.079, %481 ], [ %.079, %480 ], [ %.079, %479 ], [ %.079, %476 ], [ %.079, %468 ], [ %.079, %467 ], [ %.079, %466 ], [ %.079, %463 ], [ %.079, %462 ], [ %.079, %460 ], [ %.079, %458 ], [ %.079, %456 ], [ %.079, %455 ], [ %.079, %444 ], [ %.079, %434 ], [ %.079, %427 ], [ %.079, %423 ], [ %.079, %422 ], [ %.079, %420 ], [ %.079, %408 ], [ %.079, %398 ], [ %.079, %397 ], [ %.079, %387 ], [ %.079, %377 ], [ %.079, %376 ], [ %.079, %365 ], [ %.079, %355 ], [ %.079, %354 ], [ %353, %352 ], [ %.079, %351 ], [ %.079, %350 ], [ %.079, %333 ], [ %.079, %323 ], [ %.079, %321 ], [ %.079, %306 ], [ %.079, %296 ], [ %.079, %294 ], [ %.079, %282 ], [ %.079, %272 ], [ 0, %271 ], [ %.079, %268 ], [ %.079, %267 ], [ %.079, %255 ], [ %.079, %245 ], [ %.079, %243 ], [ %.079, %242 ], [ %.079, %241 ], [ %.079, %240 ], [ %.079, %239 ], [ %.079, %222 ], [ %.079, %212 ], [ %.079, %205 ], [ %.079, %203 ], [ %.079, %191 ], [ %.079, %181 ], [ %.079, %180 ], [ %.079, %176 ], [ %.079, %175 ], [ %.079, %173 ], [ %.079, %172 ], [ %.079, %162 ], [ %.079, %152 ], [ %.079, %150 ], [ %.079, %149 ], [ %.079, %141 ], [ %.079, %134 ], [ %.079, %131 ], [ %.079, %130 ], [ %.079, %118 ], [ %.079, %108 ], [ %.079, %107 ], [ %.079, %106 ], [ %.079, %98 ], [ %.079, %91 ], [ %.079, %89 ], [ %.079, %77 ], [ %.079, %67 ], [ %.079, %66 ], [ %.079, %62 ], [ %.079, %61 ], [ %.079, %59 ], [ %.079, %58 ], [ %.079, %56 ], [ %.079, %55 ], [ %.079, %50 ], [ %.079, %48 ], [ %.079, %35 ], [ %.079, %25 ], [ %.079, %21 ], [ %.079, %20 ], [ %.079, %16 ]
  %.077.be = phi i32 [ %.077, %15 ], [ %.077, %492 ], [ %.077, %491 ], [ 0, %490 ], [ %.077, %489 ], [ %.077, %481 ], [ %.077, %480 ], [ %.077, %479 ], [ %.077, %476 ], [ %.077, %468 ], [ %.077, %467 ], [ %.077, %466 ], [ %.077, %463 ], [ %.077, %462 ], [ %.077, %460 ], [ %.neg99, %458 ], [ %.077, %456 ], [ %.077, %455 ], [ %.077, %444 ], [ %.077, %434 ], [ %.077, %427 ], [ %.077, %423 ], [ %.077, %422 ], [ %.077, %420 ], [ %.077, %408 ], [ %.077, %398 ], [ %.077, %397 ], [ 0, %387 ], [ %.077, %377 ], [ %.077, %376 ], [ %.077, %365 ], [ %.077, %355 ], [ %.077, %354 ], [ %.077, %352 ], [ %.077, %351 ], [ %.077, %350 ], [ %.077, %333 ], [ %.077, %323 ], [ %.077, %321 ], [ %.077, %306 ], [ %.077, %296 ], [ %.077, %294 ], [ %.077, %282 ], [ %.077, %272 ], [ %.077, %271 ], [ %.077, %268 ], [ %.077, %267 ], [ %.077, %255 ], [ %.077, %245 ], [ %.077, %243 ], [ %.077, %242 ], [ %.077, %241 ], [ %.077, %240 ], [ %.077, %239 ], [ %.077, %222 ], [ %.077, %212 ], [ %.077, %205 ], [ %.077, %203 ], [ %.077, %191 ], [ %.077, %181 ], [ %.077, %180 ], [ %.077, %176 ], [ %.077, %175 ], [ %.077, %173 ], [ %.077, %172 ], [ %.077, %162 ], [ %.077, %152 ], [ %.077, %150 ], [ %.077, %149 ], [ %.077, %141 ], [ %.077, %134 ], [ %.077, %131 ], [ %.077, %130 ], [ %.077, %118 ], [ %.077, %108 ], [ %.077, %107 ], [ %.077, %106 ], [ %.077, %98 ], [ %.077, %91 ], [ %.077, %89 ], [ %.077, %77 ], [ %.077, %67 ], [ %.077, %66 ], [ %.077, %62 ], [ %.077, %61 ], [ %.077, %59 ], [ %.077, %58 ], [ %.077, %56 ], [ %.077, %55 ], [ %.077, %50 ], [ %.077, %48 ], [ %.077, %35 ], [ %.077, %25 ], [ %.077, %21 ], [ %.077, %20 ], [ %.077, %16 ]
  %.075.be = phi i32 [ %.075, %15 ], [ %493, %492 ], [ %.075, %491 ], [ %.075, %490 ], [ %.075, %489 ], [ %.075, %481 ], [ %.075, %480 ], [ %.075, %479 ], [ %.075, %476 ], [ %.075, %468 ], [ %.075, %467 ], [ %.075, %466 ], [ %.075, %463 ], [ %.075, %462 ], [ %.075, %460 ], [ %.075, %458 ], [ %.075, %456 ], [ %.075, %455 ], [ %445, %444 ], [ %.075, %434 ], [ %.075, %427 ], [ %.075, %423 ], [ 0, %422 ], [ %.075, %420 ], [ %.075, %408 ], [ %.075, %398 ], [ %.075, %397 ], [ %.075, %387 ], [ %.075, %377 ], [ %.075, %376 ], [ %.075, %365 ], [ %.075, %355 ], [ %.075, %354 ], [ %.075, %352 ], [ %.075, %351 ], [ %.075, %350 ], [ %.075, %333 ], [ %.075, %323 ], [ %.075, %321 ], [ %.075, %306 ], [ %.075, %296 ], [ %.075, %294 ], [ %.075, %282 ], [ %.075, %272 ], [ %.075, %271 ], [ %.075, %268 ], [ %.075, %267 ], [ %.075, %255 ], [ %.075, %245 ], [ %.075, %243 ], [ %.075, %242 ], [ %.075, %241 ], [ %.075, %240 ], [ %.075, %239 ], [ %.075, %222 ], [ %.075, %212 ], [ %.075, %205 ], [ %.075, %203 ], [ %.075, %191 ], [ %.075, %181 ], [ %.075, %180 ], [ %.075, %176 ], [ %.075, %175 ], [ %.075, %173 ], [ %.075, %172 ], [ %.075, %162 ], [ %.075, %152 ], [ %.075, %150 ], [ %.075, %149 ], [ %.075, %141 ], [ %.075, %134 ], [ %.075, %131 ], [ %.075, %130 ], [ %.075, %118 ], [ %.075, %108 ], [ %.075, %107 ], [ %.075, %106 ], [ %.075, %98 ], [ %.075, %91 ], [ %.075, %89 ], [ %.075, %77 ], [ %.075, %67 ], [ %.075, %66 ], [ %.075, %62 ], [ %.075, %61 ], [ %.075, %59 ], [ %.075, %58 ], [ %.075, %56 ], [ %.075, %55 ], [ %.075, %50 ], [ %.075, %48 ], [ %.075, %35 ], [ %.075, %25 ], [ %.075, %21 ], [ %.075, %20 ], [ %.075, %16 ]
  %.0.be = phi i32 [ %.0, %15 ], [ 647971566, %492 ], [ -522525254, %491 ], [ 2130947685, %490 ], [ 1705515462, %489 ], [ 336582683, %481 ], [ 1517039258, %480 ], [ -389147060, %479 ], [ 899056561, %476 ], [ -1208344073, %468 ], [ 628717270, %467 ], [ -822118875, %466 ], [ -144553195, %463 ], [ -857684263, %462 ], [ 145018210, %460 ], [ 1042823996, %458 ], [ 1991664743, %456 ], [ 1581258299, %455 ], [ %454, %444 ], [ %443, %434 ], [ -1346174145, %427 ], [ %426, %423 ], [ 1581258299, %422 ], [ %421, %420 ], [ %419, %408 ], [ %407, %398 ], [ 1042823996, %397 ], [ %396, %387 ], [ %386, %377 ], [ -585013956, %376 ], [ %375, %365 ], [ %364, %355 ], [ 342581225, %354 ], [ 1000323196, %352 ], [ -2092042837, %351 ], [ -36122171, %350 ], [ %349, %333 ], [ %332, %323 ], [ %322, %321 ], [ %320, %306 ], [ %305, %296 ], [ %295, %294 ], [ %293, %282 ], [ %281, %272 ], [ 1000323196, %271 ], [ %270, %268 ], [ -585013956, %267 ], [ %266, %255 ], [ %254, %245 ], [ -46562784, %243 ], [ -1494586168, %242 ], [ 51116799, %241 ], [ 51039105, %240 ], [ -1813603275, %239 ], [ %238, %222 ], [ %221, %212 ], [ %211, %205 ], [ %204, %203 ], [ %202, %191 ], [ %190, %181 ], [ 51116799, %180 ], [ %179, %176 ], [ -46562784, %175 ], [ -771992313, %173 ], [ -331920677, %172 ], [ %171, %162 ], [ %161, %152 ], [ 23696248, %150 ], [ 2050517157, %149 ], [ -1895454382, %141 ], [ %140, %134 ], [ %133, %131 ], [ 23696248, %130 ], [ %129, %118 ], [ %117, %108 ], [ 899574689, %107 ], [ -364680590, %106 ], [ 633909087, %98 ], [ %97, %91 ], [ %90, %89 ], [ %88, %77 ], [ %76, %67 ], [ 899574689, %66 ], [ %65, %62 ], [ -771992313, %61 ], [ -1851230476, %59 ], [ -384970064, %58 ], [ -210181721, %56 ], [ 2034979654, %55 ], [ -1622154700, %50 ], [ %49, %48 ], [ %47, %35 ], [ %34, %25 ], [ %24, %21 ], [ -210181721, %20 ], [ %19, %16 ]
  br label %15

16:                                               ; preds = %15
  %17 = load i32, i32* %7, align 4
  %18 = icmp slt i32 %.095, %17
  %19 = select i1 %18, i32 -1507440894, i32 988649443
  br label %.backedge

20:                                               ; preds = %15
  br label %.backedge

21:                                               ; preds = %15
  %22 = load i32, i32* %8, align 4
  %23 = icmp slt i32 %.093, %22
  %24 = select i1 %23, i32 -1811226044, i32 -1920725050
  br label %.backedge

25:                                               ; preds = %15
  %26 = load i32, i32* @x.1, align 4
  %27 = load i32, i32* @y.2, align 4
  %28 = add i32 %26, -1
  %29 = mul i32 %28, %26
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %32, %31
  %34 = select i1 %33, i32 145018210, i32 808845352
  br label %.backedge

35:                                               ; preds = %15
  %36 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %10)
  %37 = load i8, i8* %10, align 1
  %38 = icmp eq i8 %37, 35
  store i1 %38, i1* %6, align 1
  %39 = load i32, i32* @x.1, align 4
  %40 = load i32, i32* @y.2, align 4
  %41 = add i32 %39, -1
  %42 = mul i32 %41, %39
  %43 = and i32 %42, 1
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %40, 10
  %46 = or i1 %45, %44
  %47 = select i1 %46, i32 1926678412, i32 808845352
  br label %.backedge

48:                                               ; preds = %15
  %.0..0..0. = load volatile i1, i1* %6, align 1
  %49 = select i1 %.0..0..0., i32 1748832617, i32 -1622154700
  br label %.backedge

50:                                               ; preds = %15
  %51 = add i32 %.097, 1
  %52 = sext i32 %.095 to i64
  %53 = sext i32 %.093 to i64
  %54 = getelementptr inbounds [305 x [305 x i32]], [305 x [305 x i32]]* @ans, i64 0, i64 %52, i64 %53
  store i32 %51, i32* %54, align 4
  br label %.backedge

55:                                               ; preds = %15
  br label %.backedge

56:                                               ; preds = %15
  %57 = add i32 %.093, 1
  br label %.backedge

58:                                               ; preds = %15
  br label %.backedge

59:                                               ; preds = %15
  %60 = add i32 %.095, 1
  br label %.backedge

61:                                               ; preds = %15
  br label %.backedge

62:                                               ; preds = %15
  %63 = load i32, i32* %7, align 4
  %64 = icmp slt i32 %.091, %63
  %65 = select i1 %64, i32 -1295850895, i32 2069936580
  br label %.backedge

66:                                               ; preds = %15
  br label %.backedge

67:                                               ; preds = %15
  %68 = load i32, i32* @x.1, align 4
  %69 = load i32, i32* @y.2, align 4
  %70 = add i32 %68, -1
  %71 = mul i32 %70, %68
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %74, %73
  %76 = select i1 %75, i32 -857684263, i32 -1471328035
  br label %.backedge

77:                                               ; preds = %15
  %78 = load i32, i32* %8, align 4
  %79 = icmp slt i32 %.089, %78
  store i1 %79, i1* %5, align 1
  %80 = load i32, i32* @x.1, align 4
  %81 = load i32, i32* @y.2, align 4
  %82 = add i32 %80, -1
  %83 = mul i32 %82, %80
  %84 = and i32 %83, 1
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %86, %85
  %88 = select i1 %87, i32 1398044356, i32 -1471328035
  br label %.backedge

89:                                               ; preds = %15
  %.0..0..0.70 = load volatile i1, i1* %5, align 1
  %90 = select i1 %.0..0..0.70, i32 222851993, i32 1613762274
  br label %.backedge

91:                                               ; preds = %15
  %92 = sext i32 %.091 to i64
  %93 = sext i32 %.089 to i64
  %94 = getelementptr inbounds [305 x [305 x i32]], [305 x [305 x i32]]* @ans, i64 0, i64 %92, i64 %93
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, 0
  %97 = select i1 %96, i32 1996486743, i32 633909087
  br label %.backedge

98:                                               ; preds = %15
  %99 = sext i32 %.091 to i64
  %100 = add i32 %.089, -1
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds [305 x [305 x i32]], [305 x [305 x i32]]* @ans, i64 0, i64 %99, i64 %101
  %103 = load i32, i32* %102, align 4
  %104 = sext i32 %.089 to i64
  %105 = getelementptr inbounds [305 x [305 x i32]], [305 x [305 x i32]]* @ans, i64 0, i64 %99, i64 %104
  store i32 %103, i32* %105, align 4
  br label %.backedge

106:                                              ; preds = %15
  br label %.backedge

107:                                              ; preds = %15
  %.neg101 = add i32 %.089, 1
  br label %.backedge

108:                                              ; preds = %15
  %109 = load i32, i32* @x.1, align 4
  %110 = load i32, i32* @y.2, align 4
  %111 = add i32 %109, -1
  %112 = mul i32 %111, %109
  %113 = and i32 %112, 1
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %115, %114
  %117 = select i1 %116, i32 -144553195, i32 -1505521545
  br label %.backedge

118:                                              ; preds = %15
  %119 = load i32, i32* %8, align 4
  %120 = add i32 %119, -2
  %121 = load i32, i32* @x.1, align 4
  %122 = load i32, i32* @y.2, align 4
  %123 = add i32 %121, -1
  %124 = mul i32 %123, %121
  %125 = and i32 %124, 1
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %127, %126
  %129 = select i1 %128, i32 654200785, i32 -1505521545
  br label %.backedge

130:                                              ; preds = %15
  br label %.backedge

131:                                              ; preds = %15
  %132 = icmp sgt i32 %.087, -1
  %133 = select i1 %132, i32 -520803620, i32 -1615763096
  br label %.backedge

134:                                              ; preds = %15
  %135 = sext i32 %.091 to i64
  %136 = sext i32 %.087 to i64
  %137 = getelementptr inbounds [305 x [305 x i32]], [305 x [305 x i32]]* @ans, i64 0, i64 %135, i64 %136
  %138 = load i32, i32* %137, align 4
  %139 = icmp eq i32 %138, 0
  %140 = select i1 %139, i32 -33447714, i32 -1895454382
  br label %.backedge

141:                                              ; preds = %15
  %142 = sext i32 %.091 to i64
  %143 = add i32 %.087, 1
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds [305 x [305 x i32]], [305 x [305 x i32]]* @ans, i64 0, i64 %142, i64 %144
  %146 = load i32, i32* %145, align 4
  %147 = sext i32 %.087 to i64
  %148 = getelementptr inbounds [305 x [305 x i32]], [305 x [305 x i32]]* @ans, i64 0, i64 %142, i64 %147
  store i32 %146, i32* %148, align 4
  br label %.backedge

149:                                              ; preds = %15
  br label %.backedge

150:                                              ; preds = %15
  %151 = add i32 %.087, -1
  br label %.backedge

152:                                              ; preds = %15
  %153 = load i32, i32* @x.1, align 4
  %154 = load i32, i32* @y.2, align 4
  %155 = add i32 %153, -1
  %156 = mul i32 %155, %153
  %157 = and i32 %156, 1
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %159, %158
  %161 = select i1 %160, i32 -822118875, i32 -1387194044
  br label %.backedge

162:                                              ; preds = %15
  %163 = load i32, i32* @x.1, align 4
  %164 = load i32, i32* @y.2, align 4
  %165 = add i32 %163, -1
  %166 = mul i32 %165, %163
  %167 = and i32 %166, 1
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %169, %168
  %171 = select i1 %170, i32 238691439, i32 -1387194044
  br label %.backedge

172:                                              ; preds = %15
  br label %.backedge

173:                                              ; preds = %15
  %174 = add i32 %.091, 1
  br label %.backedge

175:                                              ; preds = %15
  br label %.backedge

176:                                              ; preds = %15
  %177 = load i32, i32* %7, align 4
  %178 = icmp slt i32 %.085, %177
  %179 = select i1 %178, i32 -1396750527, i32 1676381761
  br label %.backedge

180:                                              ; preds = %15
  br label %.backedge

181:                                              ; preds = %15
  %182 = load i32, i32* @x.1, align 4
  %183 = load i32, i32* @y.2, align 4
  %184 = add i32 %182, -1
  %185 = mul i32 %184, %182
  %186 = and i32 %185, 1
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %183, 10
  %189 = or i1 %188, %187
  %190 = select i1 %189, i32 628717270, i32 -379516678
  br label %.backedge

191:                                              ; preds = %15
  %192 = load i32, i32* %8, align 4
  %193 = icmp slt i32 %.083, %192
  store i1 %193, i1* %4, align 1
  %194 = load i32, i32* @x.1, align 4
  %195 = load i32, i32* @y.2, align 4
  %196 = add i32 %194, -1
  %197 = mul i32 %196, %194
  %198 = and i32 %197, 1
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %195, 10
  %201 = or i1 %200, %199
  %202 = select i1 %201, i32 -20196428, i32 -379516678
  br label %.backedge

203:                                              ; preds = %15
  %.0..0..0.71 = load volatile i1, i1* %4, align 1
  %204 = select i1 %.0..0..0.71, i32 -662810113, i32 1672401511
  br label %.backedge

205:                                              ; preds = %15
  %206 = sext i32 %.085 to i64
  %207 = sext i32 %.083 to i64
  %208 = getelementptr inbounds [305 x [305 x i32]], [305 x [305 x i32]]* @ans, i64 0, i64 %206, i64 %207
  %209 = load i32, i32* %208, align 4
  %210 = icmp eq i32 %209, 0
  %211 = select i1 %210, i32 -1593424592, i32 -1813603275
  br label %.backedge

212:                                              ; preds = %15
  %213 = load i32, i32* @x.1, align 4
  %214 = load i32, i32* @y.2, align 4
  %215 = add i32 %213, -1
  %216 = mul i32 %215, %213
  %217 = and i32 %216, 1
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %219, %218
  %221 = select i1 %220, i32 -1208344073, i32 1640822446
  br label %.backedge

222:                                              ; preds = %15
  %223 = add i32 %.085, -1
  %224 = sext i32 %223 to i64
  %225 = sext i32 %.083 to i64
  %226 = getelementptr inbounds [305 x [305 x i32]], [305 x [305 x i32]]* @ans, i64 0, i64 %224, i64 %225
  %227 = load i32, i32* %226, align 4
  %228 = sext i32 %.085 to i64
  %229 = getelementptr inbounds [305 x [305 x i32]], [305 x [305 x i32]]* @ans, i64 0, i64 %228, i64 %225
  store i32 %227, i32* %229, align 4
  %230 = load i32, i32* @x.1, align 4
  %231 = load i32, i32* @y.2, align 4
  %232 = add i32 %230, -1
  %233 = mul i32 %232, %230
  %234 = and i32 %233, 1
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %231, 10
  %237 = or i1 %236, %235
  %238 = select i1 %237, i32 1611701039, i32 1640822446
  br label %.backedge

239:                                              ; preds = %15
  br label %.backedge

240:                                              ; preds = %15
  br label %.backedge

241:                                              ; preds = %15
  %.neg100 = add i32 %.083, 1
  br label %.backedge

242:                                              ; preds = %15
  br label %.backedge

243:                                              ; preds = %15
  %244 = add i32 %.085, 1
  br label %.backedge

245:                                              ; preds = %15
  %246 = load i32, i32* @x.1, align 4
  %247 = load i32, i32* @y.2, align 4
  %248 = add i32 %246, -1
  %249 = mul i32 %248, %246
  %250 = and i32 %249, 1
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %247, 10
  %253 = or i1 %252, %251
  %254 = select i1 %253, i32 899056561, i32 2016997742
  br label %.backedge

255:                                              ; preds = %15
  %256 = load i32, i32* %7, align 4
  %257 = add i32 %256, -2
  %258 = load i32, i32* @x.1, align 4
  %259 = load i32, i32* @y.2, align 4
  %260 = add i32 %258, -1
  %261 = mul i32 %260, %258
  %262 = and i32 %261, 1
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %264, %263
  %266 = select i1 %265, i32 1797491170, i32 2016997742
  br label %.backedge

267:                                              ; preds = %15
  br label %.backedge

268:                                              ; preds = %15
  %269 = icmp sgt i32 %.081, -1
  %270 = select i1 %269, i32 2052005842, i32 -1522942181
  br label %.backedge

271:                                              ; preds = %15
  br label %.backedge

272:                                              ; preds = %15
  %273 = load i32, i32* @x.1, align 4
  %274 = load i32, i32* @y.2, align 4
  %275 = add i32 %273, -1
  %276 = mul i32 %275, %273
  %277 = and i32 %276, 1
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %274, 10
  %280 = or i1 %279, %278
  %281 = select i1 %280, i32 -389147060, i32 -71329126
  br label %.backedge

282:                                              ; preds = %15
  %283 = load i32, i32* %8, align 4
  %284 = icmp slt i32 %.079, %283
  store i1 %284, i1* %3, align 1
  %285 = load i32, i32* @x.1, align 4
  %286 = load i32, i32* @y.2, align 4
  %287 = add i32 %285, -1
  %288 = mul i32 %287, %285
  %289 = and i32 %288, 1
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %286, 10
  %292 = or i1 %291, %290
  %293 = select i1 %292, i32 284393314, i32 -71329126
  br label %.backedge

294:                                              ; preds = %15
  %.0..0..0.72 = load volatile i1, i1* %3, align 1
  %295 = select i1 %.0..0..0.72, i32 -1973835564, i32 -1715691527
  br label %.backedge

296:                                              ; preds = %15
  %297 = load i32, i32* @x.1, align 4
  %298 = load i32, i32* @y.2, align 4
  %299 = add i32 %297, -1
  %300 = mul i32 %299, %297
  %301 = and i32 %300, 1
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %303, %302
  %305 = select i1 %304, i32 1517039258, i32 -717904967
  br label %.backedge

306:                                              ; preds = %15
  %307 = sext i32 %.081 to i64
  %308 = sext i32 %.079 to i64
  %309 = getelementptr inbounds [305 x [305 x i32]], [305 x [305 x i32]]* @ans, i64 0, i64 %307, i64 %308
  %310 = load i32, i32* %309, align 4
  %311 = icmp eq i32 %310, 0
  store i1 %311, i1* %2, align 1
  %312 = load i32, i32* @x.1, align 4
  %313 = load i32, i32* @y.2, align 4
  %314 = add i32 %312, -1
  %315 = mul i32 %314, %312
  %316 = and i32 %315, 1
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %313, 10
  %319 = or i1 %318, %317
  %320 = select i1 %319, i32 -633053273, i32 -717904967
  br label %.backedge

321:                                              ; preds = %15
  %.0..0..0.73 = load volatile i1, i1* %2, align 1
  %322 = select i1 %.0..0..0.73, i32 -1181101952, i32 -36122171
  br label %.backedge

323:                                              ; preds = %15
  %324 = load i32, i32* @x.1, align 4
  %325 = load i32, i32* @y.2, align 4
  %326 = add i32 %324, -1
  %327 = mul i32 %326, %324
  %328 = and i32 %327, 1
  %329 = icmp eq i32 %328, 0
  %330 = icmp slt i32 %325, 10
  %331 = or i1 %330, %329
  %332 = select i1 %331, i32 336582683, i32 -653602264
  br label %.backedge

333:                                              ; preds = %15
  %334 = add i32 %.081, 1
  %335 = sext i32 %334 to i64
  %336 = sext i32 %.079 to i64
  %337 = getelementptr inbounds [305 x [305 x i32]], [305 x [305 x i32]]* @ans, i64 0, i64 %335, i64 %336
  %338 = load i32, i32* %337, align 4
  %339 = sext i32 %.081 to i64
  %340 = getelementptr inbounds [305 x [305 x i32]], [305 x [305 x i32]]* @ans, i64 0, i64 %339, i64 %336
  store i32 %338, i32* %340, align 4
  %341 = load i32, i32* @x.1, align 4
  %342 = load i32, i32* @y.2, align 4
  %343 = add i32 %341, -1
  %344 = mul i32 %343, %341
  %345 = and i32 %344, 1
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %342, 10
  %348 = or i1 %347, %346
  %349 = select i1 %348, i32 355218573, i32 -653602264
  br label %.backedge

350:                                              ; preds = %15
  br label %.backedge

351:                                              ; preds = %15
  br label %.backedge

352:                                              ; preds = %15
  %353 = add i32 %.079, 1
  br label %.backedge

354:                                              ; preds = %15
  br label %.backedge

355:                                              ; preds = %15
  %356 = load i32, i32* @x.1, align 4
  %357 = load i32, i32* @y.2, align 4
  %358 = add i32 %356, -1
  %359 = mul i32 %358, %356
  %360 = and i32 %359, 1
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %362, %361
  %364 = select i1 %363, i32 1705515462, i32 -2146836985
  br label %.backedge

365:                                              ; preds = %15
  %366 = add i32 %.081, -1
  %367 = load i32, i32* @x.1, align 4
  %368 = load i32, i32* @y.2, align 4
  %369 = add i32 %367, -1
  %370 = mul i32 %369, %367
  %371 = and i32 %370, 1
  %372 = icmp eq i32 %371, 0
  %373 = icmp slt i32 %368, 10
  %374 = or i1 %373, %372
  %375 = select i1 %374, i32 588155979, i32 -2146836985
  br label %.backedge

376:                                              ; preds = %15
  br label %.backedge

377:                                              ; preds = %15
  %378 = load i32, i32* @x.1, align 4
  %379 = load i32, i32* @y.2, align 4
  %380 = add i32 %378, -1
  %381 = mul i32 %380, %378
  %382 = and i32 %381, 1
  %383 = icmp eq i32 %382, 0
  %384 = icmp slt i32 %379, 10
  %385 = or i1 %384, %383
  %386 = select i1 %385, i32 2130947685, i32 -781597968
  br label %.backedge

387:                                              ; preds = %15
  %388 = load i32, i32* @x.1, align 4
  %389 = load i32, i32* @y.2, align 4
  %390 = add i32 %388, -1
  %391 = mul i32 %390, %388
  %392 = and i32 %391, 1
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %389, 10
  %395 = or i1 %394, %393
  %396 = select i1 %395, i32 -1158465132, i32 -781597968
  br label %.backedge

397:                                              ; preds = %15
  br label %.backedge

398:                                              ; preds = %15
  %399 = load i32, i32* @x.1, align 4
  %400 = load i32, i32* @y.2, align 4
  %401 = add i32 %399, -1
  %402 = mul i32 %401, %399
  %403 = and i32 %402, 1
  %404 = icmp eq i32 %403, 0
  %405 = icmp slt i32 %400, 10
  %406 = or i1 %405, %404
  %407 = select i1 %406, i32 -522525254, i32 1000803002
  br label %.backedge

408:                                              ; preds = %15
  %409 = load i32, i32* %7, align 4
  %410 = icmp slt i32 %.077, %409
  store i1 %410, i1* %1, align 1
  %411 = load i32, i32* @x.1, align 4
  %412 = load i32, i32* @y.2, align 4
  %413 = add i32 %411, -1
  %414 = mul i32 %413, %411
  %415 = and i32 %414, 1
  %416 = icmp eq i32 %415, 0
  %417 = icmp slt i32 %412, 10
  %418 = or i1 %417, %416
  %419 = select i1 %418, i32 -2013977115, i32 1000803002
  br label %.backedge

420:                                              ; preds = %15
  %.0..0..0.74 = load volatile i1, i1* %1, align 1
  %421 = select i1 %.0..0..0.74, i32 309533314, i32 -94434688
  br label %.backedge

422:                                              ; preds = %15
  br label %.backedge

423:                                              ; preds = %15
  %424 = load i32, i32* %8, align 4
  %425 = icmp slt i32 %.075, %424
  %426 = select i1 %425, i32 -1411367428, i32 1448551437
  br label %.backedge

427:                                              ; preds = %15
  %428 = sext i32 %.077 to i64
  %429 = sext i32 %.075 to i64
  %430 = getelementptr inbounds [305 x [305 x i32]], [305 x [305 x i32]]* @ans, i64 0, i64 %428, i64 %429
  %431 = load i32, i32* %430, align 4
  %432 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %431)
  %433 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %432, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  br label %.backedge

434:                                              ; preds = %15
  %435 = load i32, i32* @x.1, align 4
  %436 = load i32, i32* @y.2, align 4
  %437 = add i32 %435, -1
  %438 = mul i32 %437, %435
  %439 = and i32 %438, 1
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %436, 10
  %442 = or i1 %441, %440
  %443 = select i1 %442, i32 647971566, i32 2076264389
  br label %.backedge

444:                                              ; preds = %15
  %445 = add i32 %.075, 1
  %446 = load i32, i32* @x.1, align 4
  %447 = load i32, i32* @y.2, align 4
  %448 = add i32 %446, -1
  %449 = mul i32 %448, %446
  %450 = and i32 %449, 1
  %451 = icmp eq i32 %450, 0
  %452 = icmp slt i32 %447, 10
  %453 = or i1 %452, %451
  %454 = select i1 %453, i32 -636995218, i32 2076264389
  br label %.backedge

455:                                              ; preds = %15
  br label %.backedge

456:                                              ; preds = %15
  %457 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 10)
  br label %.backedge

458:                                              ; preds = %15
  %.neg99 = add i32 %.077, 1
  br label %.backedge

459:                                              ; preds = %15
  ret i32 0

460:                                              ; preds = %15
  %461 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %10)
  br label %.backedge

462:                                              ; preds = %15
  br label %.backedge

463:                                              ; preds = %15
  %464 = load i32, i32* %8, align 4
  %465 = add i32 %464, -2
  br label %.backedge

466:                                              ; preds = %15
  br label %.backedge

467:                                              ; preds = %15
  br label %.backedge

468:                                              ; preds = %15
  %469 = add i32 %.085, -1
  %470 = sext i32 %469 to i64
  %471 = sext i32 %.083 to i64
  %472 = getelementptr inbounds [305 x [305 x i32]], [305 x [305 x i32]]* @ans, i64 0, i64 %470, i64 %471
  %473 = load i32, i32* %472, align 4
  %474 = sext i32 %.085 to i64
  %475 = getelementptr inbounds [305 x [305 x i32]], [305 x [305 x i32]]* @ans, i64 0, i64 %474, i64 %471
  store i32 %473, i32* %475, align 4
  br label %.backedge

476:                                              ; preds = %15
  %477 = load i32, i32* %7, align 4
  %478 = add i32 %477, -2
  br label %.backedge

479:                                              ; preds = %15
  br label %.backedge

480:                                              ; preds = %15
  br label %.backedge

481:                                              ; preds = %15
  %482 = add i32 %.081, 1
  %483 = sext i32 %482 to i64
  %484 = sext i32 %.079 to i64
  %485 = getelementptr inbounds [305 x [305 x i32]], [305 x [305 x i32]]* @ans, i64 0, i64 %483, i64 %484
  %486 = load i32, i32* %485, align 4
  %487 = sext i32 %.081 to i64
  %488 = getelementptr inbounds [305 x [305 x i32]], [305 x [305 x i32]]* @ans, i64 0, i64 %487, i64 %484
  store i32 %486, i32* %488, align 4
  br label %.backedge

489:                                              ; preds = %15
  %.neg = add i32 %.081, -1
  br label %.backedge

490:                                              ; preds = %15
  br label %.backedge

491:                                              ; preds = %15
  br label %.backedge

492:                                              ; preds = %15
  %493 = add i32 %.075, 1
  br label %.backedge
}

declare zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s597914956.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
