; ModuleID = 'build_ollvm/programs/p02855/s551210105.ll'
source_filename = "Project_CodeNet_C++1400/p02855/s551210105.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@arr = global [310 x [310 x i8]] zeroinitializer, align 16
@n = global i32 0, align 4
@m = global i32 0, align 4
@k = global i32 0, align 4
@ans = local_unnamed_addr global [310 x [310 x i32]] zeroinitializer, align 16
@cnt = local_unnamed_addr global i32 0, align 4
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s551210105.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.2 = common local_unnamed_addr global i32 0
@y.3 = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0
@x.6 = common local_unnamed_addr global i32 0
@y.7 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nofree noinline norecurse nounwind uwtable
define void @_Z4markiiii(i32 %0, i32 %1, i32 %2, i32 %3) local_unnamed_addr #4 {
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i1, align 1
  %11 = alloca i1, align 1
  %12 = load i32, i32* @x.2, align 4
  %13 = load i32, i32* @y.3, align 4
  %14 = add i32 %12, -1
  %15 = mul i32 %14, %12
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %11, align 1
  %18 = icmp slt i32 %13, 10
  store i1 %18, i1* %10, align 1
  br label %19

19:                                               ; preds = %.backedge, %4
  %.0 = phi i32 [ -840170864, %4 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -840170864, label %20
    i32 337034866, label %23
    i32 276879325, label %38
    i32 -778096616, label %39
    i32 -765604904, label %43
    i32 -1501706744, label %45
    i32 1851728218, label %49
    i32 672811345, label %56
    i32 -384378443, label %58
    i32 70020180, label %59
    i32 236710174, label %62
    i32 -1603681063, label %63
  ]

.backedge:                                        ; preds = %19, %63, %59, %58, %56, %49, %45, %43, %39, %38, %23, %20
  %.0.be = phi i32 [ %.0, %19 ], [ 337034866, %63 ], [ -778096616, %59 ], [ 70020180, %58 ], [ -1501706744, %56 ], [ 672811345, %49 ], [ %48, %45 ], [ -1501706744, %43 ], [ %42, %39 ], [ -778096616, %38 ], [ %37, %23 ], [ %22, %20 ]
  br label %19

20:                                               ; preds = %19
  %.0..0..0. = load volatile i1, i1* %11, align 1
  %.0..0..0.1 = load volatile i1, i1* %10, align 1
  %21 = or i1 %.0..0..0., %.0..0..0.1
  %22 = select i1 %21, i32 337034866, i32 -1603681063
  br label %.backedge

23:                                               ; preds = %19
  %24 = alloca i32, align 4
  store i32* %24, i32** %9, align 8
  %25 = alloca i32, align 4
  store i32* %25, i32** %8, align 8
  %26 = alloca i32, align 4
  store i32* %26, i32** %7, align 8
  %27 = alloca i32, align 4
  store i32* %27, i32** %6, align 8
  %28 = alloca i32, align 4
  store i32* %28, i32** %5, align 8
  %.0..0..0.2 = load volatile i32*, i32** %9, align 8
  store i32 %1, i32* %.0..0..0.2, align 4
  %.0..0..0.4 = load volatile i32*, i32** %8, align 8
  store i32 %2, i32* %.0..0..0.4, align 4
  %.0..0..0.6 = load volatile i32*, i32** %7, align 8
  store i32 %3, i32* %.0..0..0.6, align 4
  %.0..0..0.8 = load volatile i32*, i32** %6, align 8
  store i32 %0, i32* %.0..0..0.8, align 4
  %29 = load i32, i32* @x.2, align 4
  %30 = load i32, i32* @y.3, align 4
  %31 = add i32 %29, -1
  %32 = mul i32 %31, %29
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %35, %34
  %37 = select i1 %36, i32 276879325, i32 -1603681063
  br label %.backedge

38:                                               ; preds = %19
  br label %.backedge

39:                                               ; preds = %19
  %.0..0..0.9 = load volatile i32*, i32** %6, align 8
  %40 = load i32, i32* %.0..0..0.9, align 4
  %.0..0..0.5 = load volatile i32*, i32** %8, align 8
  %41 = load i32, i32* %.0..0..0.5, align 4
  %.not18 = icmp sgt i32 %40, %41
  %42 = select i1 %.not18, i32 236710174, i32 -765604904
  br label %.backedge

43:                                               ; preds = %19
  %.0..0..0.3 = load volatile i32*, i32** %9, align 8
  %44 = load i32, i32* %.0..0..0.3, align 4
  %.0..0..0.13 = load volatile i32*, i32** %5, align 8
  store i32 %44, i32* %.0..0..0.13, align 4
  br label %.backedge

45:                                               ; preds = %19
  %.0..0..0.14 = load volatile i32*, i32** %5, align 8
  %46 = load i32, i32* %.0..0..0.14, align 4
  %.0..0..0.7 = load volatile i32*, i32** %7, align 8
  %47 = load i32, i32* %.0..0..0.7, align 4
  %.not = icmp sgt i32 %46, %47
  %48 = select i1 %.not, i32 -384378443, i32 1851728218
  br label %.backedge

49:                                               ; preds = %19
  %50 = load i32, i32* @cnt, align 4
  %.0..0..0.10 = load volatile i32*, i32** %6, align 8
  %51 = load i32, i32* %.0..0..0.10, align 4
  %52 = sext i32 %51 to i64
  %.0..0..0.15 = load volatile i32*, i32** %5, align 8
  %53 = load i32, i32* %.0..0..0.15, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [310 x [310 x i32]], [310 x [310 x i32]]* @ans, i64 0, i64 %52, i64 %54
  store i32 %50, i32* %55, align 4
  br label %.backedge

56:                                               ; preds = %19
  %.0..0..0.16 = load volatile i32*, i32** %5, align 8
  %57 = load i32, i32* %.0..0..0.16, align 4
  %.neg = add i32 %57, 1
  %.0..0..0.17 = load volatile i32*, i32** %5, align 8
  store i32 %.neg, i32* %.0..0..0.17, align 4
  br label %.backedge

58:                                               ; preds = %19
  br label %.backedge

59:                                               ; preds = %19
  %.0..0..0.11 = load volatile i32*, i32** %6, align 8
  %60 = load i32, i32* %.0..0..0.11, align 4
  %61 = add i32 %60, 1
  %.0..0..0.12 = load volatile i32*, i32** %6, align 8
  store i32 %61, i32* %.0..0..0.12, align 4
  br label %.backedge

62:                                               ; preds = %19
  ret void

63:                                               ; preds = %19
  br label %.backedge
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #5 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = tail call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %5 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8
  %6 = getelementptr i8, i8* %5, i64 -24
  %7 = bitcast i8* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %8
  %10 = bitcast i8* %9 to %"class.std::basic_ios"*
  %11 = tail call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %10, %"class.std::basic_ostream"* null)
  %12 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) @n)
  %13 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %12, i32* nonnull dereferenceable(4) @m)
  %14 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %13, i32* nonnull dereferenceable(4) @k)
  br label %15

15:                                               ; preds = %.backedge, %0
  %.078 = phi i32 [ 0, %0 ], [ %.078.be, %.backedge ]
  %.076 = phi i32 [ undef, %0 ], [ %.076.be, %.backedge ]
  %.074 = phi i32 [ undef, %0 ], [ %.074.be, %.backedge ]
  %.072 = phi i32 [ undef, %0 ], [ %.072.be, %.backedge ]
  %.070 = phi i32 [ undef, %0 ], [ %.070.be, %.backedge ]
  %.068 = phi i32 [ undef, %0 ], [ %.068.be, %.backedge ]
  %.066 = phi i32 [ undef, %0 ], [ %.066.be, %.backedge ]
  %.064 = phi i32 [ undef, %0 ], [ %.064.be, %.backedge ]
  %.062 = phi i32 [ undef, %0 ], [ %.062.be, %.backedge ]
  %.060 = phi i32 [ undef, %0 ], [ %.060.be, %.backedge ]
  %.0 = phi i32 [ -1413474587, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1413474587, label %16
    i32 -1959390628, label %26
    i32 1516033292, label %38
    i32 -1534707316, label %40
    i32 -420384353, label %41
    i32 -835081609, label %51
    i32 1428322569, label %63
    i32 566521961, label %65
    i32 752469707, label %70
    i32 1128381515, label %71
    i32 1150486203, label %72
    i32 -1983382532, label %82
    i32 -1312059636, label %92
    i32 199567668, label %93
    i32 -254791743, label %94
    i32 -1508636707, label %98
    i32 1364199103, label %99
    i32 1455543551, label %103
    i32 -863198005, label %110
    i32 -971853298, label %112
    i32 -1521051685, label %122
    i32 1240327033, label %132
    i32 -1796335581, label %133
    i32 -1683430877, label %134
    i32 -356299979, label %137
    i32 -810980138, label %147
    i32 -289740245, label %157
    i32 1340935414, label %158
    i32 156918895, label %168
    i32 -35986623, label %178
    i32 1005883426, label %179
    i32 941641855, label %183
    i32 -2134614483, label %193
    i32 470253160, label %208
    i32 -469935862, label %210
    i32 1118001576, label %214
    i32 1344249579, label %217
    i32 2124651733, label %227
    i32 299473794, label %238
    i32 -1403423134, label %239
    i32 -1268581000, label %240
    i32 369132318, label %241
    i32 2067795943, label %242
    i32 -383346023, label %243
    i32 936332522, label %253
    i32 -968589377, label %264
    i32 567574975, label %265
    i32 -1279119269, label %266
    i32 1255016907, label %270
    i32 -1470410324, label %280
    i32 -417041800, label %290
    i32 -150454800, label %291
    i32 -50670433, label %295
    i32 1109207215, label %301
    i32 -613836465, label %311
    i32 1459462226, label %328
    i32 -658982478, label %329
    i32 -434979228, label %336
    i32 593162508, label %338
    i32 -1618500870, label %348
    i32 2067325856, label %359
    i32 -805425188, label %360
    i32 -900737882, label %370
    i32 -2125657046, label %381
    i32 -504675717, label %382
    i32 9653882, label %383
    i32 -624366284, label %384
    i32 5634745, label %385
    i32 1669868251, label %387
    i32 1609626887, label %388
    i32 -820829232, label %389
    i32 427021314, label %390
    i32 -128194179, label %391
    i32 1772116873, label %393
    i32 1971865806, label %395
    i32 -701009759, label %396
    i32 -529199754, label %404
    i32 -1517602733, label %406
  ]

.backedge:                                        ; preds = %15, %406, %404, %396, %395, %393, %391, %390, %389, %388, %387, %385, %384, %383, %381, %370, %360, %359, %348, %338, %336, %329, %328, %311, %301, %295, %291, %290, %280, %270, %266, %265, %264, %253, %243, %242, %241, %240, %239, %238, %227, %217, %214, %210, %208, %193, %183, %179, %178, %168, %158, %157, %147, %137, %134, %133, %132, %122, %112, %110, %103, %99, %98, %94, %93, %92, %82, %72, %71, %70, %65, %63, %51, %41, %40, %38, %26, %16
  %.078.be = phi i32 [ %.078, %15 ], [ %.078, %406 ], [ %.078, %404 ], [ %.078, %396 ], [ %.078, %395 ], [ %.078, %393 ], [ %.078, %391 ], [ %.078, %390 ], [ %.078, %389 ], [ %.078, %388 ], [ %.078, %387 ], [ %386, %385 ], [ %.078, %384 ], [ %.078, %383 ], [ %.078, %381 ], [ %.078, %370 ], [ %.078, %360 ], [ %.078, %359 ], [ %.078, %348 ], [ %.078, %338 ], [ %.078, %336 ], [ %.078, %329 ], [ %.078, %328 ], [ %.078, %311 ], [ %.078, %301 ], [ %.078, %295 ], [ %.078, %291 ], [ %.078, %290 ], [ %.078, %280 ], [ %.078, %270 ], [ %.078, %266 ], [ %.078, %265 ], [ %.078, %264 ], [ %.078, %253 ], [ %.078, %243 ], [ %.078, %242 ], [ %.078, %241 ], [ %.078, %240 ], [ %.078, %239 ], [ %.078, %238 ], [ %.078, %227 ], [ %.078, %217 ], [ %.078, %214 ], [ %.078, %210 ], [ %.078, %208 ], [ %.078, %193 ], [ %.078, %183 ], [ %.078, %179 ], [ %.078, %178 ], [ %.078, %168 ], [ %.078, %158 ], [ %.078, %157 ], [ %.078, %147 ], [ %.078, %137 ], [ %.078, %134 ], [ %.078, %133 ], [ %.078, %132 ], [ %.078, %122 ], [ %.078, %112 ], [ %.078, %110 ], [ %.078, %103 ], [ %.078, %99 ], [ %.078, %98 ], [ %.078, %94 ], [ %.078, %93 ], [ %.078, %92 ], [ %.neg85, %82 ], [ %.078, %72 ], [ %.078, %71 ], [ %.078, %70 ], [ %.078, %65 ], [ %.078, %63 ], [ %.078, %51 ], [ %.078, %41 ], [ %.078, %40 ], [ %.078, %38 ], [ %.078, %26 ], [ %.078, %16 ]
  %.076.be = phi i32 [ %.076, %15 ], [ %.076, %406 ], [ %.076, %404 ], [ %.076, %396 ], [ %.076, %395 ], [ %.076, %393 ], [ %.076, %391 ], [ %.076, %390 ], [ %.076, %389 ], [ %.076, %388 ], [ %.076, %387 ], [ %.076, %385 ], [ %.076, %384 ], [ %.076, %383 ], [ %.076, %381 ], [ %.076, %370 ], [ %.076, %360 ], [ %.076, %359 ], [ %.076, %348 ], [ %.076, %338 ], [ %.076, %336 ], [ %.076, %329 ], [ %.076, %328 ], [ %.076, %311 ], [ %.076, %301 ], [ %.076, %295 ], [ %.076, %291 ], [ %.076, %290 ], [ %.076, %280 ], [ %.076, %270 ], [ %.076, %266 ], [ %.076, %265 ], [ %.076, %264 ], [ %.076, %253 ], [ %.076, %243 ], [ %.076, %242 ], [ %.076, %241 ], [ %.076, %240 ], [ %.076, %239 ], [ %.076, %238 ], [ %.076, %227 ], [ %.076, %217 ], [ %.076, %214 ], [ %.076, %210 ], [ %.076, %208 ], [ %.076, %193 ], [ %.076, %183 ], [ %.076, %179 ], [ %.076, %178 ], [ %.076, %168 ], [ %.076, %158 ], [ %.076, %157 ], [ %.076, %147 ], [ %.076, %137 ], [ %.076, %134 ], [ %.076, %133 ], [ %.076, %132 ], [ %.076, %122 ], [ %.076, %112 ], [ %.076, %110 ], [ %.076, %103 ], [ %.076, %99 ], [ %.076, %98 ], [ %.076, %94 ], [ %.076, %93 ], [ %.076, %92 ], [ %.076, %82 ], [ %.076, %72 ], [ %.076, %71 ], [ %.neg86, %70 ], [ %.076, %65 ], [ %.076, %63 ], [ %.076, %51 ], [ %.076, %41 ], [ 0, %40 ], [ %.076, %38 ], [ %.076, %26 ], [ %.076, %16 ]
  %.074.be = phi i32 [ %.074, %15 ], [ %.074, %406 ], [ %.074, %404 ], [ %.074, %396 ], [ %.074, %395 ], [ %.074, %393 ], [ %.074, %391 ], [ %.074, %390 ], [ %.074, %389 ], [ %.074, %388 ], [ %.074, %387 ], [ %.074, %385 ], [ %.074, %384 ], [ %.074, %383 ], [ %.074, %381 ], [ %.074, %370 ], [ %.074, %360 ], [ %.074, %359 ], [ %.074, %348 ], [ %.074, %338 ], [ %.074, %336 ], [ %.074, %329 ], [ %.074, %328 ], [ %.074, %311 ], [ %.074, %301 ], [ %.074, %295 ], [ %.074, %291 ], [ %.074, %290 ], [ %.074, %280 ], [ %.074, %270 ], [ %.074, %266 ], [ %.074, %265 ], [ %.074, %264 ], [ %.074, %253 ], [ %.074, %243 ], [ %.neg80, %242 ], [ %.074, %241 ], [ %.074, %240 ], [ %.074, %239 ], [ %.074, %238 ], [ %.074, %227 ], [ %.074, %217 ], [ %.074, %214 ], [ %.074, %210 ], [ %.074, %208 ], [ %.074, %193 ], [ %.074, %183 ], [ %.074, %179 ], [ %.074, %178 ], [ %.074, %168 ], [ %.074, %158 ], [ %.074, %157 ], [ %.074, %147 ], [ %.074, %137 ], [ %.074, %134 ], [ %.074, %133 ], [ %.074, %132 ], [ %.074, %122 ], [ %.074, %112 ], [ %.074, %110 ], [ %.074, %103 ], [ %.074, %99 ], [ %.074, %98 ], [ %.074, %94 ], [ 0, %93 ], [ %.074, %92 ], [ %.074, %82 ], [ %.074, %72 ], [ %.074, %71 ], [ %.074, %70 ], [ %.074, %65 ], [ %.074, %63 ], [ %.074, %51 ], [ %.074, %41 ], [ %.074, %40 ], [ %.074, %38 ], [ %.074, %26 ], [ %.074, %16 ]
  %.072.be = phi i32 [ %.072, %15 ], [ %.072, %406 ], [ %.072, %404 ], [ %.072, %396 ], [ %.072, %395 ], [ %.072, %393 ], [ %392, %391 ], [ %.072, %390 ], [ %.072, %389 ], [ %.072, %388 ], [ %.072, %387 ], [ %.072, %385 ], [ %.072, %384 ], [ %.072, %383 ], [ %.072, %381 ], [ %.072, %370 ], [ %.072, %360 ], [ %.072, %359 ], [ %.072, %348 ], [ %.072, %338 ], [ %.072, %336 ], [ %.072, %329 ], [ %.072, %328 ], [ %.072, %311 ], [ %.072, %301 ], [ %.072, %295 ], [ %.072, %291 ], [ %.072, %290 ], [ %.072, %280 ], [ %.072, %270 ], [ %.072, %266 ], [ %.072, %265 ], [ %.072, %264 ], [ %.072, %253 ], [ %.072, %243 ], [ 0, %242 ], [ %.072, %241 ], [ %.072, %240 ], [ %.072, %239 ], [ %.072, %238 ], [ %228, %227 ], [ %.072, %217 ], [ %.072, %214 ], [ %.072, %210 ], [ %.072, %208 ], [ %.072, %193 ], [ %.072, %183 ], [ %.072, %179 ], [ %.072, %178 ], [ %.072, %168 ], [ %.072, %158 ], [ %.072, %157 ], [ %.072, %147 ], [ %.072, %137 ], [ %.072, %134 ], [ %.072, %133 ], [ %.072, %132 ], [ %.072, %122 ], [ %.072, %112 ], [ %.072, %110 ], [ %.072, %103 ], [ %.072, %99 ], [ %.072, %98 ], [ %.072, %94 ], [ 0, %93 ], [ %.072, %92 ], [ %.072, %82 ], [ %.072, %72 ], [ %.072, %71 ], [ %.072, %70 ], [ %.072, %65 ], [ %.072, %63 ], [ %.072, %51 ], [ %.072, %41 ], [ %.072, %40 ], [ %.072, %38 ], [ %.072, %26 ], [ %.072, %16 ]
  %.070.be = phi i32 [ %.070, %15 ], [ %.070, %406 ], [ %.070, %404 ], [ %.070, %396 ], [ %.070, %395 ], [ %394, %393 ], [ %.070, %391 ], [ %.070, %390 ], [ %.070, %389 ], [ %.070, %388 ], [ %.070, %387 ], [ %.070, %385 ], [ %.070, %384 ], [ %.070, %383 ], [ %.070, %381 ], [ %.070, %370 ], [ %.070, %360 ], [ %.070, %359 ], [ %.070, %348 ], [ %.070, %338 ], [ %.070, %336 ], [ %.070, %329 ], [ %.070, %328 ], [ %.070, %311 ], [ %.070, %301 ], [ %.070, %295 ], [ %.070, %291 ], [ %.070, %290 ], [ %.070, %280 ], [ %.070, %270 ], [ %.070, %266 ], [ %.070, %265 ], [ %.070, %264 ], [ %254, %253 ], [ %.070, %243 ], [ %.070, %242 ], [ %.070, %241 ], [ %.070, %240 ], [ %.070, %239 ], [ %.070, %238 ], [ %.070, %227 ], [ %.070, %217 ], [ %.070, %214 ], [ %.070, %210 ], [ %.070, %208 ], [ %.070, %193 ], [ %.070, %183 ], [ %.070, %179 ], [ %.070, %178 ], [ %.070, %168 ], [ %.070, %158 ], [ %.070, %157 ], [ %.070, %147 ], [ %.070, %137 ], [ %.070, %134 ], [ %.070, %133 ], [ %.070, %132 ], [ %.070, %122 ], [ %.070, %112 ], [ %.070, %110 ], [ %.070, %103 ], [ %.070, %99 ], [ %.070, %98 ], [ %.070, %94 ], [ 0, %93 ], [ %.070, %92 ], [ %.070, %82 ], [ %.070, %72 ], [ %.070, %71 ], [ %.070, %70 ], [ %.070, %65 ], [ %.070, %63 ], [ %.070, %51 ], [ %.070, %41 ], [ %.070, %40 ], [ %.070, %38 ], [ %.070, %26 ], [ %.070, %16 ]
  %.068.be = phi i32 [ %.068, %15 ], [ %.068, %406 ], [ %.068, %404 ], [ %.068, %396 ], [ %.068, %395 ], [ %.068, %393 ], [ %.068, %391 ], [ %.068, %390 ], [ %.068, %389 ], [ %.068, %388 ], [ %.068, %387 ], [ %.068, %385 ], [ %.068, %384 ], [ %.068, %383 ], [ %.068, %381 ], [ %.068, %370 ], [ %.068, %360 ], [ %.068, %359 ], [ %.068, %348 ], [ %.068, %338 ], [ %.068, %336 ], [ %.068, %329 ], [ %.068, %328 ], [ %.068, %311 ], [ %.068, %301 ], [ %.068, %295 ], [ %.068, %291 ], [ %.068, %290 ], [ %.068, %280 ], [ %.068, %270 ], [ %.068, %266 ], [ %.068, %265 ], [ %.068, %264 ], [ %.068, %253 ], [ %.068, %243 ], [ %.068, %242 ], [ %.068, %241 ], [ %.068, %240 ], [ %.068, %239 ], [ %.068, %238 ], [ %.068, %227 ], [ %.068, %217 ], [ %.068, %214 ], [ %.neg83, %210 ], [ %.068, %208 ], [ %.068, %193 ], [ %.068, %183 ], [ %.068, %179 ], [ %.068, %178 ], [ %.068, %168 ], [ %.068, %158 ], [ %.068, %157 ], [ %.068, %147 ], [ %.068, %137 ], [ %.068, %134 ], [ %.068, %133 ], [ %.068, %132 ], [ %.068, %122 ], [ %.068, %112 ], [ %111, %110 ], [ %.068, %103 ], [ %.068, %99 ], [ 0, %98 ], [ %.068, %94 ], [ %.068, %93 ], [ %.068, %92 ], [ %.068, %82 ], [ %.068, %72 ], [ %.068, %71 ], [ %.068, %70 ], [ %.068, %65 ], [ %.068, %63 ], [ %.068, %51 ], [ %.068, %41 ], [ %.068, %40 ], [ %.068, %38 ], [ %.068, %26 ], [ %.068, %16 ]
  %.066.be = phi i32 [ %.066, %15 ], [ %.066, %406 ], [ %.066, %404 ], [ %.066, %396 ], [ %.066, %395 ], [ %.066, %393 ], [ %.066, %391 ], [ %.066, %390 ], [ %.066, %389 ], [ %.066, %388 ], [ %.066, %387 ], [ %.066, %385 ], [ %.066, %384 ], [ %.066, %383 ], [ %.066, %381 ], [ %.066, %370 ], [ %.066, %360 ], [ %.066, %359 ], [ %.066, %348 ], [ %.066, %338 ], [ %.066, %336 ], [ %.066, %329 ], [ %.066, %328 ], [ %.066, %311 ], [ %.066, %301 ], [ %.066, %295 ], [ %.066, %291 ], [ %.066, %290 ], [ %.066, %280 ], [ %.066, %270 ], [ %.066, %266 ], [ %.066, %265 ], [ %.066, %264 ], [ %.066, %253 ], [ %.066, %243 ], [ %.066, %242 ], [ %.066, %241 ], [ %.066, %240 ], [ %.066, %239 ], [ %.066, %238 ], [ %.066, %227 ], [ %.066, %217 ], [ %.066, %214 ], [ %.066, %210 ], [ %.066, %208 ], [ %.066, %193 ], [ %.066, %183 ], [ %.066, %179 ], [ %.066, %178 ], [ %.066, %168 ], [ %.066, %158 ], [ %.066, %157 ], [ %.066, %147 ], [ %.066, %137 ], [ %.066, %134 ], [ %.neg84, %133 ], [ %.066, %132 ], [ %.066, %122 ], [ %.066, %112 ], [ %.066, %110 ], [ %.066, %103 ], [ %.066, %99 ], [ 0, %98 ], [ %.066, %94 ], [ %.066, %93 ], [ %.066, %92 ], [ %.066, %82 ], [ %.066, %72 ], [ %.066, %71 ], [ %.066, %70 ], [ %.066, %65 ], [ %.066, %63 ], [ %.066, %51 ], [ %.066, %41 ], [ %.066, %40 ], [ %.066, %38 ], [ %.066, %26 ], [ %.066, %16 ]
  %.064.be = phi i32 [ %.064, %15 ], [ %.064, %406 ], [ %.064, %404 ], [ %.064, %396 ], [ %.064, %395 ], [ %.064, %393 ], [ %.064, %391 ], [ %.064, %390 ], [ 0, %389 ], [ %.064, %388 ], [ %.064, %387 ], [ %.064, %385 ], [ %.064, %384 ], [ %.064, %383 ], [ %.064, %381 ], [ %.064, %370 ], [ %.064, %360 ], [ %.064, %359 ], [ %.064, %348 ], [ %.064, %338 ], [ %.064, %336 ], [ %.064, %329 ], [ %.064, %328 ], [ %.064, %311 ], [ %.064, %301 ], [ %.064, %295 ], [ %.064, %291 ], [ %.064, %290 ], [ %.064, %280 ], [ %.064, %270 ], [ %.064, %266 ], [ %.064, %265 ], [ %.064, %264 ], [ %.064, %253 ], [ %.064, %243 ], [ %.064, %242 ], [ %.neg81, %241 ], [ %.064, %240 ], [ %.064, %239 ], [ %.064, %238 ], [ %.064, %227 ], [ %.064, %217 ], [ %.064, %214 ], [ %.064, %210 ], [ %.064, %208 ], [ %.064, %193 ], [ %.064, %183 ], [ %.064, %179 ], [ %.064, %178 ], [ 0, %168 ], [ %.064, %158 ], [ %.064, %157 ], [ %.064, %147 ], [ %.064, %137 ], [ %.064, %134 ], [ %.064, %133 ], [ %.064, %132 ], [ %.064, %122 ], [ %.064, %112 ], [ %.064, %110 ], [ %.064, %103 ], [ %.064, %99 ], [ %.064, %98 ], [ %.064, %94 ], [ %.064, %93 ], [ %.064, %92 ], [ %.064, %82 ], [ %.064, %72 ], [ %.064, %71 ], [ %.064, %70 ], [ %.064, %65 ], [ %.064, %63 ], [ %.064, %51 ], [ %.064, %41 ], [ %.064, %40 ], [ %.064, %38 ], [ %.064, %26 ], [ %.064, %16 ]
  %.062.be = phi i32 [ %.062, %15 ], [ %.neg, %406 ], [ %.062, %404 ], [ %.062, %396 ], [ %.062, %395 ], [ %.062, %393 ], [ %.062, %391 ], [ %.062, %390 ], [ %.062, %389 ], [ %.062, %388 ], [ %.062, %387 ], [ %.062, %385 ], [ %.062, %384 ], [ %.062, %383 ], [ %.062, %381 ], [ %371, %370 ], [ %.062, %360 ], [ %.062, %359 ], [ %.062, %348 ], [ %.062, %338 ], [ %.062, %336 ], [ %.062, %329 ], [ %.062, %328 ], [ %.062, %311 ], [ %.062, %301 ], [ %.062, %295 ], [ %.062, %291 ], [ %.062, %290 ], [ %.062, %280 ], [ %.062, %270 ], [ %.062, %266 ], [ 0, %265 ], [ %.062, %264 ], [ %.062, %253 ], [ %.062, %243 ], [ %.062, %242 ], [ %.062, %241 ], [ %.062, %240 ], [ %.062, %239 ], [ %.062, %238 ], [ %.062, %227 ], [ %.062, %217 ], [ %.062, %214 ], [ %.062, %210 ], [ %.062, %208 ], [ %.062, %193 ], [ %.062, %183 ], [ %.062, %179 ], [ %.062, %178 ], [ %.062, %168 ], [ %.062, %158 ], [ %.062, %157 ], [ %.062, %147 ], [ %.062, %137 ], [ %.062, %134 ], [ %.062, %133 ], [ %.062, %132 ], [ %.062, %122 ], [ %.062, %112 ], [ %.062, %110 ], [ %.062, %103 ], [ %.062, %99 ], [ %.062, %98 ], [ %.062, %94 ], [ %.062, %93 ], [ %.062, %92 ], [ %.062, %82 ], [ %.062, %72 ], [ %.062, %71 ], [ %.062, %70 ], [ %.062, %65 ], [ %.062, %63 ], [ %.062, %51 ], [ %.062, %41 ], [ %.062, %40 ], [ %.062, %38 ], [ %.062, %26 ], [ %.062, %16 ]
  %.060.be = phi i32 [ %.060, %15 ], [ %.060, %406 ], [ %.060, %404 ], [ %.060, %396 ], [ 0, %395 ], [ %.060, %393 ], [ %.060, %391 ], [ %.060, %390 ], [ %.060, %389 ], [ %.060, %388 ], [ %.060, %387 ], [ %.060, %385 ], [ %.060, %384 ], [ %.060, %383 ], [ %.060, %381 ], [ %.060, %370 ], [ %.060, %360 ], [ %.060, %359 ], [ %.060, %348 ], [ %.060, %338 ], [ %337, %336 ], [ %.060, %329 ], [ %.060, %328 ], [ %.060, %311 ], [ %.060, %301 ], [ %.060, %295 ], [ %.060, %291 ], [ %.060, %290 ], [ 0, %280 ], [ %.060, %270 ], [ %.060, %266 ], [ %.060, %265 ], [ %.060, %264 ], [ %.060, %253 ], [ %.060, %243 ], [ %.060, %242 ], [ %.060, %241 ], [ %.060, %240 ], [ %.060, %239 ], [ %.060, %238 ], [ %.060, %227 ], [ %.060, %217 ], [ %.060, %214 ], [ %.060, %210 ], [ %.060, %208 ], [ %.060, %193 ], [ %.060, %183 ], [ %.060, %179 ], [ %.060, %178 ], [ %.060, %168 ], [ %.060, %158 ], [ %.060, %157 ], [ %.060, %147 ], [ %.060, %137 ], [ %.060, %134 ], [ %.060, %133 ], [ %.060, %132 ], [ %.060, %122 ], [ %.060, %112 ], [ %.060, %110 ], [ %.060, %103 ], [ %.060, %99 ], [ %.060, %98 ], [ %.060, %94 ], [ %.060, %93 ], [ %.060, %92 ], [ %.060, %82 ], [ %.060, %72 ], [ %.060, %71 ], [ %.060, %70 ], [ %.060, %65 ], [ %.060, %63 ], [ %.060, %51 ], [ %.060, %41 ], [ %.060, %40 ], [ %.060, %38 ], [ %.060, %26 ], [ %.060, %16 ]
  %.0.be = phi i32 [ %.0, %15 ], [ -900737882, %406 ], [ -1618500870, %404 ], [ -613836465, %396 ], [ -1470410324, %395 ], [ 936332522, %393 ], [ 2124651733, %391 ], [ -2134614483, %390 ], [ 156918895, %389 ], [ -810980138, %388 ], [ -1521051685, %387 ], [ -1983382532, %385 ], [ -835081609, %384 ], [ -1959390628, %383 ], [ -1279119269, %381 ], [ %380, %370 ], [ %369, %360 ], [ -805425188, %359 ], [ %358, %348 ], [ %347, %338 ], [ -150454800, %336 ], [ -434979228, %329 ], [ -658982478, %328 ], [ %327, %311 ], [ %310, %301 ], [ %300, %295 ], [ %294, %291 ], [ -150454800, %290 ], [ %289, %280 ], [ %279, %270 ], [ %269, %266 ], [ -1279119269, %265 ], [ -254791743, %264 ], [ %263, %253 ], [ %252, %243 ], [ -383346023, %242 ], [ 1005883426, %241 ], [ 369132318, %240 ], [ -1268581000, %239 ], [ -1403423134, %238 ], [ %237, %227 ], [ %226, %217 ], [ -1403423134, %214 ], [ %213, %210 ], [ %209, %208 ], [ %207, %193 ], [ %192, %183 ], [ %182, %179 ], [ 1005883426, %178 ], [ %177, %168 ], [ %167, %158 ], [ -383346023, %157 ], [ %156, %147 ], [ %146, %137 ], [ %136, %134 ], [ 1364199103, %133 ], [ -1796335581, %132 ], [ %131, %122 ], [ %121, %112 ], [ -971853298, %110 ], [ %109, %103 ], [ %102, %99 ], [ 1364199103, %98 ], [ %97, %94 ], [ -254791743, %93 ], [ -1413474587, %92 ], [ %91, %82 ], [ %81, %72 ], [ 1150486203, %71 ], [ -420384353, %70 ], [ 752469707, %65 ], [ %64, %63 ], [ %62, %51 ], [ %50, %41 ], [ -420384353, %40 ], [ %39, %38 ], [ %37, %26 ], [ %25, %16 ]
  br label %15

16:                                               ; preds = %15
  %17 = load i32, i32* @x.4, align 4
  %18 = load i32, i32* @y.5, align 4
  %19 = add i32 %17, -1
  %20 = mul i32 %19, %17
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %18, 10
  %24 = or i1 %23, %22
  %25 = select i1 %24, i32 -1959390628, i32 9653882
  br label %.backedge

26:                                               ; preds = %15
  %27 = load i32, i32* @n, align 4
  %28 = icmp slt i32 %.078, %27
  store i1 %28, i1* %3, align 1
  %29 = load i32, i32* @x.4, align 4
  %30 = load i32, i32* @y.5, align 4
  %31 = add i32 %29, -1
  %32 = mul i32 %31, %29
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %35, %34
  %37 = select i1 %36, i32 1516033292, i32 9653882
  br label %.backedge

38:                                               ; preds = %15
  %.0..0..0. = load volatile i1, i1* %3, align 1
  %39 = select i1 %.0..0..0., i32 -1534707316, i32 199567668
  br label %.backedge

40:                                               ; preds = %15
  br label %.backedge

41:                                               ; preds = %15
  %42 = load i32, i32* @x.4, align 4
  %43 = load i32, i32* @y.5, align 4
  %44 = add i32 %42, -1
  %45 = mul i32 %44, %42
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %48, %47
  %50 = select i1 %49, i32 -835081609, i32 -624366284
  br label %.backedge

51:                                               ; preds = %15
  %52 = load i32, i32* @m, align 4
  %53 = icmp slt i32 %.076, %52
  store i1 %53, i1* %2, align 1
  %54 = load i32, i32* @x.4, align 4
  %55 = load i32, i32* @y.5, align 4
  %56 = add i32 %54, -1
  %57 = mul i32 %56, %54
  %58 = and i32 %57, 1
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %55, 10
  %61 = or i1 %60, %59
  %62 = select i1 %61, i32 1428322569, i32 -624366284
  br label %.backedge

63:                                               ; preds = %15
  %.0..0..0.58 = load volatile i1, i1* %2, align 1
  %64 = select i1 %.0..0..0.58, i32 566521961, i32 1128381515
  br label %.backedge

65:                                               ; preds = %15
  %66 = sext i32 %.078 to i64
  %67 = sext i32 %.076 to i64
  %68 = getelementptr inbounds [310 x [310 x i8]], [310 x [310 x i8]]* @arr, i64 0, i64 %66, i64 %67
  %69 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %68)
  br label %.backedge

70:                                               ; preds = %15
  %.neg86 = add i32 %.076, 1
  br label %.backedge

71:                                               ; preds = %15
  br label %.backedge

72:                                               ; preds = %15
  %73 = load i32, i32* @x.4, align 4
  %74 = load i32, i32* @y.5, align 4
  %75 = add i32 %73, -1
  %76 = mul i32 %75, %73
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %79, %78
  %81 = select i1 %80, i32 -1983382532, i32 5634745
  br label %.backedge

82:                                               ; preds = %15
  %.neg85 = add i32 %.078, 1
  %83 = load i32, i32* @x.4, align 4
  %84 = load i32, i32* @y.5, align 4
  %85 = add i32 %83, -1
  %86 = mul i32 %85, %83
  %87 = and i32 %86, 1
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %84, 10
  %90 = or i1 %89, %88
  %91 = select i1 %90, i32 -1312059636, i32 5634745
  br label %.backedge

92:                                               ; preds = %15
  br label %.backedge

93:                                               ; preds = %15
  br label %.backedge

94:                                               ; preds = %15
  %95 = load i32, i32* @n, align 4
  %96 = icmp slt i32 %.070, %95
  %97 = select i1 %96, i32 -1508636707, i32 567574975
  br label %.backedge

98:                                               ; preds = %15
  br label %.backedge

99:                                               ; preds = %15
  %100 = load i32, i32* @m, align 4
  %101 = icmp slt i32 %.066, %100
  %102 = select i1 %101, i32 1455543551, i32 -1683430877
  br label %.backedge

103:                                              ; preds = %15
  %104 = sext i32 %.070 to i64
  %105 = sext i32 %.066 to i64
  %106 = getelementptr inbounds [310 x [310 x i8]], [310 x [310 x i8]]* @arr, i64 0, i64 %104, i64 %105
  %107 = load i8, i8* %106, align 1
  %108 = icmp eq i8 %107, 35
  %109 = select i1 %108, i32 -863198005, i32 -971853298
  br label %.backedge

110:                                              ; preds = %15
  %111 = add i32 %.068, 1
  br label %.backedge

112:                                              ; preds = %15
  %113 = load i32, i32* @x.4, align 4
  %114 = load i32, i32* @y.5, align 4
  %115 = add i32 %113, -1
  %116 = mul i32 %115, %113
  %117 = and i32 %116, 1
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %119, %118
  %121 = select i1 %120, i32 -1521051685, i32 1669868251
  br label %.backedge

122:                                              ; preds = %15
  %123 = load i32, i32* @x.4, align 4
  %124 = load i32, i32* @y.5, align 4
  %125 = add i32 %123, -1
  %126 = mul i32 %125, %123
  %127 = and i32 %126, 1
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %129, %128
  %131 = select i1 %130, i32 1240327033, i32 1669868251
  br label %.backedge

132:                                              ; preds = %15
  br label %.backedge

133:                                              ; preds = %15
  %.neg84 = add i32 %.066, 1
  br label %.backedge

134:                                              ; preds = %15
  %135 = icmp eq i32 %.068, 0
  %136 = select i1 %135, i32 -356299979, i32 1340935414
  br label %.backedge

137:                                              ; preds = %15
  %138 = load i32, i32* @x.4, align 4
  %139 = load i32, i32* @y.5, align 4
  %140 = add i32 %138, -1
  %141 = mul i32 %140, %138
  %142 = and i32 %141, 1
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %144, %143
  %146 = select i1 %145, i32 -810980138, i32 1609626887
  br label %.backedge

147:                                              ; preds = %15
  %148 = load i32, i32* @x.4, align 4
  %149 = load i32, i32* @y.5, align 4
  %150 = add i32 %148, -1
  %151 = mul i32 %150, %148
  %152 = and i32 %151, 1
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %154, %153
  %156 = select i1 %155, i32 -289740245, i32 1609626887
  br label %.backedge

157:                                              ; preds = %15
  br label %.backedge

158:                                              ; preds = %15
  %159 = load i32, i32* @x.4, align 4
  %160 = load i32, i32* @y.5, align 4
  %161 = add i32 %159, -1
  %162 = mul i32 %161, %159
  %163 = and i32 %162, 1
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %165, %164
  %167 = select i1 %166, i32 156918895, i32 -820829232
  br label %.backedge

168:                                              ; preds = %15
  %169 = load i32, i32* @x.4, align 4
  %170 = load i32, i32* @y.5, align 4
  %171 = add i32 %169, -1
  %172 = mul i32 %171, %169
  %173 = and i32 %172, 1
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %175, %174
  %177 = select i1 %176, i32 -35986623, i32 -820829232
  br label %.backedge

178:                                              ; preds = %15
  br label %.backedge

179:                                              ; preds = %15
  %180 = load i32, i32* @m, align 4
  %181 = icmp slt i32 %.064, %180
  %182 = select i1 %181, i32 941641855, i32 2067795943
  br label %.backedge

183:                                              ; preds = %15
  %184 = load i32, i32* @x.4, align 4
  %185 = load i32, i32* @y.5, align 4
  %186 = add i32 %184, -1
  %187 = mul i32 %186, %184
  %188 = and i32 %187, 1
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %185, 10
  %191 = or i1 %190, %189
  %192 = select i1 %191, i32 -2134614483, i32 427021314
  br label %.backedge

193:                                              ; preds = %15
  %194 = sext i32 %.070 to i64
  %195 = sext i32 %.064 to i64
  %196 = getelementptr inbounds [310 x [310 x i8]], [310 x [310 x i8]]* @arr, i64 0, i64 %194, i64 %195
  %197 = load i8, i8* %196, align 1
  %198 = icmp eq i8 %197, 35
  store i1 %198, i1* %1, align 1
  %199 = load i32, i32* @x.4, align 4
  %200 = load i32, i32* @y.5, align 4
  %201 = add i32 %199, -1
  %202 = mul i32 %201, %199
  %203 = and i32 %202, 1
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %205, %204
  %207 = select i1 %206, i32 470253160, i32 427021314
  br label %.backedge

208:                                              ; preds = %15
  %.0..0..0.59 = load volatile i1, i1* %1, align 1
  %209 = select i1 %.0..0..0.59, i32 -469935862, i32 -1268581000
  br label %.backedge

210:                                              ; preds = %15
  %211 = load i32, i32* @cnt, align 4
  %.neg82 = add i32 %211, 1
  store i32 %.neg82, i32* @cnt, align 4
  %.neg83 = add i32 %.068, -1
  %212 = icmp eq i32 %.neg83, 0
  %213 = select i1 %212, i32 1118001576, i32 1344249579
  br label %.backedge

214:                                              ; preds = %15
  %215 = load i32, i32* @m, align 4
  %216 = add i32 %215, -1
  tail call void @_Z4markiiii(i32 %.074, i32 %.072, i32 %.070, i32 %216)
  br label %.backedge

217:                                              ; preds = %15
  %218 = load i32, i32* @x.4, align 4
  %219 = load i32, i32* @y.5, align 4
  %220 = add i32 %218, -1
  %221 = mul i32 %220, %218
  %222 = and i32 %221, 1
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %224, %223
  %226 = select i1 %225, i32 2124651733, i32 -128194179
  br label %.backedge

227:                                              ; preds = %15
  tail call void @_Z4markiiii(i32 %.074, i32 %.072, i32 %.070, i32 %.064)
  %228 = add i32 %.064, 1
  %229 = load i32, i32* @x.4, align 4
  %230 = load i32, i32* @y.5, align 4
  %231 = add i32 %229, -1
  %232 = mul i32 %231, %229
  %233 = and i32 %232, 1
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %230, 10
  %236 = or i1 %235, %234
  %237 = select i1 %236, i32 299473794, i32 -128194179
  br label %.backedge

238:                                              ; preds = %15
  br label %.backedge

239:                                              ; preds = %15
  br label %.backedge

240:                                              ; preds = %15
  br label %.backedge

241:                                              ; preds = %15
  %.neg81 = add i32 %.064, 1
  br label %.backedge

242:                                              ; preds = %15
  %.neg80 = add i32 %.070, 1
  br label %.backedge

243:                                              ; preds = %15
  %244 = load i32, i32* @x.4, align 4
  %245 = load i32, i32* @y.5, align 4
  %246 = add i32 %244, -1
  %247 = mul i32 %246, %244
  %248 = and i32 %247, 1
  %249 = icmp eq i32 %248, 0
  %250 = icmp slt i32 %245, 10
  %251 = or i1 %250, %249
  %252 = select i1 %251, i32 936332522, i32 1772116873
  br label %.backedge

253:                                              ; preds = %15
  %254 = add i32 %.070, 1
  %255 = load i32, i32* @x.4, align 4
  %256 = load i32, i32* @y.5, align 4
  %257 = add i32 %255, -1
  %258 = mul i32 %257, %255
  %259 = and i32 %258, 1
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %256, 10
  %262 = or i1 %261, %260
  %263 = select i1 %262, i32 -968589377, i32 1772116873
  br label %.backedge

264:                                              ; preds = %15
  br label %.backedge

265:                                              ; preds = %15
  br label %.backedge

266:                                              ; preds = %15
  %267 = load i32, i32* @n, align 4
  %268 = icmp slt i32 %.062, %267
  %269 = select i1 %268, i32 1255016907, i32 -504675717
  br label %.backedge

270:                                              ; preds = %15
  %271 = load i32, i32* @x.4, align 4
  %272 = load i32, i32* @y.5, align 4
  %273 = add i32 %271, -1
  %274 = mul i32 %273, %271
  %275 = and i32 %274, 1
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %272, 10
  %278 = or i1 %277, %276
  %279 = select i1 %278, i32 -1470410324, i32 1971865806
  br label %.backedge

280:                                              ; preds = %15
  %281 = load i32, i32* @x.4, align 4
  %282 = load i32, i32* @y.5, align 4
  %283 = add i32 %281, -1
  %284 = mul i32 %283, %281
  %285 = and i32 %284, 1
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %287, %286
  %289 = select i1 %288, i32 -417041800, i32 1971865806
  br label %.backedge

290:                                              ; preds = %15
  br label %.backedge

291:                                              ; preds = %15
  %292 = load i32, i32* @m, align 4
  %293 = icmp slt i32 %.060, %292
  %294 = select i1 %293, i32 -50670433, i32 593162508
  br label %.backedge

295:                                              ; preds = %15
  %296 = sext i32 %.062 to i64
  %297 = sext i32 %.060 to i64
  %298 = getelementptr inbounds [310 x [310 x i32]], [310 x [310 x i32]]* @ans, i64 0, i64 %296, i64 %297
  %299 = load i32, i32* %298, align 4
  %.not = icmp eq i32 %299, 0
  %300 = select i1 %.not, i32 1109207215, i32 -658982478
  br label %.backedge

301:                                              ; preds = %15
  %302 = load i32, i32* @x.4, align 4
  %303 = load i32, i32* @y.5, align 4
  %304 = add i32 %302, -1
  %305 = mul i32 %304, %302
  %306 = and i32 %305, 1
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %303, 10
  %309 = or i1 %308, %307
  %310 = select i1 %309, i32 -613836465, i32 -701009759
  br label %.backedge

311:                                              ; preds = %15
  %312 = add i32 %.062, -1
  %313 = sext i32 %312 to i64
  %314 = sext i32 %.060 to i64
  %315 = getelementptr inbounds [310 x [310 x i32]], [310 x [310 x i32]]* @ans, i64 0, i64 %313, i64 %314
  %316 = load i32, i32* %315, align 4
  %317 = sext i32 %.062 to i64
  %318 = getelementptr inbounds [310 x [310 x i32]], [310 x [310 x i32]]* @ans, i64 0, i64 %317, i64 %314
  store i32 %316, i32* %318, align 4
  %319 = load i32, i32* @x.4, align 4
  %320 = load i32, i32* @y.5, align 4
  %321 = add i32 %319, -1
  %322 = mul i32 %321, %319
  %323 = and i32 %322, 1
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %320, 10
  %326 = or i1 %325, %324
  %327 = select i1 %326, i32 1459462226, i32 -701009759
  br label %.backedge

328:                                              ; preds = %15
  br label %.backedge

329:                                              ; preds = %15
  %330 = sext i32 %.062 to i64
  %331 = sext i32 %.060 to i64
  %332 = getelementptr inbounds [310 x [310 x i32]], [310 x [310 x i32]]* @ans, i64 0, i64 %330, i64 %331
  %333 = load i32, i32* %332, align 4
  %334 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %333)
  %335 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) %334, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  br label %.backedge

336:                                              ; preds = %15
  %337 = add i32 %.060, 1
  br label %.backedge

338:                                              ; preds = %15
  %339 = load i32, i32* @x.4, align 4
  %340 = load i32, i32* @y.5, align 4
  %341 = add i32 %339, -1
  %342 = mul i32 %341, %339
  %343 = and i32 %342, 1
  %344 = icmp eq i32 %343, 0
  %345 = icmp slt i32 %340, 10
  %346 = or i1 %345, %344
  %347 = select i1 %346, i32 -1618500870, i32 -529199754
  br label %.backedge

348:                                              ; preds = %15
  %349 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  %350 = load i32, i32* @x.4, align 4
  %351 = load i32, i32* @y.5, align 4
  %352 = add i32 %350, -1
  %353 = mul i32 %352, %350
  %354 = and i32 %353, 1
  %355 = icmp eq i32 %354, 0
  %356 = icmp slt i32 %351, 10
  %357 = or i1 %356, %355
  %358 = select i1 %357, i32 2067325856, i32 -529199754
  br label %.backedge

359:                                              ; preds = %15
  br label %.backedge

360:                                              ; preds = %15
  %361 = load i32, i32* @x.4, align 4
  %362 = load i32, i32* @y.5, align 4
  %363 = add i32 %361, -1
  %364 = mul i32 %363, %361
  %365 = and i32 %364, 1
  %366 = icmp eq i32 %365, 0
  %367 = icmp slt i32 %362, 10
  %368 = or i1 %367, %366
  %369 = select i1 %368, i32 -900737882, i32 -1517602733
  br label %.backedge

370:                                              ; preds = %15
  %371 = add i32 %.062, 1
  %372 = load i32, i32* @x.4, align 4
  %373 = load i32, i32* @y.5, align 4
  %374 = add i32 %372, -1
  %375 = mul i32 %374, %372
  %376 = and i32 %375, 1
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %378, %377
  %380 = select i1 %379, i32 -2125657046, i32 -1517602733
  br label %.backedge

381:                                              ; preds = %15
  br label %.backedge

382:                                              ; preds = %15
  ret i32 0

383:                                              ; preds = %15
  br label %.backedge

384:                                              ; preds = %15
  br label %.backedge

385:                                              ; preds = %15
  %386 = add i32 %.078, 1
  br label %.backedge

387:                                              ; preds = %15
  br label %.backedge

388:                                              ; preds = %15
  br label %.backedge

389:                                              ; preds = %15
  br label %.backedge

390:                                              ; preds = %15
  br label %.backedge

391:                                              ; preds = %15
  tail call void @_Z4markiiii(i32 %.074, i32 %.072, i32 %.070, i32 %.064)
  %392 = add i32 %.064, 1
  br label %.backedge

393:                                              ; preds = %15
  %394 = add i32 %.070, 1
  br label %.backedge

395:                                              ; preds = %15
  br label %.backedge

396:                                              ; preds = %15
  %397 = add i32 %.062, -1
  %398 = sext i32 %397 to i64
  %399 = sext i32 %.060 to i64
  %400 = getelementptr inbounds [310 x [310 x i32]], [310 x [310 x i32]]* @ans, i64 0, i64 %398, i64 %399
  %401 = load i32, i32* %400, align 4
  %402 = sext i32 %.062 to i64
  %403 = getelementptr inbounds [310 x [310 x i32]], [310 x [310 x i32]]* @ans, i64 0, i64 %402, i64 %399
  store i32 %401, i32* %403, align 4
  br label %.backedge

404:                                              ; preds = %15
  %405 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  br label %.backedge

406:                                              ; preds = %15
  %.neg = add i32 %.062, 1
  br label %.backedge
}

declare zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) local_unnamed_addr #1

declare %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"*, %"class.std::basic_ostream"*) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s551210105.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
