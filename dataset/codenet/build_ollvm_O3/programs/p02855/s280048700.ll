; ModuleID = 'build_ollvm/programs/p02855/s280048700.ll'
source_filename = "Project_CodeNet_C++1400/p02855/s280048700.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_Z1sB5cxx11 = global [300 x %"class.std::__cxx11::basic_string"] zeroinitializer, align 16
@num = local_unnamed_addr global [300 x [300 x i32]] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s280048700.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.2 = common local_unnamed_addr global i32 0
@y.3 = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0
@x.6 = common local_unnamed_addr global i32 0
@y.7 = common local_unnamed_addr global i32 0
@x.8 = common local_unnamed_addr global i32 0
@y.9 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define internal fastcc void @__cxx_global_var_init.1() unnamed_addr #4 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.2, align 4
  %4 = load i32, i32* @y.3, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer.outer

.outer.outer:                                     ; preds = %.outer.outer.backedge, %0
  %.03.ph.ph = phi i32 [ 946494959, %0 ], [ %.03.ph.ph.be, %.outer.outer.backedge ]
  %.0.ph.ph = phi %"class.std::__cxx11::basic_string"* [ undef, %0 ], [ %.0.ph.ph.be, %.outer.outer.backedge ]
  %10 = load i32, i32* @x.2, align 4
  %11 = load i32, i32* @y.3, align 4
  %12 = add i32 %10, -1
  %13 = mul i32 %12, %10
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %16, %15
  %18 = select i1 %17, i32 -122230182, i32 -331205219
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %.outer.outer
  %.03.ph = phi i32 [ %.03.ph.ph, %.outer.outer ], [ %.03.ph.be, %.outer.backedge ]
  br label %19

19:                                               ; preds = %.outer, %19
  switch i32 %.03.ph, label %19 [
    i32 946494959, label %20
    i32 -466701238, label %.outer.backedge
    i32 -122230182, label %.outer.outer.backedge
    i32 872593592, label %23
    i32 1587835691, label %27
    i32 -331205219, label %29
  ]

20:                                               ; preds = %19
  %.0..0..0.1 = load volatile i1, i1* %2, align 1
  %.0..0..0.2 = load volatile i1, i1* %1, align 1
  %21 = or i1 %.0..0..0.1, %.0..0..0.2
  %22 = select i1 %21, i32 -466701238, i32 -331205219
  br label %.outer.backedge

.outer.outer.backedge:                            ; preds = %19, %23
  %.03.ph.ph.be = phi i32 [ %26, %23 ], [ 872593592, %19 ]
  %.0.ph.ph.be = phi %"class.std::__cxx11::basic_string"* [ %24, %23 ], [ getelementptr inbounds ([300 x %"class.std::__cxx11::basic_string"], [300 x %"class.std::__cxx11::basic_string"]* @_Z1sB5cxx11, i64 0, i64 0), %19 ]
  br label %.outer.outer

23:                                               ; preds = %19
  tail call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_string"* %.0.ph.ph) #6
  %24 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %.0.ph.ph, i64 1
  %25 = icmp eq %"class.std::__cxx11::basic_string"* %24, getelementptr inbounds ([300 x %"class.std::__cxx11::basic_string"], [300 x %"class.std::__cxx11::basic_string"]* @_Z1sB5cxx11, i64 1, i64 0)
  %26 = select i1 %25, i32 1587835691, i32 872593592
  br label %.outer.outer.backedge

27:                                               ; preds = %19
  %28 = tail call i32 @__cxa_atexit(void (i8*)* nonnull @__cxx_global_array_dtor, i8* null, i8* nonnull @__dso_handle) #6
  ret void

29:                                               ; preds = %19
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %19, %29, %20
  %.03.ph.be = phi i32 [ %22, %20 ], [ -466701238, %29 ], [ %18, %19 ]
  br label %.outer
}

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #2

; Function Attrs: noinline nounwind uwtable
define internal void @__cxx_global_array_dtor(i8* nocapture readnone %0) #4 section ".text.startup" {
  br label %.outer

.outer:                                           ; preds = %3, %1
  %.01.ph = phi i32 [ %6, %3 ], [ -833858056, %1 ]
  %.0.ph = phi %"class.std::__cxx11::basic_string"* [ %4, %3 ], [ getelementptr inbounds ([300 x %"class.std::__cxx11::basic_string"], [300 x %"class.std::__cxx11::basic_string"]* @_Z1sB5cxx11, i64 1, i64 0), %1 ]
  br label %2

2:                                                ; preds = %.outer, %2
  switch i32 %.01.ph, label %2 [
    i32 -833858056, label %3
    i32 -780565791, label %7
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %.0.ph, i64 -1
  tail call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* nonnull %4) #6
  %5 = icmp eq %"class.std::__cxx11::basic_string"* %4, getelementptr inbounds ([300 x %"class.std::__cxx11::basic_string"], [300 x %"class.std::__cxx11::basic_string"]* @_Z1sB5cxx11, i64 0, i64 0)
  %6 = select i1 %5, i32 -780565791, i32 -833858056
  br label %.outer

7:                                                ; preds = %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #2

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #5 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %4)
  %8 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %7, i32* nonnull dereferenceable(4) %5)
  %9 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %8, i32* nonnull dereferenceable(4) %6)
  br label %10

10:                                               ; preds = %.backedge, %0
  %.094 = phi i32 [ 1, %0 ], [ %.094.be, %.backedge ]
  %.092 = phi i32 [ 0, %0 ], [ %.092.be, %.backedge ]
  %.090 = phi i32 [ undef, %0 ], [ %.090.be, %.backedge ]
  %.088 = phi i32 [ undef, %0 ], [ %.088.be, %.backedge ]
  %.086 = phi i32 [ undef, %0 ], [ %.086.be, %.backedge ]
  %.084 = phi i32 [ undef, %0 ], [ %.084.be, %.backedge ]
  %.082 = phi i32 [ undef, %0 ], [ %.082.be, %.backedge ]
  %.080 = phi i32 [ undef, %0 ], [ %.080.be, %.backedge ]
  %.078 = phi i32 [ undef, %0 ], [ %.078.be, %.backedge ]
  %.076 = phi i32 [ undef, %0 ], [ %.076.be, %.backedge ]
  %.074 = phi i32 [ undef, %0 ], [ %.074.be, %.backedge ]
  %.0 = phi i32 [ -714041015, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -714041015, label %11
    i32 -981268871, label %15
    i32 -145080186, label %25
    i32 368729659, label %38
    i32 -191383312, label %39
    i32 -925575284, label %43
    i32 -510323707, label %46
    i32 1044326763, label %50
    i32 1440713461, label %58
    i32 -1125862150, label %66
    i32 496481522, label %72
    i32 -1476463891, label %73
    i32 886538864, label %83
    i32 -1274345958, label %94
    i32 1150595160, label %96
    i32 -470483210, label %106
    i32 128105573, label %122
    i32 -645515911, label %123
    i32 606821447, label %133
    i32 -262478505, label %144
    i32 -1593442190, label %145
    i32 1395323947, label %146
    i32 -249247688, label %156
    i32 367311294, label %166
    i32 767059741, label %167
    i32 -419802522, label %168
    i32 522920644, label %169
    i32 -1849938486, label %170
    i32 -1601209938, label %172
    i32 -535677596, label %173
    i32 -1110443620, label %177
    i32 868683928, label %187
    i32 1762487339, label %197
    i32 -1094553543, label %198
    i32 1929096814, label %202
    i32 -2139681647, label %204
    i32 667947473, label %214
    i32 -1703308663, label %229
    i32 96140869, label %231
    i32 674919487, label %239
    i32 -1785487777, label %245
    i32 1832803820, label %248
    i32 538849727, label %258
    i32 -953086484, label %268
    i32 -1759985318, label %269
    i32 17667391, label %271
    i32 -2056301349, label %278
    i32 1121164538, label %280
    i32 -2047481250, label %290
    i32 695404036, label %301
    i32 314774119, label %302
    i32 -364201774, label %303
    i32 -965950013, label %305
    i32 -136609386, label %306
    i32 -1622374681, label %316
    i32 -1276815132, label %327
    i32 602970049, label %328
    i32 -1994668808, label %329
    i32 1667390621, label %339
    i32 1909180916, label %351
    i32 -649180173, label %353
    i32 1844627811, label %354
    i32 1186692626, label %358
    i32 1626198561, label %362
    i32 644251144, label %369
    i32 1952289085, label %376
    i32 991279106, label %386
    i32 803035444, label %396
    i32 -1217116769, label %397
    i32 499731484, label %399
    i32 -1682739667, label %400
    i32 -1173474623, label %402
    i32 -384665256, label %403
    i32 -551177150, label %407
    i32 -1539972915, label %408
    i32 -383090997, label %415
    i32 871908122, label %417
    i32 -2536728, label %418
    i32 -2035643008, label %419
    i32 -433510116, label %420
    i32 -330842128, label %421
    i32 391463670, label %423
    i32 -1910903754, label %425
    i32 1911290570, label %426
  ]

.backedge:                                        ; preds = %10, %426, %425, %423, %421, %420, %419, %418, %417, %415, %408, %407, %403, %400, %399, %397, %396, %386, %376, %369, %362, %358, %354, %353, %351, %339, %329, %328, %327, %316, %306, %305, %303, %302, %301, %290, %280, %278, %271, %269, %268, %258, %248, %245, %239, %231, %229, %214, %204, %202, %198, %197, %187, %177, %173, %172, %170, %169, %168, %167, %166, %156, %146, %145, %144, %133, %123, %122, %106, %96, %94, %83, %73, %72, %66, %58, %50, %46, %43, %39, %38, %25, %15, %11
  %.094.be = phi i32 [ %.094, %10 ], [ %.094, %426 ], [ %.094, %425 ], [ %.094, %423 ], [ %.094, %421 ], [ %.094, %420 ], [ %.094, %419 ], [ %.094, %418 ], [ %.094, %417 ], [ %.094, %415 ], [ %.094, %408 ], [ %.094, %407 ], [ %.094, %403 ], [ %.094, %400 ], [ %.094, %399 ], [ %.094, %397 ], [ %.094, %396 ], [ %.094, %386 ], [ %.094, %376 ], [ %.094, %369 ], [ %.094, %362 ], [ %.094, %358 ], [ %.094, %354 ], [ %.094, %353 ], [ %.094, %351 ], [ %.094, %339 ], [ %.094, %329 ], [ %.094, %328 ], [ %.094, %327 ], [ %.094, %316 ], [ %.094, %306 ], [ %.094, %305 ], [ %.094, %303 ], [ %.094, %302 ], [ %.094, %301 ], [ %.094, %290 ], [ %.094, %280 ], [ %.094, %278 ], [ %.094, %271 ], [ %.094, %269 ], [ %.094, %268 ], [ %.094, %258 ], [ %.094, %248 ], [ %.094, %245 ], [ %.094, %239 ], [ %.094, %231 ], [ %.094, %229 ], [ %.094, %214 ], [ %.094, %204 ], [ %.094, %202 ], [ %.094, %198 ], [ %.094, %197 ], [ %.094, %187 ], [ %.094, %177 ], [ %.094, %173 ], [ %.094, %172 ], [ %.094, %170 ], [ %.094, %169 ], [ %.094, %168 ], [ %.094, %167 ], [ %.094, %166 ], [ %.094, %156 ], [ %.094, %146 ], [ %.094, %145 ], [ %.094, %144 ], [ %.094, %133 ], [ %.094, %123 ], [ %.094, %122 ], [ %.094, %106 ], [ %.094, %96 ], [ %.094, %94 ], [ %.094, %83 ], [ %.094, %73 ], [ %.094, %72 ], [ %.neg100, %66 ], [ %.094, %58 ], [ %.094, %50 ], [ %.094, %46 ], [ %.094, %43 ], [ %.094, %39 ], [ %.094, %38 ], [ %.094, %25 ], [ %.094, %15 ], [ %.094, %11 ]
  %.092.be = phi i32 [ %.092, %10 ], [ %.092, %426 ], [ %.092, %425 ], [ %.092, %423 ], [ %.092, %421 ], [ %.092, %420 ], [ %.092, %419 ], [ %.092, %418 ], [ %.092, %417 ], [ %.092, %415 ], [ %.092, %408 ], [ %.092, %407 ], [ %.092, %403 ], [ %.092, %400 ], [ %.092, %399 ], [ %.092, %397 ], [ %.092, %396 ], [ %.092, %386 ], [ %.092, %376 ], [ %.092, %369 ], [ %.092, %362 ], [ %.092, %358 ], [ %.092, %354 ], [ %.092, %353 ], [ %.092, %351 ], [ %.092, %339 ], [ %.092, %329 ], [ %.092, %328 ], [ %.092, %327 ], [ %.092, %316 ], [ %.092, %306 ], [ %.092, %305 ], [ %.092, %303 ], [ %.092, %302 ], [ %.092, %301 ], [ %.092, %290 ], [ %.092, %280 ], [ %.092, %278 ], [ %.092, %271 ], [ %.092, %269 ], [ %.092, %268 ], [ %.092, %258 ], [ %.092, %248 ], [ %.092, %245 ], [ %.092, %239 ], [ %.092, %231 ], [ %.092, %229 ], [ %.092, %214 ], [ %.092, %204 ], [ %.092, %202 ], [ %.092, %198 ], [ %.092, %197 ], [ %.092, %187 ], [ %.092, %177 ], [ %.092, %173 ], [ %.092, %172 ], [ %171, %170 ], [ %.092, %169 ], [ %.092, %168 ], [ %.092, %167 ], [ %.092, %166 ], [ %.092, %156 ], [ %.092, %146 ], [ %.092, %145 ], [ %.092, %144 ], [ %.092, %133 ], [ %.092, %123 ], [ %.092, %122 ], [ %.092, %106 ], [ %.092, %96 ], [ %.092, %94 ], [ %.092, %83 ], [ %.092, %73 ], [ %.092, %72 ], [ %.092, %66 ], [ %.092, %58 ], [ %.092, %50 ], [ %.092, %46 ], [ %.092, %43 ], [ %.092, %39 ], [ %.092, %38 ], [ %.092, %25 ], [ %.092, %15 ], [ %.092, %11 ]
  %.090.be = phi i32 [ %.090, %10 ], [ %.090, %426 ], [ %.090, %425 ], [ %.090, %423 ], [ %.090, %421 ], [ %.090, %420 ], [ %.090, %419 ], [ %.090, %418 ], [ %.090, %417 ], [ %.090, %415 ], [ %.090, %408 ], [ %.090, %407 ], [ 0, %403 ], [ %.090, %400 ], [ %.090, %399 ], [ %.090, %397 ], [ %.090, %396 ], [ %.090, %386 ], [ %.090, %376 ], [ %.090, %369 ], [ %.090, %362 ], [ %.090, %358 ], [ %.090, %354 ], [ %.090, %353 ], [ %.090, %351 ], [ %.090, %339 ], [ %.090, %329 ], [ %.090, %328 ], [ %.090, %327 ], [ %.090, %316 ], [ %.090, %306 ], [ %.090, %305 ], [ %.090, %303 ], [ %.090, %302 ], [ %.090, %301 ], [ %.090, %290 ], [ %.090, %280 ], [ %.090, %278 ], [ %.090, %271 ], [ %.090, %269 ], [ %.090, %268 ], [ %.090, %258 ], [ %.090, %248 ], [ %.090, %245 ], [ %.090, %239 ], [ %.090, %231 ], [ %.090, %229 ], [ %.090, %214 ], [ %.090, %204 ], [ %.090, %202 ], [ %.090, %198 ], [ %.090, %197 ], [ %.090, %187 ], [ %.090, %177 ], [ %.090, %173 ], [ %.090, %172 ], [ %.090, %170 ], [ %.090, %169 ], [ %.090, %168 ], [ %.090, %167 ], [ %.090, %166 ], [ %.090, %156 ], [ %.090, %146 ], [ %.neg99, %145 ], [ %.090, %144 ], [ %.090, %133 ], [ %.090, %123 ], [ %.090, %122 ], [ %.090, %106 ], [ %.090, %96 ], [ %.090, %94 ], [ %.090, %83 ], [ %.090, %73 ], [ %.090, %72 ], [ %.090, %66 ], [ %.090, %58 ], [ %.090, %50 ], [ %.090, %46 ], [ %.090, %43 ], [ %.090, %39 ], [ %.090, %38 ], [ 0, %25 ], [ %.090, %15 ], [ %.090, %11 ]
  %.088.be = phi i32 [ %.088, %10 ], [ %.088, %426 ], [ %.088, %425 ], [ %.088, %423 ], [ %.088, %421 ], [ %.088, %420 ], [ %.088, %419 ], [ %.088, %418 ], [ %.088, %417 ], [ %.088, %415 ], [ %.088, %408 ], [ %.088, %407 ], [ 0, %403 ], [ %.088, %400 ], [ %.088, %399 ], [ %.088, %397 ], [ %.088, %396 ], [ %.088, %386 ], [ %.088, %376 ], [ %.088, %369 ], [ %.088, %362 ], [ %.088, %358 ], [ %.088, %354 ], [ %.088, %353 ], [ %.088, %351 ], [ %.088, %339 ], [ %.088, %329 ], [ %.088, %328 ], [ %.088, %327 ], [ %.088, %316 ], [ %.088, %306 ], [ %.088, %305 ], [ %.088, %303 ], [ %.088, %302 ], [ %.088, %301 ], [ %.088, %290 ], [ %.088, %280 ], [ %.088, %278 ], [ %.088, %271 ], [ %.088, %269 ], [ %.088, %268 ], [ %.088, %258 ], [ %.088, %248 ], [ %.088, %245 ], [ %.088, %239 ], [ %.088, %231 ], [ %.088, %229 ], [ %.088, %214 ], [ %.088, %204 ], [ %.088, %202 ], [ %.088, %198 ], [ %.088, %197 ], [ %.088, %187 ], [ %.088, %177 ], [ %.088, %173 ], [ %.088, %172 ], [ %.088, %170 ], [ %.088, %169 ], [ %.neg, %168 ], [ %.088, %167 ], [ %.088, %166 ], [ %.088, %156 ], [ %.088, %146 ], [ %.088, %145 ], [ %.088, %144 ], [ %.088, %133 ], [ %.088, %123 ], [ %.088, %122 ], [ %.088, %106 ], [ %.088, %96 ], [ %.088, %94 ], [ %.088, %83 ], [ %.088, %73 ], [ %.088, %72 ], [ %.088, %66 ], [ %.088, %58 ], [ %.088, %50 ], [ %.088, %46 ], [ %.088, %43 ], [ %.088, %39 ], [ %.088, %38 ], [ 0, %25 ], [ %.088, %15 ], [ %.088, %11 ]
  %.086.be = phi i32 [ %.086, %10 ], [ %.086, %426 ], [ %.086, %425 ], [ %.086, %423 ], [ %.086, %421 ], [ %.086, %420 ], [ %.086, %419 ], [ %.086, %418 ], [ %.086, %417 ], [ %416, %415 ], [ %.086, %408 ], [ %.086, %407 ], [ %.086, %403 ], [ %.086, %400 ], [ %.086, %399 ], [ %.086, %397 ], [ %.086, %396 ], [ %.086, %386 ], [ %.086, %376 ], [ %.086, %369 ], [ %.086, %362 ], [ %.086, %358 ], [ %.086, %354 ], [ %.086, %353 ], [ %.086, %351 ], [ %.086, %339 ], [ %.086, %329 ], [ %.086, %328 ], [ %.086, %327 ], [ %.086, %316 ], [ %.086, %306 ], [ %.086, %305 ], [ %.086, %303 ], [ %.086, %302 ], [ %.086, %301 ], [ %.086, %290 ], [ %.086, %280 ], [ %.086, %278 ], [ %.086, %271 ], [ %.086, %269 ], [ %.086, %268 ], [ %.086, %258 ], [ %.086, %248 ], [ %.086, %245 ], [ %.086, %239 ], [ %.086, %231 ], [ %.086, %229 ], [ %.086, %214 ], [ %.086, %204 ], [ %.086, %202 ], [ %.086, %198 ], [ %.086, %197 ], [ %.086, %187 ], [ %.086, %177 ], [ %.086, %173 ], [ %.086, %172 ], [ %.086, %170 ], [ %.086, %169 ], [ %.086, %168 ], [ %.086, %167 ], [ %.086, %166 ], [ %.086, %156 ], [ %.086, %146 ], [ %.086, %145 ], [ %.086, %144 ], [ %134, %133 ], [ %.086, %123 ], [ %.086, %122 ], [ %.086, %106 ], [ %.086, %96 ], [ %.086, %94 ], [ %.086, %83 ], [ %.086, %73 ], [ 0, %72 ], [ %.086, %66 ], [ %.086, %58 ], [ %.086, %50 ], [ %.086, %46 ], [ %.086, %43 ], [ %.086, %39 ], [ %.086, %38 ], [ %.086, %25 ], [ %.086, %15 ], [ %.086, %11 ]
  %.084.be = phi i32 [ %.084, %10 ], [ %.084, %426 ], [ %.084, %425 ], [ %424, %423 ], [ %.084, %421 ], [ %.084, %420 ], [ %.084, %419 ], [ %.084, %418 ], [ %.084, %417 ], [ %.084, %415 ], [ %.084, %408 ], [ %.084, %407 ], [ %.084, %403 ], [ %.084, %400 ], [ %.084, %399 ], [ %.084, %397 ], [ %.084, %396 ], [ %.084, %386 ], [ %.084, %376 ], [ %.084, %369 ], [ %.084, %362 ], [ %.084, %358 ], [ %.084, %354 ], [ %.084, %353 ], [ %.084, %351 ], [ %.084, %339 ], [ %.084, %329 ], [ %.084, %328 ], [ %.084, %327 ], [ %317, %316 ], [ %.084, %306 ], [ %.084, %305 ], [ %.084, %303 ], [ %.084, %302 ], [ %.084, %301 ], [ %.084, %290 ], [ %.084, %280 ], [ %.084, %278 ], [ %.084, %271 ], [ %.084, %269 ], [ %.084, %268 ], [ %.084, %258 ], [ %.084, %248 ], [ %.084, %245 ], [ %.084, %239 ], [ %.084, %231 ], [ %.084, %229 ], [ %.084, %214 ], [ %.084, %204 ], [ %.084, %202 ], [ %.084, %198 ], [ %.084, %197 ], [ %.084, %187 ], [ %.084, %177 ], [ %.084, %173 ], [ 0, %172 ], [ %.084, %170 ], [ %.084, %169 ], [ %.084, %168 ], [ %.084, %167 ], [ %.084, %166 ], [ %.084, %156 ], [ %.084, %146 ], [ %.084, %145 ], [ %.084, %144 ], [ %.084, %133 ], [ %.084, %123 ], [ %.084, %122 ], [ %.084, %106 ], [ %.084, %96 ], [ %.084, %94 ], [ %.084, %83 ], [ %.084, %73 ], [ %.084, %72 ], [ %.084, %66 ], [ %.084, %58 ], [ %.084, %50 ], [ %.084, %46 ], [ %.084, %43 ], [ %.084, %39 ], [ %.084, %38 ], [ %.084, %25 ], [ %.084, %15 ], [ %.084, %11 ]
  %.082.be = phi i32 [ %.082, %10 ], [ %.082, %426 ], [ %.082, %425 ], [ %.082, %423 ], [ %422, %421 ], [ %.082, %420 ], [ %.082, %419 ], [ 0, %418 ], [ %.082, %417 ], [ %.082, %415 ], [ %.082, %408 ], [ %.082, %407 ], [ %.082, %403 ], [ %.082, %400 ], [ %.082, %399 ], [ %.082, %397 ], [ %.082, %396 ], [ %.082, %386 ], [ %.082, %376 ], [ %.082, %369 ], [ %.082, %362 ], [ %.082, %358 ], [ %.082, %354 ], [ %.082, %353 ], [ %.082, %351 ], [ %.082, %339 ], [ %.082, %329 ], [ %.082, %328 ], [ %.082, %327 ], [ %.082, %316 ], [ %.082, %306 ], [ %.082, %305 ], [ %.082, %303 ], [ %.082, %302 ], [ %.082, %301 ], [ %291, %290 ], [ %.082, %280 ], [ %.082, %278 ], [ %.082, %271 ], [ %.082, %269 ], [ %.082, %268 ], [ %.082, %258 ], [ %.082, %248 ], [ %.082, %245 ], [ %.082, %239 ], [ %.082, %231 ], [ %.082, %229 ], [ %.082, %214 ], [ %.082, %204 ], [ %.082, %202 ], [ %.082, %198 ], [ %.082, %197 ], [ 0, %187 ], [ %.082, %177 ], [ %.082, %173 ], [ %.082, %172 ], [ %.082, %170 ], [ %.082, %169 ], [ %.082, %168 ], [ %.082, %167 ], [ %.082, %166 ], [ %.082, %156 ], [ %.082, %146 ], [ %.082, %145 ], [ %.082, %144 ], [ %.082, %133 ], [ %.082, %123 ], [ %.082, %122 ], [ %.082, %106 ], [ %.082, %96 ], [ %.082, %94 ], [ %.082, %83 ], [ %.082, %73 ], [ %.082, %72 ], [ %.082, %66 ], [ %.082, %58 ], [ %.082, %50 ], [ %.082, %46 ], [ %.082, %43 ], [ %.082, %39 ], [ %.082, %38 ], [ %.082, %25 ], [ %.082, %15 ], [ %.082, %11 ]
  %.080.be = phi i32 [ %.080, %10 ], [ %.080, %426 ], [ %.080, %425 ], [ %.080, %423 ], [ %.080, %421 ], [ %.080, %420 ], [ %.080, %419 ], [ 0, %418 ], [ %.080, %417 ], [ %.080, %415 ], [ %.080, %408 ], [ %.080, %407 ], [ %.080, %403 ], [ %.080, %400 ], [ %.080, %399 ], [ %.080, %397 ], [ %.080, %396 ], [ %.080, %386 ], [ %.080, %376 ], [ %.080, %369 ], [ %.080, %362 ], [ %.080, %358 ], [ %.080, %354 ], [ %.080, %353 ], [ %.080, %351 ], [ %.080, %339 ], [ %.080, %329 ], [ %.080, %328 ], [ %.080, %327 ], [ %.080, %316 ], [ %.080, %306 ], [ %.080, %305 ], [ %304, %303 ], [ %.080, %302 ], [ %.080, %301 ], [ %.080, %290 ], [ %.080, %280 ], [ %.080, %278 ], [ %.080, %271 ], [ %.080, %269 ], [ %.080, %268 ], [ %.080, %258 ], [ %.080, %248 ], [ %.080, %245 ], [ %.080, %239 ], [ %.080, %231 ], [ %.080, %229 ], [ %.080, %214 ], [ %.080, %204 ], [ %.080, %202 ], [ %.080, %198 ], [ %.080, %197 ], [ 0, %187 ], [ %.080, %177 ], [ %.080, %173 ], [ %.080, %172 ], [ %.080, %170 ], [ %.080, %169 ], [ %.080, %168 ], [ %.080, %167 ], [ %.080, %166 ], [ %.080, %156 ], [ %.080, %146 ], [ %.080, %145 ], [ %.080, %144 ], [ %.080, %133 ], [ %.080, %123 ], [ %.080, %122 ], [ %.080, %106 ], [ %.080, %96 ], [ %.080, %94 ], [ %.080, %83 ], [ %.080, %73 ], [ %.080, %72 ], [ %.080, %66 ], [ %.080, %58 ], [ %.080, %50 ], [ %.080, %46 ], [ %.080, %43 ], [ %.080, %39 ], [ %.080, %38 ], [ %.080, %25 ], [ %.080, %15 ], [ %.080, %11 ]
  %.078.be = phi i32 [ %.078, %10 ], [ %.078, %426 ], [ %.078, %425 ], [ %.078, %423 ], [ %.078, %421 ], [ 0, %420 ], [ %.078, %419 ], [ %.078, %418 ], [ %.078, %417 ], [ %.078, %415 ], [ %.078, %408 ], [ %.078, %407 ], [ %.078, %403 ], [ %.078, %400 ], [ %.078, %399 ], [ %.078, %397 ], [ %.078, %396 ], [ %.078, %386 ], [ %.078, %376 ], [ %.078, %369 ], [ %.078, %362 ], [ %.078, %358 ], [ %.078, %354 ], [ %.078, %353 ], [ %.078, %351 ], [ %.078, %339 ], [ %.078, %329 ], [ %.078, %328 ], [ %.078, %327 ], [ %.078, %316 ], [ %.078, %306 ], [ %.078, %305 ], [ %.078, %303 ], [ %.078, %302 ], [ %.078, %301 ], [ %.078, %290 ], [ %.078, %280 ], [ %279, %278 ], [ %.078, %271 ], [ %.078, %269 ], [ %.078, %268 ], [ 0, %258 ], [ %.078, %248 ], [ %.078, %245 ], [ %.078, %239 ], [ %.078, %231 ], [ %.078, %229 ], [ %.078, %214 ], [ %.078, %204 ], [ %.078, %202 ], [ %.078, %198 ], [ %.078, %197 ], [ %.078, %187 ], [ %.078, %177 ], [ %.078, %173 ], [ %.078, %172 ], [ %.078, %170 ], [ %.078, %169 ], [ %.078, %168 ], [ %.078, %167 ], [ %.078, %166 ], [ %.078, %156 ], [ %.078, %146 ], [ %.078, %145 ], [ %.078, %144 ], [ %.078, %133 ], [ %.078, %123 ], [ %.078, %122 ], [ %.078, %106 ], [ %.078, %96 ], [ %.078, %94 ], [ %.078, %83 ], [ %.078, %73 ], [ %.078, %72 ], [ %.078, %66 ], [ %.078, %58 ], [ %.078, %50 ], [ %.078, %46 ], [ %.078, %43 ], [ %.078, %39 ], [ %.078, %38 ], [ %.078, %25 ], [ %.078, %15 ], [ %.078, %11 ]
  %.076.be = phi i32 [ %.076, %10 ], [ %.076, %426 ], [ %.076, %425 ], [ %.076, %423 ], [ %.076, %421 ], [ %.076, %420 ], [ %.076, %419 ], [ %.076, %418 ], [ %.076, %417 ], [ %.076, %415 ], [ %.076, %408 ], [ %.076, %407 ], [ %.076, %403 ], [ %401, %400 ], [ %.076, %399 ], [ %.076, %397 ], [ %.076, %396 ], [ %.076, %386 ], [ %.076, %376 ], [ %.076, %369 ], [ %.076, %362 ], [ %.076, %358 ], [ %.076, %354 ], [ %.076, %353 ], [ %.076, %351 ], [ %.076, %339 ], [ %.076, %329 ], [ 0, %328 ], [ %.076, %327 ], [ %.076, %316 ], [ %.076, %306 ], [ %.076, %305 ], [ %.076, %303 ], [ %.076, %302 ], [ %.076, %301 ], [ %.076, %290 ], [ %.076, %280 ], [ %.076, %278 ], [ %.076, %271 ], [ %.076, %269 ], [ %.076, %268 ], [ %.076, %258 ], [ %.076, %248 ], [ %.076, %245 ], [ %.076, %239 ], [ %.076, %231 ], [ %.076, %229 ], [ %.076, %214 ], [ %.076, %204 ], [ %.076, %202 ], [ %.076, %198 ], [ %.076, %197 ], [ %.076, %187 ], [ %.076, %177 ], [ %.076, %173 ], [ %.076, %172 ], [ %.076, %170 ], [ %.076, %169 ], [ %.076, %168 ], [ %.076, %167 ], [ %.076, %166 ], [ %.076, %156 ], [ %.076, %146 ], [ %.076, %145 ], [ %.076, %144 ], [ %.076, %133 ], [ %.076, %123 ], [ %.076, %122 ], [ %.076, %106 ], [ %.076, %96 ], [ %.076, %94 ], [ %.076, %83 ], [ %.076, %73 ], [ %.076, %72 ], [ %.076, %66 ], [ %.076, %58 ], [ %.076, %50 ], [ %.076, %46 ], [ %.076, %43 ], [ %.076, %39 ], [ %.076, %38 ], [ %.076, %25 ], [ %.076, %15 ], [ %.076, %11 ]
  %.074.be = phi i32 [ %.074, %10 ], [ %.074, %426 ], [ %.074, %425 ], [ %.074, %423 ], [ %.074, %421 ], [ %.074, %420 ], [ %.074, %419 ], [ %.074, %418 ], [ %.074, %417 ], [ %.074, %415 ], [ %.074, %408 ], [ %.074, %407 ], [ %.074, %403 ], [ %.074, %400 ], [ %.074, %399 ], [ %398, %397 ], [ %.074, %396 ], [ %.074, %386 ], [ %.074, %376 ], [ %.074, %369 ], [ %.074, %362 ], [ %.074, %358 ], [ %.074, %354 ], [ 0, %353 ], [ %.074, %351 ], [ %.074, %339 ], [ %.074, %329 ], [ %.074, %328 ], [ %.074, %327 ], [ %.074, %316 ], [ %.074, %306 ], [ %.074, %305 ], [ %.074, %303 ], [ %.074, %302 ], [ %.074, %301 ], [ %.074, %290 ], [ %.074, %280 ], [ %.074, %278 ], [ %.074, %271 ], [ %.074, %269 ], [ %.074, %268 ], [ %.074, %258 ], [ %.074, %248 ], [ %.074, %245 ], [ %.074, %239 ], [ %.074, %231 ], [ %.074, %229 ], [ %.074, %214 ], [ %.074, %204 ], [ %.074, %202 ], [ %.074, %198 ], [ %.074, %197 ], [ %.074, %187 ], [ %.074, %177 ], [ %.074, %173 ], [ %.074, %172 ], [ %.074, %170 ], [ %.074, %169 ], [ %.074, %168 ], [ %.074, %167 ], [ %.074, %166 ], [ %.074, %156 ], [ %.074, %146 ], [ %.074, %145 ], [ %.074, %144 ], [ %.074, %133 ], [ %.074, %123 ], [ %.074, %122 ], [ %.074, %106 ], [ %.074, %96 ], [ %.074, %94 ], [ %.074, %83 ], [ %.074, %73 ], [ %.074, %72 ], [ %.074, %66 ], [ %.074, %58 ], [ %.074, %50 ], [ %.074, %46 ], [ %.074, %43 ], [ %.074, %39 ], [ %.074, %38 ], [ %.074, %25 ], [ %.074, %15 ], [ %.074, %11 ]
  %.0.be = phi i32 [ %.0, %10 ], [ 991279106, %426 ], [ 1667390621, %425 ], [ -1622374681, %423 ], [ -2047481250, %421 ], [ 538849727, %420 ], [ 667947473, %419 ], [ 868683928, %418 ], [ -249247688, %417 ], [ 606821447, %415 ], [ -470483210, %408 ], [ 886538864, %407 ], [ -145080186, %403 ], [ -1994668808, %400 ], [ -1682739667, %399 ], [ 1844627811, %397 ], [ -1217116769, %396 ], [ %395, %386 ], [ %385, %376 ], [ 1952289085, %369 ], [ 1952289085, %362 ], [ %361, %358 ], [ %357, %354 ], [ 1844627811, %353 ], [ %352, %351 ], [ %350, %339 ], [ %338, %329 ], [ -1994668808, %328 ], [ -535677596, %327 ], [ %326, %316 ], [ %315, %306 ], [ -136609386, %305 ], [ -1094553543, %303 ], [ -364201774, %302 ], [ 314774119, %301 ], [ %300, %290 ], [ %289, %280 ], [ -1759985318, %278 ], [ -2056301349, %271 ], [ %270, %269 ], [ -1759985318, %268 ], [ %267, %258 ], [ %257, %248 ], [ %247, %245 ], [ %244, %239 ], [ 674919487, %231 ], [ %230, %229 ], [ %228, %214 ], [ %213, %204 ], [ %203, %202 ], [ %201, %198 ], [ -1094553543, %197 ], [ %196, %187 ], [ %186, %177 ], [ %176, %173 ], [ -535677596, %172 ], [ -714041015, %170 ], [ -1849938486, %169 ], [ -191383312, %168 ], [ -419802522, %167 ], [ 767059741, %166 ], [ %165, %156 ], [ %155, %146 ], [ 1395323947, %145 ], [ -1476463891, %144 ], [ %143, %133 ], [ %132, %123 ], [ -645515911, %122 ], [ %121, %106 ], [ %105, %96 ], [ %95, %94 ], [ %93, %83 ], [ %82, %73 ], [ -1476463891, %72 ], [ %71, %66 ], [ %65, %58 ], [ 1440713461, %50 ], [ 1440713461, %46 ], [ %45, %43 ], [ %42, %39 ], [ -191383312, %38 ], [ %37, %25 ], [ %24, %15 ], [ %14, %11 ]
  br label %10

11:                                               ; preds = %10
  %12 = load i32, i32* %4, align 4
  %13 = icmp slt i32 %.092, %12
  %14 = select i1 %13, i32 -981268871, i32 -1601209938
  br label %.backedge

15:                                               ; preds = %10
  %16 = load i32, i32* @x.6, align 4
  %17 = load i32, i32* @y.7, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -145080186, i32 -384665256
  br label %.backedge

25:                                               ; preds = %10
  %26 = sext i32 %.092 to i64
  %27 = getelementptr inbounds [300 x %"class.std::__cxx11::basic_string"], [300 x %"class.std::__cxx11::basic_string"]* @_Z1sB5cxx11, i64 0, i64 %26
  %28 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %27)
  %29 = load i32, i32* @x.6, align 4
  %30 = load i32, i32* @y.7, align 4
  %31 = add i32 %29, -1
  %32 = mul i32 %31, %29
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %35, %34
  %37 = select i1 %36, i32 368729659, i32 -384665256
  br label %.backedge

38:                                               ; preds = %10
  br label %.backedge

39:                                               ; preds = %10
  %40 = load i32, i32* %5, align 4
  %41 = icmp slt i32 %.088, %40
  %42 = select i1 %41, i32 -925575284, i32 522920644
  br label %.backedge

43:                                               ; preds = %10
  %44 = icmp eq i32 %.088, 0
  %45 = select i1 %44, i32 -510323707, i32 1044326763
  br label %.backedge

46:                                               ; preds = %10
  %47 = sext i32 %.092 to i64
  %48 = sext i32 %.088 to i64
  %49 = getelementptr inbounds [300 x [300 x i32]], [300 x [300 x i32]]* @num, i64 0, i64 %47, i64 %48
  store i32 -1, i32* %49, align 4
  br label %.backedge

50:                                               ; preds = %10
  %51 = sext i32 %.092 to i64
  %52 = add i32 %.088, -1
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [300 x [300 x i32]], [300 x [300 x i32]]* @num, i64 0, i64 %51, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = sext i32 %.088 to i64
  %57 = getelementptr inbounds [300 x [300 x i32]], [300 x [300 x i32]]* @num, i64 0, i64 %51, i64 %56
  store i32 %55, i32* %57, align 4
  br label %.backedge

58:                                               ; preds = %10
  %59 = sext i32 %.092 to i64
  %60 = getelementptr inbounds [300 x %"class.std::__cxx11::basic_string"], [300 x %"class.std::__cxx11::basic_string"]* @_Z1sB5cxx11, i64 0, i64 %59
  %61 = sext i32 %.088 to i64
  %62 = call dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"* nonnull %60, i64 %61)
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 35
  %65 = select i1 %64, i32 -1125862150, i32 767059741
  br label %.backedge

66:                                               ; preds = %10
  %67 = sext i32 %.092 to i64
  %68 = sext i32 %.088 to i64
  %69 = getelementptr inbounds [300 x [300 x i32]], [300 x [300 x i32]]* @num, i64 0, i64 %67, i64 %68
  store i32 %.094, i32* %69, align 4
  %.neg100 = add i32 %.094, 1
  %70 = icmp eq i32 %.090, 0
  %71 = select i1 %70, i32 496481522, i32 1395323947
  br label %.backedge

72:                                               ; preds = %10
  br label %.backedge

73:                                               ; preds = %10
  %74 = load i32, i32* @x.6, align 4
  %75 = load i32, i32* @y.7, align 4
  %76 = add i32 %74, -1
  %77 = mul i32 %76, %74
  %78 = and i32 %77, 1
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %75, 10
  %81 = or i1 %80, %79
  %82 = select i1 %81, i32 886538864, i32 -551177150
  br label %.backedge

83:                                               ; preds = %10
  %84 = icmp sle i32 %.086, %.088
  store i1 %84, i1* %3, align 1
  %85 = load i32, i32* @x.6, align 4
  %86 = load i32, i32* @y.7, align 4
  %87 = add i32 %85, -1
  %88 = mul i32 %87, %85
  %89 = and i32 %88, 1
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %86, 10
  %92 = or i1 %91, %90
  %93 = select i1 %92, i32 -1274345958, i32 -551177150
  br label %.backedge

94:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %3, align 1
  %95 = select i1 %.0..0..0., i32 1150595160, i32 -1593442190
  br label %.backedge

96:                                               ; preds = %10
  %97 = load i32, i32* @x.6, align 4
  %98 = load i32, i32* @y.7, align 4
  %99 = add i32 %97, -1
  %100 = mul i32 %99, %97
  %101 = and i32 %100, 1
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %98, 10
  %104 = or i1 %103, %102
  %105 = select i1 %104, i32 -470483210, i32 -1539972915
  br label %.backedge

106:                                              ; preds = %10
  %107 = sext i32 %.092 to i64
  %108 = sext i32 %.088 to i64
  %109 = getelementptr inbounds [300 x [300 x i32]], [300 x [300 x i32]]* @num, i64 0, i64 %107, i64 %108
  %110 = load i32, i32* %109, align 4
  %111 = sext i32 %.086 to i64
  %112 = getelementptr inbounds [300 x [300 x i32]], [300 x [300 x i32]]* @num, i64 0, i64 %107, i64 %111
  store i32 %110, i32* %112, align 4
  %113 = load i32, i32* @x.6, align 4
  %114 = load i32, i32* @y.7, align 4
  %115 = add i32 %113, -1
  %116 = mul i32 %115, %113
  %117 = and i32 %116, 1
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %114, 10
  %120 = or i1 %119, %118
  %121 = select i1 %120, i32 128105573, i32 -1539972915
  br label %.backedge

122:                                              ; preds = %10
  br label %.backedge

123:                                              ; preds = %10
  %124 = load i32, i32* @x.6, align 4
  %125 = load i32, i32* @y.7, align 4
  %126 = add i32 %124, -1
  %127 = mul i32 %126, %124
  %128 = and i32 %127, 1
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %125, 10
  %131 = or i1 %130, %129
  %132 = select i1 %131, i32 606821447, i32 -383090997
  br label %.backedge

133:                                              ; preds = %10
  %134 = add i32 %.086, 1
  %135 = load i32, i32* @x.6, align 4
  %136 = load i32, i32* @y.7, align 4
  %137 = add i32 %135, -1
  %138 = mul i32 %137, %135
  %139 = and i32 %138, 1
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %141, %140
  %143 = select i1 %142, i32 -262478505, i32 -383090997
  br label %.backedge

144:                                              ; preds = %10
  br label %.backedge

145:                                              ; preds = %10
  %.neg99 = add i32 %.090, 1
  br label %.backedge

146:                                              ; preds = %10
  %147 = load i32, i32* @x.6, align 4
  %148 = load i32, i32* @y.7, align 4
  %149 = add i32 %147, -1
  %150 = mul i32 %149, %147
  %151 = and i32 %150, 1
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %148, 10
  %154 = or i1 %153, %152
  %155 = select i1 %154, i32 -249247688, i32 871908122
  br label %.backedge

156:                                              ; preds = %10
  %157 = load i32, i32* @x.6, align 4
  %158 = load i32, i32* @y.7, align 4
  %159 = add i32 %157, -1
  %160 = mul i32 %159, %157
  %161 = and i32 %160, 1
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %163, %162
  %165 = select i1 %164, i32 367311294, i32 871908122
  br label %.backedge

166:                                              ; preds = %10
  br label %.backedge

167:                                              ; preds = %10
  br label %.backedge

168:                                              ; preds = %10
  %.neg = add i32 %.088, 1
  br label %.backedge

169:                                              ; preds = %10
  br label %.backedge

170:                                              ; preds = %10
  %171 = add i32 %.092, 1
  br label %.backedge

172:                                              ; preds = %10
  br label %.backedge

173:                                              ; preds = %10
  %174 = load i32, i32* %5, align 4
  %175 = icmp slt i32 %.084, %174
  %176 = select i1 %175, i32 -1110443620, i32 602970049
  br label %.backedge

177:                                              ; preds = %10
  %178 = load i32, i32* @x.6, align 4
  %179 = load i32, i32* @y.7, align 4
  %180 = add i32 %178, -1
  %181 = mul i32 %180, %178
  %182 = and i32 %181, 1
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %179, 10
  %185 = or i1 %184, %183
  %186 = select i1 %185, i32 868683928, i32 -2536728
  br label %.backedge

187:                                              ; preds = %10
  %188 = load i32, i32* @x.6, align 4
  %189 = load i32, i32* @y.7, align 4
  %190 = add i32 %188, -1
  %191 = mul i32 %190, %188
  %192 = and i32 %191, 1
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %194, %193
  %196 = select i1 %195, i32 1762487339, i32 -2536728
  br label %.backedge

197:                                              ; preds = %10
  br label %.backedge

198:                                              ; preds = %10
  %199 = load i32, i32* %4, align 4
  %200 = icmp slt i32 %.080, %199
  %201 = select i1 %200, i32 1929096814, i32 -965950013
  br label %.backedge

202:                                              ; preds = %10
  %.not98 = icmp eq i32 %.080, 0
  %203 = select i1 %.not98, i32 674919487, i32 -2139681647
  br label %.backedge

204:                                              ; preds = %10
  %205 = load i32, i32* @x.6, align 4
  %206 = load i32, i32* @y.7, align 4
  %207 = add i32 %205, -1
  %208 = mul i32 %207, %205
  %209 = and i32 %208, 1
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %211, %210
  %213 = select i1 %212, i32 667947473, i32 -2035643008
  br label %.backedge

214:                                              ; preds = %10
  %215 = sext i32 %.080 to i64
  %216 = sext i32 %.084 to i64
  %217 = getelementptr inbounds [300 x [300 x i32]], [300 x [300 x i32]]* @num, i64 0, i64 %215, i64 %216
  %218 = load i32, i32* %217, align 4
  %219 = icmp eq i32 %218, -1
  store i1 %219, i1* %2, align 1
  %220 = load i32, i32* @x.6, align 4
  %221 = load i32, i32* @y.7, align 4
  %222 = add i32 %220, -1
  %223 = mul i32 %222, %220
  %224 = and i32 %223, 1
  %225 = icmp eq i32 %224, 0
  %226 = icmp slt i32 %221, 10
  %227 = or i1 %226, %225
  %228 = select i1 %227, i32 -1703308663, i32 -2035643008
  br label %.backedge

229:                                              ; preds = %10
  %.0..0..0.72 = load volatile i1, i1* %2, align 1
  %230 = select i1 %.0..0..0.72, i32 96140869, i32 674919487
  br label %.backedge

231:                                              ; preds = %10
  %232 = add i32 %.080, -1
  %233 = sext i32 %232 to i64
  %234 = sext i32 %.084 to i64
  %235 = getelementptr inbounds [300 x [300 x i32]], [300 x [300 x i32]]* @num, i64 0, i64 %233, i64 %234
  %236 = load i32, i32* %235, align 4
  %237 = sext i32 %.080 to i64
  %238 = getelementptr inbounds [300 x [300 x i32]], [300 x [300 x i32]]* @num, i64 0, i64 %237, i64 %234
  store i32 %236, i32* %238, align 4
  br label %.backedge

239:                                              ; preds = %10
  %240 = sext i32 %.080 to i64
  %241 = sext i32 %.084 to i64
  %242 = getelementptr inbounds [300 x [300 x i32]], [300 x [300 x i32]]* @num, i64 0, i64 %240, i64 %241
  %243 = load i32, i32* %242, align 4
  %.not97 = icmp eq i32 %243, -1
  %244 = select i1 %.not97, i32 314774119, i32 -1785487777
  br label %.backedge

245:                                              ; preds = %10
  %246 = icmp eq i32 %.082, 0
  %247 = select i1 %246, i32 1832803820, i32 314774119
  br label %.backedge

248:                                              ; preds = %10
  %249 = load i32, i32* @x.6, align 4
  %250 = load i32, i32* @y.7, align 4
  %251 = add i32 %249, -1
  %252 = mul i32 %251, %249
  %253 = and i32 %252, 1
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %250, 10
  %256 = or i1 %255, %254
  %257 = select i1 %256, i32 538849727, i32 -433510116
  br label %.backedge

258:                                              ; preds = %10
  %259 = load i32, i32* @x.6, align 4
  %260 = load i32, i32* @y.7, align 4
  %261 = add i32 %259, -1
  %262 = mul i32 %261, %259
  %263 = and i32 %262, 1
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %260, 10
  %266 = or i1 %265, %264
  %267 = select i1 %266, i32 -953086484, i32 -433510116
  br label %.backedge

268:                                              ; preds = %10
  br label %.backedge

269:                                              ; preds = %10
  %.not96 = icmp sgt i32 %.078, %.080
  %270 = select i1 %.not96, i32 1121164538, i32 17667391
  br label %.backedge

271:                                              ; preds = %10
  %272 = sext i32 %.080 to i64
  %273 = sext i32 %.084 to i64
  %274 = getelementptr inbounds [300 x [300 x i32]], [300 x [300 x i32]]* @num, i64 0, i64 %272, i64 %273
  %275 = load i32, i32* %274, align 4
  %276 = sext i32 %.078 to i64
  %277 = getelementptr inbounds [300 x [300 x i32]], [300 x [300 x i32]]* @num, i64 0, i64 %276, i64 %273
  store i32 %275, i32* %277, align 4
  br label %.backedge

278:                                              ; preds = %10
  %279 = add i32 %.078, 1
  br label %.backedge

280:                                              ; preds = %10
  %281 = load i32, i32* @x.6, align 4
  %282 = load i32, i32* @y.7, align 4
  %283 = add i32 %281, -1
  %284 = mul i32 %283, %281
  %285 = and i32 %284, 1
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %287, %286
  %289 = select i1 %288, i32 -2047481250, i32 -330842128
  br label %.backedge

290:                                              ; preds = %10
  %291 = add i32 %.082, 1
  %292 = load i32, i32* @x.6, align 4
  %293 = load i32, i32* @y.7, align 4
  %294 = add i32 %292, -1
  %295 = mul i32 %294, %292
  %296 = and i32 %295, 1
  %297 = icmp eq i32 %296, 0
  %298 = icmp slt i32 %293, 10
  %299 = or i1 %298, %297
  %300 = select i1 %299, i32 695404036, i32 -330842128
  br label %.backedge

301:                                              ; preds = %10
  br label %.backedge

302:                                              ; preds = %10
  br label %.backedge

303:                                              ; preds = %10
  %304 = add i32 %.080, 1
  br label %.backedge

305:                                              ; preds = %10
  br label %.backedge

306:                                              ; preds = %10
  %307 = load i32, i32* @x.6, align 4
  %308 = load i32, i32* @y.7, align 4
  %309 = add i32 %307, -1
  %310 = mul i32 %309, %307
  %311 = and i32 %310, 1
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %308, 10
  %314 = or i1 %313, %312
  %315 = select i1 %314, i32 -1622374681, i32 391463670
  br label %.backedge

316:                                              ; preds = %10
  %317 = add i32 %.084, 1
  %318 = load i32, i32* @x.6, align 4
  %319 = load i32, i32* @y.7, align 4
  %320 = add i32 %318, -1
  %321 = mul i32 %320, %318
  %322 = and i32 %321, 1
  %323 = icmp eq i32 %322, 0
  %324 = icmp slt i32 %319, 10
  %325 = or i1 %324, %323
  %326 = select i1 %325, i32 -1276815132, i32 391463670
  br label %.backedge

327:                                              ; preds = %10
  br label %.backedge

328:                                              ; preds = %10
  br label %.backedge

329:                                              ; preds = %10
  %330 = load i32, i32* @x.6, align 4
  %331 = load i32, i32* @y.7, align 4
  %332 = add i32 %330, -1
  %333 = mul i32 %332, %330
  %334 = and i32 %333, 1
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %331, 10
  %337 = or i1 %336, %335
  %338 = select i1 %337, i32 1667390621, i32 -1910903754
  br label %.backedge

339:                                              ; preds = %10
  %340 = load i32, i32* %4, align 4
  %341 = icmp slt i32 %.076, %340
  store i1 %341, i1* %1, align 1
  %342 = load i32, i32* @x.6, align 4
  %343 = load i32, i32* @y.7, align 4
  %344 = add i32 %342, -1
  %345 = mul i32 %344, %342
  %346 = and i32 %345, 1
  %347 = icmp eq i32 %346, 0
  %348 = icmp slt i32 %343, 10
  %349 = or i1 %348, %347
  %350 = select i1 %349, i32 1909180916, i32 -1910903754
  br label %.backedge

351:                                              ; preds = %10
  %.0..0..0.73 = load volatile i1, i1* %1, align 1
  %352 = select i1 %.0..0..0.73, i32 -649180173, i32 -1173474623
  br label %.backedge

353:                                              ; preds = %10
  br label %.backedge

354:                                              ; preds = %10
  %355 = load i32, i32* %5, align 4
  %356 = icmp slt i32 %.074, %355
  %357 = select i1 %356, i32 1186692626, i32 499731484
  br label %.backedge

358:                                              ; preds = %10
  %359 = load i32, i32* %5, align 4
  %360 = add i32 %359, -1
  %.not = icmp eq i32 %.074, %360
  %361 = select i1 %.not, i32 644251144, i32 1626198561
  br label %.backedge

362:                                              ; preds = %10
  %363 = sext i32 %.076 to i64
  %364 = sext i32 %.074 to i64
  %365 = getelementptr inbounds [300 x [300 x i32]], [300 x [300 x i32]]* @num, i64 0, i64 %363, i64 %364
  %366 = load i32, i32* %365, align 4
  %367 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %366)
  %368 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) %367, i8 signext 32)
  br label %.backedge

369:                                              ; preds = %10
  %370 = sext i32 %.076 to i64
  %371 = sext i32 %.074 to i64
  %372 = getelementptr inbounds [300 x [300 x i32]], [300 x [300 x i32]]* @num, i64 0, i64 %370, i64 %371
  %373 = load i32, i32* %372, align 4
  %374 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %373)
  %375 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* nonnull %374, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* nonnull @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  br label %.backedge

376:                                              ; preds = %10
  %377 = load i32, i32* @x.6, align 4
  %378 = load i32, i32* @y.7, align 4
  %379 = add i32 %377, -1
  %380 = mul i32 %379, %377
  %381 = and i32 %380, 1
  %382 = icmp eq i32 %381, 0
  %383 = icmp slt i32 %378, 10
  %384 = or i1 %383, %382
  %385 = select i1 %384, i32 991279106, i32 1911290570
  br label %.backedge

386:                                              ; preds = %10
  %387 = load i32, i32* @x.6, align 4
  %388 = load i32, i32* @y.7, align 4
  %389 = add i32 %387, -1
  %390 = mul i32 %389, %387
  %391 = and i32 %390, 1
  %392 = icmp eq i32 %391, 0
  %393 = icmp slt i32 %388, 10
  %394 = or i1 %393, %392
  %395 = select i1 %394, i32 803035444, i32 1911290570
  br label %.backedge

396:                                              ; preds = %10
  br label %.backedge

397:                                              ; preds = %10
  %398 = add i32 %.074, 1
  br label %.backedge

399:                                              ; preds = %10
  br label %.backedge

400:                                              ; preds = %10
  %401 = add i32 %.076, 1
  br label %.backedge

402:                                              ; preds = %10
  ret i32 0

403:                                              ; preds = %10
  %404 = sext i32 %.092 to i64
  %405 = getelementptr inbounds [300 x %"class.std::__cxx11::basic_string"], [300 x %"class.std::__cxx11::basic_string"]* @_Z1sB5cxx11, i64 0, i64 %404
  %406 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %405)
  br label %.backedge

407:                                              ; preds = %10
  br label %.backedge

408:                                              ; preds = %10
  %409 = sext i32 %.092 to i64
  %410 = sext i32 %.088 to i64
  %411 = getelementptr inbounds [300 x [300 x i32]], [300 x [300 x i32]]* @num, i64 0, i64 %409, i64 %410
  %412 = load i32, i32* %411, align 4
  %413 = sext i32 %.086 to i64
  %414 = getelementptr inbounds [300 x [300 x i32]], [300 x [300 x i32]]* @num, i64 0, i64 %409, i64 %413
  store i32 %412, i32* %414, align 4
  br label %.backedge

415:                                              ; preds = %10
  %416 = add i32 %.086, 1
  br label %.backedge

417:                                              ; preds = %10
  br label %.backedge

418:                                              ; preds = %10
  br label %.backedge

419:                                              ; preds = %10
  br label %.backedge

420:                                              ; preds = %10
  br label %.backedge

421:                                              ; preds = %10
  %422 = add i32 %.082, 1
  br label %.backedge

423:                                              ; preds = %10
  %424 = add i32 %.084, 1
  br label %.backedge

425:                                              ; preds = %10
  br label %.backedge

426:                                              ; preds = %10
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* dereferenceable(280), %"class.std::__cxx11::basic_string"* dereferenceable(32)) local_unnamed_addr #1

declare dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"*, i64) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s280048700.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  tail call fastcc void @__cxx_global_var_init.1()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
