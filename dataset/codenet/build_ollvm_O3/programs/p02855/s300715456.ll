; ModuleID = 'build_ollvm/programs/p02855/s300715456.ll'
source_filename = "Project_CodeNet_C++1400/p02855/s300715456.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }

$_Z4readv = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@n = local_unnamed_addr global i32 0, align 4
@m = local_unnamed_addr global i32 0, align 4
@k = local_unnamed_addr global i32 0, align 4
@cnt = local_unnamed_addr global i32 0, align 4
@ans = local_unnamed_addr global [310 x [310 x i32]] zeroinitializer, align 16
@s = global [310 x [310 x i8]] zeroinitializer, align 16
@.str = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s300715456.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ -155628757, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 -155628757, label %11
    i32 32068619, label %14
    i32 -1453352367, label %25
    i32 -738623633, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 32068619, i32 -738623633
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -1453352367, i32 -738623633
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ 32068619, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = tail call i64 @_Z4readv()
  %7 = trunc i64 %6 to i32
  store i32 %7, i32* @n, align 4
  %8 = tail call i64 @_Z4readv()
  %9 = trunc i64 %8 to i32
  store i32 %9, i32* @m, align 4
  %10 = tail call i64 @_Z4readv()
  %11 = trunc i64 %10 to i32
  store i32 %11, i32* @k, align 4
  br label %12

12:                                               ; preds = %.backedge, %0
  %.089 = phi i32 [ 1, %0 ], [ %.089.be, %.backedge ]
  %.087 = phi i32 [ undef, %0 ], [ %.087.be, %.backedge ]
  %.085 = phi i32 [ undef, %0 ], [ %.085.be, %.backedge ]
  %.083 = phi i32 [ undef, %0 ], [ %.083.be, %.backedge ]
  %.081 = phi i32 [ undef, %0 ], [ %.081.be, %.backedge ]
  %.079 = phi i32 [ undef, %0 ], [ %.079.be, %.backedge ]
  %.077 = phi i32 [ undef, %0 ], [ %.077.be, %.backedge ]
  %.075 = phi i32 [ undef, %0 ], [ %.075.be, %.backedge ]
  %.073 = phi i32 [ undef, %0 ], [ %.073.be, %.backedge ]
  %.071 = phi i32 [ undef, %0 ], [ %.071.be, %.backedge ]
  %.0 = phi i32 [ -887976067, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -887976067, label %13
    i32 419622793, label %23
    i32 500091029, label %35
    i32 298324015, label %37
    i32 2056624302, label %41
    i32 -1415507615, label %43
    i32 -1851208981, label %44
    i32 476773262, label %54
    i32 517165665, label %66
    i32 742166781, label %68
    i32 445970067, label %69
    i32 456378294, label %72
    i32 1548666592, label %82
    i32 301030627, label %97
    i32 -1556230486, label %99
    i32 -1900361930, label %109
    i32 1651376951, label %124
    i32 877281947, label %125
    i32 2023628443, label %133
    i32 -807758783, label %134
    i32 -1441045908, label %144
    i32 370065709, label %155
    i32 -1668100515, label %156
    i32 951694889, label %158
    i32 -888514685, label %168
    i32 309506943, label %179
    i32 1816557805, label %181
    i32 341763062, label %187
    i32 1251716871, label %197
    i32 1988020238, label %214
    i32 161504288, label %215
    i32 393551234, label %216
    i32 1047711841, label %226
    i32 -1338787801, label %236
    i32 -293757401, label %237
    i32 1907298268, label %247
    i32 -573307873, label %257
    i32 1320284633, label %258
    i32 -1814298229, label %268
    i32 -464101864, label %279
    i32 1828589357, label %280
    i32 -2116563694, label %290
    i32 -1570923073, label %301
    i32 1738560920, label %302
    i32 1162275434, label %305
    i32 1979172902, label %306
    i32 1340002979, label %309
    i32 1241549335, label %315
    i32 -1155756667, label %323
    i32 724536589, label %324
    i32 251732624, label %334
    i32 1388251545, label %345
    i32 1255208911, label %346
    i32 -591273518, label %347
    i32 -1140787909, label %349
    i32 -1927513352, label %350
    i32 973946205, label %353
    i32 -1123282423, label %363
    i32 -1040226854, label %373
    i32 1054233426, label %374
    i32 -712492149, label %377
    i32 1771593193, label %383
    i32 1896609703, label %391
    i32 2075180040, label %392
    i32 1643894906, label %394
    i32 -280478951, label %404
    i32 1119122231, label %414
    i32 558948376, label %415
    i32 878471508, label %417
    i32 -1774426219, label %418
    i32 -198017034, label %421
    i32 -181528962, label %422
    i32 -56075894, label %432
    i32 -866454514, label %444
    i32 1964846928, label %446
    i32 1504782112, label %452
    i32 -1074304077, label %454
    i32 645786295, label %455
    i32 1836485796, label %457
    i32 -611890823, label %458
    i32 307507044, label %459
    i32 835531997, label %460
    i32 -663607308, label %461
    i32 1183727740, label %466
    i32 671239878, label %468
    i32 893468599, label %469
    i32 -2070308067, label %477
    i32 -846234961, label %479
    i32 -670781804, label %480
    i32 195528163, label %481
    i32 -1983931272, label %483
    i32 -2002391069, label %484
    i32 -367450589, label %485
    i32 -648924474, label %486
  ]

.backedge:                                        ; preds = %12, %486, %485, %484, %483, %481, %480, %479, %477, %469, %468, %466, %461, %460, %459, %458, %455, %454, %452, %446, %444, %432, %422, %421, %418, %417, %415, %414, %404, %394, %392, %391, %383, %377, %374, %373, %363, %353, %350, %349, %347, %346, %345, %334, %324, %323, %315, %309, %306, %305, %302, %301, %290, %280, %279, %268, %258, %257, %247, %237, %236, %226, %216, %215, %214, %197, %187, %181, %179, %168, %158, %156, %155, %144, %134, %133, %125, %124, %109, %99, %97, %82, %72, %69, %68, %66, %54, %44, %43, %41, %37, %35, %23, %13
  %.089.be = phi i32 [ %.089, %12 ], [ %.089, %486 ], [ %.089, %485 ], [ %.089, %484 ], [ %.089, %483 ], [ %.089, %481 ], [ %.089, %480 ], [ %.089, %479 ], [ %.089, %477 ], [ %.089, %469 ], [ %.089, %468 ], [ %.089, %466 ], [ %.089, %461 ], [ %.089, %460 ], [ %.089, %459 ], [ %.089, %458 ], [ %.089, %455 ], [ %.089, %454 ], [ %.089, %452 ], [ %.089, %446 ], [ %.089, %444 ], [ %.089, %432 ], [ %.089, %422 ], [ %.089, %421 ], [ %.089, %418 ], [ %.089, %417 ], [ %.089, %415 ], [ %.089, %414 ], [ %.089, %404 ], [ %.089, %394 ], [ %.089, %392 ], [ %.089, %391 ], [ %.089, %383 ], [ %.089, %377 ], [ %.089, %374 ], [ %.089, %373 ], [ %.089, %363 ], [ %.089, %353 ], [ %.089, %350 ], [ %.089, %349 ], [ %.089, %347 ], [ %.089, %346 ], [ %.089, %345 ], [ %.089, %334 ], [ %.089, %324 ], [ %.089, %323 ], [ %.089, %315 ], [ %.089, %309 ], [ %.089, %306 ], [ %.089, %305 ], [ %.089, %302 ], [ %.089, %301 ], [ %.089, %290 ], [ %.089, %280 ], [ %.089, %279 ], [ %.089, %268 ], [ %.089, %258 ], [ %.089, %257 ], [ %.089, %247 ], [ %.089, %237 ], [ %.089, %236 ], [ %.089, %226 ], [ %.089, %216 ], [ %.089, %215 ], [ %.089, %214 ], [ %.089, %197 ], [ %.089, %187 ], [ %.089, %181 ], [ %.089, %179 ], [ %.089, %168 ], [ %.089, %158 ], [ %.089, %156 ], [ %.089, %155 ], [ %.089, %144 ], [ %.089, %134 ], [ %.089, %133 ], [ %.089, %125 ], [ %.089, %124 ], [ %.089, %109 ], [ %.089, %99 ], [ %.089, %97 ], [ %.089, %82 ], [ %.089, %72 ], [ %.089, %69 ], [ %.089, %68 ], [ %.089, %66 ], [ %.089, %54 ], [ %.089, %44 ], [ %.089, %43 ], [ %42, %41 ], [ %.089, %37 ], [ %.089, %35 ], [ %.089, %23 ], [ %.089, %13 ]
  %.087.be = phi i32 [ %.087, %12 ], [ %.087, %486 ], [ %.087, %485 ], [ %.087, %484 ], [ %.087, %483 ], [ %.087, %481 ], [ %.neg91, %480 ], [ %.087, %479 ], [ %.087, %477 ], [ %.087, %469 ], [ %.087, %468 ], [ %.087, %466 ], [ %.087, %461 ], [ %.087, %460 ], [ %.087, %459 ], [ %.087, %458 ], [ %.087, %455 ], [ %.087, %454 ], [ %.087, %452 ], [ %.087, %446 ], [ %.087, %444 ], [ %.087, %432 ], [ %.087, %422 ], [ %.087, %421 ], [ %.087, %418 ], [ %.087, %417 ], [ %.087, %415 ], [ %.087, %414 ], [ %.087, %404 ], [ %.087, %394 ], [ %.087, %392 ], [ %.087, %391 ], [ %.087, %383 ], [ %.087, %377 ], [ %.087, %374 ], [ %.087, %373 ], [ %.087, %363 ], [ %.087, %353 ], [ %.087, %350 ], [ %.087, %349 ], [ %.087, %347 ], [ %.087, %346 ], [ %.087, %345 ], [ %.087, %334 ], [ %.087, %324 ], [ %.087, %323 ], [ %.087, %315 ], [ %.087, %309 ], [ %.087, %306 ], [ %.087, %305 ], [ %.087, %302 ], [ %.087, %301 ], [ %.087, %290 ], [ %.087, %280 ], [ %.087, %279 ], [ %269, %268 ], [ %.087, %258 ], [ %.087, %257 ], [ %.087, %247 ], [ %.087, %237 ], [ %.087, %236 ], [ %.087, %226 ], [ %.087, %216 ], [ %.087, %215 ], [ %.087, %214 ], [ %.087, %197 ], [ %.087, %187 ], [ %.087, %181 ], [ %.087, %179 ], [ %.087, %168 ], [ %.087, %158 ], [ %.087, %156 ], [ %.087, %155 ], [ %.087, %144 ], [ %.087, %134 ], [ %.087, %133 ], [ %.087, %125 ], [ %.087, %124 ], [ %.087, %109 ], [ %.087, %99 ], [ %.087, %97 ], [ %.087, %82 ], [ %.087, %72 ], [ %.087, %69 ], [ %.087, %68 ], [ %.087, %66 ], [ %.087, %54 ], [ %.087, %44 ], [ 1, %43 ], [ %.087, %41 ], [ %.087, %37 ], [ %.087, %35 ], [ %.087, %23 ], [ %.087, %13 ]
  %.085.be = phi i32 [ %.085, %12 ], [ %.085, %486 ], [ %.085, %485 ], [ %.085, %484 ], [ %.085, %483 ], [ %.085, %481 ], [ %.085, %480 ], [ %.085, %479 ], [ %.085, %477 ], [ %.085, %469 ], [ %.085, %468 ], [ %467, %466 ], [ %.085, %461 ], [ %.085, %460 ], [ %.085, %459 ], [ %.085, %458 ], [ %.085, %455 ], [ %.085, %454 ], [ %.085, %452 ], [ %.085, %446 ], [ %.085, %444 ], [ %.085, %432 ], [ %.085, %422 ], [ %.085, %421 ], [ %.085, %418 ], [ %.085, %417 ], [ %.085, %415 ], [ %.085, %414 ], [ %.085, %404 ], [ %.085, %394 ], [ %.085, %392 ], [ %.085, %391 ], [ %.085, %383 ], [ %.085, %377 ], [ %.085, %374 ], [ %.085, %373 ], [ %.085, %363 ], [ %.085, %353 ], [ %.085, %350 ], [ %.085, %349 ], [ %.085, %347 ], [ %.085, %346 ], [ %.085, %345 ], [ %.085, %334 ], [ %.085, %324 ], [ %.085, %323 ], [ %.085, %315 ], [ %.085, %309 ], [ %.085, %306 ], [ %.085, %305 ], [ %.085, %302 ], [ %.085, %301 ], [ %.085, %290 ], [ %.085, %280 ], [ %.085, %279 ], [ %.085, %268 ], [ %.085, %258 ], [ %.085, %257 ], [ %.085, %247 ], [ %.085, %237 ], [ %.085, %236 ], [ %.085, %226 ], [ %.085, %216 ], [ %.085, %215 ], [ %.085, %214 ], [ %.085, %197 ], [ %.085, %187 ], [ %.085, %181 ], [ %.085, %179 ], [ %.085, %168 ], [ %.085, %158 ], [ %.085, %156 ], [ %.085, %155 ], [ %145, %144 ], [ %.085, %134 ], [ %.085, %133 ], [ %.085, %125 ], [ %.085, %124 ], [ %.085, %109 ], [ %.085, %99 ], [ %.085, %97 ], [ %.085, %82 ], [ %.085, %72 ], [ %.085, %69 ], [ 1, %68 ], [ %.085, %66 ], [ %.085, %54 ], [ %.085, %44 ], [ %.085, %43 ], [ %.085, %41 ], [ %.085, %37 ], [ %.085, %35 ], [ %.085, %23 ], [ %.085, %13 ]
  %.083.be = phi i32 [ %.083, %12 ], [ %.083, %486 ], [ %.083, %485 ], [ %.083, %484 ], [ %.083, %483 ], [ %.083, %481 ], [ %.083, %480 ], [ %.083, %479 ], [ %478, %477 ], [ %.083, %469 ], [ %.083, %468 ], [ %.083, %466 ], [ %.083, %461 ], [ %.083, %460 ], [ %.083, %459 ], [ %.083, %458 ], [ %.083, %455 ], [ %.083, %454 ], [ %.083, %452 ], [ %.083, %446 ], [ %.083, %444 ], [ %.083, %432 ], [ %.083, %422 ], [ %.083, %421 ], [ %.083, %418 ], [ %.083, %417 ], [ %.083, %415 ], [ %.083, %414 ], [ %.083, %404 ], [ %.083, %394 ], [ %.083, %392 ], [ %.083, %391 ], [ %.083, %383 ], [ %.083, %377 ], [ %.083, %374 ], [ %.083, %373 ], [ %.083, %363 ], [ %.083, %353 ], [ %.083, %350 ], [ %.083, %349 ], [ %.083, %347 ], [ %.083, %346 ], [ %.083, %345 ], [ %.083, %334 ], [ %.083, %324 ], [ %.083, %323 ], [ %.083, %315 ], [ %.083, %309 ], [ %.083, %306 ], [ %.083, %305 ], [ %.083, %302 ], [ %.083, %301 ], [ %.083, %290 ], [ %.083, %280 ], [ %.083, %279 ], [ %.083, %268 ], [ %.083, %258 ], [ %.083, %257 ], [ %.083, %247 ], [ %.083, %237 ], [ %.083, %236 ], [ %.neg98, %226 ], [ %.083, %216 ], [ %.083, %215 ], [ %.083, %214 ], [ %.083, %197 ], [ %.083, %187 ], [ %.083, %181 ], [ %.083, %179 ], [ %.083, %168 ], [ %.083, %158 ], [ %157, %156 ], [ %.083, %155 ], [ %.083, %144 ], [ %.083, %134 ], [ %.083, %133 ], [ %.083, %125 ], [ %.083, %124 ], [ %.083, %109 ], [ %.083, %99 ], [ %.083, %97 ], [ %.083, %82 ], [ %.083, %72 ], [ %.083, %69 ], [ %.083, %68 ], [ %.083, %66 ], [ %.083, %54 ], [ %.083, %44 ], [ %.083, %43 ], [ %.083, %41 ], [ %.083, %37 ], [ %.083, %35 ], [ %.083, %23 ], [ %.083, %13 ]
  %.081.be = phi i32 [ %.081, %12 ], [ %.081, %486 ], [ %.081, %485 ], [ %.081, %484 ], [ %.081, %483 ], [ %482, %481 ], [ %.081, %480 ], [ %.081, %479 ], [ %.081, %477 ], [ %.081, %469 ], [ %.081, %468 ], [ %.081, %466 ], [ %.081, %461 ], [ %.081, %460 ], [ %.081, %459 ], [ %.081, %458 ], [ %.081, %455 ], [ %.081, %454 ], [ %.081, %452 ], [ %.081, %446 ], [ %.081, %444 ], [ %.081, %432 ], [ %.081, %422 ], [ %.081, %421 ], [ %.081, %418 ], [ %.081, %417 ], [ %.081, %415 ], [ %.081, %414 ], [ %.081, %404 ], [ %.081, %394 ], [ %.081, %392 ], [ %.081, %391 ], [ %.081, %383 ], [ %.081, %377 ], [ %.081, %374 ], [ %.081, %373 ], [ %.081, %363 ], [ %.081, %353 ], [ %.081, %350 ], [ %.081, %349 ], [ %348, %347 ], [ %.081, %346 ], [ %.081, %345 ], [ %.081, %334 ], [ %.081, %324 ], [ %.081, %323 ], [ %.081, %315 ], [ %.081, %309 ], [ %.081, %306 ], [ %.081, %305 ], [ %.081, %302 ], [ %.081, %301 ], [ %291, %290 ], [ %.081, %280 ], [ %.081, %279 ], [ %.081, %268 ], [ %.081, %258 ], [ %.081, %257 ], [ %.081, %247 ], [ %.081, %237 ], [ %.081, %236 ], [ %.081, %226 ], [ %.081, %216 ], [ %.081, %215 ], [ %.081, %214 ], [ %.081, %197 ], [ %.081, %187 ], [ %.081, %181 ], [ %.081, %179 ], [ %.081, %168 ], [ %.081, %158 ], [ %.081, %156 ], [ %.081, %155 ], [ %.081, %144 ], [ %.081, %134 ], [ %.081, %133 ], [ %.081, %125 ], [ %.081, %124 ], [ %.081, %109 ], [ %.081, %99 ], [ %.081, %97 ], [ %.081, %82 ], [ %.081, %72 ], [ %.081, %69 ], [ %.081, %68 ], [ %.081, %66 ], [ %.081, %54 ], [ %.081, %44 ], [ %.081, %43 ], [ %.081, %41 ], [ %.081, %37 ], [ %.081, %35 ], [ %.081, %23 ], [ %.081, %13 ]
  %.079.be = phi i32 [ %.079, %12 ], [ %.079, %486 ], [ %.079, %485 ], [ %.079, %484 ], [ %.neg, %483 ], [ %.079, %481 ], [ %.079, %480 ], [ %.079, %479 ], [ %.079, %477 ], [ %.079, %469 ], [ %.079, %468 ], [ %.079, %466 ], [ %.079, %461 ], [ %.079, %460 ], [ %.079, %459 ], [ %.079, %458 ], [ %.079, %455 ], [ %.079, %454 ], [ %.079, %452 ], [ %.079, %446 ], [ %.079, %444 ], [ %.079, %432 ], [ %.079, %422 ], [ %.079, %421 ], [ %.079, %418 ], [ %.079, %417 ], [ %.079, %415 ], [ %.079, %414 ], [ %.079, %404 ], [ %.079, %394 ], [ %.079, %392 ], [ %.079, %391 ], [ %.079, %383 ], [ %.079, %377 ], [ %.079, %374 ], [ %.079, %373 ], [ %.079, %363 ], [ %.079, %353 ], [ %.079, %350 ], [ %.079, %349 ], [ %.079, %347 ], [ %.079, %346 ], [ %.079, %345 ], [ %335, %334 ], [ %.079, %324 ], [ %.079, %323 ], [ %.079, %315 ], [ %.079, %309 ], [ %.079, %306 ], [ 1, %305 ], [ %.079, %302 ], [ %.079, %301 ], [ %.079, %290 ], [ %.079, %280 ], [ %.079, %279 ], [ %.079, %268 ], [ %.079, %258 ], [ %.079, %257 ], [ %.079, %247 ], [ %.079, %237 ], [ %.079, %236 ], [ %.079, %226 ], [ %.079, %216 ], [ %.079, %215 ], [ %.079, %214 ], [ %.079, %197 ], [ %.079, %187 ], [ %.079, %181 ], [ %.079, %179 ], [ %.079, %168 ], [ %.079, %158 ], [ %.079, %156 ], [ %.079, %155 ], [ %.079, %144 ], [ %.079, %134 ], [ %.079, %133 ], [ %.079, %125 ], [ %.079, %124 ], [ %.079, %109 ], [ %.079, %99 ], [ %.079, %97 ], [ %.079, %82 ], [ %.079, %72 ], [ %.079, %69 ], [ %.079, %68 ], [ %.079, %66 ], [ %.079, %54 ], [ %.079, %44 ], [ %.079, %43 ], [ %.079, %41 ], [ %.079, %37 ], [ %.079, %35 ], [ %.079, %23 ], [ %.079, %13 ]
  %.077.be = phi i32 [ %.077, %12 ], [ %.077, %486 ], [ %.077, %485 ], [ %.077, %484 ], [ %.077, %483 ], [ %.077, %481 ], [ %.077, %480 ], [ %.077, %479 ], [ %.077, %477 ], [ %.077, %469 ], [ %.077, %468 ], [ %.077, %466 ], [ %.077, %461 ], [ %.077, %460 ], [ %.077, %459 ], [ %.077, %458 ], [ %.077, %455 ], [ %.077, %454 ], [ %.077, %452 ], [ %.077, %446 ], [ %.077, %444 ], [ %.077, %432 ], [ %.077, %422 ], [ %.077, %421 ], [ %.077, %418 ], [ %.077, %417 ], [ %416, %415 ], [ %.077, %414 ], [ %.077, %404 ], [ %.077, %394 ], [ %.077, %392 ], [ %.077, %391 ], [ %.077, %383 ], [ %.077, %377 ], [ %.077, %374 ], [ %.077, %373 ], [ %.077, %363 ], [ %.077, %353 ], [ %.077, %350 ], [ 1, %349 ], [ %.077, %347 ], [ %.077, %346 ], [ %.077, %345 ], [ %.077, %334 ], [ %.077, %324 ], [ %.077, %323 ], [ %.077, %315 ], [ %.077, %309 ], [ %.077, %306 ], [ %.077, %305 ], [ %.077, %302 ], [ %.077, %301 ], [ %.077, %290 ], [ %.077, %280 ], [ %.077, %279 ], [ %.077, %268 ], [ %.077, %258 ], [ %.077, %257 ], [ %.077, %247 ], [ %.077, %237 ], [ %.077, %236 ], [ %.077, %226 ], [ %.077, %216 ], [ %.077, %215 ], [ %.077, %214 ], [ %.077, %197 ], [ %.077, %187 ], [ %.077, %181 ], [ %.077, %179 ], [ %.077, %168 ], [ %.077, %158 ], [ %.077, %156 ], [ %.077, %155 ], [ %.077, %144 ], [ %.077, %134 ], [ %.077, %133 ], [ %.077, %125 ], [ %.077, %124 ], [ %.077, %109 ], [ %.077, %99 ], [ %.077, %97 ], [ %.077, %82 ], [ %.077, %72 ], [ %.077, %69 ], [ %.077, %68 ], [ %.077, %66 ], [ %.077, %54 ], [ %.077, %44 ], [ %.077, %43 ], [ %.077, %41 ], [ %.077, %37 ], [ %.077, %35 ], [ %.077, %23 ], [ %.077, %13 ]
  %.075.be = phi i32 [ %.075, %12 ], [ %.075, %486 ], [ %.075, %485 ], [ 1, %484 ], [ %.075, %483 ], [ %.075, %481 ], [ %.075, %480 ], [ %.075, %479 ], [ %.075, %477 ], [ %.075, %469 ], [ %.075, %468 ], [ %.075, %466 ], [ %.075, %461 ], [ %.075, %460 ], [ %.075, %459 ], [ %.075, %458 ], [ %.075, %455 ], [ %.075, %454 ], [ %.075, %452 ], [ %.075, %446 ], [ %.075, %444 ], [ %.075, %432 ], [ %.075, %422 ], [ %.075, %421 ], [ %.075, %418 ], [ %.075, %417 ], [ %.075, %415 ], [ %.075, %414 ], [ %.075, %404 ], [ %.075, %394 ], [ %393, %392 ], [ %.075, %391 ], [ %.075, %383 ], [ %.075, %377 ], [ %.075, %374 ], [ %.075, %373 ], [ 1, %363 ], [ %.075, %353 ], [ %.075, %350 ], [ %.075, %349 ], [ %.075, %347 ], [ %.075, %346 ], [ %.075, %345 ], [ %.075, %334 ], [ %.075, %324 ], [ %.075, %323 ], [ %.075, %315 ], [ %.075, %309 ], [ %.075, %306 ], [ %.075, %305 ], [ %.075, %302 ], [ %.075, %301 ], [ %.075, %290 ], [ %.075, %280 ], [ %.075, %279 ], [ %.075, %268 ], [ %.075, %258 ], [ %.075, %257 ], [ %.075, %247 ], [ %.075, %237 ], [ %.075, %236 ], [ %.075, %226 ], [ %.075, %216 ], [ %.075, %215 ], [ %.075, %214 ], [ %.075, %197 ], [ %.075, %187 ], [ %.075, %181 ], [ %.075, %179 ], [ %.075, %168 ], [ %.075, %158 ], [ %.075, %156 ], [ %.075, %155 ], [ %.075, %144 ], [ %.075, %134 ], [ %.075, %133 ], [ %.075, %125 ], [ %.075, %124 ], [ %.075, %109 ], [ %.075, %99 ], [ %.075, %97 ], [ %.075, %82 ], [ %.075, %72 ], [ %.075, %69 ], [ %.075, %68 ], [ %.075, %66 ], [ %.075, %54 ], [ %.075, %44 ], [ %.075, %43 ], [ %.075, %41 ], [ %.075, %37 ], [ %.075, %35 ], [ %.075, %23 ], [ %.075, %13 ]
  %.073.be = phi i32 [ %.073, %12 ], [ %.073, %486 ], [ %.073, %485 ], [ %.073, %484 ], [ %.073, %483 ], [ %.073, %481 ], [ %.073, %480 ], [ %.073, %479 ], [ %.073, %477 ], [ %.073, %469 ], [ %.073, %468 ], [ %.073, %466 ], [ %.073, %461 ], [ %.073, %460 ], [ %.073, %459 ], [ %.073, %458 ], [ %456, %455 ], [ %.073, %454 ], [ %.073, %452 ], [ %.073, %446 ], [ %.073, %444 ], [ %.073, %432 ], [ %.073, %422 ], [ %.073, %421 ], [ %.073, %418 ], [ 1, %417 ], [ %.073, %415 ], [ %.073, %414 ], [ %.073, %404 ], [ %.073, %394 ], [ %.073, %392 ], [ %.073, %391 ], [ %.073, %383 ], [ %.073, %377 ], [ %.073, %374 ], [ %.073, %373 ], [ %.073, %363 ], [ %.073, %353 ], [ %.073, %350 ], [ %.073, %349 ], [ %.073, %347 ], [ %.073, %346 ], [ %.073, %345 ], [ %.073, %334 ], [ %.073, %324 ], [ %.073, %323 ], [ %.073, %315 ], [ %.073, %309 ], [ %.073, %306 ], [ %.073, %305 ], [ %.073, %302 ], [ %.073, %301 ], [ %.073, %290 ], [ %.073, %280 ], [ %.073, %279 ], [ %.073, %268 ], [ %.073, %258 ], [ %.073, %257 ], [ %.073, %247 ], [ %.073, %237 ], [ %.073, %236 ], [ %.073, %226 ], [ %.073, %216 ], [ %.073, %215 ], [ %.073, %214 ], [ %.073, %197 ], [ %.073, %187 ], [ %.073, %181 ], [ %.073, %179 ], [ %.073, %168 ], [ %.073, %158 ], [ %.073, %156 ], [ %.073, %155 ], [ %.073, %144 ], [ %.073, %134 ], [ %.073, %133 ], [ %.073, %125 ], [ %.073, %124 ], [ %.073, %109 ], [ %.073, %99 ], [ %.073, %97 ], [ %.073, %82 ], [ %.073, %72 ], [ %.073, %69 ], [ %.073, %68 ], [ %.073, %66 ], [ %.073, %54 ], [ %.073, %44 ], [ %.073, %43 ], [ %.073, %41 ], [ %.073, %37 ], [ %.073, %35 ], [ %.073, %23 ], [ %.073, %13 ]
  %.071.be = phi i32 [ %.071, %12 ], [ %.071, %486 ], [ %.071, %485 ], [ %.071, %484 ], [ %.071, %483 ], [ %.071, %481 ], [ %.071, %480 ], [ %.071, %479 ], [ %.071, %477 ], [ %.071, %469 ], [ %.071, %468 ], [ %.071, %466 ], [ %.071, %461 ], [ %.071, %460 ], [ %.071, %459 ], [ %.071, %458 ], [ %.071, %455 ], [ %.071, %454 ], [ %453, %452 ], [ %.071, %446 ], [ %.071, %444 ], [ %.071, %432 ], [ %.071, %422 ], [ 1, %421 ], [ %.071, %418 ], [ %.071, %417 ], [ %.071, %415 ], [ %.071, %414 ], [ %.071, %404 ], [ %.071, %394 ], [ %.071, %392 ], [ %.071, %391 ], [ %.071, %383 ], [ %.071, %377 ], [ %.071, %374 ], [ %.071, %373 ], [ %.071, %363 ], [ %.071, %353 ], [ %.071, %350 ], [ %.071, %349 ], [ %.071, %347 ], [ %.071, %346 ], [ %.071, %345 ], [ %.071, %334 ], [ %.071, %324 ], [ %.071, %323 ], [ %.071, %315 ], [ %.071, %309 ], [ %.071, %306 ], [ %.071, %305 ], [ %.071, %302 ], [ %.071, %301 ], [ %.071, %290 ], [ %.071, %280 ], [ %.071, %279 ], [ %.071, %268 ], [ %.071, %258 ], [ %.071, %257 ], [ %.071, %247 ], [ %.071, %237 ], [ %.071, %236 ], [ %.071, %226 ], [ %.071, %216 ], [ %.071, %215 ], [ %.071, %214 ], [ %.071, %197 ], [ %.071, %187 ], [ %.071, %181 ], [ %.071, %179 ], [ %.071, %168 ], [ %.071, %158 ], [ %.071, %156 ], [ %.071, %155 ], [ %.071, %144 ], [ %.071, %134 ], [ %.071, %133 ], [ %.071, %125 ], [ %.071, %124 ], [ %.071, %109 ], [ %.071, %99 ], [ %.071, %97 ], [ %.071, %82 ], [ %.071, %72 ], [ %.071, %69 ], [ %.071, %68 ], [ %.071, %66 ], [ %.071, %54 ], [ %.071, %44 ], [ %.071, %43 ], [ %.071, %41 ], [ %.071, %37 ], [ %.071, %35 ], [ %.071, %23 ], [ %.071, %13 ]
  %.0.be = phi i32 [ %.0, %12 ], [ -56075894, %486 ], [ -280478951, %485 ], [ -1123282423, %484 ], [ 251732624, %483 ], [ -2116563694, %481 ], [ -1814298229, %480 ], [ 1907298268, %479 ], [ 1047711841, %477 ], [ 1251716871, %469 ], [ -888514685, %468 ], [ -1441045908, %466 ], [ -1900361930, %461 ], [ 1548666592, %460 ], [ 476773262, %459 ], [ 419622793, %458 ], [ -1774426219, %455 ], [ 645786295, %454 ], [ -181528962, %452 ], [ 1504782112, %446 ], [ %445, %444 ], [ %443, %432 ], [ %431, %422 ], [ -181528962, %421 ], [ %420, %418 ], [ -1774426219, %417 ], [ -1927513352, %415 ], [ 558948376, %414 ], [ %413, %404 ], [ %403, %394 ], [ 1054233426, %392 ], [ 2075180040, %391 ], [ 1896609703, %383 ], [ %382, %377 ], [ %376, %374 ], [ 1054233426, %373 ], [ %372, %363 ], [ %362, %353 ], [ %352, %350 ], [ -1927513352, %349 ], [ 1738560920, %347 ], [ -591273518, %346 ], [ 1979172902, %345 ], [ %344, %334 ], [ %333, %324 ], [ 724536589, %323 ], [ -1155756667, %315 ], [ %314, %309 ], [ %308, %306 ], [ 1979172902, %305 ], [ %304, %302 ], [ 1738560920, %301 ], [ %300, %290 ], [ %289, %280 ], [ -1851208981, %279 ], [ %278, %268 ], [ %267, %258 ], [ 1320284633, %257 ], [ %256, %247 ], [ %246, %237 ], [ 951694889, %236 ], [ %235, %226 ], [ %225, %216 ], [ 393551234, %215 ], [ 161504288, %214 ], [ %213, %197 ], [ %196, %187 ], [ %186, %181 ], [ %180, %179 ], [ %178, %168 ], [ %167, %158 ], [ 951694889, %156 ], [ 445970067, %155 ], [ %154, %144 ], [ %143, %134 ], [ -807758783, %133 ], [ 2023628443, %125 ], [ 2023628443, %124 ], [ %123, %109 ], [ %108, %99 ], [ %98, %97 ], [ %96, %82 ], [ %81, %72 ], [ %71, %69 ], [ 445970067, %68 ], [ %67, %66 ], [ %65, %54 ], [ %53, %44 ], [ -1851208981, %43 ], [ -887976067, %41 ], [ 2056624302, %37 ], [ %36, %35 ], [ %34, %23 ], [ %22, %13 ]
  br label %12

13:                                               ; preds = %12
  %14 = load i32, i32* @x.3, align 4
  %15 = load i32, i32* @y.4, align 4
  %16 = add i32 %14, -1
  %17 = mul i32 %16, %14
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %15, 10
  %21 = or i1 %20, %19
  %22 = select i1 %21, i32 419622793, i32 -611890823
  br label %.backedge

23:                                               ; preds = %12
  %24 = load i32, i32* @n, align 4
  %25 = icmp sle i32 %.089, %24
  store i1 %25, i1* %5, align 1
  %26 = load i32, i32* @x.3, align 4
  %27 = load i32, i32* @y.4, align 4
  %28 = add i32 %26, -1
  %29 = mul i32 %28, %26
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %32, %31
  %34 = select i1 %33, i32 500091029, i32 -611890823
  br label %.backedge

35:                                               ; preds = %12
  %.0..0..0. = load volatile i1, i1* %5, align 1
  %36 = select i1 %.0..0..0., i32 298324015, i32 -1415507615
  br label %.backedge

37:                                               ; preds = %12
  %38 = sext i32 %.089 to i64
  %39 = getelementptr inbounds [310 x [310 x i8]], [310 x [310 x i8]]* @s, i64 0, i64 %38, i64 1
  %40 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* nonnull %39)
  br label %.backedge

41:                                               ; preds = %12
  %42 = add i32 %.089, 1
  br label %.backedge

43:                                               ; preds = %12
  br label %.backedge

44:                                               ; preds = %12
  %45 = load i32, i32* @x.3, align 4
  %46 = load i32, i32* @y.4, align 4
  %47 = add i32 %45, -1
  %48 = mul i32 %47, %45
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %46, 10
  %52 = or i1 %51, %50
  %53 = select i1 %52, i32 476773262, i32 307507044
  br label %.backedge

54:                                               ; preds = %12
  %55 = load i32, i32* @m, align 4
  %56 = icmp sle i32 %.087, %55
  store i1 %56, i1* %4, align 1
  %57 = load i32, i32* @x.3, align 4
  %58 = load i32, i32* @y.4, align 4
  %59 = add i32 %57, -1
  %60 = mul i32 %59, %57
  %61 = and i32 %60, 1
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %63, %62
  %65 = select i1 %64, i32 517165665, i32 307507044
  br label %.backedge

66:                                               ; preds = %12
  %.0..0..0.67 = load volatile i1, i1* %4, align 1
  %67 = select i1 %.0..0..0.67, i32 742166781, i32 1828589357
  br label %.backedge

68:                                               ; preds = %12
  br label %.backedge

69:                                               ; preds = %12
  %70 = load i32, i32* @n, align 4
  %.not100 = icmp sgt i32 %.085, %70
  %71 = select i1 %.not100, i32 -1668100515, i32 456378294
  br label %.backedge

72:                                               ; preds = %12
  %73 = load i32, i32* @x.3, align 4
  %74 = load i32, i32* @y.4, align 4
  %75 = add i32 %73, -1
  %76 = mul i32 %75, %73
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %74, 10
  %80 = or i1 %79, %78
  %81 = select i1 %80, i32 1548666592, i32 835531997
  br label %.backedge

82:                                               ; preds = %12
  %83 = sext i32 %.085 to i64
  %84 = sext i32 %.087 to i64
  %85 = getelementptr inbounds [310 x [310 x i8]], [310 x [310 x i8]]* @s, i64 0, i64 %83, i64 %84
  %86 = load i8, i8* %85, align 1
  %87 = icmp eq i8 %86, 35
  store i1 %87, i1* %3, align 1
  %88 = load i32, i32* @x.3, align 4
  %89 = load i32, i32* @y.4, align 4
  %90 = add i32 %88, -1
  %91 = mul i32 %90, %88
  %92 = and i32 %91, 1
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %94, %93
  %96 = select i1 %95, i32 301030627, i32 835531997
  br label %.backedge

97:                                               ; preds = %12
  %.0..0..0.68 = load volatile i1, i1* %3, align 1
  %98 = select i1 %.0..0..0.68, i32 -1556230486, i32 877281947
  br label %.backedge

99:                                               ; preds = %12
  %100 = load i32, i32* @x.3, align 4
  %101 = load i32, i32* @y.4, align 4
  %102 = add i32 %100, -1
  %103 = mul i32 %102, %100
  %104 = and i32 %103, 1
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %101, 10
  %107 = or i1 %106, %105
  %108 = select i1 %107, i32 -1900361930, i32 -663607308
  br label %.backedge

109:                                              ; preds = %12
  %110 = load i32, i32* @cnt, align 4
  %111 = add i32 %110, 1
  store i32 %111, i32* @cnt, align 4
  %112 = sext i32 %.085 to i64
  %113 = sext i32 %.087 to i64
  %114 = getelementptr inbounds [310 x [310 x i32]], [310 x [310 x i32]]* @ans, i64 0, i64 %112, i64 %113
  store i32 %111, i32* %114, align 4
  %115 = load i32, i32* @x.3, align 4
  %116 = load i32, i32* @y.4, align 4
  %117 = add i32 %115, -1
  %118 = mul i32 %117, %115
  %119 = and i32 %118, 1
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %116, 10
  %122 = or i1 %121, %120
  %123 = select i1 %122, i32 1651376951, i32 -663607308
  br label %.backedge

124:                                              ; preds = %12
  br label %.backedge

125:                                              ; preds = %12
  %126 = add i32 %.085, -1
  %127 = sext i32 %126 to i64
  %128 = sext i32 %.087 to i64
  %129 = getelementptr inbounds [310 x [310 x i32]], [310 x [310 x i32]]* @ans, i64 0, i64 %127, i64 %128
  %130 = load i32, i32* %129, align 4
  %131 = sext i32 %.085 to i64
  %132 = getelementptr inbounds [310 x [310 x i32]], [310 x [310 x i32]]* @ans, i64 0, i64 %131, i64 %128
  store i32 %130, i32* %132, align 4
  br label %.backedge

133:                                              ; preds = %12
  br label %.backedge

134:                                              ; preds = %12
  %135 = load i32, i32* @x.3, align 4
  %136 = load i32, i32* @y.4, align 4
  %137 = add i32 %135, -1
  %138 = mul i32 %137, %135
  %139 = and i32 %138, 1
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %136, 10
  %142 = or i1 %141, %140
  %143 = select i1 %142, i32 -1441045908, i32 1183727740
  br label %.backedge

144:                                              ; preds = %12
  %145 = add i32 %.085, 1
  %146 = load i32, i32* @x.3, align 4
  %147 = load i32, i32* @y.4, align 4
  %148 = add i32 %146, -1
  %149 = mul i32 %148, %146
  %150 = and i32 %149, 1
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %152, %151
  %154 = select i1 %153, i32 370065709, i32 1183727740
  br label %.backedge

155:                                              ; preds = %12
  br label %.backedge

156:                                              ; preds = %12
  %157 = load i32, i32* @n, align 4
  br label %.backedge

158:                                              ; preds = %12
  %159 = load i32, i32* @x.3, align 4
  %160 = load i32, i32* @y.4, align 4
  %161 = add i32 %159, -1
  %162 = mul i32 %161, %159
  %163 = and i32 %162, 1
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %160, 10
  %166 = or i1 %165, %164
  %167 = select i1 %166, i32 -888514685, i32 671239878
  br label %.backedge

168:                                              ; preds = %12
  %169 = icmp sgt i32 %.083, 0
  store i1 %169, i1* %2, align 1
  %170 = load i32, i32* @x.3, align 4
  %171 = load i32, i32* @y.4, align 4
  %172 = add i32 %170, -1
  %173 = mul i32 %172, %170
  %174 = and i32 %173, 1
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %176, %175
  %178 = select i1 %177, i32 309506943, i32 671239878
  br label %.backedge

179:                                              ; preds = %12
  %.0..0..0.69 = load volatile i1, i1* %2, align 1
  %180 = select i1 %.0..0..0.69, i32 1816557805, i32 -293757401
  br label %.backedge

181:                                              ; preds = %12
  %182 = sext i32 %.083 to i64
  %183 = sext i32 %.087 to i64
  %184 = getelementptr inbounds [310 x [310 x i32]], [310 x [310 x i32]]* @ans, i64 0, i64 %182, i64 %183
  %185 = load i32, i32* %184, align 4
  %.not99 = icmp eq i32 %185, 0
  %186 = select i1 %.not99, i32 341763062, i32 161504288
  br label %.backedge

187:                                              ; preds = %12
  %188 = load i32, i32* @x.3, align 4
  %189 = load i32, i32* @y.4, align 4
  %190 = add i32 %188, -1
  %191 = mul i32 %190, %188
  %192 = and i32 %191, 1
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %194, %193
  %196 = select i1 %195, i32 1251716871, i32 893468599
  br label %.backedge

197:                                              ; preds = %12
  %198 = add i32 %.083, 1
  %199 = sext i32 %198 to i64
  %200 = sext i32 %.087 to i64
  %201 = getelementptr inbounds [310 x [310 x i32]], [310 x [310 x i32]]* @ans, i64 0, i64 %199, i64 %200
  %202 = load i32, i32* %201, align 4
  %203 = sext i32 %.083 to i64
  %204 = getelementptr inbounds [310 x [310 x i32]], [310 x [310 x i32]]* @ans, i64 0, i64 %203, i64 %200
  store i32 %202, i32* %204, align 4
  %205 = load i32, i32* @x.3, align 4
  %206 = load i32, i32* @y.4, align 4
  %207 = add i32 %205, -1
  %208 = mul i32 %207, %205
  %209 = and i32 %208, 1
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %206, 10
  %212 = or i1 %211, %210
  %213 = select i1 %212, i32 1988020238, i32 893468599
  br label %.backedge

214:                                              ; preds = %12
  br label %.backedge

215:                                              ; preds = %12
  br label %.backedge

216:                                              ; preds = %12
  %217 = load i32, i32* @x.3, align 4
  %218 = load i32, i32* @y.4, align 4
  %219 = add i32 %217, -1
  %220 = mul i32 %219, %217
  %221 = and i32 %220, 1
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %218, 10
  %224 = or i1 %223, %222
  %225 = select i1 %224, i32 1047711841, i32 -2070308067
  br label %.backedge

226:                                              ; preds = %12
  %.neg98 = add i32 %.083, -1
  %227 = load i32, i32* @x.3, align 4
  %228 = load i32, i32* @y.4, align 4
  %229 = add i32 %227, -1
  %230 = mul i32 %229, %227
  %231 = and i32 %230, 1
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %228, 10
  %234 = or i1 %233, %232
  %235 = select i1 %234, i32 -1338787801, i32 -2070308067
  br label %.backedge

236:                                              ; preds = %12
  br label %.backedge

237:                                              ; preds = %12
  %238 = load i32, i32* @x.3, align 4
  %239 = load i32, i32* @y.4, align 4
  %240 = add i32 %238, -1
  %241 = mul i32 %240, %238
  %242 = and i32 %241, 1
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %239, 10
  %245 = or i1 %244, %243
  %246 = select i1 %245, i32 1907298268, i32 -846234961
  br label %.backedge

247:                                              ; preds = %12
  %248 = load i32, i32* @x.3, align 4
  %249 = load i32, i32* @y.4, align 4
  %250 = add i32 %248, -1
  %251 = mul i32 %250, %248
  %252 = and i32 %251, 1
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %254, %253
  %256 = select i1 %255, i32 -573307873, i32 -846234961
  br label %.backedge

257:                                              ; preds = %12
  br label %.backedge

258:                                              ; preds = %12
  %259 = load i32, i32* @x.3, align 4
  %260 = load i32, i32* @y.4, align 4
  %261 = add i32 %259, -1
  %262 = mul i32 %261, %259
  %263 = and i32 %262, 1
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %260, 10
  %266 = or i1 %265, %264
  %267 = select i1 %266, i32 -1814298229, i32 -670781804
  br label %.backedge

268:                                              ; preds = %12
  %269 = add i32 %.087, 1
  %270 = load i32, i32* @x.3, align 4
  %271 = load i32, i32* @y.4, align 4
  %272 = add i32 %270, -1
  %273 = mul i32 %272, %270
  %274 = and i32 %273, 1
  %275 = icmp eq i32 %274, 0
  %276 = icmp slt i32 %271, 10
  %277 = or i1 %276, %275
  %278 = select i1 %277, i32 -464101864, i32 -670781804
  br label %.backedge

279:                                              ; preds = %12
  br label %.backedge

280:                                              ; preds = %12
  %281 = load i32, i32* @x.3, align 4
  %282 = load i32, i32* @y.4, align 4
  %283 = add i32 %281, -1
  %284 = mul i32 %283, %281
  %285 = and i32 %284, 1
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %287, %286
  %289 = select i1 %288, i32 -2116563694, i32 195528163
  br label %.backedge

290:                                              ; preds = %12
  %291 = load i32, i32* @m, align 4
  %292 = load i32, i32* @x.3, align 4
  %293 = load i32, i32* @y.4, align 4
  %294 = add i32 %292, -1
  %295 = mul i32 %294, %292
  %296 = and i32 %295, 1
  %297 = icmp eq i32 %296, 0
  %298 = icmp slt i32 %293, 10
  %299 = or i1 %298, %297
  %300 = select i1 %299, i32 -1570923073, i32 195528163
  br label %.backedge

301:                                              ; preds = %12
  br label %.backedge

302:                                              ; preds = %12
  %303 = icmp sgt i32 %.081, 0
  %304 = select i1 %303, i32 1162275434, i32 -1140787909
  br label %.backedge

305:                                              ; preds = %12
  br label %.backedge

306:                                              ; preds = %12
  %307 = load i32, i32* @n, align 4
  %.not97 = icmp sgt i32 %.079, %307
  %308 = select i1 %.not97, i32 1255208911, i32 1340002979
  br label %.backedge

309:                                              ; preds = %12
  %310 = sext i32 %.079 to i64
  %311 = sext i32 %.081 to i64
  %312 = getelementptr inbounds [310 x [310 x i32]], [310 x [310 x i32]]* @ans, i64 0, i64 %310, i64 %311
  %313 = load i32, i32* %312, align 4
  %.not96 = icmp eq i32 %313, 0
  %314 = select i1 %.not96, i32 1241549335, i32 -1155756667
  br label %.backedge

315:                                              ; preds = %12
  %316 = sext i32 %.079 to i64
  %317 = add i32 %.081, 1
  %318 = sext i32 %317 to i64
  %319 = getelementptr inbounds [310 x [310 x i32]], [310 x [310 x i32]]* @ans, i64 0, i64 %316, i64 %318
  %320 = load i32, i32* %319, align 4
  %321 = sext i32 %.081 to i64
  %322 = getelementptr inbounds [310 x [310 x i32]], [310 x [310 x i32]]* @ans, i64 0, i64 %316, i64 %321
  store i32 %320, i32* %322, align 4
  br label %.backedge

323:                                              ; preds = %12
  br label %.backedge

324:                                              ; preds = %12
  %325 = load i32, i32* @x.3, align 4
  %326 = load i32, i32* @y.4, align 4
  %327 = add i32 %325, -1
  %328 = mul i32 %327, %325
  %329 = and i32 %328, 1
  %330 = icmp eq i32 %329, 0
  %331 = icmp slt i32 %326, 10
  %332 = or i1 %331, %330
  %333 = select i1 %332, i32 251732624, i32 -1983931272
  br label %.backedge

334:                                              ; preds = %12
  %335 = add i32 %.079, 1
  %336 = load i32, i32* @x.3, align 4
  %337 = load i32, i32* @y.4, align 4
  %338 = add i32 %336, -1
  %339 = mul i32 %338, %336
  %340 = and i32 %339, 1
  %341 = icmp eq i32 %340, 0
  %342 = icmp slt i32 %337, 10
  %343 = or i1 %342, %341
  %344 = select i1 %343, i32 1388251545, i32 -1983931272
  br label %.backedge

345:                                              ; preds = %12
  br label %.backedge

346:                                              ; preds = %12
  br label %.backedge

347:                                              ; preds = %12
  %348 = add i32 %.081, -1
  br label %.backedge

349:                                              ; preds = %12
  br label %.backedge

350:                                              ; preds = %12
  %351 = load i32, i32* @m, align 4
  %.not95 = icmp sgt i32 %.077, %351
  %352 = select i1 %.not95, i32 878471508, i32 973946205
  br label %.backedge

353:                                              ; preds = %12
  %354 = load i32, i32* @x.3, align 4
  %355 = load i32, i32* @y.4, align 4
  %356 = add i32 %354, -1
  %357 = mul i32 %356, %354
  %358 = and i32 %357, 1
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %355, 10
  %361 = or i1 %360, %359
  %362 = select i1 %361, i32 -1123282423, i32 -2002391069
  br label %.backedge

363:                                              ; preds = %12
  %364 = load i32, i32* @x.3, align 4
  %365 = load i32, i32* @y.4, align 4
  %366 = add i32 %364, -1
  %367 = mul i32 %366, %364
  %368 = and i32 %367, 1
  %369 = icmp eq i32 %368, 0
  %370 = icmp slt i32 %365, 10
  %371 = or i1 %370, %369
  %372 = select i1 %371, i32 -1040226854, i32 -2002391069
  br label %.backedge

373:                                              ; preds = %12
  br label %.backedge

374:                                              ; preds = %12
  %375 = load i32, i32* @n, align 4
  %.not94 = icmp sgt i32 %.075, %375
  %376 = select i1 %.not94, i32 1643894906, i32 -712492149
  br label %.backedge

377:                                              ; preds = %12
  %378 = sext i32 %.075 to i64
  %379 = sext i32 %.077 to i64
  %380 = getelementptr inbounds [310 x [310 x i32]], [310 x [310 x i32]]* @ans, i64 0, i64 %378, i64 %379
  %381 = load i32, i32* %380, align 4
  %.not93 = icmp eq i32 %381, 0
  %382 = select i1 %.not93, i32 1771593193, i32 1896609703
  br label %.backedge

383:                                              ; preds = %12
  %384 = sext i32 %.075 to i64
  %385 = add i32 %.077, -1
  %386 = sext i32 %385 to i64
  %387 = getelementptr inbounds [310 x [310 x i32]], [310 x [310 x i32]]* @ans, i64 0, i64 %384, i64 %386
  %388 = load i32, i32* %387, align 4
  %389 = sext i32 %.077 to i64
  %390 = getelementptr inbounds [310 x [310 x i32]], [310 x [310 x i32]]* @ans, i64 0, i64 %384, i64 %389
  store i32 %388, i32* %390, align 4
  br label %.backedge

391:                                              ; preds = %12
  br label %.backedge

392:                                              ; preds = %12
  %393 = add i32 %.075, 1
  br label %.backedge

394:                                              ; preds = %12
  %395 = load i32, i32* @x.3, align 4
  %396 = load i32, i32* @y.4, align 4
  %397 = add i32 %395, -1
  %398 = mul i32 %397, %395
  %399 = and i32 %398, 1
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %401, %400
  %403 = select i1 %402, i32 -280478951, i32 -367450589
  br label %.backedge

404:                                              ; preds = %12
  %405 = load i32, i32* @x.3, align 4
  %406 = load i32, i32* @y.4, align 4
  %407 = add i32 %405, -1
  %408 = mul i32 %407, %405
  %409 = and i32 %408, 1
  %410 = icmp eq i32 %409, 0
  %411 = icmp slt i32 %406, 10
  %412 = or i1 %411, %410
  %413 = select i1 %412, i32 1119122231, i32 -367450589
  br label %.backedge

414:                                              ; preds = %12
  br label %.backedge

415:                                              ; preds = %12
  %416 = add i32 %.077, 1
  br label %.backedge

417:                                              ; preds = %12
  br label %.backedge

418:                                              ; preds = %12
  %419 = load i32, i32* @n, align 4
  %.not = icmp sgt i32 %.073, %419
  %420 = select i1 %.not, i32 1836485796, i32 -198017034
  br label %.backedge

421:                                              ; preds = %12
  br label %.backedge

422:                                              ; preds = %12
  %423 = load i32, i32* @x.3, align 4
  %424 = load i32, i32* @y.4, align 4
  %425 = add i32 %423, -1
  %426 = mul i32 %425, %423
  %427 = and i32 %426, 1
  %428 = icmp eq i32 %427, 0
  %429 = icmp slt i32 %424, 10
  %430 = or i1 %429, %428
  %431 = select i1 %430, i32 -56075894, i32 -648924474
  br label %.backedge

432:                                              ; preds = %12
  %433 = load i32, i32* @m, align 4
  %434 = icmp sle i32 %.071, %433
  store i1 %434, i1* %1, align 1
  %435 = load i32, i32* @x.3, align 4
  %436 = load i32, i32* @y.4, align 4
  %437 = add i32 %435, -1
  %438 = mul i32 %437, %435
  %439 = and i32 %438, 1
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %436, 10
  %442 = or i1 %441, %440
  %443 = select i1 %442, i32 -866454514, i32 -648924474
  br label %.backedge

444:                                              ; preds = %12
  %.0..0..0.70 = load volatile i1, i1* %1, align 1
  %445 = select i1 %.0..0..0.70, i32 1964846928, i32 -1074304077
  br label %.backedge

446:                                              ; preds = %12
  %447 = sext i32 %.073 to i64
  %448 = sext i32 %.071 to i64
  %449 = getelementptr inbounds [310 x [310 x i32]], [310 x [310 x i32]]* @ans, i64 0, i64 %447, i64 %448
  %450 = load i32, i32* %449, align 4
  %451 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i32 %450)
  br label %.backedge

452:                                              ; preds = %12
  %453 = add i32 %.071, 1
  br label %.backedge

454:                                              ; preds = %12
  %putchar = tail call i32 @putchar(i32 10)
  br label %.backedge

455:                                              ; preds = %12
  %456 = add i32 %.073, 1
  br label %.backedge

457:                                              ; preds = %12
  ret i32 0

458:                                              ; preds = %12
  br label %.backedge

459:                                              ; preds = %12
  br label %.backedge

460:                                              ; preds = %12
  br label %.backedge

461:                                              ; preds = %12
  %462 = load i32, i32* @cnt, align 4
  %.neg92 = add i32 %462, 1
  store i32 %.neg92, i32* @cnt, align 4
  %463 = sext i32 %.085 to i64
  %464 = sext i32 %.087 to i64
  %465 = getelementptr inbounds [310 x [310 x i32]], [310 x [310 x i32]]* @ans, i64 0, i64 %463, i64 %464
  store i32 %.neg92, i32* %465, align 4
  br label %.backedge

466:                                              ; preds = %12
  %467 = add i32 %.085, 1
  br label %.backedge

468:                                              ; preds = %12
  br label %.backedge

469:                                              ; preds = %12
  %470 = add i32 %.083, 1
  %471 = sext i32 %470 to i64
  %472 = sext i32 %.087 to i64
  %473 = getelementptr inbounds [310 x [310 x i32]], [310 x [310 x i32]]* @ans, i64 0, i64 %471, i64 %472
  %474 = load i32, i32* %473, align 4
  %475 = sext i32 %.083 to i64
  %476 = getelementptr inbounds [310 x [310 x i32]], [310 x [310 x i32]]* @ans, i64 0, i64 %475, i64 %472
  store i32 %474, i32* %476, align 4
  br label %.backedge

477:                                              ; preds = %12
  %478 = add i32 %.083, -1
  br label %.backedge

479:                                              ; preds = %12
  br label %.backedge

480:                                              ; preds = %12
  %.neg91 = add i32 %.087, 1
  br label %.backedge

481:                                              ; preds = %12
  %482 = load i32, i32* @m, align 4
  br label %.backedge

483:                                              ; preds = %12
  %.neg = add i32 %.079, 1
  br label %.backedge

484:                                              ; preds = %12
  br label %.backedge

485:                                              ; preds = %12
  br label %.backedge

486:                                              ; preds = %12
  br label %.backedge
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_Z4readv() local_unnamed_addr #0 comdat {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = tail call i32 @getchar()
  %4 = trunc i32 %3 to i8
  br label %5

5:                                                ; preds = %.backedge, %0
  %.024 = phi i64 [ 0, %0 ], [ %.024.be, %.backedge ]
  %.022 = phi i64 [ 1, %0 ], [ %.022.be, %.backedge ]
  %.020 = phi i8 [ %4, %0 ], [ %.020.be, %.backedge ]
  %.018 = phi i32 [ 452375658, %0 ], [ %.018.be, %.backedge ]
  %.016 = phi i1 [ undef, %0 ], [ %.016.be, %.backedge ]
  %.0 = phi i1 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.018, label %.backedge [
    i32 452375658, label %6
    i32 153519014, label %9
    i32 1053336186, label %12
    i32 -667305505, label %14
    i32 -326138350, label %16
    i32 -430488904, label %19
    i32 1898721793, label %22
    i32 151727538, label %32
    i32 94930044, label %44
    i32 851491115, label %45
    i32 -1164928394, label %46
    i32 -1163143119, label %56
    i32 -904799156, label %67
    i32 349914556, label %69
    i32 -575570562, label %79
    i32 864444051, label %90
    i32 -235709522, label %91
    i32 1983464259, label %93
    i32 -806266199, label %98
    i32 -629639408, label %100
    i32 -17513271, label %103
    i32 -1156525302, label %104
  ]

.backedge:                                        ; preds = %5, %104, %103, %100, %93, %91, %90, %79, %69, %67, %56, %46, %45, %44, %32, %22, %19, %16, %14, %12, %9, %6
  %.024.be = phi i64 [ %.024, %5 ], [ %.024, %104 ], [ %.024, %103 ], [ %.024, %100 ], [ %95, %93 ], [ %.024, %91 ], [ %.024, %90 ], [ %.024, %79 ], [ %.024, %69 ], [ %.024, %67 ], [ %.024, %56 ], [ %.024, %46 ], [ %.024, %45 ], [ %.024, %44 ], [ %.024, %32 ], [ %.024, %22 ], [ %.024, %19 ], [ %.024, %16 ], [ %.024, %14 ], [ %.024, %12 ], [ %.024, %9 ], [ %.024, %6 ]
  %.022.be = phi i64 [ %.022, %5 ], [ %.022, %104 ], [ %.022, %103 ], [ -1, %100 ], [ %.022, %93 ], [ %.022, %91 ], [ %.022, %90 ], [ %.022, %79 ], [ %.022, %69 ], [ %.022, %67 ], [ %.022, %56 ], [ %.022, %46 ], [ %.022, %45 ], [ %.022, %44 ], [ -1, %32 ], [ %.022, %22 ], [ %.022, %19 ], [ %.022, %16 ], [ %.022, %14 ], [ %.022, %12 ], [ %.022, %9 ], [ %.022, %6 ]
  %.020.be = phi i8 [ %.020, %5 ], [ %.020, %104 ], [ %.020, %103 ], [ %102, %100 ], [ %97, %93 ], [ %.020, %91 ], [ %.020, %90 ], [ %.020, %79 ], [ %.020, %69 ], [ %.020, %67 ], [ %.020, %56 ], [ %.020, %46 ], [ %.020, %45 ], [ %.020, %44 ], [ %34, %32 ], [ %.020, %22 ], [ %.020, %19 ], [ %18, %16 ], [ %.020, %14 ], [ %.020, %12 ], [ %.020, %9 ], [ %.020, %6 ]
  %.018.be = phi i32 [ %.018, %5 ], [ -575570562, %104 ], [ -1163143119, %103 ], [ 151727538, %100 ], [ -1164928394, %93 ], [ %92, %91 ], [ -235709522, %90 ], [ %89, %79 ], [ %78, %69 ], [ %68, %67 ], [ %66, %56 ], [ %55, %46 ], [ -1164928394, %45 ], [ 851491115, %44 ], [ %43, %32 ], [ %31, %22 ], [ %21, %19 ], [ 452375658, %16 ], [ %15, %14 ], [ -667305505, %12 ], [ %11, %9 ], [ %8, %6 ]
  %.016.be = phi i1 [ %.016, %5 ], [ %.016, %104 ], [ %.016, %103 ], [ %.016, %100 ], [ %.016, %93 ], [ %.016, %91 ], [ %.016, %90 ], [ %.016, %79 ], [ %.016, %69 ], [ %.016, %67 ], [ %.016, %56 ], [ %.016, %46 ], [ %.016, %45 ], [ %.016, %44 ], [ %.016, %32 ], [ %.016, %22 ], [ %.016, %19 ], [ %.016, %16 ], [ %.016, %14 ], [ %13, %12 ], [ false, %9 ], [ %.016, %6 ]
  %.0.be = phi i1 [ %.0, %5 ], [ %.0, %104 ], [ %.0, %103 ], [ %.0, %100 ], [ %.0, %93 ], [ %.0, %91 ], [ %.0..0..0.15, %90 ], [ %.0, %79 ], [ %.0, %69 ], [ false, %67 ], [ %.0, %56 ], [ %.0, %46 ], [ %.0, %45 ], [ %.0, %44 ], [ %.0, %32 ], [ %.0, %22 ], [ %.0, %19 ], [ %.0, %16 ], [ %.0, %14 ], [ %.0, %12 ], [ %.0, %9 ], [ %.0, %6 ]
  br label %5

6:                                                ; preds = %5
  %7 = icmp slt i8 %.020, 48
  %8 = select i1 %7, i32 1053336186, i32 153519014
  br label %.backedge

9:                                                ; preds = %5
  %10 = icmp sgt i8 %.020, 57
  %11 = select i1 %10, i32 1053336186, i32 -667305505
  br label %.backedge

12:                                               ; preds = %5
  %13 = icmp ne i8 %.020, 45
  br label %.backedge

14:                                               ; preds = %5
  %15 = select i1 %.016, i32 -326138350, i32 -430488904
  br label %.backedge

16:                                               ; preds = %5
  %17 = tail call i32 @getchar()
  %18 = trunc i32 %17 to i8
  br label %.backedge

19:                                               ; preds = %5
  %20 = icmp eq i8 %.020, 45
  %21 = select i1 %20, i32 1898721793, i32 851491115
  br label %.backedge

22:                                               ; preds = %5
  %23 = load i32, i32* @x.5, align 4
  %24 = load i32, i32* @y.6, align 4
  %25 = add i32 %23, -1
  %26 = mul i32 %25, %23
  %27 = and i32 %26, 1
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %24, 10
  %30 = or i1 %29, %28
  %31 = select i1 %30, i32 151727538, i32 -629639408
  br label %.backedge

32:                                               ; preds = %5
  %33 = tail call i32 @getchar()
  %34 = trunc i32 %33 to i8
  %35 = load i32, i32* @x.5, align 4
  %36 = load i32, i32* @y.6, align 4
  %37 = add i32 %35, -1
  %38 = mul i32 %37, %35
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %36, 10
  %42 = or i1 %41, %40
  %43 = select i1 %42, i32 94930044, i32 -629639408
  br label %.backedge

44:                                               ; preds = %5
  br label %.backedge

45:                                               ; preds = %5
  br label %.backedge

46:                                               ; preds = %5
  %47 = load i32, i32* @x.5, align 4
  %48 = load i32, i32* @y.6, align 4
  %49 = add i32 %47, -1
  %50 = mul i32 %49, %47
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %48, 10
  %54 = or i1 %53, %52
  %55 = select i1 %54, i32 -1163143119, i32 -17513271
  br label %.backedge

56:                                               ; preds = %5
  %57 = icmp sgt i8 %.020, 47
  store i1 %57, i1* %2, align 1
  %58 = load i32, i32* @x.5, align 4
  %59 = load i32, i32* @y.6, align 4
  %60 = add i32 %58, -1
  %61 = mul i32 %60, %58
  %62 = and i32 %61, 1
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %64, %63
  %66 = select i1 %65, i32 -904799156, i32 -17513271
  br label %.backedge

67:                                               ; preds = %5
  %.0..0..0.14 = load volatile i1, i1* %2, align 1
  %68 = select i1 %.0..0..0.14, i32 349914556, i32 -235709522
  br label %.backedge

69:                                               ; preds = %5
  %70 = load i32, i32* @x.5, align 4
  %71 = load i32, i32* @y.6, align 4
  %72 = add i32 %70, -1
  %73 = mul i32 %72, %70
  %74 = and i32 %73, 1
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %76, %75
  %78 = select i1 %77, i32 -575570562, i32 -1156525302
  br label %.backedge

79:                                               ; preds = %5
  %80 = icmp slt i8 %.020, 58
  store i1 %80, i1* %1, align 1
  %81 = load i32, i32* @x.5, align 4
  %82 = load i32, i32* @y.6, align 4
  %83 = add i32 %81, -1
  %84 = mul i32 %83, %81
  %85 = and i32 %84, 1
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %82, 10
  %88 = or i1 %87, %86
  %89 = select i1 %88, i32 864444051, i32 -1156525302
  br label %.backedge

90:                                               ; preds = %5
  %.0..0..0.15 = load volatile i1, i1* %1, align 1
  br label %.backedge

91:                                               ; preds = %5
  %92 = select i1 %.0, i32 1983464259, i32 -806266199
  br label %.backedge

93:                                               ; preds = %5
  %.neg.neg = mul i64 %.024, 10
  %94 = sext i8 %.020 to i64
  %.neg26 = add i64 %.neg.neg, -48
  %95 = add i64 %.neg26, %94
  %96 = tail call i32 @getchar()
  %97 = trunc i32 %96 to i8
  br label %.backedge

98:                                               ; preds = %5
  %99 = mul nsw i64 %.022, %.024
  ret i64 %99

100:                                              ; preds = %5
  %101 = tail call i32 @getchar()
  %102 = trunc i32 %101 to i8
  br label %.backedge

103:                                              ; preds = %5
  br label %.backedge

104:                                              ; preds = %5
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noundef i32 @getchar() local_unnamed_addr #5

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s300715456.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #3

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
