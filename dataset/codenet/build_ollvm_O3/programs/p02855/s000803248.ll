; ModuleID = 'build_ollvm/programs/p02855/s000803248.ll'
source_filename = "Project_CodeNet_C++1400/p02855/s000803248.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@h = global i32 0, align 4
@w = global i32 0, align 4
@k = global i32 0, align 4
@ans = local_unnamed_addr global [303 x [303 x i32]] zeroinitializer, align 16
@clr = local_unnamed_addr global i32 1, align 4
@s = global [303 x [303 x i8]] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c" \00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s000803248.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.2 = common local_unnamed_addr global i32 0
@y.3 = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0
@x.6 = common local_unnamed_addr global i32 0
@y.7 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 913614047, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 913614047, label %11
    i32 1022320328, label %14
    i32 -465942245, label %25
    i32 173764304, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 1022320328, i32 173764304
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -465942245, i32 173764304
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #6
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ 1022320328, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nofree noinline nounwind uwtable
define void @_Z1fiiii(i32 %0, i32 %1, i32 %2, i32 %3) local_unnamed_addr #4 {
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  br label %7

7:                                                ; preds = %.backedge, %4
  %.071 = phi i32 [ %2, %4 ], [ %.071.be, %.backedge ]
  %.069 = phi i32 [ %0, %4 ], [ %.069.be, %.backedge ]
  %.067 = phi i32 [ %0, %4 ], [ %.067.be, %.backedge ]
  %.065 = phi i8 [ undef, %4 ], [ %.065.be, %.backedge ]
  %.063 = phi i32 [ undef, %4 ], [ %.063.be, %.backedge ]
  %.061 = phi i8 [ undef, %4 ], [ %.061.be, %.backedge ]
  %.059 = phi i32 [ undef, %4 ], [ %.059.be, %.backedge ]
  %.057 = phi i32 [ undef, %4 ], [ %.057.be, %.backedge ]
  %.055 = phi i32 [ undef, %4 ], [ %.055.be, %.backedge ]
  %.053 = phi i32 [ undef, %4 ], [ %.053.be, %.backedge ]
  %.0 = phi i32 [ -1926486858, %4 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1926486858, label %8
    i32 277586909, label %11
    i32 1243741010, label %12
    i32 -2020460905, label %15
    i32 1488136107, label %22
    i32 -1662430208, label %25
    i32 -232965331, label %35
    i32 915300957, label %45
    i32 -704767467, label %46
    i32 889384888, label %47
    i32 960445170, label %48
    i32 1832843853, label %58
    i32 1846688372, label %68
    i32 1468254792, label %69
    i32 -945798045, label %71
    i32 1213886630, label %72
    i32 -1364235588, label %73
    i32 812924318, label %74
    i32 1966913280, label %84
    i32 -1680020567, label %95
    i32 -1933938334, label %97
    i32 -1689785154, label %98
    i32 1182356505, label %101
    i32 -1825174280, label %108
    i32 1514552843, label %118
    i32 -687771947, label %130
    i32 -1187948289, label %132
    i32 -1155308222, label %133
    i32 -1629478820, label %143
    i32 108512482, label %153
    i32 -547834832, label %154
    i32 1104421066, label %155
    i32 -1359332255, label %156
    i32 -8496552, label %157
    i32 1054631479, label %167
    i32 1769520781, label %177
    i32 990449936, label %178
    i32 1360795897, label %180
    i32 -623204418, label %181
    i32 36368571, label %184
    i32 -1865435291, label %194
    i32 -2121467204, label %204
    i32 -176132313, label %205
    i32 424284830, label %208
    i32 -874078456, label %213
    i32 1428219258, label %215
    i32 -126114106, label %216
    i32 1487247709, label %218
    i32 -1404605224, label %221
    i32 -2132294522, label %222
    i32 1252563542, label %223
    i32 1709043912, label %224
    i32 -173815798, label %225
    i32 1480340865, label %226
    i32 -1676168410, label %227
  ]

.backedge:                                        ; preds = %7, %227, %226, %225, %224, %223, %222, %221, %216, %215, %213, %208, %205, %204, %194, %184, %181, %180, %178, %177, %167, %157, %156, %155, %154, %153, %143, %133, %132, %130, %118, %108, %101, %98, %97, %95, %84, %74, %73, %72, %71, %69, %68, %58, %48, %47, %46, %45, %35, %25, %22, %15, %12, %11, %8
  %.071.be = phi i32 [ %.071, %7 ], [ %.071, %227 ], [ %.071, %226 ], [ %.071, %225 ], [ %.071, %224 ], [ %.071, %223 ], [ %.071, %222 ], [ %.063, %221 ], [ %.071, %216 ], [ %.071, %215 ], [ %.071, %213 ], [ %.071, %208 ], [ %.071, %205 ], [ %.071, %204 ], [ %.071, %194 ], [ %.071, %184 ], [ %.071, %181 ], [ %.071, %180 ], [ %.071, %178 ], [ %.071, %177 ], [ %.071, %167 ], [ %.071, %157 ], [ %.071, %156 ], [ %.071, %155 ], [ %.071, %154 ], [ %.071, %153 ], [ %.071, %143 ], [ %.071, %133 ], [ %.071, %132 ], [ %.071, %130 ], [ %.071, %118 ], [ %.071, %108 ], [ %.071, %101 ], [ %.071, %98 ], [ %.071, %97 ], [ %.071, %95 ], [ %.071, %84 ], [ %.071, %74 ], [ %.071, %73 ], [ %.071, %72 ], [ %.071, %71 ], [ %.071, %69 ], [ %.071, %68 ], [ %.071, %58 ], [ %.071, %48 ], [ %.071, %47 ], [ %.071, %46 ], [ %.071, %45 ], [ %.063, %35 ], [ %.071, %25 ], [ %.071, %22 ], [ %.071, %15 ], [ %.071, %12 ], [ %.071, %11 ], [ %.071, %8 ]
  %.069.be = phi i32 [ %.069, %7 ], [ %.069, %227 ], [ %.069, %226 ], [ %.069, %225 ], [ %.069, %224 ], [ %.069, %223 ], [ %.069, %222 ], [ %.069, %221 ], [ %.069, %216 ], [ %.069, %215 ], [ %.069, %213 ], [ %.069, %208 ], [ %.069, %205 ], [ %.069, %204 ], [ %.069, %194 ], [ %.069, %184 ], [ %.069, %181 ], [ %.069, %180 ], [ %.069, %178 ], [ %.069, %177 ], [ %.069, %167 ], [ %.069, %157 ], [ %.069, %156 ], [ %.069, %155 ], [ %.069, %154 ], [ %.069, %153 ], [ %.069, %143 ], [ %.069, %133 ], [ %.059, %132 ], [ %.069, %130 ], [ %.069, %118 ], [ %.069, %108 ], [ %.069, %101 ], [ %.069, %98 ], [ %.069, %97 ], [ %.069, %95 ], [ %.069, %84 ], [ %.069, %74 ], [ %.069, %73 ], [ %.069, %72 ], [ %.069, %71 ], [ %.069, %69 ], [ %.069, %68 ], [ %.069, %58 ], [ %.069, %48 ], [ %.069, %47 ], [ %.069, %46 ], [ %.069, %45 ], [ %.069, %35 ], [ %.069, %25 ], [ %.069, %22 ], [ %.069, %15 ], [ %.069, %12 ], [ %.069, %11 ], [ %.069, %8 ]
  %.067.be = phi i32 [ %.067, %7 ], [ %.067, %227 ], [ %.067, %226 ], [ %.067, %225 ], [ %.067, %224 ], [ %.067, %223 ], [ %.067, %222 ], [ %.067, %221 ], [ %.067, %216 ], [ %.067, %215 ], [ %.067, %213 ], [ %.067, %208 ], [ %.067, %205 ], [ %.067, %204 ], [ %.067, %194 ], [ %.067, %184 ], [ %.067, %181 ], [ %.067, %180 ], [ %.067, %178 ], [ %.067, %177 ], [ %.067, %167 ], [ %.067, %157 ], [ %.067, %156 ], [ %.067, %155 ], [ %.067, %154 ], [ %.067, %153 ], [ %.067, %143 ], [ %.067, %133 ], [ %.067, %132 ], [ %.067, %130 ], [ %.067, %118 ], [ %.067, %108 ], [ %.067, %101 ], [ %.067, %98 ], [ %.067, %97 ], [ %.067, %95 ], [ %.067, %84 ], [ %.067, %74 ], [ %.067, %73 ], [ %.neg73, %72 ], [ %.067, %71 ], [ %.067, %69 ], [ %.067, %68 ], [ %.067, %58 ], [ %.067, %48 ], [ %.067, %47 ], [ %.067, %46 ], [ %.067, %45 ], [ %.067, %35 ], [ %.067, %25 ], [ %.067, %22 ], [ %.067, %15 ], [ %.067, %12 ], [ %.067, %11 ], [ %.067, %8 ]
  %.065.be = phi i8 [ %.065, %7 ], [ %.065, %227 ], [ %.065, %226 ], [ %.065, %225 ], [ %.065, %224 ], [ %.065, %223 ], [ %.065, %222 ], [ %.065, %221 ], [ %.065, %216 ], [ %.065, %215 ], [ %.065, %213 ], [ %.065, %208 ], [ %.065, %205 ], [ %.065, %204 ], [ %.065, %194 ], [ %.065, %184 ], [ %.065, %181 ], [ %.065, %180 ], [ %.065, %178 ], [ %.065, %177 ], [ %.065, %167 ], [ %.065, %157 ], [ %.065, %156 ], [ %.065, %155 ], [ %.065, %154 ], [ %.065, %153 ], [ %.065, %143 ], [ %.065, %133 ], [ %.065, %132 ], [ %.065, %130 ], [ %.065, %118 ], [ %.065, %108 ], [ %.065, %101 ], [ %.065, %98 ], [ %.065, %97 ], [ %.065, %95 ], [ %.065, %84 ], [ %.065, %74 ], [ %.065, %73 ], [ %.065, %72 ], [ %.065, %71 ], [ %.065, %69 ], [ %.065, %68 ], [ %.065, %58 ], [ %.065, %48 ], [ %.065, %47 ], [ 1, %46 ], [ %.065, %45 ], [ %.065, %35 ], [ %.065, %25 ], [ %.065, %22 ], [ %.065, %15 ], [ %.065, %12 ], [ 0, %11 ], [ %.065, %8 ]
  %.063.be = phi i32 [ %.063, %7 ], [ %.063, %227 ], [ %.063, %226 ], [ %.063, %225 ], [ %.063, %224 ], [ %.063, %223 ], [ %.063, %222 ], [ %.063, %221 ], [ %.063, %216 ], [ %.063, %215 ], [ %.063, %213 ], [ %.063, %208 ], [ %.063, %205 ], [ %.063, %204 ], [ %.063, %194 ], [ %.063, %184 ], [ %.063, %181 ], [ %.063, %180 ], [ %.063, %178 ], [ %.063, %177 ], [ %.063, %167 ], [ %.063, %157 ], [ %.063, %156 ], [ %.063, %155 ], [ %.063, %154 ], [ %.063, %153 ], [ %.063, %143 ], [ %.063, %133 ], [ %.063, %132 ], [ %.063, %130 ], [ %.063, %118 ], [ %.063, %108 ], [ %.063, %101 ], [ %.063, %98 ], [ %.063, %97 ], [ %.063, %95 ], [ %.063, %84 ], [ %.063, %74 ], [ %.063, %73 ], [ %.063, %72 ], [ %.063, %71 ], [ %70, %69 ], [ %.063, %68 ], [ %.063, %58 ], [ %.063, %48 ], [ %.063, %47 ], [ %.063, %46 ], [ %.063, %45 ], [ %.063, %35 ], [ %.063, %25 ], [ %.063, %22 ], [ %.063, %15 ], [ %.063, %12 ], [ %.071, %11 ], [ %.063, %8 ]
  %.061.be = phi i8 [ %.061, %7 ], [ %.061, %227 ], [ %.061, %226 ], [ 1, %225 ], [ %.061, %224 ], [ %.061, %223 ], [ %.061, %222 ], [ %.061, %221 ], [ %.061, %216 ], [ %.061, %215 ], [ %.061, %213 ], [ %.061, %208 ], [ %.061, %205 ], [ %.061, %204 ], [ %.061, %194 ], [ %.061, %184 ], [ %.061, %181 ], [ %.061, %180 ], [ %.061, %178 ], [ %.061, %177 ], [ %.061, %167 ], [ %.061, %157 ], [ %.061, %156 ], [ %.061, %155 ], [ %.061, %154 ], [ %.061, %153 ], [ 1, %143 ], [ %.061, %133 ], [ %.061, %132 ], [ %.061, %130 ], [ %.061, %118 ], [ %.061, %108 ], [ %.061, %101 ], [ %.061, %98 ], [ %.061, %97 ], [ %.061, %95 ], [ %.061, %84 ], [ %.061, %74 ], [ 0, %73 ], [ %.061, %72 ], [ %.061, %71 ], [ %.061, %69 ], [ %.061, %68 ], [ %.061, %58 ], [ %.061, %48 ], [ %.061, %47 ], [ %.061, %46 ], [ %.061, %45 ], [ %.061, %35 ], [ %.061, %25 ], [ %.061, %22 ], [ %.061, %15 ], [ %.061, %12 ], [ %.061, %11 ], [ %.061, %8 ]
  %.059.be = phi i32 [ %.059, %7 ], [ %.059, %227 ], [ %.059, %226 ], [ %.059, %225 ], [ %.059, %224 ], [ %.059, %223 ], [ %.059, %222 ], [ %.059, %221 ], [ %.059, %216 ], [ %.059, %215 ], [ %.059, %213 ], [ %.059, %208 ], [ %.059, %205 ], [ %.059, %204 ], [ %.059, %194 ], [ %.059, %184 ], [ %.059, %181 ], [ %.059, %180 ], [ %179, %178 ], [ %.059, %177 ], [ %.059, %167 ], [ %.059, %157 ], [ %.059, %156 ], [ %.059, %155 ], [ %.059, %154 ], [ %.059, %153 ], [ %.059, %143 ], [ %.059, %133 ], [ %.059, %132 ], [ %.059, %130 ], [ %.059, %118 ], [ %.059, %108 ], [ %.059, %101 ], [ %.059, %98 ], [ %.059, %97 ], [ %.059, %95 ], [ %.059, %84 ], [ %.059, %74 ], [ %.069, %73 ], [ %.059, %72 ], [ %.059, %71 ], [ %.059, %69 ], [ %.059, %68 ], [ %.059, %58 ], [ %.059, %48 ], [ %.059, %47 ], [ %.059, %46 ], [ %.059, %45 ], [ %.059, %35 ], [ %.059, %25 ], [ %.059, %22 ], [ %.059, %15 ], [ %.059, %12 ], [ %.059, %11 ], [ %.059, %8 ]
  %.057.be = phi i32 [ %.057, %7 ], [ %.057, %227 ], [ %.057, %226 ], [ %.057, %225 ], [ %.057, %224 ], [ %.057, %223 ], [ %.057, %222 ], [ %.057, %221 ], [ %.057, %216 ], [ %.057, %215 ], [ %.057, %213 ], [ %.057, %208 ], [ %.057, %205 ], [ %.057, %204 ], [ %.057, %194 ], [ %.057, %184 ], [ %.057, %181 ], [ %.057, %180 ], [ %.057, %178 ], [ %.057, %177 ], [ %.057, %167 ], [ %.057, %157 ], [ %.neg, %156 ], [ %.057, %155 ], [ %.057, %154 ], [ %.057, %153 ], [ %.057, %143 ], [ %.057, %133 ], [ %.057, %132 ], [ %.057, %130 ], [ %.057, %118 ], [ %.057, %108 ], [ %.057, %101 ], [ %.057, %98 ], [ %.071, %97 ], [ %.057, %95 ], [ %.057, %84 ], [ %.057, %74 ], [ %.057, %73 ], [ %.057, %72 ], [ %.057, %71 ], [ %.057, %69 ], [ %.057, %68 ], [ %.057, %58 ], [ %.057, %48 ], [ %.057, %47 ], [ %.057, %46 ], [ %.057, %45 ], [ %.057, %35 ], [ %.057, %25 ], [ %.057, %22 ], [ %.057, %15 ], [ %.057, %12 ], [ %.057, %11 ], [ %.057, %8 ]
  %.055.be = phi i32 [ %.055, %7 ], [ %.055, %227 ], [ %.055, %226 ], [ %.055, %225 ], [ %.055, %224 ], [ %.055, %223 ], [ %.055, %222 ], [ %.055, %221 ], [ %217, %216 ], [ %.055, %215 ], [ %.055, %213 ], [ %.055, %208 ], [ %.055, %205 ], [ %.055, %204 ], [ %.055, %194 ], [ %.055, %184 ], [ %.055, %181 ], [ %.069, %180 ], [ %.055, %178 ], [ %.055, %177 ], [ %.055, %167 ], [ %.055, %157 ], [ %.055, %156 ], [ %.055, %155 ], [ %.055, %154 ], [ %.055, %153 ], [ %.055, %143 ], [ %.055, %133 ], [ %.055, %132 ], [ %.055, %130 ], [ %.055, %118 ], [ %.055, %108 ], [ %.055, %101 ], [ %.055, %98 ], [ %.055, %97 ], [ %.055, %95 ], [ %.055, %84 ], [ %.055, %74 ], [ %.055, %73 ], [ %.055, %72 ], [ %.055, %71 ], [ %.055, %69 ], [ %.055, %68 ], [ %.055, %58 ], [ %.055, %48 ], [ %.055, %47 ], [ %.055, %46 ], [ %.055, %45 ], [ %.055, %35 ], [ %.055, %25 ], [ %.055, %22 ], [ %.055, %15 ], [ %.055, %12 ], [ %.055, %11 ], [ %.055, %8 ]
  %.053.be = phi i32 [ %.053, %7 ], [ %.071, %227 ], [ %.053, %226 ], [ %.053, %225 ], [ %.053, %224 ], [ %.053, %223 ], [ %.053, %222 ], [ %.053, %221 ], [ %.053, %216 ], [ %.053, %215 ], [ %214, %213 ], [ %.053, %208 ], [ %.053, %205 ], [ %.053, %204 ], [ %.071, %194 ], [ %.053, %184 ], [ %.053, %181 ], [ %.053, %180 ], [ %.053, %178 ], [ %.053, %177 ], [ %.053, %167 ], [ %.053, %157 ], [ %.053, %156 ], [ %.053, %155 ], [ %.053, %154 ], [ %.053, %153 ], [ %.053, %143 ], [ %.053, %133 ], [ %.053, %132 ], [ %.053, %130 ], [ %.053, %118 ], [ %.053, %108 ], [ %.053, %101 ], [ %.053, %98 ], [ %.053, %97 ], [ %.053, %95 ], [ %.053, %84 ], [ %.053, %74 ], [ %.053, %73 ], [ %.053, %72 ], [ %.053, %71 ], [ %.053, %69 ], [ %.053, %68 ], [ %.053, %58 ], [ %.053, %48 ], [ %.053, %47 ], [ %.053, %46 ], [ %.053, %45 ], [ %.053, %35 ], [ %.053, %25 ], [ %.053, %22 ], [ %.053, %15 ], [ %.053, %12 ], [ %.053, %11 ], [ %.053, %8 ]
  %.0.be = phi i32 [ %.0, %7 ], [ -1865435291, %227 ], [ 1054631479, %226 ], [ -1629478820, %225 ], [ 1514552843, %224 ], [ 1966913280, %223 ], [ 1832843853, %222 ], [ -232965331, %221 ], [ -623204418, %216 ], [ -126114106, %215 ], [ -176132313, %213 ], [ -874078456, %208 ], [ %207, %205 ], [ -176132313, %204 ], [ %203, %194 ], [ %193, %184 ], [ %183, %181 ], [ -623204418, %180 ], [ 812924318, %178 ], [ 990449936, %177 ], [ %176, %167 ], [ %166, %157 ], [ -1689785154, %156 ], [ -1359332255, %155 ], [ 1104421066, %154 ], [ -547834832, %153 ], [ %152, %143 ], [ %142, %133 ], [ -547834832, %132 ], [ %131, %130 ], [ %129, %118 ], [ %117, %108 ], [ %107, %101 ], [ %100, %98 ], [ -1689785154, %97 ], [ %96, %95 ], [ %94, %84 ], [ %83, %74 ], [ 812924318, %73 ], [ -1926486858, %72 ], [ 1213886630, %71 ], [ 1243741010, %69 ], [ 1468254792, %68 ], [ %67, %58 ], [ %57, %48 ], [ 960445170, %47 ], [ 889384888, %46 ], [ 889384888, %45 ], [ %44, %35 ], [ %34, %25 ], [ %24, %22 ], [ %21, %15 ], [ %14, %12 ], [ 1243741010, %11 ], [ %10, %8 ]
  br label %7

8:                                                ; preds = %7
  %9 = icmp slt i32 %.067, %1
  %10 = select i1 %9, i32 277586909, i32 -1364235588
  br label %.backedge

11:                                               ; preds = %7
  br label %.backedge

12:                                               ; preds = %7
  %13 = icmp slt i32 %.063, %3
  %14 = select i1 %13, i32 -2020460905, i32 -945798045
  br label %.backedge

15:                                               ; preds = %7
  %16 = sext i32 %.067 to i64
  %17 = sext i32 %.063 to i64
  %18 = getelementptr inbounds [303 x [303 x i8]], [303 x [303 x i8]]* @s, i64 0, i64 %16, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = icmp eq i8 %19, 35
  %21 = select i1 %20, i32 1488136107, i32 960445170
  br label %.backedge

22:                                               ; preds = %7
  %23 = and i8 %.065, 1
  %.not = icmp eq i8 %23, 0
  %24 = select i1 %.not, i32 -704767467, i32 -1662430208
  br label %.backedge

25:                                               ; preds = %7
  %26 = load i32, i32* @x.2, align 4
  %27 = load i32, i32* @y.3, align 4
  %28 = add i32 %26, -1
  %29 = mul i32 %28, %26
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %27, 10
  %33 = or i1 %32, %31
  %34 = select i1 %33, i32 -232965331, i32 -1404605224
  br label %.backedge

35:                                               ; preds = %7
  tail call void @_Z1fiiii(i32 %.069, i32 %1, i32 %.071, i32 %.063)
  %36 = load i32, i32* @x.2, align 4
  %37 = load i32, i32* @y.3, align 4
  %38 = add i32 %36, -1
  %39 = mul i32 %38, %36
  %40 = and i32 %39, 1
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %37, 10
  %43 = or i1 %42, %41
  %44 = select i1 %43, i32 915300957, i32 -1404605224
  br label %.backedge

45:                                               ; preds = %7
  br label %.backedge

46:                                               ; preds = %7
  br label %.backedge

47:                                               ; preds = %7
  br label %.backedge

48:                                               ; preds = %7
  %49 = load i32, i32* @x.2, align 4
  %50 = load i32, i32* @y.3, align 4
  %51 = add i32 %49, -1
  %52 = mul i32 %51, %49
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %50, 10
  %56 = or i1 %55, %54
  %57 = select i1 %56, i32 1832843853, i32 -2132294522
  br label %.backedge

58:                                               ; preds = %7
  %59 = load i32, i32* @x.2, align 4
  %60 = load i32, i32* @y.3, align 4
  %61 = add i32 %59, -1
  %62 = mul i32 %61, %59
  %63 = and i32 %62, 1
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %65, %64
  %67 = select i1 %66, i32 1846688372, i32 -2132294522
  br label %.backedge

68:                                               ; preds = %7
  br label %.backedge

69:                                               ; preds = %7
  %70 = add i32 %.063, 1
  br label %.backedge

71:                                               ; preds = %7
  br label %.backedge

72:                                               ; preds = %7
  %.neg73 = add i32 %.067, 1
  br label %.backedge

73:                                               ; preds = %7
  br label %.backedge

74:                                               ; preds = %7
  %75 = load i32, i32* @x.2, align 4
  %76 = load i32, i32* @y.3, align 4
  %77 = add i32 %75, -1
  %78 = mul i32 %77, %75
  %79 = and i32 %78, 1
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %76, 10
  %82 = or i1 %81, %80
  %83 = select i1 %82, i32 1966913280, i32 1252563542
  br label %.backedge

84:                                               ; preds = %7
  %85 = icmp slt i32 %.059, %1
  store i1 %85, i1* %6, align 1
  %86 = load i32, i32* @x.2, align 4
  %87 = load i32, i32* @y.3, align 4
  %88 = add i32 %86, -1
  %89 = mul i32 %88, %86
  %90 = and i32 %89, 1
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %87, 10
  %93 = or i1 %92, %91
  %94 = select i1 %93, i32 -1680020567, i32 1252563542
  br label %.backedge

95:                                               ; preds = %7
  %.0..0..0. = load volatile i1, i1* %6, align 1
  %96 = select i1 %.0..0..0., i32 -1933938334, i32 1360795897
  br label %.backedge

97:                                               ; preds = %7
  br label %.backedge

98:                                               ; preds = %7
  %99 = icmp slt i32 %.057, %3
  %100 = select i1 %99, i32 1182356505, i32 -8496552
  br label %.backedge

101:                                              ; preds = %7
  %102 = sext i32 %.059 to i64
  %103 = sext i32 %.057 to i64
  %104 = getelementptr inbounds [303 x [303 x i8]], [303 x [303 x i8]]* @s, i64 0, i64 %102, i64 %103
  %105 = load i8, i8* %104, align 1
  %106 = icmp eq i8 %105, 35
  %107 = select i1 %106, i32 -1825174280, i32 1104421066
  br label %.backedge

108:                                              ; preds = %7
  %109 = load i32, i32* @x.2, align 4
  %110 = load i32, i32* @y.3, align 4
  %111 = add i32 %109, -1
  %112 = mul i32 %111, %109
  %113 = and i32 %112, 1
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %115, %114
  %117 = select i1 %116, i32 1514552843, i32 1709043912
  br label %.backedge

118:                                              ; preds = %7
  %119 = and i8 %.061, 1
  %120 = icmp ne i8 %119, 0
  store i1 %120, i1* %5, align 1
  %121 = load i32, i32* @x.2, align 4
  %122 = load i32, i32* @y.3, align 4
  %123 = add i32 %121, -1
  %124 = mul i32 %123, %121
  %125 = and i32 %124, 1
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %122, 10
  %128 = or i1 %127, %126
  %129 = select i1 %128, i32 -687771947, i32 1709043912
  br label %.backedge

130:                                              ; preds = %7
  %.0..0..0.52 = load volatile i1, i1* %5, align 1
  %131 = select i1 %.0..0..0.52, i32 -1187948289, i32 -1155308222
  br label %.backedge

132:                                              ; preds = %7
  tail call void @_Z1fiiii(i32 %.069, i32 %.059, i32 %.071, i32 %3)
  br label %.backedge

133:                                              ; preds = %7
  %134 = load i32, i32* @x.2, align 4
  %135 = load i32, i32* @y.3, align 4
  %136 = add i32 %134, -1
  %137 = mul i32 %136, %134
  %138 = and i32 %137, 1
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %135, 10
  %141 = or i1 %140, %139
  %142 = select i1 %141, i32 -1629478820, i32 -173815798
  br label %.backedge

143:                                              ; preds = %7
  %144 = load i32, i32* @x.2, align 4
  %145 = load i32, i32* @y.3, align 4
  %146 = add i32 %144, -1
  %147 = mul i32 %146, %144
  %148 = and i32 %147, 1
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %145, 10
  %151 = or i1 %150, %149
  %152 = select i1 %151, i32 108512482, i32 -173815798
  br label %.backedge

153:                                              ; preds = %7
  br label %.backedge

154:                                              ; preds = %7
  br label %.backedge

155:                                              ; preds = %7
  br label %.backedge

156:                                              ; preds = %7
  %.neg = add i32 %.057, 1
  br label %.backedge

157:                                              ; preds = %7
  %158 = load i32, i32* @x.2, align 4
  %159 = load i32, i32* @y.3, align 4
  %160 = add i32 %158, -1
  %161 = mul i32 %160, %158
  %162 = and i32 %161, 1
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %164, %163
  %166 = select i1 %165, i32 1054631479, i32 1480340865
  br label %.backedge

167:                                              ; preds = %7
  %168 = load i32, i32* @x.2, align 4
  %169 = load i32, i32* @y.3, align 4
  %170 = add i32 %168, -1
  %171 = mul i32 %170, %168
  %172 = and i32 %171, 1
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %169, 10
  %175 = or i1 %174, %173
  %176 = select i1 %175, i32 1769520781, i32 1480340865
  br label %.backedge

177:                                              ; preds = %7
  br label %.backedge

178:                                              ; preds = %7
  %179 = add i32 %.059, 1
  br label %.backedge

180:                                              ; preds = %7
  br label %.backedge

181:                                              ; preds = %7
  %182 = icmp slt i32 %.055, %1
  %183 = select i1 %182, i32 36368571, i32 1487247709
  br label %.backedge

184:                                              ; preds = %7
  %185 = load i32, i32* @x.2, align 4
  %186 = load i32, i32* @y.3, align 4
  %187 = add i32 %185, -1
  %188 = mul i32 %187, %185
  %189 = and i32 %188, 1
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %191, %190
  %193 = select i1 %192, i32 -1865435291, i32 -1676168410
  br label %.backedge

194:                                              ; preds = %7
  %195 = load i32, i32* @x.2, align 4
  %196 = load i32, i32* @y.3, align 4
  %197 = add i32 %195, -1
  %198 = mul i32 %197, %195
  %199 = and i32 %198, 1
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %196, 10
  %202 = or i1 %201, %200
  %203 = select i1 %202, i32 -2121467204, i32 -1676168410
  br label %.backedge

204:                                              ; preds = %7
  br label %.backedge

205:                                              ; preds = %7
  %206 = icmp slt i32 %.053, %3
  %207 = select i1 %206, i32 424284830, i32 1428219258
  br label %.backedge

208:                                              ; preds = %7
  %209 = load i32, i32* @clr, align 4
  %210 = sext i32 %.055 to i64
  %211 = sext i32 %.053 to i64
  %212 = getelementptr inbounds [303 x [303 x i32]], [303 x [303 x i32]]* @ans, i64 0, i64 %210, i64 %211
  store i32 %209, i32* %212, align 4
  br label %.backedge

213:                                              ; preds = %7
  %214 = add i32 %.053, 1
  br label %.backedge

215:                                              ; preds = %7
  br label %.backedge

216:                                              ; preds = %7
  %217 = add i32 %.055, 1
  br label %.backedge

218:                                              ; preds = %7
  %219 = load i32, i32* @clr, align 4
  %220 = add i32 %219, 1
  store i32 %220, i32* @clr, align 4
  ret void

221:                                              ; preds = %7
  tail call void @_Z1fiiii(i32 %.069, i32 %1, i32 %.071, i32 %.063)
  br label %.backedge

222:                                              ; preds = %7
  br label %.backedge

223:                                              ; preds = %7
  br label %.backedge

224:                                              ; preds = %7
  br label %.backedge

225:                                              ; preds = %7
  br label %.backedge

226:                                              ; preds = %7
  br label %.backedge

227:                                              ; preds = %7
  br label %.backedge
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #5 {
  %1 = alloca %"class.std::basic_ostream"*, align 8
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) @h)
  %6 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %5, i32* nonnull dereferenceable(4) @w)
  %7 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %6, i32* nonnull dereferenceable(4) @k)
  br label %8

8:                                                ; preds = %.backedge, %0
  %.030 = phi i32 [ 0, %0 ], [ %.030.be, %.backedge ]
  %.028 = phi i32 [ undef, %0 ], [ %.028.be, %.backedge ]
  %.026 = phi i32 [ undef, %0 ], [ %.026.be, %.backedge ]
  %.024 = phi i32 [ undef, %0 ], [ %.024.be, %.backedge ]
  %.022 = phi i32 [ -441853978, %0 ], [ %.022.be, %.backedge ]
  %.0 = phi [2 x i8]* [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.022, label %.backedge [
    i32 -441853978, label %9
    i32 809563599, label %19
    i32 1339176992, label %31
    i32 -1346594754, label %33
    i32 -342211367, label %43
    i32 1328963678, label %53
    i32 825591401, label %54
    i32 -571931536, label %58
    i32 -986849086, label %63
    i32 -512889254, label %65
    i32 -1985291120, label %75
    i32 1197962732, label %85
    i32 116476869, label %86
    i32 -1734095859, label %88
    i32 1460244965, label %91
    i32 730069564, label %101
    i32 1699935311, label %113
    i32 1228696382, label %115
    i32 -1737918827, label %116
    i32 -364827210, label %126
    i32 -423070283, label %138
    i32 1671664963, label %140
    i32 564400633, label %150
    i32 -786099679, label %151
    i32 137208469, label %161
    i32 -1854033883, label %171
    i32 -180955923, label %172
    i32 431784004, label %175
    i32 -671095307, label %185
    i32 230112878, label %196
    i32 836946585, label %197
    i32 -510230467, label %198
    i32 1065334632, label %200
    i32 -488360297, label %201
    i32 -522485724, label %202
    i32 -617623115, label %203
    i32 -1376569650, label %204
    i32 -1652205808, label %205
    i32 430544462, label %206
    i32 -1124398319, label %207
  ]

.backedge:                                        ; preds = %8, %207, %206, %205, %204, %203, %202, %201, %198, %197, %196, %185, %175, %172, %171, %161, %151, %150, %140, %138, %126, %116, %115, %113, %101, %91, %88, %86, %85, %75, %65, %63, %58, %54, %53, %43, %33, %31, %19, %9
  %.030.be = phi i32 [ %.030, %8 ], [ %.030, %207 ], [ %.030, %206 ], [ %.030, %205 ], [ %.030, %204 ], [ %.030, %203 ], [ %.030, %202 ], [ %.030, %201 ], [ %.030, %198 ], [ %.030, %197 ], [ %.030, %196 ], [ %.030, %185 ], [ %.030, %175 ], [ %.030, %172 ], [ %.030, %171 ], [ %.030, %161 ], [ %.030, %151 ], [ %.030, %150 ], [ %.030, %140 ], [ %.030, %138 ], [ %.030, %126 ], [ %.030, %116 ], [ %.030, %115 ], [ %.030, %113 ], [ %.030, %101 ], [ %.030, %91 ], [ %.030, %88 ], [ %87, %86 ], [ %.030, %85 ], [ %.030, %75 ], [ %.030, %65 ], [ %.030, %63 ], [ %.030, %58 ], [ %.030, %54 ], [ %.030, %53 ], [ %.030, %43 ], [ %.030, %33 ], [ %.030, %31 ], [ %.030, %19 ], [ %.030, %9 ]
  %.028.be = phi i32 [ %.028, %8 ], [ %.028, %207 ], [ %.028, %206 ], [ %.028, %205 ], [ %.028, %204 ], [ %.028, %203 ], [ 0, %202 ], [ %.028, %201 ], [ %.028, %198 ], [ %.028, %197 ], [ %.028, %196 ], [ %.028, %185 ], [ %.028, %175 ], [ %.028, %172 ], [ %.028, %171 ], [ %.028, %161 ], [ %.028, %151 ], [ %.028, %150 ], [ %.028, %140 ], [ %.028, %138 ], [ %.028, %126 ], [ %.028, %116 ], [ %.028, %115 ], [ %.028, %113 ], [ %.028, %101 ], [ %.028, %91 ], [ %.028, %88 ], [ %.028, %86 ], [ %.028, %85 ], [ %.028, %75 ], [ %.028, %65 ], [ %64, %63 ], [ %.028, %58 ], [ %.028, %54 ], [ %.028, %53 ], [ 0, %43 ], [ %.028, %33 ], [ %.028, %31 ], [ %.028, %19 ], [ %.028, %9 ]
  %.026.be = phi i32 [ %.026, %8 ], [ %.026, %207 ], [ %.026, %206 ], [ %.026, %205 ], [ %.026, %204 ], [ %.026, %203 ], [ %.026, %202 ], [ %.026, %201 ], [ %199, %198 ], [ %.026, %197 ], [ %.026, %196 ], [ %.026, %185 ], [ %.026, %175 ], [ %.026, %172 ], [ %.026, %171 ], [ %.026, %161 ], [ %.026, %151 ], [ %.026, %150 ], [ %.026, %140 ], [ %.026, %138 ], [ %.026, %126 ], [ %.026, %116 ], [ %.026, %115 ], [ %.026, %113 ], [ %.026, %101 ], [ %.026, %91 ], [ 0, %88 ], [ %.026, %86 ], [ %.026, %85 ], [ %.026, %75 ], [ %.026, %65 ], [ %.026, %63 ], [ %.026, %58 ], [ %.026, %54 ], [ %.026, %53 ], [ %.026, %43 ], [ %.026, %33 ], [ %.026, %31 ], [ %.026, %19 ], [ %.026, %9 ]
  %.024.be = phi i32 [ %.024, %8 ], [ %.neg, %207 ], [ %.024, %206 ], [ %.024, %205 ], [ %.024, %204 ], [ %.024, %203 ], [ %.024, %202 ], [ %.024, %201 ], [ %.024, %198 ], [ %.024, %197 ], [ %.024, %196 ], [ %186, %185 ], [ %.024, %175 ], [ %.024, %172 ], [ %.024, %171 ], [ %.024, %161 ], [ %.024, %151 ], [ %.024, %150 ], [ %.024, %140 ], [ %.024, %138 ], [ %.024, %126 ], [ %.024, %116 ], [ 0, %115 ], [ %.024, %113 ], [ %.024, %101 ], [ %.024, %91 ], [ %.024, %88 ], [ %.024, %86 ], [ %.024, %85 ], [ %.024, %75 ], [ %.024, %65 ], [ %.024, %63 ], [ %.024, %58 ], [ %.024, %54 ], [ %.024, %53 ], [ %.024, %43 ], [ %.024, %33 ], [ %.024, %31 ], [ %.024, %19 ], [ %.024, %9 ]
  %.022.be = phi i32 [ %.022, %8 ], [ -671095307, %207 ], [ 137208469, %206 ], [ -364827210, %205 ], [ 730069564, %204 ], [ -1985291120, %203 ], [ -342211367, %202 ], [ 809563599, %201 ], [ 1460244965, %198 ], [ -510230467, %197 ], [ -1737918827, %196 ], [ %195, %185 ], [ %184, %175 ], [ 431784004, %172 ], [ -180955923, %171 ], [ %170, %161 ], [ %160, %151 ], [ -180955923, %150 ], [ %149, %140 ], [ %139, %138 ], [ %137, %126 ], [ %125, %116 ], [ -1737918827, %115 ], [ %114, %113 ], [ %112, %101 ], [ %100, %91 ], [ 1460244965, %88 ], [ -441853978, %86 ], [ 116476869, %85 ], [ %84, %75 ], [ %74, %65 ], [ 825591401, %63 ], [ -986849086, %58 ], [ %57, %54 ], [ 825591401, %53 ], [ %52, %43 ], [ %42, %33 ], [ %32, %31 ], [ %30, %19 ], [ %18, %9 ]
  %.0.be = phi [2 x i8]* [ %.0, %8 ], [ %.0, %207 ], [ %.0, %206 ], [ %.0, %205 ], [ %.0, %204 ], [ %.0, %203 ], [ %.0, %202 ], [ %.0, %201 ], [ %.0, %198 ], [ %.0, %197 ], [ %.0, %196 ], [ %.0, %185 ], [ %.0, %175 ], [ %.0, %172 ], [ @.str.1, %171 ], [ %.0, %161 ], [ %.0, %151 ], [ @.str, %150 ], [ %.0, %140 ], [ %.0, %138 ], [ %.0, %126 ], [ %.0, %116 ], [ %.0, %115 ], [ %.0, %113 ], [ %.0, %101 ], [ %.0, %91 ], [ %.0, %88 ], [ %.0, %86 ], [ %.0, %85 ], [ %.0, %75 ], [ %.0, %65 ], [ %.0, %63 ], [ %.0, %58 ], [ %.0, %54 ], [ %.0, %53 ], [ %.0, %43 ], [ %.0, %33 ], [ %.0, %31 ], [ %.0, %19 ], [ %.0, %9 ]
  br label %8

9:                                                ; preds = %8
  %10 = load i32, i32* @x.4, align 4
  %11 = load i32, i32* @y.5, align 4
  %12 = add i32 %10, -1
  %13 = mul i32 %12, %10
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %16, %15
  %18 = select i1 %17, i32 809563599, i32 -488360297
  br label %.backedge

19:                                               ; preds = %8
  %20 = load i32, i32* @h, align 4
  %21 = icmp slt i32 %.030, %20
  store i1 %21, i1* %4, align 1
  %22 = load i32, i32* @x.4, align 4
  %23 = load i32, i32* @y.5, align 4
  %24 = add i32 %22, -1
  %25 = mul i32 %24, %22
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %23, 10
  %29 = or i1 %28, %27
  %30 = select i1 %29, i32 1339176992, i32 -488360297
  br label %.backedge

31:                                               ; preds = %8
  %.0..0..0.18 = load volatile i1, i1* %4, align 1
  %32 = select i1 %.0..0..0.18, i32 -1346594754, i32 -1734095859
  br label %.backedge

33:                                               ; preds = %8
  %34 = load i32, i32* @x.4, align 4
  %35 = load i32, i32* @y.5, align 4
  %36 = add i32 %34, -1
  %37 = mul i32 %36, %34
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %35, 10
  %41 = or i1 %40, %39
  %42 = select i1 %41, i32 -342211367, i32 -522485724
  br label %.backedge

43:                                               ; preds = %8
  %44 = load i32, i32* @x.4, align 4
  %45 = load i32, i32* @y.5, align 4
  %46 = add i32 %44, -1
  %47 = mul i32 %46, %44
  %48 = and i32 %47, 1
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %50, %49
  %52 = select i1 %51, i32 1328963678, i32 -522485724
  br label %.backedge

53:                                               ; preds = %8
  br label %.backedge

54:                                               ; preds = %8
  %55 = load i32, i32* @w, align 4
  %56 = icmp slt i32 %.028, %55
  %57 = select i1 %56, i32 -571931536, i32 -512889254
  br label %.backedge

58:                                               ; preds = %8
  %59 = sext i32 %.030 to i64
  %60 = sext i32 %.028 to i64
  %61 = getelementptr inbounds [303 x [303 x i8]], [303 x [303 x i8]]* @s, i64 0, i64 %59, i64 %60
  %62 = tail call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* nonnull dereferenceable(280) @_ZSt3cin, i8* nonnull dereferenceable(1) %61)
  br label %.backedge

63:                                               ; preds = %8
  %64 = add i32 %.028, 1
  br label %.backedge

65:                                               ; preds = %8
  %66 = load i32, i32* @x.4, align 4
  %67 = load i32, i32* @y.5, align 4
  %68 = add i32 %66, -1
  %69 = mul i32 %68, %66
  %70 = and i32 %69, 1
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %72, %71
  %74 = select i1 %73, i32 -1985291120, i32 -617623115
  br label %.backedge

75:                                               ; preds = %8
  %76 = load i32, i32* @x.4, align 4
  %77 = load i32, i32* @y.5, align 4
  %78 = add i32 %76, -1
  %79 = mul i32 %78, %76
  %80 = and i32 %79, 1
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %82, %81
  %84 = select i1 %83, i32 1197962732, i32 -617623115
  br label %.backedge

85:                                               ; preds = %8
  br label %.backedge

86:                                               ; preds = %8
  %87 = add i32 %.030, 1
  br label %.backedge

88:                                               ; preds = %8
  %89 = load i32, i32* @h, align 4
  %90 = load i32, i32* @w, align 4
  tail call void @_Z1fiiii(i32 0, i32 %89, i32 0, i32 %90)
  br label %.backedge

91:                                               ; preds = %8
  %92 = load i32, i32* @x.4, align 4
  %93 = load i32, i32* @y.5, align 4
  %94 = add i32 %92, -1
  %95 = mul i32 %94, %92
  %96 = and i32 %95, 1
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %98, %97
  %100 = select i1 %99, i32 730069564, i32 -1376569650
  br label %.backedge

101:                                              ; preds = %8
  %102 = load i32, i32* @h, align 4
  %103 = icmp slt i32 %.026, %102
  store i1 %103, i1* %3, align 1
  %104 = load i32, i32* @x.4, align 4
  %105 = load i32, i32* @y.5, align 4
  %106 = add i32 %104, -1
  %107 = mul i32 %106, %104
  %108 = and i32 %107, 1
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %110, %109
  %112 = select i1 %111, i32 1699935311, i32 -1376569650
  br label %.backedge

113:                                              ; preds = %8
  %.0..0..0.19 = load volatile i1, i1* %3, align 1
  %114 = select i1 %.0..0..0.19, i32 1228696382, i32 1065334632
  br label %.backedge

115:                                              ; preds = %8
  br label %.backedge

116:                                              ; preds = %8
  %117 = load i32, i32* @x.4, align 4
  %118 = load i32, i32* @y.5, align 4
  %119 = add i32 %117, -1
  %120 = mul i32 %119, %117
  %121 = and i32 %120, 1
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %118, 10
  %124 = or i1 %123, %122
  %125 = select i1 %124, i32 -364827210, i32 -1652205808
  br label %.backedge

126:                                              ; preds = %8
  %127 = load i32, i32* @w, align 4
  %128 = icmp slt i32 %.024, %127
  store i1 %128, i1* %2, align 1
  %129 = load i32, i32* @x.4, align 4
  %130 = load i32, i32* @y.5, align 4
  %131 = add i32 %129, -1
  %132 = mul i32 %131, %129
  %133 = and i32 %132, 1
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %130, 10
  %136 = or i1 %135, %134
  %137 = select i1 %136, i32 -423070283, i32 -1652205808
  br label %.backedge

138:                                              ; preds = %8
  %.0..0..0.20 = load volatile i1, i1* %2, align 1
  %139 = select i1 %.0..0..0.20, i32 1671664963, i32 836946585
  br label %.backedge

140:                                              ; preds = %8
  %141 = sext i32 %.026 to i64
  %142 = sext i32 %.024 to i64
  %143 = getelementptr inbounds [303 x [303 x i32]], [303 x [303 x i32]]* @ans, i64 0, i64 %141, i64 %142
  %144 = load i32, i32* %143, align 4
  %145 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull @_ZSt4cout, i32 %144)
  store %"class.std::basic_ostream"* %145, %"class.std::basic_ostream"** %1, align 8
  %146 = add i32 %.024, 1
  %147 = load i32, i32* @w, align 4
  %148 = icmp eq i32 %146, %147
  %149 = select i1 %148, i32 564400633, i32 -786099679
  br label %.backedge

150:                                              ; preds = %8
  br label %.backedge

151:                                              ; preds = %8
  %152 = load i32, i32* @x.4, align 4
  %153 = load i32, i32* @y.5, align 4
  %154 = add i32 %152, -1
  %155 = mul i32 %154, %152
  %156 = and i32 %155, 1
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %158, %157
  %160 = select i1 %159, i32 137208469, i32 430544462
  br label %.backedge

161:                                              ; preds = %8
  %162 = load i32, i32* @x.4, align 4
  %163 = load i32, i32* @y.5, align 4
  %164 = add i32 %162, -1
  %165 = mul i32 %164, %162
  %166 = and i32 %165, 1
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %163, 10
  %169 = or i1 %168, %167
  %170 = select i1 %169, i32 -1854033883, i32 430544462
  br label %.backedge

171:                                              ; preds = %8
  br label %.backedge

172:                                              ; preds = %8
  %173 = getelementptr inbounds [2 x i8], [2 x i8]* %.0, i64 0, i64 0
  %.0..0..0.21 = load volatile %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %1, align 8
  %174 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %.0..0..0.21, i8* %173)
  br label %.backedge

175:                                              ; preds = %8
  %176 = load i32, i32* @x.4, align 4
  %177 = load i32, i32* @y.5, align 4
  %178 = add i32 %176, -1
  %179 = mul i32 %178, %176
  %180 = and i32 %179, 1
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %182, %181
  %184 = select i1 %183, i32 -671095307, i32 -1124398319
  br label %.backedge

185:                                              ; preds = %8
  %186 = add i32 %.024, 1
  %187 = load i32, i32* @x.4, align 4
  %188 = load i32, i32* @y.5, align 4
  %189 = add i32 %187, -1
  %190 = mul i32 %189, %187
  %191 = and i32 %190, 1
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %188, 10
  %194 = or i1 %193, %192
  %195 = select i1 %194, i32 230112878, i32 -1124398319
  br label %.backedge

196:                                              ; preds = %8
  br label %.backedge

197:                                              ; preds = %8
  br label %.backedge

198:                                              ; preds = %8
  %199 = add i32 %.026, 1
  br label %.backedge

200:                                              ; preds = %8
  ret i32 0

201:                                              ; preds = %8
  br label %.backedge

202:                                              ; preds = %8
  br label %.backedge

203:                                              ; preds = %8
  br label %.backedge

204:                                              ; preds = %8
  br label %.backedge

205:                                              ; preds = %8
  br label %.backedge

206:                                              ; preds = %8
  br label %.backedge

207:                                              ; preds = %8
  %.neg = add i32 %.024, 1
  br label %.backedge
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s000803248.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nofree noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
