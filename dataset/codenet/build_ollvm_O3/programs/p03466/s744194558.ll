; ModuleID = 'build_ollvm/programs/p03466/s744194558.ll'
source_filename = "Project_CodeNet_C++1400/p03466/s744194558.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%struct.fastIO = type { i8 }

$_ZSt3maxIiERKT_S2_S2_ = comdat any

$_ZSt3minIiERKT_S2_S2_ = comdat any

$_ZN6fastIOrsERi = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@fio = global %struct.fastIO zeroinitializer, align 1
@ans = local_unnamed_addr global [105 x i8] zeroinitializer, align 16
@q = global i32 0, align 4
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s744194558.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0
@x.11 = common local_unnamed_addr global i32 0
@y.12 = common local_unnamed_addr global i32 0
@x.13 = common local_unnamed_addr global i32 0
@y.14 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 16053791, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 16053791, label %11
    i32 -1384065842, label %14
    i32 2023021100, label %25
    i32 1994949013, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -1384065842, i32 1994949013
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #8
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 2023021100, i32 1994949013
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #8
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ -1384065842, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nofree noinline norecurse nounwind uwtable
define i32 @_Z7findposiii(i32 %0, i32 %1, i32 %2) local_unnamed_addr #4 {
  %4 = alloca i1, align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  %7 = add i32 %1, 1
  %8 = mul nsw i32 %7, %2
  store i32 %8, i32* %5, align 4
  %9 = load i32, i32* @x.1, align 4
  %10 = load i32, i32* @y.2, align 4
  %11 = add i32 %9, -1
  %12 = mul i32 %11, %9
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %15, %14
  %17 = select i1 %16, i32 -1869513122, i32 1331032953
  %18 = select i1 %16, i32 438734509, i32 1331032953
  %19 = sext i32 %1 to i64
  %20 = sext i32 %2 to i64
  %21 = sext i32 %0 to i64
  %22 = select i1 %16, i32 1715715932, i32 -499000003
  %23 = select i1 %16, i32 1744094124, i32 -499000003
  %24 = select i1 %16, i32 -891486558, i32 -417232099
  %25 = select i1 %16, i32 685067049, i32 -417232099
  br label %26

26:                                               ; preds = %.backedge, %3
  %.035 = phi i32 [ undef, %3 ], [ %.035.be, %.backedge ]
  %.033 = phi i64 [ undef, %3 ], [ %.033.be, %.backedge ]
  %.031 = phi i64 [ undef, %3 ], [ %.031.be, %.backedge ]
  %.029 = phi i64 [ undef, %3 ], [ %.029.be, %.backedge ]
  %.0 = phi i32 [ 2079064978, %3 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 2079064978, label %27
    i32 -521641405, label %30
    i32 685067049, label %31
    i32 -891486558, label %32
    i32 1539058033, label %33
    i32 -937845017, label %34
    i32 1744094124, label %35
    i32 1715715932, label %37
    i32 409762985, label %39
    i32 -831961702, label %44
    i32 1398937510, label %50
    i32 2005420711, label %51
    i32 438734509, label %52
    i32 -1869513122, label %54
    i32 1361328130, label %55
    i32 -187006209, label %56
    i32 176098935, label %58
    i32 -417232099, label %59
    i32 -499000003, label %60
    i32 1331032953, label %61
  ]

.backedge:                                        ; preds = %26, %61, %60, %59, %56, %55, %54, %52, %51, %50, %44, %39, %37, %35, %34, %33, %32, %31, %30, %27
  %.035.be = phi i32 [ %.035, %26 ], [ %.035, %61 ], [ %.035, %60 ], [ %7, %59 ], [ %57, %56 ], [ %.035, %55 ], [ %.035, %54 ], [ %.035, %52 ], [ %.035, %51 ], [ %.035, %50 ], [ %.035, %44 ], [ %.035, %39 ], [ %.035, %37 ], [ %.035, %35 ], [ %.035, %34 ], [ %.035, %33 ], [ %.035, %32 ], [ %7, %31 ], [ %.035, %30 ], [ %.035, %27 ]
  %.033.be = phi i64 [ %.033, %26 ], [ %.033, %61 ], [ %.033, %60 ], [ %.033, %59 ], [ %.033, %56 ], [ %.033, %55 ], [ %.033, %54 ], [ %.033, %52 ], [ %.033, %51 ], [ %.neg, %50 ], [ %.033, %44 ], [ %.033, %39 ], [ %.033, %37 ], [ %.033, %35 ], [ %.033, %34 ], [ 0, %33 ], [ %.033, %32 ], [ %.033, %31 ], [ %.033, %30 ], [ %.033, %27 ]
  %.031.be = phi i64 [ %.031, %26 ], [ %62, %61 ], [ %.031, %60 ], [ %.031, %59 ], [ %.031, %56 ], [ %.031, %55 ], [ %.031, %54 ], [ %53, %52 ], [ %.031, %51 ], [ %.031, %50 ], [ %.031, %44 ], [ %.031, %39 ], [ %.031, %37 ], [ %.031, %35 ], [ %.031, %34 ], [ %19, %33 ], [ %.031, %32 ], [ %.031, %31 ], [ %.031, %30 ], [ %.031, %27 ]
  %.029.be = phi i64 [ %.029, %26 ], [ %.029, %61 ], [ %.029, %60 ], [ %.029, %59 ], [ %.029, %56 ], [ %.029, %55 ], [ %.029, %54 ], [ %.029, %52 ], [ %.029, %51 ], [ %.029, %50 ], [ %.029, %44 ], [ %41, %39 ], [ %.029, %37 ], [ %.029, %35 ], [ %.029, %34 ], [ %.029, %33 ], [ %.029, %32 ], [ %.029, %31 ], [ %.029, %30 ], [ %.029, %27 ]
  %.0.be = phi i32 [ %.0, %26 ], [ 438734509, %61 ], [ 1744094124, %60 ], [ 685067049, %59 ], [ 176098935, %56 ], [ -937845017, %55 ], [ 1361328130, %54 ], [ %17, %52 ], [ %18, %51 ], [ 1361328130, %50 ], [ %49, %44 ], [ %43, %39 ], [ %38, %37 ], [ %22, %35 ], [ %23, %34 ], [ -937845017, %33 ], [ 176098935, %32 ], [ %24, %31 ], [ %25, %30 ], [ %29, %27 ]
  br label %26

27:                                               ; preds = %26
  %.0..0..0. = load volatile i32, i32* %6, align 4
  %.0..0..0.27 = load volatile i32, i32* %5, align 4
  %28 = icmp eq i32 %.0..0..0., %.0..0..0.27
  %29 = select i1 %28, i32 -521641405, i32 1539058033
  br label %.backedge

30:                                               ; preds = %26
  br label %.backedge

31:                                               ; preds = %26
  br label %.backedge

32:                                               ; preds = %26
  br label %.backedge

33:                                               ; preds = %26
  br label %.backedge

34:                                               ; preds = %26
  br label %.backedge

35:                                               ; preds = %26
  %36 = icmp sle i64 %.033, %.031
  store i1 %36, i1* %4, align 1
  br label %.backedge

37:                                               ; preds = %26
  %.0..0..0.28 = load volatile i1, i1* %4, align 1
  %38 = select i1 %.0..0..0.28, i32 409762985, i32 -187006209
  br label %.backedge

39:                                               ; preds = %26
  %40 = add i64 %.031, %.033
  %41 = ashr i64 %40, 1
  %42 = mul nsw i64 %41, %20
  %.not37 = icmp sgt i64 %42, %21
  %43 = select i1 %.not37, i32 2005420711, i32 -831961702
  br label %.backedge

44:                                               ; preds = %26
  %45 = sub i64 %19, %.029
  %46 = sdiv i64 %45, %20
  %47 = mul nsw i64 %.029, %20
  %48 = sub i64 %21, %47
  %.not = icmp sgt i64 %46, %48
  %49 = select i1 %.not, i32 2005420711, i32 1398937510
  br label %.backedge

50:                                               ; preds = %26
  %.neg = add i64 %.029, 1
  br label %.backedge

51:                                               ; preds = %26
  br label %.backedge

52:                                               ; preds = %26
  %53 = add i64 %.029, -1
  br label %.backedge

54:                                               ; preds = %26
  br label %.backedge

55:                                               ; preds = %26
  br label %.backedge

56:                                               ; preds = %26
  %57 = trunc i64 %.031 to i32
  br label %.backedge

58:                                               ; preds = %26
  ret i32 %.035

59:                                               ; preds = %26
  br label %.backedge

60:                                               ; preds = %26
  br label %.backedge

61:                                               ; preds = %26
  %62 = add i64 %.029, -1
  br label %.backedge
}

; Function Attrs: noinline nounwind uwtable
define void @_Z5solveiiiii(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4) local_unnamed_addr #5 {
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = alloca i1, align 1
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store i32 %2, i32* %11, align 4
  store i32 %3, i32* %12, align 4
  store i32 %0, i32* %10, align 4
  %17 = add i32 %1, %0
  %18 = add i32 %1, 1
  %.not118 = icmp eq i32 %4, 0
  %19 = select i1 %.not118, i32 -1100571263, i32 -682207175
  %20 = icmp ne i32 %4, 0
  %21 = add i32 %17, 1
  %22 = xor i32 %4, 1
  %23 = icmp slt i32 %0, %1
  %24 = select i1 %23, i32 -124248400, i32 -613188672
  %25 = select i1 %.not118, i32 -1761743497, i32 -624017162
  %26 = icmp eq i32 %0, %1
  %27 = select i1 %26, i32 2105890912, i32 1926499088
  %28 = icmp slt i32 %1, 1
  %29 = select i1 %28, i32 -587150292, i32 1324582106
  br label %30

30:                                               ; preds = %.backedge, %5
  %.0115 = phi i32 [ undef, %5 ], [ %.0115.be, %.backedge ]
  %.0113 = phi i32 [ undef, %5 ], [ %.0113.be, %.backedge ]
  %.0111 = phi i32 [ undef, %5 ], [ %.0111.be, %.backedge ]
  %.0109 = phi i32 [ undef, %5 ], [ %.0109.be, %.backedge ]
  %.0107 = phi i32 [ undef, %5 ], [ %.0107.be, %.backedge ]
  %.0105 = phi i8 [ undef, %5 ], [ %.0105.be, %.backedge ]
  %.0103 = phi i32 [ undef, %5 ], [ %.0103.be, %.backedge ]
  %.0101 = phi i32 [ -2093337882, %5 ], [ %.0101.be, %.backedge ]
  %.0 = phi i32 [ undef, %5 ], [ %.0.be, %.backedge ]
  switch i32 %.0101, label %.backedge [
    i32 -2093337882, label %31
    i32 375984673, label %34
    i32 -587150292, label %35
    i32 1324582106, label %36
    i32 2105890912, label %37
    i32 -1595583917, label %47
    i32 388259391, label %59
    i32 -412711654, label %60
    i32 -474668894, label %64
    i32 -1761743497, label %65
    i32 -916494365, label %75
    i32 668832991, label %91
    i32 -624017162, label %92
    i32 -464116806, label %102
    i32 -33043573, label %118
    i32 -820659, label %119
    i32 -1418479880, label %120
    i32 -765958329, label %122
    i32 1926499088, label %123
    i32 -124248400, label %124
    i32 -613188672, label %129
    i32 1235025066, label %139
    i32 -654865234, label %155
    i32 1928255451, label %156
    i32 1899480941, label %160
    i32 -906279946, label %170
    i32 1559126768, label %180
    i32 -1417096823, label %182
    i32 -210851966, label %185
    i32 797871720, label %188
    i32 1273665614, label %191
    i32 1970902345, label %201
    i32 1646052803, label %215
    i32 -922395110, label %217
    i32 97941998, label %227
    i32 357685522, label %237
    i32 -1266470700, label %238
    i32 -2001480219, label %239
    i32 1168000845, label %240
    i32 1338849407, label %250
    i32 2139962012, label %264
    i32 431032140, label %266
    i32 -2145023971, label %276
    i32 864778410, label %290
    i32 -1963465551, label %292
    i32 483034121, label %293
    i32 119031557, label %303
    i32 623058891, label %313
    i32 2057844432, label %314
    i32 -2060184862, label %324
    i32 -456734320, label %334
    i32 1859327086, label %335
    i32 -1705457225, label %342
    i32 -670201134, label %343
    i32 1290774505, label %344
    i32 590253497, label %345
    i32 206829895, label %355
    i32 -369579203, label %365
    i32 -916015815, label %366
    i32 -682207175, label %367
    i32 -1100571263, label %369
    i32 -199094816, label %379
    i32 -1972370456, label %391
    i32 1364700861, label %392
    i32 -1498784206, label %394
    i32 749841745, label %404
    i32 -709595598, label %414
    i32 -974366798, label %415
    i32 -1782081181, label %416
    i32 -196465421, label %419
    i32 -1852640921, label %426
    i32 143314954, label %433
    i32 1943140520, label %440
    i32 -526949647, label %441
    i32 1848644397, label %442
    i32 1233564736, label %443
    i32 -577551825, label %444
    i32 -1966828770, label %445
    i32 1925498847, label %446
    i32 -1283887872, label %447
    i32 1280296973, label %448
    i32 -474806408, label %451
  ]

.backedge:                                        ; preds = %30, %451, %448, %447, %446, %445, %444, %443, %442, %441, %440, %433, %426, %419, %416, %414, %404, %394, %392, %391, %379, %369, %367, %366, %365, %355, %345, %344, %343, %342, %335, %334, %324, %314, %313, %303, %293, %292, %290, %276, %266, %264, %250, %240, %239, %238, %237, %227, %217, %215, %201, %191, %188, %185, %182, %180, %170, %160, %156, %155, %139, %129, %124, %123, %122, %120, %119, %118, %102, %92, %91, %75, %65, %64, %60, %59, %47, %37, %36, %35, %34, %31
  %.0115.be = phi i32 [ %.0115, %30 ], [ %.0115, %451 ], [ %.0115, %448 ], [ %.0115, %447 ], [ %.0115, %446 ], [ %.0115, %445 ], [ %.0115, %444 ], [ %.0115, %443 ], [ %.0115, %442 ], [ %.0115, %441 ], [ %.0115, %440 ], [ %.0115, %433 ], [ %.0115, %426 ], [ %.0115, %419 ], [ %418, %416 ], [ %.0115, %414 ], [ %.0115, %404 ], [ %.0115, %394 ], [ %.0115, %392 ], [ %.0115, %391 ], [ %.0115, %379 ], [ %.0115, %369 ], [ %.0115, %367 ], [ %.0115, %366 ], [ %.0115, %365 ], [ %.0115, %355 ], [ %.0115, %345 ], [ %.0115, %344 ], [ %.0115, %343 ], [ %.0115, %342 ], [ %.0115, %335 ], [ %.0115, %334 ], [ %.0115, %324 ], [ %.0115, %314 ], [ %.0115, %313 ], [ %.0115, %303 ], [ %.0115, %293 ], [ %.0115, %292 ], [ %.0115, %290 ], [ %.0115, %276 ], [ %.0115, %266 ], [ %.0115, %264 ], [ %.0115, %250 ], [ %.0115, %240 ], [ %.0115, %239 ], [ %.0115, %238 ], [ %.0115, %237 ], [ %.0115, %227 ], [ %.0115, %217 ], [ %.0115, %215 ], [ %.0115, %201 ], [ %.0115, %191 ], [ %.0115, %188 ], [ %.0115, %185 ], [ %.0115, %182 ], [ %.0115, %180 ], [ %.0115, %170 ], [ %.0115, %160 ], [ %.0115, %156 ], [ %.0115, %155 ], [ %.0115, %139 ], [ %.0115, %129 ], [ %.0115, %124 ], [ %.0115, %123 ], [ %.0115, %122 ], [ %121, %120 ], [ %.0115, %119 ], [ %.0115, %118 ], [ %.0115, %102 ], [ %.0115, %92 ], [ %.0115, %91 ], [ %.0115, %75 ], [ %.0115, %65 ], [ %.0115, %64 ], [ %.0115, %60 ], [ %.0115, %59 ], [ %49, %47 ], [ %.0115, %37 ], [ %.0115, %36 ], [ %.0115, %35 ], [ %.0115, %34 ], [ %.0115, %31 ]
  %.0113.be = phi i32 [ %.0113, %30 ], [ %.0113, %451 ], [ %.0113, %448 ], [ %.0113, %447 ], [ %.0113, %446 ], [ %.0113, %445 ], [ %.0113, %444 ], [ %.0113, %443 ], [ %.0113, %442 ], [ %.0113, %441 ], [ %.0113, %440 ], [ %434, %433 ], [ %.0113, %426 ], [ %.0113, %419 ], [ %.0113, %416 ], [ %.0113, %414 ], [ %.0113, %404 ], [ %.0113, %394 ], [ %.0113, %392 ], [ %.0113, %391 ], [ %.0113, %379 ], [ %.0113, %369 ], [ %.0113, %367 ], [ %.0113, %366 ], [ %.0113, %365 ], [ %.0113, %355 ], [ %.0113, %345 ], [ %.0113, %344 ], [ %.0113, %343 ], [ %.0113, %342 ], [ %.0113, %335 ], [ %.0113, %334 ], [ %.0113, %324 ], [ %.0113, %314 ], [ %.0113, %313 ], [ %.0113, %303 ], [ %.0113, %293 ], [ %.0113, %292 ], [ %.0113, %290 ], [ %.0113, %276 ], [ %.0113, %266 ], [ %.0113, %264 ], [ %.0113, %250 ], [ %.0113, %240 ], [ %.0113, %239 ], [ %.0113, %238 ], [ %.0113, %237 ], [ %.0113, %227 ], [ %.0113, %217 ], [ %.0113, %215 ], [ %.0113, %201 ], [ %.0113, %191 ], [ %.0113, %188 ], [ %.0113, %185 ], [ %.0113, %182 ], [ %.0113, %180 ], [ %.0113, %170 ], [ %.0113, %160 ], [ %.0113, %156 ], [ %.0113, %155 ], [ %140, %139 ], [ %.0113, %129 ], [ %.0113, %124 ], [ %.0113, %123 ], [ %.0113, %122 ], [ %.0113, %120 ], [ %.0113, %119 ], [ %.0113, %118 ], [ %.0113, %102 ], [ %.0113, %92 ], [ %.0113, %91 ], [ %.0113, %75 ], [ %.0113, %65 ], [ %.0113, %64 ], [ %.0113, %60 ], [ %.0113, %59 ], [ %.0113, %47 ], [ %.0113, %37 ], [ %.0113, %36 ], [ %.0113, %35 ], [ %.0113, %34 ], [ %.0113, %31 ]
  %.0111.be = phi i32 [ %.0111, %30 ], [ %.0111, %451 ], [ %.0111, %448 ], [ %.0111, %447 ], [ %.0111, %446 ], [ %.0111, %445 ], [ %.0111, %444 ], [ %.0111, %443 ], [ %.0111, %442 ], [ %.0111, %441 ], [ %.0111, %440 ], [ %435, %433 ], [ %.0111, %426 ], [ %.0111, %419 ], [ %.0111, %416 ], [ %.0111, %414 ], [ %.0111, %404 ], [ %.0111, %394 ], [ %.0111, %392 ], [ %.0111, %391 ], [ %.0111, %379 ], [ %.0111, %369 ], [ %.0111, %367 ], [ %.0111, %366 ], [ %.0111, %365 ], [ %.0111, %355 ], [ %.0111, %345 ], [ %.0111, %344 ], [ %.0111, %343 ], [ %.0111, %342 ], [ %.0111, %335 ], [ %.0111, %334 ], [ %.0111, %324 ], [ %.0111, %314 ], [ %.0111, %313 ], [ %.0111, %303 ], [ %.0111, %293 ], [ %.0111, %292 ], [ %.0111, %290 ], [ %.0111, %276 ], [ %.0111, %266 ], [ %.0111, %264 ], [ %.0111, %250 ], [ %.0111, %240 ], [ %.0111, %239 ], [ %.0111, %238 ], [ %.0111, %237 ], [ %.0111, %227 ], [ %.0111, %217 ], [ %.0111, %215 ], [ %.0111, %201 ], [ %.0111, %191 ], [ %.0111, %188 ], [ %.0111, %185 ], [ %.0111, %182 ], [ %.0111, %180 ], [ %.0111, %170 ], [ %.0111, %160 ], [ %.0111, %156 ], [ %.0111, %155 ], [ %141, %139 ], [ %.0111, %129 ], [ %.0111, %124 ], [ %.0111, %123 ], [ %.0111, %122 ], [ %.0111, %120 ], [ %.0111, %119 ], [ %.0111, %118 ], [ %.0111, %102 ], [ %.0111, %92 ], [ %.0111, %91 ], [ %.0111, %75 ], [ %.0111, %65 ], [ %.0111, %64 ], [ %.0111, %60 ], [ %.0111, %59 ], [ %.0111, %47 ], [ %.0111, %37 ], [ %.0111, %36 ], [ %.0111, %35 ], [ %.0111, %34 ], [ %.0111, %31 ]
  %.0109.be = phi i32 [ %.0109, %30 ], [ %.0109, %451 ], [ %.0109, %448 ], [ %.0109, %447 ], [ %.0109, %446 ], [ %.0109, %445 ], [ %.0109, %444 ], [ %.0109, %443 ], [ %.0109, %442 ], [ %.0109, %441 ], [ %.0109, %440 ], [ %437, %433 ], [ %.0109, %426 ], [ %.0109, %419 ], [ %.0109, %416 ], [ %.0109, %414 ], [ %.0109, %404 ], [ %.0109, %394 ], [ %.0109, %392 ], [ %.0109, %391 ], [ %.0109, %379 ], [ %.0109, %369 ], [ %.0109, %367 ], [ %.0109, %366 ], [ %.0109, %365 ], [ %.0109, %355 ], [ %.0109, %345 ], [ %.0109, %344 ], [ %.0109, %343 ], [ %.0109, %342 ], [ %.0109, %335 ], [ %.0109, %334 ], [ %.0109, %324 ], [ %.0109, %314 ], [ %.0109, %313 ], [ %.0109, %303 ], [ %.0109, %293 ], [ %.0109, %292 ], [ %.0109, %290 ], [ %.0109, %276 ], [ %.0109, %266 ], [ %.0109, %264 ], [ %.0109, %250 ], [ %.0109, %240 ], [ %.0109, %239 ], [ %.0109, %238 ], [ %.0109, %237 ], [ %.0109, %227 ], [ %.0109, %217 ], [ %.0109, %215 ], [ %.0109, %201 ], [ %.0109, %191 ], [ %.0109, %188 ], [ %.0109, %185 ], [ %.0109, %182 ], [ %.0109, %180 ], [ %.0109, %170 ], [ %.0109, %160 ], [ %.0109, %156 ], [ %.0109, %155 ], [ %143, %139 ], [ %.0109, %129 ], [ %.0109, %124 ], [ %.0109, %123 ], [ %.0109, %122 ], [ %.0109, %120 ], [ %.0109, %119 ], [ %.0109, %118 ], [ %.0109, %102 ], [ %.0109, %92 ], [ %.0109, %91 ], [ %.0109, %75 ], [ %.0109, %65 ], [ %.0109, %64 ], [ %.0109, %60 ], [ %.0109, %59 ], [ %.0109, %47 ], [ %.0109, %37 ], [ %.0109, %36 ], [ %.0109, %35 ], [ %.0109, %34 ], [ %.0109, %31 ]
  %.0107.be = phi i32 [ %.0107, %30 ], [ %.0107, %451 ], [ %.0107, %448 ], [ %.0107, %447 ], [ %.0107, %446 ], [ %.0107, %445 ], [ %.0107, %444 ], [ %.0107, %443 ], [ %.0107, %442 ], [ %.0107, %441 ], [ %.0107, %440 ], [ %439, %433 ], [ %.0107, %426 ], [ %.0107, %419 ], [ %.0107, %416 ], [ %.0107, %414 ], [ %.0107, %404 ], [ %.0107, %394 ], [ %393, %392 ], [ %.0107, %391 ], [ %.0107, %379 ], [ %.0107, %369 ], [ %.0107, %367 ], [ %.0107, %366 ], [ %.0107, %365 ], [ %.0107, %355 ], [ %.0107, %345 ], [ %.0107, %344 ], [ %.0107, %343 ], [ %.0107, %342 ], [ %.0107, %335 ], [ %.0107, %334 ], [ %.0107, %324 ], [ %.0107, %314 ], [ %.0107, %313 ], [ %.0107, %303 ], [ %.0107, %293 ], [ %.0107, %292 ], [ %.0107, %290 ], [ %.0107, %276 ], [ %.0107, %266 ], [ %.0107, %264 ], [ %.0107, %250 ], [ %.0107, %240 ], [ %.0107, %239 ], [ %.0107, %238 ], [ %.0107, %237 ], [ %.0107, %227 ], [ %.0107, %217 ], [ %.0107, %215 ], [ %.0107, %201 ], [ %.0107, %191 ], [ %.0107, %188 ], [ %.0107, %185 ], [ %.0107, %182 ], [ %.0107, %180 ], [ %.0107, %170 ], [ %.0107, %160 ], [ %.0107, %156 ], [ %.0107, %155 ], [ %145, %139 ], [ %.0107, %129 ], [ %.0107, %124 ], [ %.0107, %123 ], [ %.0107, %122 ], [ %.0107, %120 ], [ %.0107, %119 ], [ %.0107, %118 ], [ %.0107, %102 ], [ %.0107, %92 ], [ %.0107, %91 ], [ %.0107, %75 ], [ %.0107, %65 ], [ %.0107, %64 ], [ %.0107, %60 ], [ %.0107, %59 ], [ %.0107, %47 ], [ %.0107, %37 ], [ %.0107, %36 ], [ %.0107, %35 ], [ %.0107, %34 ], [ %.0107, %31 ]
  %.0105.be = phi i8 [ %.0105, %30 ], [ %.0105, %451 ], [ %.0105, %448 ], [ %.0105, %447 ], [ %.0105, %446 ], [ 65, %445 ], [ %.0105, %444 ], [ %.0105, %443 ], [ 65, %442 ], [ %.0105, %441 ], [ %.0105, %440 ], [ %.0105, %433 ], [ %.0105, %426 ], [ %.0105, %419 ], [ %.0105, %416 ], [ %.0105, %414 ], [ %.0105, %404 ], [ %.0105, %394 ], [ %.0105, %392 ], [ %.0105, %391 ], [ %.0105, %379 ], [ %.0105, %369 ], [ %368, %367 ], [ %.0105, %366 ], [ %.0105, %365 ], [ %.0105, %355 ], [ %.0105, %345 ], [ %.0105, %344 ], [ 65, %343 ], [ 66, %342 ], [ %.0105, %335 ], [ %.0105, %334 ], [ %.0105, %324 ], [ %.0105, %314 ], [ %.0105, %313 ], [ 65, %303 ], [ %.0105, %293 ], [ 66, %292 ], [ %.0105, %290 ], [ %.0105, %276 ], [ %.0105, %266 ], [ %.0105, %264 ], [ %.0105, %250 ], [ %.0105, %240 ], [ %.0105, %239 ], [ 66, %238 ], [ %.0105, %237 ], [ 65, %227 ], [ %.0105, %217 ], [ %.0105, %215 ], [ %.0105, %201 ], [ %.0105, %191 ], [ %.0105, %188 ], [ %.0105, %185 ], [ %.0105, %182 ], [ %.0105, %180 ], [ %.0105, %170 ], [ %.0105, %160 ], [ %.0105, %156 ], [ %.0105, %155 ], [ %.0105, %139 ], [ %.0105, %129 ], [ %.0105, %124 ], [ %.0105, %123 ], [ %.0105, %122 ], [ %.0105, %120 ], [ %.0105, %119 ], [ %.0105, %118 ], [ %.0105, %102 ], [ %.0105, %92 ], [ %.0105, %91 ], [ %.0105, %75 ], [ %.0105, %65 ], [ %.0105, %64 ], [ %.0105, %60 ], [ %.0105, %59 ], [ %.0105, %47 ], [ %.0105, %37 ], [ %.0105, %36 ], [ %.0105, %35 ], [ %.0105, %34 ], [ %.0105, %31 ]
  %.0103.be = phi i32 [ %.0103, %30 ], [ %.0103, %451 ], [ %.0103, %448 ], [ %.0103, %447 ], [ %.0103, %446 ], [ %.0103, %445 ], [ %.0103, %444 ], [ %.0103, %443 ], [ %.0103, %442 ], [ %.0103, %441 ], [ %.0103, %440 ], [ %.0103, %433 ], [ %.0103, %426 ], [ %.0103, %419 ], [ %.0103, %416 ], [ %.0103, %414 ], [ %.0103, %404 ], [ %.0103, %394 ], [ %.0103, %392 ], [ %.0103, %391 ], [ %.0103, %379 ], [ %.0103, %369 ], [ %.0103, %367 ], [ %.0103, %366 ], [ %.0103, %365 ], [ %.0103, %355 ], [ %.0103, %345 ], [ %.0103, %344 ], [ %.0103, %343 ], [ %.0103, %342 ], [ %.0103, %335 ], [ %.0103, %334 ], [ %.0103, %324 ], [ %.0103, %314 ], [ %.0103, %313 ], [ %.0103, %303 ], [ %.0103, %293 ], [ %.0103, %292 ], [ %.0103, %290 ], [ %.0103, %276 ], [ %.0103, %266 ], [ %.0103, %264 ], [ %.0103, %250 ], [ %.0103, %240 ], [ %.0103, %239 ], [ %.0103, %238 ], [ %.0103, %237 ], [ %.0103, %227 ], [ %.0103, %217 ], [ %.0103, %215 ], [ %.0103, %201 ], [ %.0103, %191 ], [ %.0, %188 ], [ %.0103, %185 ], [ %.0103, %182 ], [ %.0103, %180 ], [ %.0103, %170 ], [ %.0103, %160 ], [ %.0103, %156 ], [ %.0103, %155 ], [ %.0103, %139 ], [ %.0103, %129 ], [ %.0103, %124 ], [ %.0103, %123 ], [ %.0103, %122 ], [ %.0103, %120 ], [ %.0103, %119 ], [ %.0103, %118 ], [ %.0103, %102 ], [ %.0103, %92 ], [ %.0103, %91 ], [ %.0103, %75 ], [ %.0103, %65 ], [ %.0103, %64 ], [ %.0103, %60 ], [ %.0103, %59 ], [ %.0103, %47 ], [ %.0103, %37 ], [ %.0103, %36 ], [ %.0103, %35 ], [ %.0103, %34 ], [ %.0103, %31 ]
  %.0101.be = phi i32 [ %.0101, %30 ], [ 749841745, %451 ], [ -199094816, %448 ], [ 206829895, %447 ], [ -2060184862, %446 ], [ 119031557, %445 ], [ -2145023971, %444 ], [ 1338849407, %443 ], [ 97941998, %442 ], [ 1970902345, %441 ], [ -906279946, %440 ], [ 1235025066, %433 ], [ -464116806, %426 ], [ -916494365, %419 ], [ -1595583917, %416 ], [ -974366798, %414 ], [ %413, %404 ], [ %403, %394 ], [ 1928255451, %392 ], [ 1364700861, %391 ], [ %390, %379 ], [ %378, %369 ], [ -1100571263, %367 ], [ %19, %366 ], [ -916015815, %365 ], [ %364, %355 ], [ %354, %345 ], [ 590253497, %344 ], [ 1290774505, %343 ], [ 1290774505, %342 ], [ %341, %335 ], [ 590253497, %334 ], [ %333, %324 ], [ %323, %314 ], [ 2057844432, %313 ], [ %312, %303 ], [ %302, %293 ], [ 2057844432, %292 ], [ %291, %290 ], [ %289, %276 ], [ %275, %266 ], [ %265, %264 ], [ %263, %250 ], [ %249, %240 ], [ -916015815, %239 ], [ -2001480219, %238 ], [ -2001480219, %237 ], [ %236, %227 ], [ %226, %217 ], [ %216, %215 ], [ %214, %201 ], [ %200, %191 ], [ %190, %188 ], [ 797871720, %185 ], [ 797871720, %182 ], [ %181, %180 ], [ %179, %170 ], [ %169, %160 ], [ %159, %156 ], [ 1928255451, %155 ], [ %154, %139 ], [ %138, %129 ], [ -974366798, %124 ], [ %24, %123 ], [ -974366798, %122 ], [ -412711654, %120 ], [ -1418479880, %119 ], [ -820659, %118 ], [ %117, %102 ], [ %101, %92 ], [ -820659, %91 ], [ %90, %75 ], [ %74, %65 ], [ %25, %64 ], [ %63, %60 ], [ -412711654, %59 ], [ %58, %47 ], [ %46, %37 ], [ %27, %36 ], [ -974366798, %35 ], [ %29, %34 ], [ %33, %31 ]
  %.0.be = phi i32 [ %.0, %30 ], [ %.0, %451 ], [ %.0, %448 ], [ %.0, %447 ], [ %.0, %446 ], [ %.0, %445 ], [ %.0, %444 ], [ %.0, %443 ], [ %.0, %442 ], [ %.0, %441 ], [ %.0, %440 ], [ %.0, %433 ], [ %.0, %426 ], [ %.0, %419 ], [ %.0, %416 ], [ %.0, %414 ], [ %.0, %404 ], [ %.0, %394 ], [ %.0, %392 ], [ %.0, %391 ], [ %.0, %379 ], [ %.0, %369 ], [ %.0, %367 ], [ %.0, %366 ], [ %.0, %365 ], [ %.0, %355 ], [ %.0, %345 ], [ %.0, %344 ], [ %.0, %343 ], [ %.0, %342 ], [ %.0, %335 ], [ %.0, %334 ], [ %.0, %324 ], [ %.0, %314 ], [ %.0, %313 ], [ %.0, %303 ], [ %.0, %293 ], [ %.0, %292 ], [ %.0, %290 ], [ %.0, %276 ], [ %.0, %266 ], [ %.0, %264 ], [ %.0, %250 ], [ %.0, %240 ], [ %.0, %239 ], [ %.0, %238 ], [ %.0, %237 ], [ %.0, %227 ], [ %.0, %217 ], [ %.0, %215 ], [ %.0, %201 ], [ %.0, %191 ], [ %.0, %188 ], [ %187, %185 ], [ %184, %182 ], [ %.0, %180 ], [ %.0, %170 ], [ %.0, %160 ], [ %.0, %156 ], [ %.0, %155 ], [ %.0, %139 ], [ %.0, %129 ], [ %.0, %124 ], [ %.0, %123 ], [ %.0, %122 ], [ %.0, %120 ], [ %.0, %119 ], [ %.0, %118 ], [ %.0, %102 ], [ %.0, %92 ], [ %.0, %91 ], [ %.0, %75 ], [ %.0, %65 ], [ %.0, %64 ], [ %.0, %60 ], [ %.0, %59 ], [ %.0, %47 ], [ %.0, %37 ], [ %.0, %36 ], [ %.0, %35 ], [ %.0, %34 ], [ %.0, %31 ]
  br label %30

31:                                               ; preds = %30
  %.0..0..0. = load volatile i32, i32* %10, align 4
  %32 = icmp slt i32 %.0..0..0., 1
  %33 = select i1 %32, i32 375984673, i32 1324582106
  br label %.backedge

34:                                               ; preds = %30
  br label %.backedge

35:                                               ; preds = %30
  br label %.backedge

36:                                               ; preds = %30
  br label %.backedge

37:                                               ; preds = %30
  %38 = load i32, i32* @x.3, align 4
  %39 = load i32, i32* @y.4, align 4
  %40 = add i32 %38, -1
  %41 = mul i32 %40, %38
  %42 = and i32 %41, 1
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %44, %43
  %46 = select i1 %45, i32 -1595583917, i32 -1782081181
  br label %.backedge

47:                                               ; preds = %30
  store i32 1, i32* %13, align 4
  %48 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %13, i32* nonnull dereferenceable(4) %11)
  %49 = load i32, i32* %48, align 4
  %50 = load i32, i32* @x.3, align 4
  %51 = load i32, i32* @y.4, align 4
  %52 = add i32 %50, -1
  %53 = mul i32 %52, %50
  %54 = and i32 %53, 1
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %51, 10
  %57 = or i1 %56, %55
  %58 = select i1 %57, i32 388259391, i32 -1782081181
  br label %.backedge

59:                                               ; preds = %30
  br label %.backedge

60:                                               ; preds = %30
  store i32 %17, i32* %14, align 4
  %61 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %14, i32* nonnull dereferenceable(4) %12)
  %62 = load i32, i32* %61, align 4
  %.not126 = icmp sgt i32 %.0115, %62
  %63 = select i1 %.not126, i32 -765958329, i32 -474668894
  br label %.backedge

64:                                               ; preds = %30
  br label %.backedge

65:                                               ; preds = %30
  %66 = load i32, i32* @x.3, align 4
  %67 = load i32, i32* @y.4, align 4
  %68 = add i32 %66, -1
  %69 = mul i32 %68, %66
  %70 = and i32 %69, 1
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %67, 10
  %73 = or i1 %72, %71
  %74 = select i1 %73, i32 -916494365, i32 -196465421
  br label %.backedge

75:                                               ; preds = %30
  %76 = and i32 %.0115, 1
  %.not124 = icmp eq i32 %76, 0
  %77 = select i1 %.not124, i8 66, i8 65
  %78 = load i32, i32* %11, align 4
  %79 = sub i32 %.0115, %78
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds [105 x i8], [105 x i8]* @ans, i64 0, i64 %80
  store i8 %77, i8* %81, align 1
  %82 = load i32, i32* @x.3, align 4
  %83 = load i32, i32* @y.4, align 4
  %84 = add i32 %82, -1
  %85 = mul i32 %84, %82
  %86 = and i32 %85, 1
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %83, 10
  %89 = or i1 %88, %87
  %90 = select i1 %89, i32 668832991, i32 -196465421
  br label %.backedge

91:                                               ; preds = %30
  br label %.backedge

92:                                               ; preds = %30
  %93 = load i32, i32* @x.3, align 4
  %94 = load i32, i32* @y.4, align 4
  %95 = add i32 %93, -1
  %96 = mul i32 %95, %93
  %97 = and i32 %96, 1
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %94, 10
  %100 = or i1 %99, %98
  %101 = select i1 %100, i32 -464116806, i32 -1852640921
  br label %.backedge

102:                                              ; preds = %30
  %103 = and i32 %.0115, 1
  %.not123 = icmp eq i32 %103, 0
  %104 = select i1 %.not123, i8 65, i8 66
  %105 = load i32, i32* %12, align 4
  %106 = sub i32 %105, %.0115
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds [105 x i8], [105 x i8]* @ans, i64 0, i64 %107
  store i8 %104, i8* %108, align 1
  %109 = load i32, i32* @x.3, align 4
  %110 = load i32, i32* @y.4, align 4
  %111 = add i32 %109, -1
  %112 = mul i32 %111, %109
  %113 = and i32 %112, 1
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %115, %114
  %117 = select i1 %116, i32 -33043573, i32 -1852640921
  br label %.backedge

118:                                              ; preds = %30
  br label %.backedge

119:                                              ; preds = %30
  br label %.backedge

120:                                              ; preds = %30
  %121 = add i32 %.0115, 1
  br label %.backedge

122:                                              ; preds = %30
  br label %.backedge

123:                                              ; preds = %30
  br label %.backedge

124:                                              ; preds = %30
  %125 = load i32, i32* %12, align 4
  %126 = sub i32 %21, %125
  %127 = load i32, i32* %11, align 4
  %128 = sub i32 %21, %127
  call void @_Z5solveiiiii(i32 %1, i32 %0, i32 %126, i32 %128, i32 %22)
  br label %.backedge

129:                                              ; preds = %30
  %130 = load i32, i32* @x.3, align 4
  %131 = load i32, i32* @y.4, align 4
  %132 = add i32 %130, -1
  %133 = mul i32 %132, %130
  %134 = and i32 %133, 1
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %136, %135
  %138 = select i1 %137, i32 1235025066, i32 143314954
  br label %.backedge

139:                                              ; preds = %30
  %140 = sdiv i32 %17, %18
  %141 = call i32 @_Z7findposiii(i32 %0, i32 %1, i32 %140)
  %142 = sub i32 %1, %141
  %143 = sdiv i32 %142, %140
  store i32 1, i32* %15, align 4
  %144 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %15, i32* nonnull dereferenceable(4) %11)
  %145 = load i32, i32* %144, align 4
  %146 = load i32, i32* @x.3, align 4
  %147 = load i32, i32* @y.4, align 4
  %148 = add i32 %146, -1
  %149 = mul i32 %148, %146
  %150 = and i32 %149, 1
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %147, 10
  %153 = or i1 %152, %151
  %154 = select i1 %153, i32 -654865234, i32 143314954
  br label %.backedge

155:                                              ; preds = %30
  br label %.backedge

156:                                              ; preds = %30
  store i32 %17, i32* %16, align 4
  %157 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %16, i32* nonnull dereferenceable(4) %12)
  %158 = load i32, i32* %157, align 4
  %.not122 = icmp sgt i32 %.0107, %158
  %159 = select i1 %.not122, i32 -1498784206, i32 1899480941
  br label %.backedge

160:                                              ; preds = %30
  %161 = load i32, i32* @x.3, align 4
  %162 = load i32, i32* @y.4, align 4
  %163 = add i32 %161, -1
  %164 = mul i32 %163, %161
  %165 = and i32 %164, 1
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %167, %166
  %169 = select i1 %168, i32 -906279946, i32 1943140520
  br label %.backedge

170:                                              ; preds = %30
  store i1 %20, i1* %9, align 1
  %171 = load i32, i32* @x.3, align 4
  %172 = load i32, i32* @y.4, align 4
  %173 = add i32 %171, -1
  %174 = mul i32 %173, %171
  %175 = and i32 %174, 1
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %172, 10
  %178 = or i1 %177, %176
  %179 = select i1 %178, i32 1559126768, i32 1943140520
  br label %.backedge

180:                                              ; preds = %30
  %.0..0..0.97 = load volatile i1, i1* %9, align 1
  %181 = select i1 %.0..0..0.97, i32 -1417096823, i32 -210851966
  br label %.backedge

182:                                              ; preds = %30
  %183 = load i32, i32* %12, align 4
  %184 = sub i32 %183, %.0107
  br label %.backedge

185:                                              ; preds = %30
  %186 = load i32, i32* %11, align 4
  %187 = sub i32 %.0107, %186
  br label %.backedge

188:                                              ; preds = %30
  %.neg120 = add i32 %.0113, 1
  %189 = mul nsw i32 %.0111, %.neg120
  %.not121 = icmp sgt i32 %.0107, %189
  %190 = select i1 %.not121, i32 1168000845, i32 1273665614
  br label %.backedge

191:                                              ; preds = %30
  %192 = load i32, i32* @x.3, align 4
  %193 = load i32, i32* @y.4, align 4
  %194 = add i32 %192, -1
  %195 = mul i32 %194, %192
  %196 = and i32 %195, 1
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %193, 10
  %199 = or i1 %198, %197
  %200 = select i1 %199, i32 1970902345, i32 -526949647
  br label %.backedge

201:                                              ; preds = %30
  %202 = add i32 %.0107, -1
  %203 = add i32 %.0113, 1
  %204 = srem i32 %202, %203
  %205 = icmp slt i32 %204, %.0113
  store i1 %205, i1* %8, align 1
  %206 = load i32, i32* @x.3, align 4
  %207 = load i32, i32* @y.4, align 4
  %208 = add i32 %206, -1
  %209 = mul i32 %208, %206
  %210 = and i32 %209, 1
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %207, 10
  %213 = or i1 %212, %211
  %214 = select i1 %213, i32 1646052803, i32 -526949647
  br label %.backedge

215:                                              ; preds = %30
  %.0..0..0.98 = load volatile i1, i1* %8, align 1
  %216 = select i1 %.0..0..0.98, i32 -922395110, i32 -1266470700
  br label %.backedge

217:                                              ; preds = %30
  %218 = load i32, i32* @x.3, align 4
  %219 = load i32, i32* @y.4, align 4
  %220 = add i32 %218, -1
  %221 = mul i32 %220, %218
  %222 = and i32 %221, 1
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %219, 10
  %225 = or i1 %224, %223
  %226 = select i1 %225, i32 97941998, i32 1848644397
  br label %.backedge

227:                                              ; preds = %30
  %228 = load i32, i32* @x.3, align 4
  %229 = load i32, i32* @y.4, align 4
  %230 = add i32 %228, -1
  %231 = mul i32 %230, %228
  %232 = and i32 %231, 1
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %229, 10
  %235 = or i1 %234, %233
  %236 = select i1 %235, i32 357685522, i32 1848644397
  br label %.backedge

237:                                              ; preds = %30
  br label %.backedge

238:                                              ; preds = %30
  br label %.backedge

239:                                              ; preds = %30
  br label %.backedge

240:                                              ; preds = %30
  %241 = load i32, i32* @x.3, align 4
  %242 = load i32, i32* @y.4, align 4
  %243 = add i32 %241, -1
  %244 = mul i32 %243, %241
  %245 = and i32 %244, 1
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %242, 10
  %248 = or i1 %247, %246
  %249 = select i1 %248, i32 1338849407, i32 1233564736
  br label %.backedge

250:                                              ; preds = %30
  %251 = sub i32 %17, %.0107
  %252 = add i32 %.0113, 1
  %253 = mul nsw i32 %.0109, %252
  %254 = icmp slt i32 %251, %253
  store i1 %254, i1* %7, align 1
  %255 = load i32, i32* @x.3, align 4
  %256 = load i32, i32* @y.4, align 4
  %257 = add i32 %255, -1
  %258 = mul i32 %257, %255
  %259 = and i32 %258, 1
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %256, 10
  %262 = or i1 %261, %260
  %263 = select i1 %262, i32 2139962012, i32 1233564736
  br label %.backedge

264:                                              ; preds = %30
  %.0..0..0.99 = load volatile i1, i1* %7, align 1
  %265 = select i1 %.0..0..0.99, i32 431032140, i32 1859327086
  br label %.backedge

266:                                              ; preds = %30
  %267 = load i32, i32* @x.3, align 4
  %268 = load i32, i32* @y.4, align 4
  %269 = add i32 %267, -1
  %270 = mul i32 %269, %267
  %271 = and i32 %270, 1
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %268, 10
  %274 = or i1 %273, %272
  %275 = select i1 %274, i32 -2145023971, i32 -577551825
  br label %.backedge

276:                                              ; preds = %30
  %277 = sub i32 %17, %.0107
  %278 = add i32 %.0113, 1
  %279 = srem i32 %277, %278
  %280 = icmp slt i32 %279, %.0113
  store i1 %280, i1* %6, align 1
  %281 = load i32, i32* @x.3, align 4
  %282 = load i32, i32* @y.4, align 4
  %283 = add i32 %281, -1
  %284 = mul i32 %283, %281
  %285 = and i32 %284, 1
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %287, %286
  %289 = select i1 %288, i32 864778410, i32 -577551825
  br label %.backedge

290:                                              ; preds = %30
  %.0..0..0.100 = load volatile i1, i1* %6, align 1
  %291 = select i1 %.0..0..0.100, i32 -1963465551, i32 483034121
  br label %.backedge

292:                                              ; preds = %30
  br label %.backedge

293:                                              ; preds = %30
  %294 = load i32, i32* @x.3, align 4
  %295 = load i32, i32* @y.4, align 4
  %296 = add i32 %294, -1
  %297 = mul i32 %296, %294
  %298 = and i32 %297, 1
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %295, 10
  %301 = or i1 %300, %299
  %302 = select i1 %301, i32 119031557, i32 -1966828770
  br label %.backedge

303:                                              ; preds = %30
  %304 = load i32, i32* @x.3, align 4
  %305 = load i32, i32* @y.4, align 4
  %306 = add i32 %304, -1
  %307 = mul i32 %306, %304
  %308 = and i32 %307, 1
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %305, 10
  %311 = or i1 %310, %309
  %312 = select i1 %311, i32 623058891, i32 -1966828770
  br label %.backedge

313:                                              ; preds = %30
  br label %.backedge

314:                                              ; preds = %30
  %315 = load i32, i32* @x.3, align 4
  %316 = load i32, i32* @y.4, align 4
  %317 = add i32 %315, -1
  %318 = mul i32 %317, %315
  %319 = and i32 %318, 1
  %320 = icmp eq i32 %319, 0
  %321 = icmp slt i32 %316, 10
  %322 = or i1 %321, %320
  %323 = select i1 %322, i32 -2060184862, i32 1925498847
  br label %.backedge

324:                                              ; preds = %30
  %325 = load i32, i32* @x.3, align 4
  %326 = load i32, i32* @y.4, align 4
  %327 = add i32 %325, -1
  %328 = mul i32 %327, %325
  %329 = and i32 %328, 1
  %330 = icmp eq i32 %329, 0
  %331 = icmp slt i32 %326, 10
  %332 = or i1 %331, %330
  %333 = select i1 %332, i32 -456734320, i32 1925498847
  br label %.backedge

334:                                              ; preds = %30
  br label %.backedge

335:                                              ; preds = %30
  %.neg = xor i32 %.0113, -1
  %.neg119 = mul i32 %.0109, %.neg
  %336 = sub i32 %1, %.0111
  %337 = srem i32 %336, %.0113
  %338 = add i32 %17, %.neg119
  %339 = sub i32 %338, %337
  %340 = icmp sgt i32 %.0107, %339
  %341 = select i1 %340, i32 -1705457225, i32 -670201134
  br label %.backedge

342:                                              ; preds = %30
  br label %.backedge

343:                                              ; preds = %30
  br label %.backedge

344:                                              ; preds = %30
  br label %.backedge

345:                                              ; preds = %30
  %346 = load i32, i32* @x.3, align 4
  %347 = load i32, i32* @y.4, align 4
  %348 = add i32 %346, -1
  %349 = mul i32 %348, %346
  %350 = and i32 %349, 1
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %352, %351
  %354 = select i1 %353, i32 206829895, i32 -1283887872
  br label %.backedge

355:                                              ; preds = %30
  %356 = load i32, i32* @x.3, align 4
  %357 = load i32, i32* @y.4, align 4
  %358 = add i32 %356, -1
  %359 = mul i32 %358, %356
  %360 = and i32 %359, 1
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %357, 10
  %363 = or i1 %362, %361
  %364 = select i1 %363, i32 -369579203, i32 -1283887872
  br label %.backedge

365:                                              ; preds = %30
  br label %.backedge

366:                                              ; preds = %30
  br label %.backedge

367:                                              ; preds = %30
  %368 = sub i8 -125, %.0105
  br label %.backedge

369:                                              ; preds = %30
  %370 = load i32, i32* @x.3, align 4
  %371 = load i32, i32* @y.4, align 4
  %372 = add i32 %370, -1
  %373 = mul i32 %372, %370
  %374 = and i32 %373, 1
  %375 = icmp eq i32 %374, 0
  %376 = icmp slt i32 %371, 10
  %377 = or i1 %376, %375
  %378 = select i1 %377, i32 -199094816, i32 1280296973
  br label %.backedge

379:                                              ; preds = %30
  %380 = sext i32 %.0103 to i64
  %381 = getelementptr inbounds [105 x i8], [105 x i8]* @ans, i64 0, i64 %380
  store i8 %.0105, i8* %381, align 1
  %382 = load i32, i32* @x.3, align 4
  %383 = load i32, i32* @y.4, align 4
  %384 = add i32 %382, -1
  %385 = mul i32 %384, %382
  %386 = and i32 %385, 1
  %387 = icmp eq i32 %386, 0
  %388 = icmp slt i32 %383, 10
  %389 = or i1 %388, %387
  %390 = select i1 %389, i32 -1972370456, i32 1280296973
  br label %.backedge

391:                                              ; preds = %30
  br label %.backedge

392:                                              ; preds = %30
  %393 = add i32 %.0107, 1
  br label %.backedge

394:                                              ; preds = %30
  %395 = load i32, i32* @x.3, align 4
  %396 = load i32, i32* @y.4, align 4
  %397 = add i32 %395, -1
  %398 = mul i32 %397, %395
  %399 = and i32 %398, 1
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %401, %400
  %403 = select i1 %402, i32 749841745, i32 -474806408
  br label %.backedge

404:                                              ; preds = %30
  %405 = load i32, i32* @x.3, align 4
  %406 = load i32, i32* @y.4, align 4
  %407 = add i32 %405, -1
  %408 = mul i32 %407, %405
  %409 = and i32 %408, 1
  %410 = icmp eq i32 %409, 0
  %411 = icmp slt i32 %406, 10
  %412 = or i1 %411, %410
  %413 = select i1 %412, i32 -709595598, i32 -474806408
  br label %.backedge

414:                                              ; preds = %30
  br label %.backedge

415:                                              ; preds = %30
  ret void

416:                                              ; preds = %30
  store i32 1, i32* %13, align 4
  %417 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %13, i32* nonnull dereferenceable(4) %11)
  %418 = load i32, i32* %417, align 4
  br label %.backedge

419:                                              ; preds = %30
  %420 = and i32 %.0115, 1
  %.not117 = icmp eq i32 %420, 0
  %421 = select i1 %.not117, i8 66, i8 65
  %422 = load i32, i32* %11, align 4
  %423 = sub i32 %.0115, %422
  %424 = sext i32 %423 to i64
  %425 = getelementptr inbounds [105 x i8], [105 x i8]* @ans, i64 0, i64 %424
  store i8 %421, i8* %425, align 1
  br label %.backedge

426:                                              ; preds = %30
  %427 = and i32 %.0115, 1
  %.not = icmp eq i32 %427, 0
  %428 = select i1 %.not, i8 65, i8 66
  %429 = load i32, i32* %12, align 4
  %430 = sub i32 %429, %.0115
  %431 = sext i32 %430 to i64
  %432 = getelementptr inbounds [105 x i8], [105 x i8]* @ans, i64 0, i64 %431
  store i8 %428, i8* %432, align 1
  br label %.backedge

433:                                              ; preds = %30
  %434 = sdiv i32 %17, %18
  %435 = call i32 @_Z7findposiii(i32 %0, i32 %1, i32 %434)
  %436 = sub i32 %1, %435
  %437 = sdiv i32 %436, %434
  store i32 1, i32* %15, align 4
  %438 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %15, i32* nonnull dereferenceable(4) %11)
  %439 = load i32, i32* %438, align 4
  br label %.backedge

440:                                              ; preds = %30
  br label %.backedge

441:                                              ; preds = %30
  br label %.backedge

442:                                              ; preds = %30
  br label %.backedge

443:                                              ; preds = %30
  br label %.backedge

444:                                              ; preds = %30
  br label %.backedge

445:                                              ; preds = %30
  br label %.backedge

446:                                              ; preds = %30
  br label %.backedge

447:                                              ; preds = %30
  br label %.backedge

448:                                              ; preds = %30
  %449 = sext i32 %.0103 to i64
  %450 = getelementptr inbounds [105 x i8], [105 x i8]* @ans, i64 0, i64 %449
  store i8 %.0105, i8* %450, align 1
  br label %.backedge

451:                                              ; preds = %30
  br label %.backedge
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = load i32, i32* %0, align 4
  store i32 %5, i32* %4, align 4
  %6 = load i32, i32* %1, align 4
  store i32 %6, i32* %3, align 4
  %7 = load i32, i32* @x.5, align 4
  %8 = load i32, i32* @y.6, align 4
  %9 = add i32 %7, -1
  %10 = mul i32 %9, %7
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %13, %12
  %15 = select i1 %14, i32 -1326123448, i32 -153877100
  %16 = select i1 %14, i32 1354834392, i32 -153877100
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.08.ph = phi i32* [ undef, %2 ], [ %.08.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ -131149842, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %.outer10

.outer10:                                         ; preds = %.outer10.backedge, %.outer
  %.0.ph11 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph11.be, %.outer10.backedge ]
  br label %17

17:                                               ; preds = %.outer10, %17
  switch i32 %.0.ph11, label %17 [
    i32 -131149842, label %18
    i32 2041733895, label %.outer.backedge
    i32 1968683645, label %.outer10.backedge
    i32 1354834392, label %21
    i32 -1326123448, label %22
    i32 -22707956, label %23
    i32 -153877100, label %24
  ]

18:                                               ; preds = %17
  %.0..0..0.6 = load volatile i32, i32* %4, align 4
  %.0..0..0.7 = load volatile i32, i32* %3, align 4
  %19 = icmp slt i32 %.0..0..0.6, %.0..0..0.7
  %20 = select i1 %19, i32 2041733895, i32 1968683645
  br label %.outer10.backedge

21:                                               ; preds = %17
  br label %.outer.backedge

22:                                               ; preds = %17
  br label %.outer10.backedge

.outer10.backedge:                                ; preds = %17, %22, %18
  %.0.ph11.be = phi i32 [ %20, %18 ], [ -22707956, %22 ], [ %16, %17 ]
  br label %.outer10

23:                                               ; preds = %17
  ret i32* %.08.ph

24:                                               ; preds = %17
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %17, %24, %21
  %.08.ph.be = phi i32* [ %0, %21 ], [ %0, %24 ], [ %1, %17 ]
  %.0.ph.be = phi i32 [ %15, %21 ], [ 1354834392, %24 ], [ -22707956, %17 ]
  br label %.outer
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = load i32, i32* %1, align 4
  store i32 %5, i32* %4, align 4
  %6 = load i32, i32* %0, align 4
  store i32 %6, i32* %3, align 4
  %7 = load i32, i32* @x.7, align 4
  %8 = load i32, i32* @y.8, align 4
  %9 = add i32 %7, -1
  %10 = mul i32 %9, %7
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %13, %12
  %15 = select i1 %14, i32 1814240460, i32 -1847568449
  %16 = select i1 %14, i32 510533005, i32 -1847568449
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.08.ph = phi i32* [ undef, %2 ], [ %.08.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ 724069753, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %.outer10

.outer10:                                         ; preds = %.outer10.backedge, %.outer
  %.0.ph11 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph11.be, %.outer10.backedge ]
  br label %17

17:                                               ; preds = %.outer10, %17
  switch i32 %.0.ph11, label %17 [
    i32 724069753, label %18
    i32 -1472411198, label %.outer.backedge
    i32 -2082840459, label %.outer10.backedge
    i32 510533005, label %21
    i32 1814240460, label %22
    i32 -1705958721, label %23
    i32 -1847568449, label %24
  ]

18:                                               ; preds = %17
  %.0..0..0.6 = load volatile i32, i32* %4, align 4
  %.0..0..0.7 = load volatile i32, i32* %3, align 4
  %19 = icmp slt i32 %.0..0..0.6, %.0..0..0.7
  %20 = select i1 %19, i32 -1472411198, i32 -2082840459
  br label %.outer10.backedge

21:                                               ; preds = %17
  br label %.outer.backedge

22:                                               ; preds = %17
  br label %.outer10.backedge

.outer10.backedge:                                ; preds = %17, %22, %18
  %.0.ph11.be = phi i32 [ %20, %18 ], [ -1705958721, %22 ], [ %16, %17 ]
  br label %.outer10

23:                                               ; preds = %17
  ret i32* %.08.ph

24:                                               ; preds = %17
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %17, %24, %21
  %.08.ph.be = phi i32* [ %0, %21 ], [ %0, %24 ], [ %1, %17 ]
  %.0.ph.be = phi i32 [ %15, %21 ], [ 510533005, %24 ], [ -1705958721, %17 ]
  br label %.outer
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #6 {
  %1 = alloca i32*, align 8
  %2 = alloca %struct.fastIO*, align 8
  %3 = alloca %struct.fastIO*, align 8
  %4 = alloca %struct.fastIO*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i1, align 1
  %10 = alloca i1, align 1
  %11 = load i32, i32* @x.9, align 4
  %12 = load i32, i32* @y.10, align 4
  %13 = add i32 %11, -1
  %14 = mul i32 %13, %11
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %10, align 1
  %17 = icmp slt i32 %12, 10
  store i1 %17, i1* %9, align 1
  br label %18

18:                                               ; preds = %.backedge, %0
  %.0 = phi i32 [ -614107568, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -614107568, label %19
    i32 855812274, label %22
    i32 238581544, label %40
    i32 -1823078339, label %41
    i32 -454574492, label %45
    i32 1317414097, label %50
    i32 1597698445, label %56
    i32 -379409868, label %63
    i32 354392942, label %65
    i32 -2047022665, label %66
    i32 -215713566, label %76
    i32 -1390136273, label %86
    i32 2032797125, label %87
    i32 -1515107488, label %88
  ]

.backedge:                                        ; preds = %18, %88, %87, %76, %66, %65, %63, %56, %50, %45, %41, %40, %22, %19
  %.0.be = phi i32 [ %.0, %18 ], [ -215713566, %88 ], [ 855812274, %87 ], [ %85, %76 ], [ %75, %66 ], [ -1823078339, %65 ], [ 1317414097, %63 ], [ -379409868, %56 ], [ %55, %50 ], [ 1317414097, %45 ], [ %44, %41 ], [ -1823078339, %40 ], [ %39, %22 ], [ %21, %19 ]
  br label %18

19:                                               ; preds = %18
  %.0..0..0. = load volatile i1, i1* %10, align 1
  %.0..0..0.1 = load volatile i1, i1* %9, align 1
  %20 = or i1 %.0..0..0., %.0..0..0.1
  %21 = select i1 %20, i32 855812274, i32 2032797125
  br label %.backedge

22:                                               ; preds = %18
  %23 = alloca i32, align 4
  store i32* %23, i32** %8, align 8
  %24 = alloca i32, align 4
  store i32* %24, i32** %7, align 8
  %25 = alloca i32, align 4
  store i32* %25, i32** %6, align 8
  %26 = alloca i32, align 4
  store i32* %26, i32** %5, align 8
  %27 = alloca %struct.fastIO, align 1
  store %struct.fastIO* %27, %struct.fastIO** %4, align 8
  %28 = alloca %struct.fastIO, align 1
  store %struct.fastIO* %28, %struct.fastIO** %3, align 8
  %29 = alloca %struct.fastIO, align 1
  store %struct.fastIO* %29, %struct.fastIO** %2, align 8
  %30 = alloca i32, align 4
  store i32* %30, i32** %1, align 8
  call void @_ZN6fastIOrsERi(%struct.fastIO* nonnull @fio, i32* nonnull dereferenceable(4) @q)
  %31 = load i32, i32* @x.9, align 4
  %32 = load i32, i32* @y.10, align 4
  %33 = add i32 %31, -1
  %34 = mul i32 %33, %31
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %37, %36
  %39 = select i1 %38, i32 238581544, i32 2032797125
  br label %.backedge

40:                                               ; preds = %18
  br label %.backedge

41:                                               ; preds = %18
  %42 = load i32, i32* @q, align 4
  %43 = add i32 %42, -1
  store i32 %43, i32* @q, align 4
  %.not20 = icmp eq i32 %42, 0
  %44 = select i1 %.not20, i32 -2047022665, i32 -454574492
  br label %.backedge

45:                                               ; preds = %18
  %.0..0..0.2 = load volatile i32*, i32** %8, align 8
  call void @_ZN6fastIOrsERi(%struct.fastIO* nonnull @fio, i32* dereferenceable(4) %.0..0..0.2)
  %.0..0..0.4 = load volatile i32*, i32** %7, align 8
  %.0..0..0.12 = load volatile %struct.fastIO*, %struct.fastIO** %4, align 8
  call void @_ZN6fastIOrsERi(%struct.fastIO* %.0..0..0.12, i32* dereferenceable(4) %.0..0..0.4)
  %.0..0..0.6 = load volatile i32*, i32** %6, align 8
  %.0..0..0.13 = load volatile %struct.fastIO*, %struct.fastIO** %3, align 8
  call void @_ZN6fastIOrsERi(%struct.fastIO* %.0..0..0.13, i32* dereferenceable(4) %.0..0..0.6)
  %.0..0..0.9 = load volatile i32*, i32** %5, align 8
  %.0..0..0.14 = load volatile %struct.fastIO*, %struct.fastIO** %2, align 8
  call void @_ZN6fastIOrsERi(%struct.fastIO* %.0..0..0.14, i32* dereferenceable(4) %.0..0..0.9)
  %.0..0..0.3 = load volatile i32*, i32** %8, align 8
  %46 = load i32, i32* %.0..0..0.3, align 4
  %.0..0..0.5 = load volatile i32*, i32** %7, align 8
  %47 = load i32, i32* %.0..0..0.5, align 4
  %.0..0..0.7 = load volatile i32*, i32** %6, align 8
  %48 = load i32, i32* %.0..0..0.7, align 4
  %.0..0..0.10 = load volatile i32*, i32** %5, align 8
  %49 = load i32, i32* %.0..0..0.10, align 4
  call void @_Z5solveiiiii(i32 %46, i32 %47, i32 %48, i32 %49, i32 0)
  %.0..0..0.15 = load volatile i32*, i32** %1, align 8
  store i32 0, i32* %.0..0..0.15, align 4
  br label %.backedge

50:                                               ; preds = %18
  %.0..0..0.16 = load volatile i32*, i32** %1, align 8
  %51 = load i32, i32* %.0..0..0.16, align 4
  %.0..0..0.11 = load volatile i32*, i32** %5, align 8
  %52 = load i32, i32* %.0..0..0.11, align 4
  %.0..0..0.8 = load volatile i32*, i32** %6, align 8
  %53 = load i32, i32* %.0..0..0.8, align 4
  %54 = sub i32 %52, %53
  %.not = icmp sgt i32 %51, %54
  %55 = select i1 %.not, i32 354392942, i32 1597698445
  br label %.backedge

56:                                               ; preds = %18
  %.0..0..0.17 = load volatile i32*, i32** %1, align 8
  %57 = load i32, i32* %.0..0..0.17, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [105 x i8], [105 x i8]* @ans, i64 0, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = sext i8 %60 to i32
  %62 = call i32 @putchar(i32 %61)
  br label %.backedge

63:                                               ; preds = %18
  %.0..0..0.18 = load volatile i32*, i32** %1, align 8
  %64 = load i32, i32* %.0..0..0.18, align 4
  %.neg = add i32 %64, 1
  %.0..0..0.19 = load volatile i32*, i32** %1, align 8
  store i32 %.neg, i32* %.0..0..0.19, align 4
  br label %.backedge

65:                                               ; preds = %18
  %putchar = call i32 @putchar(i32 10)
  br label %.backedge

66:                                               ; preds = %18
  %67 = load i32, i32* @x.9, align 4
  %68 = load i32, i32* @y.10, align 4
  %69 = add i32 %67, -1
  %70 = mul i32 %69, %67
  %71 = and i32 %70, 1
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %68, 10
  %74 = or i1 %73, %72
  %75 = select i1 %74, i32 -215713566, i32 -1515107488
  br label %.backedge

76:                                               ; preds = %18
  %77 = load i32, i32* @x.9, align 4
  %78 = load i32, i32* @y.10, align 4
  %79 = add i32 %77, -1
  %80 = mul i32 %79, %77
  %81 = and i32 %80, 1
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %83, %82
  %85 = select i1 %84, i32 -1390136273, i32 -1515107488
  br label %.backedge

86:                                               ; preds = %18
  ret i32 0

87:                                               ; preds = %18
  call void @_ZN6fastIOrsERi(%struct.fastIO* nonnull @fio, i32* nonnull dereferenceable(4) @q)
  br label %.backedge

88:                                               ; preds = %18
  br label %.backedge
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN6fastIOrsERi(%struct.fastIO* %0, i32* dereferenceable(4) %1) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  store i32 0, i32* %1, align 4
  %7 = tail call i32 @getchar()
  %8 = trunc i32 %7 to i8
  br label %9

9:                                                ; preds = %.backedge, %2
  %.036 = phi i8 [ %8, %2 ], [ %.036.be, %.backedge ]
  %.034 = phi i8 [ undef, %2 ], [ %.034.be, %.backedge ]
  %.032 = phi i32 [ 1166742962, %2 ], [ %.032.be, %.backedge ]
  %.030 = phi i1 [ undef, %2 ], [ %.030.be, %.backedge ]
  %.028 = phi i1 [ undef, %2 ], [ %.028.be, %.backedge ]
  %.0 = phi i1 [ undef, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.032, label %.backedge [
    i32 1166742962, label %10
    i32 -1081324702, label %12
    i32 -1969061884, label %22
    i32 -246648931, label %33
    i32 -1261620548, label %35
    i32 605987500, label %37
    i32 -494058473, label %47
    i32 1880620572, label %57
    i32 -592768650, label %58
    i32 -1352617525, label %68
    i32 1220434792, label %78
    i32 599460617, label %80
    i32 1791811250, label %83
    i32 -962636558, label %86
    i32 1927450709, label %96
    i32 1580362319, label %108
    i32 -1525399194, label %109
    i32 -1468235644, label %110
    i32 -1915351824, label %113
    i32 1065365393, label %123
    i32 781769564, label %134
    i32 -1437368446, label %135
    i32 114257122, label %137
    i32 -1816036181, label %147
    i32 -1846187290, label %162
    i32 246041460, label %163
    i32 -948364332, label %166
    i32 -1187527510, label %169
    i32 -1543074009, label %179
    i32 1301243762, label %189
    i32 107182518, label %190
    i32 2140679592, label %191
    i32 1767519879, label %192
    i32 -555499138, label %193
    i32 -214718508, label %196
    i32 -1996872429, label %197
    i32 1063185698, label %203
  ]

.backedge:                                        ; preds = %9, %203, %197, %196, %193, %192, %191, %190, %179, %169, %166, %163, %162, %147, %137, %135, %134, %123, %113, %110, %109, %108, %96, %86, %83, %80, %78, %68, %58, %57, %47, %37, %35, %33, %22, %12, %10
  %.036.be = phi i8 [ %.036, %9 ], [ %.036, %203 ], [ %202, %197 ], [ %.036, %196 ], [ %195, %193 ], [ %.036, %192 ], [ %.036, %191 ], [ %.036, %190 ], [ %.036, %179 ], [ %.036, %169 ], [ %.036, %166 ], [ %.036, %163 ], [ %.036, %162 ], [ %152, %147 ], [ %.036, %137 ], [ %.036, %135 ], [ %.036, %134 ], [ %.036, %123 ], [ %.036, %113 ], [ %.036, %110 ], [ %.036, %109 ], [ %.036, %108 ], [ %98, %96 ], [ %.036, %86 ], [ %.036, %83 ], [ %82, %80 ], [ %.036, %78 ], [ %.036, %68 ], [ %.036, %58 ], [ %.036, %57 ], [ %.036, %47 ], [ %.036, %37 ], [ %.036, %35 ], [ %.036, %33 ], [ %.036, %22 ], [ %.036, %12 ], [ %.036, %10 ]
  %.034.be = phi i8 [ %.034, %9 ], [ %.034, %203 ], [ %.034, %197 ], [ %.034, %196 ], [ 1, %193 ], [ %.034, %192 ], [ %.034, %191 ], [ %.034, %190 ], [ %.034, %179 ], [ %.034, %169 ], [ %.034, %166 ], [ %.034, %163 ], [ %.034, %162 ], [ %.034, %147 ], [ %.034, %137 ], [ %.034, %135 ], [ %.034, %134 ], [ %.034, %123 ], [ %.034, %113 ], [ %.034, %110 ], [ %.034, %109 ], [ %.034, %108 ], [ 1, %96 ], [ %.034, %86 ], [ 0, %83 ], [ %.034, %80 ], [ %.034, %78 ], [ %.034, %68 ], [ %.034, %58 ], [ %.034, %57 ], [ %.034, %47 ], [ %.034, %37 ], [ %.034, %35 ], [ %.034, %33 ], [ %.034, %22 ], [ %.034, %12 ], [ %.034, %10 ]
  %.032.be = phi i32 [ %.032, %9 ], [ -1543074009, %203 ], [ -1816036181, %197 ], [ 1065365393, %196 ], [ 1927450709, %193 ], [ -1352617525, %192 ], [ -494058473, %191 ], [ -1969061884, %190 ], [ %188, %179 ], [ %178, %169 ], [ -1187527510, %166 ], [ %165, %163 ], [ -1468235644, %162 ], [ %161, %147 ], [ %146, %137 ], [ %136, %135 ], [ -1437368446, %134 ], [ %133, %123 ], [ %122, %113 ], [ %112, %110 ], [ -1468235644, %109 ], [ -1525399194, %108 ], [ %107, %96 ], [ %95, %86 ], [ %85, %83 ], [ 1166742962, %80 ], [ %79, %78 ], [ %77, %68 ], [ %67, %58 ], [ -592768650, %57 ], [ %56, %47 ], [ %46, %37 ], [ 605987500, %35 ], [ %34, %33 ], [ %32, %22 ], [ %21, %12 ], [ %11, %10 ]
  %.030.be = phi i1 [ %.030, %9 ], [ %.030, %203 ], [ %.030, %197 ], [ %.030, %196 ], [ %.030, %193 ], [ %.030, %192 ], [ %.030, %191 ], [ %.030, %190 ], [ %.030, %179 ], [ %.030, %169 ], [ %.030, %166 ], [ %.030, %163 ], [ %.030, %162 ], [ %.030, %147 ], [ %.030, %137 ], [ %.030, %135 ], [ %.030, %134 ], [ %.030, %123 ], [ %.030, %113 ], [ %.030, %110 ], [ %.030, %109 ], [ %.030, %108 ], [ %.030, %96 ], [ %.030, %86 ], [ %.030, %83 ], [ %.030, %80 ], [ %.030, %78 ], [ %.030, %68 ], [ %.030, %58 ], [ %.030, %57 ], [ %.030, %47 ], [ %.030, %37 ], [ %36, %35 ], [ true, %33 ], [ %.030, %22 ], [ %.030, %12 ], [ %.030, %10 ]
  %.028.be = phi i1 [ %.028, %9 ], [ %.028, %203 ], [ %.028, %197 ], [ %.028, %196 ], [ %.028, %193 ], [ %.028, %192 ], [ %.028, %191 ], [ %.028, %190 ], [ %.028, %179 ], [ %.028, %169 ], [ %.028, %166 ], [ %.028, %163 ], [ %.028, %162 ], [ %.028, %147 ], [ %.028, %137 ], [ %.028, %135 ], [ %.028, %134 ], [ %.028, %123 ], [ %.028, %113 ], [ %.028, %110 ], [ %.028, %109 ], [ %.028, %108 ], [ %.028, %96 ], [ %.028, %86 ], [ %.028, %83 ], [ %.028, %80 ], [ %.028, %78 ], [ %.028, %68 ], [ %.028, %58 ], [ %.0..0..0.26, %57 ], [ %.028, %47 ], [ %.028, %37 ], [ %.028, %35 ], [ %.028, %33 ], [ %.028, %22 ], [ %.028, %12 ], [ false, %10 ]
  %.0.be = phi i1 [ %.0, %9 ], [ %.0, %203 ], [ %.0, %197 ], [ %.0, %196 ], [ %.0, %193 ], [ %.0, %192 ], [ %.0, %191 ], [ %.0, %190 ], [ %.0, %179 ], [ %.0, %169 ], [ %.0, %166 ], [ %.0, %163 ], [ %.0, %162 ], [ %.0, %147 ], [ %.0, %137 ], [ %.0, %135 ], [ %.0..0..0.25, %134 ], [ %.0, %123 ], [ %.0, %113 ], [ false, %110 ], [ %.0, %109 ], [ %.0, %108 ], [ %.0, %96 ], [ %.0, %86 ], [ %.0, %83 ], [ %.0, %80 ], [ %.0, %78 ], [ %.0, %68 ], [ %.0, %58 ], [ %.0, %57 ], [ %.0, %47 ], [ %.0, %37 ], [ %.0, %35 ], [ %.0, %33 ], [ %.0, %22 ], [ %.0, %12 ], [ %.0, %10 ]
  br label %9

10:                                               ; preds = %9
  %.not41 = icmp eq i8 %.036, 45
  %11 = select i1 %.not41, i32 -592768650, i32 -1081324702
  br label %.backedge

12:                                               ; preds = %9
  %13 = load i32, i32* @x.11, align 4
  %14 = load i32, i32* @y.12, align 4
  %15 = add i32 %13, -1
  %16 = mul i32 %15, %13
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %14, 10
  %20 = or i1 %19, %18
  %21 = select i1 %20, i32 -1969061884, i32 107182518
  br label %.backedge

22:                                               ; preds = %9
  %23 = icmp slt i8 %.036, 48
  store i1 %23, i1* %6, align 1
  %24 = load i32, i32* @x.11, align 4
  %25 = load i32, i32* @y.12, align 4
  %26 = add i32 %24, -1
  %27 = mul i32 %26, %24
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %30, %29
  %32 = select i1 %31, i32 -246648931, i32 107182518
  br label %.backedge

33:                                               ; preds = %9
  %.0..0..0.24 = load volatile i1, i1* %6, align 1
  %34 = select i1 %.0..0..0.24, i32 605987500, i32 -1261620548
  br label %.backedge

35:                                               ; preds = %9
  %36 = icmp sgt i8 %.036, 57
  br label %.backedge

37:                                               ; preds = %9
  store i1 %.030, i1* %4, align 1
  %38 = load i32, i32* @x.11, align 4
  %39 = load i32, i32* @y.12, align 4
  %40 = add i32 %38, -1
  %41 = mul i32 %40, %38
  %42 = and i32 %41, 1
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %39, 10
  %45 = or i1 %44, %43
  %46 = select i1 %45, i32 -494058473, i32 2140679592
  br label %.backedge

47:                                               ; preds = %9
  %48 = load i32, i32* @x.11, align 4
  %49 = load i32, i32* @y.12, align 4
  %50 = add i32 %48, -1
  %51 = mul i32 %50, %48
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %54, %53
  %56 = select i1 %55, i32 1880620572, i32 2140679592
  br label %.backedge

57:                                               ; preds = %9
  %.0..0..0.26 = load volatile i1, i1* %4, align 1
  br label %.backedge

58:                                               ; preds = %9
  store i1 %.028, i1* %3, align 1
  %59 = load i32, i32* @x.11, align 4
  %60 = load i32, i32* @y.12, align 4
  %61 = add i32 %59, -1
  %62 = mul i32 %61, %59
  %63 = and i32 %62, 1
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %60, 10
  %66 = or i1 %65, %64
  %67 = select i1 %66, i32 -1352617525, i32 1767519879
  br label %.backedge

68:                                               ; preds = %9
  %69 = load i32, i32* @x.11, align 4
  %70 = load i32, i32* @y.12, align 4
  %71 = add i32 %69, -1
  %72 = mul i32 %71, %69
  %73 = and i32 %72, 1
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %75, %74
  %77 = select i1 %76, i32 1220434792, i32 1767519879
  br label %.backedge

78:                                               ; preds = %9
  %.0..0..0.27 = load volatile i1, i1* %3, align 1
  %79 = select i1 %.0..0..0.27, i32 599460617, i32 1791811250
  br label %.backedge

80:                                               ; preds = %9
  %81 = tail call i32 @getchar()
  %82 = trunc i32 %81 to i8
  br label %.backedge

83:                                               ; preds = %9
  %84 = icmp eq i8 %.036, 45
  %85 = select i1 %84, i32 -962636558, i32 -1525399194
  br label %.backedge

86:                                               ; preds = %9
  %87 = load i32, i32* @x.11, align 4
  %88 = load i32, i32* @y.12, align 4
  %89 = add i32 %87, -1
  %90 = mul i32 %89, %87
  %91 = and i32 %90, 1
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %88, 10
  %94 = or i1 %93, %92
  %95 = select i1 %94, i32 1927450709, i32 -555499138
  br label %.backedge

96:                                               ; preds = %9
  %97 = tail call i32 @getchar()
  %98 = trunc i32 %97 to i8
  %99 = load i32, i32* @x.11, align 4
  %100 = load i32, i32* @y.12, align 4
  %101 = add i32 %99, -1
  %102 = mul i32 %101, %99
  %103 = and i32 %102, 1
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %105, %104
  %107 = select i1 %106, i32 1580362319, i32 -555499138
  br label %.backedge

108:                                              ; preds = %9
  br label %.backedge

109:                                              ; preds = %9
  br label %.backedge

110:                                              ; preds = %9
  %111 = icmp sgt i8 %.036, 47
  %112 = select i1 %111, i32 -1915351824, i32 -1437368446
  br label %.backedge

113:                                              ; preds = %9
  %114 = load i32, i32* @x.11, align 4
  %115 = load i32, i32* @y.12, align 4
  %116 = add i32 %114, -1
  %117 = mul i32 %116, %114
  %118 = and i32 %117, 1
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %120, %119
  %122 = select i1 %121, i32 1065365393, i32 -214718508
  br label %.backedge

123:                                              ; preds = %9
  %124 = icmp slt i8 %.036, 58
  store i1 %124, i1* %5, align 1
  %125 = load i32, i32* @x.11, align 4
  %126 = load i32, i32* @y.12, align 4
  %127 = add i32 %125, -1
  %128 = mul i32 %127, %125
  %129 = and i32 %128, 1
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %126, 10
  %132 = or i1 %131, %130
  %133 = select i1 %132, i32 781769564, i32 -214718508
  br label %.backedge

134:                                              ; preds = %9
  %.0..0..0.25 = load volatile i1, i1* %5, align 1
  br label %.backedge

135:                                              ; preds = %9
  %136 = select i1 %.0, i32 114257122, i32 246041460
  br label %.backedge

137:                                              ; preds = %9
  %138 = load i32, i32* @x.11, align 4
  %139 = load i32, i32* @y.12, align 4
  %140 = add i32 %138, -1
  %141 = mul i32 %140, %138
  %142 = and i32 %141, 1
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %139, 10
  %145 = or i1 %144, %143
  %146 = select i1 %145, i32 -1816036181, i32 -1996872429
  br label %.backedge

147:                                              ; preds = %9
  %148 = load i32, i32* %1, align 4
  %.neg40 = mul i32 %148, 10
  %149 = sext i8 %.036 to i32
  %.neg = add nsw i32 %149, -48
  %150 = add i32 %.neg, %.neg40
  store i32 %150, i32* %1, align 4
  %151 = tail call i32 @getchar()
  %152 = trunc i32 %151 to i8
  %153 = load i32, i32* @x.11, align 4
  %154 = load i32, i32* @y.12, align 4
  %155 = add i32 %153, -1
  %156 = mul i32 %155, %153
  %157 = and i32 %156, 1
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %154, 10
  %160 = or i1 %159, %158
  %161 = select i1 %160, i32 -1846187290, i32 -1996872429
  br label %.backedge

162:                                              ; preds = %9
  br label %.backedge

163:                                              ; preds = %9
  %164 = and i8 %.034, 1
  %.not = icmp eq i8 %164, 0
  %165 = select i1 %.not, i32 -1187527510, i32 -948364332
  br label %.backedge

166:                                              ; preds = %9
  %167 = load i32, i32* %1, align 4
  %168 = sub i32 0, %167
  store i32 %168, i32* %1, align 4
  br label %.backedge

169:                                              ; preds = %9
  %170 = load i32, i32* @x.11, align 4
  %171 = load i32, i32* @y.12, align 4
  %172 = add i32 %170, -1
  %173 = mul i32 %172, %170
  %174 = and i32 %173, 1
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %171, 10
  %177 = or i1 %176, %175
  %178 = select i1 %177, i32 -1543074009, i32 1063185698
  br label %.backedge

179:                                              ; preds = %9
  %180 = load i32, i32* @x.11, align 4
  %181 = load i32, i32* @y.12, align 4
  %182 = add i32 %180, -1
  %183 = mul i32 %182, %180
  %184 = and i32 %183, 1
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %181, 10
  %187 = or i1 %186, %185
  %188 = select i1 %187, i32 1301243762, i32 1063185698
  br label %.backedge

189:                                              ; preds = %9
  ret void

190:                                              ; preds = %9
  br label %.backedge

191:                                              ; preds = %9
  br label %.backedge

192:                                              ; preds = %9
  br label %.backedge

193:                                              ; preds = %9
  %194 = tail call i32 @getchar()
  %195 = trunc i32 %194 to i8
  br label %.backedge

196:                                              ; preds = %9
  br label %.backedge

197:                                              ; preds = %9
  %198 = load i32, i32* %1, align 4
  %.neg.neg = mul i32 %198, 10
  %199 = sext i8 %.036 to i32
  %.neg38 = add nsw i32 %199, -48
  %200 = add i32 %.neg38, %.neg.neg
  store i32 %200, i32* %1, align 4
  %201 = tail call i32 @getchar()
  %202 = trunc i32 %201 to i8
  br label %.backedge

203:                                              ; preds = %9
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare noundef i32 @getchar() local_unnamed_addr #7

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s744194558.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
