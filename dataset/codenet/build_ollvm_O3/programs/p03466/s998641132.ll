; ModuleID = 'build_ollvm/programs/p03466/s998641132.ll'
source_filename = "Project_CodeNet_C++1400/p03466/s998641132.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }

$_ZSt3maxIiERKT_S2_S2_ = comdat any

$_ZSt3minIiERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@A = global i32 0, align 4
@B = global i32 0, align 4
@C = global i32 0, align 4
@D = global i32 0, align 4
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s998641132.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 1341545029, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 1341545029, label %11
    i32 2054544168, label %14
    i32 -1810572049, label %25
    i32 357087073, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 2054544168, i32 357087073
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -1810572049, i32 357087073
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ 2054544168, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i32, align 4
  %8 = tail call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %9 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8
  %10 = getelementptr i8, i8* %9, i64 -24
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %12
  %14 = bitcast i8* %13 to %"class.std::basic_ios"*
  %15 = tail call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %14, %"class.std::basic_ostream"* null)
  %16 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) %7)
  br label %17

17:                                               ; preds = %.backedge, %0
  %.0104 = phi i32 [ undef, %0 ], [ %.0104.be, %.backedge ]
  %.0102 = phi i32 [ undef, %0 ], [ %.0102.be, %.backedge ]
  %.0100 = phi i32 [ undef, %0 ], [ %.0100.be, %.backedge ]
  %.098 = phi i32 [ undef, %0 ], [ %.098.be, %.backedge ]
  %.096 = phi i8 [ undef, %0 ], [ %.096.be, %.backedge ]
  %.094 = phi i64 [ undef, %0 ], [ %.094.be, %.backedge ]
  %.092 = phi i64 [ undef, %0 ], [ %.092.be, %.backedge ]
  %.090 = phi i32 [ undef, %0 ], [ %.090.be, %.backedge ]
  %.088 = phi i32 [ undef, %0 ], [ %.088.be, %.backedge ]
  %.086 = phi i32 [ undef, %0 ], [ %.086.be, %.backedge ]
  %.084 = phi i32 [ undef, %0 ], [ %.084.be, %.backedge ]
  %.082 = phi i32 [ undef, %0 ], [ %.082.be, %.backedge ]
  %.080 = phi i32 [ undef, %0 ], [ %.080.be, %.backedge ]
  %.078 = phi i8 [ undef, %0 ], [ %.078.be, %.backedge ]
  %.0 = phi i32 [ 341255393, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 341255393, label %18
    i32 -2087930832, label %23
    i32 645381050, label %36
    i32 -1643029085, label %46
    i32 -1598250337, label %57
    i32 1755426372, label %59
    i32 -756181181, label %69
    i32 -2009372001, label %74
    i32 685393744, label %75
    i32 -686804672, label %85
    i32 1875211480, label %111
    i32 -334415650, label %113
    i32 1858769714, label %123
    i32 -1990003145, label %139
    i32 -1917559127, label %141
    i32 -2067819393, label %142
    i32 -14607570, label %152
    i32 1172362663, label %164
    i32 -2075021055, label %166
    i32 1501583183, label %167
    i32 166366428, label %169
    i32 39198930, label %170
    i32 -1322170155, label %181
    i32 1646430843, label %184
    i32 -246564893, label %194
    i32 1306070374, label %205
    i32 85224884, label %207
    i32 4373723, label %213
    i32 1933425827, label %214
    i32 1416660334, label %224
    i32 1826181164, label %234
    i32 203979999, label %235
    i32 742514107, label %236
    i32 1571271256, label %241
    i32 -779065878, label %251
    i32 1538931725, label %267
    i32 1862255238, label %269
    i32 1222640452, label %270
    i32 -444795362, label %271
    i32 -251886716, label %272
    i32 219306510, label %275
    i32 182553583, label %285
    i32 -1257143967, label %295
    i32 -1025886857, label %296
    i32 -846049846, label %306
    i32 -213796272, label %316
    i32 1040857056, label %317
    i32 -1838497485, label %318
    i32 1562161663, label %319
    i32 155563657, label %329
    i32 287414284, label %340
    i32 -2071976532, label %341
    i32 813891103, label %343
    i32 -1325133739, label %345
    i32 1628166650, label %346
    i32 76524079, label %347
    i32 502193485, label %354
    i32 -1456208464, label %355
    i32 341420755, label %356
    i32 227042718, label %357
    i32 -1776802692, label %358
    i32 -1333376447, label %359
    i32 1569077682, label %360
    i32 1778357098, label %361
  ]

.backedge:                                        ; preds = %17, %361, %360, %359, %358, %357, %356, %355, %354, %347, %346, %343, %341, %340, %329, %319, %318, %317, %316, %306, %296, %295, %285, %275, %272, %271, %270, %269, %267, %251, %241, %236, %235, %234, %224, %214, %213, %207, %205, %194, %184, %181, %170, %169, %167, %166, %164, %152, %142, %141, %139, %123, %113, %111, %85, %75, %74, %69, %59, %57, %46, %36, %23, %18
  %.0104.be = phi i32 [ %.0104, %17 ], [ %.0104, %361 ], [ %.0104, %360 ], [ %.0104, %359 ], [ %.0104, %358 ], [ %.0104, %357 ], [ %.0104, %356 ], [ %.0104, %355 ], [ %.0104, %354 ], [ %.0104, %347 ], [ %.0104, %346 ], [ %.0104, %343 ], [ %.0104, %341 ], [ %.0104, %340 ], [ %.0104, %329 ], [ %.0104, %319 ], [ %.0104, %318 ], [ %.0104, %317 ], [ %.0104, %316 ], [ %.0104, %306 ], [ %.0104, %296 ], [ %.0104, %295 ], [ %.0104, %285 ], [ %.0104, %275 ], [ %.0104, %272 ], [ %.0104, %271 ], [ %.0104, %270 ], [ %.0104, %269 ], [ %.0104, %267 ], [ %.0104, %251 ], [ %.0104, %241 ], [ %.0104, %236 ], [ %.0104, %235 ], [ %.0104, %234 ], [ %.0104, %224 ], [ %.0104, %214 ], [ %.0104, %213 ], [ %.0104, %207 ], [ %.0104, %205 ], [ %.0104, %194 ], [ %.0104, %184 ], [ %.0104, %181 ], [ %.0104, %170 ], [ %.0104, %169 ], [ %.0104, %167 ], [ %.neg109, %166 ], [ %.0104, %164 ], [ %.0104, %152 ], [ %.0104, %142 ], [ %.0104, %141 ], [ %.0104, %139 ], [ %.0104, %123 ], [ %.0104, %113 ], [ %.0104, %111 ], [ %.0104, %85 ], [ %.0104, %75 ], [ %.0104, %74 ], [ %.0104, %69 ], [ %.0104, %59 ], [ %.0104, %57 ], [ %.0104, %46 ], [ %.0104, %36 ], [ 1, %23 ], [ %.0104, %18 ]
  %.0102.be = phi i32 [ %.0102, %17 ], [ %.0102, %361 ], [ %.0102, %360 ], [ %.0102, %359 ], [ %.0102, %358 ], [ %.0102, %357 ], [ %.0102, %356 ], [ %.0102, %355 ], [ %.0102, %354 ], [ %.0102, %347 ], [ %.0102, %346 ], [ %.0102, %343 ], [ %.0102, %341 ], [ %.0102, %340 ], [ %.0102, %329 ], [ %.0102, %319 ], [ %.0102, %318 ], [ %.0102, %317 ], [ %.0102, %316 ], [ %.0102, %306 ], [ %.0102, %296 ], [ %.0102, %295 ], [ %.0102, %285 ], [ %.0102, %275 ], [ %.0102, %272 ], [ %.0102, %271 ], [ %.0102, %270 ], [ %.0102, %269 ], [ %.0102, %267 ], [ %.0102, %251 ], [ %.0102, %241 ], [ %.0102, %236 ], [ %.0102, %235 ], [ %.0102, %234 ], [ %.0102, %224 ], [ %.0102, %214 ], [ %.0102, %213 ], [ %.0102, %207 ], [ %.0102, %205 ], [ %.0102, %194 ], [ %.0102, %184 ], [ %.0102, %181 ], [ %.0102, %170 ], [ %.0102, %169 ], [ %168, %167 ], [ %.0102, %166 ], [ %.0102, %164 ], [ %.0102, %152 ], [ %.0102, %142 ], [ %.0102, %141 ], [ %.0102, %139 ], [ %.0102, %123 ], [ %.0102, %113 ], [ %.0102, %111 ], [ %.0102, %85 ], [ %.0102, %75 ], [ %.0102, %74 ], [ %.0102, %69 ], [ %.0102, %59 ], [ %.0102, %57 ], [ %.0102, %46 ], [ %.0102, %36 ], [ %35, %23 ], [ %.0102, %18 ]
  %.0100.be = phi i32 [ %.0100, %17 ], [ %.0100, %361 ], [ %.0100, %360 ], [ %.0100, %359 ], [ %.0100, %358 ], [ %.0100, %357 ], [ %.0100, %356 ], [ %.0100, %355 ], [ %.0100, %354 ], [ %.0100, %347 ], [ %.0100, %346 ], [ %.0100, %343 ], [ %.0100, %341 ], [ %.0100, %340 ], [ %.0100, %329 ], [ %.0100, %319 ], [ %.0100, %318 ], [ %.0100, %317 ], [ %.0100, %316 ], [ %.0100, %306 ], [ %.0100, %296 ], [ %.0100, %295 ], [ %.0100, %285 ], [ %.0100, %275 ], [ %.0100, %272 ], [ %.0100, %271 ], [ %.0100, %270 ], [ %.0100, %269 ], [ %.0100, %267 ], [ %.0100, %251 ], [ %.0100, %241 ], [ %.0100, %236 ], [ %.0100, %235 ], [ %.0100, %234 ], [ %.0100, %224 ], [ %.0100, %214 ], [ %.0100, %213 ], [ %.0100, %207 ], [ %.0100, %205 ], [ %.0100, %194 ], [ %.0100, %184 ], [ %.0100, %181 ], [ %.0100, %170 ], [ %.0100, %169 ], [ %.0100, %167 ], [ %.098, %166 ], [ %.0100, %164 ], [ %.0100, %152 ], [ %.0100, %142 ], [ %.0100, %141 ], [ %.0100, %139 ], [ %.0100, %123 ], [ %.0100, %113 ], [ %.0100, %111 ], [ %.0100, %85 ], [ %.0100, %75 ], [ %.0100, %74 ], [ %.0100, %69 ], [ %.0100, %59 ], [ %.0100, %57 ], [ %.0100, %46 ], [ %.0100, %36 ], [ 0, %23 ], [ %.0100, %18 ]
  %.098.be = phi i32 [ %.098, %17 ], [ %.098, %361 ], [ %.098, %360 ], [ %.098, %359 ], [ %.098, %358 ], [ %.098, %357 ], [ %.098, %356 ], [ %.098, %355 ], [ %.098, %354 ], [ %.098, %347 ], [ %.098, %346 ], [ %.098, %343 ], [ %.098, %341 ], [ %.098, %340 ], [ %.098, %329 ], [ %.098, %319 ], [ %.098, %318 ], [ %.098, %317 ], [ %.098, %316 ], [ %.098, %306 ], [ %.098, %296 ], [ %.098, %295 ], [ %.098, %285 ], [ %.098, %275 ], [ %.098, %272 ], [ %.098, %271 ], [ %.098, %270 ], [ %.098, %269 ], [ %.098, %267 ], [ %.098, %251 ], [ %.098, %241 ], [ %.098, %236 ], [ %.098, %235 ], [ %.098, %234 ], [ %.098, %224 ], [ %.098, %214 ], [ %.098, %213 ], [ %.098, %207 ], [ %.098, %205 ], [ %.098, %194 ], [ %.098, %184 ], [ %.098, %181 ], [ %.098, %170 ], [ %.098, %169 ], [ %.098, %167 ], [ %.098, %166 ], [ %.098, %164 ], [ %.098, %152 ], [ %.098, %142 ], [ %.098, %141 ], [ %.098, %139 ], [ %.098, %123 ], [ %.098, %113 ], [ %.098, %111 ], [ %.098, %85 ], [ %.098, %75 ], [ %.098, %74 ], [ %.098, %69 ], [ %61, %59 ], [ %.098, %57 ], [ %.098, %46 ], [ %.098, %36 ], [ %.098, %23 ], [ %.098, %18 ]
  %.096.be = phi i8 [ %.096, %17 ], [ %.096, %361 ], [ %.096, %360 ], [ %.096, %359 ], [ %.096, %358 ], [ %.096, %357 ], [ %.096, %356 ], [ %.096, %355 ], [ %.096, %354 ], [ %.096, %347 ], [ %.096, %346 ], [ %.096, %343 ], [ %.096, %341 ], [ %.096, %340 ], [ %.096, %329 ], [ %.096, %319 ], [ %.096, %318 ], [ %.096, %317 ], [ %.096, %316 ], [ %.096, %306 ], [ %.096, %296 ], [ %.096, %295 ], [ %.096, %285 ], [ %.096, %275 ], [ %.096, %272 ], [ %.096, %271 ], [ %.096, %270 ], [ %.096, %269 ], [ %.096, %267 ], [ %.096, %251 ], [ %.096, %241 ], [ %.096, %236 ], [ %.096, %235 ], [ %.096, %234 ], [ %.096, %224 ], [ %.096, %214 ], [ %.096, %213 ], [ %.096, %207 ], [ %.096, %205 ], [ %.096, %194 ], [ %.096, %184 ], [ %.096, %181 ], [ %.096, %170 ], [ %.096, %169 ], [ %.096, %167 ], [ %.096, %166 ], [ %.096, %164 ], [ %.096, %152 ], [ %.096, %142 ], [ 0, %141 ], [ %.096, %139 ], [ %.096, %123 ], [ %.096, %113 ], [ %.096, %111 ], [ %.096, %85 ], [ %.096, %75 ], [ 0, %74 ], [ %.096, %69 ], [ 1, %59 ], [ %.096, %57 ], [ %.096, %46 ], [ %.096, %36 ], [ %.096, %23 ], [ %.096, %18 ]
  %.094.be = phi i64 [ %.094, %17 ], [ %.094, %361 ], [ %.094, %360 ], [ %.094, %359 ], [ %.094, %358 ], [ %.094, %357 ], [ %.094, %356 ], [ %.094, %355 ], [ %.094, %354 ], [ %.094, %347 ], [ %.094, %346 ], [ %.094, %343 ], [ %.094, %341 ], [ %.094, %340 ], [ %.094, %329 ], [ %.094, %319 ], [ %.094, %318 ], [ %.094, %317 ], [ %.094, %316 ], [ %.094, %306 ], [ %.094, %296 ], [ %.094, %295 ], [ %.094, %285 ], [ %.094, %275 ], [ %.094, %272 ], [ %.094, %271 ], [ %.094, %270 ], [ %.094, %269 ], [ %.094, %267 ], [ %.094, %251 ], [ %.094, %241 ], [ %.094, %236 ], [ %.094, %235 ], [ %.094, %234 ], [ %.094, %224 ], [ %.094, %214 ], [ %.094, %213 ], [ %.094, %207 ], [ %.094, %205 ], [ %.094, %194 ], [ %.094, %184 ], [ %.094, %181 ], [ %.094, %170 ], [ %.094, %169 ], [ %.094, %167 ], [ %.094, %166 ], [ %.094, %164 ], [ %.094, %152 ], [ %.094, %142 ], [ %.094, %141 ], [ %.094, %139 ], [ %.094, %123 ], [ %.094, %113 ], [ %.094, %111 ], [ %.094, %85 ], [ %.094, %75 ], [ %.094, %74 ], [ %.094, %69 ], [ %64, %59 ], [ %.094, %57 ], [ %.094, %46 ], [ %.094, %36 ], [ %.094, %23 ], [ %.094, %18 ]
  %.092.be = phi i64 [ %.092, %17 ], [ %.092, %361 ], [ %.092, %360 ], [ %.092, %359 ], [ %.092, %358 ], [ %.092, %357 ], [ %.092, %356 ], [ %.092, %355 ], [ %.092, %354 ], [ %.092, %347 ], [ %.092, %346 ], [ %.092, %343 ], [ %.092, %341 ], [ %.092, %340 ], [ %.092, %329 ], [ %.092, %319 ], [ %.092, %318 ], [ %.092, %317 ], [ %.092, %316 ], [ %.092, %306 ], [ %.092, %296 ], [ %.092, %295 ], [ %.092, %285 ], [ %.092, %275 ], [ %.092, %272 ], [ %.092, %271 ], [ %.092, %270 ], [ %.092, %269 ], [ %.092, %267 ], [ %.092, %251 ], [ %.092, %241 ], [ %.092, %236 ], [ %.092, %235 ], [ %.092, %234 ], [ %.092, %224 ], [ %.092, %214 ], [ %.092, %213 ], [ %.092, %207 ], [ %.092, %205 ], [ %.092, %194 ], [ %.092, %184 ], [ %.092, %181 ], [ %.092, %170 ], [ %.092, %169 ], [ %.092, %167 ], [ %.092, %166 ], [ %.092, %164 ], [ %.092, %152 ], [ %.092, %142 ], [ %.092, %141 ], [ %.092, %139 ], [ %.092, %123 ], [ %.092, %113 ], [ %.092, %111 ], [ %.092, %85 ], [ %.092, %75 ], [ %.092, %74 ], [ %.092, %69 ], [ %62, %59 ], [ %.092, %57 ], [ %.092, %46 ], [ %.092, %36 ], [ %.092, %23 ], [ %.092, %18 ]
  %.090.be = phi i32 [ %.090, %17 ], [ %.090, %361 ], [ %.090, %360 ], [ %.090, %359 ], [ %.090, %358 ], [ %.090, %357 ], [ %.090, %356 ], [ %.090, %355 ], [ %.090, %354 ], [ %353, %347 ], [ %.090, %346 ], [ %.090, %343 ], [ %.090, %341 ], [ %.090, %340 ], [ %.090, %329 ], [ %.090, %319 ], [ %.090, %318 ], [ %.090, %317 ], [ %.090, %316 ], [ %.090, %306 ], [ %.090, %296 ], [ %.090, %295 ], [ %.090, %285 ], [ %.090, %275 ], [ %.090, %272 ], [ %.090, %271 ], [ %.090, %270 ], [ %.090, %269 ], [ %.090, %267 ], [ %.090, %251 ], [ %.090, %241 ], [ %.090, %236 ], [ %.090, %235 ], [ %.090, %234 ], [ %.090, %224 ], [ %.090, %214 ], [ %.090, %213 ], [ %.090, %207 ], [ %.090, %205 ], [ %.090, %194 ], [ %.090, %184 ], [ %.090, %181 ], [ %.090, %170 ], [ %.090, %169 ], [ %.090, %167 ], [ %.090, %166 ], [ %.090, %164 ], [ %.090, %152 ], [ %.090, %142 ], [ %.090, %141 ], [ %.090, %139 ], [ %.090, %123 ], [ %.090, %113 ], [ %.090, %111 ], [ %91, %85 ], [ %.090, %75 ], [ %.090, %74 ], [ %.090, %69 ], [ %.090, %59 ], [ %.090, %57 ], [ %.090, %46 ], [ %.090, %36 ], [ %.090, %23 ], [ %.090, %18 ]
  %.088.be = phi i32 [ %.088, %17 ], [ %.088, %361 ], [ %.088, %360 ], [ %.088, %359 ], [ %.088, %358 ], [ %.088, %357 ], [ %.088, %356 ], [ %.088, %355 ], [ %.088, %354 ], [ %.088, %347 ], [ %.088, %346 ], [ %.088, %343 ], [ %.088, %341 ], [ %.088, %340 ], [ %.088, %329 ], [ %.088, %319 ], [ %.088, %318 ], [ %.088, %317 ], [ %.088, %316 ], [ %.088, %306 ], [ %.088, %296 ], [ %.088, %295 ], [ %.088, %285 ], [ %.088, %275 ], [ %.088, %272 ], [ %.088, %271 ], [ %.088, %270 ], [ %.088, %269 ], [ %.088, %267 ], [ %.088, %251 ], [ %.088, %241 ], [ %.088, %236 ], [ %.088, %235 ], [ %.088, %234 ], [ %.088, %224 ], [ %.088, %214 ], [ %.088, %213 ], [ %.088, %207 ], [ %.088, %205 ], [ %.088, %194 ], [ %.088, %184 ], [ %.088, %181 ], [ %171, %170 ], [ %.088, %169 ], [ %.088, %167 ], [ %.088, %166 ], [ %.088, %164 ], [ %.088, %152 ], [ %.088, %142 ], [ %.088, %141 ], [ %.088, %139 ], [ %.088, %123 ], [ %.088, %113 ], [ %.088, %111 ], [ %.088, %85 ], [ %.088, %75 ], [ %.088, %74 ], [ %.088, %69 ], [ %.088, %59 ], [ %.088, %57 ], [ %.088, %46 ], [ %.088, %36 ], [ %.088, %23 ], [ %.088, %18 ]
  %.086.be = phi i32 [ %.086, %17 ], [ %.086, %361 ], [ %.086, %360 ], [ %.086, %359 ], [ %.086, %358 ], [ %.086, %357 ], [ %.086, %356 ], [ %.086, %355 ], [ %.086, %354 ], [ %.086, %347 ], [ %.086, %346 ], [ %.086, %343 ], [ %.086, %341 ], [ %.086, %340 ], [ %.086, %329 ], [ %.086, %319 ], [ %.086, %318 ], [ %.086, %317 ], [ %.086, %316 ], [ %.086, %306 ], [ %.086, %296 ], [ %.086, %295 ], [ %.086, %285 ], [ %.086, %275 ], [ %.086, %272 ], [ %.086, %271 ], [ %.086, %270 ], [ %.086, %269 ], [ %.086, %267 ], [ %.086, %251 ], [ %.086, %241 ], [ %.086, %236 ], [ %.086, %235 ], [ %.086, %234 ], [ %.086, %224 ], [ %.086, %214 ], [ %.086, %213 ], [ %.086, %207 ], [ %.086, %205 ], [ %.086, %194 ], [ %.086, %184 ], [ %.086, %181 ], [ %.086, %170 ], [ %.086, %169 ], [ %.086, %167 ], [ %.086, %166 ], [ %.086, %164 ], [ %.086, %152 ], [ %.086, %142 ], [ %.086, %141 ], [ %.086, %139 ], [ %.086, %123 ], [ %.086, %113 ], [ %.086, %111 ], [ %.086, %85 ], [ %.086, %75 ], [ %.086, %74 ], [ %.086, %69 ], [ %.086, %59 ], [ %.086, %57 ], [ %.086, %46 ], [ %.086, %36 ], [ %33, %23 ], [ %.086, %18 ]
  %.084.be = phi i32 [ %.084, %17 ], [ %.084, %361 ], [ %.084, %360 ], [ %.084, %359 ], [ %.084, %358 ], [ %.084, %357 ], [ %.084, %356 ], [ %.084, %355 ], [ %.084, %354 ], [ %.084, %347 ], [ %.084, %346 ], [ %.084, %343 ], [ %.084, %341 ], [ %.084, %340 ], [ %.084, %329 ], [ %.084, %319 ], [ %.084, %318 ], [ %.084, %317 ], [ %.084, %316 ], [ %.084, %306 ], [ %.084, %296 ], [ %.084, %295 ], [ %.084, %285 ], [ %.084, %275 ], [ %.084, %272 ], [ %.084, %271 ], [ %.084, %270 ], [ %.084, %269 ], [ %.084, %267 ], [ %.084, %251 ], [ %.084, %241 ], [ %.084, %236 ], [ %.084, %235 ], [ %.084, %234 ], [ %.084, %224 ], [ %.084, %214 ], [ %.084, %213 ], [ %.084, %207 ], [ %.084, %205 ], [ %.084, %194 ], [ %.084, %184 ], [ %.084, %181 ], [ %178, %170 ], [ %.084, %169 ], [ %.084, %167 ], [ %.084, %166 ], [ %.084, %164 ], [ %.084, %152 ], [ %.084, %142 ], [ %.084, %141 ], [ %.084, %139 ], [ %.084, %123 ], [ %.084, %113 ], [ %.084, %111 ], [ %.084, %85 ], [ %.084, %75 ], [ %.084, %74 ], [ %.084, %69 ], [ %.084, %59 ], [ %.084, %57 ], [ %.084, %46 ], [ %.084, %36 ], [ %.084, %23 ], [ %.084, %18 ]
  %.082.be = phi i32 [ %.082, %17 ], [ %.082, %361 ], [ %.082, %360 ], [ %.082, %359 ], [ %.082, %358 ], [ %.082, %357 ], [ %.082, %356 ], [ %.082, %355 ], [ %.082, %354 ], [ %.082, %347 ], [ %.082, %346 ], [ %.082, %343 ], [ %.082, %341 ], [ %.082, %340 ], [ %.082, %329 ], [ %.082, %319 ], [ %.082, %318 ], [ %.082, %317 ], [ %.082, %316 ], [ %.082, %306 ], [ %.082, %296 ], [ %.082, %295 ], [ %.082, %285 ], [ %.082, %275 ], [ %.082, %272 ], [ %.082, %271 ], [ %.082, %270 ], [ %.082, %269 ], [ %.082, %267 ], [ %.082, %251 ], [ %.082, %241 ], [ %.082, %236 ], [ %.082, %235 ], [ %.082, %234 ], [ %.082, %224 ], [ %.082, %214 ], [ %.082, %213 ], [ %.082, %207 ], [ %.082, %205 ], [ %.082, %194 ], [ %.082, %184 ], [ %.082, %181 ], [ %179, %170 ], [ %.082, %169 ], [ %.082, %167 ], [ %.082, %166 ], [ %.082, %164 ], [ %.082, %152 ], [ %.082, %142 ], [ %.082, %141 ], [ %.082, %139 ], [ %.082, %123 ], [ %.082, %113 ], [ %.082, %111 ], [ %.082, %85 ], [ %.082, %75 ], [ %.082, %74 ], [ %.082, %69 ], [ %.082, %59 ], [ %.082, %57 ], [ %.082, %46 ], [ %.082, %36 ], [ %.082, %23 ], [ %.082, %18 ]
  %.080.be = phi i32 [ %.080, %17 ], [ %.080, %361 ], [ %.080, %360 ], [ %.080, %359 ], [ %.080, %358 ], [ %.080, %357 ], [ %.080, %356 ], [ %.080, %355 ], [ %.080, %354 ], [ %.080, %347 ], [ %.080, %346 ], [ %.080, %343 ], [ %342, %341 ], [ %.080, %340 ], [ %.080, %329 ], [ %.080, %319 ], [ %.080, %318 ], [ %.080, %317 ], [ %.080, %316 ], [ %.080, %306 ], [ %.080, %296 ], [ %.080, %295 ], [ %.080, %285 ], [ %.080, %275 ], [ %.080, %272 ], [ %.080, %271 ], [ %.080, %270 ], [ %.080, %269 ], [ %.080, %267 ], [ %.080, %251 ], [ %.080, %241 ], [ %.080, %236 ], [ %.080, %235 ], [ %.080, %234 ], [ %.080, %224 ], [ %.080, %214 ], [ %.080, %213 ], [ %.080, %207 ], [ %.080, %205 ], [ %.080, %194 ], [ %.080, %184 ], [ %.080, %181 ], [ %180, %170 ], [ %.080, %169 ], [ %.080, %167 ], [ %.080, %166 ], [ %.080, %164 ], [ %.080, %152 ], [ %.080, %142 ], [ %.080, %141 ], [ %.080, %139 ], [ %.080, %123 ], [ %.080, %113 ], [ %.080, %111 ], [ %.080, %85 ], [ %.080, %75 ], [ %.080, %74 ], [ %.080, %69 ], [ %.080, %59 ], [ %.080, %57 ], [ %.080, %46 ], [ %.080, %36 ], [ %.080, %23 ], [ %.080, %18 ]
  %.078.be = phi i8 [ %.078, %17 ], [ %.078, %361 ], [ 66, %360 ], [ 65, %359 ], [ %.078, %358 ], [ 65, %357 ], [ %.078, %356 ], [ %.078, %355 ], [ %.078, %354 ], [ %.078, %347 ], [ %.078, %346 ], [ %.078, %343 ], [ %.078, %341 ], [ %.078, %340 ], [ %.078, %329 ], [ %.078, %319 ], [ %.078, %318 ], [ %.078, %317 ], [ %.078, %316 ], [ 66, %306 ], [ %.078, %296 ], [ %.078, %295 ], [ 65, %285 ], [ %.078, %275 ], [ %.078, %272 ], [ %.078, %271 ], [ 66, %270 ], [ 65, %269 ], [ %.078, %267 ], [ %.078, %251 ], [ %.078, %241 ], [ %.078, %236 ], [ %.078, %235 ], [ %.078, %234 ], [ 65, %224 ], [ %.078, %214 ], [ 66, %213 ], [ %.078, %207 ], [ %.078, %205 ], [ %.078, %194 ], [ %.078, %184 ], [ %.078, %181 ], [ %.078, %170 ], [ %.078, %169 ], [ %.078, %167 ], [ %.078, %166 ], [ %.078, %164 ], [ %.078, %152 ], [ %.078, %142 ], [ %.078, %141 ], [ %.078, %139 ], [ %.078, %123 ], [ %.078, %113 ], [ %.078, %111 ], [ %.078, %85 ], [ %.078, %75 ], [ %.078, %74 ], [ %.078, %69 ], [ %.078, %59 ], [ %.078, %57 ], [ %.078, %46 ], [ %.078, %36 ], [ %.078, %23 ], [ %.078, %18 ]
  %.0.be = phi i32 [ %.0, %17 ], [ 155563657, %361 ], [ -846049846, %360 ], [ 182553583, %359 ], [ -779065878, %358 ], [ 1416660334, %357 ], [ -246564893, %356 ], [ -14607570, %355 ], [ 1858769714, %354 ], [ -686804672, %347 ], [ -1643029085, %346 ], [ 341255393, %343 ], [ -1322170155, %341 ], [ -2071976532, %340 ], [ %339, %329 ], [ %328, %319 ], [ 1562161663, %318 ], [ -1838497485, %317 ], [ 1040857056, %316 ], [ %315, %306 ], [ %305, %296 ], [ 1040857056, %295 ], [ %294, %285 ], [ %284, %275 ], [ %274, %272 ], [ -1838497485, %271 ], [ -444795362, %270 ], [ -444795362, %269 ], [ %268, %267 ], [ %266, %251 ], [ %250, %241 ], [ %240, %236 ], [ 1562161663, %235 ], [ 203979999, %234 ], [ %233, %224 ], [ %223, %214 ], [ 203979999, %213 ], [ %212, %207 ], [ %206, %205 ], [ %204, %194 ], [ %193, %184 ], [ %183, %181 ], [ -1322170155, %170 ], [ 645381050, %169 ], [ 166366428, %167 ], [ 166366428, %166 ], [ %165, %164 ], [ %163, %152 ], [ %151, %142 ], [ -2067819393, %141 ], [ %140, %139 ], [ %138, %123 ], [ %122, %113 ], [ %112, %111 ], [ %110, %85 ], [ %84, %75 ], [ 685393744, %74 ], [ %73, %69 ], [ %68, %59 ], [ %58, %57 ], [ %56, %46 ], [ %45, %36 ], [ 645381050, %23 ], [ %22, %18 ]
  br label %17

18:                                               ; preds = %17
  %19 = load i32, i32* %7, align 4
  %20 = add i32 %19, -1
  store i32 %20, i32* %7, align 4
  %21 = icmp sgt i32 %19, 0
  %22 = select i1 %21, i32 -2087930832, i32 -1325133739
  br label %.backedge

23:                                               ; preds = %17
  %24 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull @_ZSt3cin, i32* nonnull dereferenceable(4) @A)
  %25 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %24, i32* nonnull dereferenceable(4) @B)
  %26 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %25, i32* nonnull dereferenceable(4) @C)
  %27 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* nonnull %26, i32* nonnull dereferenceable(4) @D)
  %28 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* nonnull dereferenceable(4) @A, i32* nonnull dereferenceable(4) @B)
  %29 = load i32, i32* %28, align 4
  %30 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) @A, i32* nonnull dereferenceable(4) @B)
  %31 = load i32, i32* %30, align 4
  %32 = add i32 %31, 1
  %33 = call fastcc i32 @"_ZZ4mainENK3$_0clEii"(i32 %29, i32 %32)
  %34 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* nonnull dereferenceable(4) @A, i32* nonnull dereferenceable(4) @B)
  %35 = load i32, i32* %34, align 4
  br label %.backedge

36:                                               ; preds = %17
  %37 = load i32, i32* @x.1, align 4
  %38 = load i32, i32* @y.2, align 4
  %39 = add i32 %37, -1
  %40 = mul i32 %39, %37
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %38, 10
  %44 = or i1 %43, %42
  %45 = select i1 %44, i32 -1643029085, i32 1628166650
  br label %.backedge

46:                                               ; preds = %17
  %47 = icmp sle i32 %.0104, %.0102
  store i1 %47, i1* %6, align 1
  %48 = load i32, i32* @x.1, align 4
  %49 = load i32, i32* @y.2, align 4
  %50 = add i32 %48, -1
  %51 = mul i32 %50, %48
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %54, %53
  %56 = select i1 %55, i32 -1598250337, i32 1628166650
  br label %.backedge

57:                                               ; preds = %17
  %.0..0..0. = load volatile i1, i1* %6, align 1
  %58 = select i1 %.0..0..0., i32 1755426372, i32 39198930
  br label %.backedge

59:                                               ; preds = %17
  %60 = add i32 %.0102, %.0104
  %61 = ashr i32 %60, 1
  %62 = sext i32 %61 to i64
  %63 = sext i32 %.086 to i64
  %64 = mul nsw i64 %63, %62
  %65 = load i32, i32* @A, align 4
  %66 = sext i32 %65 to i64
  %67 = icmp sgt i64 %64, %66
  %68 = select i1 %67, i32 -2009372001, i32 -756181181
  br label %.backedge

69:                                               ; preds = %17
  %70 = load i32, i32* @B, align 4
  %71 = sext i32 %70 to i64
  %72 = icmp sgt i64 %.092, %71
  %73 = select i1 %72, i32 -2009372001, i32 685393744
  br label %.backedge

74:                                               ; preds = %17
  br label %.backedge

75:                                               ; preds = %17
  %76 = load i32, i32* @x.1, align 4
  %77 = load i32, i32* @y.2, align 4
  %78 = add i32 %76, -1
  %79 = mul i32 %78, %76
  %80 = and i32 %79, 1
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %82, %81
  %84 = select i1 %83, i32 -686804672, i32 76524079
  br label %.backedge

85:                                               ; preds = %17
  %86 = load i32, i32* @A, align 4
  %87 = trunc i64 %.094 to i32
  %88 = sub i32 616021742, %87
  %89 = add i32 %88, %86
  %90 = add i32 %89, -616021742
  %91 = call fastcc i32 @"_ZZ4mainENK3$_0clEii"(i32 %90, i32 %.086)
  %92 = load i32, i32* @B, align 4
  %93 = trunc i64 %.092 to i32
  %94 = sub i32 -58281226, %93
  %95 = add i32 %94, %92
  %96 = add i32 %95, 58281226
  %97 = call fastcc i32 @"_ZZ4mainENK3$_0clEii"(i32 %96, i32 %.086)
  %98 = sext i32 %86 to i64
  %99 = sub i64 %98, %.094
  %100 = sext i32 %97 to i64
  %101 = icmp slt i64 %99, %100
  store i1 %101, i1* %5, align 1
  %102 = load i32, i32* @x.1, align 4
  %103 = load i32, i32* @y.2, align 4
  %104 = add i32 %102, -1
  %105 = mul i32 %104, %102
  %106 = and i32 %105, 1
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %103, 10
  %109 = or i1 %108, %107
  %110 = select i1 %109, i32 1875211480, i32 76524079
  br label %.backedge

111:                                              ; preds = %17
  %.0..0..0.73 = load volatile i1, i1* %5, align 1
  %112 = select i1 %.0..0..0.73, i32 -1917559127, i32 -334415650
  br label %.backedge

113:                                              ; preds = %17
  %114 = load i32, i32* @x.1, align 4
  %115 = load i32, i32* @y.2, align 4
  %116 = add i32 %114, -1
  %117 = mul i32 %116, %114
  %118 = and i32 %117, 1
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %115, 10
  %121 = or i1 %120, %119
  %122 = select i1 %121, i32 1858769714, i32 502193485
  br label %.backedge

123:                                              ; preds = %17
  %124 = load i32, i32* @B, align 4
  %125 = sext i32 %124 to i64
  %126 = sub i64 %125, %.092
  %127 = add i32 %.090, -1
  %128 = sext i32 %127 to i64
  %129 = icmp slt i64 %126, %128
  store i1 %129, i1* %4, align 1
  %130 = load i32, i32* @x.1, align 4
  %131 = load i32, i32* @y.2, align 4
  %132 = add i32 %130, -1
  %133 = mul i32 %132, %130
  %134 = and i32 %133, 1
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %131, 10
  %137 = or i1 %136, %135
  %138 = select i1 %137, i32 -1990003145, i32 502193485
  br label %.backedge

139:                                              ; preds = %17
  %.0..0..0.74 = load volatile i1, i1* %4, align 1
  %140 = select i1 %.0..0..0.74, i32 -1917559127, i32 -2067819393
  br label %.backedge

141:                                              ; preds = %17
  br label %.backedge

142:                                              ; preds = %17
  %143 = load i32, i32* @x.1, align 4
  %144 = load i32, i32* @y.2, align 4
  %145 = add i32 %143, -1
  %146 = mul i32 %145, %143
  %147 = and i32 %146, 1
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %144, 10
  %150 = or i1 %149, %148
  %151 = select i1 %150, i32 -14607570, i32 -1456208464
  br label %.backedge

152:                                              ; preds = %17
  %153 = and i8 %.096, 1
  %154 = icmp ne i8 %153, 0
  store i1 %154, i1* %3, align 1
  %155 = load i32, i32* @x.1, align 4
  %156 = load i32, i32* @y.2, align 4
  %157 = add i32 %155, -1
  %158 = mul i32 %157, %155
  %159 = and i32 %158, 1
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %156, 10
  %162 = or i1 %161, %160
  %163 = select i1 %162, i32 1172362663, i32 -1456208464
  br label %.backedge

164:                                              ; preds = %17
  %.0..0..0.75 = load volatile i1, i1* %3, align 1
  %165 = select i1 %.0..0..0.75, i32 -2075021055, i32 1501583183
  br label %.backedge

166:                                              ; preds = %17
  %.neg109 = add i32 %.098, 1
  br label %.backedge

167:                                              ; preds = %17
  %168 = add i32 %.098, -1
  br label %.backedge

169:                                              ; preds = %17
  br label %.backedge

170:                                              ; preds = %17
  %.neg = add i32 %.086, 1
  %171 = mul nsw i32 %.neg, %.0100
  %172 = load i32, i32* @B, align 4
  %173 = sub i32 %172, %.0100
  %174 = call fastcc i32 @"_ZZ4mainENK3$_0clEii"(i32 %173, i32 %.086)
  %.neg117 = sub i32 1, %174
  %175 = load i32, i32* @A, align 4
  %176 = mul nsw i32 %.086, %.0100
  %177 = add i32 %176, %174
  %.neg108 = sub i32 1, %177
  %178 = add i32 %.neg108, %175
  %.neg118 = mul i32 %.neg117, %.086
  %179 = add i32 %173, %.neg118
  %180 = load i32, i32* @C, align 4
  br label %.backedge

181:                                              ; preds = %17
  %182 = load i32, i32* @D, align 4
  %.not106 = icmp sgt i32 %.080, %182
  %183 = select i1 %.not106, i32 813891103, i32 1646430843
  br label %.backedge

184:                                              ; preds = %17
  %185 = load i32, i32* @x.1, align 4
  %186 = load i32, i32* @y.2, align 4
  %187 = add i32 %185, -1
  %188 = mul i32 %187, %185
  %189 = and i32 %188, 1
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %191, %190
  %193 = select i1 %192, i32 -246564893, i32 341420755
  br label %.backedge

194:                                              ; preds = %17
  %195 = icmp sle i32 %.080, %.088
  store i1 %195, i1* %2, align 1
  %196 = load i32, i32* @x.1, align 4
  %197 = load i32, i32* @y.2, align 4
  %198 = add i32 %196, -1
  %199 = mul i32 %198, %196
  %200 = and i32 %199, 1
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %197, 10
  %203 = or i1 %202, %201
  %204 = select i1 %203, i32 1306070374, i32 341420755
  br label %.backedge

205:                                              ; preds = %17
  %.0..0..0.76 = load volatile i1, i1* %2, align 1
  %206 = select i1 %.0..0..0.76, i32 85224884, i32 742514107
  br label %.backedge

207:                                              ; preds = %17
  %208 = add i32 %.080, -1
  %209 = add i32 %.086, 1
  %210 = srem i32 %208, %209
  %211 = icmp eq i32 %210, %.086
  %212 = select i1 %211, i32 4373723, i32 1933425827
  br label %.backedge

213:                                              ; preds = %17
  br label %.backedge

214:                                              ; preds = %17
  %215 = load i32, i32* @x.1, align 4
  %216 = load i32, i32* @y.2, align 4
  %217 = add i32 %215, -1
  %218 = mul i32 %217, %215
  %219 = and i32 %218, 1
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %216, 10
  %222 = or i1 %221, %220
  %223 = select i1 %222, i32 1416660334, i32 227042718
  br label %.backedge

224:                                              ; preds = %17
  %225 = load i32, i32* @x.1, align 4
  %226 = load i32, i32* @y.2, align 4
  %227 = add i32 %225, -1
  %228 = mul i32 %227, %225
  %229 = and i32 %228, 1
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %226, 10
  %232 = or i1 %231, %230
  %233 = select i1 %232, i32 1826181164, i32 227042718
  br label %.backedge

234:                                              ; preds = %17
  br label %.backedge

235:                                              ; preds = %17
  br label %.backedge

236:                                              ; preds = %17
  %237 = add i32 %.084, %.088
  %238 = add i32 %237, %.082
  %239 = icmp sgt i32 %.080, %238
  %240 = select i1 %239, i32 1571271256, i32 -251886716
  br label %.backedge

241:                                              ; preds = %17
  %242 = load i32, i32* @x.1, align 4
  %243 = load i32, i32* @y.2, align 4
  %244 = add i32 %242, -1
  %245 = mul i32 %244, %242
  %246 = and i32 %245, 1
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %243, 10
  %249 = or i1 %248, %247
  %250 = select i1 %249, i32 -779065878, i32 -1776802692
  br label %.backedge

251:                                              ; preds = %17
  %.neg111 = xor i32 %.088, -1
  %252 = add i32 %.084, %.082
  %253 = sub i32 %.neg111, %252
  %254 = add i32 %253, %.080
  %255 = add i32 %.086, 1
  %256 = srem i32 %254, %255
  %257 = icmp eq i32 %256, 0
  store i1 %257, i1* %1, align 1
  %258 = load i32, i32* @x.1, align 4
  %259 = load i32, i32* @y.2, align 4
  %260 = add i32 %258, -1
  %261 = mul i32 %260, %258
  %262 = and i32 %261, 1
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %259, 10
  %265 = or i1 %264, %263
  %266 = select i1 %265, i32 1538931725, i32 -1776802692
  br label %.backedge

267:                                              ; preds = %17
  %.0..0..0.77 = load volatile i1, i1* %1, align 1
  %268 = select i1 %.0..0..0.77, i32 1862255238, i32 1222640452
  br label %.backedge

269:                                              ; preds = %17
  br label %.backedge

270:                                              ; preds = %17
  br label %.backedge

271:                                              ; preds = %17
  br label %.backedge

272:                                              ; preds = %17
  %273 = add i32 %.084, %.088
  %.not = icmp sgt i32 %.080, %273
  %274 = select i1 %.not, i32 -1025886857, i32 219306510
  br label %.backedge

275:                                              ; preds = %17
  %276 = load i32, i32* @x.1, align 4
  %277 = load i32, i32* @y.2, align 4
  %278 = add i32 %276, -1
  %279 = mul i32 %278, %276
  %280 = and i32 %279, 1
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %277, 10
  %283 = or i1 %282, %281
  %284 = select i1 %283, i32 182553583, i32 -1333376447
  br label %.backedge

285:                                              ; preds = %17
  %286 = load i32, i32* @x.1, align 4
  %287 = load i32, i32* @y.2, align 4
  %288 = add i32 %286, -1
  %289 = mul i32 %288, %286
  %290 = and i32 %289, 1
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %287, 10
  %293 = or i1 %292, %291
  %294 = select i1 %293, i32 -1257143967, i32 -1333376447
  br label %.backedge

295:                                              ; preds = %17
  br label %.backedge

296:                                              ; preds = %17
  %297 = load i32, i32* @x.1, align 4
  %298 = load i32, i32* @y.2, align 4
  %299 = add i32 %297, -1
  %300 = mul i32 %299, %297
  %301 = and i32 %300, 1
  %302 = icmp eq i32 %301, 0
  %303 = icmp slt i32 %298, 10
  %304 = or i1 %303, %302
  %305 = select i1 %304, i32 -846049846, i32 1569077682
  br label %.backedge

306:                                              ; preds = %17
  %307 = load i32, i32* @x.1, align 4
  %308 = load i32, i32* @y.2, align 4
  %309 = add i32 %307, -1
  %310 = mul i32 %309, %307
  %311 = and i32 %310, 1
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %308, 10
  %314 = or i1 %313, %312
  %315 = select i1 %314, i32 -213796272, i32 1569077682
  br label %.backedge

316:                                              ; preds = %17
  br label %.backedge

317:                                              ; preds = %17
  br label %.backedge

318:                                              ; preds = %17
  br label %.backedge

319:                                              ; preds = %17
  %320 = load i32, i32* @x.1, align 4
  %321 = load i32, i32* @y.2, align 4
  %322 = add i32 %320, -1
  %323 = mul i32 %322, %320
  %324 = and i32 %323, 1
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %321, 10
  %327 = or i1 %326, %325
  %328 = select i1 %327, i32 155563657, i32 1778357098
  br label %.backedge

329:                                              ; preds = %17
  %330 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext %.078)
  %331 = load i32, i32* @x.1, align 4
  %332 = load i32, i32* @y.2, align 4
  %333 = add i32 %331, -1
  %334 = mul i32 %333, %331
  %335 = and i32 %334, 1
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %332, 10
  %338 = or i1 %337, %336
  %339 = select i1 %338, i32 287414284, i32 1778357098
  br label %.backedge

340:                                              ; preds = %17
  br label %.backedge

341:                                              ; preds = %17
  %342 = add i32 %.080, 1
  br label %.backedge

343:                                              ; preds = %17
  %344 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext 10)
  br label %.backedge

345:                                              ; preds = %17
  ret i32 0

346:                                              ; preds = %17
  br label %.backedge

347:                                              ; preds = %17
  %348 = load i32, i32* @A, align 4
  %349 = trunc i64 %.094 to i32
  %350 = sub i32 -234172524, %349
  %351 = add i32 %350, %348
  %352 = add i32 %351, 234172524
  %353 = call fastcc i32 @"_ZZ4mainENK3$_0clEii"(i32 %352, i32 %.086)
  br label %.backedge

354:                                              ; preds = %17
  br label %.backedge

355:                                              ; preds = %17
  br label %.backedge

356:                                              ; preds = %17
  br label %.backedge

357:                                              ; preds = %17
  br label %.backedge

358:                                              ; preds = %17
  br label %.backedge

359:                                              ; preds = %17
  br label %.backedge

360:                                              ; preds = %17
  br label %.backedge

361:                                              ; preds = %17
  %362 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8 signext %.078)
  br label %.backedge
}

declare zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) local_unnamed_addr #1

declare %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"*, %"class.std::basic_ostream"*) local_unnamed_addr #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind readnone uwtable willreturn
define internal fastcc i32 @"_ZZ4mainENK3$_0clEii"(i32 %0, i32 %1) unnamed_addr #5 align 2 {
  %3 = add i32 %0, -1
  %4 = add i32 %3, %1
  %5 = sdiv i32 %4, %1
  ret i32 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #6 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = load i32, i32* %0, align 4
  store i32 %5, i32* %4, align 4
  %6 = load i32, i32* %1, align 4
  store i32 %6, i32* %3, align 4
  %7 = load i32, i32* @x.5, align 4
  %8 = load i32, i32* @y.6, align 4
  %9 = add i32 %7, -1
  %10 = mul i32 %9, %7
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %13, %12
  %15 = select i1 %14, i32 250714847, i32 -705836886
  %16 = select i1 %14, i32 -1856221761, i32 -705836886
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.08.ph = phi i32* [ undef, %2 ], [ %.08.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ 1368534127, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %.outer10

.outer10:                                         ; preds = %.outer10.backedge, %.outer
  %.0.ph11 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph11.be, %.outer10.backedge ]
  br label %17

17:                                               ; preds = %.outer10, %17
  switch i32 %.0.ph11, label %17 [
    i32 1368534127, label %18
    i32 -974256923, label %.outer10.backedge
    i32 -1856221761, label %.outer.backedge
    i32 250714847, label %21
    i32 -1073391630, label %22
    i32 607800301, label %23
    i32 -705836886, label %24
  ]

18:                                               ; preds = %17
  %.0..0..0.6 = load volatile i32, i32* %4, align 4
  %.0..0..0.7 = load volatile i32, i32* %3, align 4
  %19 = icmp slt i32 %.0..0..0.6, %.0..0..0.7
  %20 = select i1 %19, i32 -974256923, i32 -1073391630
  br label %.outer10.backedge

21:                                               ; preds = %17
  br label %.outer10.backedge

.outer10.backedge:                                ; preds = %17, %21, %18
  %.0.ph11.be = phi i32 [ %20, %18 ], [ 607800301, %21 ], [ %16, %17 ]
  br label %.outer10

22:                                               ; preds = %17
  br label %.outer.backedge

23:                                               ; preds = %17
  ret i32* %.08.ph

24:                                               ; preds = %17
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %17, %24, %22
  %.08.ph.be = phi i32* [ %0, %22 ], [ %1, %24 ], [ %1, %17 ]
  %.0.ph.be = phi i32 [ 607800301, %22 ], [ -1856221761, %24 ], [ %15, %17 ]
  br label %.outer
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #6 comdat {
  %3 = alloca i1, align 1
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i1, align 1
  %8 = alloca i1, align 1
  %9 = load i32, i32* @x.7, align 4
  %10 = load i32, i32* @y.8, align 4
  %11 = add i32 %9, -1
  %12 = mul i32 %11, %9
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %8, align 1
  %15 = icmp slt i32 %10, 10
  store i1 %15, i1* %7, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.0.ph = phi i32 [ 1644420131, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %16

16:                                               ; preds = %.outer, %16
  switch i32 %.0.ph, label %16 [
    i32 1644420131, label %17
    i32 2131339145, label %20
    i32 770856677, label %38
    i32 2040518297, label %40
    i32 1564178524, label %42
    i32 -1098752081, label %44
    i32 -811383329, label %.outer.backedge
  ]

17:                                               ; preds = %16
  %.0..0..0. = load volatile i1, i1* %8, align 1
  %.0..0..0.1 = load volatile i1, i1* %7, align 1
  %18 = or i1 %.0..0..0., %.0..0..0.1
  %19 = select i1 %18, i32 2131339145, i32 -811383329
  br label %.outer.backedge

20:                                               ; preds = %16
  %21 = alloca i32*, align 8
  store i32** %21, i32*** %6, align 8
  %22 = alloca i32*, align 8
  store i32** %22, i32*** %5, align 8
  %23 = alloca i32*, align 8
  store i32** %23, i32*** %4, align 8
  %.0..0..0.5 = load volatile i32**, i32*** %5, align 8
  store i32* %0, i32** %.0..0..0.5, align 8
  %.0..0..0.8 = load volatile i32**, i32*** %4, align 8
  store i32* %1, i32** %.0..0..0.8, align 8
  %.0..0..0.9 = load volatile i32**, i32*** %4, align 8
  %24 = load i32*, i32** %.0..0..0.9, align 8
  %25 = load i32, i32* %24, align 4
  %.0..0..0.6 = load volatile i32**, i32*** %5, align 8
  %26 = load i32*, i32** %.0..0..0.6, align 8
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %25, %27
  store i1 %28, i1* %3, align 1
  %29 = load i32, i32* @x.7, align 4
  %30 = load i32, i32* @y.8, align 4
  %31 = add i32 %29, -1
  %32 = mul i32 %31, %29
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %35, %34
  %37 = select i1 %36, i32 770856677, i32 -811383329
  br label %.outer.backedge

38:                                               ; preds = %16
  %.0..0..0.11 = load volatile i1, i1* %3, align 1
  %39 = select i1 %.0..0..0.11, i32 2040518297, i32 1564178524
  br label %.outer.backedge

40:                                               ; preds = %16
  %.0..0..0.10 = load volatile i32**, i32*** %4, align 8
  %41 = load i32*, i32** %.0..0..0.10, align 8
  %.0..0..0.2 = load volatile i32**, i32*** %6, align 8
  store i32* %41, i32** %.0..0..0.2, align 8
  br label %.outer.backedge

42:                                               ; preds = %16
  %.0..0..0.7 = load volatile i32**, i32*** %5, align 8
  %43 = load i32*, i32** %.0..0..0.7, align 8
  %.0..0..0.3 = load volatile i32**, i32*** %6, align 8
  store i32* %43, i32** %.0..0..0.3, align 8
  br label %.outer.backedge

44:                                               ; preds = %16
  %.0..0..0.4 = load volatile i32**, i32*** %6, align 8
  %45 = load i32*, i32** %.0..0..0.4, align 8
  ret i32* %45

.outer.backedge:                                  ; preds = %16, %42, %40, %38, %20, %17
  %.0.ph.be = phi i32 [ %19, %17 ], [ %37, %20 ], [ %39, %38 ], [ -1098752081, %40 ], [ -1098752081, %42 ], [ 2131339145, %16 ]
  br label %.outer
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(%"class.std::basic_ostream"* dereferenceable(272), i8 signext) local_unnamed_addr #1

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s998641132.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.9, align 4
  %4 = load i32, i32* @y.10, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 215716016, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 215716016, label %11
    i32 507227908, label %14
    i32 751143971, label %24
    i32 -500424015, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 507227908, i32 -500424015
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.9, align 4
  %16 = load i32, i32* @y.10, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 751143971, i32 -500424015
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ 507227908, %25 ]
  br label %.outer
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind readnone uwtable willreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
