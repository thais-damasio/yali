; ModuleID = 'build_ollvm/programs/p03466/s287890429.ll'
source_filename = "Project_CodeNet_C++1400/p03466/s287890429.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }

$_ZSt3maxIxERKT_S2_S2_ = comdat any

$_ZSt3minIxERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@.str = private unnamed_addr constant [17 x i8] c"%lld%lld%lld%lld\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s287890429.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0
@x.11 = common local_unnamed_addr global i32 0
@y.12 = common local_unnamed_addr global i32 0
@x.13 = common local_unnamed_addr global i32 0
@y.14 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind uwtable
define void @_Z5solvev() local_unnamed_addr #4 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i64* nonnull %8, i64* nonnull %9, i64* nonnull %10, i64* nonnull %11)
  %15 = load i64, i64* %10, align 8
  %16 = add i64 %15, -1
  store i64 %16, i64* %10, align 8
  store i64 1, i64* %12, align 8
  %17 = load i64, i64* %8, align 8
  %18 = load i64, i64* %9, align 8
  %19 = add i64 %18, %17
  %20 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %8, i64* nonnull dereferenceable(8) %9)
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 1
  %23 = sdiv i64 %19, %22
  store i64 %23, i64* %13, align 8
  %24 = call dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %12, i64* nonnull dereferenceable(8) %13)
  %25 = load i64, i64* %24, align 8
  store i64 %25, i64* %12, align 8
  %26 = load i64, i64* %8, align 8
  %27 = add i64 %26, 1
  br label %28

28:                                               ; preds = %.backedge, %0
  %.094 = phi i64 [ undef, %0 ], [ %.094.be, %.backedge ]
  %.092 = phi i64 [ undef, %0 ], [ %.092.be, %.backedge ]
  %.090 = phi i64 [ undef, %0 ], [ %.090.be, %.backedge ]
  %.088 = phi i64 [ undef, %0 ], [ %.088.be, %.backedge ]
  %.086 = phi i64 [ undef, %0 ], [ %.086.be, %.backedge ]
  %.084 = phi i64 [ undef, %0 ], [ %.084.be, %.backedge ]
  %.082 = phi i64 [ %27, %0 ], [ %.082.be, %.backedge ]
  %.080 = phi i64 [ 0, %0 ], [ %.080.be, %.backedge ]
  %.078 = phi i32 [ -1231033318, %0 ], [ %.078.be, %.backedge ]
  %.076 = phi i1 [ undef, %0 ], [ %.076.be, %.backedge ]
  %.074 = phi i1 [ undef, %0 ], [ %.074.be, %.backedge ]
  %.072 = phi i1 [ undef, %0 ], [ %.072.be, %.backedge ]
  %.0 = phi i1 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.078, label %.backedge [
    i32 -1231033318, label %29
    i32 -795530928, label %33
    i32 1213362038, label %45
    i32 -1974995469, label %48
    i32 -1419991331, label %49
    i32 -1200925898, label %55
    i32 -1172030733, label %56
    i32 118417257, label %57
    i32 -351799868, label %58
    i32 340189004, label %60
    i32 1348693201, label %61
    i32 1892495642, label %66
    i32 56119027, label %70
    i32 1972574874, label %72
    i32 1077497743, label %75
    i32 2097565265, label %85
    i32 2006958805, label %89
    i32 2101189042, label %93
    i32 -2119196379, label %95
    i32 300307813, label %101
    i32 -726279810, label %102
    i32 -2117214583, label %103
    i32 -1254033575, label %113
    i32 -2087663760, label %125
    i32 657752932, label %126
    i32 852917300, label %136
    i32 1084939750, label %157
    i32 1280223069, label %159
    i32 -531806176, label %169
    i32 -444812536, label %181
    i32 -837004830, label %183
    i32 856679071, label %188
    i32 -234559574, label %198
    i32 516994145, label %210
    i32 -238080048, label %211
    i32 978065729, label %217
    i32 -72730118, label %218
    i32 -876236701, label %222
    i32 -60217250, label %232
    i32 -1388128547, label %242
    i32 2019999620, label %243
    i32 1672071382, label %247
    i32 1857211316, label %257
    i32 -2120301029, label %269
    i32 -1239904844, label %271
    i32 2024778806, label %281
    i32 1214447604, label %300
    i32 -1559155873, label %302
    i32 -605424642, label %303
    i32 -1292187689, label %304
    i32 358980340, label %305
    i32 -1438170275, label %306
    i32 -1247195026, label %316
    i32 -2119636803, label %328
    i32 -552713889, label %330
    i32 1106800114, label %334
    i32 1394987657, label %336
    i32 -1164817525, label %339
    i32 -761208093, label %348
    i32 -1425078902, label %349
    i32 1686571417, label %359
    i32 807312884, label %371
    i32 -380043993, label %372
    i32 857908827, label %382
    i32 1161088467, label %394
    i32 -1557563254, label %396
    i32 529174391, label %406
    i32 -1902938268, label %407
    i32 911121253, label %408
    i32 1197548642, label %409
    i32 1393126401, label %419
    i32 2089110042, label %429
    i32 1687414632, label %430
    i32 -2132958147, label %434
    i32 -1970051577, label %438
    i32 -738795006, label %440
    i32 -398686327, label %450
    i32 -2061683147, label %461
    i32 -1074752677, label %462
    i32 293961972, label %469
    i32 -157204161, label %479
    i32 1816167655, label %492
    i32 -51367326, label %494
    i32 -791511923, label %501
    i32 1545447740, label %511
    i32 -2019052623, label %521
    i32 106162214, label %522
    i32 539209364, label %523
    i32 422848106, label %526
    i32 254949035, label %527
    i32 1117680558, label %529
    i32 691929519, label %540
    i32 -294537859, label %541
    i32 -1366034800, label %544
    i32 116360147, label %545
    i32 -1743095578, label %546
    i32 1828377842, label %549
    i32 1705183614, label %550
    i32 -1623751839, label %553
    i32 764267285, label %554
    i32 313145880, label %555
    i32 -1067981501, label %558
    i32 1208238504, label %559
  ]

.backedge:                                        ; preds = %28, %559, %558, %555, %554, %553, %550, %549, %546, %545, %544, %541, %540, %529, %527, %523, %522, %521, %511, %501, %494, %492, %479, %469, %462, %461, %450, %440, %438, %434, %430, %429, %419, %409, %408, %407, %406, %396, %394, %382, %372, %371, %359, %349, %348, %339, %336, %334, %330, %328, %316, %306, %305, %304, %303, %302, %300, %281, %271, %269, %257, %247, %243, %242, %232, %222, %218, %217, %211, %210, %198, %188, %183, %181, %169, %159, %157, %136, %126, %125, %113, %103, %102, %101, %95, %93, %89, %85, %75, %72, %70, %66, %61, %60, %58, %57, %56, %55, %49, %48, %45, %33, %29
  %.094.be = phi i64 [ %.094, %28 ], [ %.094, %559 ], [ %.094, %558 ], [ %.094, %555 ], [ %.094, %554 ], [ %.094, %553 ], [ %.094, %550 ], [ %.094, %549 ], [ %.094, %546 ], [ %.094, %545 ], [ %.094, %544 ], [ %.094, %541 ], [ %.094, %540 ], [ %.094, %529 ], [ %.094, %527 ], [ %.094, %523 ], [ %.094, %522 ], [ %.094, %521 ], [ %.094, %511 ], [ %.094, %501 ], [ %.094, %494 ], [ %.094, %492 ], [ %.094, %479 ], [ %.094, %469 ], [ %.094, %462 ], [ %.094, %461 ], [ %.094, %450 ], [ %.094, %440 ], [ %.094, %438 ], [ %.094, %434 ], [ %.094, %430 ], [ %.094, %429 ], [ %.094, %419 ], [ %.094, %409 ], [ %.094, %408 ], [ %.094, %407 ], [ %.094, %406 ], [ %.094, %396 ], [ %.094, %394 ], [ %.094, %382 ], [ %.094, %372 ], [ %.094, %371 ], [ %.094, %359 ], [ %.094, %349 ], [ %.094, %348 ], [ %.094, %339 ], [ %.094, %336 ], [ %.094, %334 ], [ %.094, %330 ], [ %.094, %328 ], [ %.094, %316 ], [ %.094, %306 ], [ %.094, %305 ], [ %.094, %304 ], [ %.094, %303 ], [ %.094, %302 ], [ %.094, %300 ], [ %.094, %281 ], [ %.094, %271 ], [ %.094, %269 ], [ %.094, %257 ], [ %.094, %247 ], [ %.094, %243 ], [ %.094, %242 ], [ %.094, %232 ], [ %.094, %222 ], [ %.094, %218 ], [ %.094, %217 ], [ %.094, %211 ], [ %.094, %210 ], [ %.094, %198 ], [ %.094, %188 ], [ %.094, %183 ], [ %.094, %181 ], [ %.094, %169 ], [ %.094, %159 ], [ %.094, %157 ], [ %.094, %136 ], [ %.094, %126 ], [ %.094, %125 ], [ %.094, %113 ], [ %.094, %103 ], [ %.094, %102 ], [ %.094, %101 ], [ %.094, %95 ], [ %.094, %93 ], [ %.094, %89 ], [ %.094, %85 ], [ %.094, %75 ], [ %.094, %72 ], [ %.094, %70 ], [ %.094, %66 ], [ %.094, %61 ], [ %.094, %60 ], [ %.094, %58 ], [ %.094, %57 ], [ %.094, %56 ], [ %.094, %55 ], [ %.094, %49 ], [ %.094, %48 ], [ %.094, %45 ], [ %35, %33 ], [ %.094, %29 ]
  %.092.be = phi i64 [ %.092, %28 ], [ %.092, %559 ], [ %.092, %558 ], [ %.092, %555 ], [ %.092, %554 ], [ %.092, %553 ], [ %.092, %550 ], [ %.092, %549 ], [ %.092, %546 ], [ %.092, %545 ], [ %.092, %544 ], [ %.092, %541 ], [ %.092, %540 ], [ %.092, %529 ], [ %.092, %527 ], [ %.092, %523 ], [ %.092, %522 ], [ %.092, %521 ], [ %.092, %511 ], [ %.092, %501 ], [ %.092, %494 ], [ %.092, %492 ], [ %.092, %479 ], [ %.092, %469 ], [ %.092, %462 ], [ %.092, %461 ], [ %.092, %450 ], [ %.092, %440 ], [ %.092, %438 ], [ %.092, %434 ], [ %.092, %430 ], [ %.092, %429 ], [ %.092, %419 ], [ %.092, %409 ], [ %.092, %408 ], [ %.092, %407 ], [ %.092, %406 ], [ %.092, %396 ], [ %.092, %394 ], [ %.092, %382 ], [ %.092, %372 ], [ %.092, %371 ], [ %.092, %359 ], [ %.092, %349 ], [ %.092, %348 ], [ %.092, %339 ], [ %.092, %336 ], [ %.092, %334 ], [ %.092, %330 ], [ %.092, %328 ], [ %.092, %316 ], [ %.092, %306 ], [ %.092, %305 ], [ %.092, %304 ], [ %.092, %303 ], [ %.092, %302 ], [ %.092, %300 ], [ %.092, %281 ], [ %.092, %271 ], [ %.092, %269 ], [ %.092, %257 ], [ %.092, %247 ], [ %.092, %243 ], [ %.092, %242 ], [ %.092, %232 ], [ %.092, %222 ], [ %.092, %218 ], [ %.092, %217 ], [ %.092, %211 ], [ %.092, %210 ], [ %.092, %198 ], [ %.092, %188 ], [ %.092, %183 ], [ %.092, %181 ], [ %.092, %169 ], [ %.092, %159 ], [ %.092, %157 ], [ %.092, %136 ], [ %.092, %126 ], [ %.092, %125 ], [ %.092, %113 ], [ %.092, %103 ], [ %.092, %102 ], [ %.092, %101 ], [ %.092, %95 ], [ %.092, %93 ], [ %.092, %89 ], [ %.092, %85 ], [ %.092, %75 ], [ %.092, %72 ], [ %.092, %70 ], [ %.092, %66 ], [ %.092, %61 ], [ %.092, %60 ], [ %.092, %58 ], [ %.092, %57 ], [ %.092, %56 ], [ %.092, %55 ], [ %.092, %49 ], [ %.092, %48 ], [ %.092, %45 ], [ %39, %33 ], [ %.092, %29 ]
  %.090.be = phi i64 [ %.090, %28 ], [ %.090, %559 ], [ %.090, %558 ], [ %.090, %555 ], [ %.090, %554 ], [ %.090, %553 ], [ %.090, %550 ], [ %.090, %549 ], [ %.090, %546 ], [ %.090, %545 ], [ %.090, %544 ], [ %.090, %541 ], [ %.090, %540 ], [ %.090, %529 ], [ %.090, %527 ], [ %.090, %523 ], [ %.090, %522 ], [ %.090, %521 ], [ %.090, %511 ], [ %.090, %501 ], [ %.090, %494 ], [ %.090, %492 ], [ %.090, %479 ], [ %.090, %469 ], [ %.090, %462 ], [ %.090, %461 ], [ %.090, %450 ], [ %.090, %440 ], [ %.090, %438 ], [ %.090, %434 ], [ %.090, %430 ], [ %.090, %429 ], [ %.090, %419 ], [ %.090, %409 ], [ %.090, %408 ], [ %.090, %407 ], [ %.090, %406 ], [ %.090, %396 ], [ %.090, %394 ], [ %.090, %382 ], [ %.090, %372 ], [ %.090, %371 ], [ %.090, %359 ], [ %.090, %349 ], [ %.090, %348 ], [ %.090, %339 ], [ %.090, %336 ], [ %.090, %334 ], [ %.090, %330 ], [ %.090, %328 ], [ %.090, %316 ], [ %.090, %306 ], [ %.090, %305 ], [ %.090, %304 ], [ %.090, %303 ], [ %.090, %302 ], [ %.090, %300 ], [ %.090, %281 ], [ %.090, %271 ], [ %.090, %269 ], [ %.090, %257 ], [ %.090, %247 ], [ %.090, %243 ], [ %.090, %242 ], [ %.090, %232 ], [ %.090, %222 ], [ %.090, %218 ], [ %.090, %217 ], [ %.090, %211 ], [ %.090, %210 ], [ %.090, %198 ], [ %.090, %188 ], [ %.090, %183 ], [ %.090, %181 ], [ %.090, %169 ], [ %.090, %159 ], [ %.090, %157 ], [ %.090, %136 ], [ %.090, %126 ], [ %.090, %125 ], [ %.090, %113 ], [ %.090, %103 ], [ %.090, %102 ], [ %.090, %101 ], [ %.090, %95 ], [ %.090, %93 ], [ %.090, %89 ], [ %.090, %85 ], [ %.090, %75 ], [ %.090, %72 ], [ %.090, %70 ], [ %.090, %66 ], [ %.090, %61 ], [ %.090, %60 ], [ %.090, %58 ], [ %.090, %57 ], [ %.090, %56 ], [ %.090, %55 ], [ %.090, %49 ], [ %.090, %48 ], [ %.090, %45 ], [ %42, %33 ], [ %.090, %29 ]
  %.088.be = phi i64 [ %.088, %28 ], [ %.088, %559 ], [ %.088, %558 ], [ %.088, %555 ], [ %.088, %554 ], [ %.088, %553 ], [ %.088, %550 ], [ %.088, %549 ], [ %.088, %546 ], [ %.088, %545 ], [ %.088, %544 ], [ %.088, %541 ], [ %.088, %540 ], [ %.088, %529 ], [ %.088, %527 ], [ %.088, %523 ], [ %.088, %522 ], [ %.088, %521 ], [ %.088, %511 ], [ %.088, %501 ], [ %.088, %494 ], [ %.088, %492 ], [ %.088, %479 ], [ %.088, %469 ], [ %.088, %462 ], [ %.088, %461 ], [ %.088, %450 ], [ %.088, %440 ], [ %.088, %438 ], [ %.088, %434 ], [ %.088, %430 ], [ %.088, %429 ], [ %.088, %419 ], [ %.088, %409 ], [ %.088, %408 ], [ %.088, %407 ], [ %.088, %406 ], [ %.088, %396 ], [ %.088, %394 ], [ %.088, %382 ], [ %.088, %372 ], [ %.088, %371 ], [ %.088, %359 ], [ %.088, %349 ], [ %.088, %348 ], [ %.088, %339 ], [ %.088, %336 ], [ %.088, %334 ], [ %.088, %330 ], [ %.088, %328 ], [ %.088, %316 ], [ %.088, %306 ], [ %.088, %305 ], [ %.088, %304 ], [ %.088, %303 ], [ %.088, %302 ], [ %.088, %300 ], [ %.088, %281 ], [ %.088, %271 ], [ %.088, %269 ], [ %.088, %257 ], [ %.088, %247 ], [ %.088, %243 ], [ %.088, %242 ], [ %.088, %232 ], [ %.088, %222 ], [ %.088, %218 ], [ %.088, %217 ], [ %.088, %211 ], [ %.088, %210 ], [ %.088, %198 ], [ %.088, %188 ], [ %.088, %183 ], [ %.088, %181 ], [ %.088, %169 ], [ %.088, %159 ], [ %.088, %157 ], [ %.088, %136 ], [ %.088, %126 ], [ %.088, %125 ], [ %.088, %113 ], [ %.088, %103 ], [ %.088, %102 ], [ %.088, %101 ], [ %.088, %95 ], [ %.088, %93 ], [ %.088, %89 ], [ %.088, %85 ], [ %84, %75 ], [ %.088, %72 ], [ %.088, %70 ], [ %.088, %66 ], [ %.088, %61 ], [ %.088, %60 ], [ %.088, %58 ], [ %.088, %57 ], [ %.088, %56 ], [ %.088, %55 ], [ %.088, %49 ], [ %.088, %48 ], [ %.088, %45 ], [ %.088, %33 ], [ %.088, %29 ]
  %.086.be = phi i64 [ %.086, %28 ], [ %.086, %559 ], [ %.086, %558 ], [ %.086, %555 ], [ %.086, %554 ], [ %.086, %553 ], [ %.086, %550 ], [ %.086, %549 ], [ %548, %546 ], [ %.086, %545 ], [ %.086, %544 ], [ %.086, %541 ], [ %.086, %540 ], [ %.086, %529 ], [ %.086, %527 ], [ %.086, %523 ], [ %.086, %522 ], [ %.086, %521 ], [ %.086, %511 ], [ %.086, %501 ], [ %.086, %494 ], [ %.086, %492 ], [ %.086, %479 ], [ %.086, %469 ], [ %.086, %462 ], [ %.086, %461 ], [ %.086, %450 ], [ %.086, %440 ], [ %.086, %438 ], [ %.086, %434 ], [ %.086, %430 ], [ %.086, %429 ], [ %.086, %419 ], [ %.086, %409 ], [ %.086, %408 ], [ %.086, %407 ], [ %.086, %406 ], [ %.086, %396 ], [ %.086, %394 ], [ %.086, %382 ], [ %.086, %372 ], [ %.086, %371 ], [ %.086, %359 ], [ %.086, %349 ], [ %.086, %348 ], [ %.086, %339 ], [ %.086, %336 ], [ %.086, %334 ], [ %.086, %330 ], [ %.086, %328 ], [ %.086, %316 ], [ %.086, %306 ], [ %.086, %305 ], [ %.086, %304 ], [ %.086, %303 ], [ %.086, %302 ], [ %.086, %300 ], [ %283, %281 ], [ %.086, %271 ], [ %.086, %269 ], [ %.086, %257 ], [ %.086, %247 ], [ %.086, %243 ], [ %.086, %242 ], [ %.086, %232 ], [ %.086, %222 ], [ %.086, %218 ], [ %.086, %217 ], [ %.086, %211 ], [ %.086, %210 ], [ %.086, %198 ], [ %.086, %188 ], [ %.086, %183 ], [ %.086, %181 ], [ %.086, %169 ], [ %.086, %159 ], [ %.086, %157 ], [ %.086, %136 ], [ %.086, %126 ], [ %.086, %125 ], [ %.086, %113 ], [ %.086, %103 ], [ %.086, %102 ], [ %.086, %101 ], [ %.086, %95 ], [ %.086, %93 ], [ %.086, %89 ], [ %.086, %85 ], [ %.086, %75 ], [ %.086, %72 ], [ %.086, %70 ], [ %.086, %66 ], [ %.086, %61 ], [ %.086, %60 ], [ %.086, %58 ], [ %.086, %57 ], [ %.086, %56 ], [ %.086, %55 ], [ %.086, %49 ], [ %.086, %48 ], [ %.086, %45 ], [ %.086, %33 ], [ %.086, %29 ]
  %.084.be = phi i64 [ %.084, %28 ], [ %.084, %559 ], [ %.084, %558 ], [ %.084, %555 ], [ %.084, %554 ], [ %.084, %553 ], [ %.084, %550 ], [ %.084, %549 ], [ %.084, %546 ], [ %.084, %545 ], [ %.084, %544 ], [ %.084, %541 ], [ %.084, %540 ], [ %.084, %529 ], [ %.084, %527 ], [ %.084, %523 ], [ %.084, %522 ], [ %.084, %521 ], [ %.084, %511 ], [ %.084, %501 ], [ %.084, %494 ], [ %.084, %492 ], [ %.084, %479 ], [ %.084, %469 ], [ %.084, %462 ], [ %.084, %461 ], [ %.084, %450 ], [ %.084, %440 ], [ %.084, %438 ], [ %.084, %434 ], [ %.084, %430 ], [ %.084, %429 ], [ %.084, %419 ], [ %.084, %409 ], [ %.084, %408 ], [ %.084, %407 ], [ %.084, %406 ], [ %398, %396 ], [ %.084, %394 ], [ %.084, %382 ], [ %.084, %372 ], [ %.084, %371 ], [ %.084, %359 ], [ %.084, %349 ], [ %.084, %348 ], [ %.084, %339 ], [ %.084, %336 ], [ %.084, %334 ], [ %.084, %330 ], [ %.084, %328 ], [ %.084, %316 ], [ %.084, %306 ], [ %.084, %305 ], [ %.084, %304 ], [ %.084, %303 ], [ %.084, %302 ], [ %.084, %300 ], [ %.084, %281 ], [ %.084, %271 ], [ %.084, %269 ], [ %.084, %257 ], [ %.084, %247 ], [ %.084, %243 ], [ %.084, %242 ], [ %.084, %232 ], [ %.084, %222 ], [ %.084, %218 ], [ %.084, %217 ], [ %.084, %211 ], [ %.084, %210 ], [ %.084, %198 ], [ %.084, %188 ], [ %.084, %183 ], [ %.084, %181 ], [ %.084, %169 ], [ %.084, %159 ], [ %.084, %157 ], [ %.084, %136 ], [ %.084, %126 ], [ %.084, %125 ], [ %.084, %113 ], [ %.084, %103 ], [ %.084, %102 ], [ %.084, %101 ], [ %.084, %95 ], [ %.084, %93 ], [ %.084, %89 ], [ %.084, %85 ], [ %.084, %75 ], [ %.084, %72 ], [ %.084, %70 ], [ %.084, %66 ], [ %.084, %61 ], [ %.084, %60 ], [ %.084, %58 ], [ %.084, %57 ], [ %.084, %56 ], [ %.084, %55 ], [ %.084, %49 ], [ %.084, %48 ], [ %.084, %45 ], [ %.084, %33 ], [ %.084, %29 ]
  %.082.be = phi i64 [ %.082, %28 ], [ %.082, %559 ], [ %.082, %558 ], [ %.082, %555 ], [ %.082, %554 ], [ %.082, %553 ], [ %552, %550 ], [ %.082, %549 ], [ %.082, %546 ], [ %.082, %545 ], [ %.082, %544 ], [ %.082, %541 ], [ %.082, %540 ], [ %.082, %529 ], [ %.082, %527 ], [ %.082, %523 ], [ %.082, %522 ], [ %.082, %521 ], [ %.082, %511 ], [ %.082, %501 ], [ %.082, %494 ], [ %.082, %492 ], [ %.082, %479 ], [ %.082, %469 ], [ %.082, %462 ], [ %.082, %461 ], [ %.082, %450 ], [ %.082, %440 ], [ %.082, %438 ], [ %.082, %434 ], [ %.082, %430 ], [ %.082, %429 ], [ %.082, %419 ], [ %.082, %409 ], [ %.082, %408 ], [ %.084, %407 ], [ %.082, %406 ], [ %.082, %396 ], [ %.082, %394 ], [ %.082, %382 ], [ %.082, %372 ], [ %.082, %371 ], [ %361, %359 ], [ %.082, %349 ], [ %.082, %348 ], [ %.082, %339 ], [ %.082, %336 ], [ %.082, %334 ], [ %.082, %330 ], [ %.082, %328 ], [ %.082, %316 ], [ %.082, %306 ], [ %.082, %305 ], [ %.082, %304 ], [ %.082, %303 ], [ %.086, %302 ], [ %.082, %300 ], [ %.082, %281 ], [ %.082, %271 ], [ %.082, %269 ], [ %.082, %257 ], [ %.082, %247 ], [ %246, %243 ], [ %.082, %242 ], [ %.082, %232 ], [ %.082, %222 ], [ %.082, %218 ], [ %.082, %217 ], [ %.082, %211 ], [ %.082, %210 ], [ %.082, %198 ], [ %.082, %188 ], [ %.082, %183 ], [ %.082, %181 ], [ %.082, %169 ], [ %.082, %159 ], [ %.082, %157 ], [ %.082, %136 ], [ %.082, %126 ], [ %.082, %125 ], [ %.082, %113 ], [ %.082, %103 ], [ %.082, %102 ], [ %.082, %101 ], [ %.082, %95 ], [ %.082, %93 ], [ %.082, %89 ], [ %.082, %85 ], [ %.082, %75 ], [ %.082, %72 ], [ %.082, %70 ], [ %.082, %66 ], [ %.082, %61 ], [ %.082, %60 ], [ %.082, %58 ], [ %.082, %57 ], [ %.082, %56 ], [ %.094, %55 ], [ %.082, %49 ], [ %.094, %48 ], [ %.082, %45 ], [ %.082, %33 ], [ %.082, %29 ]
  %.080.be = phi i64 [ %.080, %28 ], [ %.080, %559 ], [ %.080, %558 ], [ %.080, %555 ], [ %.080, %554 ], [ %.080, %553 ], [ 0, %550 ], [ %.080, %549 ], [ %.080, %546 ], [ %.080, %545 ], [ %.080, %544 ], [ %.080, %541 ], [ %.080, %540 ], [ %.080, %529 ], [ %.080, %527 ], [ %.080, %523 ], [ %.080, %522 ], [ %.080, %521 ], [ %.080, %511 ], [ %.080, %501 ], [ %.080, %494 ], [ %.080, %492 ], [ %.080, %479 ], [ %.080, %469 ], [ %.080, %462 ], [ %.080, %461 ], [ %.080, %450 ], [ %.080, %440 ], [ %.080, %438 ], [ %.080, %434 ], [ %.080, %430 ], [ %.080, %429 ], [ %.080, %419 ], [ %.080, %409 ], [ %.080, %408 ], [ %.080, %407 ], [ %.084, %406 ], [ %.080, %396 ], [ %.080, %394 ], [ %.080, %382 ], [ %.080, %372 ], [ %.080, %371 ], [ 0, %359 ], [ %.080, %349 ], [ %.080, %348 ], [ %.080, %339 ], [ %.080, %336 ], [ %.080, %334 ], [ %.080, %330 ], [ %.080, %328 ], [ %.080, %316 ], [ %.080, %306 ], [ %.080, %305 ], [ %.080, %304 ], [ %.086, %303 ], [ %.080, %302 ], [ %.080, %300 ], [ %.080, %281 ], [ %.080, %271 ], [ %.080, %269 ], [ %.080, %257 ], [ %.080, %247 ], [ 0, %243 ], [ %.080, %242 ], [ %.080, %232 ], [ %.080, %222 ], [ %.080, %218 ], [ %.080, %217 ], [ %.080, %211 ], [ %.080, %210 ], [ %.080, %198 ], [ %.080, %188 ], [ %.080, %183 ], [ %.080, %181 ], [ %.080, %169 ], [ %.080, %159 ], [ %.080, %157 ], [ %.080, %136 ], [ %.080, %126 ], [ %.080, %125 ], [ %.080, %113 ], [ %.080, %103 ], [ %.080, %102 ], [ %.080, %101 ], [ %.080, %95 ], [ %.080, %93 ], [ %.080, %89 ], [ %.080, %85 ], [ %.neg108, %75 ], [ %.080, %72 ], [ %.080, %70 ], [ %.080, %66 ], [ %.080, %61 ], [ %.080, %60 ], [ %.080, %58 ], [ %.080, %57 ], [ %.094, %56 ], [ %.080, %55 ], [ %.080, %49 ], [ %.080, %48 ], [ %.080, %45 ], [ %.080, %33 ], [ %.080, %29 ]
  %.078.be = phi i32 [ %.078, %28 ], [ 1545447740, %559 ], [ -157204161, %558 ], [ -398686327, %555 ], [ 1393126401, %554 ], [ 857908827, %553 ], [ 1686571417, %550 ], [ -1247195026, %549 ], [ 2024778806, %546 ], [ 1857211316, %545 ], [ -60217250, %544 ], [ -234559574, %541 ], [ -531806176, %540 ], [ 852917300, %529 ], [ -1254033575, %527 ], [ 293961972, %523 ], [ 539209364, %522 ], [ 539209364, %521 ], [ %520, %511 ], [ %510, %501 ], [ %500, %494 ], [ %493, %492 ], [ %491, %479 ], [ %478, %469 ], [ 293961972, %462 ], [ 1687414632, %461 ], [ %460, %450 ], [ %449, %440 ], [ %439, %438 ], [ -1970051577, %434 ], [ %433, %430 ], [ 1687414632, %429 ], [ %428, %419 ], [ %418, %409 ], [ -380043993, %408 ], [ 911121253, %407 ], [ 911121253, %406 ], [ %405, %396 ], [ %395, %394 ], [ %393, %382 ], [ %381, %372 ], [ -380043993, %371 ], [ %370, %359 ], [ %358, %349 ], [ 422848106, %348 ], [ %347, %339 ], [ -1438170275, %336 ], [ %335, %334 ], [ 1106800114, %330 ], [ %329, %328 ], [ %327, %316 ], [ %315, %306 ], [ -1438170275, %305 ], [ 1672071382, %304 ], [ -1292187689, %303 ], [ -1292187689, %302 ], [ %301, %300 ], [ %299, %281 ], [ %280, %271 ], [ %270, %269 ], [ %268, %257 ], [ %256, %247 ], [ 1672071382, %243 ], [ 422848106, %242 ], [ %241, %232 ], [ %231, %222 ], [ %221, %218 ], [ -72730118, %217 ], [ 978065729, %211 ], [ -238080048, %210 ], [ %209, %198 ], [ %197, %188 ], [ %187, %183 ], [ %182, %181 ], [ %180, %169 ], [ %168, %159 ], [ %158, %157 ], [ %156, %136 ], [ %135, %126 ], [ 2097565265, %125 ], [ %124, %113 ], [ %112, %103 ], [ -2117214583, %102 ], [ -2117214583, %101 ], [ %100, %95 ], [ %94, %93 ], [ 2101189042, %89 ], [ %88, %85 ], [ 2097565265, %75 ], [ 1348693201, %72 ], [ %71, %70 ], [ 56119027, %66 ], [ %65, %61 ], [ 1348693201, %60 ], [ %59, %58 ], [ -1231033318, %57 ], [ 118417257, %56 ], [ 118417257, %55 ], [ %54, %49 ], [ -1231033318, %48 ], [ %47, %45 ], [ %44, %33 ], [ %32, %29 ]
  %.076.be = phi i1 [ %.076, %28 ], [ %.076, %559 ], [ %.076, %558 ], [ %.076, %555 ], [ %.076, %554 ], [ %.076, %553 ], [ %.076, %550 ], [ %.076, %549 ], [ %.076, %546 ], [ %.076, %545 ], [ %.076, %544 ], [ %.076, %541 ], [ %.076, %540 ], [ %.076, %529 ], [ %.076, %527 ], [ %.076, %523 ], [ %.076, %522 ], [ %.076, %521 ], [ %.076, %511 ], [ %.076, %501 ], [ %.076, %494 ], [ %.076, %492 ], [ %.076, %479 ], [ %.076, %469 ], [ %.076, %462 ], [ %.076, %461 ], [ %.076, %450 ], [ %.076, %440 ], [ %.076, %438 ], [ %.076, %434 ], [ %.076, %430 ], [ %.076, %429 ], [ %.076, %419 ], [ %.076, %409 ], [ %.076, %408 ], [ %.076, %407 ], [ %.076, %406 ], [ %.076, %396 ], [ %.076, %394 ], [ %.076, %382 ], [ %.076, %372 ], [ %.076, %371 ], [ %.076, %359 ], [ %.076, %349 ], [ %.076, %348 ], [ %.076, %339 ], [ %.076, %336 ], [ %.076, %334 ], [ %.076, %330 ], [ %.076, %328 ], [ %.076, %316 ], [ %.076, %306 ], [ %.076, %305 ], [ %.076, %304 ], [ %.076, %303 ], [ %.076, %302 ], [ %.076, %300 ], [ %.076, %281 ], [ %.076, %271 ], [ %.076, %269 ], [ %.076, %257 ], [ %.076, %247 ], [ %.076, %243 ], [ %.076, %242 ], [ %.076, %232 ], [ %.076, %222 ], [ %.076, %218 ], [ %.076, %217 ], [ %.076, %211 ], [ %.076, %210 ], [ %.076, %198 ], [ %.076, %188 ], [ %.076, %183 ], [ %.076, %181 ], [ %.076, %169 ], [ %.076, %159 ], [ %.076, %157 ], [ %.076, %136 ], [ %.076, %126 ], [ %.076, %125 ], [ %.076, %113 ], [ %.076, %103 ], [ %.076, %102 ], [ %.076, %101 ], [ %.076, %95 ], [ %.076, %93 ], [ %.076, %89 ], [ %.076, %85 ], [ %.076, %75 ], [ %.076, %72 ], [ %.076, %70 ], [ %69, %66 ], [ false, %61 ], [ %.076, %60 ], [ %.076, %58 ], [ %.076, %57 ], [ %.076, %56 ], [ %.076, %55 ], [ %.076, %49 ], [ %.076, %48 ], [ %.076, %45 ], [ %.076, %33 ], [ %.076, %29 ]
  %.074.be = phi i1 [ %.074, %28 ], [ %.074, %559 ], [ %.074, %558 ], [ %.074, %555 ], [ %.074, %554 ], [ %.074, %553 ], [ %.074, %550 ], [ %.074, %549 ], [ %.074, %546 ], [ %.074, %545 ], [ %.074, %544 ], [ %.074, %541 ], [ %.074, %540 ], [ %.074, %529 ], [ %.074, %527 ], [ %.074, %523 ], [ %.074, %522 ], [ %.074, %521 ], [ %.074, %511 ], [ %.074, %501 ], [ %.074, %494 ], [ %.074, %492 ], [ %.074, %479 ], [ %.074, %469 ], [ %.074, %462 ], [ %.074, %461 ], [ %.074, %450 ], [ %.074, %440 ], [ %.074, %438 ], [ %.074, %434 ], [ %.074, %430 ], [ %.074, %429 ], [ %.074, %419 ], [ %.074, %409 ], [ %.074, %408 ], [ %.074, %407 ], [ %.074, %406 ], [ %.074, %396 ], [ %.074, %394 ], [ %.074, %382 ], [ %.074, %372 ], [ %.074, %371 ], [ %.074, %359 ], [ %.074, %349 ], [ %.074, %348 ], [ %.074, %339 ], [ %.074, %336 ], [ %.074, %334 ], [ %.074, %330 ], [ %.074, %328 ], [ %.074, %316 ], [ %.074, %306 ], [ %.074, %305 ], [ %.074, %304 ], [ %.074, %303 ], [ %.074, %302 ], [ %.074, %300 ], [ %.074, %281 ], [ %.074, %271 ], [ %.074, %269 ], [ %.074, %257 ], [ %.074, %247 ], [ %.074, %243 ], [ %.074, %242 ], [ %.074, %232 ], [ %.074, %222 ], [ %.074, %218 ], [ %.074, %217 ], [ %.074, %211 ], [ %.074, %210 ], [ %.074, %198 ], [ %.074, %188 ], [ %.074, %183 ], [ %.074, %181 ], [ %.074, %169 ], [ %.074, %159 ], [ %.074, %157 ], [ %.074, %136 ], [ %.074, %126 ], [ %.074, %125 ], [ %.074, %113 ], [ %.074, %103 ], [ %.074, %102 ], [ %.074, %101 ], [ %.074, %95 ], [ %.074, %93 ], [ %92, %89 ], [ false, %85 ], [ %.074, %75 ], [ %.074, %72 ], [ %.074, %70 ], [ %.074, %66 ], [ %.074, %61 ], [ %.074, %60 ], [ %.074, %58 ], [ %.074, %57 ], [ %.074, %56 ], [ %.074, %55 ], [ %.074, %49 ], [ %.074, %48 ], [ %.074, %45 ], [ %.074, %33 ], [ %.074, %29 ]
  %.072.be = phi i1 [ %.072, %28 ], [ %.072, %559 ], [ %.072, %558 ], [ %.072, %555 ], [ %.072, %554 ], [ %.072, %553 ], [ %.072, %550 ], [ %.072, %549 ], [ %.072, %546 ], [ %.072, %545 ], [ %.072, %544 ], [ %.072, %541 ], [ %.072, %540 ], [ %.072, %529 ], [ %.072, %527 ], [ %.072, %523 ], [ %.072, %522 ], [ %.072, %521 ], [ %.072, %511 ], [ %.072, %501 ], [ %.072, %494 ], [ %.072, %492 ], [ %.072, %479 ], [ %.072, %469 ], [ %.072, %462 ], [ %.072, %461 ], [ %.072, %450 ], [ %.072, %440 ], [ %.072, %438 ], [ %.072, %434 ], [ %.072, %430 ], [ %.072, %429 ], [ %.072, %419 ], [ %.072, %409 ], [ %.072, %408 ], [ %.072, %407 ], [ %.072, %406 ], [ %.072, %396 ], [ %.072, %394 ], [ %.072, %382 ], [ %.072, %372 ], [ %.072, %371 ], [ %.072, %359 ], [ %.072, %349 ], [ %.072, %348 ], [ %.072, %339 ], [ %.072, %336 ], [ %.072, %334 ], [ %333, %330 ], [ false, %328 ], [ %.072, %316 ], [ %.072, %306 ], [ %.072, %305 ], [ %.072, %304 ], [ %.072, %303 ], [ %.072, %302 ], [ %.072, %300 ], [ %.072, %281 ], [ %.072, %271 ], [ %.072, %269 ], [ %.072, %257 ], [ %.072, %247 ], [ %.072, %243 ], [ %.072, %242 ], [ %.072, %232 ], [ %.072, %222 ], [ %.072, %218 ], [ %.072, %217 ], [ %.072, %211 ], [ %.072, %210 ], [ %.072, %198 ], [ %.072, %188 ], [ %.072, %183 ], [ %.072, %181 ], [ %.072, %169 ], [ %.072, %159 ], [ %.072, %157 ], [ %.072, %136 ], [ %.072, %126 ], [ %.072, %125 ], [ %.072, %113 ], [ %.072, %103 ], [ %.072, %102 ], [ %.072, %101 ], [ %.072, %95 ], [ %.072, %93 ], [ %.072, %89 ], [ %.072, %85 ], [ %.072, %75 ], [ %.072, %72 ], [ %.072, %70 ], [ %.072, %66 ], [ %.072, %61 ], [ %.072, %60 ], [ %.072, %58 ], [ %.072, %57 ], [ %.072, %56 ], [ %.072, %55 ], [ %.072, %49 ], [ %.072, %48 ], [ %.072, %45 ], [ %.072, %33 ], [ %.072, %29 ]
  %.0.be = phi i1 [ %.0, %28 ], [ %.0, %559 ], [ %.0, %558 ], [ %.0, %555 ], [ %.0, %554 ], [ %.0, %553 ], [ %.0, %550 ], [ %.0, %549 ], [ %.0, %546 ], [ %.0, %545 ], [ %.0, %544 ], [ %.0, %541 ], [ %.0, %540 ], [ %.0, %529 ], [ %.0, %527 ], [ %.0, %523 ], [ %.0, %522 ], [ %.0, %521 ], [ %.0, %511 ], [ %.0, %501 ], [ %.0, %494 ], [ %.0, %492 ], [ %.0, %479 ], [ %.0, %469 ], [ %.0, %462 ], [ %.0, %461 ], [ %.0, %450 ], [ %.0, %440 ], [ %.0, %438 ], [ %437, %434 ], [ false, %430 ], [ %.0, %429 ], [ %.0, %419 ], [ %.0, %409 ], [ %.0, %408 ], [ %.0, %407 ], [ %.0, %406 ], [ %.0, %396 ], [ %.0, %394 ], [ %.0, %382 ], [ %.0, %372 ], [ %.0, %371 ], [ %.0, %359 ], [ %.0, %349 ], [ %.0, %348 ], [ %.0, %339 ], [ %.0, %336 ], [ %.0, %334 ], [ %.0, %330 ], [ %.0, %328 ], [ %.0, %316 ], [ %.0, %306 ], [ %.0, %305 ], [ %.0, %304 ], [ %.0, %303 ], [ %.0, %302 ], [ %.0, %300 ], [ %.0, %281 ], [ %.0, %271 ], [ %.0, %269 ], [ %.0, %257 ], [ %.0, %247 ], [ %.0, %243 ], [ %.0, %242 ], [ %.0, %232 ], [ %.0, %222 ], [ %.0, %218 ], [ %.0, %217 ], [ %.0, %211 ], [ %.0, %210 ], [ %.0, %198 ], [ %.0, %188 ], [ %.0, %183 ], [ %.0, %181 ], [ %.0, %169 ], [ %.0, %159 ], [ %.0, %157 ], [ %.0, %136 ], [ %.0, %126 ], [ %.0, %125 ], [ %.0, %113 ], [ %.0, %103 ], [ %.0, %102 ], [ %.0, %101 ], [ %.0, %95 ], [ %.0, %93 ], [ %.0, %89 ], [ %.0, %85 ], [ %.0, %75 ], [ %.0, %72 ], [ %.0, %70 ], [ %.0, %66 ], [ %.0, %61 ], [ %.0, %60 ], [ %.0, %58 ], [ %.0, %57 ], [ %.0, %56 ], [ %.0, %55 ], [ %.0, %49 ], [ %.0, %48 ], [ %.0, %45 ], [ %.0, %33 ], [ %.0, %29 ]
  br label %28

29:                                               ; preds = %28
  %30 = sub i64 %.082, %.080
  %31 = icmp sgt i64 %30, 1
  %32 = select i1 %31, i32 -795530928, i32 -351799868
  br label %.backedge

33:                                               ; preds = %28
  %34 = add i64 %.080, %.082
  %35 = sdiv i64 %34, 2
  %36 = load i64, i64* %8, align 8
  %37 = load i64, i64* %12, align 8
  %38 = mul nsw i64 %37, %35
  %39 = sub i64 %36, %38
  %40 = load i64, i64* %9, align 8
  %41 = sub nsw i64 1, %35
  %42 = add i64 %41, %40
  %43 = icmp slt i64 %39, 0
  %44 = select i1 %43, i32 -1974995469, i32 1213362038
  br label %.backedge

45:                                               ; preds = %28
  %46 = icmp slt i64 %.090, 0
  %47 = select i1 %46, i32 -1974995469, i32 -1419991331
  br label %.backedge

48:                                               ; preds = %28
  br label %.backedge

49:                                               ; preds = %28
  %50 = add i64 %.092, 1
  %51 = load i64, i64* %12, align 8
  %52 = mul nsw i64 %51, %50
  %53 = icmp slt i64 %52, %.090
  %54 = select i1 %53, i32 -1200925898, i32 -1172030733
  br label %.backedge

55:                                               ; preds = %28
  br label %.backedge

56:                                               ; preds = %28
  br label %.backedge

57:                                               ; preds = %28
  br label %.backedge

58:                                               ; preds = %28
  %.not = icmp eq i64 %.080, 0
  %59 = select i1 %.not, i32 -72730118, i32 340189004
  br label %.backedge

60:                                               ; preds = %28
  br label %.backedge

61:                                               ; preds = %28
  %62 = load i64, i64* %10, align 8
  %63 = load i64, i64* %12, align 8
  %64 = icmp slt i64 %62, %63
  %65 = select i1 %64, i32 1892495642, i32 56119027
  br label %.backedge

66:                                               ; preds = %28
  %67 = load i64, i64* %10, align 8
  %68 = load i64, i64* %11, align 8
  %69 = icmp slt i64 %67, %68
  br label %.backedge

70:                                               ; preds = %28
  %71 = select i1 %.076, i32 1972574874, i32 1077497743
  br label %.backedge

72:                                               ; preds = %28
  %putchar109 = call i32 @putchar(i32 65)
  %73 = load i64, i64* %10, align 8
  %74 = add i64 %73, 1
  store i64 %74, i64* %10, align 8
  br label %.backedge

75:                                               ; preds = %28
  %76 = load i64, i64* %12, align 8
  %77 = load i64, i64* %10, align 8
  %78 = sub i64 %77, %76
  store i64 %78, i64* %10, align 8
  %79 = load i64, i64* %11, align 8
  %80 = sub i64 %79, %76
  store i64 %80, i64* %11, align 8
  %81 = load i64, i64* %8, align 8
  %82 = sub i64 %81, %76
  store i64 %82, i64* %8, align 8
  %.neg108 = add i64 %.080, -1
  %83 = add i64 %76, 1
  %84 = mul nsw i64 %83, %.neg108
  br label %.backedge

85:                                               ; preds = %28
  %86 = load i64, i64* %10, align 8
  %87 = icmp slt i64 %86, %.088
  %88 = select i1 %87, i32 2006958805, i32 2101189042
  br label %.backedge

89:                                               ; preds = %28
  %90 = load i64, i64* %10, align 8
  %91 = load i64, i64* %11, align 8
  %92 = icmp slt i64 %90, %91
  br label %.backedge

93:                                               ; preds = %28
  %94 = select i1 %.074, i32 -2119196379, i32 657752932
  br label %.backedge

95:                                               ; preds = %28
  %96 = load i64, i64* %10, align 8
  %97 = load i64, i64* %12, align 8
  %.neg107 = add i64 %97, 1
  %98 = srem i64 %96, %.neg107
  %99 = icmp eq i64 %98, 0
  %100 = select i1 %99, i32 300307813, i32 -726279810
  br label %.backedge

101:                                              ; preds = %28
  %putchar106 = call i32 @putchar(i32 66)
  br label %.backedge

102:                                              ; preds = %28
  %putchar105 = call i32 @putchar(i32 65)
  br label %.backedge

103:                                              ; preds = %28
  %104 = load i32, i32* @x.5, align 4
  %105 = load i32, i32* @y.6, align 4
  %106 = add i32 %104, -1
  %107 = mul i32 %106, %104
  %108 = and i32 %107, 1
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %110, %109
  %112 = select i1 %111, i32 -1254033575, i32 254949035
  br label %.backedge

113:                                              ; preds = %28
  %114 = load i64, i64* %10, align 8
  %115 = add i64 %114, 1
  store i64 %115, i64* %10, align 8
  %116 = load i32, i32* @x.5, align 4
  %117 = load i32, i32* @y.6, align 4
  %118 = add i32 %116, -1
  %119 = mul i32 %118, %116
  %120 = and i32 %119, 1
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %122, %121
  %124 = select i1 %123, i32 -2087663760, i32 254949035
  br label %.backedge

125:                                              ; preds = %28
  br label %.backedge

126:                                              ; preds = %28
  %127 = load i32, i32* @x.5, align 4
  %128 = load i32, i32* @y.6, align 4
  %129 = add i32 %127, -1
  %130 = mul i32 %129, %127
  %131 = and i32 %130, 1
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %133, %132
  %135 = select i1 %134, i32 852917300, i32 1117680558
  br label %.backedge

136:                                              ; preds = %28
  %137 = load i64, i64* %10, align 8
  %138 = sub i64 %137, %.088
  store i64 %138, i64* %10, align 8
  %139 = load i64, i64* %11, align 8
  %140 = sub i64 %139, %.088
  store i64 %140, i64* %11, align 8
  %141 = load i64, i64* %12, align 8
  %142 = mul nsw i64 %141, %.080
  %143 = load i64, i64* %8, align 8
  %144 = sub i64 %143, %142
  store i64 %144, i64* %8, align 8
  %145 = load i64, i64* %9, align 8
  %146 = sub i64 %145, %.080
  store i64 %146, i64* %9, align 8
  %147 = icmp sgt i64 %146, 0
  store i1 %147, i1* %7, align 1
  %148 = load i32, i32* @x.5, align 4
  %149 = load i32, i32* @y.6, align 4
  %150 = add i32 %148, -1
  %151 = mul i32 %150, %148
  %152 = and i32 %151, 1
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %149, 10
  %155 = or i1 %154, %153
  %156 = select i1 %155, i32 1084939750, i32 1117680558
  br label %.backedge

157:                                              ; preds = %28
  %.0..0..0.65 = load volatile i1, i1* %7, align 1
  %158 = select i1 %.0..0..0.65, i32 1280223069, i32 978065729
  br label %.backedge

159:                                              ; preds = %28
  %160 = load i32, i32* @x.5, align 4
  %161 = load i32, i32* @y.6, align 4
  %162 = add i32 %160, -1
  %163 = mul i32 %162, %160
  %164 = and i32 %163, 1
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %161, 10
  %167 = or i1 %166, %165
  %168 = select i1 %167, i32 -531806176, i32 691929519
  br label %.backedge

169:                                              ; preds = %28
  %170 = load i64, i64* %10, align 8
  %171 = icmp eq i64 %170, 0
  store i1 %171, i1* %6, align 1
  %172 = load i32, i32* @x.5, align 4
  %173 = load i32, i32* @y.6, align 4
  %174 = add i32 %172, -1
  %175 = mul i32 %174, %172
  %176 = and i32 %175, 1
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %178, %177
  %180 = select i1 %179, i32 -444812536, i32 691929519
  br label %.backedge

181:                                              ; preds = %28
  %.0..0..0.66 = load volatile i1, i1* %6, align 1
  %182 = select i1 %.0..0..0.66, i32 -837004830, i32 -238080048
  br label %.backedge

183:                                              ; preds = %28
  %184 = load i64, i64* %10, align 8
  %185 = load i64, i64* %11, align 8
  %186 = icmp slt i64 %184, %185
  %187 = select i1 %186, i32 856679071, i32 -238080048
  br label %.backedge

188:                                              ; preds = %28
  %189 = load i32, i32* @x.5, align 4
  %190 = load i32, i32* @y.6, align 4
  %191 = add i32 %189, -1
  %192 = mul i32 %191, %189
  %193 = and i32 %192, 1
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %190, 10
  %196 = or i1 %195, %194
  %197 = select i1 %196, i32 -234559574, i32 -294537859
  br label %.backedge

198:                                              ; preds = %28
  %putchar104 = call i32 @putchar(i32 66)
  %199 = load i64, i64* %10, align 8
  %200 = add i64 %199, 1
  store i64 %200, i64* %10, align 8
  %201 = load i32, i32* @x.5, align 4
  %202 = load i32, i32* @y.6, align 4
  %203 = add i32 %201, -1
  %204 = mul i32 %203, %201
  %205 = and i32 %204, 1
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %207, %206
  %209 = select i1 %208, i32 516994145, i32 -294537859
  br label %.backedge

210:                                              ; preds = %28
  br label %.backedge

211:                                              ; preds = %28
  %212 = load i64, i64* %10, align 8
  %213 = add i64 %212, -1
  store i64 %213, i64* %10, align 8
  %214 = load i64, i64* %11, align 8
  %.neg103 = add i64 %214, -1
  store i64 %.neg103, i64* %11, align 8
  %215 = load i64, i64* %9, align 8
  %216 = add i64 %215, -1
  store i64 %216, i64* %9, align 8
  br label %.backedge

217:                                              ; preds = %28
  br label %.backedge

218:                                              ; preds = %28
  %219 = load i64, i64* %11, align 8
  %220 = icmp slt i64 %219, 1
  %221 = select i1 %220, i32 -876236701, i32 2019999620
  br label %.backedge

222:                                              ; preds = %28
  %223 = load i32, i32* @x.5, align 4
  %224 = load i32, i32* @y.6, align 4
  %225 = add i32 %223, -1
  %226 = mul i32 %225, %223
  %227 = and i32 %226, 1
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %224, 10
  %230 = or i1 %229, %228
  %231 = select i1 %230, i32 -60217250, i32 -1366034800
  br label %.backedge

232:                                              ; preds = %28
  %233 = load i32, i32* @x.5, align 4
  %234 = load i32, i32* @y.6, align 4
  %235 = add i32 %233, -1
  %236 = mul i32 %235, %233
  %237 = and i32 %236, 1
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %234, 10
  %240 = or i1 %239, %238
  %241 = select i1 %240, i32 -1388128547, i32 -1366034800
  br label %.backedge

242:                                              ; preds = %28
  br label %.backedge

243:                                              ; preds = %28
  %244 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %8, i64* nonnull dereferenceable(8) %12)
  %245 = load i64, i64* %244, align 8
  %246 = add i64 %245, 1
  br label %.backedge

247:                                              ; preds = %28
  %248 = load i32, i32* @x.5, align 4
  %249 = load i32, i32* @y.6, align 4
  %250 = add i32 %248, -1
  %251 = mul i32 %250, %248
  %252 = and i32 %251, 1
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %249, 10
  %255 = or i1 %254, %253
  %256 = select i1 %255, i32 1857211316, i32 116360147
  br label %.backedge

257:                                              ; preds = %28
  %258 = sub i64 %.082, %.080
  %259 = icmp sgt i64 %258, 1
  store i1 %259, i1* %5, align 1
  %260 = load i32, i32* @x.5, align 4
  %261 = load i32, i32* @y.6, align 4
  %262 = add i32 %260, -1
  %263 = mul i32 %262, %260
  %264 = and i32 %263, 1
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %261, 10
  %267 = or i1 %266, %265
  %268 = select i1 %267, i32 -2120301029, i32 116360147
  br label %.backedge

269:                                              ; preds = %28
  %.0..0..0.67 = load volatile i1, i1* %5, align 1
  %270 = select i1 %.0..0..0.67, i32 -1239904844, i32 358980340
  br label %.backedge

271:                                              ; preds = %28
  %272 = load i32, i32* @x.5, align 4
  %273 = load i32, i32* @y.6, align 4
  %274 = add i32 %272, -1
  %275 = mul i32 %274, %272
  %276 = and i32 %275, 1
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %273, 10
  %279 = or i1 %278, %277
  %280 = select i1 %279, i32 2024778806, i32 -1743095578
  br label %.backedge

281:                                              ; preds = %28
  %282 = add i64 %.080, %.082
  %283 = sdiv i64 %282, 2
  %284 = load i64, i64* %8, align 8
  %285 = load i64, i64* %9, align 8
  %286 = sub nsw i64 1, %283
  %287 = add i64 %286, %284
  %288 = load i64, i64* %12, align 8
  %289 = mul nsw i64 %288, %287
  %290 = icmp slt i64 %289, %285
  store i1 %290, i1* %4, align 1
  %291 = load i32, i32* @x.5, align 4
  %292 = load i32, i32* @y.6, align 4
  %293 = add i32 %291, -1
  %294 = mul i32 %293, %291
  %295 = and i32 %294, 1
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %292, 10
  %298 = or i1 %297, %296
  %299 = select i1 %298, i32 1214447604, i32 -1743095578
  br label %.backedge

300:                                              ; preds = %28
  %.0..0..0.68 = load volatile i1, i1* %4, align 1
  %301 = select i1 %.0..0..0.68, i32 -1559155873, i32 -605424642
  br label %.backedge

302:                                              ; preds = %28
  br label %.backedge

303:                                              ; preds = %28
  br label %.backedge

304:                                              ; preds = %28
  br label %.backedge

305:                                              ; preds = %28
  br label %.backedge

306:                                              ; preds = %28
  %307 = load i32, i32* @x.5, align 4
  %308 = load i32, i32* @y.6, align 4
  %309 = add i32 %307, -1
  %310 = mul i32 %309, %307
  %311 = and i32 %310, 1
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %308, 10
  %314 = or i1 %313, %312
  %315 = select i1 %314, i32 -1247195026, i32 1828377842
  br label %.backedge

316:                                              ; preds = %28
  %317 = load i64, i64* %10, align 8
  %318 = icmp slt i64 %317, %.080
  store i1 %318, i1* %3, align 1
  %319 = load i32, i32* @x.5, align 4
  %320 = load i32, i32* @y.6, align 4
  %321 = add i32 %319, -1
  %322 = mul i32 %321, %319
  %323 = and i32 %322, 1
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %320, 10
  %326 = or i1 %325, %324
  %327 = select i1 %326, i32 -2119636803, i32 1828377842
  br label %.backedge

328:                                              ; preds = %28
  %.0..0..0.69 = load volatile i1, i1* %3, align 1
  %329 = select i1 %.0..0..0.69, i32 -552713889, i32 1106800114
  br label %.backedge

330:                                              ; preds = %28
  %331 = load i64, i64* %10, align 8
  %332 = load i64, i64* %11, align 8
  %333 = icmp slt i64 %331, %332
  br label %.backedge

334:                                              ; preds = %28
  %335 = select i1 %.072, i32 1394987657, i32 -1164817525
  br label %.backedge

336:                                              ; preds = %28
  %putchar102 = call i32 @putchar(i32 65)
  %337 = load i64, i64* %10, align 8
  %338 = add i64 %337, 1
  store i64 %338, i64* %10, align 8
  br label %.backedge

339:                                              ; preds = %28
  %340 = load i64, i64* %8, align 8
  %341 = sub i64 %340, %.080
  store i64 %341, i64* %8, align 8
  %342 = load i64, i64* %10, align 8
  %343 = sub i64 %342, %.080
  store i64 %343, i64* %10, align 8
  %344 = load i64, i64* %11, align 8
  %345 = sub i64 %344, %.080
  store i64 %345, i64* %11, align 8
  %346 = icmp slt i64 %345, 1
  %347 = select i1 %346, i32 -761208093, i32 -1425078902
  br label %.backedge

348:                                              ; preds = %28
  br label %.backedge

349:                                              ; preds = %28
  %350 = load i32, i32* @x.5, align 4
  %351 = load i32, i32* @y.6, align 4
  %352 = add i32 %350, -1
  %353 = mul i32 %352, %350
  %354 = and i32 %353, 1
  %355 = icmp eq i32 %354, 0
  %356 = icmp slt i32 %351, 10
  %357 = or i1 %356, %355
  %358 = select i1 %357, i32 1686571417, i32 1705183614
  br label %.backedge

359:                                              ; preds = %28
  %360 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %9, i64* nonnull dereferenceable(8) %12)
  %361 = load i64, i64* %360, align 8
  %362 = load i32, i32* @x.5, align 4
  %363 = load i32, i32* @y.6, align 4
  %364 = add i32 %362, -1
  %365 = mul i32 %364, %362
  %366 = and i32 %365, 1
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %363, 10
  %369 = or i1 %368, %367
  %370 = select i1 %369, i32 807312884, i32 1705183614
  br label %.backedge

371:                                              ; preds = %28
  br label %.backedge

372:                                              ; preds = %28
  %373 = load i32, i32* @x.5, align 4
  %374 = load i32, i32* @y.6, align 4
  %375 = add i32 %373, -1
  %376 = mul i32 %375, %373
  %377 = and i32 %376, 1
  %378 = icmp eq i32 %377, 0
  %379 = icmp slt i32 %374, 10
  %380 = or i1 %379, %378
  %381 = select i1 %380, i32 857908827, i32 -1623751839
  br label %.backedge

382:                                              ; preds = %28
  %383 = sub i64 %.082, %.080
  %384 = icmp sgt i64 %383, 1
  store i1 %384, i1* %2, align 1
  %385 = load i32, i32* @x.5, align 4
  %386 = load i32, i32* @y.6, align 4
  %387 = add i32 %385, -1
  %388 = mul i32 %387, %385
  %389 = and i32 %388, 1
  %390 = icmp eq i32 %389, 0
  %391 = icmp slt i32 %386, 10
  %392 = or i1 %391, %390
  %393 = select i1 %392, i32 1161088467, i32 -1623751839
  br label %.backedge

394:                                              ; preds = %28
  %.0..0..0.70 = load volatile i1, i1* %2, align 1
  %395 = select i1 %.0..0..0.70, i32 -1557563254, i32 1197548642
  br label %.backedge

396:                                              ; preds = %28
  %397 = add i64 %.080, %.082
  %398 = sdiv i64 %397, 2
  %399 = load i64, i64* %8, align 8
  %400 = load i64, i64* %9, align 8
  %401 = sub i64 %400, %398
  %402 = load i64, i64* %12, align 8
  %403 = mul nsw i64 %402, %399
  %404 = icmp slt i64 %403, %401
  %405 = select i1 %404, i32 529174391, i32 -1902938268
  br label %.backedge

406:                                              ; preds = %28
  br label %.backedge

407:                                              ; preds = %28
  br label %.backedge

408:                                              ; preds = %28
  br label %.backedge

409:                                              ; preds = %28
  %410 = load i32, i32* @x.5, align 4
  %411 = load i32, i32* @y.6, align 4
  %412 = add i32 %410, -1
  %413 = mul i32 %412, %410
  %414 = and i32 %413, 1
  %415 = icmp eq i32 %414, 0
  %416 = icmp slt i32 %411, 10
  %417 = or i1 %416, %415
  %418 = select i1 %417, i32 1393126401, i32 764267285
  br label %.backedge

419:                                              ; preds = %28
  %420 = load i32, i32* @x.5, align 4
  %421 = load i32, i32* @y.6, align 4
  %422 = add i32 %420, -1
  %423 = mul i32 %422, %420
  %424 = and i32 %423, 1
  %425 = icmp eq i32 %424, 0
  %426 = icmp slt i32 %421, 10
  %427 = or i1 %426, %425
  %428 = select i1 %427, i32 2089110042, i32 764267285
  br label %.backedge

429:                                              ; preds = %28
  br label %.backedge

430:                                              ; preds = %28
  %431 = load i64, i64* %10, align 8
  %432 = icmp slt i64 %431, %.082
  %433 = select i1 %432, i32 -2132958147, i32 -1970051577
  br label %.backedge

434:                                              ; preds = %28
  %435 = load i64, i64* %10, align 8
  %436 = load i64, i64* %11, align 8
  %437 = icmp slt i64 %435, %436
  br label %.backedge

438:                                              ; preds = %28
  %439 = select i1 %.0, i32 -738795006, i32 -1074752677
  br label %.backedge

440:                                              ; preds = %28
  %441 = load i32, i32* @x.5, align 4
  %442 = load i32, i32* @y.6, align 4
  %443 = add i32 %441, -1
  %444 = mul i32 %443, %441
  %445 = and i32 %444, 1
  %446 = icmp eq i32 %445, 0
  %447 = icmp slt i32 %442, 10
  %448 = or i1 %447, %446
  %449 = select i1 %448, i32 -398686327, i32 313145880
  br label %.backedge

450:                                              ; preds = %28
  %putchar100 = call i32 @putchar(i32 66)
  %451 = load i64, i64* %10, align 8
  %.neg101 = add i64 %451, 1
  store i64 %.neg101, i64* %10, align 8
  %452 = load i32, i32* @x.5, align 4
  %453 = load i32, i32* @y.6, align 4
  %454 = add i32 %452, -1
  %455 = mul i32 %454, %452
  %456 = and i32 %455, 1
  %457 = icmp eq i32 %456, 0
  %458 = icmp slt i32 %453, 10
  %459 = or i1 %458, %457
  %460 = select i1 %459, i32 -2061683147, i32 313145880
  br label %.backedge

461:                                              ; preds = %28
  br label %.backedge

462:                                              ; preds = %28
  %463 = load i64, i64* %9, align 8
  %464 = sub i64 %463, %.082
  store i64 %464, i64* %9, align 8
  %465 = load i64, i64* %10, align 8
  %466 = sub i64 %465, %.082
  store i64 %466, i64* %10, align 8
  %467 = load i64, i64* %11, align 8
  %468 = sub i64 %467, %.082
  store i64 %468, i64* %11, align 8
  br label %.backedge

469:                                              ; preds = %28
  %470 = load i32, i32* @x.5, align 4
  %471 = load i32, i32* @y.6, align 4
  %472 = add i32 %470, -1
  %473 = mul i32 %472, %470
  %474 = and i32 %473, 1
  %475 = icmp eq i32 %474, 0
  %476 = icmp slt i32 %471, 10
  %477 = or i1 %476, %475
  %478 = select i1 %477, i32 -157204161, i32 -1067981501
  br label %.backedge

479:                                              ; preds = %28
  %480 = load i64, i64* %10, align 8
  %481 = load i64, i64* %11, align 8
  %482 = icmp slt i64 %480, %481
  store i1 %482, i1* %1, align 1
  %483 = load i32, i32* @x.5, align 4
  %484 = load i32, i32* @y.6, align 4
  %485 = add i32 %483, -1
  %486 = mul i32 %485, %483
  %487 = and i32 %486, 1
  %488 = icmp eq i32 %487, 0
  %489 = icmp slt i32 %484, 10
  %490 = or i1 %489, %488
  %491 = select i1 %490, i32 1816167655, i32 -1067981501
  br label %.backedge

492:                                              ; preds = %28
  %.0..0..0.71 = load volatile i1, i1* %1, align 1
  %493 = select i1 %.0..0..0.71, i32 -51367326, i32 422848106
  br label %.backedge

494:                                              ; preds = %28
  %495 = load i64, i64* %10, align 8
  %496 = load i64, i64* %12, align 8
  %497 = add i64 %496, 1
  %498 = srem i64 %495, %497
  %499 = icmp eq i64 %498, 0
  %500 = select i1 %499, i32 -791511923, i32 106162214
  br label %.backedge

501:                                              ; preds = %28
  %502 = load i32, i32* @x.5, align 4
  %503 = load i32, i32* @y.6, align 4
  %504 = add i32 %502, -1
  %505 = mul i32 %504, %502
  %506 = and i32 %505, 1
  %507 = icmp eq i32 %506, 0
  %508 = icmp slt i32 %503, 10
  %509 = or i1 %508, %507
  %510 = select i1 %509, i32 1545447740, i32 1208238504
  br label %.backedge

511:                                              ; preds = %28
  %putchar99 = call i32 @putchar(i32 65)
  %512 = load i32, i32* @x.5, align 4
  %513 = load i32, i32* @y.6, align 4
  %514 = add i32 %512, -1
  %515 = mul i32 %514, %512
  %516 = and i32 %515, 1
  %517 = icmp eq i32 %516, 0
  %518 = icmp slt i32 %513, 10
  %519 = or i1 %518, %517
  %520 = select i1 %519, i32 -2019052623, i32 1208238504
  br label %.backedge

521:                                              ; preds = %28
  br label %.backedge

522:                                              ; preds = %28
  %putchar98 = call i32 @putchar(i32 66)
  br label %.backedge

523:                                              ; preds = %28
  %524 = load i64, i64* %10, align 8
  %525 = add i64 %524, 1
  store i64 %525, i64* %10, align 8
  br label %.backedge

526:                                              ; preds = %28
  ret void

527:                                              ; preds = %28
  %528 = load i64, i64* %10, align 8
  %.neg = add i64 %528, 1
  store i64 %.neg, i64* %10, align 8
  br label %.backedge

529:                                              ; preds = %28
  %530 = load i64, i64* %10, align 8
  %531 = sub i64 %530, %.088
  store i64 %531, i64* %10, align 8
  %532 = load i64, i64* %11, align 8
  %533 = sub i64 %532, %.088
  store i64 %533, i64* %11, align 8
  %534 = load i64, i64* %12, align 8
  %535 = mul nsw i64 %534, %.080
  %536 = load i64, i64* %8, align 8
  %537 = sub i64 %536, %535
  store i64 %537, i64* %8, align 8
  %538 = load i64, i64* %9, align 8
  %539 = sub i64 %538, %.080
  store i64 %539, i64* %9, align 8
  br label %.backedge

540:                                              ; preds = %28
  br label %.backedge

541:                                              ; preds = %28
  %putchar97 = call i32 @putchar(i32 66)
  %542 = load i64, i64* %10, align 8
  %543 = add i64 %542, 1
  store i64 %543, i64* %10, align 8
  br label %.backedge

544:                                              ; preds = %28
  br label %.backedge

545:                                              ; preds = %28
  br label %.backedge

546:                                              ; preds = %28
  %547 = add i64 %.080, %.082
  %548 = sdiv i64 %547, 2
  br label %.backedge

549:                                              ; preds = %28
  br label %.backedge

550:                                              ; preds = %28
  %551 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* nonnull dereferenceable(8) %9, i64* nonnull dereferenceable(8) %12)
  %552 = load i64, i64* %551, align 8
  br label %.backedge

553:                                              ; preds = %28
  br label %.backedge

554:                                              ; preds = %28
  br label %.backedge

555:                                              ; preds = %28
  %putchar96 = call i32 @putchar(i32 66)
  %556 = load i64, i64* %10, align 8
  %557 = add i64 %556, 1
  store i64 %557, i64* %10, align 8
  br label %.backedge

558:                                              ; preds = %28
  br label %.backedge

559:                                              ; preds = %28
  %putchar = call i32 @putchar(i32 65)
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #4 comdat {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = load i64, i64* %0, align 8
  store i64 %5, i64* %4, align 8
  %6 = load i64, i64* %1, align 8
  store i64 %6, i64* %3, align 8
  %7 = load i32, i32* @x.7, align 4
  %8 = load i32, i32* @y.8, align 4
  %9 = add i32 %7, -1
  %10 = mul i32 %9, %7
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %13, %12
  %15 = select i1 %14, i32 -496873112, i32 1475851605
  %16 = select i1 %14, i32 463844736, i32 1475851605
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.08.ph = phi i64* [ undef, %2 ], [ %.08.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ 1162396157, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %.outer10

.outer10:                                         ; preds = %.outer10.backedge, %.outer
  %.0.ph11 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph11.be, %.outer10.backedge ]
  br label %17

17:                                               ; preds = %.outer10, %17
  switch i32 %.0.ph11, label %17 [
    i32 1162396157, label %18
    i32 -450972783, label %.outer10.backedge
    i32 463844736, label %.outer.backedge
    i32 -496873112, label %21
    i32 -1253306818, label %22
    i32 323909202, label %23
    i32 1475851605, label %24
  ]

18:                                               ; preds = %17
  %.0..0..0.6 = load volatile i64, i64* %4, align 8
  %.0..0..0.7 = load volatile i64, i64* %3, align 8
  %19 = icmp slt i64 %.0..0..0.6, %.0..0..0.7
  %20 = select i1 %19, i32 -450972783, i32 -1253306818
  br label %.outer10.backedge

21:                                               ; preds = %17
  br label %.outer10.backedge

.outer10.backedge:                                ; preds = %17, %21, %18
  %.0.ph11.be = phi i32 [ %20, %18 ], [ 323909202, %21 ], [ %16, %17 ]
  br label %.outer10

22:                                               ; preds = %17
  br label %.outer.backedge

23:                                               ; preds = %17
  ret i64* %.08.ph

24:                                               ; preds = %17
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %17, %24, %22
  %.08.ph.be = phi i64* [ %0, %22 ], [ %1, %24 ], [ %1, %17 ]
  %.0.ph.be = phi i32 [ 323909202, %22 ], [ 463844736, %24 ], [ %15, %17 ]
  br label %.outer
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %0, i64* dereferenceable(8) %1) local_unnamed_addr #4 comdat {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = load i64, i64* %1, align 8
  store i64 %5, i64* %4, align 8
  %6 = load i64, i64* %0, align 8
  store i64 %6, i64* %3, align 8
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.07.ph = phi i64* [ undef, %2 ], [ %.07.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ -233868359, %2 ], [ 146068675, %.outer.backedge ]
  br label %.outer9

.outer9:                                          ; preds = %.outer, %8
  %.0.ph10 = phi i32 [ %.0.ph, %.outer ], [ %10, %8 ]
  br label %7

7:                                                ; preds = %.outer9, %7
  switch i32 %.0.ph10, label %7 [
    i32 -233868359, label %8
    i32 1565422142, label %.outer.backedge
    i32 2060165588, label %11
    i32 146068675, label %12
  ]

8:                                                ; preds = %7
  %.0..0..0.5 = load volatile i64, i64* %4, align 8
  %.0..0..0.6 = load volatile i64, i64* %3, align 8
  %9 = icmp slt i64 %.0..0..0.5, %.0..0..0.6
  %10 = select i1 %9, i32 1565422142, i32 2060165588
  br label %.outer9

11:                                               ; preds = %7
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %7, %11
  %.07.ph.be = phi i64* [ %0, %11 ], [ %1, %7 ]
  br label %.outer

12:                                               ; preds = %7
  ret i64* %.07.ph
}

; Function Attrs: noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #6 {
  %1 = alloca i1, align 1
  %2 = alloca i32*, align 8
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = load i32, i32* @x.11, align 4
  %6 = load i32, i32* @y.12, align 4
  %7 = add i32 %5, -1
  %8 = mul i32 %7, %5
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %4, align 1
  %11 = icmp slt i32 %6, 10
  store i1 %11, i1* %3, align 1
  br label %12

12:                                               ; preds = %.backedge, %0
  %.0 = phi i32 [ 1198105601, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1198105601, label %13
    i32 -1414659724, label %16
    i32 -1860686119, label %28
    i32 -769236182, label %29
    i32 93468531, label %39
    i32 664375601, label %52
    i32 -803511831, label %54
    i32 164126156, label %55
    i32 -446241585, label %56
    i32 1412622662, label %59
  ]

.backedge:                                        ; preds = %12, %59, %56, %54, %52, %39, %29, %28, %16, %13
  %.0.be = phi i32 [ %.0, %12 ], [ 93468531, %59 ], [ -1414659724, %56 ], [ -769236182, %54 ], [ %53, %52 ], [ %51, %39 ], [ %38, %29 ], [ -769236182, %28 ], [ %27, %16 ], [ %15, %13 ]
  br label %12

13:                                               ; preds = %12
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %.0..0..0.1 = load volatile i1, i1* %3, align 1
  %14 = or i1 %.0..0..0., %.0..0..0.1
  %15 = select i1 %14, i32 -1414659724, i32 -446241585
  br label %.backedge

16:                                               ; preds = %12
  %17 = alloca i32, align 4
  store i32* %17, i32** %2, align 8
  %.0..0..0.2 = load volatile i32*, i32** %2, align 8
  %18 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* %.0..0..0.2)
  %19 = load i32, i32* @x.11, align 4
  %20 = load i32, i32* @y.12, align 4
  %21 = add i32 %19, -1
  %22 = mul i32 %21, %19
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %25, %24
  %27 = select i1 %26, i32 -1860686119, i32 -446241585
  br label %.backedge

28:                                               ; preds = %12
  br label %.backedge

29:                                               ; preds = %12
  %30 = load i32, i32* @x.11, align 4
  %31 = load i32, i32* @y.12, align 4
  %32 = add i32 %30, -1
  %33 = mul i32 %32, %30
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %31, 10
  %37 = or i1 %36, %35
  %38 = select i1 %37, i32 93468531, i32 1412622662
  br label %.backedge

39:                                               ; preds = %12
  %.0..0..0.3 = load volatile i32*, i32** %2, align 8
  %40 = load i32, i32* %.0..0..0.3, align 4
  %41 = add i32 %40, -1
  %.0..0..0.4 = load volatile i32*, i32** %2, align 8
  store i32 %41, i32* %.0..0..0.4, align 4
  %42 = icmp ne i32 %40, 0
  store i1 %42, i1* %1, align 1
  %43 = load i32, i32* @x.11, align 4
  %44 = load i32, i32* @y.12, align 4
  %45 = add i32 %43, -1
  %46 = mul i32 %45, %43
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %44, 10
  %50 = or i1 %49, %48
  %51 = select i1 %50, i32 664375601, i32 1412622662
  br label %.backedge

52:                                               ; preds = %12
  %.0..0..0.7 = load volatile i1, i1* %1, align 1
  %53 = select i1 %.0..0..0.7, i32 -803511831, i32 164126156
  br label %.backedge

54:                                               ; preds = %12
  call void @_Z5solvev()
  %putchar = call i32 @putchar(i32 10)
  br label %.backedge

55:                                               ; preds = %12
  ret i32 0

56:                                               ; preds = %12
  %57 = alloca i32, align 4
  %58 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* nonnull %57)
  br label %.backedge

59:                                               ; preds = %12
  %.0..0..0.5 = load volatile i32*, i32** %2, align 8
  %60 = load i32, i32* %.0..0..0.5, align 4
  %61 = add i32 %60, -1
  %.0..0..0.6 = load volatile i32*, i32** %2, align 8
  store i32 %61, i32* %.0..0..0.6, align 4
  br label %.backedge
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s287890429.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #3

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
