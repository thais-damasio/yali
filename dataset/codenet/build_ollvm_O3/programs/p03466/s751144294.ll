; ModuleID = 'build_ollvm/programs/p03466/s751144294.ll'
source_filename = "Project_CodeNet_C++1400/p03466/s751144294.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

$_ZSt4swapIiEvRT_S1_ = comdat any

$_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

@str = local_unnamed_addr global [101 x i8] zeroinitializer, align 16
@len = local_unnamed_addr global i32 0, align 4
@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"%d%d%d%d\00", align 1
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.2 = common local_unnamed_addr global i32 0
@y.3 = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0
@x.6 = common local_unnamed_addr global i32 0
@y.7 = common local_unnamed_addr global i32 0

; Function Attrs: nofree noinline norecurse nosync nounwind uwtable
define void @_Z5Printiiii(i32 %0, i32 %1, i32 %2, i32 %3) local_unnamed_addr #0 {
  %5 = add i32 %1, %0
  %6 = load i32, i32* @x, align 4
  %7 = load i32, i32* @y, align 4
  %8 = add i32 %6, -1
  %9 = mul i32 %8, %6
  %10 = and i32 %9, 1
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %7, 10
  %13 = or i1 %12, %11
  %14 = select i1 %13, i32 686847583, i32 555201426
  %15 = select i1 %13, i32 1945449224, i32 555201426
  br label %.outer

.outer:                                           ; preds = %28, %4
  %.013.ph = phi i32 [ %29, %28 ], [ %2, %4 ]
  %16 = icmp slt i32 %.013.ph, %3
  %17 = select i1 %16, i32 1287638115, i32 1247151457
  br label %.outer16

.outer16:                                         ; preds = %.outer16.backedge, %.outer
  %.0.ph = phi i32 [ 991567803, %.outer ], [ %.0.ph.be, %.outer16.backedge ]
  br label %18

18:                                               ; preds = %.outer16, %18
  switch i32 %.0.ph, label %18 [
    i32 991567803, label %.outer16.backedge
    i32 1287638115, label %19
    i32 1945449224, label %20
    i32 686847583, label %27
    i32 -1601139932, label %28
    i32 1247151457, label %30
    i32 555201426, label %31
  ]

19:                                               ; preds = %18
  br label %.outer16.backedge

20:                                               ; preds = %18
  %21 = srem i32 %.013.ph, %5
  %22 = icmp slt i32 %21, %0
  %23 = select i1 %22, i8 65, i8 66
  %24 = load i32, i32* @len, align 4
  %.neg15 = add i32 %24, 1
  store i32 %.neg15, i32* @len, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [101 x i8], [101 x i8]* @str, i64 0, i64 %25
  store i8 %23, i8* %26, align 1
  br label %.outer16.backedge

27:                                               ; preds = %18
  br label %.outer16.backedge

28:                                               ; preds = %18
  %29 = add i32 %.013.ph, 1
  br label %.outer

30:                                               ; preds = %18
  ret void

31:                                               ; preds = %18
  %32 = srem i32 %.013.ph, %5
  %33 = icmp slt i32 %32, %0
  %34 = select i1 %33, i8 65, i8 66
  %35 = load i32, i32* @len, align 4
  %.neg = add i32 %35, 1
  store i32 %.neg, i32* @len, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [101 x i8], [101 x i8]* @str, i64 0, i64 %36
  store i8 %34, i8* %37, align 1
  br label %.outer16.backedge

.outer16.backedge:                                ; preds = %18, %31, %27, %20, %19
  %.0.ph.be = phi i32 [ %15, %19 ], [ %14, %20 ], [ -1601139932, %27 ], [ 1945449224, %31 ], [ %17, %18 ]
  br label %.outer16
}

; Function Attrs: noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #1 {
  %1 = alloca i64, align 8
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %4)
  br label %10

10:                                               ; preds = %.backedge, %0
  %.0104 = phi i8 [ undef, %0 ], [ %.0104.be, %.backedge ]
  %.0102 = phi i32 [ undef, %0 ], [ %.0102.be, %.backedge ]
  %.0100 = phi i32 [ undef, %0 ], [ %.0100.be, %.backedge ]
  %.098 = phi i32 [ undef, %0 ], [ %.098.be, %.backedge ]
  %.096 = phi i32 [ undef, %0 ], [ %.096.be, %.backedge ]
  %.094 = phi i32 [ undef, %0 ], [ %.094.be, %.backedge ]
  %.092 = phi i32 [ undef, %0 ], [ %.092.be, %.backedge ]
  %.090 = phi i32 [ undef, %0 ], [ %.090.be, %.backedge ]
  %.088 = phi i32 [ -2036082002, %0 ], [ %.088.be, %.backedge ]
  %.0 = phi i64 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.088, label %.backedge [
    i32 -2036082002, label %11
    i32 -1679130556, label %15
    i32 737125109, label %21
    i32 -855948196, label %24
    i32 1359417296, label %28
    i32 -1694008163, label %38
    i32 1157637907, label %53
    i32 -828686270, label %54
    i32 1238438655, label %56
    i32 1968182600, label %66
    i32 627884289, label %77
    i32 -711441306, label %78
    i32 -684809341, label %88
    i32 -225069685, label %101
    i32 -2045558373, label %103
    i32 1137619807, label %113
    i32 1362210827, label %132
    i32 1942369290, label %133
    i32 1264170108, label %143
    i32 612651078, label %146
    i32 -1122355554, label %157
    i32 -825958685, label %167
    i32 1859906621, label %194
    i32 -10526626, label %196
    i32 -1935765760, label %199
    i32 -530874823, label %202
    i32 -2072964867, label %212
    i32 369605491, label %223
    i32 580243758, label %224
    i32 -432674814, label %228
    i32 1925795070, label %231
    i32 1783493723, label %236
    i32 -1226240945, label %246
    i32 1126441682, label %259
    i32 -949592000, label %260
    i32 -272993842, label %264
    i32 1329951852, label %267
    i32 1422243756, label %272
    i32 1646007153, label %282
    i32 2011933966, label %295
    i32 860830183, label %296
    i32 956071012, label %301
    i32 -804314036, label %304
    i32 1046152882, label %307
    i32 -654865117, label %310
    i32 -2080152016, label %317
    i32 645609418, label %327
    i32 1053879563, label %338
    i32 1438768150, label %339
    i32 -249967680, label %340
    i32 -249402345, label %341
    i32 657441186, label %345
    i32 -677964524, label %355
    i32 -1140847278, label %370
    i32 -1199271962, label %371
    i32 -1077453152, label %381
    i32 -1620203280, label %392
    i32 -1741449586, label %393
    i32 -80125324, label %394
    i32 -89434339, label %404
    i32 -1666359919, label %415
    i32 30304673, label %416
    i32 -2110217655, label %417
    i32 481549303, label %423
    i32 19435961, label %425
    i32 -459689480, label %426
    i32 82394673, label %435
    i32 1365324183, label %453
    i32 -563623719, label %455
    i32 -2125015622, label %459
    i32 -1372576221, label %463
    i32 1768962103, label %465
    i32 1950223024, label %471
    i32 -1553077843, label %473
  ]

.backedge:                                        ; preds = %10, %473, %471, %465, %463, %459, %455, %453, %435, %426, %425, %423, %417, %415, %404, %394, %393, %392, %381, %371, %370, %355, %345, %341, %340, %339, %338, %327, %317, %310, %307, %304, %301, %296, %295, %282, %272, %267, %264, %260, %259, %246, %236, %231, %228, %224, %223, %212, %202, %199, %196, %194, %167, %157, %146, %143, %133, %132, %113, %103, %101, %88, %78, %77, %66, %56, %54, %53, %38, %28, %24, %21, %15, %11
  %.0104.be = phi i8 [ %.0104, %10 ], [ %.0104, %473 ], [ %.0104, %471 ], [ %.0104, %465 ], [ %.0104, %463 ], [ %.0104, %459 ], [ %.0104, %455 ], [ %.0104, %453 ], [ %.0104, %435 ], [ 1, %426 ], [ %.0104, %425 ], [ %.0104, %423 ], [ %.0104, %417 ], [ %.0104, %415 ], [ %.0104, %404 ], [ %.0104, %394 ], [ %.0104, %393 ], [ %.0104, %392 ], [ %.0104, %381 ], [ %.0104, %371 ], [ %.0104, %370 ], [ %.0104, %355 ], [ %.0104, %345 ], [ %.0104, %341 ], [ %.0104, %340 ], [ %.0104, %339 ], [ %.0104, %338 ], [ %.0104, %327 ], [ %.0104, %317 ], [ %.0104, %310 ], [ %.0104, %307 ], [ %.0104, %304 ], [ %.0104, %301 ], [ %.0104, %296 ], [ %.0104, %295 ], [ %.0104, %282 ], [ %.0104, %272 ], [ %.0104, %267 ], [ %.0104, %264 ], [ %.0104, %260 ], [ %.0104, %259 ], [ %.0104, %246 ], [ %.0104, %236 ], [ %.0104, %231 ], [ %.0104, %228 ], [ %.0104, %224 ], [ %.0104, %223 ], [ %.0104, %212 ], [ %.0104, %202 ], [ %.0104, %199 ], [ %.0104, %196 ], [ %.0104, %194 ], [ %.0104, %167 ], [ %.0104, %157 ], [ %.0104, %146 ], [ %.0104, %143 ], [ %.0104, %133 ], [ %.0104, %132 ], [ 1, %113 ], [ %.0104, %103 ], [ %.0104, %101 ], [ %.0104, %88 ], [ %.0104, %78 ], [ %.0104, %77 ], [ %.0104, %66 ], [ %.0104, %56 ], [ %.0104, %54 ], [ %.0104, %53 ], [ %.0104, %38 ], [ %.0104, %28 ], [ %.0104, %24 ], [ %.0104, %21 ], [ 0, %15 ], [ %.0104, %11 ]
  %.0102.be = phi i32 [ %.0102, %10 ], [ %.0102, %473 ], [ %.0102, %471 ], [ %.0102, %465 ], [ %.0102, %463 ], [ %.0102, %459 ], [ %.0102, %455 ], [ %.0102, %453 ], [ %.0102, %435 ], [ %.0102, %426 ], [ %.0102, %425 ], [ %.0102, %423 ], [ %.0102, %417 ], [ %.0102, %415 ], [ %.0102, %404 ], [ %.0102, %394 ], [ %.0102, %393 ], [ %.0102, %392 ], [ %.0102, %381 ], [ %.0102, %371 ], [ %.0102, %370 ], [ %.0102, %355 ], [ %.0102, %345 ], [ %.0102, %341 ], [ %.0102, %340 ], [ %.0102, %339 ], [ %.0102, %338 ], [ %.0102, %327 ], [ %.0102, %317 ], [ %.0102, %310 ], [ %.0102, %307 ], [ %.0102, %304 ], [ %.0102, %301 ], [ %.0102, %296 ], [ %.0102, %295 ], [ %.0102, %282 ], [ %.0102, %272 ], [ %.0102, %267 ], [ %.0102, %264 ], [ %.0102, %260 ], [ %.0102, %259 ], [ %.0102, %246 ], [ %.0102, %236 ], [ %.0102, %231 ], [ %.0102, %228 ], [ %.0102, %224 ], [ %.0102, %223 ], [ %.0102, %212 ], [ %.0102, %202 ], [ %.0102, %199 ], [ %.0102, %196 ], [ %.0102, %194 ], [ %.0102, %167 ], [ %.0102, %157 ], [ %.0102, %146 ], [ %.0102, %143 ], [ %.0102, %133 ], [ %.0102, %132 ], [ %.0102, %113 ], [ %.0102, %103 ], [ %.0102, %101 ], [ %.0102, %88 ], [ %.0102, %78 ], [ %.0102, %77 ], [ %.0102, %66 ], [ %.0102, %56 ], [ %55, %54 ], [ %.0102, %53 ], [ %.0102, %38 ], [ %.0102, %28 ], [ %.0102, %24 ], [ 0, %21 ], [ %.0102, %15 ], [ %.0102, %11 ]
  %.0100.be = phi i32 [ %.0100, %10 ], [ %.0100, %473 ], [ %.0100, %471 ], [ %.0100, %465 ], [ %.0100, %463 ], [ %.0100, %459 ], [ %.0100, %455 ], [ %.0100, %453 ], [ %.0100, %435 ], [ %.0100, %426 ], [ %.0100, %425 ], [ %.0100, %423 ], [ %.0100, %417 ], [ %.0100, %415 ], [ %.0100, %404 ], [ %.0100, %394 ], [ %.0100, %393 ], [ %.0100, %392 ], [ %.0100, %381 ], [ %.0100, %371 ], [ %.0100, %370 ], [ %.0100, %355 ], [ %.0100, %345 ], [ %.0100, %341 ], [ %.0100, %340 ], [ %.0100, %339 ], [ %.0100, %338 ], [ %.0100, %327 ], [ %.0100, %317 ], [ %.0100, %310 ], [ %.0100, %307 ], [ %.0100, %304 ], [ %.0100, %301 ], [ %.0100, %296 ], [ %.0100, %295 ], [ %.0100, %282 ], [ %.0100, %272 ], [ %.0100, %267 ], [ %.0100, %264 ], [ %.0100, %260 ], [ %.0100, %259 ], [ %.0100, %246 ], [ %.0100, %236 ], [ %.0100, %231 ], [ %.0100, %228 ], [ %.0100, %224 ], [ %.0100, %223 ], [ %.0100, %212 ], [ %.0100, %202 ], [ %.0100, %199 ], [ %.0100, %196 ], [ %.0100, %194 ], [ %.0100, %167 ], [ %.0100, %157 ], [ %.0100, %146 ], [ %.0100, %143 ], [ %140, %133 ], [ %.0100, %132 ], [ %.0100, %113 ], [ %.0100, %103 ], [ %.0100, %101 ], [ %.0100, %88 ], [ %.0100, %78 ], [ %.0100, %77 ], [ %.0100, %66 ], [ %.0100, %56 ], [ %.0100, %54 ], [ %.0100, %53 ], [ %.0100, %38 ], [ %.0100, %28 ], [ %.0100, %24 ], [ %.0100, %21 ], [ %.0100, %15 ], [ %.0100, %11 ]
  %.098.be = phi i32 [ %.098, %10 ], [ %.098, %473 ], [ %.098, %471 ], [ %.098, %465 ], [ %.098, %463 ], [ %.098, %459 ], [ %.098, %455 ], [ %.098, %453 ], [ %448, %435 ], [ %.098, %426 ], [ %.098, %425 ], [ %.098, %423 ], [ %.098, %417 ], [ %.098, %415 ], [ %.098, %404 ], [ %.098, %394 ], [ %.098, %393 ], [ %.098, %392 ], [ %.098, %381 ], [ %.098, %371 ], [ %.098, %370 ], [ %.098, %355 ], [ %.098, %345 ], [ %.098, %341 ], [ %.098, %340 ], [ %.098, %339 ], [ %.098, %338 ], [ %.098, %327 ], [ %.098, %317 ], [ %.098, %310 ], [ %.098, %307 ], [ %.098, %304 ], [ %.098, %301 ], [ %.098, %296 ], [ %.098, %295 ], [ %.098, %282 ], [ %.098, %272 ], [ %.098, %267 ], [ %.098, %264 ], [ %.098, %260 ], [ %.098, %259 ], [ %.098, %246 ], [ %.098, %236 ], [ %.098, %231 ], [ %.098, %228 ], [ %.098, %224 ], [ %.098, %223 ], [ %.098, %212 ], [ %.098, %202 ], [ %.098, %199 ], [ %.098, %196 ], [ %.098, %194 ], [ %181, %167 ], [ %.098, %157 ], [ %.098, %146 ], [ %.098, %143 ], [ %.098, %133 ], [ %.098, %132 ], [ %.098, %113 ], [ %.098, %103 ], [ %.098, %101 ], [ %.098, %88 ], [ %.098, %78 ], [ %.098, %77 ], [ %.098, %66 ], [ %.098, %56 ], [ %.098, %54 ], [ %.098, %53 ], [ %.098, %38 ], [ %.098, %28 ], [ %.098, %24 ], [ %.098, %21 ], [ %.098, %15 ], [ %.098, %11 ]
  %.096.be = phi i32 [ %.096, %10 ], [ %.096, %473 ], [ %.096, %471 ], [ %.096, %465 ], [ %.096, %463 ], [ %.096, %459 ], [ %.096, %455 ], [ %.096, %453 ], [ %451, %435 ], [ %.096, %426 ], [ %.096, %425 ], [ %.096, %423 ], [ %.096, %417 ], [ %.096, %415 ], [ %.096, %404 ], [ %.096, %394 ], [ %.096, %393 ], [ %.096, %392 ], [ %.096, %381 ], [ %.096, %371 ], [ %.096, %370 ], [ %.096, %355 ], [ %.096, %345 ], [ %.096, %341 ], [ %.096, %340 ], [ %.096, %339 ], [ %.096, %338 ], [ %.096, %327 ], [ %.096, %317 ], [ %.096, %310 ], [ %.096, %307 ], [ %.096, %304 ], [ %.096, %301 ], [ %.096, %296 ], [ %.096, %295 ], [ %.096, %282 ], [ %.096, %272 ], [ %.096, %267 ], [ %.096, %264 ], [ %.096, %260 ], [ %.096, %259 ], [ %.096, %246 ], [ %.096, %236 ], [ %.096, %231 ], [ %.096, %228 ], [ %.096, %224 ], [ %.096, %223 ], [ %.096, %212 ], [ %.096, %202 ], [ %.096, %199 ], [ %.096, %196 ], [ %.096, %194 ], [ %.neg112, %167 ], [ %.096, %157 ], [ %.096, %146 ], [ %.096, %143 ], [ %.096, %133 ], [ %.096, %132 ], [ %.096, %113 ], [ %.096, %103 ], [ %.096, %101 ], [ %.096, %88 ], [ %.096, %78 ], [ %.096, %77 ], [ %.096, %66 ], [ %.096, %56 ], [ %.096, %54 ], [ %.096, %53 ], [ %.096, %38 ], [ %.096, %28 ], [ %.096, %24 ], [ %.096, %21 ], [ %.096, %15 ], [ %.096, %11 ]
  %.094.be = phi i32 [ %.094, %10 ], [ %.094, %473 ], [ %.094, %471 ], [ %.094, %465 ], [ %.094, %463 ], [ %.094, %459 ], [ %.094, %455 ], [ %.094, %453 ], [ %.neg, %435 ], [ %.094, %426 ], [ %.094, %425 ], [ %.094, %423 ], [ %.094, %417 ], [ %.094, %415 ], [ %.094, %404 ], [ %.094, %394 ], [ %.094, %393 ], [ %.094, %392 ], [ %.094, %381 ], [ %.094, %371 ], [ %.094, %370 ], [ %.094, %355 ], [ %.094, %345 ], [ %.094, %341 ], [ %.094, %340 ], [ %.094, %339 ], [ %.094, %338 ], [ %.094, %327 ], [ %.094, %317 ], [ %.094, %310 ], [ %.094, %307 ], [ %.094, %304 ], [ %.094, %301 ], [ %.094, %296 ], [ %.094, %295 ], [ %.094, %282 ], [ %.094, %272 ], [ %.094, %267 ], [ %.094, %264 ], [ %.094, %260 ], [ %.094, %259 ], [ %.094, %246 ], [ %.094, %236 ], [ %.094, %231 ], [ %.094, %228 ], [ %.094, %224 ], [ %.094, %223 ], [ %.094, %212 ], [ %.094, %202 ], [ %.094, %199 ], [ %.094, %196 ], [ %.094, %194 ], [ %182, %167 ], [ %.094, %157 ], [ %.094, %146 ], [ %.094, %143 ], [ %.094, %133 ], [ %.094, %132 ], [ %.094, %113 ], [ %.094, %103 ], [ %.094, %101 ], [ %.094, %88 ], [ %.094, %78 ], [ %.094, %77 ], [ %.094, %66 ], [ %.094, %56 ], [ %.094, %54 ], [ %.094, %53 ], [ %.094, %38 ], [ %.094, %28 ], [ %.094, %24 ], [ %.094, %21 ], [ %.094, %15 ], [ %.094, %11 ]
  %.092.be = phi i32 [ %.092, %10 ], [ %.092, %473 ], [ %.092, %471 ], [ %.092, %465 ], [ %464, %463 ], [ %.092, %459 ], [ %.092, %455 ], [ %.092, %453 ], [ %.092, %435 ], [ %.092, %426 ], [ %.092, %425 ], [ %.092, %423 ], [ %.092, %417 ], [ %.092, %415 ], [ %.092, %404 ], [ %.092, %394 ], [ %.092, %393 ], [ %.092, %392 ], [ %.092, %381 ], [ %.092, %371 ], [ %.092, %370 ], [ %.092, %355 ], [ %.092, %345 ], [ %.092, %341 ], [ %.092, %340 ], [ %.092, %339 ], [ %.092, %338 ], [ %328, %327 ], [ %.092, %317 ], [ %.092, %310 ], [ %.092, %307 ], [ %306, %304 ], [ %.092, %301 ], [ %.092, %296 ], [ %.092, %295 ], [ %.092, %282 ], [ %.092, %272 ], [ %.092, %267 ], [ %.092, %264 ], [ %.092, %260 ], [ %.092, %259 ], [ %.092, %246 ], [ %.092, %236 ], [ %.092, %231 ], [ %.092, %228 ], [ %.092, %224 ], [ %.092, %223 ], [ %.092, %212 ], [ %.092, %202 ], [ %.092, %199 ], [ %.092, %196 ], [ %.092, %194 ], [ %.092, %167 ], [ %.092, %157 ], [ %.092, %146 ], [ %.092, %143 ], [ %.092, %133 ], [ %.092, %132 ], [ %.092, %113 ], [ %.092, %103 ], [ %.092, %101 ], [ %.092, %88 ], [ %.092, %78 ], [ %.092, %77 ], [ %.092, %66 ], [ %.092, %56 ], [ %.092, %54 ], [ %.092, %53 ], [ %.092, %38 ], [ %.092, %28 ], [ %.092, %24 ], [ %.092, %21 ], [ %.092, %15 ], [ %.092, %11 ]
  %.090.be = phi i32 [ %.090, %10 ], [ %.090, %473 ], [ %472, %471 ], [ %.090, %465 ], [ %.090, %463 ], [ %.090, %459 ], [ %.090, %455 ], [ %.090, %453 ], [ %.090, %435 ], [ %.090, %426 ], [ %.090, %425 ], [ %.090, %423 ], [ %.090, %417 ], [ %.090, %415 ], [ %.090, %404 ], [ %.090, %394 ], [ %.090, %393 ], [ %.090, %392 ], [ %382, %381 ], [ %.090, %371 ], [ %.090, %370 ], [ %.090, %355 ], [ %.090, %345 ], [ %.090, %341 ], [ 0, %340 ], [ %.090, %339 ], [ %.090, %338 ], [ %.090, %327 ], [ %.090, %317 ], [ %.090, %310 ], [ %.090, %307 ], [ %.090, %304 ], [ %.090, %301 ], [ %.090, %296 ], [ %.090, %295 ], [ %.090, %282 ], [ %.090, %272 ], [ %.090, %267 ], [ %.090, %264 ], [ %.090, %260 ], [ %.090, %259 ], [ %.090, %246 ], [ %.090, %236 ], [ %.090, %231 ], [ %.090, %228 ], [ %.090, %224 ], [ %.090, %223 ], [ %.090, %212 ], [ %.090, %202 ], [ %.090, %199 ], [ %.090, %196 ], [ %.090, %194 ], [ %.090, %167 ], [ %.090, %157 ], [ %.090, %146 ], [ %.090, %143 ], [ %.090, %133 ], [ %.090, %132 ], [ %.090, %113 ], [ %.090, %103 ], [ %.090, %101 ], [ %.090, %88 ], [ %.090, %78 ], [ %.090, %77 ], [ %.090, %66 ], [ %.090, %56 ], [ %.090, %54 ], [ %.090, %53 ], [ %.090, %38 ], [ %.090, %28 ], [ %.090, %24 ], [ %.090, %21 ], [ %.090, %15 ], [ %.090, %11 ]
  %.088.be = phi i32 [ %.088, %10 ], [ -89434339, %473 ], [ -1077453152, %471 ], [ -677964524, %465 ], [ 645609418, %463 ], [ 1646007153, %459 ], [ -1226240945, %455 ], [ -2072964867, %453 ], [ -825958685, %435 ], [ 1137619807, %426 ], [ -684809341, %425 ], [ 1968182600, %423 ], [ -1694008163, %417 ], [ -2036082002, %415 ], [ %414, %404 ], [ %403, %394 ], [ -80125324, %393 ], [ -249402345, %392 ], [ %391, %381 ], [ %380, %371 ], [ -1199271962, %370 ], [ %369, %355 ], [ %354, %345 ], [ %344, %341 ], [ -249402345, %340 ], [ -80125324, %339 ], [ 1046152882, %338 ], [ %337, %327 ], [ %326, %317 ], [ -2080152016, %310 ], [ %309, %307 ], [ 1046152882, %304 ], [ %303, %301 ], [ 956071012, %296 ], [ 860830183, %295 ], [ %294, %282 ], [ %281, %272 ], [ 956071012, %267 ], [ %266, %264 ], [ %263, %260 ], [ -949592000, %259 ], [ %258, %246 ], [ %245, %236 ], [ 956071012, %231 ], [ %230, %228 ], [ %227, %224 ], [ 580243758, %223 ], [ %222, %212 ], [ %211, %202 ], [ 956071012, %199 ], [ %198, %196 ], [ %195, %194 ], [ %193, %167 ], [ %166, %157 ], [ -1122355554, %146 ], [ -1122355554, %143 ], [ %142, %133 ], [ 1942369290, %132 ], [ %131, %113 ], [ %112, %103 ], [ %102, %101 ], [ %100, %88 ], [ %87, %78 ], [ -2036082002, %77 ], [ %76, %66 ], [ %65, %56 ], [ -855948196, %54 ], [ -828686270, %53 ], [ %52, %38 ], [ %37, %28 ], [ %27, %24 ], [ -855948196, %21 ], [ %20, %15 ], [ %14, %11 ]
  %.0.be = phi i64 [ %.0, %10 ], [ %.0, %473 ], [ %.0, %471 ], [ %.0, %465 ], [ %.0, %463 ], [ %.0, %459 ], [ %.0, %455 ], [ %.0, %453 ], [ %.0, %435 ], [ %.0, %426 ], [ %.0, %425 ], [ %.0, %423 ], [ %.0, %417 ], [ %.0, %415 ], [ %.0, %404 ], [ %.0, %394 ], [ %.0, %393 ], [ %.0, %392 ], [ %.0, %381 ], [ %.0, %371 ], [ %.0, %370 ], [ %.0, %355 ], [ %.0, %345 ], [ %.0, %341 ], [ %.0, %340 ], [ %.0, %339 ], [ %.0, %338 ], [ %.0, %327 ], [ %.0, %317 ], [ %.0, %310 ], [ %.0, %307 ], [ %.0, %304 ], [ %.0, %301 ], [ %.0, %296 ], [ %.0, %295 ], [ %.0, %282 ], [ %.0, %272 ], [ %.0, %267 ], [ %.0, %264 ], [ %.0, %260 ], [ %.0, %259 ], [ %.0, %246 ], [ %.0, %236 ], [ %.0, %231 ], [ %.0, %228 ], [ %.0, %224 ], [ %.0, %223 ], [ %.0, %212 ], [ %.0, %202 ], [ %.0, %199 ], [ %.0, %196 ], [ %.0, %194 ], [ %.0, %167 ], [ %.0, %157 ], [ %156, %146 ], [ %145, %143 ], [ %.0, %133 ], [ %.0, %132 ], [ %.0, %113 ], [ %.0, %103 ], [ %.0, %101 ], [ %.0, %88 ], [ %.0, %78 ], [ %.0, %77 ], [ %.0, %66 ], [ %.0, %56 ], [ %.0, %54 ], [ %.0, %53 ], [ %.0, %38 ], [ %.0, %28 ], [ %.0, %24 ], [ %.0, %21 ], [ %.0, %15 ], [ %.0, %11 ]
  br label %10

11:                                               ; preds = %10
  %12 = load i32, i32* %4, align 4
  %13 = add i32 %12, -1
  store i32 %13, i32* %4, align 4
  %.not116 = icmp eq i32 %12, 0
  %14 = select i1 %.not116, i32 30304673, i32 -1679130556
  br label %.backedge

15:                                               ; preds = %10
  %16 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %5, i32* nonnull %6, i32* nonnull %7, i32* nonnull %8)
  store i32 0, i32* @len, align 4
  %17 = load i32, i32* %5, align 4
  %18 = load i32, i32* %6, align 4
  %19 = icmp eq i32 %17, %18
  %20 = select i1 %19, i32 737125109, i32 -711441306
  br label %.backedge

21:                                               ; preds = %10
  %22 = load i32, i32* %7, align 4
  %.neg115 = add i32 %22, -1
  store i32 %.neg115, i32* %7, align 4
  %23 = load i32, i32* %8, align 4
  call void @_Z5Printiiii(i32 1, i32 1, i32 %.neg115, i32 %23)
  br label %.backedge

24:                                               ; preds = %10
  %25 = load i32, i32* @len, align 4
  %26 = icmp slt i32 %.0102, %25
  %27 = select i1 %26, i32 1359417296, i32 1238438655
  br label %.backedge

28:                                               ; preds = %10
  %29 = load i32, i32* @x.2, align 4
  %30 = load i32, i32* @y.3, align 4
  %31 = add i32 %29, -1
  %32 = mul i32 %31, %29
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %30, 10
  %36 = or i1 %35, %34
  %37 = select i1 %36, i32 -1694008163, i32 -2110217655
  br label %.backedge

38:                                               ; preds = %10
  %39 = sext i32 %.0102 to i64
  %40 = getelementptr inbounds [101 x i8], [101 x i8]* @str, i64 0, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = sext i8 %41 to i32
  %43 = call i32 @putchar(i32 %42)
  %44 = load i32, i32* @x.2, align 4
  %45 = load i32, i32* @y.3, align 4
  %46 = add i32 %44, -1
  %47 = mul i32 %46, %44
  %48 = and i32 %47, 1
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %45, 10
  %51 = or i1 %50, %49
  %52 = select i1 %51, i32 1157637907, i32 -2110217655
  br label %.backedge

53:                                               ; preds = %10
  br label %.backedge

54:                                               ; preds = %10
  %55 = add i32 %.0102, 1
  br label %.backedge

56:                                               ; preds = %10
  %57 = load i32, i32* @x.2, align 4
  %58 = load i32, i32* @y.3, align 4
  %59 = add i32 %57, -1
  %60 = mul i32 %59, %57
  %61 = and i32 %60, 1
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %58, 10
  %64 = or i1 %63, %62
  %65 = select i1 %64, i32 1968182600, i32 481549303
  br label %.backedge

66:                                               ; preds = %10
  %67 = call i32 @putchar(i32 10)
  %68 = load i32, i32* @x.2, align 4
  %69 = load i32, i32* @y.3, align 4
  %70 = add i32 %68, -1
  %71 = mul i32 %70, %68
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %69, 10
  %75 = or i1 %74, %73
  %76 = select i1 %75, i32 627884289, i32 481549303
  br label %.backedge

77:                                               ; preds = %10
  br label %.backedge

78:                                               ; preds = %10
  %79 = load i32, i32* @x.2, align 4
  %80 = load i32, i32* @y.3, align 4
  %81 = add i32 %79, -1
  %82 = mul i32 %81, %79
  %83 = and i32 %82, 1
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %80, 10
  %86 = or i1 %85, %84
  %87 = select i1 %86, i32 -684809341, i32 19435961
  br label %.backedge

88:                                               ; preds = %10
  %89 = load i32, i32* %6, align 4
  %90 = load i32, i32* %5, align 4
  %91 = icmp sgt i32 %89, %90
  store i1 %91, i1* %3, align 1
  %92 = load i32, i32* @x.2, align 4
  %93 = load i32, i32* @y.3, align 4
  %94 = add i32 %92, -1
  %95 = mul i32 %94, %92
  %96 = and i32 %95, 1
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %98, %97
  %100 = select i1 %99, i32 -225069685, i32 19435961
  br label %.backedge

101:                                              ; preds = %10
  %.0..0..0. = load volatile i1, i1* %3, align 1
  %102 = select i1 %.0..0..0., i32 -2045558373, i32 1942369290
  br label %.backedge

103:                                              ; preds = %10
  %104 = load i32, i32* @x.2, align 4
  %105 = load i32, i32* @y.3, align 4
  %106 = add i32 %104, -1
  %107 = mul i32 %106, %104
  %108 = and i32 %107, 1
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %105, 10
  %111 = or i1 %110, %109
  %112 = select i1 %111, i32 1137619807, i32 -459689480
  br label %.backedge

113:                                              ; preds = %10
  call void @_ZSt4swapIiEvRT_S1_(i32* nonnull dereferenceable(4) %5, i32* nonnull dereferenceable(4) %6) #4
  %114 = load i32, i32* %5, align 4
  %115 = load i32, i32* %6, align 4
  %116 = add i32 %115, %114
  %117 = load i32, i32* %7, align 4
  %118 = sub i32 1, %117
  %119 = add i32 %118, %116
  store i32 %119, i32* %7, align 4
  %120 = load i32, i32* %8, align 4
  %121 = add i32 %116, 1
  %122 = sub i32 %121, %120
  store i32 %122, i32* %8, align 4
  call void @_ZSt4swapIiEvRT_S1_(i32* nonnull dereferenceable(4) %7, i32* nonnull dereferenceable(4) %8) #4
  %123 = load i32, i32* @x.2, align 4
  %124 = load i32, i32* @y.3, align 4
  %125 = add i32 %123, -1
  %126 = mul i32 %125, %123
  %127 = and i32 %126, 1
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %129, %128
  %131 = select i1 %130, i32 1362210827, i32 -459689480
  br label %.backedge

132:                                              ; preds = %10
  br label %.backedge

133:                                              ; preds = %10
  %134 = load i32, i32* %7, align 4
  %135 = add i32 %134, -1
  store i32 %135, i32* %7, align 4
  %136 = load i32, i32* %5, align 4
  %137 = load i32, i32* %6, align 4
  %138 = add i32 %137, %136
  %139 = add i32 %137, 1
  %140 = sdiv i32 %138, %139
  %141 = icmp eq i32 %140, 1
  %142 = select i1 %141, i32 1264170108, i32 612651078
  br label %.backedge

143:                                              ; preds = %10
  %144 = load i32, i32* %6, align 4
  %145 = sext i32 %144 to i64
  br label %.backedge

146:                                              ; preds = %10
  %147 = load i32, i32* %5, align 4
  %148 = sext i32 %147 to i64
  %149 = sext i32 %.0100 to i64
  %150 = mul nsw i64 %148, %149
  %151 = load i32, i32* %6, align 4
  %152 = sext i32 %151 to i64
  %153 = sub nsw i64 %150, %152
  %154 = mul nsw i64 %149, %149
  %155 = add nsw i64 %154, -1
  %156 = sdiv i64 %153, %155
  br label %.backedge

157:                                              ; preds = %10
  store i64 %.0, i64* %1, align 8
  %158 = load i32, i32* @x.2, align 4
  %159 = load i32, i32* @y.3, align 4
  %160 = add i32 %158, -1
  %161 = mul i32 %160, %158
  %162 = and i32 %161, 1
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %159, 10
  %165 = or i1 %164, %163
  %166 = select i1 %165, i32 -825958685, i32 82394673
  br label %.backedge

167:                                              ; preds = %10
  %.0..0..0.86 = load volatile i64, i64* %1, align 8
  %168 = trunc i64 %.0..0..0.86 to i32
  %169 = load i32, i32* %6, align 4
  %170 = sub i32 %169, %168
  %171 = sdiv i32 %170, %.0100
  %172 = load i32, i32* %5, align 4
  %173 = zext i32 %.0100 to i64
  %174 = zext i32 %171 to i64
  %175 = mul i32 %.0100, %168
  %176 = add i32 %175, %171
  %177 = sub i32 -1259557983, %176
  %.neg111.neg = add i32 %177, %172
  %178 = mul nuw i64 %174, %173
  %179 = add i64 %178, %.0..0..0.86
  %180 = trunc i64 %179 to i32
  %.neg114.neg = sub i32 %169, %180
  %.neg109 = add i32 %.0100, 1
  %181 = mul i32 %.neg109, %168
  %.neg113 = add i32 %181, 1259557983
  %.neg112 = add i32 %.neg113, %.neg111.neg
  %182 = add i32 %.neg114.neg, %.neg112
  %183 = load i32, i32* %7, align 4
  %184 = icmp slt i32 %183, %181
  store i1 %184, i1* %2, align 1
  %185 = load i32, i32* @x.2, align 4
  %186 = load i32, i32* @y.3, align 4
  %187 = add i32 %185, -1
  %188 = mul i32 %187, %185
  %189 = and i32 %188, 1
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %191, %190
  %193 = select i1 %192, i32 1859906621, i32 82394673
  br label %.backedge

194:                                              ; preds = %10
  %.0..0..0.85 = load volatile i1, i1* %2, align 1
  %195 = select i1 %.0..0..0.85, i32 -10526626, i32 580243758
  br label %.backedge

196:                                              ; preds = %10
  %197 = load i32, i32* %8, align 4
  %.not108 = icmp sgt i32 %197, %.098
  %198 = select i1 %.not108, i32 -530874823, i32 -1935765760
  br label %.backedge

199:                                              ; preds = %10
  %200 = load i32, i32* %7, align 4
  %201 = load i32, i32* %8, align 4
  call void @_Z5Printiiii(i32 %.0100, i32 1, i32 %200, i32 %201)
  br label %.backedge

202:                                              ; preds = %10
  %203 = load i32, i32* @x.2, align 4
  %204 = load i32, i32* @y.3, align 4
  %205 = add i32 %203, -1
  %206 = mul i32 %205, %203
  %207 = and i32 %206, 1
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %209, %208
  %211 = select i1 %210, i32 -2072964867, i32 1365324183
  br label %.backedge

212:                                              ; preds = %10
  %213 = load i32, i32* %7, align 4
  call void @_Z5Printiiii(i32 %.0100, i32 1, i32 %213, i32 %.098)
  store i32 %.098, i32* %7, align 4
  %214 = load i32, i32* @x.2, align 4
  %215 = load i32, i32* @y.3, align 4
  %216 = add i32 %214, -1
  %217 = mul i32 %216, %214
  %218 = and i32 %217, 1
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %215, 10
  %221 = or i1 %220, %219
  %222 = select i1 %221, i32 369605491, i32 1365324183
  br label %.backedge

223:                                              ; preds = %10
  br label %.backedge

224:                                              ; preds = %10
  %225 = load i32, i32* %7, align 4
  %226 = icmp slt i32 %225, %.096
  %227 = select i1 %226, i32 -432674814, i32 -949592000
  br label %.backedge

228:                                              ; preds = %10
  %229 = load i32, i32* %8, align 4
  %.not107 = icmp sgt i32 %229, %.096
  %230 = select i1 %.not107, i32 1783493723, i32 1925795070
  br label %.backedge

231:                                              ; preds = %10
  %232 = load i32, i32* %7, align 4
  %233 = sub i32 %232, %.098
  %234 = load i32, i32* %8, align 4
  %235 = sub i32 %234, %.098
  call void @_Z5Printiiii(i32 1, i32 0, i32 %233, i32 %235)
  br label %.backedge

236:                                              ; preds = %10
  %237 = load i32, i32* @x.2, align 4
  %238 = load i32, i32* @y.3, align 4
  %239 = add i32 %237, -1
  %240 = mul i32 %239, %237
  %241 = and i32 %240, 1
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %238, 10
  %244 = or i1 %243, %242
  %245 = select i1 %244, i32 -1226240945, i32 -563623719
  br label %.backedge

246:                                              ; preds = %10
  %247 = load i32, i32* %7, align 4
  %248 = sub i32 %247, %.098
  %249 = sub i32 %.096, %.098
  call void @_Z5Printiiii(i32 1, i32 0, i32 %248, i32 %249)
  store i32 %.096, i32* %7, align 4
  %250 = load i32, i32* @x.2, align 4
  %251 = load i32, i32* @y.3, align 4
  %252 = add i32 %250, -1
  %253 = mul i32 %252, %250
  %254 = and i32 %253, 1
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %251, 10
  %257 = or i1 %256, %255
  %258 = select i1 %257, i32 1126441682, i32 -563623719
  br label %.backedge

259:                                              ; preds = %10
  br label %.backedge

260:                                              ; preds = %10
  %261 = load i32, i32* %7, align 4
  %262 = icmp slt i32 %261, %.094
  %263 = select i1 %262, i32 -272993842, i32 860830183
  br label %.backedge

264:                                              ; preds = %10
  %265 = load i32, i32* %8, align 4
  %.not106 = icmp sgt i32 %265, %.094
  %266 = select i1 %.not106, i32 1422243756, i32 1329951852
  br label %.backedge

267:                                              ; preds = %10
  %268 = load i32, i32* %7, align 4
  %269 = sub i32 %268, %.096
  %270 = load i32, i32* %8, align 4
  %271 = sub i32 %270, %.096
  call void @_Z5Printiiii(i32 0, i32 1, i32 %269, i32 %271)
  br label %.backedge

272:                                              ; preds = %10
  %273 = load i32, i32* @x.2, align 4
  %274 = load i32, i32* @y.3, align 4
  %275 = add i32 %273, -1
  %276 = mul i32 %275, %273
  %277 = and i32 %276, 1
  %278 = icmp eq i32 %277, 0
  %279 = icmp slt i32 %274, 10
  %280 = or i1 %279, %278
  %281 = select i1 %280, i32 1646007153, i32 -2125015622
  br label %.backedge

282:                                              ; preds = %10
  %283 = load i32, i32* %7, align 4
  %284 = sub i32 %283, %.096
  %285 = sub i32 %.094, %.096
  call void @_Z5Printiiii(i32 0, i32 1, i32 %284, i32 %285)
  store i32 %.094, i32* %7, align 4
  %286 = load i32, i32* @x.2, align 4
  %287 = load i32, i32* @y.3, align 4
  %288 = add i32 %286, -1
  %289 = mul i32 %288, %286
  %290 = and i32 %289, 1
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %287, 10
  %293 = or i1 %292, %291
  %294 = select i1 %293, i32 2011933966, i32 -2125015622
  br label %.backedge

295:                                              ; preds = %10
  br label %.backedge

296:                                              ; preds = %10
  %297 = load i32, i32* %7, align 4
  %298 = sub i32 %297, %.094
  %299 = load i32, i32* %8, align 4
  %300 = sub i32 %299, %.094
  call void @_Z5Printiiii(i32 1, i32 %.0100, i32 %298, i32 %300)
  br label %.backedge

301:                                              ; preds = %10
  %302 = and i8 %.0104, 1
  %.not = icmp eq i8 %302, 0
  %303 = select i1 %.not, i32 -249967680, i32 -804314036
  br label %.backedge

304:                                              ; preds = %10
  %305 = load i32, i32* @len, align 4
  %306 = add i32 %305, -1
  br label %.backedge

307:                                              ; preds = %10
  %308 = icmp sgt i32 %.092, -1
  %309 = select i1 %308, i32 -654865117, i32 1438768150
  br label %.backedge

310:                                              ; preds = %10
  %311 = sext i32 %.092 to i64
  %312 = getelementptr inbounds [101 x i8], [101 x i8]* @str, i64 0, i64 %311
  %313 = load i8, i8* %312, align 1
  %314 = sext i8 %313 to i32
  %315 = sub nsw i32 131, %314
  %316 = call i32 @putchar(i32 %315)
  br label %.backedge

317:                                              ; preds = %10
  %318 = load i32, i32* @x.2, align 4
  %319 = load i32, i32* @y.3, align 4
  %320 = add i32 %318, -1
  %321 = mul i32 %320, %318
  %322 = and i32 %321, 1
  %323 = icmp eq i32 %322, 0
  %324 = icmp slt i32 %319, 10
  %325 = or i1 %324, %323
  %326 = select i1 %325, i32 645609418, i32 -1372576221
  br label %.backedge

327:                                              ; preds = %10
  %328 = add i32 %.092, -1
  %329 = load i32, i32* @x.2, align 4
  %330 = load i32, i32* @y.3, align 4
  %331 = add i32 %329, -1
  %332 = mul i32 %331, %329
  %333 = and i32 %332, 1
  %334 = icmp eq i32 %333, 0
  %335 = icmp slt i32 %330, 10
  %336 = or i1 %335, %334
  %337 = select i1 %336, i32 1053879563, i32 -1372576221
  br label %.backedge

338:                                              ; preds = %10
  br label %.backedge

339:                                              ; preds = %10
  br label %.backedge

340:                                              ; preds = %10
  br label %.backedge

341:                                              ; preds = %10
  %342 = load i32, i32* @len, align 4
  %343 = icmp slt i32 %.090, %342
  %344 = select i1 %343, i32 657441186, i32 -1741449586
  br label %.backedge

345:                                              ; preds = %10
  %346 = load i32, i32* @x.2, align 4
  %347 = load i32, i32* @y.3, align 4
  %348 = add i32 %346, -1
  %349 = mul i32 %348, %346
  %350 = and i32 %349, 1
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %347, 10
  %353 = or i1 %352, %351
  %354 = select i1 %353, i32 -677964524, i32 1768962103
  br label %.backedge

355:                                              ; preds = %10
  %356 = sext i32 %.090 to i64
  %357 = getelementptr inbounds [101 x i8], [101 x i8]* @str, i64 0, i64 %356
  %358 = load i8, i8* %357, align 1
  %359 = sext i8 %358 to i32
  %360 = call i32 @putchar(i32 %359)
  %361 = load i32, i32* @x.2, align 4
  %362 = load i32, i32* @y.3, align 4
  %363 = add i32 %361, -1
  %364 = mul i32 %363, %361
  %365 = and i32 %364, 1
  %366 = icmp eq i32 %365, 0
  %367 = icmp slt i32 %362, 10
  %368 = or i1 %367, %366
  %369 = select i1 %368, i32 -1140847278, i32 1768962103
  br label %.backedge

370:                                              ; preds = %10
  br label %.backedge

371:                                              ; preds = %10
  %372 = load i32, i32* @x.2, align 4
  %373 = load i32, i32* @y.3, align 4
  %374 = add i32 %372, -1
  %375 = mul i32 %374, %372
  %376 = and i32 %375, 1
  %377 = icmp eq i32 %376, 0
  %378 = icmp slt i32 %373, 10
  %379 = or i1 %378, %377
  %380 = select i1 %379, i32 -1077453152, i32 1950223024
  br label %.backedge

381:                                              ; preds = %10
  %382 = add i32 %.090, 1
  %383 = load i32, i32* @x.2, align 4
  %384 = load i32, i32* @y.3, align 4
  %385 = add i32 %383, -1
  %386 = mul i32 %385, %383
  %387 = and i32 %386, 1
  %388 = icmp eq i32 %387, 0
  %389 = icmp slt i32 %384, 10
  %390 = or i1 %389, %388
  %391 = select i1 %390, i32 -1620203280, i32 1950223024
  br label %.backedge

392:                                              ; preds = %10
  br label %.backedge

393:                                              ; preds = %10
  br label %.backedge

394:                                              ; preds = %10
  %395 = load i32, i32* @x.2, align 4
  %396 = load i32, i32* @y.3, align 4
  %397 = add i32 %395, -1
  %398 = mul i32 %397, %395
  %399 = and i32 %398, 1
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %396, 10
  %402 = or i1 %401, %400
  %403 = select i1 %402, i32 -89434339, i32 -1553077843
  br label %.backedge

404:                                              ; preds = %10
  %405 = call i32 @putchar(i32 10)
  %406 = load i32, i32* @x.2, align 4
  %407 = load i32, i32* @y.3, align 4
  %408 = add i32 %406, -1
  %409 = mul i32 %408, %406
  %410 = and i32 %409, 1
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %407, 10
  %413 = or i1 %412, %411
  %414 = select i1 %413, i32 -1666359919, i32 -1553077843
  br label %.backedge

415:                                              ; preds = %10
  br label %.backedge

416:                                              ; preds = %10
  ret i32 0

417:                                              ; preds = %10
  %418 = sext i32 %.0102 to i64
  %419 = getelementptr inbounds [101 x i8], [101 x i8]* @str, i64 0, i64 %418
  %420 = load i8, i8* %419, align 1
  %421 = sext i8 %420 to i32
  %422 = call i32 @putchar(i32 %421)
  br label %.backedge

423:                                              ; preds = %10
  %424 = call i32 @putchar(i32 10)
  br label %.backedge

425:                                              ; preds = %10
  br label %.backedge

426:                                              ; preds = %10
  call void @_ZSt4swapIiEvRT_S1_(i32* nonnull dereferenceable(4) %5, i32* nonnull dereferenceable(4) %6) #4
  %427 = load i32, i32* %5, align 4
  %428 = load i32, i32* %6, align 4
  %429 = add i32 %428, %427
  %430 = load i32, i32* %7, align 4
  %431 = add i32 %429, 1
  %432 = sub i32 %431, %430
  store i32 %432, i32* %7, align 4
  %433 = load i32, i32* %8, align 4
  %434 = sub i32 %431, %433
  store i32 %434, i32* %8, align 4
  call void @_ZSt4swapIiEvRT_S1_(i32* nonnull dereferenceable(4) %7, i32* nonnull dereferenceable(4) %8) #4
  br label %.backedge

435:                                              ; preds = %10
  %.0..0..0.87 = load volatile i64, i64* %1, align 8
  %436 = trunc i64 %.0..0..0.87 to i32
  %437 = load i32, i32* %6, align 4
  %438 = sub i32 %437, %436
  %439 = sdiv i32 %438, %.0100
  %440 = load i32, i32* %5, align 4
  %441 = zext i32 %.0100 to i64
  %442 = zext i32 %439 to i64
  %443 = mul i32 %.0100, %436
  %444 = mul nuw i64 %442, %441
  %445 = add i64 %444, %.0..0..0.87
  %446 = trunc i64 %445 to i32
  %447 = add i32 %.0100, 1
  %448 = mul i32 %447, %436
  %449 = add i32 %439, %443
  %450 = sub i32 %448, %449
  %451 = add i32 %450, %440
  %452 = add i32 %451, %437
  %.neg = sub i32 %452, %446
  br label %.backedge

453:                                              ; preds = %10
  %454 = load i32, i32* %7, align 4
  call void @_Z5Printiiii(i32 %.0100, i32 1, i32 %454, i32 %.098)
  store i32 %.098, i32* %7, align 4
  br label %.backedge

455:                                              ; preds = %10
  %456 = load i32, i32* %7, align 4
  %457 = sub i32 %456, %.098
  %458 = sub i32 %.096, %.098
  call void @_Z5Printiiii(i32 1, i32 0, i32 %457, i32 %458)
  store i32 %.096, i32* %7, align 4
  br label %.backedge

459:                                              ; preds = %10
  %460 = load i32, i32* %7, align 4
  %461 = sub i32 %460, %.096
  %462 = sub i32 %.094, %.096
  call void @_Z5Printiiii(i32 0, i32 1, i32 %461, i32 %462)
  store i32 %.094, i32* %7, align 4
  br label %.backedge

463:                                              ; preds = %10
  %464 = add i32 %.092, -1
  br label %.backedge

465:                                              ; preds = %10
  %466 = sext i32 %.090 to i64
  %467 = getelementptr inbounds [101 x i8], [101 x i8]* @str, i64 0, i64 %466
  %468 = load i8, i8* %467, align 1
  %469 = sext i8 %468 to i32
  %470 = call i32 @putchar(i32 %469)
  br label %.backedge

471:                                              ; preds = %10
  %472 = add i32 %.090, 1
  br label %.backedge

473:                                              ; preds = %10
  %474 = call i32 @putchar(i32 10)
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIiEvRT_S1_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #3 comdat {
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = load i32, i32* @x.4, align 4
  %6 = load i32, i32* @y.5, align 4
  %7 = add i32 %5, -1
  %8 = mul i32 %7, %5
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %4, align 1
  %11 = icmp slt i32 %6, 10
  store i1 %11, i1* %3, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.0.ph = phi i32 [ 926950187, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %12

12:                                               ; preds = %.outer, %12
  switch i32 %.0.ph, label %12 [
    i32 926950187, label %13
    i32 510614638, label %16
    i32 -1878589353, label %33
    i32 -1415380846, label %34
  ]

13:                                               ; preds = %12
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %.0..0..0.1 = load volatile i1, i1* %3, align 1
  %14 = or i1 %.0..0..0., %.0..0..0.1
  %15 = select i1 %14, i32 510614638, i32 -1415380846
  br label %.outer.backedge

16:                                               ; preds = %12
  %17 = alloca i32, align 4
  %18 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* nonnull dereferenceable(4) %0) #4
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %17, align 4
  %20 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* nonnull dereferenceable(4) %1) #4
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %0, align 4
  %22 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* nonnull dereferenceable(4) %17) #4
  %23 = load i32, i32* %22, align 4
  store i32 %23, i32* %1, align 4
  %24 = load i32, i32* @x.4, align 4
  %25 = load i32, i32* @y.5, align 4
  %26 = add i32 %24, -1
  %27 = mul i32 %26, %24
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %30, %29
  %32 = select i1 %31, i32 -1878589353, i32 -1415380846
  br label %.outer.backedge

33:                                               ; preds = %12
  ret void

34:                                               ; preds = %12
  %35 = alloca i32, align 4
  %36 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* nonnull dereferenceable(4) %0) #4
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %35, align 4
  %38 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* nonnull dereferenceable(4) %1) #4
  %39 = load i32, i32* %38, align 4
  store i32 %39, i32* %0, align 4
  %40 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* nonnull dereferenceable(4) %35) #4
  %41 = load i32, i32* %40, align 4
  store i32 %41, i32* %1, align 4
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %34, %16, %13
  %.0.ph.be = phi i32 [ %15, %13 ], [ %32, %16 ], [ 510614638, %34 ]
  br label %.outer
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %0) local_unnamed_addr #3 comdat {
  %2 = alloca i32*, align 8
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = load i32, i32* @x.6, align 4
  %6 = load i32, i32* @y.7, align 4
  %7 = add i32 %5, -1
  %8 = mul i32 %7, %5
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %4, align 1
  %11 = icmp slt i32 %6, 10
  store i1 %11, i1* %3, align 1
  %12 = or i1 %11, %10
  %13 = select i1 %12, i32 1735831718, i32 1919942491
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %1
  %.0.ph = phi i32 [ -21927665, %1 ], [ %.0.ph.be, %.outer.backedge ]
  br label %14

14:                                               ; preds = %.outer, %14
  switch i32 %.0.ph, label %14 [
    i32 -21927665, label %15
    i32 829904785, label %.outer.backedge
    i32 1735831718, label %18
    i32 1919942491, label %19
  ]

15:                                               ; preds = %14
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %.0..0..0.1 = load volatile i1, i1* %3, align 1
  %16 = or i1 %.0..0..0., %.0..0..0.1
  %17 = select i1 %16, i32 829904785, i32 1919942491
  br label %.outer.backedge

18:                                               ; preds = %14
  store i32* %0, i32** %2, align 8
  %.0..0..0.2 = load volatile i32*, i32** %2, align 8
  ret i32* %.0..0..0.2

19:                                               ; preds = %14
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %14, %19, %15
  %.0.ph.be = phi i32 [ %17, %15 ], [ 829904785, %19 ], [ %13, %14 ]
  br label %.outer
}

attributes #0 = { nofree noinline norecurse nosync nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
