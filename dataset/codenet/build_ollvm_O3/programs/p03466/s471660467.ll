; ModuleID = 'build_ollvm/programs/p03466/s471660467.ll'
source_filename = "Project_CodeNet_C++1400/p03466/s471660467.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }

$_ZSt3maxIiERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"%d %d %d %d\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s471660467.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.2 = common local_unnamed_addr global i32 0
@y.3 = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0
@x.6 = common local_unnamed_addr global i32 0
@y.7 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #7
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #4 {
  %1 = alloca i32, align 4
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull %8)
  br label %14

14:                                               ; preds = %.backedge, %0
  %.0151 = phi i32 [ undef, %0 ], [ %.0151.be, %.backedge ]
  %.0149 = phi i32 [ undef, %0 ], [ %.0149.be, %.backedge ]
  %.0147 = phi i32 [ undef, %0 ], [ %.0147.be, %.backedge ]
  %.0145 = phi i32 [ undef, %0 ], [ %.0145.be, %.backedge ]
  %.0143 = phi i32 [ undef, %0 ], [ %.0143.be, %.backedge ]
  %.0141 = phi i32 [ undef, %0 ], [ %.0141.be, %.backedge ]
  %.0139 = phi i32 [ undef, %0 ], [ %.0139.be, %.backedge ]
  %.0137 = phi i32 [ undef, %0 ], [ %.0137.be, %.backedge ]
  %.0135 = phi i32 [ undef, %0 ], [ %.0135.be, %.backedge ]
  %.0133 = phi i32 [ undef, %0 ], [ %.0133.be, %.backedge ]
  %.0131 = phi i32 [ undef, %0 ], [ %.0131.be, %.backedge ]
  %.0129 = phi i32 [ undef, %0 ], [ %.0129.be, %.backedge ]
  %.0 = phi i32 [ -2145928123, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -2145928123, label %15
    i32 106930349, label %25
    i32 -1680434117, label %37
    i32 1191485891, label %39
    i32 1465287045, label %44
    i32 1439025424, label %46
    i32 -1104288654, label %57
    i32 -1627754170, label %67
    i32 2083216639, label %85
    i32 -2026619695, label %87
    i32 -1850783747, label %89
    i32 446052091, label %99
    i32 -2064353734, label %110
    i32 -676206677, label %111
    i32 1394885188, label %112
    i32 133233900, label %115
    i32 814027678, label %117
    i32 1733083137, label %132
    i32 376217892, label %142
    i32 -268478820, label %158
    i32 -1213533759, label %160
    i32 -797981612, label %170
    i32 -24591658, label %181
    i32 1519552291, label %182
    i32 713912896, label %184
    i32 332659674, label %185
    i32 1874896270, label %187
    i32 -1604525301, label %197
    i32 634817037, label %208
    i32 -433655468, label %210
    i32 954653133, label %220
    i32 804176089, label %244
    i32 -393335187, label %246
    i32 -1846739544, label %253
    i32 -1065547760, label %263
    i32 -1552922620, label %274
    i32 2058263892, label %276
    i32 155192061, label %279
    i32 1986739874, label %280
    i32 -1006533625, label %290
    i32 1969795512, label %301
    i32 885920845, label %302
    i32 355122817, label %303
    i32 1101553312, label %313
    i32 -558872007, label %329
    i32 -482535583, label %330
    i32 -207831871, label %333
    i32 -571798941, label %336
    i32 -2023318084, label %346
    i32 866845417, label %360
    i32 2044258070, label %361
    i32 -1717049089, label %365
    i32 124170585, label %375
    i32 -1081431478, label %388
    i32 -2123012070, label %389
    i32 -164781556, label %399
    i32 371013698, label %415
    i32 1557569290, label %416
    i32 -854211325, label %426
    i32 -187993024, label %436
    i32 1818262836, label %437
    i32 -2105198093, label %438
    i32 -898891310, label %440
    i32 57865923, label %442
    i32 -121691984, label %452
    i32 -871748747, label %462
    i32 1252575269, label %463
    i32 1289479649, label %466
    i32 589722293, label %467
    i32 1624898076, label %468
    i32 -1716938618, label %469
    i32 -711711395, label %470
    i32 1622714462, label %471
    i32 -940016526, label %480
    i32 167553404, label %481
    i32 850054846, label %483
    i32 -1911925723, label %490
    i32 -573545200, label %496
    i32 642670938, label %501
    i32 -1032913458, label %508
    i32 1153291112, label %509
  ]

.backedge:                                        ; preds = %14, %509, %508, %501, %496, %490, %483, %481, %480, %471, %470, %469, %468, %467, %466, %463, %452, %442, %440, %438, %437, %436, %426, %416, %415, %399, %389, %388, %375, %365, %361, %360, %346, %336, %333, %330, %329, %313, %303, %302, %301, %290, %280, %279, %276, %274, %263, %253, %246, %244, %220, %210, %208, %197, %187, %185, %184, %182, %181, %170, %160, %158, %142, %132, %117, %115, %112, %111, %110, %99, %89, %87, %85, %67, %57, %46, %44, %39, %37, %25, %15
  %.0151.be = phi i32 [ %.0151, %14 ], [ %.0151, %509 ], [ %.0151, %508 ], [ %.0151, %501 ], [ %.0151, %496 ], [ %.0151, %490 ], [ %.0151, %483 ], [ %.0151, %481 ], [ %.0151, %480 ], [ %.0151, %471 ], [ %.0151, %470 ], [ %.neg160, %469 ], [ %.0151, %468 ], [ %.neg161, %467 ], [ %.0151, %466 ], [ %.0151, %463 ], [ %.0151, %452 ], [ %.0151, %442 ], [ %.0151, %440 ], [ %.0151, %438 ], [ %.0151, %437 ], [ %.0151, %436 ], [ %.0151, %426 ], [ %.0151, %416 ], [ %.0151, %415 ], [ %.0151, %399 ], [ %.0151, %389 ], [ %.0151, %388 ], [ %.0151, %375 ], [ %.0151, %365 ], [ %.0151, %361 ], [ %.0151, %360 ], [ %.0151, %346 ], [ %.0151, %336 ], [ %.0151, %333 ], [ %.0151, %330 ], [ %.0151, %329 ], [ %.0151, %313 ], [ %.0151, %303 ], [ %.0151, %302 ], [ %.0151, %301 ], [ %.0151, %290 ], [ %.0151, %280 ], [ %.neg181, %279 ], [ %.0151, %276 ], [ %.0151, %274 ], [ %.0151, %263 ], [ %.0151, %253 ], [ %.0151, %246 ], [ %.0151, %244 ], [ %.0151, %220 ], [ %.0151, %210 ], [ %.0151, %208 ], [ %.0151, %197 ], [ %.0151, %187 ], [ 1, %185 ], [ %.0151, %184 ], [ %.0151, %182 ], [ %.0151, %181 ], [ %171, %170 ], [ %.0151, %160 ], [ %.0151, %158 ], [ %.0151, %142 ], [ %.0151, %132 ], [ %.0151, %117 ], [ %.0151, %115 ], [ 1, %112 ], [ %.0151, %111 ], [ %.0151, %110 ], [ %100, %99 ], [ %.0151, %89 ], [ %.0151, %87 ], [ %.0151, %85 ], [ %.0151, %67 ], [ %.0151, %57 ], [ %.0151, %46 ], [ %.0151, %44 ], [ 1, %39 ], [ %.0151, %37 ], [ %.0151, %25 ], [ %.0151, %15 ]
  %.0149.be = phi i32 [ %.0149, %14 ], [ %.0149, %509 ], [ %.0149, %508 ], [ %.0149, %501 ], [ %.0149, %496 ], [ %.0149, %490 ], [ %.0149, %483 ], [ %482, %481 ], [ %.0149, %480 ], [ %.0149, %471 ], [ %.0149, %470 ], [ %.0149, %469 ], [ %.0149, %468 ], [ %.0149, %467 ], [ %.0149, %466 ], [ %.0149, %463 ], [ %.0149, %452 ], [ %.0149, %442 ], [ %.0149, %440 ], [ %.0149, %438 ], [ %.0149, %437 ], [ %.0149, %436 ], [ %.0149, %426 ], [ %.0149, %416 ], [ %.0149, %415 ], [ %.0149, %399 ], [ %.0149, %389 ], [ %.0149, %388 ], [ %.0149, %375 ], [ %.0149, %365 ], [ %.0149, %361 ], [ %.0149, %360 ], [ %.0149, %346 ], [ %.0149, %336 ], [ %.0149, %333 ], [ %.0149, %330 ], [ %.0149, %329 ], [ %.0149, %313 ], [ %.0149, %303 ], [ %.0149, %302 ], [ %.0149, %301 ], [ %291, %290 ], [ %.0149, %280 ], [ %.0149, %279 ], [ %.0149, %276 ], [ %.0149, %274 ], [ %.0149, %263 ], [ %.0149, %253 ], [ %.0149, %246 ], [ %.0149, %244 ], [ %.0149, %220 ], [ %.0149, %210 ], [ %.0149, %208 ], [ %.0149, %197 ], [ %.0149, %187 ], [ %186, %185 ], [ %.0149, %184 ], [ %183, %182 ], [ %.0149, %181 ], [ %.0149, %170 ], [ %.0149, %160 ], [ %.0149, %158 ], [ %.0149, %142 ], [ %.0149, %132 ], [ %.0149, %117 ], [ %.0149, %115 ], [ %114, %112 ], [ %.0149, %111 ], [ %.0149, %110 ], [ %.0149, %99 ], [ %.0149, %89 ], [ %88, %87 ], [ %.0149, %85 ], [ %.0149, %67 ], [ %.0149, %57 ], [ %.0149, %46 ], [ %.0149, %44 ], [ %42, %39 ], [ %.0149, %37 ], [ %.0149, %25 ], [ %.0149, %15 ]
  %.0147.be = phi i32 [ %.0147, %14 ], [ %.0147, %509 ], [ %.0147, %508 ], [ %.0147, %501 ], [ %.0147, %496 ], [ %.0147, %490 ], [ %.0147, %483 ], [ %.0147, %481 ], [ %.0147, %480 ], [ %.0147, %471 ], [ %.0147, %470 ], [ %.0147, %469 ], [ %.0147, %468 ], [ %.0147, %467 ], [ %.0147, %466 ], [ %.0147, %463 ], [ %.0147, %452 ], [ %.0147, %442 ], [ %.0147, %440 ], [ %.0147, %438 ], [ %.0147, %437 ], [ %.0147, %436 ], [ %.0147, %426 ], [ %.0147, %416 ], [ %.0147, %415 ], [ %.0147, %399 ], [ %.0147, %389 ], [ %.0147, %388 ], [ %.0147, %375 ], [ %.0147, %365 ], [ %.0147, %361 ], [ %.0147, %360 ], [ %.0147, %346 ], [ %.0147, %336 ], [ %.0147, %333 ], [ %.0147, %330 ], [ %.0147, %329 ], [ %.0147, %313 ], [ %.0147, %303 ], [ %.0147, %302 ], [ %.0147, %301 ], [ %.0147, %290 ], [ %.0147, %280 ], [ %.0147, %279 ], [ %.0147, %276 ], [ %.0147, %274 ], [ %.0147, %263 ], [ %.0147, %253 ], [ %.0147, %246 ], [ %.0147, %244 ], [ %.0147, %220 ], [ %.0147, %210 ], [ %.0147, %208 ], [ %.0147, %197 ], [ %.0147, %187 ], [ %.0147, %185 ], [ %.0147, %184 ], [ %.0147, %182 ], [ %.0147, %181 ], [ %.0147, %170 ], [ %.0147, %160 ], [ %.0147, %158 ], [ %.0147, %142 ], [ %.0147, %132 ], [ %.0147, %117 ], [ %.0147, %115 ], [ %.0147, %112 ], [ %.0147, %111 ], [ %.0147, %110 ], [ %.0147, %99 ], [ %.0147, %89 ], [ %.0145, %87 ], [ %.0147, %85 ], [ %.0147, %67 ], [ %.0147, %57 ], [ %.0147, %46 ], [ %.0147, %44 ], [ %43, %39 ], [ %.0147, %37 ], [ %.0147, %25 ], [ %.0147, %15 ]
  %.0145.be = phi i32 [ %.0145, %14 ], [ %.0145, %509 ], [ %.0145, %508 ], [ %.0145, %501 ], [ %.0145, %496 ], [ %.0145, %490 ], [ %.0145, %483 ], [ %.0145, %481 ], [ %.0145, %480 ], [ %473, %471 ], [ %.0145, %470 ], [ %.0145, %469 ], [ %.0145, %468 ], [ %.0145, %467 ], [ %.0145, %466 ], [ %.0145, %463 ], [ %.0145, %452 ], [ %.0145, %442 ], [ %.0145, %440 ], [ %.0145, %438 ], [ %.0145, %437 ], [ %.0145, %436 ], [ %.0145, %426 ], [ %.0145, %416 ], [ %.0145, %415 ], [ %.0145, %399 ], [ %.0145, %389 ], [ %.0145, %388 ], [ %.0145, %375 ], [ %.0145, %365 ], [ %.0145, %361 ], [ %.0145, %360 ], [ %.0145, %346 ], [ %.0145, %336 ], [ %.0145, %333 ], [ %.0145, %330 ], [ %.0145, %329 ], [ %.0145, %313 ], [ %.0145, %303 ], [ %.0145, %302 ], [ %.0145, %301 ], [ %.0145, %290 ], [ %.0145, %280 ], [ %.0145, %279 ], [ %.0145, %276 ], [ %.0145, %274 ], [ %.0145, %263 ], [ %.0145, %253 ], [ %.0145, %246 ], [ %.0145, %244 ], [ %222, %220 ], [ %.0145, %210 ], [ %.0145, %208 ], [ %.0145, %197 ], [ %.0145, %187 ], [ %.0145, %185 ], [ %.0145, %184 ], [ %.0145, %182 ], [ %.0145, %181 ], [ %.0145, %170 ], [ %.0145, %160 ], [ %.0145, %158 ], [ %.0145, %142 ], [ %.0145, %132 ], [ %119, %117 ], [ %.0145, %115 ], [ %.0145, %112 ], [ %.0145, %111 ], [ %.0145, %110 ], [ %.0145, %99 ], [ %.0145, %89 ], [ %.0145, %87 ], [ %.0145, %85 ], [ %.0145, %67 ], [ %.0145, %57 ], [ %48, %46 ], [ %.0145, %44 ], [ %.0145, %39 ], [ %.0145, %37 ], [ %.0145, %25 ], [ %.0145, %15 ]
  %.0143.be = phi i32 [ %.0143, %14 ], [ %.0143, %509 ], [ %.0143, %508 ], [ %.0143, %501 ], [ %.0143, %496 ], [ %.0143, %490 ], [ %.0143, %483 ], [ %.0143, %481 ], [ %.0143, %480 ], [ %.0143, %471 ], [ %.0143, %470 ], [ %.0145, %469 ], [ %.0143, %468 ], [ %.0143, %467 ], [ %.0143, %466 ], [ %.0143, %463 ], [ %.0143, %452 ], [ %.0143, %442 ], [ %.0143, %440 ], [ %.0143, %438 ], [ %.0143, %437 ], [ %.0143, %436 ], [ %.0143, %426 ], [ %.0143, %416 ], [ %.0143, %415 ], [ %.0143, %399 ], [ %.0143, %389 ], [ %.0143, %388 ], [ %.0143, %375 ], [ %.0143, %365 ], [ %.0143, %361 ], [ %.0143, %360 ], [ %.0143, %346 ], [ %.0143, %336 ], [ %.0143, %333 ], [ %.0143, %330 ], [ %.0143, %329 ], [ %.0143, %313 ], [ %.0143, %303 ], [ %.0143, %302 ], [ %.0143, %301 ], [ %.0143, %290 ], [ %.0143, %280 ], [ %.0143, %279 ], [ %.0143, %276 ], [ %.0143, %274 ], [ %.0143, %263 ], [ %.0143, %253 ], [ %.0143, %246 ], [ %.0143, %244 ], [ %.0143, %220 ], [ %.0143, %210 ], [ %.0143, %208 ], [ %.0143, %197 ], [ %.0143, %187 ], [ %.0143, %185 ], [ %.0143, %184 ], [ %.0143, %182 ], [ %.0143, %181 ], [ %.0145, %170 ], [ %.0143, %160 ], [ %.0143, %158 ], [ %.0143, %142 ], [ %.0143, %132 ], [ %.0143, %117 ], [ %.0143, %115 ], [ 0, %112 ], [ %.0143, %111 ], [ %.0143, %110 ], [ %.0143, %99 ], [ %.0143, %89 ], [ %.0143, %87 ], [ %.0143, %85 ], [ %.0143, %67 ], [ %.0143, %57 ], [ %.0143, %46 ], [ %.0143, %44 ], [ %.0143, %39 ], [ %.0143, %37 ], [ %.0143, %25 ], [ %.0143, %15 ]
  %.0141.be = phi i32 [ %.0141, %14 ], [ %.0141, %509 ], [ %.0141, %508 ], [ %.0141, %501 ], [ %.0141, %496 ], [ %.0141, %490 ], [ %.0141, %483 ], [ %.0141, %481 ], [ %.0141, %480 ], [ %.0141, %471 ], [ %.0141, %470 ], [ %.0141, %469 ], [ %.0141, %468 ], [ %.0141, %467 ], [ %.0141, %466 ], [ %.0141, %463 ], [ %.0141, %452 ], [ %.0141, %442 ], [ %.0141, %440 ], [ %.0141, %438 ], [ %.0141, %437 ], [ %.0141, %436 ], [ %.0141, %426 ], [ %.0141, %416 ], [ %.0141, %415 ], [ %.0141, %399 ], [ %.0141, %389 ], [ %.0141, %388 ], [ %.0141, %375 ], [ %.0141, %365 ], [ %.0141, %361 ], [ %.0141, %360 ], [ %.0141, %346 ], [ %.0141, %336 ], [ %.0141, %333 ], [ %.0141, %330 ], [ %.0141, %329 ], [ %.0141, %313 ], [ %.0141, %303 ], [ %.0141, %302 ], [ %.0141, %301 ], [ %.0141, %290 ], [ %.0141, %280 ], [ %.0145, %279 ], [ %.0141, %276 ], [ %.0141, %274 ], [ %.0141, %263 ], [ %.0141, %253 ], [ %.0141, %246 ], [ %.0141, %244 ], [ %.0141, %220 ], [ %.0141, %210 ], [ %.0141, %208 ], [ %.0141, %197 ], [ %.0141, %187 ], [ 0, %185 ], [ %.0141, %184 ], [ %.0141, %182 ], [ %.0141, %181 ], [ %.0141, %170 ], [ %.0141, %160 ], [ %.0141, %158 ], [ %.0141, %142 ], [ %.0141, %132 ], [ %.0141, %117 ], [ %.0141, %115 ], [ %.0141, %112 ], [ %.0141, %111 ], [ %.0141, %110 ], [ %.0141, %99 ], [ %.0141, %89 ], [ %.0141, %87 ], [ %.0141, %85 ], [ %.0141, %67 ], [ %.0141, %57 ], [ %.0141, %46 ], [ %.0141, %44 ], [ %.0141, %39 ], [ %.0141, %37 ], [ %.0141, %25 ], [ %.0141, %15 ]
  %.0139.be = phi i32 [ %.0139, %14 ], [ %.0139, %509 ], [ %.0139, %508 ], [ %.0139, %501 ], [ %.0139, %496 ], [ %.0139, %490 ], [ %488, %483 ], [ %.0139, %481 ], [ %.0139, %480 ], [ %.0139, %471 ], [ %.0139, %470 ], [ %.0139, %469 ], [ %.0139, %468 ], [ %.0139, %467 ], [ %.0139, %466 ], [ %.0139, %463 ], [ %.0139, %452 ], [ %.0139, %442 ], [ %.0139, %440 ], [ %.0139, %438 ], [ %.0139, %437 ], [ %.0139, %436 ], [ %.0139, %426 ], [ %.0139, %416 ], [ %.0139, %415 ], [ %.0139, %399 ], [ %.0139, %389 ], [ %.0139, %388 ], [ %.0139, %375 ], [ %.0139, %365 ], [ %.0139, %361 ], [ %.0139, %360 ], [ %.0139, %346 ], [ %.0139, %336 ], [ %.0139, %333 ], [ %.0139, %330 ], [ %.0139, %329 ], [ %318, %313 ], [ %.0139, %303 ], [ %.0139, %302 ], [ %.0139, %301 ], [ %.0139, %290 ], [ %.0139, %280 ], [ %.0139, %279 ], [ %.0139, %276 ], [ %.0139, %274 ], [ %.0139, %263 ], [ %.0139, %253 ], [ %.0139, %246 ], [ %.0139, %244 ], [ %.0139, %220 ], [ %.0139, %210 ], [ %.0139, %208 ], [ %.0139, %197 ], [ %.0139, %187 ], [ %.0139, %185 ], [ %.0139, %184 ], [ %.0139, %182 ], [ %.0139, %181 ], [ %.0139, %170 ], [ %.0139, %160 ], [ %.0139, %158 ], [ %.0139, %142 ], [ %.0139, %132 ], [ %.0139, %117 ], [ %.0139, %115 ], [ %.0139, %112 ], [ %.0139, %111 ], [ %.0139, %110 ], [ %.0139, %99 ], [ %.0139, %89 ], [ %.0139, %87 ], [ %.0139, %85 ], [ %.0139, %67 ], [ %.0139, %57 ], [ %.0139, %46 ], [ %.0139, %44 ], [ %.0139, %39 ], [ %.0139, %37 ], [ %.0139, %25 ], [ %.0139, %15 ]
  %.0137.be = phi i32 [ %.0137, %14 ], [ %.0137, %509 ], [ %.0137, %508 ], [ %.0137, %501 ], [ %.0137, %496 ], [ %.0137, %490 ], [ %.0137, %483 ], [ %.0137, %481 ], [ %.0137, %480 ], [ %.0137, %471 ], [ %.0137, %470 ], [ %.0137, %469 ], [ %.0137, %468 ], [ %.0137, %467 ], [ %.0137, %466 ], [ %.0137, %463 ], [ %.0137, %452 ], [ %.0137, %442 ], [ %.0137, %440 ], [ %.0137, %438 ], [ %.0137, %437 ], [ %.0137, %436 ], [ %.0137, %426 ], [ %.0137, %416 ], [ %.0137, %415 ], [ %.0137, %399 ], [ %.0137, %389 ], [ %.0137, %388 ], [ %.0137, %375 ], [ %.0137, %365 ], [ %.0137, %361 ], [ %.0137, %360 ], [ %.0137, %346 ], [ %.0137, %336 ], [ %.0137, %333 ], [ %.0137, %330 ], [ %.0137, %329 ], [ %.0137, %313 ], [ %.0137, %303 ], [ %.0137, %302 ], [ %.0137, %301 ], [ %.0137, %290 ], [ %.0137, %280 ], [ %.0137, %279 ], [ %.0137, %276 ], [ %.0137, %274 ], [ %.0137, %263 ], [ %.0137, %253 ], [ %.0137, %246 ], [ %.0137, %244 ], [ %.0137, %220 ], [ %.0137, %210 ], [ %.0137, %208 ], [ %.0137, %197 ], [ %.0137, %187 ], [ %.0137, %185 ], [ %.0137, %184 ], [ %.0137, %182 ], [ %.0137, %181 ], [ %.0137, %170 ], [ %.0137, %160 ], [ %.0137, %158 ], [ %.0137, %142 ], [ %.0137, %132 ], [ %122, %117 ], [ %.0137, %115 ], [ %.0137, %112 ], [ %.0137, %111 ], [ %.0137, %110 ], [ %.0137, %99 ], [ %.0137, %89 ], [ %.0137, %87 ], [ %.0137, %85 ], [ %.0137, %67 ], [ %.0137, %57 ], [ %.0137, %46 ], [ %.0137, %44 ], [ %.0137, %39 ], [ %.0137, %37 ], [ %.0137, %25 ], [ %.0137, %15 ]
  %.0135.be = phi i32 [ %.0135, %14 ], [ %.0135, %509 ], [ %.0135, %508 ], [ %.0135, %501 ], [ %.0135, %496 ], [ %.0135, %490 ], [ %.0135, %483 ], [ %.0135, %481 ], [ %.0135, %480 ], [ %.0135, %471 ], [ %.0135, %470 ], [ %.0135, %469 ], [ %.0135, %468 ], [ %.0135, %467 ], [ %.0135, %466 ], [ %.0135, %463 ], [ %.0135, %452 ], [ %.0135, %442 ], [ %.0135, %440 ], [ %.0135, %438 ], [ %.0135, %437 ], [ %.0135, %436 ], [ %.0135, %426 ], [ %.0135, %416 ], [ %.0135, %415 ], [ %.0135, %399 ], [ %.0135, %389 ], [ %.0135, %388 ], [ %.0135, %375 ], [ %.0135, %365 ], [ %.0135, %361 ], [ %.0135, %360 ], [ %.0135, %346 ], [ %.0135, %336 ], [ %.0135, %333 ], [ %.0135, %330 ], [ %.0135, %329 ], [ %.0135, %313 ], [ %.0135, %303 ], [ %.0135, %302 ], [ %.0135, %301 ], [ %.0135, %290 ], [ %.0135, %280 ], [ %.0135, %279 ], [ %.0135, %276 ], [ %.0135, %274 ], [ %.0135, %263 ], [ %.0135, %253 ], [ %.0135, %246 ], [ %.0135, %244 ], [ %.0135, %220 ], [ %.0135, %210 ], [ %.0135, %208 ], [ %.0135, %197 ], [ %.0135, %187 ], [ %.0135, %185 ], [ %.0135, %184 ], [ %.0135, %182 ], [ %.0135, %181 ], [ %.0135, %170 ], [ %.0135, %160 ], [ %.0135, %158 ], [ %.0135, %142 ], [ %.0135, %132 ], [ %125, %117 ], [ %.0135, %115 ], [ %.0135, %112 ], [ %.0135, %111 ], [ %.0135, %110 ], [ %.0135, %99 ], [ %.0135, %89 ], [ %.0135, %87 ], [ %.0135, %85 ], [ %.0135, %67 ], [ %.0135, %57 ], [ %.0135, %46 ], [ %.0135, %44 ], [ %.0135, %39 ], [ %.0135, %37 ], [ %.0135, %25 ], [ %.0135, %15 ]
  %.0133.be = phi i32 [ %.0133, %14 ], [ %.0133, %509 ], [ %.0133, %508 ], [ %.0133, %501 ], [ %.0133, %496 ], [ %.0133, %490 ], [ %.0133, %483 ], [ %.0133, %481 ], [ %.0133, %480 ], [ %477, %471 ], [ %.0133, %470 ], [ %.0133, %469 ], [ %.0133, %468 ], [ %.0133, %467 ], [ %.0133, %466 ], [ %.0133, %463 ], [ %.0133, %452 ], [ %.0133, %442 ], [ %.0133, %440 ], [ %.0133, %438 ], [ %.0133, %437 ], [ %.0133, %436 ], [ %.0133, %426 ], [ %.0133, %416 ], [ %.0133, %415 ], [ %.0133, %399 ], [ %.0133, %389 ], [ %.0133, %388 ], [ %.0133, %375 ], [ %.0133, %365 ], [ %.0133, %361 ], [ %.0133, %360 ], [ %.0133, %346 ], [ %.0133, %336 ], [ %.0133, %333 ], [ %.0133, %330 ], [ %.0133, %329 ], [ %.0133, %313 ], [ %.0133, %303 ], [ %.0133, %302 ], [ %.0133, %301 ], [ %.0133, %290 ], [ %.0133, %280 ], [ %.0133, %279 ], [ %.0133, %276 ], [ %.0133, %274 ], [ %.0133, %263 ], [ %.0133, %253 ], [ %.0133, %246 ], [ %.0133, %244 ], [ %226, %220 ], [ %.0133, %210 ], [ %.0133, %208 ], [ %.0133, %197 ], [ %.0133, %187 ], [ %.0133, %185 ], [ %.0133, %184 ], [ %.0133, %182 ], [ %.0133, %181 ], [ %.0133, %170 ], [ %.0133, %160 ], [ %.0133, %158 ], [ %.0133, %142 ], [ %.0133, %132 ], [ %.0133, %117 ], [ %.0133, %115 ], [ %.0133, %112 ], [ %.0133, %111 ], [ %.0133, %110 ], [ %.0133, %99 ], [ %.0133, %89 ], [ %.0133, %87 ], [ %.0133, %85 ], [ %.0133, %67 ], [ %.0133, %57 ], [ %.0133, %46 ], [ %.0133, %44 ], [ %.0133, %39 ], [ %.0133, %37 ], [ %.0133, %25 ], [ %.0133, %15 ]
  %.0131.be = phi i32 [ %.0131, %14 ], [ %.0131, %509 ], [ %.0131, %508 ], [ %.0131, %501 ], [ %.0131, %496 ], [ %.0131, %490 ], [ %.0131, %483 ], [ %.0131, %481 ], [ %.0131, %480 ], [ %479, %471 ], [ %.0131, %470 ], [ %.0131, %469 ], [ %.0131, %468 ], [ %.0131, %467 ], [ %.0131, %466 ], [ %.0131, %463 ], [ %.0131, %452 ], [ %.0131, %442 ], [ %.0131, %440 ], [ %.0131, %438 ], [ %.0131, %437 ], [ %.0131, %436 ], [ %.0131, %426 ], [ %.0131, %416 ], [ %.0131, %415 ], [ %.0131, %399 ], [ %.0131, %389 ], [ %.0131, %388 ], [ %.0131, %375 ], [ %.0131, %365 ], [ %.0131, %361 ], [ %.0131, %360 ], [ %.0131, %346 ], [ %.0131, %336 ], [ %.0131, %333 ], [ %.0131, %330 ], [ %.0131, %329 ], [ %.0131, %313 ], [ %.0131, %303 ], [ %.0131, %302 ], [ %.0131, %301 ], [ %.0131, %290 ], [ %.0131, %280 ], [ %.0131, %279 ], [ %.0131, %276 ], [ %.0131, %274 ], [ %.0131, %263 ], [ %.0131, %253 ], [ %.0131, %246 ], [ %.0131, %244 ], [ %228, %220 ], [ %.0131, %210 ], [ %.0131, %208 ], [ %.0131, %197 ], [ %.0131, %187 ], [ %.0131, %185 ], [ %.0131, %184 ], [ %.0131, %182 ], [ %.0131, %181 ], [ %.0131, %170 ], [ %.0131, %160 ], [ %.0131, %158 ], [ %.0131, %142 ], [ %.0131, %132 ], [ %.0131, %117 ], [ %.0131, %115 ], [ %.0131, %112 ], [ %.0131, %111 ], [ %.0131, %110 ], [ %.0131, %99 ], [ %.0131, %89 ], [ %.0131, %87 ], [ %.0131, %85 ], [ %.0131, %67 ], [ %.0131, %57 ], [ %.0131, %46 ], [ %.0131, %44 ], [ %.0131, %39 ], [ %.0131, %37 ], [ %.0131, %25 ], [ %.0131, %15 ]
  %.0129.be = phi i32 [ %.0129, %14 ], [ %.0129, %509 ], [ %.0129, %508 ], [ %.0129, %501 ], [ %.0129, %496 ], [ %.0129, %490 ], [ %489, %483 ], [ %.0129, %481 ], [ %.0129, %480 ], [ %.0129, %471 ], [ %.0129, %470 ], [ %.0129, %469 ], [ %.0129, %468 ], [ %.0129, %467 ], [ %.0129, %466 ], [ %.0129, %463 ], [ %.0129, %452 ], [ %.0129, %442 ], [ %.0129, %440 ], [ %439, %438 ], [ %.0129, %437 ], [ %.0129, %436 ], [ %.0129, %426 ], [ %.0129, %416 ], [ %.0129, %415 ], [ %.0129, %399 ], [ %.0129, %389 ], [ %.0129, %388 ], [ %.0129, %375 ], [ %.0129, %365 ], [ %.0129, %361 ], [ %.0129, %360 ], [ %.0129, %346 ], [ %.0129, %336 ], [ %.0129, %333 ], [ %.0129, %330 ], [ %.0129, %329 ], [ %319, %313 ], [ %.0129, %303 ], [ %.0129, %302 ], [ %.0129, %301 ], [ %.0129, %290 ], [ %.0129, %280 ], [ %.0129, %279 ], [ %.0129, %276 ], [ %.0129, %274 ], [ %.0129, %263 ], [ %.0129, %253 ], [ %.0129, %246 ], [ %.0129, %244 ], [ %.0129, %220 ], [ %.0129, %210 ], [ %.0129, %208 ], [ %.0129, %197 ], [ %.0129, %187 ], [ %.0129, %185 ], [ %.0129, %184 ], [ %.0129, %182 ], [ %.0129, %181 ], [ %.0129, %170 ], [ %.0129, %160 ], [ %.0129, %158 ], [ %.0129, %142 ], [ %.0129, %132 ], [ %.0129, %117 ], [ %.0129, %115 ], [ %.0129, %112 ], [ %.0129, %111 ], [ %.0129, %110 ], [ %.0129, %99 ], [ %.0129, %89 ], [ %.0129, %87 ], [ %.0129, %85 ], [ %.0129, %67 ], [ %.0129, %57 ], [ %.0129, %46 ], [ %.0129, %44 ], [ %.0129, %39 ], [ %.0129, %37 ], [ %.0129, %25 ], [ %.0129, %15 ]
  %.0.be = phi i32 [ %.0, %14 ], [ -121691984, %509 ], [ -854211325, %508 ], [ -164781556, %501 ], [ 124170585, %496 ], [ -2023318084, %490 ], [ 1101553312, %483 ], [ -1006533625, %481 ], [ -1065547760, %480 ], [ 954653133, %471 ], [ -1604525301, %470 ], [ -797981612, %469 ], [ 376217892, %468 ], [ 446052091, %467 ], [ -1627754170, %466 ], [ 106930349, %463 ], [ %461, %452 ], [ %451, %442 ], [ -2145928123, %440 ], [ -482535583, %438 ], [ -2105198093, %437 ], [ 1818262836, %436 ], [ %435, %426 ], [ %425, %416 ], [ 1557569290, %415 ], [ %414, %399 ], [ %398, %389 ], [ 1557569290, %388 ], [ %387, %375 ], [ %374, %365 ], [ %364, %361 ], [ 1818262836, %360 ], [ %359, %346 ], [ %345, %336 ], [ %335, %333 ], [ %332, %330 ], [ -482535583, %329 ], [ %328, %313 ], [ %312, %303 ], [ 1874896270, %302 ], [ 885920845, %301 ], [ %300, %290 ], [ %289, %280 ], [ 885920845, %279 ], [ %278, %276 ], [ %275, %274 ], [ %273, %263 ], [ %262, %253 ], [ %252, %246 ], [ %245, %244 ], [ %243, %220 ], [ %219, %210 ], [ %209, %208 ], [ %207, %197 ], [ %196, %187 ], [ 1874896270, %185 ], [ 133233900, %184 ], [ 713912896, %182 ], [ 713912896, %181 ], [ %180, %170 ], [ %169, %160 ], [ %159, %158 ], [ %157, %142 ], [ %141, %132 ], [ %131, %117 ], [ %116, %115 ], [ 133233900, %112 ], [ 1465287045, %111 ], [ -676206677, %110 ], [ %109, %99 ], [ %98, %89 ], [ -676206677, %87 ], [ %86, %85 ], [ %84, %67 ], [ %66, %57 ], [ %56, %46 ], [ %45, %44 ], [ 1465287045, %39 ], [ %38, %37 ], [ %36, %25 ], [ %24, %15 ]
  br label %14

15:                                               ; preds = %14
  %16 = load i32, i32* @x.2, align 4
  %17 = load i32, i32* @y.3, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 106930349, i32 1252575269
  br label %.backedge

25:                                               ; preds = %14
  %26 = load i32, i32* %8, align 4
  %.neg187 = add i32 %26, -1
  store i32 %.neg187, i32* %8, align 4
  %27 = icmp ne i32 %26, 0
  store i1 %27, i1* %7, align 1
  %28 = load i32, i32* @x.2, align 4
  %29 = load i32, i32* @y.3, align 4
  %30 = add i32 %28, -1
  %31 = mul i32 %30, %28
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %29, 10
  %35 = or i1 %34, %33
  %36 = select i1 %35, i32 -1680434117, i32 1252575269
  br label %.backedge

37:                                               ; preds = %14
  %.0..0..0. = load volatile i1, i1* %7, align 1
  %38 = select i1 %.0..0..0., i32 1191485891, i32 57865923
  br label %.backedge

39:                                               ; preds = %14
  %40 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i32* nonnull %9, i32* nonnull %10, i32* nonnull %11, i32* nonnull %12)
  %41 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %9, i32* nonnull dereferenceable(4) %10)
  %42 = load i32, i32* %41, align 4
  %43 = add i32 %42, 1
  br label %.backedge

44:                                               ; preds = %14
  %.not186 = icmp sgt i32 %.0151, %.0149
  %45 = select i1 %.not186, i32 1394885188, i32 1439025424
  br label %.backedge

46:                                               ; preds = %14
  %47 = add i32 %.0149, %.0151
  %48 = ashr i32 %47, 1
  %49 = load i32, i32* %9, align 4
  %50 = sext i32 %49 to i64
  %51 = sext i32 %48 to i64
  %52 = mul nsw i64 %50, %51
  %53 = add nsw i64 %52, %51
  %54 = load i32, i32* %10, align 4
  %55 = sext i32 %54 to i64
  %.not185 = icmp slt i64 %53, %55
  %56 = select i1 %.not185, i32 -1850783747, i32 -1104288654
  br label %.backedge

57:                                               ; preds = %14
  %58 = load i32, i32* @x.2, align 4
  %59 = load i32, i32* @y.3, align 4
  %60 = add i32 %58, -1
  %61 = mul i32 %60, %58
  %62 = and i32 %61, 1
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %64, %63
  %66 = select i1 %65, i32 -1627754170, i32 1289479649
  br label %.backedge

67:                                               ; preds = %14
  %68 = load i32, i32* %10, align 4
  %69 = sext i32 %68 to i64
  %70 = sext i32 %.0145 to i64
  %71 = mul nsw i64 %69, %70
  %72 = add nsw i64 %71, %70
  %73 = load i32, i32* %9, align 4
  %74 = sext i32 %73 to i64
  %75 = icmp sge i64 %72, %74
  store i1 %75, i1* %6, align 1
  %76 = load i32, i32* @x.2, align 4
  %77 = load i32, i32* @y.3, align 4
  %78 = add i32 %76, -1
  %79 = mul i32 %78, %76
  %80 = and i32 %79, 1
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %77, 10
  %83 = or i1 %82, %81
  %84 = select i1 %83, i32 2083216639, i32 1289479649
  br label %.backedge

85:                                               ; preds = %14
  %.0..0..0.123 = load volatile i1, i1* %6, align 1
  %86 = select i1 %.0..0..0.123, i32 -2026619695, i32 -1850783747
  br label %.backedge

87:                                               ; preds = %14
  %88 = add i32 %.0145, -1
  br label %.backedge

89:                                               ; preds = %14
  %90 = load i32, i32* @x.2, align 4
  %91 = load i32, i32* @y.3, align 4
  %92 = add i32 %90, -1
  %93 = mul i32 %92, %90
  %94 = and i32 %93, 1
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %91, 10
  %97 = or i1 %96, %95
  %98 = select i1 %97, i32 446052091, i32 589722293
  br label %.backedge

99:                                               ; preds = %14
  %100 = add i32 %.0145, 1
  %101 = load i32, i32* @x.2, align 4
  %102 = load i32, i32* @y.3, align 4
  %103 = add i32 %101, -1
  %104 = mul i32 %103, %101
  %105 = and i32 %104, 1
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %102, 10
  %108 = or i1 %107, %106
  %109 = select i1 %108, i32 -2064353734, i32 589722293
  br label %.backedge

110:                                              ; preds = %14
  br label %.backedge

111:                                              ; preds = %14
  br label %.backedge

112:                                              ; preds = %14
  %113 = load i32, i32* %9, align 4
  %114 = sdiv i32 %113, %.0147
  br label %.backedge

115:                                              ; preds = %14
  %.not184 = icmp sgt i32 %.0151, %.0149
  %116 = select i1 %.not184, i32 332659674, i32 814027678
  br label %.backedge

117:                                              ; preds = %14
  %118 = add i32 %.0149, %.0151
  %119 = ashr i32 %118, 1
  %120 = load i32, i32* %9, align 4
  %121 = mul nsw i32 %119, %.0147
  %122 = sub i32 %120, %121
  %123 = load i32, i32* %10, align 4
  %124 = sub i32 %123, %119
  %125 = add i32 %124, 1
  %126 = sext i32 %122 to i64
  %127 = sext i32 %.0147 to i64
  %128 = mul nsw i64 %126, %127
  %129 = add nsw i64 %128, %127
  %130 = sext i32 %125 to i64
  %.not183 = icmp slt i64 %129, %130
  %131 = select i1 %.not183, i32 1519552291, i32 1733083137
  br label %.backedge

132:                                              ; preds = %14
  %133 = load i32, i32* @x.2, align 4
  %134 = load i32, i32* @y.3, align 4
  %135 = add i32 %133, -1
  %136 = mul i32 %135, %133
  %137 = and i32 %136, 1
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %134, 10
  %140 = or i1 %139, %138
  %141 = select i1 %140, i32 376217892, i32 1624898076
  br label %.backedge

142:                                              ; preds = %14
  %143 = sext i32 %.0135 to i64
  %144 = sext i32 %.0147 to i64
  %145 = mul nsw i64 %143, %144
  %146 = add nsw i64 %145, %144
  %147 = sext i32 %.0137 to i64
  %148 = icmp sge i64 %146, %147
  store i1 %148, i1* %5, align 1
  %149 = load i32, i32* @x.2, align 4
  %150 = load i32, i32* @y.3, align 4
  %151 = add i32 %149, -1
  %152 = mul i32 %151, %149
  %153 = and i32 %152, 1
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %150, 10
  %156 = or i1 %155, %154
  %157 = select i1 %156, i32 -268478820, i32 1624898076
  br label %.backedge

158:                                              ; preds = %14
  %.0..0..0.124 = load volatile i1, i1* %5, align 1
  %159 = select i1 %.0..0..0.124, i32 -1213533759, i32 1519552291
  br label %.backedge

160:                                              ; preds = %14
  %161 = load i32, i32* @x.2, align 4
  %162 = load i32, i32* @y.3, align 4
  %163 = add i32 %161, -1
  %164 = mul i32 %163, %161
  %165 = and i32 %164, 1
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %162, 10
  %168 = or i1 %167, %166
  %169 = select i1 %168, i32 -797981612, i32 -1716938618
  br label %.backedge

170:                                              ; preds = %14
  %171 = add i32 %.0145, 1
  %172 = load i32, i32* @x.2, align 4
  %173 = load i32, i32* @y.3, align 4
  %174 = add i32 %172, -1
  %175 = mul i32 %174, %172
  %176 = and i32 %175, 1
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %173, 10
  %179 = or i1 %178, %177
  %180 = select i1 %179, i32 -24591658, i32 -1716938618
  br label %.backedge

181:                                              ; preds = %14
  br label %.backedge

182:                                              ; preds = %14
  %183 = add i32 %.0145, -1
  br label %.backedge

184:                                              ; preds = %14
  br label %.backedge

185:                                              ; preds = %14
  %186 = add i32 %.0147, -1
  br label %.backedge

187:                                              ; preds = %14
  %188 = load i32, i32* @x.2, align 4
  %189 = load i32, i32* @y.3, align 4
  %190 = add i32 %188, -1
  %191 = mul i32 %190, %188
  %192 = and i32 %191, 1
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %189, 10
  %195 = or i1 %194, %193
  %196 = select i1 %195, i32 -1604525301, i32 -711711395
  br label %.backedge

197:                                              ; preds = %14
  %198 = icmp sle i32 %.0151, %.0149
  store i1 %198, i1* %4, align 1
  %199 = load i32, i32* @x.2, align 4
  %200 = load i32, i32* @y.3, align 4
  %201 = add i32 %199, -1
  %202 = mul i32 %201, %199
  %203 = and i32 %202, 1
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %200, 10
  %206 = or i1 %205, %204
  %207 = select i1 %206, i32 634817037, i32 -711711395
  br label %.backedge

208:                                              ; preds = %14
  %.0..0..0.125 = load volatile i1, i1* %4, align 1
  %209 = select i1 %.0..0..0.125, i32 -433655468, i32 355122817
  br label %.backedge

210:                                              ; preds = %14
  %211 = load i32, i32* @x.2, align 4
  %212 = load i32, i32* @y.3, align 4
  %213 = add i32 %211, -1
  %214 = mul i32 %213, %211
  %215 = and i32 %214, 1
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %212, 10
  %218 = or i1 %217, %216
  %219 = select i1 %218, i32 954653133, i32 1622714462
  br label %.backedge

220:                                              ; preds = %14
  %221 = add i32 %.0149, %.0151
  %222 = ashr i32 %221, 1
  %223 = load i32, i32* %9, align 4
  %224 = mul nsw i32 %.0143, %.0147
  %225 = add i32 %224, %222
  %226 = sub i32 %223, %225
  %227 = load i32, i32* %10, align 4
  %228 = sub i32 %227, %.0143
  %229 = sext i32 %226 to i64
  %230 = sext i32 %.0147 to i64
  %231 = mul nsw i64 %229, %230
  %232 = add nsw i64 %231, %230
  %233 = sext i32 %228 to i64
  %234 = icmp sge i64 %232, %233
  store i1 %234, i1* %3, align 1
  %235 = load i32, i32* @x.2, align 4
  %236 = load i32, i32* @y.3, align 4
  %237 = add i32 %235, -1
  %238 = mul i32 %237, %235
  %239 = and i32 %238, 1
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %236, 10
  %242 = or i1 %241, %240
  %243 = select i1 %242, i32 804176089, i32 1622714462
  br label %.backedge

244:                                              ; preds = %14
  %.0..0..0.126 = load volatile i1, i1* %3, align 1
  %245 = select i1 %.0..0..0.126, i32 -393335187, i32 1986739874
  br label %.backedge

246:                                              ; preds = %14
  %247 = sext i32 %.0131 to i64
  %248 = sext i32 %.0147 to i64
  %249 = mul nsw i64 %247, %248
  %250 = add nsw i64 %249, %248
  %251 = sext i32 %.0133 to i64
  %.not182 = icmp slt i64 %250, %251
  %252 = select i1 %.not182, i32 1986739874, i32 -1846739544
  br label %.backedge

253:                                              ; preds = %14
  %254 = load i32, i32* @x.2, align 4
  %255 = load i32, i32* @y.3, align 4
  %256 = add i32 %254, -1
  %257 = mul i32 %256, %254
  %258 = and i32 %257, 1
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %255, 10
  %261 = or i1 %260, %259
  %262 = select i1 %261, i32 -1065547760, i32 -940016526
  br label %.backedge

263:                                              ; preds = %14
  %264 = icmp sgt i32 %.0133, -1
  store i1 %264, i1* %2, align 1
  %265 = load i32, i32* @x.2, align 4
  %266 = load i32, i32* @y.3, align 4
  %267 = add i32 %265, -1
  %268 = mul i32 %267, %265
  %269 = and i32 %268, 1
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %266, 10
  %272 = or i1 %271, %270
  %273 = select i1 %272, i32 -1552922620, i32 -940016526
  br label %.backedge

274:                                              ; preds = %14
  %.0..0..0.127 = load volatile i1, i1* %2, align 1
  %275 = select i1 %.0..0..0.127, i32 2058263892, i32 1986739874
  br label %.backedge

276:                                              ; preds = %14
  %277 = icmp sgt i32 %.0131, -1
  %278 = select i1 %277, i32 155192061, i32 1986739874
  br label %.backedge

279:                                              ; preds = %14
  %.neg181 = add i32 %.0145, 1
  br label %.backedge

280:                                              ; preds = %14
  %281 = load i32, i32* @x.2, align 4
  %282 = load i32, i32* @y.3, align 4
  %283 = add i32 %281, -1
  %284 = mul i32 %283, %281
  %285 = and i32 %284, 1
  %286 = icmp eq i32 %285, 0
  %287 = icmp slt i32 %282, 10
  %288 = or i1 %287, %286
  %289 = select i1 %288, i32 -1006533625, i32 167553404
  br label %.backedge

290:                                              ; preds = %14
  %291 = add i32 %.0145, -1
  %292 = load i32, i32* @x.2, align 4
  %293 = load i32, i32* @y.3, align 4
  %294 = add i32 %292, -1
  %295 = mul i32 %294, %292
  %296 = and i32 %295, 1
  %297 = icmp eq i32 %296, 0
  %298 = icmp slt i32 %293, 10
  %299 = or i1 %298, %297
  %300 = select i1 %299, i32 1969795512, i32 167553404
  br label %.backedge

301:                                              ; preds = %14
  br label %.backedge

302:                                              ; preds = %14
  br label %.backedge

303:                                              ; preds = %14
  %304 = load i32, i32* @x.2, align 4
  %305 = load i32, i32* @y.3, align 4
  %306 = add i32 %304, -1
  %307 = mul i32 %306, %304
  %308 = and i32 %307, 1
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %305, 10
  %311 = or i1 %310, %309
  %312 = select i1 %311, i32 1101553312, i32 850054846
  br label %.backedge

313:                                              ; preds = %14
  %314 = load i32, i32* %10, align 4
  %315 = load i32, i32* %9, align 4
  %316 = mul nsw i32 %.0143, %.0147
  %.neg178 = add i32 %316, %.0141
  %.neg179 = sub i32 %.neg178, %315
  %.neg180 = mul i32 %.neg179, %.0147
  %317 = sub i32 %314, %.0143
  %318 = add i32 %317, %.neg180
  %319 = load i32, i32* %11, align 4
  %320 = load i32, i32* @x.2, align 4
  %321 = load i32, i32* @y.3, align 4
  %322 = add i32 %320, -1
  %323 = mul i32 %322, %320
  %324 = and i32 %323, 1
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %321, 10
  %327 = or i1 %326, %325
  %328 = select i1 %327, i32 -558872007, i32 850054846
  br label %.backedge

329:                                              ; preds = %14
  br label %.backedge

330:                                              ; preds = %14
  %331 = load i32, i32* %12, align 4
  %.not177 = icmp sgt i32 %.0129, %331
  %332 = select i1 %.not177, i32 -898891310, i32 -207831871
  br label %.backedge

333:                                              ; preds = %14
  %.neg175 = add i32 %.0147, 1
  %334 = mul nsw i32 %.0143, %.neg175
  %.not176 = icmp sgt i32 %.0129, %334
  %335 = select i1 %.not176, i32 2044258070, i32 -571798941
  br label %.backedge

336:                                              ; preds = %14
  %337 = load i32, i32* @x.2, align 4
  %338 = load i32, i32* @y.3, align 4
  %339 = add i32 %337, -1
  %340 = mul i32 %339, %337
  %341 = and i32 %340, 1
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %338, 10
  %344 = or i1 %343, %342
  %345 = select i1 %344, i32 -2023318084, i32 -1911925723
  br label %.backedge

346:                                              ; preds = %14
  %347 = add i32 %.0147, 1
  %348 = srem i32 %.0129, %347
  %349 = icmp eq i32 %348, 0
  %.neg174 = select i1 %349, i32 66, i32 65
  %350 = call i32 @putchar(i32 %.neg174)
  %351 = load i32, i32* @x.2, align 4
  %352 = load i32, i32* @y.3, align 4
  %353 = add i32 %351, -1
  %354 = mul i32 %353, %351
  %355 = and i32 %354, 1
  %356 = icmp eq i32 %355, 0
  %357 = icmp slt i32 %352, 10
  %358 = or i1 %357, %356
  %359 = select i1 %358, i32 866845417, i32 -1911925723
  br label %.backedge

360:                                              ; preds = %14
  br label %.backedge

361:                                              ; preds = %14
  %.neg170.neg = xor i32 %.0147, -1
  %.neg171 = mul i32 %.0143, %.neg170.neg
  %362 = add i32 %.0129, %.neg171
  %363 = add i32 %.0139, %.0141
  %.not172 = icmp sgt i32 %362, %363
  %364 = select i1 %.not172, i32 -2123012070, i32 -1717049089
  br label %.backedge

365:                                              ; preds = %14
  %366 = load i32, i32* @x.2, align 4
  %367 = load i32, i32* @y.3, align 4
  %368 = add i32 %366, -1
  %369 = mul i32 %368, %366
  %370 = and i32 %369, 1
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %367, 10
  %373 = or i1 %372, %371
  %374 = select i1 %373, i32 124170585, i32 -573545200
  br label %.backedge

375:                                              ; preds = %14
  %.neg166 = xor i32 %.0147, -1
  %.neg167 = mul i32 %.0143, %.neg166
  %376 = add i32 %.0129, %.neg167
  %377 = icmp sgt i32 %376, %.0141
  %.neg169 = select i1 %377, i32 66, i32 65
  %378 = call i32 @putchar(i32 %.neg169)
  %379 = load i32, i32* @x.2, align 4
  %380 = load i32, i32* @y.3, align 4
  %381 = add i32 %379, -1
  %382 = mul i32 %381, %379
  %383 = and i32 %382, 1
  %384 = icmp eq i32 %383, 0
  %385 = icmp slt i32 %380, 10
  %386 = or i1 %385, %384
  %387 = select i1 %386, i32 -1081431478, i32 -573545200
  br label %.backedge

388:                                              ; preds = %14
  br label %.backedge

389:                                              ; preds = %14
  %390 = load i32, i32* @x.2, align 4
  %391 = load i32, i32* @y.3, align 4
  %392 = add i32 %390, -1
  %393 = mul i32 %392, %390
  %394 = and i32 %393, 1
  %395 = icmp eq i32 %394, 0
  %396 = icmp slt i32 %391, 10
  %397 = or i1 %396, %395
  %398 = select i1 %397, i32 -164781556, i32 642670938
  br label %.backedge

399:                                              ; preds = %14
  %.neg162 = xor i32 %.0147, -1
  %.neg163 = mul i32 %.0143, %.neg162
  %400 = add i32 %.0141, %.0139
  %401 = sub i32 %.neg163, %400
  %402 = add i32 %401, %.0129
  %.neg164 = add i32 %.0147, 1
  %403 = srem i32 %402, %.neg164
  %.not165 = icmp eq i32 %403, 1
  %404 = select i1 %.not165, i32 65, i32 66
  %405 = call i32 @putchar(i32 %404)
  %406 = load i32, i32* @x.2, align 4
  %407 = load i32, i32* @y.3, align 4
  %408 = add i32 %406, -1
  %409 = mul i32 %408, %406
  %410 = and i32 %409, 1
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %407, 10
  %413 = or i1 %412, %411
  %414 = select i1 %413, i32 371013698, i32 642670938
  br label %.backedge

415:                                              ; preds = %14
  br label %.backedge

416:                                              ; preds = %14
  %417 = load i32, i32* @x.2, align 4
  %418 = load i32, i32* @y.3, align 4
  %419 = add i32 %417, -1
  %420 = mul i32 %419, %417
  %421 = and i32 %420, 1
  %422 = icmp eq i32 %421, 0
  %423 = icmp slt i32 %418, 10
  %424 = or i1 %423, %422
  %425 = select i1 %424, i32 -854211325, i32 -1032913458
  br label %.backedge

426:                                              ; preds = %14
  %427 = load i32, i32* @x.2, align 4
  %428 = load i32, i32* @y.3, align 4
  %429 = add i32 %427, -1
  %430 = mul i32 %429, %427
  %431 = and i32 %430, 1
  %432 = icmp eq i32 %431, 0
  %433 = icmp slt i32 %428, 10
  %434 = or i1 %433, %432
  %435 = select i1 %434, i32 -187993024, i32 -1032913458
  br label %.backedge

436:                                              ; preds = %14
  br label %.backedge

437:                                              ; preds = %14
  br label %.backedge

438:                                              ; preds = %14
  %439 = add i32 %.0129, 1
  br label %.backedge

440:                                              ; preds = %14
  %441 = call i32 @putchar(i32 10)
  br label %.backedge

442:                                              ; preds = %14
  %443 = load i32, i32* @x.2, align 4
  %444 = load i32, i32* @y.3, align 4
  %445 = add i32 %443, -1
  %446 = mul i32 %445, %443
  %447 = and i32 %446, 1
  %448 = icmp eq i32 %447, 0
  %449 = icmp slt i32 %444, 10
  %450 = or i1 %449, %448
  %451 = select i1 %450, i32 -121691984, i32 1153291112
  br label %.backedge

452:                                              ; preds = %14
  store i32 0, i32* %1, align 4
  %453 = load i32, i32* @x.2, align 4
  %454 = load i32, i32* @y.3, align 4
  %455 = add i32 %453, -1
  %456 = mul i32 %455, %453
  %457 = and i32 %456, 1
  %458 = icmp eq i32 %457, 0
  %459 = icmp slt i32 %454, 10
  %460 = or i1 %459, %458
  %461 = select i1 %460, i32 -871748747, i32 1153291112
  br label %.backedge

462:                                              ; preds = %14
  %.0..0..0.128 = load volatile i32, i32* %1, align 4
  ret i32 %.0..0..0.128

463:                                              ; preds = %14
  %464 = load i32, i32* %8, align 4
  %465 = add i32 %464, -1
  store i32 %465, i32* %8, align 4
  br label %.backedge

466:                                              ; preds = %14
  br label %.backedge

467:                                              ; preds = %14
  %.neg161 = add i32 %.0145, 1
  br label %.backedge

468:                                              ; preds = %14
  br label %.backedge

469:                                              ; preds = %14
  %.neg160 = add i32 %.0145, 1
  br label %.backedge

470:                                              ; preds = %14
  br label %.backedge

471:                                              ; preds = %14
  %472 = add i32 %.0149, %.0151
  %473 = ashr i32 %472, 1
  %474 = load i32, i32* %9, align 4
  %475 = mul nsw i32 %.0143, %.0147
  %476 = add i32 %475, %473
  %477 = sub i32 %474, %476
  %478 = load i32, i32* %10, align 4
  %479 = sub i32 %478, %.0143
  br label %.backedge

480:                                              ; preds = %14
  br label %.backedge

481:                                              ; preds = %14
  %482 = add i32 %.0145, -1
  br label %.backedge

483:                                              ; preds = %14
  %484 = load i32, i32* %10, align 4
  %485 = load i32, i32* %9, align 4
  %486 = mul nsw i32 %.0143, %.0147
  %.neg157 = add i32 %486, %.0141
  %.neg158 = sub i32 %.neg157, %485
  %.neg159 = mul i32 %.neg158, %.0147
  %487 = sub i32 %484, %.0143
  %488 = add i32 %487, %.neg159
  %489 = load i32, i32* %11, align 4
  br label %.backedge

490:                                              ; preds = %14
  %491 = add i32 %.0147, 1
  %492 = srem i32 %.0129, %491
  %493 = icmp eq i32 %492, 0
  %494 = select i1 %493, i32 66, i32 65
  %495 = call i32 @putchar(i32 %494)
  br label %.backedge

496:                                              ; preds = %14
  %.neg155 = xor i32 %.0147, -1
  %.neg156 = mul i32 %.0143, %.neg155
  %497 = add i32 %.0129, %.neg156
  %498 = icmp sgt i32 %497, %.0141
  %499 = select i1 %498, i32 66, i32 65
  %500 = call i32 @putchar(i32 %499)
  br label %.backedge

501:                                              ; preds = %14
  %.neg = xor i32 %.0147, -1
  %.neg153 = mul i32 %.0143, %.neg
  %502 = add i32 %.0141, %.0139
  %503 = sub i32 %.neg153, %502
  %504 = add i32 %503, %.0129
  %.neg154 = add i32 %.0147, 1
  %505 = srem i32 %504, %.neg154
  %.not = icmp eq i32 %505, 1
  %506 = select i1 %.not, i32 65, i32 66
  %507 = call i32 @putchar(i32 %506)
  br label %.backedge

508:                                              ; preds = %14
  br label %.backedge

509:                                              ; preds = %14
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #5

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #6 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = load i32, i32* %0, align 4
  store i32 %5, i32* %4, align 4
  %6 = load i32, i32* %1, align 4
  store i32 %6, i32* %3, align 4
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.07.ph = phi i32* [ undef, %2 ], [ %.07.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ -928908914, %2 ], [ -1312949210, %.outer.backedge ]
  br label %.outer9

.outer9:                                          ; preds = %.outer, %8
  %.0.ph10 = phi i32 [ %.0.ph, %.outer ], [ %10, %8 ]
  br label %7

7:                                                ; preds = %.outer9, %7
  switch i32 %.0.ph10, label %7 [
    i32 -928908914, label %8
    i32 -1520306042, label %.outer.backedge
    i32 -1408264575, label %11
    i32 -1312949210, label %12
  ]

8:                                                ; preds = %7
  %.0..0..0.5 = load volatile i32, i32* %4, align 4
  %.0..0..0.6 = load volatile i32, i32* %3, align 4
  %9 = icmp slt i32 %.0..0..0.5, %.0..0..0.6
  %10 = select i1 %9, i32 -1520306042, i32 -1408264575
  br label %.outer9

11:                                               ; preds = %7
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %7, %11
  %.07.ph.be = phi i32* [ %0, %11 ], [ %1, %7 ]
  br label %.outer

12:                                               ; preds = %7
  ret i32* %.07.ph
}

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s471660467.cpp() #0 section ".text.startup" {
  tail call fastcc void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
