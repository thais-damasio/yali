; ModuleID = 'build_ollvm/programs/p03466/s533296089.ll'
source_filename = "Project_CodeNet_C++1400/p03466/s533296089.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

$_Z4readv = comdat any

$_ZSt3maxIiERKT_S2_S2_ = comdat any

$_ZSt3minIiERKT_S2_S2_ = comdat any

@stack = local_unnamed_addr global [20 x i32] zeroinitializer, align 16
@ans = local_unnamed_addr global [105 x i32] zeroinitializer, align 16
@A = global i32 0, align 4
@B = global i32 0, align 4
@C = global i32 0, align 4
@D = global i32 0, align 4
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.1 = common local_unnamed_addr global i32 0
@y.2 = common local_unnamed_addr global i32 0
@x.3 = common local_unnamed_addr global i32 0
@y.4 = common local_unnamed_addr global i32 0
@x.5 = common local_unnamed_addr global i32 0
@y.6 = common local_unnamed_addr global i32 0
@x.7 = common local_unnamed_addr global i32 0
@y.8 = common local_unnamed_addr global i32 0
@x.9 = common local_unnamed_addr global i32 0
@y.10 = common local_unnamed_addr global i32 0
@x.11 = common local_unnamed_addr global i32 0
@y.12 = common local_unnamed_addr global i32 0

; Function Attrs: nofree noinline norecurse nounwind uwtable
define zeroext i1 @_Z5checkii(i32 %0, i32 %1) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = sext i32 %0 to i64
  %6 = sext i32 %1 to i64
  %7 = mul nsw i64 %6, %5
  store i64 %7, i64* %4, align 8
  %8 = load i32, i32* @A, align 4
  %9 = sext i32 %8 to i64
  store i64 %9, i64* %3, align 8
  %10 = load i32, i32* @B, align 4
  %11 = sext i32 %10 to i64
  br label %.outer.outer

.outer.outer:                                     ; preds = %2, %18
  %.019.ph.ph = phi i1 [ undef, %2 ], [ %24, %18 ]
  %.017.ph.ph = phi i64 [ %7, %2 ], [ %19, %18 ]
  %.015.ph.ph = phi i64 [ %5, %2 ], [ %23, %18 ]
  %.0.ph.ph = phi i32 [ -152891747, %2 ], [ -1611994223, %18 ]
  %12 = icmp sgt i64 %.015.ph.ph, %11
  %13 = select i1 %12, i32 1112282886, i32 1309717635
  br label %.outer

.outer:                                           ; preds = %14, %.outer.outer
  %.019.ph = phi i1 [ %.019.ph.ph, %.outer.outer ], [ false, %14 ]
  %.0.ph = phi i32 [ %.0.ph.ph, %.outer.outer ], [ -1611994223, %14 ]
  br label %.outer21

.outer21:                                         ; preds = %.outer21.backedge, %.outer
  %.0.ph22 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph22.be, %.outer21.backedge ]
  br label %14

14:                                               ; preds = %.outer21, %14
  switch i32 %.0.ph22, label %14 [
    i32 -152891747, label %15
    i32 -588982046, label %.outer21.backedge
    i32 1112282886, label %.outer
    i32 1309717635, label %18
    i32 -1611994223, label %25
  ]

15:                                               ; preds = %14
  %.0..0..0.13 = load volatile i64, i64* %4, align 8
  %.0..0..0.14 = load volatile i64, i64* %3, align 8
  %16 = icmp sgt i64 %.0..0..0.13, %.0..0..0.14
  %17 = select i1 %16, i32 1112282886, i32 -588982046
  br label %.outer21.backedge

.outer21.backedge:                                ; preds = %14, %15
  %.0.ph22.be = phi i32 [ %17, %15 ], [ %13, %14 ]
  br label %.outer21

18:                                               ; preds = %14
  %19 = sub i64 %9, %.017.ph.ph
  %20 = xor i64 %.015.ph.ph, -1
  %21 = add i64 %20, %6
  %22 = add i64 %21, %11
  %23 = sdiv i64 %22, %6
  %24 = icmp sle i64 %23, %19
  br label %.outer.outer

25:                                               ; preds = %14
  ret i1 %.019.ph
}

; Function Attrs: nofree noinline nounwind uwtable
define void @_Z6print1iii(i32 %0, i32 %1, i32 %2) local_unnamed_addr #1 {
  %4 = alloca i1, align 1
  %5 = add i32 %2, 1
  br label %6

6:                                                ; preds = %.backedge, %3
  %.014 = phi i32 [ %0, %3 ], [ %.014.be, %.backedge ]
  %.0 = phi i32 [ -1873211889, %3 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1873211889, label %7
    i32 -1424541230, label %9
    i32 -649073940, label %19
    i32 -1450557497, label %33
    i32 104402904, label %35
    i32 -83755524, label %37
    i32 61362571, label %39
    i32 -492672956, label %40
    i32 -1536462103, label %50
    i32 1036104121, label %61
    i32 -1992129960, label %62
    i32 1300194474, label %63
    i32 -1270731996, label %64
  ]

.backedge:                                        ; preds = %6, %64, %63, %61, %50, %40, %39, %37, %35, %33, %19, %9, %7
  %.014.be = phi i32 [ %.014, %6 ], [ %65, %64 ], [ %.014, %63 ], [ %.014, %61 ], [ %51, %50 ], [ %.014, %40 ], [ %.014, %39 ], [ %.014, %37 ], [ %.014, %35 ], [ %.014, %33 ], [ %.014, %19 ], [ %.014, %9 ], [ %.014, %7 ]
  %.0.be = phi i32 [ %.0, %6 ], [ -1536462103, %64 ], [ -649073940, %63 ], [ -1873211889, %61 ], [ %60, %50 ], [ %49, %40 ], [ -492672956, %39 ], [ 61362571, %37 ], [ 61362571, %35 ], [ %34, %33 ], [ %32, %19 ], [ %18, %9 ], [ %8, %7 ]
  br label %6

7:                                                ; preds = %6
  %.not = icmp sgt i32 %.014, %1
  %8 = select i1 %.not, i32 -1992129960, i32 -1424541230
  br label %.backedge

9:                                                ; preds = %6
  %10 = load i32, i32* @x.1, align 4
  %11 = load i32, i32* @y.2, align 4
  %12 = add i32 %10, -1
  %13 = mul i32 %12, %10
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %11, 10
  %17 = or i1 %16, %15
  %18 = select i1 %17, i32 -649073940, i32 1300194474
  br label %.backedge

19:                                               ; preds = %6
  %20 = add i32 %.014, -1
  %21 = srem i32 %20, %5
  %22 = add i32 %21, 1
  %23 = icmp sle i32 %22, %2
  store i1 %23, i1* %4, align 1
  %24 = load i32, i32* @x.1, align 4
  %25 = load i32, i32* @y.2, align 4
  %26 = add i32 %24, -1
  %27 = mul i32 %26, %24
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %25, 10
  %31 = or i1 %30, %29
  %32 = select i1 %31, i32 -1450557497, i32 1300194474
  br label %.backedge

33:                                               ; preds = %6
  %.0..0..0. = load volatile i1, i1* %4, align 1
  %34 = select i1 %.0..0..0., i32 104402904, i32 -83755524
  br label %.backedge

35:                                               ; preds = %6
  %36 = tail call i32 @putchar(i32 65)
  br label %.backedge

37:                                               ; preds = %6
  %38 = tail call i32 @putchar(i32 66)
  br label %.backedge

39:                                               ; preds = %6
  br label %.backedge

40:                                               ; preds = %6
  %41 = load i32, i32* @x.1, align 4
  %42 = load i32, i32* @y.2, align 4
  %43 = add i32 %41, -1
  %44 = mul i32 %43, %41
  %45 = and i32 %44, 1
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %42, 10
  %48 = or i1 %47, %46
  %49 = select i1 %48, i32 -1536462103, i32 -1270731996
  br label %.backedge

50:                                               ; preds = %6
  %51 = add i32 %.014, 1
  %52 = load i32, i32* @x.1, align 4
  %53 = load i32, i32* @y.2, align 4
  %54 = add i32 %52, -1
  %55 = mul i32 %54, %52
  %56 = and i32 %55, 1
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %53, 10
  %59 = or i1 %58, %57
  %60 = select i1 %59, i32 1036104121, i32 -1270731996
  br label %.backedge

61:                                               ; preds = %6
  br label %.backedge

62:                                               ; preds = %6
  ret void

63:                                               ; preds = %6
  br label %.backedge

64:                                               ; preds = %6
  %65 = add i32 %.014, 1
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #2

; Function Attrs: nofree noinline nounwind uwtable
define void @_Z6print2iii(i32 %0, i32 %1, i32 %2) local_unnamed_addr #1 {
  %4 = alloca i1, align 1
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i1, align 1
  %10 = alloca i1, align 1
  %11 = load i32, i32* @x.3, align 4
  %12 = load i32, i32* @y.4, align 4
  %13 = add i32 %11, -1
  %14 = mul i32 %13, %11
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %10, align 1
  %17 = icmp slt i32 %12, 10
  store i1 %17, i1* %9, align 1
  br label %18

18:                                               ; preds = %.backedge, %3
  %.0 = phi i32 [ 1156580047, %3 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1156580047, label %19
    i32 6338045, label %22
    i32 639344619, label %36
    i32 -167904657, label %37
    i32 1345756660, label %41
    i32 -1888305221, label %51
    i32 415639718, label %72
    i32 -2120293523, label %74
    i32 -924517147, label %76
    i32 -1258026488, label %86
    i32 -1969402699, label %97
    i32 1486552955, label %98
    i32 1823249419, label %108
    i32 -846000294, label %118
    i32 -1255622303, label %119
    i32 800781444, label %121
    i32 -1114290521, label %122
    i32 415414071, label %123
    i32 -1064098674, label %133
    i32 -505421859, label %135
  ]

.backedge:                                        ; preds = %18, %135, %133, %123, %122, %119, %118, %108, %98, %97, %86, %76, %74, %72, %51, %41, %37, %36, %22, %19
  %.0.be = phi i32 [ %.0, %18 ], [ 1823249419, %135 ], [ -1258026488, %133 ], [ -1888305221, %123 ], [ 6338045, %122 ], [ -167904657, %119 ], [ -1255622303, %118 ], [ %117, %108 ], [ %107, %98 ], [ 1486552955, %97 ], [ %96, %86 ], [ %85, %76 ], [ 1486552955, %74 ], [ %73, %72 ], [ %71, %51 ], [ %50, %41 ], [ %40, %37 ], [ -167904657, %36 ], [ %35, %22 ], [ %21, %19 ]
  br label %18

19:                                               ; preds = %18
  %.0..0..0. = load volatile i1, i1* %10, align 1
  %.0..0..0.1 = load volatile i1, i1* %9, align 1
  %20 = or i1 %.0..0..0., %.0..0..0.1
  %21 = select i1 %20, i32 6338045, i32 -1114290521
  br label %.backedge

22:                                               ; preds = %18
  %23 = alloca i32, align 4
  store i32* %23, i32** %8, align 8
  %24 = alloca i32, align 4
  store i32* %24, i32** %7, align 8
  %25 = alloca i32, align 4
  store i32* %25, i32** %6, align 8
  %26 = alloca i32, align 4
  store i32* %26, i32** %5, align 8
  %.0..0..0.2 = load volatile i32*, i32** %8, align 8
  store i32 %1, i32* %.0..0..0.2, align 4
  %.0..0..0.4 = load volatile i32*, i32** %7, align 8
  store i32 %2, i32* %.0..0..0.4, align 4
  %.0..0..0.9 = load volatile i32*, i32** %6, align 8
  store i32 %0, i32* %.0..0..0.9, align 4
  %27 = load i32, i32* @x.3, align 4
  %28 = load i32, i32* @y.4, align 4
  %29 = add i32 %27, -1
  %30 = mul i32 %29, %27
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %28, 10
  %34 = or i1 %33, %32
  %35 = select i1 %34, i32 639344619, i32 -1114290521
  br label %.backedge

36:                                               ; preds = %18
  br label %.backedge

37:                                               ; preds = %18
  %.0..0..0.10 = load volatile i32*, i32** %6, align 8
  %38 = load i32, i32* %.0..0..0.10, align 4
  %.0..0..0.3 = load volatile i32*, i32** %8, align 8
  %39 = load i32, i32* %.0..0..0.3, align 4
  %.not = icmp sgt i32 %38, %39
  %40 = select i1 %.not, i32 800781444, i32 1345756660
  br label %.backedge

41:                                               ; preds = %18
  %42 = load i32, i32* @x.3, align 4
  %43 = load i32, i32* @y.4, align 4
  %44 = add i32 %42, -1
  %45 = mul i32 %44, %42
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %43, 10
  %49 = or i1 %48, %47
  %50 = select i1 %49, i32 -1888305221, i32 415414071
  br label %.backedge

51:                                               ; preds = %18
  %52 = load i32, i32* @A, align 4
  %53 = load i32, i32* @B, align 4
  %.0..0..0.11 = load volatile i32*, i32** %6, align 8
  %54 = load i32, i32* %.0..0..0.11, align 4
  %55 = add i32 %53, %52
  %56 = sub i32 %55, %54
  %.0..0..0.5 = load volatile i32*, i32** %7, align 8
  %57 = load i32, i32* %.0..0..0.5, align 4
  %58 = add i32 %57, 1
  %59 = srem i32 %56, %58
  %.neg20 = add i32 %59, 1
  %.0..0..0.15 = load volatile i32*, i32** %5, align 8
  store i32 %.neg20, i32* %.0..0..0.15, align 4
  %.0..0..0.16 = load volatile i32*, i32** %5, align 8
  %60 = load i32, i32* %.0..0..0.16, align 4
  %.0..0..0.6 = load volatile i32*, i32** %7, align 8
  %61 = load i32, i32* %.0..0..0.6, align 4
  %62 = icmp sle i32 %60, %61
  store i1 %62, i1* %4, align 1
  %63 = load i32, i32* @x.3, align 4
  %64 = load i32, i32* @y.4, align 4
  %65 = add i32 %63, -1
  %66 = mul i32 %65, %63
  %67 = and i32 %66, 1
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %64, 10
  %70 = or i1 %69, %68
  %71 = select i1 %70, i32 415639718, i32 415414071
  br label %.backedge

72:                                               ; preds = %18
  %.0..0..0.19 = load volatile i1, i1* %4, align 1
  %73 = select i1 %.0..0..0.19, i32 -2120293523, i32 -924517147
  br label %.backedge

74:                                               ; preds = %18
  %75 = call i32 @putchar(i32 66)
  br label %.backedge

76:                                               ; preds = %18
  %77 = load i32, i32* @x.3, align 4
  %78 = load i32, i32* @y.4, align 4
  %79 = add i32 %77, -1
  %80 = mul i32 %79, %77
  %81 = and i32 %80, 1
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %78, 10
  %84 = or i1 %83, %82
  %85 = select i1 %84, i32 -1258026488, i32 -1064098674
  br label %.backedge

86:                                               ; preds = %18
  %87 = call i32 @putchar(i32 65)
  %88 = load i32, i32* @x.3, align 4
  %89 = load i32, i32* @y.4, align 4
  %90 = add i32 %88, -1
  %91 = mul i32 %90, %88
  %92 = and i32 %91, 1
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %89, 10
  %95 = or i1 %94, %93
  %96 = select i1 %95, i32 -1969402699, i32 -1064098674
  br label %.backedge

97:                                               ; preds = %18
  br label %.backedge

98:                                               ; preds = %18
  %99 = load i32, i32* @x.3, align 4
  %100 = load i32, i32* @y.4, align 4
  %101 = add i32 %99, -1
  %102 = mul i32 %101, %99
  %103 = and i32 %102, 1
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %100, 10
  %106 = or i1 %105, %104
  %107 = select i1 %106, i32 1823249419, i32 -505421859
  br label %.backedge

108:                                              ; preds = %18
  %109 = load i32, i32* @x.3, align 4
  %110 = load i32, i32* @y.4, align 4
  %111 = add i32 %109, -1
  %112 = mul i32 %111, %109
  %113 = and i32 %112, 1
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %110, 10
  %116 = or i1 %115, %114
  %117 = select i1 %116, i32 -846000294, i32 -505421859
  br label %.backedge

118:                                              ; preds = %18
  br label %.backedge

119:                                              ; preds = %18
  %.0..0..0.12 = load volatile i32*, i32** %6, align 8
  %120 = load i32, i32* %.0..0..0.12, align 4
  %.neg = add i32 %120, 1
  %.0..0..0.13 = load volatile i32*, i32** %6, align 8
  store i32 %.neg, i32* %.0..0..0.13, align 4
  br label %.backedge

121:                                              ; preds = %18
  ret void

122:                                              ; preds = %18
  br label %.backedge

123:                                              ; preds = %18
  %124 = load i32, i32* @A, align 4
  %125 = load i32, i32* @B, align 4
  %.0..0..0.14 = load volatile i32*, i32** %6, align 8
  %126 = load i32, i32* %.0..0..0.14, align 4
  %127 = add i32 %125, %124
  %128 = sub i32 %127, %126
  %.0..0..0.7 = load volatile i32*, i32** %7, align 8
  %129 = load i32, i32* %.0..0..0.7, align 4
  %130 = add i32 %129, 1
  %131 = srem i32 %128, %130
  %132 = add i32 %131, 1
  %.0..0..0.17 = load volatile i32*, i32** %5, align 8
  store i32 %132, i32* %.0..0..0.17, align 4
  %.0..0..0.18 = load volatile i32*, i32** %5, align 8
  %.0..0..0.8 = load volatile i32*, i32** %7, align 8
  br label %.backedge

133:                                              ; preds = %18
  %134 = call i32 @putchar(i32 65)
  br label %.backedge

135:                                              ; preds = %18
  br label %.backedge
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() local_unnamed_addr #3 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = tail call i32 @_Z4readv()
  br label %7

7:                                                ; preds = %.backedge, %0
  %.069 = phi i32 [ undef, %0 ], [ %.069.be, %.backedge ]
  %.067 = phi i32 [ undef, %0 ], [ %.067.be, %.backedge ]
  %.065 = phi i32 [ undef, %0 ], [ %.065.be, %.backedge ]
  %.063 = phi i32 [ undef, %0 ], [ %.063.be, %.backedge ]
  %.061 = phi i32 [ undef, %0 ], [ %.061.be, %.backedge ]
  %.059 = phi i32 [ undef, %0 ], [ %.059.be, %.backedge ]
  %.057 = phi i32 [ undef, %0 ], [ %.057.be, %.backedge ]
  %.055 = phi i32 [ undef, %0 ], [ %.055.be, %.backedge ]
  %.053 = phi i32 [ undef, %0 ], [ %.053.be, %.backedge ]
  %.051 = phi i32 [ %6, %0 ], [ %.051.be, %.backedge ]
  %.0 = phi i32 [ 632095846, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 632095846, label %8
    i32 1586389652, label %18
    i32 1378564378, label %30
    i32 -494483901, label %32
    i32 -409321417, label %48
    i32 1262412202, label %50
    i32 -1232735062, label %55
    i32 920244382, label %57
    i32 99776242, label %67
    i32 624790831, label %78
    i32 1243916028, label %79
    i32 -2063268297, label %80
    i32 -1168406920, label %92
    i32 588168690, label %95
    i32 -1612298182, label %100
    i32 -1374020321, label %103
    i32 1882392530, label %105
    i32 775439776, label %107
    i32 -525042928, label %111
    i32 -1186507312, label %121
    i32 -523841142, label %132
    i32 1643832742, label %133
    i32 -2032173242, label %135
    i32 542208525, label %136
    i32 -957890368, label %138
    i32 -1140271872, label %148
    i32 812692607, label %161
    i32 -2074395012, label %162
    i32 -140231807, label %172
    i32 -1866913530, label %185
    i32 906647990, label %187
    i32 1160955523, label %189
    i32 -1497561319, label %199
    i32 -264803669, label %210
    i32 -45126367, label %211
    i32 -762052006, label %214
    i32 65281089, label %224
    i32 53550678, label %236
    i32 -1208246888, label %238
    i32 893137046, label %246
    i32 -1201377638, label %248
    i32 67702500, label %250
    i32 375917760, label %251
    i32 17174819, label %261
    i32 -1410227757, label %272
    i32 -49745334, label %273
    i32 -715752574, label %274
    i32 373204397, label %284
    i32 1249024149, label %294
    i32 -2033086359, label %295
    i32 1028771273, label %296
    i32 587435613, label %297
    i32 1795059031, label %299
    i32 969409064, label %301
    i32 -77262637, label %303
    i32 1140536476, label %307
    i32 -1585317968, label %309
    i32 1023011580, label %310
    i32 -652072776, label %311
    i32 842098214, label %313
  ]

.backedge:                                        ; preds = %7, %313, %311, %310, %309, %307, %303, %301, %299, %297, %295, %294, %284, %274, %273, %272, %261, %251, %250, %248, %246, %238, %236, %224, %214, %211, %210, %199, %189, %187, %185, %172, %162, %161, %148, %138, %136, %135, %133, %132, %121, %111, %107, %105, %103, %100, %95, %92, %80, %79, %78, %67, %57, %55, %50, %48, %32, %30, %18, %8
  %.069.be = phi i32 [ %.069, %7 ], [ %.069, %313 ], [ %.069, %311 ], [ %.069, %310 ], [ %.069, %309 ], [ %.069, %307 ], [ %.069, %303 ], [ %.069, %301 ], [ %.069, %299 ], [ %.069, %297 ], [ %.069, %295 ], [ %.069, %294 ], [ %.069, %284 ], [ %.069, %274 ], [ %.069, %273 ], [ %.069, %272 ], [ %.069, %261 ], [ %.069, %251 ], [ %.069, %250 ], [ %.069, %248 ], [ %.069, %246 ], [ %.069, %238 ], [ %.069, %236 ], [ %.069, %224 ], [ %.069, %214 ], [ %.069, %211 ], [ %.069, %210 ], [ %.069, %199 ], [ %.069, %189 ], [ %.069, %187 ], [ %.069, %185 ], [ %.069, %172 ], [ %.069, %162 ], [ %.069, %161 ], [ %.069, %148 ], [ %.069, %138 ], [ %.069, %136 ], [ %.069, %135 ], [ %.069, %133 ], [ %.069, %132 ], [ %.069, %121 ], [ %.069, %111 ], [ %.069, %107 ], [ %.069, %105 ], [ %.069, %103 ], [ %.069, %100 ], [ %.069, %95 ], [ %.069, %92 ], [ %.069, %80 ], [ %.069, %79 ], [ %.069, %78 ], [ %.069, %67 ], [ %.069, %57 ], [ %.067, %55 ], [ %.069, %50 ], [ %.069, %48 ], [ 0, %32 ], [ %.069, %30 ], [ %.069, %18 ], [ %.069, %8 ]
  %.067.be = phi i32 [ %.067, %7 ], [ %.067, %313 ], [ %.067, %311 ], [ %.067, %310 ], [ %.067, %309 ], [ %.067, %307 ], [ %.067, %303 ], [ %.067, %301 ], [ %.067, %299 ], [ %.067, %297 ], [ %.067, %295 ], [ %.067, %294 ], [ %.067, %284 ], [ %.067, %274 ], [ %.067, %273 ], [ %.067, %272 ], [ %.067, %261 ], [ %.067, %251 ], [ %.067, %250 ], [ %.067, %248 ], [ %.067, %246 ], [ %.067, %238 ], [ %.067, %236 ], [ %.067, %224 ], [ %.067, %214 ], [ %.067, %211 ], [ %.067, %210 ], [ %.067, %199 ], [ %.067, %189 ], [ %.067, %187 ], [ %.067, %185 ], [ %.067, %172 ], [ %.067, %162 ], [ %.067, %161 ], [ %.067, %148 ], [ %.067, %138 ], [ %.067, %136 ], [ %.067, %135 ], [ %.067, %133 ], [ %.067, %132 ], [ %.067, %121 ], [ %.067, %111 ], [ %.067, %107 ], [ %.067, %105 ], [ %.067, %103 ], [ %.067, %100 ], [ %.067, %95 ], [ %.067, %92 ], [ %.067, %80 ], [ %.067, %79 ], [ %.067, %78 ], [ %.067, %67 ], [ %.067, %57 ], [ %.067, %55 ], [ %52, %50 ], [ %.067, %48 ], [ %.067, %32 ], [ %.067, %30 ], [ %.067, %18 ], [ %.067, %8 ]
  %.065.be = phi i32 [ %.065, %7 ], [ %.065, %313 ], [ %.065, %311 ], [ %.065, %310 ], [ %.065, %309 ], [ %.065, %307 ], [ %.065, %303 ], [ %.065, %301 ], [ %.065, %299 ], [ %.065, %297 ], [ %.065, %295 ], [ %.065, %294 ], [ %.065, %284 ], [ %.065, %274 ], [ %.065, %273 ], [ %.065, %272 ], [ %.065, %261 ], [ %.065, %251 ], [ %.065, %250 ], [ %.065, %248 ], [ %.065, %246 ], [ %.065, %238 ], [ %.065, %236 ], [ %.065, %224 ], [ %.065, %214 ], [ %.065, %211 ], [ %.065, %210 ], [ %.065, %199 ], [ %.065, %189 ], [ %.065, %187 ], [ %.065, %185 ], [ %.065, %172 ], [ %.065, %162 ], [ %.065, %161 ], [ %.065, %148 ], [ %.065, %138 ], [ %.065, %136 ], [ %.065, %135 ], [ %.065, %133 ], [ %.065, %132 ], [ %.065, %121 ], [ %.065, %111 ], [ %.065, %107 ], [ %.065, %105 ], [ %.065, %103 ], [ %.065, %100 ], [ %.065, %95 ], [ %.065, %92 ], [ %82, %80 ], [ %.065, %79 ], [ %.065, %78 ], [ %.065, %67 ], [ %.065, %57 ], [ %.065, %55 ], [ %.065, %50 ], [ %.065, %48 ], [ %.065, %32 ], [ %.065, %30 ], [ %.065, %18 ], [ %.065, %8 ]
  %.063.be = phi i32 [ %.063, %7 ], [ %.063, %313 ], [ %.063, %311 ], [ %.063, %310 ], [ %.063, %309 ], [ %.063, %307 ], [ %.063, %303 ], [ %.063, %301 ], [ %300, %299 ], [ %.063, %297 ], [ %.063, %295 ], [ %.063, %294 ], [ %.063, %284 ], [ %.063, %274 ], [ %.063, %273 ], [ %.063, %272 ], [ %.063, %261 ], [ %.063, %251 ], [ %.063, %250 ], [ %.063, %248 ], [ %.063, %246 ], [ %.063, %238 ], [ %.063, %236 ], [ %.063, %224 ], [ %.063, %214 ], [ %.063, %211 ], [ %.063, %210 ], [ %.063, %199 ], [ %.063, %189 ], [ %.063, %187 ], [ %.063, %185 ], [ %.063, %172 ], [ %.063, %162 ], [ %.063, %161 ], [ %.063, %148 ], [ %.063, %138 ], [ %.063, %136 ], [ %.063, %135 ], [ %.063, %133 ], [ %.063, %132 ], [ %.063, %121 ], [ %.063, %111 ], [ %.063, %107 ], [ %.063, %105 ], [ %.063, %103 ], [ %.063, %100 ], [ %.063, %95 ], [ %.063, %92 ], [ %.063, %80 ], [ %.063, %79 ], [ %.063, %78 ], [ %68, %67 ], [ %.063, %57 ], [ %.063, %55 ], [ %.063, %50 ], [ %.063, %48 ], [ %47, %32 ], [ %.063, %30 ], [ %.063, %18 ], [ %.063, %8 ]
  %.061.be = phi i32 [ %.061, %7 ], [ %.061, %313 ], [ %.061, %311 ], [ %.061, %310 ], [ %.061, %309 ], [ %.061, %307 ], [ %.061, %303 ], [ %.061, %301 ], [ %.061, %299 ], [ %.061, %297 ], [ %.061, %295 ], [ %.061, %294 ], [ %.061, %284 ], [ %.061, %274 ], [ %.061, %273 ], [ %.061, %272 ], [ %.061, %261 ], [ %.061, %251 ], [ %.061, %250 ], [ %.061, %248 ], [ %.061, %246 ], [ %.061, %238 ], [ %.061, %236 ], [ %.061, %224 ], [ %.061, %214 ], [ %.061, %211 ], [ %.061, %210 ], [ %.061, %199 ], [ %.061, %189 ], [ %.061, %187 ], [ %.061, %185 ], [ %.061, %172 ], [ %.061, %162 ], [ %.061, %161 ], [ %.061, %148 ], [ %.061, %138 ], [ %.061, %136 ], [ %.061, %135 ], [ %.061, %133 ], [ %.061, %132 ], [ %.061, %121 ], [ %.061, %111 ], [ %.061, %107 ], [ %.061, %105 ], [ %.061, %103 ], [ %.061, %100 ], [ %.061, %95 ], [ %.061, %92 ], [ %.061, %80 ], [ %.061, %79 ], [ %.061, %78 ], [ %.061, %67 ], [ %.061, %57 ], [ %56, %55 ], [ %.061, %50 ], [ %.061, %48 ], [ 0, %32 ], [ %.061, %30 ], [ %.061, %18 ], [ %.061, %8 ]
  %.059.be = phi i32 [ %.059, %7 ], [ %.059, %313 ], [ %.059, %311 ], [ %.059, %310 ], [ %.059, %309 ], [ %.059, %307 ], [ %.059, %303 ], [ %.059, %301 ], [ %.059, %299 ], [ %.059, %297 ], [ %.059, %295 ], [ %.059, %294 ], [ %.059, %284 ], [ %.059, %274 ], [ %.059, %273 ], [ %.059, %272 ], [ %.059, %261 ], [ %.059, %251 ], [ %.059, %250 ], [ %.059, %248 ], [ %.059, %246 ], [ %.059, %238 ], [ %.059, %236 ], [ %.059, %224 ], [ %.059, %214 ], [ %.059, %211 ], [ %.059, %210 ], [ %.059, %199 ], [ %.059, %189 ], [ %.059, %187 ], [ %.059, %185 ], [ %.059, %172 ], [ %.059, %162 ], [ %.059, %161 ], [ %.059, %148 ], [ %.059, %138 ], [ %137, %136 ], [ %.059, %135 ], [ %.059, %133 ], [ %.059, %132 ], [ %.059, %121 ], [ %.059, %111 ], [ %.059, %107 ], [ %.059, %105 ], [ %104, %103 ], [ %.059, %100 ], [ %.059, %95 ], [ %.059, %92 ], [ %.059, %80 ], [ %.059, %79 ], [ %.059, %78 ], [ %.059, %67 ], [ %.059, %57 ], [ %.059, %55 ], [ %.059, %50 ], [ %.059, %48 ], [ %.059, %32 ], [ %.059, %30 ], [ %.059, %18 ], [ %.059, %8 ]
  %.057.be = phi i32 [ %.057, %7 ], [ %.057, %313 ], [ %.057, %311 ], [ %.057, %310 ], [ %.057, %309 ], [ %.057, %307 ], [ %.057, %303 ], [ %.057, %301 ], [ %.057, %299 ], [ %.057, %297 ], [ %.057, %295 ], [ %.057, %294 ], [ %.057, %284 ], [ %.057, %274 ], [ %.057, %273 ], [ %.057, %272 ], [ %.057, %261 ], [ %.057, %251 ], [ %.057, %250 ], [ %.057, %248 ], [ %.057, %246 ], [ %.057, %238 ], [ %.057, %236 ], [ %.057, %224 ], [ %.057, %214 ], [ %.057, %211 ], [ %.057, %210 ], [ %.057, %199 ], [ %.057, %189 ], [ %.057, %187 ], [ %.057, %185 ], [ %.057, %172 ], [ %.057, %162 ], [ %.057, %161 ], [ %.057, %148 ], [ %.057, %138 ], [ %.057, %136 ], [ %.057, %135 ], [ %.057, %133 ], [ %.057, %132 ], [ %.057, %121 ], [ %.057, %111 ], [ %.057, %107 ], [ %.057, %105 ], [ %.057, %103 ], [ %.057, %100 ], [ %.057, %95 ], [ %.057, %92 ], [ %.057, %80 ], [ %.057, %79 ], [ %.057, %78 ], [ %.057, %67 ], [ %.057, %57 ], [ %.057, %55 ], [ %.057, %50 ], [ %.057, %48 ], [ %45, %32 ], [ %.057, %30 ], [ %.057, %18 ], [ %.057, %8 ]
  %.055.be = phi i32 [ %.055, %7 ], [ %.055, %313 ], [ %.055, %311 ], [ %.055, %310 ], [ %.neg, %309 ], [ %.055, %307 ], [ %306, %303 ], [ %.055, %301 ], [ %.055, %299 ], [ %.055, %297 ], [ %.055, %295 ], [ %.055, %294 ], [ %.055, %284 ], [ %.055, %274 ], [ %.055, %273 ], [ %.055, %272 ], [ %.055, %261 ], [ %.055, %251 ], [ %.055, %250 ], [ %.055, %248 ], [ %.055, %246 ], [ %.055, %238 ], [ %.055, %236 ], [ %.055, %224 ], [ %.055, %214 ], [ %.055, %211 ], [ %.055, %210 ], [ %200, %199 ], [ %.055, %189 ], [ %.055, %187 ], [ %.055, %185 ], [ %.055, %172 ], [ %.055, %162 ], [ %.055, %161 ], [ %151, %148 ], [ %.055, %138 ], [ %.055, %136 ], [ %.055, %135 ], [ %.055, %133 ], [ %.055, %132 ], [ %.055, %121 ], [ %.055, %111 ], [ %.055, %107 ], [ %.055, %105 ], [ %.055, %103 ], [ %.055, %100 ], [ %.055, %95 ], [ %.055, %92 ], [ %.055, %80 ], [ %.055, %79 ], [ %.055, %78 ], [ %.055, %67 ], [ %.055, %57 ], [ %.055, %55 ], [ %.055, %50 ], [ %.055, %48 ], [ %.055, %32 ], [ %.055, %30 ], [ %.055, %18 ], [ %.055, %8 ]
  %.053.be = phi i32 [ %.053, %7 ], [ %.053, %313 ], [ %312, %311 ], [ %.053, %310 ], [ %.053, %309 ], [ %.053, %307 ], [ %.053, %303 ], [ %.053, %301 ], [ %.053, %299 ], [ %.053, %297 ], [ %.053, %295 ], [ %.053, %294 ], [ %.053, %284 ], [ %.053, %274 ], [ %.053, %273 ], [ %.053, %272 ], [ %262, %261 ], [ %.053, %251 ], [ %.053, %250 ], [ %.053, %248 ], [ %.053, %246 ], [ %.053, %238 ], [ %.053, %236 ], [ %.053, %224 ], [ %.053, %214 ], [ %213, %211 ], [ %.053, %210 ], [ %.053, %199 ], [ %.053, %189 ], [ %.053, %187 ], [ %.053, %185 ], [ %.053, %172 ], [ %.053, %162 ], [ %.053, %161 ], [ %.053, %148 ], [ %.053, %138 ], [ %.053, %136 ], [ %.053, %135 ], [ %.053, %133 ], [ %.053, %132 ], [ %.053, %121 ], [ %.053, %111 ], [ %.053, %107 ], [ %.053, %105 ], [ %.053, %103 ], [ %.053, %100 ], [ %.053, %95 ], [ %.053, %92 ], [ %.053, %80 ], [ %.053, %79 ], [ %.053, %78 ], [ %.053, %67 ], [ %.053, %57 ], [ %.053, %55 ], [ %.053, %50 ], [ %.053, %48 ], [ %.053, %32 ], [ %.053, %30 ], [ %.053, %18 ], [ %.053, %8 ]
  %.051.be = phi i32 [ %.051, %7 ], [ %.051, %313 ], [ %.051, %311 ], [ %.051, %310 ], [ %.051, %309 ], [ %.051, %307 ], [ %.051, %303 ], [ %.051, %301 ], [ %.051, %299 ], [ %298, %297 ], [ %.051, %295 ], [ %.051, %294 ], [ %.051, %284 ], [ %.051, %274 ], [ %.051, %273 ], [ %.051, %272 ], [ %.051, %261 ], [ %.051, %251 ], [ %.051, %250 ], [ %.051, %248 ], [ %.051, %246 ], [ %.051, %238 ], [ %.051, %236 ], [ %.051, %224 ], [ %.051, %214 ], [ %.051, %211 ], [ %.051, %210 ], [ %.051, %199 ], [ %.051, %189 ], [ %.051, %187 ], [ %.051, %185 ], [ %.051, %172 ], [ %.051, %162 ], [ %.051, %161 ], [ %.051, %148 ], [ %.051, %138 ], [ %.051, %136 ], [ %.051, %135 ], [ %.051, %133 ], [ %.051, %132 ], [ %.051, %121 ], [ %.051, %111 ], [ %.051, %107 ], [ %.051, %105 ], [ %.051, %103 ], [ %.051, %100 ], [ %.051, %95 ], [ %.051, %92 ], [ %.051, %80 ], [ %.051, %79 ], [ %.051, %78 ], [ %.051, %67 ], [ %.051, %57 ], [ %.051, %55 ], [ %.051, %50 ], [ %.051, %48 ], [ %.051, %32 ], [ %.051, %30 ], [ %19, %18 ], [ %.051, %8 ]
  %.0.be = phi i32 [ %.0, %7 ], [ 373204397, %313 ], [ 17174819, %311 ], [ 65281089, %310 ], [ -1497561319, %309 ], [ -140231807, %307 ], [ -1140271872, %303 ], [ -1186507312, %301 ], [ 99776242, %299 ], [ 1586389652, %297 ], [ 632095846, %295 ], [ -2033086359, %294 ], [ %293, %284 ], [ %283, %274 ], [ -715752574, %273 ], [ -762052006, %272 ], [ %271, %261 ], [ %260, %251 ], [ 375917760, %250 ], [ 67702500, %248 ], [ 67702500, %246 ], [ %245, %238 ], [ %237, %236 ], [ %235, %224 ], [ %223, %214 ], [ -762052006, %211 ], [ -2074395012, %210 ], [ %209, %199 ], [ %198, %189 ], [ 1160955523, %187 ], [ %186, %185 ], [ %184, %172 ], [ %171, %162 ], [ -2074395012, %161 ], [ %160, %148 ], [ %147, %138 ], [ 1882392530, %136 ], [ 542208525, %135 ], [ -2032173242, %133 ], [ -2032173242, %132 ], [ %131, %121 ], [ %120, %111 ], [ %110, %107 ], [ %106, %105 ], [ 1882392530, %103 ], [ -715752574, %100 ], [ %99, %95 ], [ -2033086359, %92 ], [ %91, %80 ], [ -409321417, %79 ], [ 1243916028, %78 ], [ %77, %67 ], [ %66, %57 ], [ 1243916028, %55 ], [ %54, %50 ], [ %49, %48 ], [ -409321417, %32 ], [ %31, %30 ], [ %29, %18 ], [ %17, %8 ]
  br label %7

8:                                                ; preds = %7
  %9 = load i32, i32* @x.5, align 4
  %10 = load i32, i32* @y.6, align 4
  %11 = add i32 %9, -1
  %12 = mul i32 %11, %9
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %10, 10
  %16 = or i1 %15, %14
  %17 = select i1 %16, i32 1586389652, i32 587435613
  br label %.backedge

18:                                               ; preds = %7
  %19 = add i32 %.051, -1
  %20 = icmp ne i32 %.051, 0
  store i1 %20, i1* %3, align 1
  %21 = load i32, i32* @x.5, align 4
  %22 = load i32, i32* @y.6, align 4
  %23 = add i32 %21, -1
  %24 = mul i32 %23, %21
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %22, 10
  %28 = or i1 %27, %26
  %29 = select i1 %28, i32 1378564378, i32 587435613
  br label %.backedge

30:                                               ; preds = %7
  %.0..0..0. = load volatile i1, i1* %3, align 1
  %31 = select i1 %.0..0..0., i32 -494483901, i32 1028771273
  br label %.backedge

32:                                               ; preds = %7
  %33 = call i32 @_Z4readv()
  store i32 %33, i32* @A, align 4
  %34 = call i32 @_Z4readv()
  store i32 %34, i32* @B, align 4
  %35 = call i32 @_Z4readv()
  store i32 %35, i32* @C, align 4
  %36 = call i32 @_Z4readv()
  store i32 %36, i32* @D, align 4
  %37 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* nonnull dereferenceable(4) @A, i32* nonnull dereferenceable(4) @B)
  %38 = load i32, i32* %37, align 4
  %39 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) @A, i32* nonnull dereferenceable(4) @B)
  %40 = load i32, i32* %39, align 4
  %41 = add i32 %40, %38
  %42 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) @A, i32* nonnull dereferenceable(4) @B)
  %43 = load i32, i32* %42, align 4
  %44 = add i32 %43, 1
  %45 = sdiv i32 %41, %44
  %46 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* nonnull dereferenceable(4) @A, i32* nonnull dereferenceable(4) @B)
  %47 = load i32, i32* %46, align 4
  br label %.backedge

48:                                               ; preds = %7
  %.not85 = icmp sgt i32 %.061, %.063
  %49 = select i1 %.not85, i32 -2063268297, i32 1262412202
  br label %.backedge

50:                                               ; preds = %7
  %51 = add i32 %.061, %.063
  %52 = sdiv i32 %51, 2
  %53 = call zeroext i1 @_Z5checkii(i32 %52, i32 %.057)
  %54 = select i1 %53, i32 -1232735062, i32 920244382
  br label %.backedge

55:                                               ; preds = %7
  %56 = add i32 %.067, 1
  br label %.backedge

57:                                               ; preds = %7
  %58 = load i32, i32* @x.5, align 4
  %59 = load i32, i32* @y.6, align 4
  %60 = add i32 %58, -1
  %61 = mul i32 %60, %58
  %62 = and i32 %61, 1
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %64, %63
  %66 = select i1 %65, i32 99776242, i32 1795059031
  br label %.backedge

67:                                               ; preds = %7
  %68 = add i32 %.067, -1
  %69 = load i32, i32* @x.5, align 4
  %70 = load i32, i32* @y.6, align 4
  %71 = add i32 %69, -1
  %72 = mul i32 %71, %69
  %73 = and i32 %72, 1
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %75, %74
  %77 = select i1 %76, i32 624790831, i32 1795059031
  br label %.backedge

78:                                               ; preds = %7
  br label %.backedge

79:                                               ; preds = %7
  br label %.backedge

80:                                               ; preds = %7
  %81 = add i32 %.057, 1
  %82 = mul nsw i32 %81, %.069
  %83 = load i32, i32* @B, align 4
  %84 = load i32, i32* @A, align 4
  %85 = mul nsw i32 %.057, %.069
  %86 = xor i32 %.069, -1
  %87 = add i32 %.057, %86
  %88 = add i32 %87, %83
  %89 = sdiv i32 %88, %.057
  %.neg82 = sub i32 1, %85
  %.neg88 = add i32 %.neg82, %82
  %.neg81 = add i32 %.neg88, %84
  %.neg83 = sub i32 %.neg81, %89
  store i32 %.neg83, i32* %4, align 4
  %90 = load i32, i32* @D, align 4
  %.not84 = icmp sgt i32 %90, %82
  %91 = select i1 %.not84, i32 588168690, i32 -1168406920
  br label %.backedge

92:                                               ; preds = %7
  %93 = load i32, i32* @C, align 4
  %94 = load i32, i32* @D, align 4
  call void @_Z6print1iii(i32 %93, i32 %94, i32 %.057)
  br label %.backedge

95:                                               ; preds = %7
  %96 = load i32, i32* %4, align 4
  %97 = load i32, i32* @C, align 4
  %98 = icmp slt i32 %96, %97
  %99 = select i1 %98, i32 -1612298182, i32 -1374020321
  br label %.backedge

100:                                              ; preds = %7
  %101 = load i32, i32* @C, align 4
  %102 = load i32, i32* @D, align 4
  call void @_Z6print2iii(i32 %101, i32 %102, i32 %.057)
  br label %.backedge

103:                                              ; preds = %7
  %104 = load i32, i32* @C, align 4
  br label %.backedge

105:                                              ; preds = %7
  %.not75 = icmp sgt i32 %.059, %.065
  %106 = select i1 %.not75, i32 -957890368, i32 775439776
  br label %.backedge

107:                                              ; preds = %7
  %108 = add i32 %.059, -1
  %.neg72 = add i32 %.057, 1
  %109 = srem i32 %108, %.neg72
  %.neg73 = add i32 %109, 1
  %.not74 = icmp sgt i32 %.neg73, %.057
  %110 = select i1 %.not74, i32 1643832742, i32 -525042928
  br label %.backedge

111:                                              ; preds = %7
  %112 = load i32, i32* @x.5, align 4
  %113 = load i32, i32* @y.6, align 4
  %114 = add i32 %112, -1
  %115 = mul i32 %114, %112
  %116 = and i32 %115, 1
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %113, 10
  %119 = or i1 %118, %117
  %120 = select i1 %119, i32 -1186507312, i32 969409064
  br label %.backedge

121:                                              ; preds = %7
  %122 = call i32 @putchar(i32 65)
  %123 = load i32, i32* @x.5, align 4
  %124 = load i32, i32* @y.6, align 4
  %125 = add i32 %123, -1
  %126 = mul i32 %125, %123
  %127 = and i32 %126, 1
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %124, 10
  %130 = or i1 %129, %128
  %131 = select i1 %130, i32 -523841142, i32 969409064
  br label %.backedge

132:                                              ; preds = %7
  br label %.backedge

133:                                              ; preds = %7
  %134 = call i32 @putchar(i32 66)
  br label %.backedge

135:                                              ; preds = %7
  br label %.backedge

136:                                              ; preds = %7
  %137 = add i32 %.059, 1
  br label %.backedge

138:                                              ; preds = %7
  %139 = load i32, i32* @x.5, align 4
  %140 = load i32, i32* @y.6, align 4
  %141 = add i32 %139, -1
  %142 = mul i32 %141, %139
  %143 = and i32 %142, 1
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %140, 10
  %146 = or i1 %145, %144
  %147 = select i1 %146, i32 -1140271872, i32 -77262637
  br label %.backedge

148:                                              ; preds = %7
  %149 = add i32 %.065, 1
  store i32 %149, i32* %5, align 4
  %150 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* nonnull dereferenceable(4) @C, i32* nonnull dereferenceable(4) %5)
  %151 = load i32, i32* %150, align 4
  %152 = load i32, i32* @x.5, align 4
  %153 = load i32, i32* @y.6, align 4
  %154 = add i32 %152, -1
  %155 = mul i32 %154, %152
  %156 = and i32 %155, 1
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %153, 10
  %159 = or i1 %158, %157
  %160 = select i1 %159, i32 812692607, i32 -77262637
  br label %.backedge

161:                                              ; preds = %7
  br label %.backedge

162:                                              ; preds = %7
  %163 = load i32, i32* @x.5, align 4
  %164 = load i32, i32* @y.6, align 4
  %165 = add i32 %163, -1
  %166 = mul i32 %165, %163
  %167 = and i32 %166, 1
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %164, 10
  %170 = or i1 %169, %168
  %171 = select i1 %170, i32 -140231807, i32 1140536476
  br label %.backedge

172:                                              ; preds = %7
  %173 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) @D)
  %174 = load i32, i32* %173, align 4
  %175 = icmp sle i32 %.055, %174
  store i1 %175, i1* %2, align 1
  %176 = load i32, i32* @x.5, align 4
  %177 = load i32, i32* @y.6, align 4
  %178 = add i32 %176, -1
  %179 = mul i32 %178, %176
  %180 = and i32 %179, 1
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %177, 10
  %183 = or i1 %182, %181
  %184 = select i1 %183, i32 -1866913530, i32 1140536476
  br label %.backedge

185:                                              ; preds = %7
  %.0..0..0.49 = load volatile i1, i1* %2, align 1
  %186 = select i1 %.0..0..0.49, i32 906647990, i32 -45126367
  br label %.backedge

187:                                              ; preds = %7
  %188 = call i32 @putchar(i32 65)
  br label %.backedge

189:                                              ; preds = %7
  %190 = load i32, i32* @x.5, align 4
  %191 = load i32, i32* @y.6, align 4
  %192 = add i32 %190, -1
  %193 = mul i32 %192, %190
  %194 = and i32 %193, 1
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %191, 10
  %197 = or i1 %196, %195
  %198 = select i1 %197, i32 -1497561319, i32 -1585317968
  br label %.backedge

199:                                              ; preds = %7
  %200 = add i32 %.055, 1
  %201 = load i32, i32* @x.5, align 4
  %202 = load i32, i32* @y.6, align 4
  %203 = add i32 %201, -1
  %204 = mul i32 %203, %201
  %205 = and i32 %204, 1
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %202, 10
  %208 = or i1 %207, %206
  %209 = select i1 %208, i32 -264803669, i32 -1585317968
  br label %.backedge

210:                                              ; preds = %7
  br label %.backedge

211:                                              ; preds = %7
  %212 = load i32, i32* %4, align 4
  %213 = add i32 %212, 1
  br label %.backedge

214:                                              ; preds = %7
  %215 = load i32, i32* @x.5, align 4
  %216 = load i32, i32* @y.6, align 4
  %217 = add i32 %215, -1
  %218 = mul i32 %217, %215
  %219 = and i32 %218, 1
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %216, 10
  %222 = or i1 %221, %220
  %223 = select i1 %222, i32 65281089, i32 1023011580
  br label %.backedge

224:                                              ; preds = %7
  %225 = load i32, i32* @D, align 4
  %226 = icmp sle i32 %.053, %225
  store i1 %226, i1* %1, align 1
  %227 = load i32, i32* @x.5, align 4
  %228 = load i32, i32* @y.6, align 4
  %229 = add i32 %227, -1
  %230 = mul i32 %229, %227
  %231 = and i32 %230, 1
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %228, 10
  %234 = or i1 %233, %232
  %235 = select i1 %234, i32 53550678, i32 1023011580
  br label %.backedge

236:                                              ; preds = %7
  %.0..0..0.50 = load volatile i1, i1* %1, align 1
  %237 = select i1 %.0..0..0.50, i32 -1208246888, i32 -49745334
  br label %.backedge

238:                                              ; preds = %7
  %239 = load i32, i32* @A, align 4
  %240 = load i32, i32* @B, align 4
  %241 = sub i32 %239, %.053
  %242 = add i32 %241, %240
  %243 = add i32 %.057, 1
  %244 = srem i32 %242, %243
  %.neg71 = add i32 %244, 1
  %.not = icmp sgt i32 %.neg71, %.057
  %245 = select i1 %.not, i32 -1201377638, i32 893137046
  br label %.backedge

246:                                              ; preds = %7
  %247 = call i32 @putchar(i32 66)
  br label %.backedge

248:                                              ; preds = %7
  %249 = call i32 @putchar(i32 65)
  br label %.backedge

250:                                              ; preds = %7
  br label %.backedge

251:                                              ; preds = %7
  %252 = load i32, i32* @x.5, align 4
  %253 = load i32, i32* @y.6, align 4
  %254 = add i32 %252, -1
  %255 = mul i32 %254, %252
  %256 = and i32 %255, 1
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %253, 10
  %259 = or i1 %258, %257
  %260 = select i1 %259, i32 17174819, i32 -652072776
  br label %.backedge

261:                                              ; preds = %7
  %262 = add i32 %.053, 1
  %263 = load i32, i32* @x.5, align 4
  %264 = load i32, i32* @y.6, align 4
  %265 = add i32 %263, -1
  %266 = mul i32 %265, %263
  %267 = and i32 %266, 1
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %264, 10
  %270 = or i1 %269, %268
  %271 = select i1 %270, i32 -1410227757, i32 -652072776
  br label %.backedge

272:                                              ; preds = %7
  br label %.backedge

273:                                              ; preds = %7
  br label %.backedge

274:                                              ; preds = %7
  %275 = load i32, i32* @x.5, align 4
  %276 = load i32, i32* @y.6, align 4
  %277 = add i32 %275, -1
  %278 = mul i32 %277, %275
  %279 = and i32 %278, 1
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %276, 10
  %282 = or i1 %281, %280
  %283 = select i1 %282, i32 373204397, i32 842098214
  br label %.backedge

284:                                              ; preds = %7
  %285 = load i32, i32* @x.5, align 4
  %286 = load i32, i32* @y.6, align 4
  %287 = add i32 %285, -1
  %288 = mul i32 %287, %285
  %289 = and i32 %288, 1
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %286, 10
  %292 = or i1 %291, %290
  %293 = select i1 %292, i32 1249024149, i32 842098214
  br label %.backedge

294:                                              ; preds = %7
  br label %.backedge

295:                                              ; preds = %7
  %putchar = call i32 @putchar(i32 10)
  br label %.backedge

296:                                              ; preds = %7
  ret i32 0

297:                                              ; preds = %7
  %298 = add i32 %.051, -1
  br label %.backedge

299:                                              ; preds = %7
  %300 = add i32 %.067, -1
  br label %.backedge

301:                                              ; preds = %7
  %302 = call i32 @putchar(i32 65)
  br label %.backedge

303:                                              ; preds = %7
  %304 = add i32 %.065, 1
  store i32 %304, i32* %5, align 4
  %305 = call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* nonnull dereferenceable(4) @C, i32* nonnull dereferenceable(4) %5)
  %306 = load i32, i32* %305, align 4
  br label %.backedge

307:                                              ; preds = %7
  %308 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) @D)
  br label %.backedge

309:                                              ; preds = %7
  %.neg = add i32 %.055, 1
  br label %.backedge

310:                                              ; preds = %7
  br label %.backedge

311:                                              ; preds = %7
  %312 = add i32 %.053, 1
  br label %.backedge

313:                                              ; preds = %7
  br label %.backedge
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_Z4readv() local_unnamed_addr #4 comdat {
  %1 = alloca i1, align 1
  %2 = alloca i32, align 4
  %3 = tail call i32 @getchar()
  %4 = trunc i32 %3 to i8
  br label %5

5:                                                ; preds = %.backedge, %0
  %6 = phi i32 [ undef, %0 ], [ %.be, %.backedge ]
  %.025 = phi i32 [ 1, %0 ], [ %.025.be, %.backedge ]
  %.023 = phi i32 [ 0, %0 ], [ %.023.be, %.backedge ]
  %.021 = phi i8 [ %4, %0 ], [ %.021.be, %.backedge ]
  %.019 = phi i32 [ 201754975, %0 ], [ %.019.be, %.backedge ]
  %.017 = phi i1 [ undef, %0 ], [ %.017.be, %.backedge ]
  %.0 = phi i1 [ undef, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.019, label %.backedge [
    i32 201754975, label %7
    i32 -787431008, label %10
    i32 -79570303, label %12
    i32 -807550013, label %14
    i32 1857541658, label %17
    i32 -587168094, label %18
    i32 -1371216813, label %28
    i32 1144078720, label %40
    i32 495800456, label %41
    i32 1459839212, label %42
    i32 780953884, label %45
    i32 -2014805563, label %47
    i32 1528457555, label %57
    i32 1858081994, label %67
    i32 -489882205, label %69
    i32 -765223158, label %79
    i32 -1290354905, label %93
    i32 2091819646, label %94
    i32 2075112262, label %104
    i32 748409683, label %115
    i32 -1100879571, label %116
    i32 -310284982, label %119
    i32 -66093531, label %120
    i32 -2129571096, label %127
  ]

.backedge:                                        ; preds = %5, %127, %120, %119, %116, %104, %94, %93, %79, %69, %67, %57, %47, %45, %42, %41, %40, %28, %18, %17, %14, %12, %10, %7
  %.be = phi i32 [ %6, %5 ], [ %6, %127 ], [ %6, %120 ], [ %6, %119 ], [ %6, %116 ], [ %105, %104 ], [ %6, %94 ], [ %6, %93 ], [ %6, %79 ], [ %6, %69 ], [ %6, %67 ], [ %6, %57 ], [ %6, %47 ], [ %6, %45 ], [ %6, %42 ], [ %6, %41 ], [ %6, %40 ], [ %6, %28 ], [ %6, %18 ], [ %6, %17 ], [ %6, %14 ], [ %6, %12 ], [ %6, %10 ], [ %6, %7 ]
  %.025.be = phi i32 [ %.025, %5 ], [ %.025, %127 ], [ %.025, %120 ], [ %.025, %119 ], [ %.025, %116 ], [ %.025, %104 ], [ %.025, %94 ], [ %.025, %93 ], [ %.025, %79 ], [ %.025, %69 ], [ %.025, %67 ], [ %.025, %57 ], [ %.025, %47 ], [ %.025, %45 ], [ %.025, %42 ], [ %.025, %41 ], [ %.025, %40 ], [ %.025, %28 ], [ %.025, %18 ], [ -1, %17 ], [ %.025, %14 ], [ %.025, %12 ], [ %.025, %10 ], [ %.025, %7 ]
  %.023.be = phi i32 [ %.023, %5 ], [ %.023, %127 ], [ %124, %120 ], [ %.023, %119 ], [ %.023, %116 ], [ %.023, %104 ], [ %.023, %94 ], [ %.023, %93 ], [ %81, %79 ], [ %.023, %69 ], [ %.023, %67 ], [ %.023, %57 ], [ %.023, %47 ], [ %.023, %45 ], [ %.023, %42 ], [ %.023, %41 ], [ %.023, %40 ], [ %.023, %28 ], [ %.023, %18 ], [ %.023, %17 ], [ %.023, %14 ], [ %.023, %12 ], [ %.023, %10 ], [ %.023, %7 ]
  %.021.be = phi i8 [ %.021, %5 ], [ %.021, %127 ], [ %126, %120 ], [ %.021, %119 ], [ %118, %116 ], [ %.021, %104 ], [ %.021, %94 ], [ %.021, %93 ], [ %83, %79 ], [ %.021, %69 ], [ %.021, %67 ], [ %.021, %57 ], [ %.021, %47 ], [ %.021, %45 ], [ %.021, %42 ], [ %.021, %41 ], [ %.021, %40 ], [ %30, %28 ], [ %.021, %18 ], [ %.021, %17 ], [ %.021, %14 ], [ %.021, %12 ], [ %.021, %10 ], [ %.021, %7 ]
  %.019.be = phi i32 [ %.019, %5 ], [ 2075112262, %127 ], [ -765223158, %120 ], [ 1528457555, %119 ], [ -1371216813, %116 ], [ %114, %104 ], [ %103, %94 ], [ 1459839212, %93 ], [ %92, %79 ], [ %78, %69 ], [ %68, %67 ], [ %66, %57 ], [ %56, %47 ], [ -2014805563, %45 ], [ %44, %42 ], [ 1459839212, %41 ], [ 201754975, %40 ], [ %39, %28 ], [ %27, %18 ], [ -587168094, %17 ], [ %16, %14 ], [ %13, %12 ], [ -79570303, %10 ], [ %9, %7 ]
  %.017.be = phi i1 [ %.017, %5 ], [ %.017, %127 ], [ %.017, %120 ], [ %.017, %119 ], [ %.017, %116 ], [ %.017, %104 ], [ %.017, %94 ], [ %.017, %93 ], [ %.017, %79 ], [ %.017, %69 ], [ %.017, %67 ], [ %.017, %57 ], [ %.017, %47 ], [ %.017, %45 ], [ %.017, %42 ], [ %.017, %41 ], [ %.017, %40 ], [ %.017, %28 ], [ %.017, %18 ], [ %.017, %17 ], [ %.017, %14 ], [ %.017, %12 ], [ %11, %10 ], [ true, %7 ]
  %.0.be = phi i1 [ %.0, %5 ], [ %.0, %127 ], [ %.0, %120 ], [ %.0, %119 ], [ %.0, %116 ], [ %.0, %104 ], [ %.0, %94 ], [ %.0, %93 ], [ %.0, %79 ], [ %.0, %69 ], [ %.0, %67 ], [ %.0, %57 ], [ %.0, %47 ], [ %46, %45 ], [ false, %42 ], [ %.0, %41 ], [ %.0, %40 ], [ %.0, %28 ], [ %.0, %18 ], [ %.0, %17 ], [ %.0, %14 ], [ %.0, %12 ], [ %.0, %10 ], [ %.0, %7 ]
  br label %5

7:                                                ; preds = %5
  %8 = icmp slt i8 %.021, 48
  %9 = select i1 %8, i32 -79570303, i32 -787431008
  br label %.backedge

10:                                               ; preds = %5
  %11 = icmp sgt i8 %.021, 57
  br label %.backedge

12:                                               ; preds = %5
  %13 = select i1 %.017, i32 -807550013, i32 495800456
  br label %.backedge

14:                                               ; preds = %5
  %15 = icmp eq i8 %.021, 45
  %16 = select i1 %15, i32 1857541658, i32 -587168094
  br label %.backedge

17:                                               ; preds = %5
  br label %.backedge

18:                                               ; preds = %5
  %19 = load i32, i32* @x.7, align 4
  %20 = load i32, i32* @y.8, align 4
  %21 = add i32 %19, -1
  %22 = mul i32 %21, %19
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %20, 10
  %26 = or i1 %25, %24
  %27 = select i1 %26, i32 -1371216813, i32 -1100879571
  br label %.backedge

28:                                               ; preds = %5
  %29 = tail call i32 @getchar()
  %30 = trunc i32 %29 to i8
  %31 = load i32, i32* @x.7, align 4
  %32 = load i32, i32* @y.8, align 4
  %33 = add i32 %31, -1
  %34 = mul i32 %33, %31
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %32, 10
  %38 = or i1 %37, %36
  %39 = select i1 %38, i32 1144078720, i32 -1100879571
  br label %.backedge

40:                                               ; preds = %5
  br label %.backedge

41:                                               ; preds = %5
  br label %.backedge

42:                                               ; preds = %5
  %43 = icmp sgt i8 %.021, 47
  %44 = select i1 %43, i32 780953884, i32 -2014805563
  br label %.backedge

45:                                               ; preds = %5
  %46 = icmp slt i8 %.021, 58
  br label %.backedge

47:                                               ; preds = %5
  store i1 %.0, i1* %1, align 1
  %48 = load i32, i32* @x.7, align 4
  %49 = load i32, i32* @y.8, align 4
  %50 = add i32 %48, -1
  %51 = mul i32 %50, %48
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %54, %53
  %56 = select i1 %55, i32 1528457555, i32 -310284982
  br label %.backedge

57:                                               ; preds = %5
  %58 = load i32, i32* @x.7, align 4
  %59 = load i32, i32* @y.8, align 4
  %60 = add i32 %58, -1
  %61 = mul i32 %60, %58
  %62 = and i32 %61, 1
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %64, %63
  %66 = select i1 %65, i32 1858081994, i32 -310284982
  br label %.backedge

67:                                               ; preds = %5
  %.0..0..0.16 = load volatile i1, i1* %1, align 1
  %68 = select i1 %.0..0..0.16, i32 -489882205, i32 2091819646
  br label %.backedge

69:                                               ; preds = %5
  %70 = load i32, i32* @x.7, align 4
  %71 = load i32, i32* @y.8, align 4
  %72 = add i32 %70, -1
  %73 = mul i32 %72, %70
  %74 = and i32 %73, 1
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %71, 10
  %77 = or i1 %76, %75
  %78 = select i1 %77, i32 -765223158, i32 -66093531
  br label %.backedge

79:                                               ; preds = %5
  %.neg.neg = mul i32 %.023, 10
  %80 = sext i8 %.021 to i32
  %.neg27 = add i32 %.neg.neg, -48
  %81 = add i32 %.neg27, %80
  %82 = tail call i32 @getchar()
  %83 = trunc i32 %82 to i8
  %84 = load i32, i32* @x.7, align 4
  %85 = load i32, i32* @y.8, align 4
  %86 = add i32 %84, -1
  %87 = mul i32 %86, %84
  %88 = and i32 %87, 1
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %85, 10
  %91 = or i1 %90, %89
  %92 = select i1 %91, i32 -1290354905, i32 -66093531
  br label %.backedge

93:                                               ; preds = %5
  br label %.backedge

94:                                               ; preds = %5
  %95 = load i32, i32* @x.7, align 4
  %96 = load i32, i32* @y.8, align 4
  %97 = add i32 %95, -1
  %98 = mul i32 %97, %95
  %99 = and i32 %98, 1
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %96, 10
  %102 = or i1 %101, %100
  %103 = select i1 %102, i32 2075112262, i32 -2129571096
  br label %.backedge

104:                                              ; preds = %5
  %105 = mul nsw i32 %.023, %.025
  %106 = load i32, i32* @x.7, align 4
  %107 = load i32, i32* @y.8, align 4
  %108 = add i32 %106, -1
  %109 = mul i32 %108, %106
  %110 = and i32 %109, 1
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %107, 10
  %113 = or i1 %112, %111
  %114 = select i1 %113, i32 748409683, i32 -2129571096
  br label %.backedge

115:                                              ; preds = %5
  store i32 %6, i32* %2, align 4
  %.0..0..0.15 = load volatile i32, i32* %2, align 4
  ret i32 %.0..0..0.15

116:                                              ; preds = %5
  %117 = tail call i32 @getchar()
  %118 = trunc i32 %117 to i8
  br label %.backedge

119:                                              ; preds = %5
  br label %.backedge

120:                                              ; preds = %5
  %121 = mul nsw i32 %.023, 10
  %122 = sext i8 %.021 to i32
  %123 = add i32 %121, -48
  %124 = add i32 %123, %122
  %125 = tail call i32 @getchar()
  %126 = trunc i32 %125 to i8
  br label %.backedge

127:                                              ; preds = %5
  br label %.backedge
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = load i32, i32* %0, align 4
  store i32 %6, i32* %5, align 4
  %7 = load i32, i32* %1, align 4
  store i32 %7, i32* %4, align 4
  %8 = load i32, i32* @x.9, align 4
  %9 = load i32, i32* @y.10, align 4
  %10 = add i32 %8, -1
  %11 = mul i32 %10, %8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %14, %13
  %16 = select i1 %15, i32 -217991278, i32 2090221228
  %17 = select i1 %15, i32 1169950523, i32 2090221228
  %18 = select i1 %15, i32 1487649059, i32 -16154616
  %19 = select i1 %15, i32 1940529343, i32 -16154616
  br label %20

20:                                               ; preds = %.backedge, %2
  %.01013 = phi i32* [ undef, %2 ], [ %.01013.be, %.backedge ]
  %.010 = phi i32* [ undef, %2 ], [ %.010.be, %.backedge ]
  %.0 = phi i32 [ 1908587365, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 1908587365, label %21
    i32 -1956263680, label %24
    i32 1940529343, label %25
    i32 1487649059, label %26
    i32 817850480, label %27
    i32 -1080862819, label %28
    i32 1169950523, label %29
    i32 -217991278, label %30
    i32 -16154616, label %31
    i32 2090221228, label %32
  ]

.backedge:                                        ; preds = %20, %32, %31, %29, %28, %27, %26, %25, %24, %21
  %.01013.be = phi i32* [ %.01013, %20 ], [ %.01013, %32 ], [ %.01013, %31 ], [ %.010, %29 ], [ %.01013, %28 ], [ %.01013, %27 ], [ %.01013, %26 ], [ %.01013, %25 ], [ %.01013, %24 ], [ %.01013, %21 ]
  %.010.be = phi i32* [ %.010, %20 ], [ %.010, %32 ], [ %1, %31 ], [ %.010, %29 ], [ %.010, %28 ], [ %0, %27 ], [ %.010, %26 ], [ %1, %25 ], [ %.010, %24 ], [ %.010, %21 ]
  %.0.be = phi i32 [ %.0, %20 ], [ 1169950523, %32 ], [ 1940529343, %31 ], [ %16, %29 ], [ %17, %28 ], [ -1080862819, %27 ], [ -1080862819, %26 ], [ %18, %25 ], [ %19, %24 ], [ %23, %21 ]
  br label %20

21:                                               ; preds = %20
  %.0..0..0.7 = load volatile i32, i32* %5, align 4
  %.0..0..0.8 = load volatile i32, i32* %4, align 4
  %22 = icmp slt i32 %.0..0..0.7, %.0..0..0.8
  %23 = select i1 %22, i32 -1956263680, i32 817850480
  br label %.backedge

24:                                               ; preds = %20
  br label %.backedge

25:                                               ; preds = %20
  br label %.backedge

26:                                               ; preds = %20
  br label %.backedge

27:                                               ; preds = %20
  br label %.backedge

28:                                               ; preds = %20
  br label %.backedge

29:                                               ; preds = %20
  br label %.backedge

30:                                               ; preds = %20
  store i32* %.01013, i32** %3, align 8
  %.0..0..0.9 = load volatile i32*, i32** %3, align 8
  ret i32* %.0..0..0.9

31:                                               ; preds = %20
  br label %.backedge

32:                                               ; preds = %20
  br label %.backedge
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #5 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = load i32, i32* %1, align 4
  store i32 %5, i32* %4, align 4
  %6 = load i32, i32* %0, align 4
  store i32 %6, i32* %3, align 4
  %7 = load i32, i32* @x.11, align 4
  %8 = load i32, i32* @y.12, align 4
  %9 = add i32 %7, -1
  %10 = mul i32 %9, %7
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %8, 10
  %14 = or i1 %13, %12
  %15 = select i1 %14, i32 1672596969, i32 1865553983
  %16 = select i1 %14, i32 -2064008488, i32 1865553983
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.08.ph = phi i32* [ undef, %2 ], [ %.08.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ 334685388, %2 ], [ %.0.ph.be, %.outer.backedge ]
  br label %.outer10

.outer10:                                         ; preds = %.outer10.backedge, %.outer
  %.0.ph11 = phi i32 [ %.0.ph, %.outer ], [ %.0.ph11.be, %.outer10.backedge ]
  br label %17

17:                                               ; preds = %.outer10, %17
  switch i32 %.0.ph11, label %17 [
    i32 334685388, label %18
    i32 1440557815, label %.outer10.backedge
    i32 -2064008488, label %.outer.backedge
    i32 1672596969, label %21
    i32 48913138, label %22
    i32 -215528562, label %23
    i32 1865553983, label %24
  ]

18:                                               ; preds = %17
  %.0..0..0.6 = load volatile i32, i32* %4, align 4
  %.0..0..0.7 = load volatile i32, i32* %3, align 4
  %19 = icmp slt i32 %.0..0..0.6, %.0..0..0.7
  %20 = select i1 %19, i32 1440557815, i32 48913138
  br label %.outer10.backedge

21:                                               ; preds = %17
  br label %.outer10.backedge

.outer10.backedge:                                ; preds = %17, %21, %18
  %.0.ph11.be = phi i32 [ %20, %18 ], [ -215528562, %21 ], [ %16, %17 ]
  br label %.outer10

22:                                               ; preds = %17
  br label %.outer.backedge

23:                                               ; preds = %17
  ret i32* %.08.ph

24:                                               ; preds = %17
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %17, %24, %22
  %.08.ph.be = phi i32* [ %0, %22 ], [ %1, %24 ], [ %1, %17 ]
  %.0.ph.be = phi i32 [ -215528562, %22 ], [ -2064008488, %24 ], [ %15, %17 ]
  br label %.outer
}

; Function Attrs: nofree nounwind
declare noundef i32 @getchar() local_unnamed_addr #2

attributes #0 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
