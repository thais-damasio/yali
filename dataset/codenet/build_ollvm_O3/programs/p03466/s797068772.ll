; ModuleID = 'build_ollvm/programs/p03466/s797068772.ll'
source_filename = "Project_CodeNet_C++1400/p03466/s797068772.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }

$_ZSt3maxIiERKT_S2_S2_ = comdat any

$_ZSt3minIiERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@Q = global i32 0, align 4
@a = global i32 0, align 4
@b = global i32 0, align 4
@c = global i32 0, align 4
@d = global i32 0, align 4
@as = local_unnamed_addr global i32 0, align 4
@k = local_unnamed_addr global i32 0, align 4
@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"%d%d%d%d\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s797068772.cpp, i8* null }]
@x = common local_unnamed_addr global i32 0
@y = common local_unnamed_addr global i32 0
@x.4 = common local_unnamed_addr global i32 0
@y.5 = common local_unnamed_addr global i32 0
@x.6 = common local_unnamed_addr global i32 0
@y.7 = common local_unnamed_addr global i32 0
@x.8 = common local_unnamed_addr global i32 0
@y.9 = common local_unnamed_addr global i32 0
@x.10 = common local_unnamed_addr global i32 0
@y.11 = common local_unnamed_addr global i32 0
@x.12 = common local_unnamed_addr global i32 0
@y.13 = common local_unnamed_addr global i32 0

; Function Attrs: noinline uwtable
define internal fastcc void @__cxx_global_var_init() unnamed_addr #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x, align 4
  %4 = load i32, i32* @y, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 1813101218, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 1813101218, label %11
    i32 -1098376444, label %14
    i32 -920892953, label %25
    i32 -1879784260, label %26
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -1098376444, i32 -1879784260
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %15 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #9
  %16 = load i32, i32* @x, align 4
  %17 = load i32, i32* @y, align 4
  %18 = add i32 %16, -1
  %19 = mul i32 %18, %16
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %17, 10
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 -920892953, i32 -1879784260
  br label %.outer.backedge

25:                                               ; preds = %10
  ret void

26:                                               ; preds = %10
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %27 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #9
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %26, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %24, %14 ], [ -1098376444, %26 ]
  br label %.outer
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: nofree noinline norecurse nounwind uwtable
define zeroext i1 @_Z3chki(i32 %0) local_unnamed_addr #4 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = load i32, i32* @k, align 4
  %5 = add i32 %0, -1
  %.neg = add i32 %4, 1
  %6 = sdiv i32 %5, %.neg
  %7 = load i32, i32* @a, align 4
  %8 = load i32, i32* @b, align 4
  %9 = add i32 %8, %7
  %10 = sub i32 1, %0
  %11 = add i32 %10, %9
  %12 = sdiv i32 %11, %.neg
  %13 = mul nsw i32 %12, %4
  %14 = add i32 %13, %6
  %15 = srem i32 %11, %.neg
  %16 = add i32 %14, %15
  store i32 %16, i32* %3, align 4
  store i32 %8, i32* %2, align 4
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %1
  %.0.ph = phi i32 [ 1114010872, %1 ], [ %.0.ph.be, %.outer.backedge ]
  br label %17

17:                                               ; preds = %.outer, %17
  switch i32 %.0.ph, label %17 [
    i32 1114010872, label %18
    i32 -1079391324, label %21
    i32 -786857984, label %22
  ]

18:                                               ; preds = %17
  %.0..0..0. = load volatile i32, i32* %3, align 4
  %.0..0..0.16 = load volatile i32, i32* %2, align 4
  %19 = icmp eq i32 %.0..0..0., %.0..0..0.16
  %20 = select i1 %19, i32 -1079391324, i32 -786857984
  br label %.outer.backedge

21:                                               ; preds = %17
  store i32 %0, i32* @as, align 4
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %21, %18
  %.0.ph.be = phi i32 [ %20, %18 ], [ -786857984, %21 ]
  br label %.outer

22:                                               ; preds = %17
  %23 = icmp sge i32 %16, %8
  ret i1 %23
}

; Function Attrs: noinline norecurse nounwind uwtable
define i32 @main() local_unnamed_addr #5 {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = alloca i1, align 1
  %4 = alloca i1, align 1
  %5 = alloca i1, align 1
  %6 = alloca i1, align 1
  %7 = alloca i1, align 1
  %8 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32* nonnull @Q)
  br label %9

9:                                                ; preds = %.backedge, %0
  %.059 = phi i32 [ undef, %0 ], [ %.059.be, %.backedge ]
  %.057 = phi i32 [ undef, %0 ], [ %.057.be, %.backedge ]
  %.055 = phi i32 [ undef, %0 ], [ %.055.be, %.backedge ]
  %.053 = phi i32 [ undef, %0 ], [ %.053.be, %.backedge ]
  %.051 = phi i32 [ undef, %0 ], [ %.051.be, %.backedge ]
  %.049 = phi i32 [ undef, %0 ], [ %.049.be, %.backedge ]
  %.047 = phi i32 [ undef, %0 ], [ %.047.be, %.backedge ]
  %.0 = phi i32 [ -866030436, %0 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -866030436, label %10
    i32 -690441746, label %14
    i32 -1212765383, label %29
    i32 -584510542, label %31
    i32 905291267, label %40
    i32 -571157862, label %47
    i32 1220476789, label %57
    i32 1478303105, label %67
    i32 1980973324, label %68
    i32 686658517, label %78
    i32 -158291795, label %89
    i32 -812535628, label %91
    i32 -290683250, label %101
    i32 -1998670841, label %112
    i32 1496998280, label %113
    i32 1501125161, label %114
    i32 -1217256999, label %115
    i32 1116021709, label %125
    i32 1757060291, label %136
    i32 665755792, label %138
    i32 188710320, label %139
    i32 -970839055, label %141
    i32 1052380884, label %151
    i32 1987231424, label %166
    i32 -1056094974, label %168
    i32 658907672, label %178
    i32 1458961945, label %194
    i32 -461421529, label %196
    i32 1837704543, label %197
    i32 1810636581, label %200
    i32 -1393111485, label %202
    i32 -293462839, label %212
    i32 1090745206, label %222
    i32 -695824942, label %223
    i32 -382477875, label %233
    i32 1011176301, label %243
    i32 1263447934, label %244
    i32 -479483951, label %251
    i32 76943332, label %258
    i32 582116942, label %259
    i32 -1330709396, label %262
    i32 -1668468469, label %263
    i32 -1561562093, label %264
    i32 -829401164, label %265
    i32 349524070, label %266
    i32 -956248631, label %271
    i32 -256865200, label %275
    i32 427585285, label %285
    i32 1569385201, label %296
    i32 -1410585225, label %297
    i32 1183496563, label %301
    i32 -904467005, label %307
    i32 -1603081818, label %309
    i32 1232116171, label %311
    i32 -329817329, label %321
    i32 -1904043074, label %333
    i32 -1827930852, label %335
    i32 -375399562, label %346
    i32 -1372003540, label %356
    i32 -1156514397, label %366
    i32 -446554677, label %367
    i32 -32550339, label %368
    i32 -403657362, label %373
    i32 -680584564, label %375
    i32 1586815991, label %378
    i32 1272339628, label %384
    i32 754421196, label %394
    i32 1656907120, label %405
    i32 -560067059, label %406
    i32 -1975894438, label %416
    i32 1045635870, label %426
    i32 523788891, label %427
    i32 -1715065967, label %437
    i32 -1837087631, label %450
    i32 560990398, label %452
    i32 1004437808, label %454
    i32 475901439, label %464
    i32 1365794767, label %476
    i32 -518708646, label %478
    i32 -302345843, label %489
    i32 2068088388, label %491
    i32 -1175004512, label %492
    i32 1910719406, label %493
    i32 795585156, label %494
    i32 1756550167, label %495
    i32 -512698892, label %496
    i32 1735350005, label %498
    i32 571140447, label %500
    i32 -751575382, label %501
    i32 -419721413, label %502
    i32 -44530876, label %503
    i32 -153894696, label %504
    i32 -1639313573, label %506
    i32 447523456, label %507
    i32 -1545016650, label %509
    i32 2106325427, label %511
    i32 -1103725997, label %512
    i32 -924010136, label %513
  ]

.backedge:                                        ; preds = %9, %513, %512, %511, %509, %507, %506, %504, %503, %502, %501, %500, %498, %496, %495, %494, %492, %491, %489, %478, %476, %464, %454, %452, %450, %437, %427, %426, %416, %406, %405, %394, %384, %378, %375, %373, %368, %367, %366, %356, %346, %335, %333, %321, %311, %309, %307, %301, %297, %296, %285, %275, %271, %266, %265, %264, %263, %262, %259, %258, %251, %244, %243, %233, %223, %222, %212, %202, %200, %197, %196, %194, %178, %168, %166, %151, %141, %139, %138, %136, %125, %115, %114, %113, %112, %101, %91, %89, %78, %68, %67, %57, %47, %40, %31, %29, %14, %10
  %.059.be = phi i32 [ %.059, %9 ], [ %.059, %513 ], [ %.059, %512 ], [ %.059, %511 ], [ %.059, %509 ], [ %.059, %507 ], [ %.059, %506 ], [ %.059, %504 ], [ %.059, %503 ], [ %.059, %502 ], [ %.059, %501 ], [ %.059, %500 ], [ %.059, %498 ], [ %.059, %496 ], [ %.059, %495 ], [ %.059, %494 ], [ %.059, %492 ], [ %.059, %491 ], [ %.059, %489 ], [ %.059, %478 ], [ %.059, %476 ], [ %.059, %464 ], [ %.059, %454 ], [ %.059, %452 ], [ %.059, %450 ], [ %.059, %437 ], [ %.059, %427 ], [ %.059, %426 ], [ %.059, %416 ], [ %.059, %406 ], [ %.059, %405 ], [ %.059, %394 ], [ %.059, %384 ], [ %.059, %378 ], [ %.059, %375 ], [ %.059, %373 ], [ %.059, %368 ], [ %.059, %367 ], [ %.059, %366 ], [ %.059, %356 ], [ %.059, %346 ], [ %.059, %335 ], [ %.059, %333 ], [ %.059, %321 ], [ %.059, %311 ], [ %.059, %309 ], [ %.059, %307 ], [ %.059, %301 ], [ %.059, %297 ], [ %.059, %296 ], [ %.059, %285 ], [ %.059, %275 ], [ %.059, %271 ], [ %.059, %266 ], [ %.059, %265 ], [ %.059, %264 ], [ %.059, %263 ], [ %.059, %262 ], [ %.059, %259 ], [ %.059, %258 ], [ %.059, %251 ], [ %.059, %244 ], [ %.059, %243 ], [ %.059, %233 ], [ %.059, %223 ], [ %.059, %222 ], [ %.059, %212 ], [ %.059, %202 ], [ %201, %200 ], [ %.059, %197 ], [ %.059, %196 ], [ %.059, %194 ], [ %.059, %178 ], [ %.059, %168 ], [ %.059, %166 ], [ %.059, %151 ], [ %.059, %141 ], [ %.059, %139 ], [ %.neg70, %138 ], [ %.059, %136 ], [ %.059, %125 ], [ %.059, %115 ], [ %.059, %114 ], [ %.059, %113 ], [ %.059, %112 ], [ %.059, %101 ], [ %.059, %91 ], [ %.059, %89 ], [ %.059, %78 ], [ %.059, %68 ], [ %.059, %67 ], [ %.059, %57 ], [ %.059, %47 ], [ %.059, %40 ], [ %.059, %31 ], [ %.059, %29 ], [ 1, %14 ], [ %.059, %10 ]
  %.057.be = phi i32 [ %.057, %9 ], [ %.057, %513 ], [ %.057, %512 ], [ %.057, %511 ], [ %.057, %509 ], [ %.057, %507 ], [ %.057, %506 ], [ %.057, %504 ], [ %.057, %503 ], [ %.057, %502 ], [ %.057, %501 ], [ %.057, %500 ], [ %.057, %498 ], [ %.057, %496 ], [ %.057, %495 ], [ %.057, %494 ], [ %.057, %492 ], [ %.057, %491 ], [ %.057, %489 ], [ %.057, %478 ], [ %.057, %476 ], [ %.057, %464 ], [ %.057, %454 ], [ %.057, %452 ], [ %.057, %450 ], [ %.057, %437 ], [ %.057, %427 ], [ %.057, %426 ], [ %.057, %416 ], [ %.057, %406 ], [ %.057, %405 ], [ %.057, %394 ], [ %.057, %384 ], [ %.057, %378 ], [ %.057, %375 ], [ %.057, %373 ], [ %.057, %368 ], [ %.057, %367 ], [ %.057, %366 ], [ %.057, %356 ], [ %.057, %346 ], [ %.057, %335 ], [ %.057, %333 ], [ %.057, %321 ], [ %.057, %311 ], [ %.057, %309 ], [ %.057, %307 ], [ %.057, %301 ], [ %.057, %297 ], [ %.057, %296 ], [ %.057, %285 ], [ %.057, %275 ], [ %.057, %271 ], [ %.057, %266 ], [ %.057, %265 ], [ %.057, %264 ], [ %.057, %263 ], [ %.neg66, %262 ], [ %.057, %259 ], [ %.057, %258 ], [ %.057, %251 ], [ %.057, %244 ], [ %.057, %243 ], [ %.057, %233 ], [ %.057, %223 ], [ %.057, %222 ], [ %.057, %212 ], [ %.057, %202 ], [ %.057, %200 ], [ %.057, %197 ], [ %.057, %196 ], [ %.057, %194 ], [ %.057, %178 ], [ %.057, %168 ], [ %.057, %166 ], [ %.057, %151 ], [ %.057, %141 ], [ %140, %139 ], [ %.057, %138 ], [ %.057, %136 ], [ %.057, %125 ], [ %.057, %115 ], [ %.057, %114 ], [ %.057, %113 ], [ %.057, %112 ], [ %.057, %101 ], [ %.057, %91 ], [ %.057, %89 ], [ %.057, %78 ], [ %.057, %68 ], [ %.057, %67 ], [ %.057, %57 ], [ %.057, %47 ], [ %.057, %40 ], [ %.057, %31 ], [ %.057, %29 ], [ %.neg74, %14 ], [ %.057, %10 ]
  %.055.be = phi i32 [ %.055, %9 ], [ %.055, %513 ], [ %.055, %512 ], [ %.055, %511 ], [ %.055, %509 ], [ %.055, %507 ], [ %.055, %506 ], [ %.055, %504 ], [ %.055, %503 ], [ %.055, %502 ], [ %.055, %501 ], [ %.055, %500 ], [ %.055, %498 ], [ %497, %496 ], [ %.055, %495 ], [ %.055, %494 ], [ %.055, %492 ], [ %.055, %491 ], [ %.055, %489 ], [ %.055, %478 ], [ %.055, %476 ], [ %.055, %464 ], [ %.055, %454 ], [ %.055, %452 ], [ %.055, %450 ], [ %.055, %437 ], [ %.055, %427 ], [ %.055, %426 ], [ %.055, %416 ], [ %.055, %406 ], [ %.055, %405 ], [ %.055, %394 ], [ %.055, %384 ], [ %.055, %378 ], [ %.055, %375 ], [ %.055, %373 ], [ %.055, %368 ], [ %.055, %367 ], [ %.055, %366 ], [ %.055, %356 ], [ %.055, %346 ], [ %.055, %335 ], [ %.055, %333 ], [ %.055, %321 ], [ %.055, %311 ], [ %.055, %309 ], [ %.055, %307 ], [ %.055, %301 ], [ %.055, %297 ], [ %.055, %296 ], [ %.055, %285 ], [ %.055, %275 ], [ %.055, %271 ], [ %.055, %266 ], [ %.055, %265 ], [ %.055, %264 ], [ %.055, %263 ], [ %.055, %262 ], [ %.055, %259 ], [ %.055, %258 ], [ %.055, %251 ], [ %.055, %244 ], [ %.055, %243 ], [ %.055, %233 ], [ %.055, %223 ], [ %.055, %222 ], [ %.055, %212 ], [ %.055, %202 ], [ %.055, %200 ], [ %.055, %197 ], [ %.055, %196 ], [ %.055, %194 ], [ %.055, %178 ], [ %.055, %168 ], [ %.055, %166 ], [ %.055, %151 ], [ %.055, %141 ], [ %.055, %139 ], [ %.055, %138 ], [ %.055, %136 ], [ %.055, %125 ], [ %.055, %115 ], [ %.055, %114 ], [ %.055, %113 ], [ %.055, %112 ], [ %102, %101 ], [ %.055, %91 ], [ %.055, %89 ], [ %.055, %78 ], [ %.055, %68 ], [ %.055, %67 ], [ %.055, %57 ], [ %.055, %47 ], [ %.055, %40 ], [ %33, %31 ], [ %.055, %29 ], [ %.055, %14 ], [ %.055, %10 ]
  %.053.be = phi i32 [ %.053, %9 ], [ %.053, %513 ], [ %.053, %512 ], [ %.053, %511 ], [ %.053, %509 ], [ %.053, %507 ], [ %.053, %506 ], [ %505, %504 ], [ %.053, %503 ], [ %.053, %502 ], [ %.053, %501 ], [ %.053, %500 ], [ %.053, %498 ], [ %.053, %496 ], [ %.053, %495 ], [ %.053, %494 ], [ %.053, %492 ], [ %.053, %491 ], [ %.053, %489 ], [ %.053, %478 ], [ %.053, %476 ], [ %.053, %464 ], [ %.053, %454 ], [ %.053, %452 ], [ %.053, %450 ], [ %.053, %437 ], [ %.053, %427 ], [ %.053, %426 ], [ %.053, %416 ], [ %.053, %406 ], [ %.053, %405 ], [ %.053, %394 ], [ %.053, %384 ], [ %.053, %378 ], [ %.053, %375 ], [ %.053, %373 ], [ %.053, %368 ], [ %.053, %367 ], [ %.053, %366 ], [ %.053, %356 ], [ %.053, %346 ], [ %.053, %335 ], [ %.053, %333 ], [ %.053, %321 ], [ %.053, %311 ], [ %.053, %309 ], [ %308, %307 ], [ %.053, %301 ], [ %.053, %297 ], [ %.053, %296 ], [ %286, %285 ], [ %.053, %275 ], [ %.053, %271 ], [ %.053, %266 ], [ %.053, %265 ], [ %.053, %264 ], [ %.053, %263 ], [ %.053, %262 ], [ %.053, %259 ], [ %.053, %258 ], [ %.053, %251 ], [ %.053, %244 ], [ %.053, %243 ], [ %.053, %233 ], [ %.053, %223 ], [ %.053, %222 ], [ %.053, %212 ], [ %.053, %202 ], [ %.053, %200 ], [ %.053, %197 ], [ %.053, %196 ], [ %.053, %194 ], [ %.053, %178 ], [ %.053, %168 ], [ %.053, %166 ], [ %.053, %151 ], [ %.053, %141 ], [ %.053, %139 ], [ %.053, %138 ], [ %.053, %136 ], [ %.053, %125 ], [ %.053, %115 ], [ %.053, %114 ], [ %.053, %113 ], [ %.053, %112 ], [ %.053, %101 ], [ %.053, %91 ], [ %.053, %89 ], [ %.053, %78 ], [ %.053, %68 ], [ %.053, %67 ], [ %.053, %57 ], [ %.053, %47 ], [ %.053, %40 ], [ %.053, %31 ], [ %.053, %29 ], [ %.053, %14 ], [ %.053, %10 ]
  %.051.be = phi i32 [ %.051, %9 ], [ %.051, %513 ], [ %.051, %512 ], [ %.051, %511 ], [ %.051, %509 ], [ %508, %507 ], [ %.051, %506 ], [ %.051, %504 ], [ %.051, %503 ], [ %.051, %502 ], [ %.051, %501 ], [ %.051, %500 ], [ %.051, %498 ], [ %.051, %496 ], [ %.051, %495 ], [ %.051, %494 ], [ %.051, %492 ], [ %.051, %491 ], [ %.051, %489 ], [ %.051, %478 ], [ %.051, %476 ], [ %.051, %464 ], [ %.051, %454 ], [ %.051, %452 ], [ %.051, %450 ], [ %.051, %437 ], [ %.051, %427 ], [ %.051, %426 ], [ %.051, %416 ], [ %.051, %406 ], [ %.051, %405 ], [ %.051, %394 ], [ %.051, %384 ], [ %.051, %378 ], [ %.051, %375 ], [ %.051, %373 ], [ %.051, %368 ], [ %.051, %367 ], [ %.051, %366 ], [ %.neg, %356 ], [ %.051, %346 ], [ %.051, %335 ], [ %.051, %333 ], [ %.051, %321 ], [ %.051, %311 ], [ %310, %309 ], [ %.051, %307 ], [ %.051, %301 ], [ %.051, %297 ], [ %.051, %296 ], [ %.051, %285 ], [ %.051, %275 ], [ %.051, %271 ], [ %.051, %266 ], [ %.051, %265 ], [ %.051, %264 ], [ %.051, %263 ], [ %.051, %262 ], [ %.051, %259 ], [ %.051, %258 ], [ %.051, %251 ], [ %.051, %244 ], [ %.051, %243 ], [ %.051, %233 ], [ %.051, %223 ], [ %.051, %222 ], [ %.051, %212 ], [ %.051, %202 ], [ %.051, %200 ], [ %.051, %197 ], [ %.051, %196 ], [ %.051, %194 ], [ %.051, %178 ], [ %.051, %168 ], [ %.051, %166 ], [ %.051, %151 ], [ %.051, %141 ], [ %.051, %139 ], [ %.051, %138 ], [ %.051, %136 ], [ %.051, %125 ], [ %.051, %115 ], [ %.051, %114 ], [ %.051, %113 ], [ %.051, %112 ], [ %.051, %101 ], [ %.051, %91 ], [ %.051, %89 ], [ %.051, %78 ], [ %.051, %68 ], [ %.051, %67 ], [ %.051, %57 ], [ %.051, %47 ], [ %.051, %40 ], [ %.051, %31 ], [ %.051, %29 ], [ %.051, %14 ], [ %.051, %10 ]
  %.049.be = phi i32 [ %.049, %9 ], [ %.049, %513 ], [ %.049, %512 ], [ %.049, %511 ], [ %510, %509 ], [ %.049, %507 ], [ %.049, %506 ], [ %.049, %504 ], [ %.049, %503 ], [ %.049, %502 ], [ %.049, %501 ], [ %.049, %500 ], [ %.049, %498 ], [ %.049, %496 ], [ %.049, %495 ], [ %.049, %494 ], [ %.049, %492 ], [ %.049, %491 ], [ %.049, %489 ], [ %.049, %478 ], [ %.049, %476 ], [ %.049, %464 ], [ %.049, %454 ], [ %.049, %452 ], [ %.049, %450 ], [ %.049, %437 ], [ %.049, %427 ], [ %.049, %426 ], [ %.049, %416 ], [ %.049, %406 ], [ %.049, %405 ], [ %395, %394 ], [ %.049, %384 ], [ %.049, %378 ], [ %.049, %375 ], [ %374, %373 ], [ %.049, %368 ], [ %.049, %367 ], [ %.049, %366 ], [ %.049, %356 ], [ %.049, %346 ], [ %.049, %335 ], [ %.049, %333 ], [ %.049, %321 ], [ %.049, %311 ], [ %.049, %309 ], [ %.049, %307 ], [ %.049, %301 ], [ %.049, %297 ], [ %.049, %296 ], [ %.049, %285 ], [ %.049, %275 ], [ %.049, %271 ], [ %.049, %266 ], [ %.049, %265 ], [ %.049, %264 ], [ %.049, %263 ], [ %.049, %262 ], [ %.049, %259 ], [ %.049, %258 ], [ %.049, %251 ], [ %.049, %244 ], [ %.049, %243 ], [ %.049, %233 ], [ %.049, %223 ], [ %.049, %222 ], [ %.049, %212 ], [ %.049, %202 ], [ %.049, %200 ], [ %.049, %197 ], [ %.049, %196 ], [ %.049, %194 ], [ %.049, %178 ], [ %.049, %168 ], [ %.049, %166 ], [ %.049, %151 ], [ %.049, %141 ], [ %.049, %139 ], [ %.049, %138 ], [ %.049, %136 ], [ %.049, %125 ], [ %.049, %115 ], [ %.049, %114 ], [ %.049, %113 ], [ %.049, %112 ], [ %.049, %101 ], [ %.049, %91 ], [ %.049, %89 ], [ %.049, %78 ], [ %.049, %68 ], [ %.049, %67 ], [ %.049, %57 ], [ %.049, %47 ], [ %.049, %40 ], [ %.049, %31 ], [ %.049, %29 ], [ %.049, %14 ], [ %.049, %10 ]
  %.047.be = phi i32 [ %.047, %9 ], [ %.047, %513 ], [ %.047, %512 ], [ %.047, %511 ], [ %.047, %509 ], [ %.047, %507 ], [ %.047, %506 ], [ %.047, %504 ], [ %.047, %503 ], [ %.047, %502 ], [ %.047, %501 ], [ %.047, %500 ], [ %.047, %498 ], [ %.047, %496 ], [ %.047, %495 ], [ %.047, %494 ], [ %.047, %492 ], [ %.047, %491 ], [ %490, %489 ], [ %.047, %478 ], [ %.047, %476 ], [ %.047, %464 ], [ %.047, %454 ], [ %453, %452 ], [ %.047, %450 ], [ %.047, %437 ], [ %.047, %427 ], [ %.047, %426 ], [ %.047, %416 ], [ %.047, %406 ], [ %.047, %405 ], [ %.047, %394 ], [ %.047, %384 ], [ %.047, %378 ], [ %.047, %375 ], [ %.047, %373 ], [ %.047, %368 ], [ %.047, %367 ], [ %.047, %366 ], [ %.047, %356 ], [ %.047, %346 ], [ %.047, %335 ], [ %.047, %333 ], [ %.047, %321 ], [ %.047, %311 ], [ %.047, %309 ], [ %.047, %307 ], [ %.047, %301 ], [ %.047, %297 ], [ %.047, %296 ], [ %.047, %285 ], [ %.047, %275 ], [ %.047, %271 ], [ %.047, %266 ], [ %.047, %265 ], [ %.047, %264 ], [ %.047, %263 ], [ %.047, %262 ], [ %.047, %259 ], [ %.047, %258 ], [ %.047, %251 ], [ %.047, %244 ], [ %.047, %243 ], [ %.047, %233 ], [ %.047, %223 ], [ %.047, %222 ], [ %.047, %212 ], [ %.047, %202 ], [ %.047, %200 ], [ %.047, %197 ], [ %.047, %196 ], [ %.047, %194 ], [ %.047, %178 ], [ %.047, %168 ], [ %.047, %166 ], [ %.047, %151 ], [ %.047, %141 ], [ %.047, %139 ], [ %.047, %138 ], [ %.047, %136 ], [ %.047, %125 ], [ %.047, %115 ], [ %.047, %114 ], [ %.047, %113 ], [ %.047, %112 ], [ %.047, %101 ], [ %.047, %91 ], [ %.047, %89 ], [ %.047, %78 ], [ %.047, %68 ], [ %.047, %67 ], [ %.047, %57 ], [ %.047, %47 ], [ %.047, %40 ], [ %.047, %31 ], [ %.047, %29 ], [ %.047, %14 ], [ %.047, %10 ]
  %.0.be = phi i32 [ %.0, %9 ], [ 475901439, %513 ], [ -1715065967, %512 ], [ -1975894438, %511 ], [ 754421196, %509 ], [ -1372003540, %507 ], [ -329817329, %506 ], [ 427585285, %504 ], [ -382477875, %503 ], [ -293462839, %502 ], [ 658907672, %501 ], [ 1052380884, %500 ], [ 1116021709, %498 ], [ -290683250, %496 ], [ 686658517, %495 ], [ 1220476789, %494 ], [ -866030436, %492 ], [ -1175004512, %491 ], [ 1004437808, %489 ], [ -302345843, %478 ], [ %477, %476 ], [ %475, %464 ], [ %463, %454 ], [ 1004437808, %452 ], [ %451, %450 ], [ %449, %437 ], [ %436, %427 ], [ 523788891, %426 ], [ %425, %416 ], [ %415, %406 ], [ -680584564, %405 ], [ %404, %394 ], [ %393, %384 ], [ 1272339628, %378 ], [ %377, %375 ], [ -680584564, %373 ], [ %372, %368 ], [ -32550339, %367 ], [ 1232116171, %366 ], [ %365, %356 ], [ %355, %346 ], [ -375399562, %335 ], [ %334, %333 ], [ %332, %321 ], [ %320, %311 ], [ 1232116171, %309 ], [ -1410585225, %307 ], [ -904467005, %301 ], [ %300, %297 ], [ -1410585225, %296 ], [ %295, %285 ], [ %284, %275 ], [ %274, %271 ], [ %270, %266 ], [ -1212765383, %265 ], [ -829401164, %264 ], [ -1561562093, %263 ], [ -1668468469, %262 ], [ %261, %259 ], [ -1561562093, %258 ], [ %257, %251 ], [ %250, %244 ], [ 1263447934, %243 ], [ %242, %233 ], [ %232, %223 ], [ -695824942, %222 ], [ %221, %212 ], [ %211, %202 ], [ -1393111485, %200 ], [ %199, %197 ], [ -695824942, %196 ], [ %195, %194 ], [ %193, %178 ], [ %177, %168 ], [ %167, %166 ], [ %165, %151 ], [ %150, %141 ], [ -970839055, %139 ], [ -970839055, %138 ], [ %137, %136 ], [ %135, %125 ], [ %124, %115 ], [ -1217256999, %114 ], [ 1501125161, %113 ], [ 1496998280, %112 ], [ %111, %101 ], [ %100, %91 ], [ %90, %89 ], [ %88, %78 ], [ %77, %68 ], [ 1501125161, %67 ], [ %66, %57 ], [ %56, %47 ], [ %46, %40 ], [ %39, %31 ], [ %30, %29 ], [ -1212765383, %14 ], [ %13, %10 ]
  br label %9

10:                                               ; preds = %9
  %11 = load i32, i32* @Q, align 4
  %12 = add i32 %11, -1
  store i32 %12, i32* @Q, align 4
  %.not75 = icmp eq i32 %11, 0
  %13 = select i1 %.not75, i32 1910719406, i32 -690441746
  br label %.backedge

14:                                               ; preds = %9
  %15 = tail call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32* nonnull @a, i32* nonnull @b, i32* nonnull @c, i32* nonnull @d)
  %16 = tail call dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* nonnull dereferenceable(4) @a, i32* nonnull dereferenceable(4) @b)
  %17 = load i32, i32* %16, align 4
  %18 = sitofp i32 %17 to double
  %19 = tail call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* nonnull dereferenceable(4) @a, i32* nonnull dereferenceable(4) @b)
  %20 = load i32, i32* %19, align 4
  %21 = add i32 %20, 1
  %22 = sitofp i32 %21 to double
  %23 = fdiv double %18, %22
  %24 = tail call double @llvm.ceil.f64(double %23)
  %25 = fptosi double %24 to i32
  store i32 %25, i32* @k, align 4
  %26 = load i32, i32* @a, align 4
  %27 = load i32, i32* @b, align 4
  %28 = add i32 %26, 1
  %.neg74 = add i32 %28, %27
  br label %.backedge

29:                                               ; preds = %9
  %.not73 = icmp sgt i32 %.059, %.057
  %30 = select i1 %.not73, i32 349524070, i32 -584510542
  br label %.backedge

31:                                               ; preds = %9
  %32 = add i32 %.057, %.059
  %33 = ashr i32 %32, 1
  %34 = add nsw i32 %33, -1
  %35 = load i32, i32* @k, align 4
  %36 = add i32 %35, 1
  %37 = srem i32 %34, %36
  %38 = icmp eq i32 %37, 0
  %39 = select i1 %38, i32 905291267, i32 -1217256999
  br label %.backedge

40:                                               ; preds = %9
  %41 = load i32, i32* @a, align 4
  %42 = load i32, i32* @b, align 4
  %43 = sub i32 2, %.055
  %.neg71.neg = add i32 %43, %41
  %44 = add i32 %.neg71.neg, %42
  %45 = load i32, i32* @k, align 4
  %.not72 = icmp sgt i32 %44, %45
  %46 = select i1 %.not72, i32 1980973324, i32 -571157862
  br label %.backedge

47:                                               ; preds = %9
  %48 = load i32, i32* @x.6, align 4
  %49 = load i32, i32* @y.7, align 4
  %50 = add i32 %48, -1
  %51 = mul i32 %50, %48
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %49, 10
  %55 = or i1 %54, %53
  %56 = select i1 %55, i32 1220476789, i32 795585156
  br label %.backedge

57:                                               ; preds = %9
  %58 = load i32, i32* @x.6, align 4
  %59 = load i32, i32* @y.7, align 4
  %60 = add i32 %58, -1
  %61 = mul i32 %60, %58
  %62 = and i32 %61, 1
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %59, 10
  %65 = or i1 %64, %63
  %66 = select i1 %65, i32 1478303105, i32 795585156
  br label %.backedge

67:                                               ; preds = %9
  br label %.backedge

68:                                               ; preds = %9
  %69 = load i32, i32* @x.6, align 4
  %70 = load i32, i32* @y.7, align 4
  %71 = add i32 %69, -1
  %72 = mul i32 %71, %69
  %73 = and i32 %72, 1
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %70, 10
  %76 = or i1 %75, %74
  %77 = select i1 %76, i32 686658517, i32 1756550167
  br label %.backedge

78:                                               ; preds = %9
  %79 = icmp sgt i32 %.055, 1
  store i1 %79, i1* %7, align 1
  %80 = load i32, i32* @x.6, align 4
  %81 = load i32, i32* @y.7, align 4
  %82 = add i32 %80, -1
  %83 = mul i32 %82, %80
  %84 = and i32 %83, 1
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %81, 10
  %87 = or i1 %86, %85
  %88 = select i1 %87, i32 -158291795, i32 1756550167
  br label %.backedge

89:                                               ; preds = %9
  %.0..0..0. = load volatile i1, i1* %7, align 1
  %90 = select i1 %.0..0..0., i32 -812535628, i32 1496998280
  br label %.backedge

91:                                               ; preds = %9
  %92 = load i32, i32* @x.6, align 4
  %93 = load i32, i32* @y.7, align 4
  %94 = add i32 %92, -1
  %95 = mul i32 %94, %92
  %96 = and i32 %95, 1
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %93, 10
  %99 = or i1 %98, %97
  %100 = select i1 %99, i32 -290683250, i32 -512698892
  br label %.backedge

101:                                              ; preds = %9
  %102 = add i32 %.055, 1
  %103 = load i32, i32* @x.6, align 4
  %104 = load i32, i32* @y.7, align 4
  %105 = add i32 %103, -1
  %106 = mul i32 %105, %103
  %107 = and i32 %106, 1
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %104, 10
  %110 = or i1 %109, %108
  %111 = select i1 %110, i32 -1998670841, i32 -512698892
  br label %.backedge

112:                                              ; preds = %9
  br label %.backedge

113:                                              ; preds = %9
  br label %.backedge

114:                                              ; preds = %9
  br label %.backedge

115:                                              ; preds = %9
  %116 = load i32, i32* @x.6, align 4
  %117 = load i32, i32* @y.7, align 4
  %118 = add i32 %116, -1
  %119 = mul i32 %118, %116
  %120 = and i32 %119, 1
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %117, 10
  %123 = or i1 %122, %121
  %124 = select i1 %123, i32 1116021709, i32 1735350005
  br label %.backedge

125:                                              ; preds = %9
  %126 = tail call zeroext i1 @_Z3chki(i32 %.055)
  store i1 %126, i1* %6, align 1
  %127 = load i32, i32* @x.6, align 4
  %128 = load i32, i32* @y.7, align 4
  %129 = add i32 %127, -1
  %130 = mul i32 %129, %127
  %131 = and i32 %130, 1
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %128, 10
  %134 = or i1 %133, %132
  %135 = select i1 %134, i32 1757060291, i32 1735350005
  br label %.backedge

136:                                              ; preds = %9
  %.0..0..0.41 = load volatile i1, i1* %6, align 1
  %137 = select i1 %.0..0..0.41, i32 665755792, i32 188710320
  br label %.backedge

138:                                              ; preds = %9
  %.neg70 = add i32 %.055, 1
  br label %.backedge

139:                                              ; preds = %9
  %140 = add i32 %.055, -1
  br label %.backedge

141:                                              ; preds = %9
  %142 = load i32, i32* @x.6, align 4
  %143 = load i32, i32* @y.7, align 4
  %144 = add i32 %142, -1
  %145 = mul i32 %144, %142
  %146 = and i32 %145, 1
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %143, 10
  %149 = or i1 %148, %147
  %150 = select i1 %149, i32 1052380884, i32 571140447
  br label %.backedge

151:                                              ; preds = %9
  %152 = add i32 %.059, -1
  %153 = load i32, i32* @k, align 4
  %154 = add i32 %153, 1
  %155 = srem i32 %152, %154
  %156 = icmp eq i32 %155, 0
  store i1 %156, i1* %5, align 1
  %157 = load i32, i32* @x.6, align 4
  %158 = load i32, i32* @y.7, align 4
  %159 = add i32 %157, -1
  %160 = mul i32 %159, %157
  %161 = and i32 %160, 1
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %158, 10
  %164 = or i1 %163, %162
  %165 = select i1 %164, i32 1987231424, i32 571140447
  br label %.backedge

166:                                              ; preds = %9
  %.0..0..0.42 = load volatile i1, i1* %5, align 1
  %167 = select i1 %.0..0..0.42, i32 -1056094974, i32 1263447934
  br label %.backedge

168:                                              ; preds = %9
  %169 = load i32, i32* @x.6, align 4
  %170 = load i32, i32* @y.7, align 4
  %171 = add i32 %169, -1
  %172 = mul i32 %171, %169
  %173 = and i32 %172, 1
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %170, 10
  %176 = or i1 %175, %174
  %177 = select i1 %176, i32 658907672, i32 -751575382
  br label %.backedge

178:                                              ; preds = %9
  %179 = load i32, i32* @a, align 4
  %180 = load i32, i32* @b, align 4
  %181 = sub i32 2, %.059
  %.neg69.neg = add i32 %181, %179
  %182 = add i32 %.neg69.neg, %180
  %183 = load i32, i32* @k, align 4
  %184 = icmp sle i32 %182, %183
  store i1 %184, i1* %4, align 1
  %185 = load i32, i32* @x.6, align 4
  %186 = load i32, i32* @y.7, align 4
  %187 = add i32 %185, -1
  %188 = mul i32 %187, %185
  %189 = and i32 %188, 1
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %186, 10
  %192 = or i1 %191, %190
  %193 = select i1 %192, i32 1458961945, i32 -751575382
  br label %.backedge

194:                                              ; preds = %9
  %.0..0..0.43 = load volatile i1, i1* %4, align 1
  %195 = select i1 %.0..0..0.43, i32 -461421529, i32 1837704543
  br label %.backedge

196:                                              ; preds = %9
  br label %.backedge

197:                                              ; preds = %9
  %198 = icmp sgt i32 %.059, 1
  %199 = select i1 %198, i32 1810636581, i32 -1393111485
  br label %.backedge

200:                                              ; preds = %9
  %201 = add i32 %.059, 1
  br label %.backedge

202:                                              ; preds = %9
  %203 = load i32, i32* @x.6, align 4
  %204 = load i32, i32* @y.7, align 4
  %205 = add i32 %203, -1
  %206 = mul i32 %205, %203
  %207 = and i32 %206, 1
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %204, 10
  %210 = or i1 %209, %208
  %211 = select i1 %210, i32 -293462839, i32 -419721413
  br label %.backedge

212:                                              ; preds = %9
  %213 = load i32, i32* @x.6, align 4
  %214 = load i32, i32* @y.7, align 4
  %215 = add i32 %213, -1
  %216 = mul i32 %215, %213
  %217 = and i32 %216, 1
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %214, 10
  %220 = or i1 %219, %218
  %221 = select i1 %220, i32 1090745206, i32 -419721413
  br label %.backedge

222:                                              ; preds = %9
  br label %.backedge

223:                                              ; preds = %9
  %224 = load i32, i32* @x.6, align 4
  %225 = load i32, i32* @y.7, align 4
  %226 = add i32 %224, -1
  %227 = mul i32 %226, %224
  %228 = and i32 %227, 1
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %225, 10
  %231 = or i1 %230, %229
  %232 = select i1 %231, i32 -382477875, i32 -44530876
  br label %.backedge

233:                                              ; preds = %9
  %234 = load i32, i32* @x.6, align 4
  %235 = load i32, i32* @y.7, align 4
  %236 = add i32 %234, -1
  %237 = mul i32 %236, %234
  %238 = and i32 %237, 1
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %235, 10
  %241 = or i1 %240, %239
  %242 = select i1 %241, i32 1011176301, i32 -44530876
  br label %.backedge

243:                                              ; preds = %9
  br label %.backedge

244:                                              ; preds = %9
  %245 = add i32 %.057, -1
  %246 = load i32, i32* @k, align 4
  %247 = add i32 %246, 1
  %248 = srem i32 %245, %247
  %249 = icmp eq i32 %248, 0
  %250 = select i1 %249, i32 -479483951, i32 -829401164
  br label %.backedge

251:                                              ; preds = %9
  %252 = load i32, i32* @a, align 4
  %253 = load i32, i32* @b, align 4
  %254 = sub i32 2, %.057
  %.neg67.neg = add i32 %254, %252
  %255 = add i32 %.neg67.neg, %253
  %256 = load i32, i32* @k, align 4
  %.not68 = icmp sgt i32 %255, %256
  %257 = select i1 %.not68, i32 582116942, i32 76943332
  br label %.backedge

258:                                              ; preds = %9
  br label %.backedge

259:                                              ; preds = %9
  %260 = icmp sgt i32 %.057, 1
  %261 = select i1 %260, i32 -1330709396, i32 -1668468469
  br label %.backedge

262:                                              ; preds = %9
  %.neg66 = add i32 %.057, -1
  br label %.backedge

263:                                              ; preds = %9
  br label %.backedge

264:                                              ; preds = %9
  br label %.backedge

265:                                              ; preds = %9
  br label %.backedge

266:                                              ; preds = %9
  %267 = load i32, i32* @c, align 4
  %268 = load i32, i32* @as, align 4
  %269 = icmp slt i32 %267, %268
  %270 = select i1 %269, i32 -956248631, i32 -32550339
  br label %.backedge

271:                                              ; preds = %9
  %272 = load i32, i32* @d, align 4
  %273 = load i32, i32* @as, align 4
  %.not65 = icmp slt i32 %272, %273
  %274 = select i1 %.not65, i32 -32550339, i32 -256865200
  br label %.backedge

275:                                              ; preds = %9
  %276 = load i32, i32* @x.6, align 4
  %277 = load i32, i32* @y.7, align 4
  %278 = add i32 %276, -1
  %279 = mul i32 %278, %276
  %280 = and i32 %279, 1
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %277, 10
  %283 = or i1 %282, %281
  %284 = select i1 %283, i32 427585285, i32 -153894696
  br label %.backedge

285:                                              ; preds = %9
  %286 = load i32, i32* @c, align 4
  %287 = load i32, i32* @x.6, align 4
  %288 = load i32, i32* @y.7, align 4
  %289 = add i32 %287, -1
  %290 = mul i32 %289, %287
  %291 = and i32 %290, 1
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %288, 10
  %294 = or i1 %293, %292
  %295 = select i1 %294, i32 1569385201, i32 -153894696
  br label %.backedge

296:                                              ; preds = %9
  br label %.backedge

297:                                              ; preds = %9
  %298 = load i32, i32* @as, align 4
  %299 = icmp slt i32 %.053, %298
  %300 = select i1 %299, i32 1183496563, i32 -1603081818
  br label %.backedge

301:                                              ; preds = %9
  %302 = load i32, i32* @k, align 4
  %303 = add i32 %302, 1
  %304 = srem i32 %.053, %303
  %305 = icmp eq i32 %304, 0
  %306 = select i1 %305, i32 66, i32 65
  %putchar64 = tail call i32 @putchar(i32 %306)
  br label %.backedge

307:                                              ; preds = %9
  %308 = add i32 %.053, 1
  br label %.backedge

309:                                              ; preds = %9
  %310 = load i32, i32* @as, align 4
  br label %.backedge

311:                                              ; preds = %9
  %312 = load i32, i32* @x.6, align 4
  %313 = load i32, i32* @y.7, align 4
  %314 = add i32 %312, -1
  %315 = mul i32 %314, %312
  %316 = and i32 %315, 1
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %313, 10
  %319 = or i1 %318, %317
  %320 = select i1 %319, i32 -329817329, i32 -1639313573
  br label %.backedge

321:                                              ; preds = %9
  %322 = load i32, i32* @d, align 4
  %323 = icmp sle i32 %.051, %322
  store i1 %323, i1* %3, align 1
  %324 = load i32, i32* @x.6, align 4
  %325 = load i32, i32* @y.7, align 4
  %326 = add i32 %324, -1
  %327 = mul i32 %326, %324
  %328 = and i32 %327, 1
  %329 = icmp eq i32 %328, 0
  %330 = icmp slt i32 %325, 10
  %331 = or i1 %330, %329
  %332 = select i1 %331, i32 -1904043074, i32 -1639313573
  br label %.backedge

333:                                              ; preds = %9
  %.0..0..0.44 = load volatile i1, i1* %3, align 1
  %334 = select i1 %.0..0..0.44, i32 -1827930852, i32 -446554677
  br label %.backedge

335:                                              ; preds = %9
  %336 = load i32, i32* @a, align 4
  %337 = load i32, i32* @b, align 4
  %338 = sub i32 1, %.051
  %339 = add i32 %338, %336
  %340 = add i32 %339, %337
  %341 = load i32, i32* @k, align 4
  %342 = add i32 %341, 1
  %343 = srem i32 %340, %342
  %344 = icmp eq i32 %343, 0
  %345 = select i1 %344, i32 65, i32 66
  %putchar63 = tail call i32 @putchar(i32 %345)
  br label %.backedge

346:                                              ; preds = %9
  %347 = load i32, i32* @x.6, align 4
  %348 = load i32, i32* @y.7, align 4
  %349 = add i32 %347, -1
  %350 = mul i32 %349, %347
  %351 = and i32 %350, 1
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %348, 10
  %354 = or i1 %353, %352
  %355 = select i1 %354, i32 -1372003540, i32 447523456
  br label %.backedge

356:                                              ; preds = %9
  %.neg = add i32 %.051, 1
  %357 = load i32, i32* @x.6, align 4
  %358 = load i32, i32* @y.7, align 4
  %359 = add i32 %357, -1
  %360 = mul i32 %359, %357
  %361 = and i32 %360, 1
  %362 = icmp eq i32 %361, 0
  %363 = icmp slt i32 %358, 10
  %364 = or i1 %363, %362
  %365 = select i1 %364, i32 -1156514397, i32 447523456
  br label %.backedge

366:                                              ; preds = %9
  br label %.backedge

367:                                              ; preds = %9
  br label %.backedge

368:                                              ; preds = %9
  %369 = load i32, i32* @d, align 4
  %370 = load i32, i32* @as, align 4
  %371 = icmp slt i32 %369, %370
  %372 = select i1 %371, i32 -403657362, i32 523788891
  br label %.backedge

373:                                              ; preds = %9
  %374 = load i32, i32* @c, align 4
  br label %.backedge

375:                                              ; preds = %9
  %376 = load i32, i32* @d, align 4
  %.not = icmp sgt i32 %.049, %376
  %377 = select i1 %.not, i32 -560067059, i32 1586815991
  br label %.backedge

378:                                              ; preds = %9
  %379 = load i32, i32* @k, align 4
  %380 = add i32 %379, 1
  %381 = srem i32 %.049, %380
  %382 = icmp eq i32 %381, 0
  %383 = select i1 %382, i32 66, i32 65
  %putchar62 = tail call i32 @putchar(i32 %383)
  br label %.backedge

384:                                              ; preds = %9
  %385 = load i32, i32* @x.6, align 4
  %386 = load i32, i32* @y.7, align 4
  %387 = add i32 %385, -1
  %388 = mul i32 %387, %385
  %389 = and i32 %388, 1
  %390 = icmp eq i32 %389, 0
  %391 = icmp slt i32 %386, 10
  %392 = or i1 %391, %390
  %393 = select i1 %392, i32 754421196, i32 -1545016650
  br label %.backedge

394:                                              ; preds = %9
  %395 = add i32 %.049, 1
  %396 = load i32, i32* @x.6, align 4
  %397 = load i32, i32* @y.7, align 4
  %398 = add i32 %396, -1
  %399 = mul i32 %398, %396
  %400 = and i32 %399, 1
  %401 = icmp eq i32 %400, 0
  %402 = icmp slt i32 %397, 10
  %403 = or i1 %402, %401
  %404 = select i1 %403, i32 1656907120, i32 -1545016650
  br label %.backedge

405:                                              ; preds = %9
  br label %.backedge

406:                                              ; preds = %9
  %407 = load i32, i32* @x.6, align 4
  %408 = load i32, i32* @y.7, align 4
  %409 = add i32 %407, -1
  %410 = mul i32 %409, %407
  %411 = and i32 %410, 1
  %412 = icmp eq i32 %411, 0
  %413 = icmp slt i32 %408, 10
  %414 = or i1 %413, %412
  %415 = select i1 %414, i32 -1975894438, i32 2106325427
  br label %.backedge

416:                                              ; preds = %9
  %417 = load i32, i32* @x.6, align 4
  %418 = load i32, i32* @y.7, align 4
  %419 = add i32 %417, -1
  %420 = mul i32 %419, %417
  %421 = and i32 %420, 1
  %422 = icmp eq i32 %421, 0
  %423 = icmp slt i32 %418, 10
  %424 = or i1 %423, %422
  %425 = select i1 %424, i32 1045635870, i32 2106325427
  br label %.backedge

426:                                              ; preds = %9
  br label %.backedge

427:                                              ; preds = %9
  %428 = load i32, i32* @x.6, align 4
  %429 = load i32, i32* @y.7, align 4
  %430 = add i32 %428, -1
  %431 = mul i32 %430, %428
  %432 = and i32 %431, 1
  %433 = icmp eq i32 %432, 0
  %434 = icmp slt i32 %429, 10
  %435 = or i1 %434, %433
  %436 = select i1 %435, i32 -1715065967, i32 -1103725997
  br label %.backedge

437:                                              ; preds = %9
  %438 = load i32, i32* @c, align 4
  %439 = load i32, i32* @as, align 4
  %440 = icmp sge i32 %438, %439
  store i1 %440, i1* %2, align 1
  %441 = load i32, i32* @x.6, align 4
  %442 = load i32, i32* @y.7, align 4
  %443 = add i32 %441, -1
  %444 = mul i32 %443, %441
  %445 = and i32 %444, 1
  %446 = icmp eq i32 %445, 0
  %447 = icmp slt i32 %442, 10
  %448 = or i1 %447, %446
  %449 = select i1 %448, i32 -1837087631, i32 -1103725997
  br label %.backedge

450:                                              ; preds = %9
  %.0..0..0.45 = load volatile i1, i1* %2, align 1
  %451 = select i1 %.0..0..0.45, i32 560990398, i32 -1175004512
  br label %.backedge

452:                                              ; preds = %9
  %453 = load i32, i32* @c, align 4
  br label %.backedge

454:                                              ; preds = %9
  %455 = load i32, i32* @x.6, align 4
  %456 = load i32, i32* @y.7, align 4
  %457 = add i32 %455, -1
  %458 = mul i32 %457, %455
  %459 = and i32 %458, 1
  %460 = icmp eq i32 %459, 0
  %461 = icmp slt i32 %456, 10
  %462 = or i1 %461, %460
  %463 = select i1 %462, i32 475901439, i32 -924010136
  br label %.backedge

464:                                              ; preds = %9
  %465 = load i32, i32* @d, align 4
  %466 = icmp sle i32 %.047, %465
  store i1 %466, i1* %1, align 1
  %467 = load i32, i32* @x.6, align 4
  %468 = load i32, i32* @y.7, align 4
  %469 = add i32 %467, -1
  %470 = mul i32 %469, %467
  %471 = and i32 %470, 1
  %472 = icmp eq i32 %471, 0
  %473 = icmp slt i32 %468, 10
  %474 = or i1 %473, %472
  %475 = select i1 %474, i32 1365794767, i32 -924010136
  br label %.backedge

476:                                              ; preds = %9
  %.0..0..0.46 = load volatile i1, i1* %1, align 1
  %477 = select i1 %.0..0..0.46, i32 -518708646, i32 2068088388
  br label %.backedge

478:                                              ; preds = %9
  %479 = load i32, i32* @a, align 4
  %480 = load i32, i32* @b, align 4
  %481 = sub i32 1, %.047
  %482 = add i32 %481, %479
  %483 = add i32 %482, %480
  %484 = load i32, i32* @k, align 4
  %485 = add i32 %484, 1
  %486 = srem i32 %483, %485
  %487 = icmp eq i32 %486, 0
  %488 = select i1 %487, i32 65, i32 66
  %putchar61 = tail call i32 @putchar(i32 %488)
  br label %.backedge

489:                                              ; preds = %9
  %490 = add i32 %.047, 1
  br label %.backedge

491:                                              ; preds = %9
  br label %.backedge

492:                                              ; preds = %9
  %putchar = tail call i32 @putchar(i32 10)
  br label %.backedge

493:                                              ; preds = %9
  ret i32 0

494:                                              ; preds = %9
  br label %.backedge

495:                                              ; preds = %9
  br label %.backedge

496:                                              ; preds = %9
  %497 = add i32 %.055, 1
  br label %.backedge

498:                                              ; preds = %9
  %499 = tail call zeroext i1 @_Z3chki(i32 %.055)
  br label %.backedge

500:                                              ; preds = %9
  br label %.backedge

501:                                              ; preds = %9
  br label %.backedge

502:                                              ; preds = %9
  br label %.backedge

503:                                              ; preds = %9
  br label %.backedge

504:                                              ; preds = %9
  %505 = load i32, i32* @c, align 4
  br label %.backedge

506:                                              ; preds = %9
  br label %.backedge

507:                                              ; preds = %9
  %508 = add i32 %.051, 1
  br label %.backedge

509:                                              ; preds = %9
  %510 = add i32 %.049, 1
  br label %.backedge

511:                                              ; preds = %9
  br label %.backedge

512:                                              ; preds = %9
  br label %.backedge

513:                                              ; preds = %9
  br label %.backedge
}

; Function Attrs: nofree nounwind
declare noundef i32 @scanf(i8* nocapture noundef readonly, ...) local_unnamed_addr #6

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3maxIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #7 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = load i32, i32* %0, align 4
  store i32 %6, i32* %5, align 4
  %7 = load i32, i32* %1, align 4
  store i32 %7, i32* %4, align 4
  %8 = load i32, i32* @x.8, align 4
  %9 = load i32, i32* @y.9, align 4
  %10 = add i32 %8, -1
  %11 = mul i32 %10, %8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %9, 10
  %15 = or i1 %14, %13
  %16 = select i1 %15, i32 -1158845208, i32 2115606543
  %17 = select i1 %15, i32 -1164586322, i32 2115606543
  %18 = select i1 %15, i32 1066995273, i32 -1430675542
  %19 = select i1 %15, i32 -1667652009, i32 -1430675542
  br label %20

20:                                               ; preds = %.backedge, %2
  %.01013 = phi i32* [ undef, %2 ], [ %.01013.be, %.backedge ]
  %.010 = phi i32* [ undef, %2 ], [ %.010.be, %.backedge ]
  %.0 = phi i32 [ -1619197837, %2 ], [ %.0.be, %.backedge ]
  switch i32 %.0, label %.backedge [
    i32 -1619197837, label %21
    i32 -295915591, label %24
    i32 144348367, label %25
    i32 -1667652009, label %26
    i32 1066995273, label %27
    i32 1744108693, label %28
    i32 -1164586322, label %29
    i32 -1158845208, label %30
    i32 -1430675542, label %31
    i32 2115606543, label %32
  ]

.backedge:                                        ; preds = %20, %32, %31, %29, %28, %27, %26, %25, %24, %21
  %.01013.be = phi i32* [ %.01013, %20 ], [ %.01013, %32 ], [ %.01013, %31 ], [ %.010, %29 ], [ %.01013, %28 ], [ %.01013, %27 ], [ %.01013, %26 ], [ %.01013, %25 ], [ %.01013, %24 ], [ %.01013, %21 ]
  %.010.be = phi i32* [ %.010, %20 ], [ %.010, %32 ], [ %0, %31 ], [ %.010, %29 ], [ %.010, %28 ], [ %.010, %27 ], [ %0, %26 ], [ %.010, %25 ], [ %1, %24 ], [ %.010, %21 ]
  %.0.be = phi i32 [ %.0, %20 ], [ -1164586322, %32 ], [ -1667652009, %31 ], [ %16, %29 ], [ %17, %28 ], [ 1744108693, %27 ], [ %18, %26 ], [ %19, %25 ], [ 1744108693, %24 ], [ %23, %21 ]
  br label %20

21:                                               ; preds = %20
  %.0..0..0.7 = load volatile i32, i32* %5, align 4
  %.0..0..0.8 = load volatile i32, i32* %4, align 4
  %22 = icmp slt i32 %.0..0..0.7, %.0..0..0.8
  %23 = select i1 %22, i32 -295915591, i32 144348367
  br label %.backedge

24:                                               ; preds = %20
  br label %.backedge

25:                                               ; preds = %20
  br label %.backedge

26:                                               ; preds = %20
  br label %.backedge

27:                                               ; preds = %20
  br label %.backedge

28:                                               ; preds = %20
  br label %.backedge

29:                                               ; preds = %20
  br label %.backedge

30:                                               ; preds = %20
  store i32* %.01013, i32** %3, align 8
  %.0..0..0.9 = load volatile i32*, i32** %3, align 8
  ret i32* %.0..0..0.9

31:                                               ; preds = %20
  br label %.backedge

32:                                               ; preds = %20
  br label %.backedge
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %0, i32* dereferenceable(4) %1) local_unnamed_addr #7 comdat {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = load i32, i32* %1, align 4
  store i32 %5, i32* %4, align 4
  %6 = load i32, i32* %0, align 4
  store i32 %6, i32* %3, align 4
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %2
  %.07.ph = phi i32* [ undef, %2 ], [ %.07.ph.be, %.outer.backedge ]
  %.0.ph = phi i32 [ 309277842, %2 ], [ 1236227833, %.outer.backedge ]
  br label %.outer9

.outer9:                                          ; preds = %.outer, %8
  %.0.ph10 = phi i32 [ %.0.ph, %.outer ], [ %10, %8 ]
  br label %7

7:                                                ; preds = %.outer9, %7
  switch i32 %.0.ph10, label %7 [
    i32 309277842, label %8
    i32 -64994863, label %.outer.backedge
    i32 -1523885446, label %11
    i32 1236227833, label %12
  ]

8:                                                ; preds = %7
  %.0..0..0.5 = load volatile i32, i32* %4, align 4
  %.0..0..0.6 = load volatile i32, i32* %3, align 4
  %9 = icmp slt i32 %.0..0..0.5, %.0..0..0.6
  %10 = select i1 %9, i32 -64994863, i32 -1523885446
  br label %.outer9

11:                                               ; preds = %7
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %7, %11
  %.07.ph.be = phi i32* [ %0, %11 ], [ %1, %7 ]
  br label %.outer

12:                                               ; preds = %7
  ret i32* %.07.ph
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s797068772.cpp() #0 section ".text.startup" {
  %1 = alloca i1, align 1
  %2 = alloca i1, align 1
  %3 = load i32, i32* @x.12, align 4
  %4 = load i32, i32* @y.13, align 4
  %5 = add i32 %3, -1
  %6 = mul i32 %5, %3
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  store i1 %8, i1* %2, align 1
  %9 = icmp slt i32 %4, 10
  store i1 %9, i1* %1, align 1
  br label %.outer

.outer:                                           ; preds = %.outer.backedge, %0
  %.0.ph = phi i32 [ 159595268, %0 ], [ %.0.ph.be, %.outer.backedge ]
  br label %10

10:                                               ; preds = %.outer, %10
  switch i32 %.0.ph, label %10 [
    i32 159595268, label %11
    i32 -895818639, label %14
    i32 -1358678504, label %24
    i32 -2038568576, label %25
  ]

11:                                               ; preds = %10
  %.0..0..0. = load volatile i1, i1* %2, align 1
  %.0..0..0.1 = load volatile i1, i1* %1, align 1
  %12 = or i1 %.0..0..0., %.0..0..0.1
  %13 = select i1 %12, i32 -895818639, i32 -2038568576
  br label %.outer.backedge

14:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  %15 = load i32, i32* @x.12, align 4
  %16 = load i32, i32* @y.13, align 4
  %17 = add i32 %15, -1
  %18 = mul i32 %17, %15
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %16, 10
  %22 = or i1 %21, %20
  %23 = select i1 %22, i32 -1358678504, i32 -2038568576
  br label %.outer.backedge

24:                                               ; preds = %10
  ret void

25:                                               ; preds = %10
  tail call fastcc void @__cxx_global_var_init()
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %25, %14, %11
  %.0.ph.be = phi i32 [ %13, %11 ], [ %23, %14 ], [ -895818639, %25 ]
  br label %.outer
}

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.ceil.f64(double) #8

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nofree noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #9 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
